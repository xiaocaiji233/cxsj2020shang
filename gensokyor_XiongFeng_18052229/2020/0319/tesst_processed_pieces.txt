{"2020-01-0": ["This", "commit", "mostly", "either", "enables", "disables", "unittests", "ROCM", "platform", "details", "listed", "adding", "removing", "no_rocm", "tag", "tests", "tensorflow", "compiler", "mlir", "dir", "enabling", "disabling", "subtests", "within", "tensorflow", "core", "grappler", "optimizers", "constant_folding_test", "ROCm", "platform", "disabling", "subtest", "within", "tensorflow", "core", "distributed_runtime", "collective_param_resolver_distributed_test", "fir", "ROCm", "platform", "adding", "no_rocm", "tag", "tests", "failing", "ROCm", "platform", "minor", "bug", "fix", "ensure", "tensorflow", "compiler", "mlir", "tensorflow", "error_util_test", "passes", "consistent", "basis", "-----------------------", "whchung", "chsigg", "em", "Please", "make", "sure", "bug", "per", "GitHub", "Policy", "https", "://", "github", "com", "tensorflow", "tensorflow", "blob", "master", "ISSUES", "),", "address", "code", "doc", "bugs", "performance", "issues", "feature", "requests", "build", "installation", "issues", "GitHub", "tag", "bug_template", "em", "System", "information", "Have", "written", "custom", "code", "opposed", "using", "stock", "example", "script", "provided", "TensorFlow", "No", "Platform", "Distribution", "e", ".,", "Linux", "Ubuntu", "04", "iPAD", "13", "Mobile", "device", "e", "iPhone", "Pixel", "Samsung", "Galaxy", "issue", "happens", "mobile", "device", "iPAD", "Pro", "2018", "TensorFlow", "installed", "source", "binary", "Binary", "TfLiteGPUExperimental", "TensorFlow", "version", "use", "command", "Python", "version", "Bazel", "version", "compiling", "source", "GCC", "Compiler", "version", "compiling", "source", "NA", "CUDA", "cuDNN", "version", "NA", "GPU", "model", "memory", "iPAD", "GPU", "You", "collect", "information", "using", "environment", "capture", "script", "https", "://", "github", "com", "tensorflow", "tensorflow", "tree", "master", "tools", "tf_env_collect", ")", "You", "also", "obtain", "TensorFlow", "version", "TF", "0", "python", "import", "tensorflow", ";", "print", "GIT_VERSION", "VERSION", ")\"`", "TF", "2", "0", "python", "import", "tensorflow", ";", "print", "tf", "version", "GIT_VERSION", "tf", "version", "VERSION", ")\"`", "Describe", "current", "behavior", "When", "running", "model", "iPAD", "using", "CPU", "able", "get", "output", "But", "GPU", "delegate", "get", "error", "following", "error", "_failed", "assertion", "Cannot", "create", "buffer", "zero", "length", "Describe", "expected", "behavior", "No", "error", "Code", "reproduce", "issue", "**", "Provide", "reproducible", "test", "case", "bare", "minimum", "necessary", "generate", "problem", "delegate", "NewGpuDelegate", "nullptr", "interpreter", "ModifyGraphWithDelegate", "delegate", "**", "Other", "info", "logs", "**", "Include", "logs", "source", "code", "would", "helpful", "diagnose", "problem", "including", "tracebacks", "please", "include", "full", "traceback", "Large", "logs", "files", "attached", "find", "bug", "Code", "import", "tensorflow", "__name__", "__main__", "def", "Gen", "():", "range", "10", "yield", "2", "4", "6", "8", "dataset", "data", "Dataset", "from_generator", "Gen", "output_types", "float32", "float32", "int32", "int32", "int32", "float32", "int32", "int32", "output_shapes", "None", "args", "None", "one_batch", "dataset", "print", "one", "batch", "one_batch", "print", "(\"******", "end", "**********\")", "num_gpu", "devices", "['/", "device", "GPU", ":{}'.", "format", "range", "num_gpu", "strategy", "distribute", "MirroredStrategy", "devices", "input_context", "distribute", "InputContext", "num_input_pipelines", "1", "input_pipeline_id", "num_replicas_in_sync", "1", "strategy", "scope", "():", "def", "dataset_fn", "input_context", "dataset", "data", "Dataset", "from_generator", "Gen", "output_types", "float32", "float32", "int32", "tf", "int32", "tf", "int32", "tf", "float32", "tf", "int32", "tf", "int32", "output_shapes", "None", "args", "None", "return", "dataset", "shard", "input_context", "num_input_pipelines", "input_context", "input_pipeline_id", "train_dist_dataset", "strategy", "experimental_distribute_datasets_from_function", "dataset_fn", "one_batch", "train_dist_dataset", "print", "('****", "one", "batch", "*******',", "one_batch", "The", "code", "run", "distribut", "one_batch", "train_dist_dataset", "end", "batch", "error", "Traceback", "recent", "call", "last", "File", "usr", "local", "python35", "lib", "python3", "pdb", "\",", "line", "1665", "main", "pdb", "_runscript", "mainpyfile", "File", "usr", "local", "python35", "lib", "python3", "pdb", "\",", "line", "1546", "_runscript", "self", "run", "statement", "File", "usr", "local", "python35", "lib", "python3", "bdb", "\",", "line", "431", "run", "exec", "cmd", "globals", "locals", "File", "string", ">\",", "line", "1", "module", "File", "search", "speech", "hubo", "git", "tf", "code", "acoustics", "tf2", "0", "model", "io_test", "\",", "line", "<", "module", "one_batch", "train_dist_dataset", "File", "usr", "local", "python35", "lib", "python3", "site", "packages", "tensorflow_core", "python", "distribute", "input_lib", "\",", "line", "275", "__next__", "return", "self", "get_next", "File", "usr", "local", "python35", "lib", "python3", "site", "packages", "tensorflow_core", "python", "distribute", "input_lib", "\",", "line", "304", "get_next", "global_has_value", "replicas", "_get_next_as_optional", "self", "self", "_strategy", "File", "usr", "local", "python35", "lib", "python3", "site", "packages", "tensorflow_core", "python", "distribute", "input_lib", "\",", "line", "200", "_get_next_as_optional", "iterator", "_iterators", "].", "get_next_as_list", "new_name", "#", "pylint", "disable", "protected", "access", "File", "usr", "local", "python35", "lib", "python3", "site", "packages", "tensorflow_core", "python", "distribute", "input_lib", "\",", "line", "878", "get_next_as_list", "lambda", "_dummy_tensor_fn", "data", "value_structure", "File", "usr", "local", "python35", "lib", "python3", "site", "packages", "tensorflow_core", "python", "util", "deprecation", "\",", "line", "507", "new_func", "return", "func", "args", "kwargs", ")", "File", "usr", "local", "python35", "lib", "python3", "site", "packages", "tensorflow_core", "python", "ops", "control_flow_ops", "\",", "line", "1204", "cond", "result", "false_fn", "File", "usr", "local", "python35", "lib", "python3", "site", "packages", "tensorflow_core", "python", "distribute", "input_lib", "\",", "line", "878", "<", "lambda", "lambda", "_dummy_tensor_fn", "data", "value_structure", "File", "usr", "local", "python35", "lib", "python3", "site", "packages", "tensorflow_core", "python", "distribute", "input_lib", "\",", "line", "801", "_dummy_tensor_fn", "result", "append", "create_dummy_tensor", "feature_shape", "feature_type", "File", "usr", "local", "python35", "lib", "python3", "site", "packages", "tensorflow_core", "python", "distribute", "input_lib", "\",", "line", "784", "create_dummy_tensor", "dim", "feature_shape", "dims", "TypeError", "NoneType", "object", "iterable", "Uncaught", "exception", "Entering", "post", "mortem", "debugging", "Running", "cont", "step", "restart", "program", "I", "want", "know", "Getting", "exception", "following", "https", "://", "github", "com", "tensorflow", "examples", "tree", "master", "lite", "examples", "image_classification", "android", "org", "gradle", "api", "InvalidUserDataException", "Cannot", "expand", "TAR", ":\\", "WorkSpaces", "ML_WorkSpace", "TF_Android", "app", "build", "intermediates", "mobilenet_v1_1", "0_224", "tgz", "org", "gradle", "api", "internal", "file", "archive", "TarFileTree", "cannotExpand", "TarFileTree", "java", "133", "...", "Caused", "org", "gradle", "api", "resources", "ResourceException", "Could", "read", ":\\", "WorkSpaces", "TF_Android", "app", "build", "intermediates", "mobilenet_v1_1", "0_224", "tgz", "org", "gradle", "internal", "resource", "ResourceExceptions", "readFailed", "ResourceExceptions", "java", "org", "gradle", "api", "internal", "file", "archive", "compression", "GzipArchiver", "read", "GzipArchiver", "java", ")", "org", "gradle", "api", "internal", "file", "MaybeCompressedFileResource", "read", "MaybeCompressedFileResource", "java", ")", "org", "gradle", "api", "internal", "file", "archive", "TarFileTree", "visit", "TarFileTree", "java", ")", "...", "107", "Caused", "java", "util", "zip", "ZipException", "Not", "GZIP", "format", "java", "util", "zip", "GZIPInputStream", "readHeader", "GZIPInputStream", "java", "165", ")", "org", "gradle", "api", "internal", "file", "archive", "compression", "GzipArchiver", "read", "GzipArchiver", "java", ")", "...", "109", "Don", "know", "could", "problem", "System", "information", "The", "bugs", "related", "system", "informations", "They", "caused", "bad", "coding", "style", "https", "://", "github", "com", "tensorflow", "tensorflow", "blob", "master", "tensorflow", "core", "kernels", "non_max_suppression_op", "https", "://", "github", "com", "tensorflow", "tensorflow", "blob", "master", "tensorflow", "core", "kernels", "non_max_suppression_op", "cc", "Just", "sure", "bugs", "could", "easily", "reproduced", "google", "colab", "Describe", "current", "behavior", "mention", "two", "major", "bugs", "The", "first", "one", "garbage", "output", "boxes", "coordinates", "logical", "fact", "given", "box", "coordinates", "y1", "y2", "x1", "x2", "coordinates", "line", "even", "worst", "coordinates", "point", "x1", "x2", "y1", "y2", "algorithme", "output", "line", "reaching", "Code", "reproduce", "issue", "Here", "code", "reproduce", "behaviour", "google", "colab", "```", "import", "numpy", "%", "tensorflow_version", "x", "import", "tensorflow", "__version__", "boxes", "array", "([[", "[", "3", "3", "4", "[", "5", "5", "[", "]],", "dtype", "np", "float32", "scores", "np", "array", "7", "6", "dtype", "np", "float32", "image", "non_max_suppression", "boxes", "scores", "))", "```", "output", "```", "rc1", "Tensor", "shape", "8", ",),", "dtype", "int32", "numpy", "array", "dtype", "int32", "```", "Now", "I", "explain", "brievely", "algorithm", "coded", "tensorflow", "Given", "list", "candidate", "boxes", "containing", "beginning", "user", "boxes", "list", "chosen", "boxes", "empty", "box", "chosen", "immediately", "delete", "candidate", "box", "fact", "box", "processed", "candidate", "box", "next", "iteration", "But", "already", "chosen", "boxes", "wont", "chosen", "The", "reason", "IOU", "box", "1", "always", "threshold", "Unfortunately", "IOU", "line", "point", "box", "This", "applied", "even", "IOU", "calculated", "line", "iteself", "This", "result", "adding", "line", "chosen", "boxes", "This", "behaviour", "mentioned", "issue", "clearly", "explained", "https", "://", "github", "com", "tensorflow", "tensorflow", "issues", "29628", "Describe", "expected", "behavior", "The", "expected", "behaviour", "must", "decided", "tensorflow", "programer", "chose", "putting", "result", "tf", "Tensor", "shape", "8", ",),", "dtype", "int32", "numpy", "array", "1", "2", "3", "dtype", "int32", "deleting", "line", "box", "tf", "Tensor", "shape", "8", ",),", "dtype", "int32", "numpy", "array", "2", "3", "dtype", "int32", "The", "second", "bug", "really", "inexplainable", "Why", "gpu", "specialisation", "non_max_suppression_v2", "Did", "developer", "forgot", "This", "mentioned", "several", "issues", "name", "non", "max", "suppression", "work", "cpu", "This", "completely", "understandable", "default", "version", "non_max_suppression", "dosent", "gpu", "specialisation", "Code", "reproduce", "issue", "colab", "copy", "code", "```", "import", "numpy", "np", "%", "tensorflow_version", "2", "x", "import", "tensorflow", "tf", "tf", "debugging", "set_log_device_placement", "True", "boxes", "np", "array", "([[", "1", "1", "2", "2", "],", "[", "3", "3", "3", "4", "],", "[", "5", "5", "6", "6", "],", "[", "7", "7", "8", "8", "]],", "dtype", "np", "float32", "scores", "np", "array", "0", "0", "8", "0", "7", "0", "6", "],", "dtype", "np", "float32", "tf", "device", "('/", "GPU", "0", "'):", "print", "tf", "image", "non_max_suppression", "(", "boxes", "scores", "8", "))", "```", "output", "Executing", "NonMaxSuppressionV3", "device", "job", "localhost", "replica", "0", "task", "0", "device", "CPU", "0", ">", "tf", "Tensor", "0", "1", "1", "1", "1", "1", "1", "1", "],", "shape", "8", ",),", "dtype", "=", "int32", ")", "Describe", "expected", "behavior", "**", ">", "Executing", "NonMaxSuppressionV3", "device", "job", "localhost", "replica", "0", "task", "0", "device", "GPU", "0", "Correcting", "issue", "quite", "simple", "straightforward", "Gpu", "specialisation", "must", "made", "non_max_suppression_v3", "least", "em", "Please", "make", "sure", "build", "installation", "issue", "per", "GitHub", "Policy", "https", "://", "github", "com", "tensorflow", "tensorflow", "blob", "master", "ISSUES", "),", "address", "code", "doc", "bugs", "performance", "issues", "feature", "requests", "build", "installation", "issues", "GitHub", "tag", "build_template", "em", "System", "information", "OS", "Platform", "Distribution", "e", ".,", "Linux", "Ubuntu", "04", "Raspberry", "4", "Mobile", "device", "e", "iPhone", "Pixel", "Samsung", "Galaxy", "issue", "happens", "mobile", "device", "TensorFlow", "installed", "source", "binary", "binary", "pip", "TensorFlow", "version", "14", "Python", "version", "7", "Installed", "using", "pip", "Bazel", "version", "compiling", "source", "GCC", "Compiler", "version", "compiling", "source", "CUDA", "cuDNN", "version", "GPU", "model", "memory", "Describe", "problem", "****", "raspberrypi", ":~/", "examples", "lite", "examples", "object_detection", "raspberry_pi", "python3", "detect_picamera", "model", "tmp", "detect", "tflite", "--", "labels", "tmp", "coco_labels", "txt", "2019", "28", "43", "464130", "tensorflow", "core", "platform", "hadoop", "hadoop_file_system", "132", "HadoopFileSystem", "load", "error", "libhdfs", "cannot", "open", "shared", "object", "file", "No", "file", "directory", "Traceback", "recent", "call", "last", "File", "detect_picamera", "\",", "line", "<", "module", "lite", "interpreter", "import", "Interpreter", "ModuleNotFoundError", "No", "module", "named", "tf", "***", "Provide", "exact", "sequence", "commands", "steps", "executed", "running", "problem", "***", "Tensorflow", "model", "running", "issue", "replaced", "code", "original", "source", "code", "from_", "tflite_runtime", "interpreter", "import", "Interpreter", "***", "WIth", "***", "tf", "lite", "import", "Interpreter", "***", "**", "Any", "info", "logs", "**", "Include", "logs", "source", "code", "would", "helpful", "diagnose", "problem", "including", "tracebacks", "please", "include", "full", "traceback", "Large", "logs", "files", "attached", "System", "information", "Have", "written", "custom", "code", "opposed", "using", "stock", "example", "script", "provided", "TensorFlow", "example", "https", "://", "www", "tensorflow", "org", "tutorials", "text", "image_captioning", "Platform", "Distribution", "Linux", "Ubuntu", "TensorFlow", "installed", "source", "binary", "bin", "TensorFlow", "version", "use", "command", "v2", "rc2", "g64c3d38", "Python", "version", "6", "Describe", "current", "behavior", "saved_model", "save", "encoder", "\"./", "models", "encoder", "model", "get", "serialized", "errors", "Describe", "expected", "behavior", "encoder", "loaded", "without", "errors", "Code", "reproduce", "issue", "train", "model", "https", "://", "www", "tensorflow", "org", "tutorials", "text", "image_captioning", "example", "```", "saved_model", "save", "encoder", "\"./", "models", "encoder", "encoder", "tf", "saved_model", "load", "(\"./", "models", "encoder", "encoder", "img_tensor_val", "```", "raises", "error", ">", "_UserObject", "object", "callable", "encoder", "img_tensor_val", "`", "ValueError", "Could", "find", "matching", "function", "call", "loaded", "SavedModel", "Got", "Positional", "arguments", "1", "total", "Tensor", "inputs", "0", "\",", "shape", "1", "120", "),", "dtype", "float32", "Keyword", "arguments", "Expected", "arguments", "match", "one", "following", "0", "option", "(", "):", "Other", "info", "logs", "**", "W1227", "41", "831883", "139767989909312", "save_impl", "77", "Skipping", "full", "serialization", "Keras", "model", "__main__", "CNN_Encoder", "object", "0x7f1daf5354e0", "inputs", "defined", "System", "information", "Have", "written", "custom", "code", "```", "java", "private", "List", "Delegate", "mDelegates", "new", "ArrayList", "<>();", "mDelegates", "add", "new", "GpuDelegate", "());", "```", "```", "java", "Interpreter", "Options", "options", "null", "interpreterOptions", "null", "options", "new", "Interpreter", "Options", "().", "setNumThreads", "interpreterOptions", "getNumThreads", "());", "(!", "mDelegates", "isEmpty", "())", "Iterator", "Delegate", "mDelegates", "iterator", "();", "hasNext", "())", "{", "Delegate", "delegate", "next", "();", "mLogger", "debug", "addDelegate", "delegate", "options", "addDelegate", "delegate", "}", "mInterpreter", "=", "new", "Interpreter", "bb", "options", "```", "Mobile", "device", "8", "MIUI", "TensorFlow", "installed", "source", "binary", "implementation", "org", "tensorflow", "tensorflow", "lite", "0", "implementation", "org", "tensorflow", "tensorflow", "lite", "gpu", "0", "0", "Describe", "current", "behavior", "crashed", "load", "attached", "file", "GpuDelegate", "Describe", "expected", "behavior", "load", "attached", "file", "correct", "Code", "reproduce", "issue", "N", "**", "Other", "info", "logs", "**", "```", "text", "java", "lang", "IllegalStateException", "Internal", "error", "Unexpected", "failure", "preparing", "tensor", "allocations", "TfLiteGpuDelegate", "Init", "FULLY_CONNECTED", "Amount", "input", "data", "match", "weights", "width", "TfLiteGpuDelegate", "Prepare", "delegate", "initialized", "Node", "number", "TfLiteGpuDelegateV2", "failed", "prepare", "Restored", "previous", "execution", "plan", "delegate", "application", "failure", "org", "tensorflow", "lite", "NativeInterpreterWrapper", "allocateTensors", "Native", "Method", "org", "tensorflow", "lite", "NativeInterpreterWrapper", "run", "NativeInterpreterWrapper", "java", "162", "org", "tensorflow", "lite", "Interpreter", "runForMultipleInputsOutputs", "Interpreter", "java", "275", "com", "didi", "aoe", "runtime", "tensorflow", "lite", "TensorFlowMultipleInputsOutputsInterpreter", "run", "(", "TensorFlowMultipleInputsOutputsInterpreter", "java", "159", "com", "didi", "aoe", "library", "core", "NativeProcessorWrapper", "run", "(", "NativeProcessorWrapper", "java", "```", "mnist_cnn_keras", "tflite", "zip", "https", "://", "github", "com", "tensorflow", "tensorflow", "files", "4004963", "mnist_cnn_keras", "tflite", "zip", ")", "em", "Please", "make", "sure", "build", "installation", "issue", "per", "GitHub", "Policy", "https", "://", "github", "com", "tensorflow", "tensorflow", "blob", "master", "ISSUES", "address", "code", "doc", "bugs", "performance", "issues", "feature", "requests", "build", "installation", "issues", "GitHub", "tag", "build_template", "em", "System", "information", "OS", "Platform", "Distribution", "e", ".,", "Linux", "Ubuntu", "04", "Ubuntu", "0", "Mobile", "device", "e", "iPhone", "Pixel", "Samsung", "Galaxy", "issue", "happens", "mobile", "device", "TensorFlow", "installed", "source", "binary", "Source", "TensorFlow", "version", "0", "Python", "version", "7", "Installed", "using", "virtualenv", "pip", "conda", "pip", "Bazel", "version", "compiling", "source", "0", "GCC", "Compiler", "version", "compiling", "source", "0", "CUDA", "cuDNN", "version", "GPU", "model", "memory", "Describe", "problem", "Provide", "exact", "sequence", "commands", "steps", "executed", "running", "problem", "**", "After", "minutes", "watching", "code", "build", "build", "stopped", "abruptly", "**", "Any", "info", "logs", "**", "Here", "link", "enviorment", "run", "exact", "dev", "env", "cloud", "https", "://", "gitpod", "/#", "https", "://", "github", "com", "JesterOrNot", "tensorflow", "tree", "JesterOrNot", "gitpod", "setup", "```", "tensorflow", "python", "lib", "core", "pybind11_proto", "40", "warning", "pybind11", "str", "pybind11", "detail", "object_api", "Derived", ">::", "str", "const", "wi", "Derived", "pybind11", "handle", "deprecated", "Use", "str", "obj", "instead", "Wdeprecated", "declarations", "std", "string", "py_object", "get_type", "().", "str", "()),", "valid", "proto", "\"));", "file", "included", "external", "pybind11", "include", "pybind11", "cast", "13", "external", "pybind11", "include", "pybind11", "attr", "13", "external", "pybind11", "include", "pybind11", "pybind11", "tensorflow", "python", "client", "device_lib_wrapper", "18", "external", "pybind11", "include", "pybind11", "pytypes", "147", "note", "declared", "pybind11", "str", "str", "const", "^~~", "INFO", "From", "Compiling", "tensorflow", "stream_executor", "stream_executor_pimpl", "host", "tensorflow", "stream_executor", "stream_executor_pimpl", "member", "function", "stream_executor", "DeviceMemoryBase", "stream_executor", "StreamE", "xecutor", "Allocate", "tensorflow", "uint64", "tensorflow", "int64", ")':", "tensorflow", "stream_executor", "stream_executor_pimpl", "462", "warning", "comparison", "integer", "expressions", "different", "signedness", "ng", "long", "unsigned", "int", "tensorflow", "int64", "aka", "long", "long", "int", "Wsign", "compare", "mem_alloc_bytes_", "size", "memory_limit_bytes_", "~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~", "In", "file", "included", "tensorflow", "core", "platform", "default", "logging", "29", "tensorflow", "core", "platform", "logging", "tensorflow", "core", "platform", "status", "24", "tensorflow", "core", "platform", "errors", "22", "tensorflow", "core", "lib", "core", "errors", "19", "tensorflow", "stream_executor", "device_memory_allocator", "tensorflow", "stream_executor", "stream_executor_pimpl", "28", "tensorflow", "stream_executor", "stream_executor_pimpl", "20", "tensorflow", "core", "platform", "default", "logging", "In", "instantiation", "std", "__cxx11", "string", "tensorflow", "internal", "Check_EQImpl", "const", "&,", "const", "&,", "const", "char", "[", "int", "T2", "long", "long", "unsigned", "int", "std", "__cxx11", "string", "std", "__cxx11", "basic_string", "char", ">]':", "tensorflow", "stream_executor", "stream_executor_pimpl", "700", "required", "tensorflow", "core", "platform", "default", "logging", "386", "warning", "comparison", "integer", "expressions", "different", "signedness", "const", "int", "const", "long", "long", "unsigned", "int", "[-", "Wsign", "compare", "==)", "Compilation", "error", "CHECK_EQ", "NULL", ")?", "tensorflow", "core", "platform", "macros", "88", "49", "note", "definition", "macro", "TF_PREDICT_TRUE", "define", "TF_PREDICT_TRUE", "x", "__builtin_expect", "(!!", "x", "),", "^", "tensorflow", "core", "platform", "default", "logging", "385", "1", "note", "expansion", "macro", "TF_DEFINE_CHECK_OP_IMPL", "TF_DEFINE_CHECK_OP_IMPL", "Check_EQ", "^~~~~~~~~~~~~~~~~~~~~~~", "INFO", "From", "Compiling", "tensorflow", "compiler", "mlir", "tensorflow", "utils", "tpu_rewrite_device_util", "[", "host", "tensorflow", "compiler", "mlir", "tensorflow", "utils", "tpu_rewrite_device_util", "In", "function", "tensorflow", "Status", "tensorflow", "::{", "anonymous", "}::", "GetT", "PUDevices", "tensorflow", "Devices", "llvm", "ArrayRef", "tensorflow", "DeviceNameUtils", "ParsedName", "llvm", "SmallVectorImpl", "llvm", "SmallVector", "ten", "sorflow", "DeviceNameUtils", "ParsedName", "8", ">", ">*)':", "tensorflow", "compiler", "mlir", "tensorflow", "utils", "tpu_rewrite_device_util", "129", "27", "warning", "comparison", "integer", "expressions", "differen", "signedness", "int", "size_t", "aka", "long", "unsigned", "int", "[-", "Wsign", "compare", "num_tpus_per_host", "host_tpu_devices", "size", "())", "~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~", "INFO", "From", "Compiling", "tensorflow", "core", "kernels", "quantization_utils", "[", "host", "In", "file", "included", "external", "gemmlowp", "public", "/../", "internal", "dispatch_gemm_shape", "23", "external", "gemmlowp", "public", "gemmlowp", "19", "tensorflow", "core", "kernels", "quantization_utils", "37", "tensorflow", "core", "kernels", "quantization_utils", "16", "external", "gemmlowp", "public", "/../", "internal", "multi_thread_gemm", "In", "member", "function", "void", "gemmlowp", "WorkersPool", "LegacyExecuteAndDestroyTa", "sks", "const", "std", "vector", "gemmlowp", "Task", "*>&)':", "external", "gemmlowp", "public", "/../", "internal", "multi_thread_gemm", "405", "23", "warning", "comparison", "integer", "expressions", "different", "signedness", "int", "std", "size_t", "aka", "long", "unsigned", "int", "[-", "Wsign", "compare", "(", "int", "0", "tasks_count", "1", "++)", "~~^~~~~~~~~~~~~~~~~", "In", "file", "included", "tensorflow", "core", "kernels", "quantization_utils", "16", "tensorflow", "core", "kernels", "quantization_utils", "In", "function", "void", "tensorflow", "RequantizeManyInNewRangeReference", "(", "const", "qint32", "tensorflow", "int64", "float", "float", "float", "float", "tensorflow", "quint8", "*)':", "tensorflow", "core", "kernels", "quantization_utils", "271", "warning", "comparison", "integer", "expressions", "different", "signedness", "size_t", "aka", "long", "unsigned", "int", "tensorflow", "::", "int64", "{", "aka", "long", "long", "int", "[-", "Wsign", "compare", "(", "size_t", "index", "=", "0", "index", "<", "count", "++", "index", "{", "~~~~~~^~~~~~~", "[", "6", "434", "032", "16", "actions", "running", "Compiling", "tensorflow", "python", "tfe_wrapper", "[", "host", "77s", "local", "Compiling", "tensorflow", "core", "kernels", "rnn", "lstm_ops", "[", "host", "44s", "local", "Compiling", "tensorflow", "core", "kernels", "rnn", "gru_ops", "[", "host", "43s", "local", "Compiling", "tensorflow", "stream_executor", "stream", "[", "host", "41s", "local", "Compiling", "tensorflow", "core", "kernels", "split_lib_cpu", "[", "host", "28s", "local", "Compiling", ".../", "core", "kernels", "serialize_sparse_op", "[", "host", "24s", "local", "tensorflow", "core", "kernels", "deserialize_sparse_string_op", ";", "22s", "local", "Compiling", ".../", "core", "kernels", "sparse_reorder_op", "[", "host", "22s", "local", "...", "Server", "terminated", "abruptly", "(", "error", "code", "error", "message", "Socket", "closed", "log", "file", "home", "gitpod", "cache", "bazel", "_bazel_gitpod", "2c92b5569ddded7b3a6bd5e139451b60", "server", "jvm", "```", "System", "information", "Have", "written", "custom", "code", "opposed", "using", "stock", "example", "script", "provided", "TensorFlow", "yes", "Platform", "Distribution", "e", ".,", "Linux", "Ubuntu", "04", "Ubuntu", "04", "LTS", "TensorFlow", "installed", "source", "binary", "binary", "TensorFlow", "version", "use", "command", "v2", "rc1", "g9837ece", "0", "rc2", "python3", "import", "tensorflow", ";", "print", "version", "GIT_VERSION", "tf", "version", "VERSION", ")\")", "Python", "version", "Python", "CUDA", "cuDNN", "version", "Driver", "Version", "440", "01", "CUDA", "Version", "cuDNN", "2", "GPU", "model", "memory", "Tesla", "V100", "SXM2", "16GB", "Describe", "current", "behavior", "using", "Bijectors", "flexible", "prior", "VAE", "tf2", "autograph", "distributed", "mirrored", "mode", "https", "://", "github", "com", "olegmyrk", "SPADE", "Tensorflow", "blob", "85b5fd7943296561dc3d54557fec5346c2adea58", "SPADE", "#", "L1152", "I", "getting", "```", "google", "protobuf", "message", "DecodeError", "Error", "parsing", "message", "```", "running", "multiple", "GPUs", "running", "single", "GPU", "```", "bijectors", "[]", "range", "16", "bijectors", "append", "tfb", "MaskedAutoregressiveFlow", "shift_and_log_scale_fn", "tfb", "masked_autoregressive_default_template", "code", "hidden_layers", "1024", "1024", "name", "scope", "maf_", "str", "))))", "bijectors", "append", "tfb", "BatchNormalization", "batchnorm_layer", "tf", "layers", "BatchNormalization", "name", "scope", "batch_norm_", "str", ")),", "name", "scope", "batch_norm_bijector", "str", ")))", "permutation", "tf", "get_variable", "permutation_", "str", "),", "initializer", "np", "random", "permutation", "out_channel", "astype", "int32", "\"),", "trainable", "False", "bijectors", "append", "tfb", "Permute", "permutation", "flow_bijector", "tfb", "Chain", "list", "reversed", "bijectors", "[:-", "1", "])))", "```", "https", "://", "github", "com", "olegmyrk", "SPADE", "Tensorflow", "blob", "85b5fd7943296561dc3d54557fec5346c2adea58", "SPADE", "#", "L190", "Describe", "expected", "behavior", "Should", "crash", "Code", "reproduce", "issue", "TF2", "code", "https", "://", "github", "com", "olegmyrk", "SPADE", "Tensorflow", "blob", "85b5fd7943296561dc3d54557fec5346c2adea58", "SPADE", "#", "L190", "Other", "info", "logs", "```", "Traceback", "recent", "call", "last", "File", "main", "\",", "line", "134", "module", "main", "File", "main", "\",", "line", "121", "main", "gan", "train", "File", "app", "home", "ubuntu", "SPADE", "Tensorflow", "tf2", "SPADE", "\",", "line", "1379", "train", "train_loop", "File", "app", "home", "ubuntu", "SPADE", "Tensorflow", "tf2", "SPADE", "\",", "line", "1336", "train_loop", "counter", "result_inputs", "result_losses_det", "result_outputs_det", "result_outputs_resample_det", "result_outputs_random_det", "result_outputs_random_gen_det", "train_det_grad_both", "global_step", "self", "train_main", "inputs", "File", "home", "ubuntu", "local", "lib", "python3", "site", "packages", "tensorflow_core", "python", "eager", "def_function", "\",", "line", "568", "__call__", "result", "self", "_call", "args", "kwds", "File", "home", "ubuntu", "local", "lib", "python3", "site", "packages", "tensorflow_core", "python", "eager", "def_function", "\",", "line", "615", "_call", "self", "_initialize", "args", "kwds", "add_initializers_to", "initializers", "File", "home", "ubuntu", "local", "lib", "python3", "site", "packages", "tensorflow_core", "python", "eager", "def_function", "\",", "line", "497", "_initialize", "args", "kwds", "File", "home", "ubuntu", "local", "lib", "python3", "site", "packages", "tensorflow_core", "python", "eager", "function", "\",", "line", "2389", "_get_concrete_function_internal_garbage_collected", "graph_function", "_", "self", "_maybe_define_function", "args", "kwargs", "File", "home", "ubuntu", "local", "lib", "python3", "site", "packages", "tensorflow_core", "python", "eager", "function", "\",", "line", "2703", "_maybe_define_function", "graph_function", "self", "_create_graph_function", "args", "kwargs", "File", "home", "ubuntu", "local", "lib", "python3", "site", "packages", "tensorflow_core", "python", "eager", "function", "\",", "line", "2599", "_create_graph_function", "shared_func_graph", "False", "File", "home", "ubuntu", "local", "lib", "python3", "site", "packages", "tensorflow_core", "python", "eager", "function", "\",", "line", "1511", "__init__", "func_graph", "self", "_attrs", "self", "_garbage_collector", "File", "home", "ubuntu", "local", "lib", "python3", "6", "site", "packages", "tensorflow_core", "python", "eager", "function", "\",", "line", "601", "__init__", "self", "_func_graph", "inputs", "self", "_func_graph", "outputs", "attrs", "File", "home", "ubuntu", "local", "lib", "python3", "6", "site", "packages", "tensorflow_core", "python", "eager", "function", "\",", "line", "466", "__init__", "function_def", "ParseFromString", "compat", "as_bytes", "proto_data", "google", "protobuf", "message", "DecodeError", "Error", "parsing", "message", "```", "train", "CelebAMask", "tf21", "4xgpu", "maf", "log", "https", "://", "github", "com", "tensorflow", "tensorflow", "files", "4001259", "train", "CelebAMask", "tf21", "4xgpu", "maf", "log", "System", "information", "OS", "Platform", "Distribution", "Windows10", "x64", "TensorFlow", "installed", "binary", "TensorFlow", "version", "15", "Python", "version", "7", "Installed", "using", "conda", "Bazel", "version", "compiling", "source", "2", "CUDA", "cuDNN", "version", "trying", "inspect", "model", "following", "guide", "](", "https", "://", "github", "com", "tensorflow", "tensorflow", "blob", "master", "tensorflow", "tools", "graph_transforms", "README", "#", "inspecting", "graphs", "When", "running", "command", "```", "bash", "bazel", "build", "tensorflow", "tools", "graph_transforms", "summarize_graph", "```", "failed", "logs", "```", "INFO", "Writing", "tracer", "profile", "users", "_bazel_yy", "zxtlmlwl", "command", "profile", "INFO", "Options", "provided", "client", "Inherited", "common", "options", "isatty", "1", "terminal_columns", "120", "INFO", "Options", "provided", "client", "build", "options", "python_path", "Users", "Anaconda3", "python", "exe", "INFO", "Reading", "options", "build", ":\\", "tensorflow", "tensorflow", "bazelrc", "build", "options", "apple_platform_type", "macos", "define", "framework_shared_object", "true", "define", "open_source_build", "true", "java_toolchain", "=//", "third_party", "toolchains", "java", "tf_java_toolchain", "host_java_toolchain", "=//", "third_party", "toolchains", "java", "tf_java_toolchain", "define", "use_fast_cpp_protos", "true", "define", "allow_oversize_protos", "true", "spawn_strategy", "standalone", "opt", "announce_rc", "define", "grpc_no_ares", "true", "noincompatible_remove_legacy_whole_archive", "enable_platform_specific_config", "config", "INFO", "Found", "applicable", "config", "definition", "build", "v2", "file", ":\\", "tensorflow", "tensorflow", "bazelrc", "define", "tf_api_version", "2", "action_env", "TF2_BEHAVIOR", "1", "INFO", "Found", "applicable", "config", "definition", "build", "windows", "file", ":\\", "tensorflow", "tensorflow", "bazelrc", "copt", "w", "copt", "D_USE_MATH_DEFINES", "cxxopt", "std", "++", "host_cxxopt", "std", "++", "config", "monolithic", "copt", "DWIN32_LEAN_AND_MEAN", "host_copt", "DWIN32_LEAN_AND_MEAN", "copt", "DNOGDI", "host_copt", "DNOGDI", "linkopt", "DEBUG", "host_linkopt", "DEBUG", "linkopt", "OPT", "REF", "host_linkopt", "OPT", "REF", "linkopt", "OPT", "ICF", "host_linkopt", "OPT", "ICF", "experimental_strict_action_env", "true", "incompatible_windows_native_test_wrapper", "verbose_failures", "--", "distinct_host_configuration", "false", "INFO", "Found", "applicable", "config", "definition", "build", "monolithic", "file", ":\\", "tensorflow", "tensorflow", "bazelrc", "--", "define", "framework_shared_object", "false", "INFO", "Call", "stack", "definition", "repository", "com_google_protobuf", "tf_http_archive", "rule", "definition", "tensorflow", "tensorflow", "third_party", "repo", "bzl", "121", "tensorflow", "tensorflow", "tensorflow", "workspace", "bzl", "457", "tensorflow", "tensorflow", "WORKSPACE", "1", "INFO", "Repository", "com_google_protobuf", "used", "following", "cache", "hits", "instead", "downloading", "corresponding", "file", "Hash", "b9e92f9af8819bbbc514e2902aec860415b70209f31dfc8c4fa72515a5df9d59", "https", "://", "storage", "googleapis", "com", "mirror", "tensorflow", "org", "github", "com", "protocolbuffers", "protobuf", "archive", "310ba5ee72661c081129eb878c1bbcec936b20f0", "tar", "If", "definition", "com_google_protobuf", "updated", "verify", "hashes", "also", "updated", "ERROR", "error", "occurred", "fetch", "repository", "com_google_protobuf", "Traceback", "recent", "call", "last", "File", "tensorflow", "tensorflow", "third_party", "repo", "bzl", "line", "101", "_apply_patch", "ctx", "1", "arguments", "File", ":/", "tensorflow", "tensorflow", "third_party", "repo", "bzl", "line", "_apply_patch", "_execute_and_check_ret_code", "ctx", "1", "arguments", "File", ":/", "tensorflow", "tensorflow", "third_party", "repo", "bzl", "line", "_execute_and_check_ret_code", "fail", "1", "arguments", "Non", "zero", "return", "code", "2", "executing", ":\\", "Windows", "system32", "bash", "exe", "c", "patch", "p1", ":/", "users", "_bazel_yy", "zxtlmlwl", "external", "com_google_protobuf", ":/", "tensorflow", "tensorflow", "third_party", "protobuf", "protobuf", "patch", "\"':", "Stdout", "Stderr", "patch", "****", "Can", "change", "directory", ":/", "users", "_bazel_yy", "zxtlmlwl", "external", "com_google_protobuf", "file", "directory", "ERROR", "Analysis", "target", "'//", "tensorflow", "tools", "graph_transforms", "summarize_graph", "failed", "build", "aborted", "package", "com_google_protobuf", "//':", "Traceback", "recent", "call", "last", "):", "File", ":/", "tensorflow", "tensorflow", "third_party", "repo", "bzl", "line", "101", "_apply_patch", "ctx", "1", "arguments", "File", "E", ":/", "tensorflow", "tensorflow", "third_party", "repo", "bzl", "line", "_apply_patch", "_execute_and_check_ret_code", "ctx", "1", "arguments", "File", "E", ":/", "tensorflow", "tensorflow", "third_party", "repo", "bzl", "line", "_execute_and_check_ret_code", "fail", "1", "arguments", "Non", "zero", "return", "code", "2", "executing", ":\\", "Windows", "system32", "bash", "exe", "c", "patch", "p1", "C", ":/", "users", "_bazel_yy", "zxtlmlwl", "external", "com_google_protobuf", "E", ":/", "tensorflow", "tensorflow", "third_party", "protobuf", "protobuf", "patch", "\"':", "Stdout", "Stderr", "patch", "****", "Can", "change", "directory", "C", ":/", "users", "_bazel_yy", "zxtlmlwl", "external", "com_google_protobuf", "file", "directory", "INFO", "Elapsed", "time", "975s", "INFO", "processes", "FAILED", "Build", "NOT", "complete", "successfully", "packages", "loaded", "targets", "configured", "currently", "loading", "tensorflow", "```", "tried", "diferent", "versions", "bazel", "20", "1", "1", "0", "2", "0", "0", "```", "bazel", "clean", "```,", "error", "still", "What", "makes", "confused", "Can", "change", "directory", "C", ":/", "users", "_bazel_yy", "zxtlmlwl", "external", "com_google_protobuf", "file", "directory", "fact", "find", "dir", "path", "checked", "similar", "issue", "none", "fix", "error", "see", "many", "users", "last", "weeks", "struggling", "getting", "build", "work", "Windows", "I", "also", "see", "recent", "commits", "improve", "build", "response", "feedback", "stated", "https", "://", "www", "tensorflow", "org", "install", "source_windows", "Windows", "tensorflow", "builds", "following", "configurations", "successful", "[", "image", "https", "://", "user", "images", "githubusercontent", "com", "59223977", "71443261", "34f74d00", "270a", "11ea", "8cc5", "ee2902f336b8", "png", "[", "image", "https", "://", "user", "images", "githubusercontent", "com", "59223977", "71443269", "44769600", "270a", "11ea", "8857", "750f7f3598ee", "png", "Please", "update", "[", "links", "https", "://", "www", "tensorflow", "org", "install", "lang_c", "successful", "windows", "tensorflow", "builds", "provided", "For", "example", "need", "https", "://", "storage", "googleapis", "com", "tensorflow", "libtensorflow", "libtensorflow", "cpu", "windows", "x86_64", "0", "0", "zip", "https", "://", "storage", "googleapis", "com", "tensorflow", "libtensorflow", "libtensorflow", "gpu", "windows", "x86_64", "0", "0", "zip", "_Although", "tentative", "builds", "old_", "provide", "starting", "point", "start", "TESTING", "Tensorflow", "0", "features", "bindings", "System", "information", "TensorFlow", "version", "using", "1", ">=", "0", "Are", "willing", "contribute", "Yes", "Yes", "Describe", "feature", "current", "behavior", "state", "Add", "SO_REUSEPORT", "option", "starting", "tensorflow", "training", "server", "enable", "scan", "ports", "build", "TF_CONFIG", "env", "variable", "necessary", "use", "distributed", "tensorflow", "resource", "managers", "reserve", "ports", "Yarn", "already", "discussed", "ticket", "https", "://", "github", "com", "tensorflow", "tensorflow", "issues", "21492", "It", "unclear", "option", "disabled", "https", "://", "github", "com", "tensorflow", "tensorflow", "commit", "8cf38e81e638db173238a8f95d6ea613c24d3d9f", "Will", "change", "current", "api", "How", "No", "Who", "benefit", "feature", "Projects", "like", "https", "://", "github", "com", "criteo", "yarn", "tensorflow", "yarn", "use", "implement", "recommended", "way", "create", "cluster", "configuration", "https", "://", "www", "tensorflow", "org", "guide", "distributed_training", "):", "The", "procedure", "Launch", "executors", "process", "scan", "ports", "reserve", "free", "one", "master", "gathers", "ports", "numbers", "Master", "creates", "configuration", "broadcasts", "TF_CONFIG", "variable", "executors", "Launch", "tensorflow", "servers", "Any", "Other", "info", "System", "information", "Have", "written", "custom", "code", "opposed", "using", "stock", "example", "script", "provided", "TensorFlow", "Yes", "Platform", "Distribution", "Android7", "Snapdragon", "625", "Mobile", "device", "HUAWEI", "Nova", "CAZ", "10", "issue", "happens", "mobile", "device", "TensorFlow", "installed", "source", "TensorFlow", "version", "org", "tensorflow", "tensorflow", "lite", "gpu", "nightly", "Describe", "current", "behavior", "use", "yolov3", "model", "android", "platform", "object", "detection", "When", "object", "detection", "CPU", "results", "right", "I", "add", "GPU", "module", "results", "totally", "different", "Code", "reproduce", "issue", "/**", "Wrapper", "frozen", "detection", "models", "trained", "using", "Tensorflow", "Object", "Detection", "API", "github", "com", "tensorflow", "models", "tree", "master", "research", "object_detection", "public", "class", "TFLitePanoObjectDetectionAPIModel", "implements", "Classifier", "private", "static", "final", "Logger", "LOGGER", "new", "Logger", "();", "private", "static", "final", "int", "NUM_of_classes", "19", "private", "static", "final", "int", "NUM_THREADS", "4", "private", "boolean", "isModelQuantized", "private", "int", "inputSize", "private", "Vector", "String", "labels", "new", "Vector", "String", ">();", "private", "int", "intValues", "private", "float", "[][][][]", "output_1", "private", "float", "[][][][]", "output_2", "private", "float", "[][][][]", "output_3", "private", "ByteBuffer", "imgData", "private", "Interpreter", "tflite", "private", "MappedByteBuffer", "tfliteModel", "private", "final", "Interpreter", "Options", "tfliteOptions", "new", "Interpreter", "Options", "();", "private", "GpuDelegate", "gpuDelegate", "null", "private", "NnApiDelegate", "nnapiDelegate", "null", "private", "int", "gridNum", "private", "int", "BoxNum_each_gird", "private", "float", "[][][][]", "floatValues", "private", "TFLitePanoObjectDetectionAPIModel", "{}", "private", "float", "scoreThreshold", "private", "int", "blockSize", "public", "static", "Classifier", "create", "final", "AssetManager", "assetManager", "final", "String", "modelFilename", "final", "String", "labelFilename", "final", "int", "inputSize", "final", "boolean", "isQuantized", "throws", "IOException", "final", "TFLitePanoObjectDetectionAPIModel", "new", "TFLitePanoObjectDetectionAPIModel", "();", "try", "tfliteModel", "loadModelFile", "assetManager", "modelFilename", "gpuDelegate", "null", "gpuDelegate", "new", "GpuDelegate", "();", "tfliteOptions", "addDelegate", "gpuDelegate", "tflite", "new", "Interpreter", "tfliteModel", "tfliteOptions", "catch", "Exception", "throw", "new", "RuntimeException", "e", "isModelQuantized", "isQuantized", "Pre", "allocate", "buffers", "int", "numBytesPerChannel", "isQuantized", "numBytesPerChannel", "Quantized", "else", "{", "numBytesPerChannel", "4", "Floating", "point", "imgData", "ByteBuffer", "allocateDirect", "1", "inputSize", "inputSize", "3", "numBytesPerChannel", ");//", "imgData", "order", "ByteOrder", "nativeOrder", "());", "intValues", "new", "int", "inputSize", "inputSize", "gridNum", "inputSize", "32", "floatValues", "new", "float", "1", "inputSize", "inputSize", "3", "output_1", "new", "float", "1", "][][][];", "output_2", "new", "float", "1", "][][][];", "output_3", "new", "float", "1", "][][][];", "return", "}", "}", "Override", "public", "List", "Recognition", "recognizeImage", "final", "Bitmap", "bitmap", "{", "bitmap", "getPixels", "intValues", "bitmap", "getWidth", "(),", "0", "bitmap", "getWidth", "(),", "bitmap", "getHeight", "());", "imgData", "rewind", "();", "int", "0", "inputSize", "++", "{", "int", "0", ";", "<", "inputSize", ";", "++", "{", "int", "pixelValue", "intValues", "2", "inputSize", "Float", "model", "floatValues", "0", "0", "]=((", "pixelValue", "16", "0xFF", "255", ";", "floatValues", "0", "1", "]=((", "pixelValue", "8", ")", "&", "0xFF", "255", ";", "floatValues", "0", "2", "]=(", "pixelValue", "&", "0xFF", ")", "255", ";", "}", "}", "int", "channelNum", "BoxNum_each_gird", "NUM_of_classes", "output_1", "new", "float", "1", "gridNum", "2", "gridNum", "channelNum", "output_2", "new", "float", "1", "][", "2", "gridNum", "][", "4", "gridNum", "][", "channelNum", "output_3", "new", "float", "1", "][", "4", "gridNum", "][", "8", "gridNum", "][", "channelNum", "];", "Object", "inputArray", "{", "floatValues", "Map", "<", "Integer", "Object", "outputMap", "new", "HashMap", "<>();", "outputMap", "put", "0", "output_1", "outputMap", "put", "1", "output_2", "outputMap", "put", "(", "2", "output_3", "Trace", "endSection", "();", "Run", "inference", "call", "Trace", "beginSection", "run", "\");", "long", "startTime", "SystemClock", "uptimeMillis", "();", "tflite", "runForMultipleInputsOutputs", "(", "inputArray", "outputMap", ");", "long", "lastingTime", "=", "SystemClock", "uptimeMillis", "()-", "startTime", ";", "LOGGER", "runForMultipleInputsOutputs", "time", "image", "lastingTime", "\");", "Trace", "endSection", "();", "}", "}`", "Describe", "expected", "behavior", "Provide", "reproducible", "test", "case", "bare", "minimum", "necessary", "generate", "problem", "Other", "info", "logs", "**", "Include", "logs", "source", "code", "would", "helpful", "diagnose", "problem", "including", "tracebacks", "please", "include", "full", "traceback", "Large", "logs", "files", "attached", "Add", "support", "SparkFun", "Edge", "board", "Arduino", "library", "build", "Allows", "individuals", "less", "comfortable", "command", "line", "tools", "get", "started", "TFLu", "examples", "dependencies", "[", "Update", "TFLu", "micro", "use", "AmbiqSuite", "SDK", "Release", "2", "Apollo3", "https", "://", "github", "com", "tensorflow", "tensorflow", "pull", "35236", "[", "Upgrade", "Edge", "Board", "Support", "Package", "TFLu", "micro", ")](", "https", "://", "github", "com", "tensorflow", "tensorflow", "pull", "35290", "saved", "model", "api", "keras", "models", "save_model", "testmodel", "\"./", "/\",", "save_format", "tf", "')**", "load", "tf", "keras", "models", "load_model", "1", "'),", "however", "got", "issue", "title", "worth", "mentioning", "succed", "saved", "System", "information", "**", "Have", "I", "written", "custom", "code", "opposed", "using", "stock", "example", "script", "provided", "TensorFlow", "OS", "Platform", "Distribution", "e", ".,", "Linux", "Ubuntu", "04", "centos7", "TensorFlow", "version", "use", "command", "tensorflow", "0", "Python", "version", "7", "NVIDIA", "SMI", "418", "Driver", "Version", "418", "CUDA", "Version", "1", "GPU", "model", "memory", "###", "System", "information", "Have", "written", "custom", "code", "opposed", "using", "stock", "example", "script", "provided", "TensorFlow", ")**:", "YES", "OS", "Platform", "Distribution", "e", ".,", "Linux", "Ubuntu", "04", ")**:", "macOS", "15", "19C57", "TensorFlow", "installed", "source", "binary", ")**:", "binary", "**", "TensorFlow", "version", "use", "command", ")**:", "rc2", "g64c3d382ca", "**", "Python", "version", "**:", "default", "Oct", "2019", "18", "n", "Clang", "0", "clang", "1100", "0", "33", ")]", "###", "Describe", "problem", "data", "Dataset", "supports", "RaggedTensor", "SparseTensor", "data", "Dataset", "from_generator", "limited", "Tensors", "Please", "support", "types", "Tensors", "###", "Source", "code", "logs", "```", "def", "data_get", "():", "range", "5", "yield", "ragged", "constant", "([[", "]])", "tf", "data", "Dataset", "from_generator", "(", "data_get", "tf", "int32", "sample", "print", "(", "sample", "```", "produces", "Traceback", "(", "recent", "call", "last", "```", "File", "Users", "peak", "IdeaProjects", "TFmodels", "venv", "tf2", "lib", "python3", "site", "packages", "tensorflow_core", "python", "ops", "script_ops", "\",", "line", "221", "__call__", "ret", "=", "func", "args", ")", "File", "Users", "peak", "IdeaProjects", "TFmodels", "venv", "tf2", "lib", "python3", "7", "site", "packages", "tensorflow_core", "python", "data", "ops", "dataset_ops", "\",", "line", "606", "generator_py_func", "element", ".\"", "(", "dtype", "name", "ret", "TypeError", "generator", "yielded", "element", "could", "converted", "expected", "type", "The", "expected", "type", "int32", "yielded", "element", "tf", "RaggedTensor", "0", "0", "],", "[", "0", "]]>.", "```", "em", "Please", "make", "sure", "bug", "per", "GitHub", "Policy", "https", "://", "github", "com", "tensorflow", "tensorflow", "blob", "master", "ISSUES", "address", "code", "doc", "bugs", "performance", "issues", "feature", "requests", "build", "installation", "issues", "GitHub", "tag", "bug_template", "em", "System", "information", "Have", "written", "custom", "code", "opposed", "using", "stock", "example", "script", "provided", "TensorFlow", "yes", "Platform", "Distribution", "e", ".,", "Linux", "Ubuntu", "04", "Windows", "Mobile", "device", "e", "iPhone", "Pixel", "Samsung", "Galaxy", "issue", "happens", "mobile", "device", "TensorFlow", "installed", "source", "binary", "TensorFlow", "version", "use", "command", "0", "Python", "version", "7", "Bazel", "version", "compiling", "source", "GCC", "Compiler", "version", "compiling", "source", "CUDA", "cuDNN", "version", "GPU", "model", "memory", "You", "collect", "information", "using", "environment", "capture", "script", "https", "://", "github", "com", "tensorflow", "tensorflow", "tree", "master", "tools", "tf_env_collect", "You", "also", "obtain", "TensorFlow", "version", "TF", "0", "python", "import", "tensorflow", ";", "print", "GIT_VERSION", "VERSION", ")\"`", "TF", "0", "python", "import", "tensorflow", ";", "print", "version", "GIT_VERSION", "version", "VERSION", ")\"`", "tried", "follow", "tf", "doc", "build", "model", "follows", "https", "://", "www", "tensorflow", "org", "guide", "keras", "custom_layers_and_models", "class", "CBR", "layers", "Layer", "'''", "Convolution", "Batch", "normalisation", "Relu", "'''", "def", "__int__", "self", "filterNum", "kSize", "strSize", "padMode", "name", "cbr", "kwargs", "super", "CBR", "self", "__init__", "name", "name", "kwargs", "self", "conv3D", "layers", "Conv3D", "filters", "filterNum", "kernel_size", "kSize", "strides", "strSize", "padding", "padMode", "data_format", "channels_first", "self", "layers", "BatchNormalization", "axis", "def", "call", "self", "inputs", "self", "conv3D", "inputs", "x", "self", "x", "return", "layers", "Relu", "x", "class", "SimpleUNet", "tf", "keras", "Model", "layers", "Layer", "'''", "Serialise", "basic", "units", "build", "double", "layered", "encoder", "decoder", "Net", "Input", "inDim", "mbSize", "modaility", "channel", "tensor", "dimensions", "classNum", "background", "included", "name", "name", "net", "inputs", "tf", "tensor", "mbSize", "modaility", "channel", "tensor", "dimensions", "Inputs", "must", "organised", "channel", "first", "Returns", "outputs", "tf", "tensor", "mbSize", "classNum", "tensor", "dimensions", "'''", "def", "__init__", "self", "inDim", "classNum", "name", "SimpleUNet", "**", "kwargs", "super", "SimpleUNet", "self", "__init__", "name", "name", "**", "kwargs", "self", "inDim", "inDim", "self", "classNum", "classNum", "dimEnSt1End", "np", "array", "inDim", "1", ":])-", "dimEnSt2Ed", "dimEnSt1End", "dimBridgeEnd", "dimEnSt2Ed", "dimDEStd1End", "dimBridgeEnd", ")*", "outDim", "dimDEStd1End", "2", "temp", "((", "dimEnSt2Ed", "dimBridgeEnd", "2", "astype", "int32", "crop3d1", "tuple", "np", "tile", "temp", "2", "1", ")).", "temp", "((", "dimEnSt1End", "dimDEStd1End", "2", "astype", "int32", "crop3d2", "tuple", "np", "tile", "temp", "2", "1", ")).", "list", "basic", "units", "used", "model", "self", "en_st1_cbr1", "CBR", "32", "1", "valid", "self", "en_st1_cbr2", "CBR", "1", "valid", "self", "en_st2_mp", "layers", "MaxPooling3D", "pool_size", "2", "2", "2", "strides", "2", "2", "2", "padding", "valid", "data_format", "channels_first", "self", "en_st2_cbr1", "CBR", "64", "1", "valid", "self", "en_st2_cbr2", "CBR", "128", "1", "valid", "self", "bridge_mp", "layers", "MaxPooling3D", "pool_size", "2", "2", "2", "strides", "2", "2", "2", "),", "padding", "valid", "data_format", "channels_first", "self", "bridge_cbr1", "CBR", "128", "1", "valid", "self", "bridge_cbr2", "CBR", "256", "1", "valid", "self", "bridge_tconv1", "layers", "Conv3DTranspose", "256", "2", "strides", "2", "padding", "valid", "data_format", "channels_first", "self", "de_3dcrop1", "layers", "Cropping3D", "crop3d1", "data_format", "channels_first", "self", "de_st1_cbr1", "CBR", "256", "1", "valid", "self", "de_st1_cbr2", "CBR", "128", "1", "valid", "self", "de_st1_tconv1", "layers", "Conv3DTranspose", "128", "2", "strides", "2", "padding", "valid", "data_format", "channels_first", "self", "de_3dcrop2", "layers", "Cropping3D", "crop3d2", "data_format", "channels_first", "self", "de_st2_cbr1", "CBR", "64", "1", "valid", "self", "de_st2_cbr2", "CBR", "64", "1", "valid", "self", "final_conv3D", "layers", "Conv3D", "filters", "self", "classNum", "kernel_size", "3", "strides", "1", "padding", "valid", "data_format", "channels_first", "def", "call", "self", "inputs", "x", "self", "en_st1_cbr1", "inputs", "xEnSt1End", "self", "en_st1_cbr2", "x", "x", "self", "en_st2_mp", "xEnSt1End", "x", "self", "en_st2_cbr1", "x", "xEnSt2Ed", "self", "en_st2_cbr2", "x", "x", "self", "bridge_mp", "xEnSt2Ed", "x", "self", "bridge_cbr1", "x", "x", "self", "bridge_cbr2", "x", "xBridgeEnd", "self", "bridge_tconv1", "x", "xCrop1", "self", "de_3dcrop1", "xEnSt2Ed", "x", "layers", "Concatenate", "xBridgeEnd", "xCrop1", "axis", "1", "x", "self", "de_st1_cbr1", "x", "x", "self", "de_st1_cbr2", "x", "xDeSt1End", "self", "de_st1_tconv1", "x", "xCrop2", "self", "de_3dcrop2", "xEnSt1End", "x", "layers", "Concatenate", "xDeSt1End", "xCrop2", "axis", "1", "x", "self", "de_st2_cbr1", "x", "x", "self", "de_st2_cbr2", "x", "x", "self", "final_conv3D", "x", "outputs", "activations", "softmax", "x", "axis", "1", ")", "return", "outputs", "Then", "initialised", "tried", "build", "calling", "SUNet", "build", "classNum", "3", "mbSize", "16", "inDim", "[", "64", "64", "64", "SUNet", "SimpleUNet", "inDim", "classNum", ")", "SUNet", "build", "input_shape", "inDim", ")", "strictly", "followed", "example", "given", "tf", "doc", "error", "raised", "building", "ValueError", "name", "name_scope", "must", "string", "occurred", "CBR", "called", "first", "time", "`", "def", "__int__", "(", "self", "filterNum", "kSize", "strSize", "padMode", "name", "cbr", "**", "kwargs", "super", "(", "CBR", "self", "__init__", "(", "name", "=", "name", "**", "kwargs", ")", "`", "I", "cannot", "figure", "syntactic", "mistake", "Could", "anyone", "give", "hand", "Thanks", "lot", "model", "cannot", "built", "moment", "actually", "used", "called", "training", "System", "information", "Have", "written", "custom", "code", "Yes", "Platform", "Distribution", "18362", "Microsoft", "TensorFlow", "installed", "Anaconda", "default", "source", "TensorFlow", "version", "15", "Python", "version", "7", "CUDA", "cuDNN", "version", "GPU", "model", "memory", "GeForce", "RTX", "2060", "Describe", "current", "behavior", "trying", "implement", "custom", "loss", "function", "based", "custom", "accuracy", "function", "already", "using", "evaluate", "model", "predictions", "test", "dataset", "The", "conversion", "use", "numpy", "greater", "equal", "functions", "differentiable", "created", "thefore", "custom", "functions", "approximate", "latters", "behavior", "problems", "Describe", "expected", "behavior", "particular", "test", "everything", "fine", "comparing", "results", "obtained", "original", "custom", "accuracy", "new", "loss", "given", "input", "input", "tensorflow", "predictions", "inglobe", "inside", "constant", "convert", "tensors", "What", "noticed", "line", "code", "```", "eps", "sys", "float_info", "epsilon", "return", "sqrt", "pow", ")", "eps", "```", "problematic", "In", "particular", "array", "float32", "values", "1", "range", "returned", "array", "let", "call", "ret", "ret", "max", "])", "sometimes", "value", "becomes", "4", "9999995", "instead", "The", "next", "portion", "code", "based", "many", "5", "present", "therefore", "ignore", "problem", "The", "fact", "let", "say", "problematic", "index", "ret", "w", "]=", "4", "9999995", "instead", "5", "use", "code", "equal", "w", "]", "returned", "array", "correctly", "5", "This", "means", "somehow", "batch", "predictions", "one", "something", "working", "This", "case", "sqrt", "K", "pow", "works", "element", "wise", "matter", "array", "1", "multiple", "values", "Out", "almost", "20k", "predictions", "around", "problem", "deterministic", "always", "problematic", "I", "also", "tried", "use", "```", "eps", "sys", "float_info", "epsilon", "return", "0", "5", "5", "sqrt", "np", "pow", "5", ")", "eps", "```", "problem", "gone", "thefore", "related", "Keras", "backend", "Last", "info", "I", "tried", "use", "also", "```", "eps", "sys", "float_info", "epsilon", "return", "math", "ceil", "0", "5", "*(", "5", "K", "sqrt", "K", "pow", "5", ")", "eps", ")))", "```", "completely", "ruins", "returned", "value", "sometimes", "real", "numbers", "4", "5", "rounded", "instead", "5", "If", "informations", "needed", "I", "provide", "System", "information", "OS", "Platform", "Distribution", "e", ".,", "Linux", "Ubuntu", "04", "Windows", "TensorFlow", "installed", "source", "binary", "installed", "binary", "Conda", "TensorFlow", "version", "github", "SHA", "source", "Command", "used", "run", "converter", "code", "using", "Python", "API", "```", "converter", "lite", "TFLiteConverter", "from_saved_model", "model_mnist", "hd5", "converter", "optimizations", "lite", "Optimize", "DEFAULT", "converter", "target_spec", "supported_ops", "lite", "OpsSet", "TFLITE_BUILTINS_INT8", "converter", "inference_input_type", "tf", "uint8", "converter", "inference_output_type", "tf", "uint8", "images", "tf", "cast", "X_train", "tf", "float32", "mnist_ds", "tf", "data", "Dataset", "from_tensor_slices", "images", ")).", "batch", "1", "def", "representative_data_gen", "():", "input_value", "mnist_ds", "take", "100", "yield", "[", "input_value", "converter", "representative_dataset", "representative_data_gen", "tflite_quant_model", "converter", "convert", "open", "model_mnist_quant_uint8", "tflite", "wb", "f", "write", "tflite_quant_model", "interpreter", "tf", "lite", "Interpreter", "model_path", "model_mnist_quant_uint8", "tflite", "interpreter", "allocate_tensors", "img", "X_train", "[", "255", "img", "img", "astype", "uint8", "print", "interpreter", "get_input_details", "())", "interpreter", "set_tensor", "interpreter", "get_input_details", "()[", "]['", "index", "'],", "expand_dims", "img", "axis", "```", "The", "output", "converter", "invocation", "```", "[{'", "name", "flatten_input", "index", "shape", "array", "1", "]),", "dtype", "<", "class", "numpy", "float32", "'>,", "quantization", "0", "0", ")}]", "---------------------------------------------------------------------------", "ValueError", "Traceback", "recent", "call", "last", "<", "ipython", "input", "5a2fa86c9de2", "<", "module", "5", "img", "img", "astype", "uint8", "6", "print", "interpreter", "get_input_details", "())", "---->", "interpreter", "set_tensor", "interpreter", "get_input_details", "()[", "0", "]['", "index", "'],", "expand_dims", "img", "axis", "0", "~\\", "AppData", "Local", "Continuum", "anaconda3", "envs", "tensorflow2", "lib", "site", "packages", "tensorflow_core", "lite", "python", "interpreter", "set_tensor", "self", "tensor_index", "value", "344", "ValueError", "interpreter", "could", "set", "tensor", "345", "\"\"\"", "-->", "346", "self", "_interpreter", "SetTensor", "tensor_index", "value", "347", "348", "def", "resize_tensor_input", "self", "input_index", "tensor_size", "~\\", "AppData", "Local", "Continuum", "anaconda3", "envs", "tensorflow2", "lib", "site", "packages", "tensorflow_core", "lite", "python", "interpreter_wrapper", "tensorflow_wrap_interpreter_wrapper", "SetTensor", "self", "value", "134", "135", "def", "SetTensor", "self", "value", "-->", "136", "return", "_tensorflow_wrap_interpreter_wrapper", "InterpreterWrapper_SetTensor", "self", "value", "137", "138", "def", "GetTensor", "(", "self", "ValueError", "Cannot", "set", "tensor", "Got", "tensor", "type", "UINT8", "expected", "type", "FLOAT32", "input", "11", "name", "flatten_input", "```", "Also", "please", "include", "link", "saved", "model", "GraphDef", "```", "Put", "link", "attach", "issue", "```", "Failure", "details", "The", "conversion", "successful", "generated", "model", "wrong", "The", "input", "tensor", "dtype", "uint8", "still", "float32", "tried", "thing", "1", "0", "case", "every", "things", "works", "expected", "Here", "result", "TF", "1", "0", "```", "[{'", "name", "flatten_input", "index", "11", "shape", "array", "1", "28", "28", "dtype", "int32", "dtype", "<", "class", "numpy", "uint8", "'>,", "quantization", "(", "0", "003921568859368563", "0", ")}]", "```", "Any", "info", "logs", "Include", "logs", "source", "code", "would", "helpful", "diagnose", "problem", "including", "tracebacks", "please", "include", "full", "traceback", "Large", "logs", "files", "attached", "System", "information", "Have", "written", "custom", "code", "opposed", "using", "stock", "example", "script", "provided", "TensorFlow", "Yes", "Platform", "Distribution", "e", ".,", "Linux", "Ubuntu", "04", "Ubuntu", "04", "TensorFlow", "installed", "source", "binary", "binary", "TensorFlow", "version", "use", "command", "Python", "version", "6", "CUDA", "cuDNN", "version", "2", "6", "32", "cuda10", "2", "GPU", "model", "memory", "NVidia", "Titan", "RTX", "24218", "MiB", "Describe", "current", "behavior", "When", "attempt", "slice", "tensor", "inside", "keras", "util", "Sequence", "model", "fit_generator", "multiprocessing", "True", "TensorFlow", "hangs", "forever", "without", "reporting", "error", "using", "CPU", "GPU", "cycles", "works", "expected", "multiprocessing", "False", "Describe", "expected", "behavior", "TensorFlow", "correctly", "fit", "model", "multiprocessing", "False", "Code", "reproduce", "issue", "In", "order", "reproduce", "substitute", "my_jpeg", "jpeg", "computer", "hopefully", "dimension", "greater", "224px", "Note", "set", "use_multiprocessing", "False", "example", "correctly", "train", "model", "```", "__future__", "import", "absolute_import", "division", "print_function", "unicode_literals", "import", "tensorflow", "tensorflow", "import", "keras", "In", "order", "reproduce", "use", "whatever", "random", "JPEG", "handy", "It", "larger", "my_crop", "dimension", "my_jpeg", "\"/", "home", "ben", "my_jpeg", "jpg", "my_crop", "224", "Generates", "single", "crop", "TensorFlow", "class", "DataGenerator", "keras", "utils", "Sequence", "def", "__init__", "self", "image_location", "crop_size", "224", "self", "_image_location", "image_location", "self", "_crop_size", "crop_size", "Just", "one", "single", "batch", "returned", "one", "single", "image", "def", "__len__", "self", "return", "Generate", "one", "batch", "data", "def", "__getitem__", "self", "index", "Where", "tensors", "stored", "Read", "image", "read_file", "self", "_image_location", "Load", "image", "image", "decode_jpeg", "image", "channels", "assert", "image", "shape", "2", "==", "#", "MUST", "RGB", "height", "image", "shape", "width", "image", "shape", "1", "#", "Just", "take", "trivial", "crop", "image", "#", "This", "offending", "line", "operation", "hangs", "forever", "image", "image", "self", "_crop_size", "0", "self", "_crop_size", "#", "This", "line", "equivalent", "also", "hangs", "multiprocessing", "enabled", "#", "image", "slice", "image", "0", "0", "0", "self", "_crop_size", "self", "_crop_size", "])", "append", "tf", "dtypes", "cast", "image", "tf", "float32", "#", "Tensors", "generally", "assignable", "create", "number", "existing", "ones", "tf", "stack", "tf", "stack", "#", "Preprocess", "/=", "255", "0", "#", "Normalize", "[", "0", "1", "]", "range", "return", "X", "generator", "DataGenerator", "my_jpeg", "my_crop", "model", "tf", "keras", "applications", "ResNet50", "input_shape", "my_crop", "my_crop", "3", "))", "model", "compile", "loss", "mse", "#", "use_multiprocessing", "=", "False", "works", "#", "use_multiprocessing", "=", "True", "hangs", "model", "fit_generator", "generator", "use_multiprocessing", "=", "True", "workers", "=", "2", ")", "```", "tensorflow", "micro", "System", "information", "Host", "Platform", "Distribution", "e", ".,", "Linux", "Ubuntu", "04", "Ubuntu", "04", "Windows", "TensorFlow", "installed", "source", "binary", "source", "Tensorflow", "version", "commit", "SHA", "source", "Target", "platform", "e", "Arm", "Mbed", "Arduino", "Nano", "etc", "target", "efr32", "efm32", "tried", "compile", "mbed", ")", "Describe", "problem", "I", "trying", "run", "one", "provided", "projects", "efr", "efm32", "microcontroller", "choose", "magic_wanda", "example", "accelero", "seem", "good", "example", "start", "I", "wanted", "generate", "binary", "file", "first", "make", "changes", "adapt", "code", "external", "accelerometer", "itried", "command", "_make", "tensorflow", "lite", "micro", "tools", "make", "Makefile", "TARGET", "mbed", "TAGS", "CMSIS", "efm32pg_stk3401", "magic_wand_bin_", "errors", "appear", "Should", "big", "modifications", "project", "run", "efr32", "efm32", "micro", "Thank", "answers", "Please", "provide", "exact", "sequence", "commands", "steps", "ran", "problem", "**", "_make", "tensorflow", "lite", "micro", "tools", "make", "Makefile", "TARGET", "mbed", "TAGS", "CMSIS", "efm32pg_stk3401", "magic_wand_bin", "This", "addresses", "minor", "spelling", "tweaks", "tensorflow", "lite", "directory", "follow", "34958", "application", "requires", "kTfLiteInt8", "kernels", "However", "kTfLiteFloat32", "kTfLiteUInt8", "kernels", "also", "built", "application", "would", "save", "considerable", "amount", "code", "space", "way", "disable", "building", "unused", "data", "types", "g", "```", "switch", "input", "type", "{", "Already", "know", "types", "ifndef", "TFLITE_FLOAT32_DISABLED", "case", "kTfLiteFloat32", "return", "EvalFloat", "context", "node", "params", "data", "input", "filter", "bias", "nullptr", "nullptr", "output", "break", "endif", "infdef", "TFLITE_INT8_DISABLED", "case", "kTfLiteInt8", "return", "EvalQuantizedPerChannel", "context", "node", "params", "data", "input", "filter", "bias", "output", "nullptr", "break", "#", "endif", "#", "ifndef", "TFLITE_UINT8_DISABLED", "case", "kTfLiteUInt8", "return", "EvalQuantized", "context", "node", "params", "data", "input", "filter", "bias", "nullptr", "nullptr", "output", "break", "#", "endif", "default", "context", "ReportError", "context", "Type", "(%", "supported", "TfLiteTypeGetName", "input", "type", "input", "type", "return", "kTfLiteError", "```", "something", "elegant", "em", "Please", "make", "sure", "build", "installation", "issue", "per", "GitHub", "Policy", "https", "://", "github", "com", "tensorflow", "tensorflow", "blob", "master", "ISSUES", "),", "address", "code", "doc", "bugs", "performance", "issues", "feature", "requests", "build", "installation", "issues", "GitHub", "tag", "build_template", "em", "System", "information", "**", "OS", "Platform", "Windows", "Pro", "desktop", "computer", "TensorFlow", "installed", "source", "TensorFlow", "version", "Python", "version", "Installed", "using", "virtualenv", "pip", "conda", "installed", "via", "command", "line", "git", "clone", "etc", "Bazel", "version", "compiling", "source", "GCC", "Compiler", "version", "compiling", "source", "Visual", "Studio", "2017", "Redistributables", "CUDA", "cuDNN", "version", "---", "ROCm", "selected", "GPU", "model", "memory", "AMD", "8800P", "Build", "fails", "see", "listing", "Users", "Bludorf", "tensorflow", "python", "configure", "WARNING", "Running", "Bazel", "server", "needs", "killed", "startup", "options", "different", "WARNING", "Waiting", "server", "process", "terminate", "waited", "seconds", "waiting", "WARNING", "Waiting", "server", "process", "terminate", "waited", "seconds", "waiting", "WARNING", "batch", "mode", "deprecated", "Please", "instead", "explicitly", "shut", "Bazel", "server", "using", "command", "bazel", "shutdown", "You", "bazel", "1", "0", "installed", "Please", "specify", "location", "python", "Default", ":\\", "Users", "Bludorf", "AppData", "Local", "Programs", "Python", "Python37", "python", "exe", "Found", "possible", "Python", "library", "paths", ":\\", "Users", "Bludorf", "AppData", "Local", "Programs", "Python", "Python37", "lib", "site", "packages", "Please", "input", "desired", "Python", "library", "path", "use", "Default", ":\\", "Users", "Bludorf", "AppData", "Local", "Programs", "Python", "Python37", "lib", "site", "packages", "wish", "build", "TensorFlow", "XLA", "JIT", "support", "N", "XLA", "JIT", "support", "enabled", "TensorFlow", "wish", "build", "TensorFlow", "ROCm", "support", "N", "ROCm", "support", "enabled", "TensorFlow", "Do", "wish", "build", "TensorFlow", "CUDA", "support", "N", "N", "CUDA", "support", "enabled", "TensorFlow", "Please", "specify", "optimization", "flags", "use", "compilation", "bazel", "option", "\"--", "config", "opt", "specified", "Default", "arch", "AVX", "Would", "like", "override", "eigen", "strong", "inline", "++", "compilation", "reduce", "compilation", "time", "]:", "Y", "Eigen", "strong", "inline", "overridden", "Preconfigured", "Bazel", "build", "configs", "You", "use", "adding", "\"--", "config", "=<>\"", "build", "command", "See", "bazelrc", "details", "config", "mkl", "Build", "MKL", "support", "config", "monolithic", "Config", "mostly", "static", "monolithic", "build", "config", "ngraph", "Build", "Intel", "nGraph", "support", "config", "numa", "Build", "NUMA", "support", "config", "dynamic_kernels", "Experimental", "Build", "kernels", "separate", "shared", "objects", "config", "Build", "TensorFlow", "x", "instead", "1", "x", "Preconfigured", "Bazel", "build", "configs", "DISABLE", "default", "features", "config", "noaws", "Disable", "AWS", "filesystem", "support", "config", "nogcp", "Disable", "GCP", "support", "config", "nohdfs", "Disable", "HDFS", "support", "config", "nonccl", "Disable", "NVIDIA", "NCCL", "support", ":\\", "Users", "Bludorf", "tensorflow", "bazel", "build", "config", "tensorflow", "tools", "pip_package", "build_pip_package", "Starting", "local", "Bazel", "server", "connecting", "...", "WARNING", "The", "following", "configs", "expanded", "v2", "For", "repeatable", "flags", "repeats", "counted", "twice", "may", "lead", "unexpected", "behavior", "INFO", "Writing", "tracer", "profile", "users", "bludorf", "_bazel_bludorf", "jkbqqwso", "command", "profile", "INFO", "Options", "provided", "client", "Inherited", "common", "options", "isatty", "1", "terminal_columns", "120", "INFO", "Options", "provided", "client", "build", "options", "python_path", "Users", "Bludorf", "AppData", "Local", "Programs", "Python", "Python37", "python", "exe", "INFO", "Reading", "options", "build", ":\\", "users", "bludorf", "tensorflow", "bazelrc", "build", "options", "apple_platform_type", "macos", "define", "framework_shared_object", "true", "define", "open_source_build", "true", "java_toolchain", "=//", "third_party", "toolchains", "java", "tf_java_toolchain", "host_java_toolchain", "=//", "third_party", "toolchains", "java", "tf_java_toolchain", "define", "use_fast_cpp_protos", "true", "define", "allow_oversize_protos", "true", "spawn_strategy", "standalone", "opt", "announce_rc", "define", "grpc_no_ares", "true", "noincompatible_remove_legacy_whole_archive", "enable_platform_specific_config", "config", "v2", "INFO", "Reading", "options", "build", ":\\", "users", "bludorf", "tensorflow", "tf_configure", "bazelrc", "build", "options", "action_env", "PYTHON_BIN_PATH", "Users", "Bludorf", "AppData", "Local", "Programs", "Python", "Python37", "python", "exe", "action_env", "PYTHON_LIB_PATH", "Users", "Bludorf", "AppData", "Local", "Programs", "Python", "Python37", "lib", "site", "packages", "python_path", ":/", "Users", "Bludorf", "AppData", "Local", "Programs", "Python", "Python37", "python", "exe", "config", "xla", "config", "rocm", "define", "override_eigen_strong_inline", "true", "action_env", "TF_CONFIGURE_IOS", "0", "INFO", "Found", "applicable", "config", "definition", "build", "v2", "file", ":\\", "users", "bludorf", "tensorflow", "bazelrc", "define", "tf_api_version", "action_env", "TF2_BEHAVIOR", "1", "INFO", "Found", "applicable", "config", "definition", "build", "xla", "file", ":\\", "users", "bludorf", "tensorflow", "bazelrc", "action_env", "TF_ENABLE_XLA", "1", "define", "with_xla_support", "true", "INFO", "Found", "applicable", "config", "definition", "build", "xla", "file", ":\\", "users", "bludorf", "tensorflow", "tf_configure", "bazelrc", "define", "with_xla_support", "true", "INFO", "Found", "applicable", "config", "definition", "build", "rocm", "file", ":\\", "users", "bludorf", "tensorflow", "bazelrc", "crosstool_top", "local_config_rocm", "crosstool", "toolchain", "define", "using_rocm", "true", "define", "using_rocm_hipcc", "true", "action_env", "TF_NEED_ROCM", "1", "INFO", "Found", "applicable", "config", "definition", "build", "v2", "file", ":\\", "users", "bludorf", "tensorflow", "bazelrc", "define", "tf_api_version", "action_env", "TF2_BEHAVIOR", "1", "INFO", "Found", "applicable", "config", "definition", "build", "windows", "file", ":\\", "users", "bludorf", "tensorflow", "bazelrc", "copt", "w", "cxxopt", "std", "++", "host_cxxopt", "std", "++", "config", "monolithic", "copt", "DWIN32_LEAN_AND_MEAN", "host_copt", "DWIN32_LEAN_AND_MEAN", "copt", "DNOGDI", "host_copt", "DNOGDI", "linkopt", "DEBUG", "host_linkopt", "DEBUG", "linkopt", "OPT", "REF", "host_linkopt", "OPT", "REF", "linkopt", "OPT", "ICF", "host_linkopt", "OPT", "ICF", "experimental_strict_action_env", "true", "incompatible_windows_native_test_wrapper", "verbose_failures", "--", "distinct_host_configuration", "false", "INFO", "Found", "applicable", "config", "definition", "build", "monolithic", "file", ":\\", "users", "bludorf", "tensorflow", "bazelrc", "--", "define", "framework_shared_object", "false", "INFO", "Call", "stack", "definition", "repository", "io_bazel_rules_docker", "git_repository", "rule", "definition", ":/", "users", "bludorf", "_bazel_bludorf", "jkbqqwso", "external", "bazel_tools", "tools", "build_defs", "repo", "git", "bzl", "195", ":/", "users", "bludorf", "_bazel_bludorf", "jkbqqwso", "external", "bazel_toolchains", "repositories", "repositories", "bzl", "9", ":/", "users", "bludorf", "tensorflow", "WORKSPACE", "1", "ERROR", "error", "occurred", "fetch", "repository", "io_bazel_rules_docker", "Traceback", "recent", "call", "last", "File", ":/", "users", "bludorf", "_bazel_bludorf", "jkbqqwso", "external", "bazel_tools", "tools", "build_defs", "repo", "git", "bzl", "line", "177", "_clone_or_update", "ctx", "File", ":/", "users", "bludorf", "_bazel_bludorf", "jkbqqwso", "external", "bazel_tools", "tools", "build_defs", "repo", "git", "bzl", "line", "_clone_or_update", "git_repo", "ctx", "directory", "File", ":/", "users", "bludorf", "_bazel_bludorf", "jkbqqwso", "external", "bazel_tools", "tools", "build_defs", "repo", "git_worker", "bzl", "line", "git_repo", "_update", "ctx", "git_repo", "File", ":/", "users", "bludorf", "_bazel_bludorf", "jkbqqwso", "external", "bazel_tools", "tools", "build_defs", "repo", "git_worker", "bzl", "line", "101", "_update", "init", "ctx", "git_repo", "File", ":/", "users", "bludorf", "_bazel_bludorf", "jkbqqwso", "external", "bazel_tools", "tools", "build_defs", "repo", "git_worker", "bzl", "line", "115", "init", "_error", "ctx", "name", "st", "stderr", "File", ":/", "users", "bludorf", "_bazel_bludorf", "jkbqqwso", "external", "bazel_tools", "tools", "build_defs", "repo", "git_worker", "bzl", "line", "181", "_error", "fail", "1", "arguments", "error", "running", "git", "init", ":/", "users", "bludorf", "_bazel_bludorf", "jkbqqwso", "external", "io_bazel_rules_docker", "working", "io_bazel_rules_docker", "java", "IOException", "ERROR", "src", "main", "native", "windows", "process", "199", "CreateProcessW", "git", "init", ":/", "users", "bludorf", "_bazel_bludorf", "jkbqqwso", "external", "io_bazel_rules_docker", "Das", "System", "kann", "die", "angegebene", "Datei", "nicht", "finden", "error", "ERROR", "package", "io_bazel_rules_docker", "repositories", "Traceback", "recent", "call", "last", "File", ":/", "users", "bludorf", "_bazel_bludorf", "jkbqqwso", "external", "bazel_tools", "tools", "build_defs", "repo", "git", "bzl", "line", "177", "_clone_or_update", "ctx", "File", ":/", "users", "bludorf", "_bazel_bludorf", "jkbqqwso", "external", "bazel_tools", "tools", "build_defs", "repo", "git", "bzl", "line", "_clone_or_update", "git_repo", "ctx", "directory", "File", ":/", "users", "bludorf", "_bazel_bludorf", "jkbqqwso", "external", "bazel_tools", "tools", "build_defs", "repo", "git_worker", "bzl", "line", "git_repo", "_update", "ctx", "git_repo", "File", ":/", "users", "bludorf", "_bazel_bludorf", "jkbqqwso", "external", "bazel_tools", "tools", "build_defs", "repo", "git_worker", "bzl", "line", "101", "_update", "init", "ctx", "git_repo", "File", ":/", "users", "bludorf", "_bazel_bludorf", "jkbqqwso", "external", "bazel_tools", "tools", "build_defs", "repo", "git_worker", "bzl", "line", "115", "init", "_error", "ctx", "name", "st", "stderr", "File", ":/", "users", "bludorf", "_bazel_bludorf", "jkbqqwso", "external", "bazel_tools", "tools", "build_defs", "repo", "git_worker", "bzl", "line", "181", "_error", "fail", "1", "arguments", "error", "running", "git", "init", ":/", "users", "bludorf", "_bazel_bludorf", "jkbqqwso", "external", "io_bazel_rules_docker", "working", "io_bazel_rules_docker", "java", "IOException", "ERROR", "src", "main", "native", "windows", "process", "199", "CreateProcessW", "git", "init", ":/", "users", "bludorf", "_bazel_bludorf", "jkbqqwso", "external", "io_bazel_rules_docker", "Das", "System", "kann", "die", "angegebene", "Datei", "nicht", "finden", "error", "2", "ERROR", "package", "io_bazel_rules_docker", "repositories", "Traceback", "recent", "call", "last", "File", ":/", "users", "bludorf", "_bazel_bludorf", "jkbqqwso", "external", "bazel_tools", "tools", "build_defs", "repo", "git", "bzl", "line", "177", "_clone_or_update", "ctx", "File", ":/", "users", "bludorf", "_bazel_bludorf", "jkbqqwso", "external", "bazel_tools", "tools", "build_defs", "repo", "git", "bzl", "line", "_clone_or_update", "git_repo", "ctx", "directory", "File", ":/", "users", "bludorf", "_bazel_bludorf", "jkbqqwso", "external", "bazel_tools", "tools", "build_defs", "repo", "git_worker", "bzl", "line", "git_repo", "_update", "ctx", "git_repo", ")", "File", "C", ":/", "users", "bludorf", "_bazel_bludorf", "jkbqqwso", "external", "bazel_tools", "tools", "build_defs", "repo", "git_worker", "bzl", "line", "101", "_update", "init", "ctx", "git_repo", ")", "File", "C", ":/", "users", "bludorf", "_bazel_bludorf", "jkbqqwso", "external", "bazel_tools", "tools", "build_defs", "repo", "git_worker", "bzl", "line", "115", "init", "_error", "(", "ctx", "name", "st", "stderr", ")", "File", "C", ":/", "users", "bludorf", "_bazel_bludorf", "jkbqqwso", "external", "bazel_tools", "tools", "build_defs", "repo", "git_worker", "bzl", "line", "181", "_error", "fail", "1", "arguments", "error", "running", "git", "init", "C", ":/", "users", "bludorf", "_bazel_bludorf", "jkbqqwso", "external", "io_bazel_rules_docker", "working", "io_bazel_rules_docker", "java", "IOException", "ERROR", "src", "main", "native", "windows", "process", "(", "199", "CreateProcessW", "git", "init", "C", ":/", "users", "bludorf", "_bazel_bludorf", "jkbqqwso", "external", "io_bazel_rules_docker", "):", "Das", "System", "kann", "die", "angegebene", "Datei", "nicht", "finden", "(", "error", "2", ")", "INFO", "Elapsed", "time", "7", "563s", "INFO", "0", "processes", "FAILED", "Build", "NOT", "complete", "successfully", "(", "0", "packages", "loaded", ")", "Incompatible", "flag", "incompatible_restrict_string_escapes", "break", "TensorFlow", "Bazel", "2", "released", "Please", "see", "following", "builds", "information", "darwin", "OpenJDK", ")](<", "href", "https", "://", "buildkite", "com", "bazel", "bazelisk", "plus", "incompatible", "flags", "builds", "342", "042f4c72", "2a23", "4d7b", "9d3b", "d78619ea3fc7", "target", "_blank", "\">:", "darwin", "OpenJDK", ")</", "[:", "windows", "OpenJDK", ")](<", "href", "https", "://", "buildkite", "com", "bazel", "bazelisk", "plus", "incompatible", "flags", "builds", "342", "65246ccf", "c676", "40de", "b693", "3e1408052faa", "target", "_blank", "\">:", "windows", "OpenJDK", ")</", "[:", "ubuntu", "04", "OpenJDK", ")](<", "href", "https", "://", "buildkite", "com", "bazel", "bazelisk", "plus", "incompatible", "flags", "builds", "342", "42574ec2", "097a", "4fa6", "9c82", "5de0093a2ed1", "target", "_blank", "\">:", "ubuntu", "04", "OpenJDK", ")</", "Questions", "Please", "file", "issue", "https", "://", "github", "com", "bazelbuild", "continuous", "integration", "Important", "**:", "Please", "NOT", "modify", "issue", "title", "since", "might", "break", "tools", "Incompatible", "flag", "incompatible_load_cc_rules_from_bzl", "break", "TensorFlow", "Bazel", "2", "released", "Please", "see", "following", "builds", "information", "darwin", "OpenJDK", ")](<", "href", "https", "://", "buildkite", "com", "bazel", "bazelisk", "plus", "incompatible", "flags", "builds", "342", "042f4c72", "2a23", "4d7b", "9d3b", "d78619ea3fc7", "target", "_blank", "\">:", "darwin", "OpenJDK", ")</", "[:", "windows", "OpenJDK", ")](<", "href", "https", "://", "buildkite", "com", "bazel", "bazelisk", "plus", "incompatible", "flags", "builds", "342", "65246ccf", "c676", "40de", "b693", "3e1408052faa", "target", "_blank", "\">:", "windows", "OpenJDK", ")</", "[:", "ubuntu", "04", "OpenJDK", ")](<", "href", "https", "://", "buildkite", "com", "bazel", "bazelisk", "plus", "incompatible", "flags", "builds", "342", "42574ec2", "097a", "4fa6", "9c82", "5de0093a2ed1", "target", "_blank", "\">:", "ubuntu", "04", "OpenJDK", ")</", "Questions", "Please", "file", "issue", "https", "://", "github", "com", "bazelbuild", "continuous", "integration", "Important", "**:", "Please", "NOT", "modify", "issue", "title", "since", "might", "break", "tools", "Incompatible", "flag", "incompatible_no_implicit_file_export", "break", "TensorFlow", "Bazel", "2", "released", "Please", "see", "following", "builds", "information", "darwin", "OpenJDK", ")](<", "href", "https", "://", "buildkite", "com", "bazel", "bazelisk", "plus", "incompatible", "flags", "builds", "342", "042f4c72", "2a23", "4d7b", "9d3b", "d78619ea3fc7", "target", "_blank", "\">:", "darwin", "OpenJDK", ")</", "[:", "windows", "OpenJDK", ")](<", "href", "https", "://", "buildkite", "com", "bazel", "bazelisk", "plus", "incompatible", "flags", "builds", "342", "65246ccf", "c676", "40de", "b693", "3e1408052faa", "target", "_blank", "\">:", "windows", "OpenJDK", ")</", "[:", "ubuntu", "04", "OpenJDK", ")](<", "href", "https", "://", "buildkite", "com", "bazel", "bazelisk", "plus", "incompatible", "flags", "builds", "342", "42574ec2", "097a", "4fa6", "9c82", "5de0093a2ed1", "target", "_blank", "\">:", "ubuntu", "04", "OpenJDK", ")</", "Questions", "Please", "file", "issue", "https", "://", "github", "com", "bazelbuild", "continuous", "integration", "Important", "**:", "Please", "NOT", "modify", "issue", "title", "since", "might", "break", "tools", "Incompatible", "flag", "incompatible_disallow_empty_glob", "break", "TensorFlow", "Bazel", "2", "released", "Please", "see", "following", "builds", "information", "darwin", "OpenJDK", ")](<", "href", "https", "://", "buildkite", "com", "bazel", "bazelisk", "plus", "incompatible", "flags", "builds", "342", "042f4c72", "2a23", "4d7b", "9d3b", "d78619ea3fc7", "target", "_blank", "\">:", "darwin", "OpenJDK", ")</", "[:", "windows", "OpenJDK", ")](<", "href", "https", "://", "buildkite", "com", "bazel", "bazelisk", "plus", "incompatible", "flags", "builds", "342", "65246ccf", "c676", "40de", "b693", "3e1408052faa", "target", "_blank", "\">:", "windows", "OpenJDK", ")</", "[:", "ubuntu", "04", "OpenJDK", ")](<", "href", "https", "://", "buildkite", "com", "bazel", "bazelisk", "plus", "incompatible", "flags", "builds", "342", "42574ec2", "097a", "4fa6", "9c82", "5de0093a2ed1", "target", "_blank", "\">:", "ubuntu", "04", "OpenJDK", ")</", "Questions", "Please", "file", "issue", "https", "://", "github", "com", "bazelbuild", "continuous", "integration", "Important", "**:", "Please", "NOT", "modify", "issue", "title", "since", "might", "break", "tools", "em", "Please", "make", "sure", "feature", "request", "per", "GitHub", "Policy", "https", "://", "github", "com", "tensorflow", "tensorflow", "blob", "master", "ISSUES", "address", "code", "doc", "bugs", "performance", "issues", "feature", "requests", "build", "installation", "issues", "GitHub", "tag", "feature_template", "em", "System", "information", "TensorFlow", "version", "using", "0", "Are", "willing", "contribute", "Yes", "):", "Yes", "Describe", "feature", "current", "behavior", "state", "Currently", "whenever", "user", "loads", "keras", "models", "using", "HDF5", "user", "gets", "confirmation", "models", "loaded", "successfully", "([\\[", "\\]](", "https", "://", "www", "tensorflow", "org", "api_docs", "python", "keras", "Sequential", "load_weights", "),", "[\\[", "\\]](", "https", "://", "www", "tensorflow", "org", "api_docs", "python", "keras", "Model", "version", "stable", "load_weights", "return", "nothing", "This", "confirmation", "could", "useful", "verifying", "weights", "properly", "loaded", "case", "transfer", "learning", "users", "typically", "want", "load", "specific", "weights", "HDF5file", "This", "currently", "achieved", "using", "load_weights", "by_name", "True", ")`,", "however", "users", "get", "confirmation", "layers", "actually", "loaded", "Also", "case", "matching", "layers", "original", "model", "source", "model", "model", "load_weights", "by_name", "True", "fails", "without", "raising", "exception", "way", "actually", "debug", "went", "wrong", "model", "loading", "Note", "talking", "name", "mismatch", "weight", "mismatch", "This", "significantly", "affects", "ability", "write", "unit", "tests", "models", "since", "tester", "code", "cannot", "actually", "verify", "layers", "loaded", "HDF5", "file", "Will", "change", "current", "api", "How", "Yes", "changes", "current", "API", "[\\[", "\\]](", "https", "://", "www", "tensorflow", "org", "api_docs", "python", "keras", "Model", "version", "stable", "load_weights", "[\\[", "2", "\\]](", "https", "://", "www", "tensorflow", "org", "api_docs", "python", "keras", "Sequential", "load_weights", "adding", "return", "type", "Specifically", "returning", "particular", "data", "structure", "loading", "HDF5", "files", "](", "https", "://", "github", "com", "tensorflow", "tensorflow", "blob", "c49396cf71dacc32195033507b3bbd985b12c255", "tensorflow", "python", "keras", "engine", "network", "#", "L1131", "My", "current", "idea", "return", "list", "layers", "loaded", "HDF5", "although", "open", "discussion", "return", "type", "Who", "benefit", "feature", "Users", "loading", "weights", "h5py", "files", "want", "verify", "check", "layers", "loaded", "HDF5", "Any", "Other", "info", "**", "N", "Let", "know", "clarification", "information", "needed", "willing", "contribute", "working", "issue", "also", "facing", "similar", "issue", "The", "demo", "API", "gives", "error", "tflite", "load_delegate", "```", "bpi", "iot", "ros", ":~/", "coral", "tflite", "python", "examples", "classification", "python3", "classify_image", "model", "models", "mobilenet_v2_1", "0_224_inat_bird_quant_edgetpu", "tflite", "labels", "models", "inat_bird_labels", "txt", "--", "input", "images", "parrot", "jpg", "248", "HIB", "Error", "hib_error_status", "0000000000000001", "hib_first_error_status", "0000000000000001", "248", "HIB", "Error", "hib_error_status", "0000000000000001", "hib_first_error_status", "0000000000000001", "INFO", "Initialized", "TensorFlow", "Lite", "runtime", "----", "INFERENCE", "TIME", "----", "Note", "The", "first", "inference", "Edge", "TPU", "slow", "includes", "loading", "model", "Edge", "TPU", "memory", "bpi", "iot", "ros", ":~$", "uname", "Linux", "bpi", "iot", "ros", "5", "bpi", "r64", "SMP", "PREEMPT", "Mon", "Dec", "16", "08", "IST", "2019", "aarch64", "aarch64", "aarch64", "GNU", "Linux", "bpi", "iot", "ros", ":~$", "lscpu", "Architecture", "aarch64", "Byte", "Order", "Little", "Endian", "CPU", "):", "On", "line", "CPU", ")", "list", "Thread", ")", "per", "core", "Core", ")", "per", "socket", "Socket", "):", "CPU", "max", "MHz", "1350", "0000", "CPU", "min", "MHz", "0000", "bpi", "iot", "ros", ":~$", "l", "usr", "lib", "aarch64", "linux", "gnu", "libedge", "lrwxrwxrwx", "root", "root", "Sep", "04", "usr", "lib", "aarch64", "linux", "gnu", "libedgetpu", "->", "libedgetpu", "rwxrwxrwx", "1", "root", "root", "792376", "Sep", "04", "usr", "lib", "aarch64", "linux", "gnu", "libedgetpu", "1", "0", "bpi", "iot", "ros", ":~$", "lspci", "00", "0", "PCI", "bridge", "MEDIATEK", "Corp", "Device", "3258", "00", "0", "System", "peripheral", "Device", "1ac1", "089a", "bpi", "iot", "ros", ":~$", "dev", "apex_0", "dev", "apex_0", "bpi", "iot", "ros", ":~$", "sudo", "c", "echo", "SUBSYSTEM", "==\\\"", "apex", "\\\",", "MODE", "=\\\"", "0660", "\\\",", "GROUP", "=\\\"", "apex", "\\\"'", "etc", "udev", "rules", "apex", "rules", "bpi", "iot", "ros", ":~$", "sudo", "groupadd", "apex", "groupadd", "group", "apex", "already", "exists", "bpi", "iot", "ros", ":~$", "sudo", "adduser", "USER", "apex", "The", "user", "pi", "already", "member", "apex", "```", "em", "Please", "make", "sure", "bug", "per", "GitHub", "Policy", "https", "://", "github", "com", "tensorflow", "tensorflow", "blob", "master", "ISSUES", "),", "address", "code", "doc", "bugs", "performance", "issues", "feature", "requests", "build", "installation", "issues", "GitHub", "tag", "bug_template", "em", "System", "information", "Have", "written", "custom", "code", "opposed", "using", "stock", "example", "script", "provided", "TensorFlow", "https", "://", "github", "com", "cogaplex", "bts", "bts", "Platform", "Distribution", "e", ".,", "Linux", "Ubuntu", "04", "ubuntu", "1604", "Mobile", "device", "e", "iPhone", "Pixel", "Samsung", "Galaxy", "issue", "happens", "mobile", "device", "TensorFlow", "installed", "source", "binary", "pip", "TensorFlow", "version", "use", "command", "Python", "version", "7", "Bazel", "version", "compiling", "source", "GCC", "Compiler", "version", "compiling", "source", "pip", "CUDA", "cuDNN", "version", "0", "GPU", "model", "memory", "1060", "You", "collect", "information", "using", "environment", "capture", "script", "https", "://", "github", "com", "tensorflow", "tensorflow", "tree", "master", "tools", "tf_env_collect", ")", "You", "also", "obtain", "TensorFlow", "version", "TF", "1", "0", "python", "import", "tensorflow", ";", "print", "GIT_VERSION", "VERSION", ")\"`", "TF", "2", "0", "python", "import", "tensorflow", ";", "print", "version", "GIT_VERSION", "version", "VERSION", ")\"`", "Describe", "current", "behavior", "process", "use", "full", "path", "twice", "load", "load_op_library", "os", "path", "join", "dname", "build", "libcompute_depth", "'))", "second", "time", "OP_LIST", "empty", "relative", "path", "twice", "tf", "load_op_library", "empty", "Describe", "expected", "behavior", "use", "full", "path", "twice", "tf", "load_op_library", "OP_LIST", "empty", "Code", "reproduce", "issue", "Provide", "reproducible", "test", "case", "bare", "minimum", "necessary", "generate", "problem", "compile", "https", "://", "github", "com", "cogaplex", "bts", "bts", "met", "problem", "But", "think", "general", "problem", "reproduce", "python", "file", "load", "library", "twice", "full", "path", "relative", "path", "Other", "info", "logs", "**", "Include", "logs", "source", "code", "would", "helpful", "diagnose", "problem", "including", "tracebacks", "please", "include", "full", "traceback", "Large", "logs", "files", "attached", "```", "compute_depth_grad_module", "dict", "__name__", "a11935c229913616b7b14d8da52f01ac", "__doc__", "Python", "wrappers", "around", "TensorFlow", "ops", "n", "nThis", "file", "MACHINE", "GENERATED", "edit", "n", "...", "LIB_HANDLE", "<", "Swig", "Object", "type", "TF_Library", "0x7ff4ad011f60", "OP_LIST", "name", "ComputeDepth", "input_arg", "name", "input", "type", "DT_FLOAT", "input_arg", "name", "focal", "type", "DT_FLOAT", "output_arg", "name", "depth", "type", "DT_FLOAT", "attr", "name", "upratio", "type", "int", "name", "ComputeDepthGrad", "input_arg", "name", "depth_grad", "type", "DT_FLOAT", "input_arg", "name", "input", "type", "DT_FLOAT", "input_arg", "name", "focal", "type", "DT_FLOAT", "output_arg", "name", "grad_input", "type", "DT_FLOAT", "output_arg", "name", "grad_focal", "type", "DT_FLOAT", "__name__", "a11935c229913616b7b14d8da52f01ac", "__doc__", "Python", "wrappers", "around", "TensorFlow", "ops", "n", "nThis", "file", "MACHINE", "GENERATED", "edit", "n", "__package__", "None", "...", "LIB_HANDLE", "<", "Swig", "Object", "type", "TF_Library", "0x7ff4ad011f60", "OP_LIST", "op", "name", "ComputeDepth", "input_arg", "name", "input", "type", "DT_FLOAT", "input_arg", "name", "focal", "type", "DT_FLOAT", "output_arg", "name", "depth", "type", "DT_FLOAT", "attr", "name", "upratio", "type", "int", "op", "name", "ComputeDepthGrad", "input_arg", "name", "depth_grad", "type", "DT_FLOAT", "input_arg", "name", "input", "type", "DT_FLOAT", "input_arg", "name", "focal", "type", "DT_FLOAT", "output_arg", "{", "name", "grad_input", "type", "DT_FLOAT", "}", "output_arg", "{", "name", "grad_focal", "type", "DT_FLOAT", "}", "}", "}", "```", "full", "name", "second", "print", "```", "compute_depth_grad_module", "dict", "{'", "__name__", "670cc8cfec5b6d3b8635f39bd583d769", "__doc__", "Python", "wrappers", "around", "TensorFlow", "ops", "n", "nThis", "file", "MACHINE", "GENERATED", "edit", "n", "__package__", "None", "...", "LIB_HANDLE", "<", "Swig", "Object", "type", "TF_Library", "0x7f6b2a8f3e70", "OP_LIST", "}", "```", "Object", "detection", "SSD", "trained", "tested", "produce", "expected", "results", "http", "://", "download", "tensorflow", "org", "models", "object_detection", "ssd_inception_v2_coco_2018_01_28", "tar", "https", "://", "github", "com", "tensorflow", "models", "blob", "master", "research", "object_detection", "samples", "configs", "ssd_inception_v2_pets", "config", "Model", "works", "well", "produces", "accurate", "results", "After", "converting", "tflite", "loading", "mobile", "camera", "view", "shows", "incorrect", "detection", "several", "detection", "class", "fixed", "place", "even", "moving", "camera", "This", "trying", "resolve", "issue", "35179", "boringssl", "latest", "version", "The", "old", "version", "7f63442", "released", "one", "half", "year", "ago", "time", "update", "This", "updates", "boringssl", "latest", "80ca9f9", "This", "fixes", "35179", "Signed", "Yong", "Tang", "yong", "tang", "github", "outlook", "com", "Add", "TfLite", "micro", "ExpandDims", "reference", "kernel", "tests", "int8", "uint8", "float32", "Signed", "SiCongLi", "sicong", "arm", "com", "Dear", "point", "DropoutWrapper", "use", "Recurrent", "Neural", "Networks", "Due", "possibility", "dropout", "applied", "state", "output", "state_keep_prob", "output_keep_prob", "I", "found", "recurrent", "process", "state", "propagated", "time", "take", "values", "bounded", "interval", "1", "].", "This", "probably", "due", "way", "dropout", "implemented", "training", "time", "scaling", "instead", "testing", "time", "expectation", "Since", "dropout", "applied", "activation", "e", "tanh", "feature", "values", "range", "inf", "inf", "This", "point", "bit", "strange", "since", "current", "implementation", "induce", "exploding", "gradient", "issues", "GRU", "LSTM", "process", "cells", "introduced", "deal", "vanishing", "well", "exploding", "gradients", "Please", "could", "supply", "feedback", "issue", "since", "practically", "impact", "people", "commonly", "employ", "Wrapper", "induces", "behaviours", "divergent", "r", "theoretical", "behaviour", "RNN", "GRU", "LSTM", "All", "best", "System", "information", "OS", "Platform", "Windows10", "TensorFlow", "installed", "source", "TensorFlow", "version", "13", "Python", "version", "Bazel", "version", "compiling", "source", "GCC", "Compiler", "version", "msvc14", "Describe", "problem", "want", "build", "tensorflow", "source", "using", "command", "bazel", "build", "opt", "config", "mkl", "config", "monolithic", "linkopt", "=\"/", "FORCE", "MULTIPLE", "define", "no_tensorflow_py_deps", "true", "tensorflow", "libtensorflow_cc", "tensorflow", "install_headers", "tensorflow", "tools", "lib_package", "libtensorflow", "verbose_failures", "However", "dll", "file", "generated", "symbol", "inside", "dll", "paste", "error", "As", "far", "know", "problem", "accured", "number", "symbol", "limited", "windows", "functions", "tensorflow", "source", "exported", "_check", "exported", "function", "using", "dumpbin", "exe", "EXPORT", "weird", "3000", "symbols", "exported", "_", "tfwrapper", "obj", "error", "LNK2001", "unresolved", "external", "symbol", "class", "tensorflow", "Output", "__cdecl", "tensorflow", "ops", "Const", "class", "tensorflow", "Scope", "const", "struct", "tensorflow", "Input", "Initializer", "const", "&)\"", "Const", "ops", "tensorflow", "YA", "AVOutput", "AEBVScope", "AEBUInitializer", "Input", "tfwrapper", "obj", "error", "LNK2001", "unresolved", "external", "symbol", "public", "__cdecl", "tensorflow", "ops", "DecodePng", "DecodePng", "class", "tensorflow", "Scope", "const", "class", "tensorflow", "Input", "struct", "tensorflow", "ops", "DecodePng", "Attrs", "const", "&)\"", "0DecodePng", "ops", "tensorflow", "QEAA", "AEBVScope", "VInput", "AEBUAttrs", "012", ")`", "tfwrapper", "obj", "error", "LNK2001", "unresolved", "external", "symbol", "public", "__cdecl", "tensorflow", "ops", "Placeholder", "Placeholder", "class", "tensorflow", "Scope", "const", "enum", "tensorflow", "DataType", "(?", "0Placeholder", "ops", "tensorflow", "QEAA", "AEBVScope", "W4DataType", ")`", "solving", "issue", "work", "two", "idea", "first", "one", "using", "def_file_filter", "tpl", "may", "know", "file", "add", "missed", "symbol", "like", "paste", "reconfigure", "recompile", "source", "guess", "But", "solution", "export", "missing", "symbol", "Header", "def", "file", "def_fp", "write", "LIBRARY", "args", "target", "def_fp", "write", "EXPORTS", "def_fp", "write", "(\"\\", "1OpDef", "tensorflow", "UEAA", "n", "def_fp", "write", "(\"\\", "0DecodePng", "ops", "tensorflow", "QEAA", "AEBVScope", "VInput", "AEBUAttrs", "012", "Z", "\\", "n", "\")", "def_fp", "write", "(\"\\", "6tensorflow", "@@", "YAAEAV", "basic_ostream", "?$", "char_traits", "std", "@@@", "std", "@@", "AEAV12", "AEBVStatus", "0", "@@", "Z", "\\", "n", "\")`", "I", "solve", "problem", "using", "method", "I", "use", "another", "Idea", "I", "got", "Idea", "ashley", "tharp", "see", "great", "work", "link", "https", "://", "github", "com", "robosina", "stuff", "tree", "master", "tensorflow", "build_tensorflow_1", "14_source_for_Windows", "workaround", "solve", "problems", "Main", "idea", "add", "TF_EXPORT", "macro", "function", "names", "force", "symbol", "include", "dll", "file", "problem", "raised", "DecodePng", "file", "function", "tensorflow", "source", "->`", "tensorflow", "core", "kernels", "decode_image_op", "function", "signature", "void", "DecodePng", "OpKernelContext", "context", "StringPiece", "input", "I", "find", "But", "examples", "tensorflow", "see", "way", "read", "png", "files", "image_reader", "DecodePng", "root", "WithOpName", "png_reader", "\"),", "file_reader", "DecodePng", "Channels", "wanted_channels", "));", "two", "function", "I", "find", "function", "tensorflow", "source", "code", "I", "add", "TF_EXPORT", "macro", "possible", "use", "function", "present", "source", "code", "So", "I", "look", "bazel", "genereated", "files", "function", "`", "bazel", "source", "bazel", "x64_windows", "opt", "genfiles", "tensorflow", "ops", "image_ops", "`)", "DecodePng", "const", "tensorflow", "Scope", "scope", "tensorflow", "Input", "contents", "DecodePng", "const", "tensorflow", "Scope", "scope", "tensorflow", "Input", "contents", "const", "DecodePng", "Attrs", "attrs", "I", "know", "exactly", "bazel", "created", "add", "`", "TF_EXPORT", "`", "macro", "(", "files", "machine", "generated", "files", "add", "TF_EXPORT", "overwritten", "compile", "time", "###", "System", "information", "OS", "Platform", "Distribution", "Linux", "Ubuntu", "04", "Mobile", "device", "G7", "TensorFlow", "installed", "source", "binary", "Source", "TensorFlow", "version", "Python", "version", "5", "Bazel", "version", "24", "Android", "NDK", "version", "r17c", "GCC", "Compiler", "version", "compiling", "source", "GCC", "8", "###", "Describe", "problem", "Built", "Tensorflow", "lite", "source", "inference", "times", "slower", "original", "What", "mean", "original", "prebuilt", "tensorflow", "lite", "downloaded", "Maven", "repository", "For", "example", "model", "originally", "costs", "ms", "GPU", "takes", "ms", "tried", "different", "versions", "Tensorflow", "Android", "NDK", "resulted", "Below", "process", "done", "build", "tensorflow", "lite", "libraries", "Download", "Tensorflow", "source", "code", "github", "```", "shell", "git", "clone", "https", "://", "github", "com", "tensorflow", "tensorflow", "git", "git", "checkout", "```", "Download", "Android", "NDK", "install", "standalone", "toolchains", "Download", "NDK", "r17c", "](", "https", "://", "developer", "android", "com", "ndk", "downloads", "older_releases", "html", "Extract", "files", "move", "Android", "Sdk", "directory", "```", "shell", "cd", "Android", "Sdk", "android", "ndk", "r17c", "python", "build", "tools", "make_standalone_toolchain", "arch", "arm64", "api", "export", "ANDROID_NDK", "path", "ndk", "export", "ANDROID_NDK_HOME", "ANDROID_NDK", "```", "3", "Download", "install", "Bazel", "Download", "installer", "script", "](", "https", "://", "github", "com", "bazelbuild", "bazel", "releases", "24", ").", "```", "shell", "cd", "path", "download", "chmod", "bazel", "24", "installer", "linux", "x86_64", "bazel", "24", "1", "installer", "linux", "x86_64", "user", "```", "4", "Build", "tensorflow", "lite", "aar", "tensorflow", "lite", "gpu", "aar", "```", "shell", "cd", "tensorflow", "configure", "$", "bazel", "build", "cxxopt", "='--", "std", "11", "opt", "fat_apk_cpu", "arm64", "v8a", "armeabi", "v7a", "tensorflow", "lite", "java", "tensorflow", "lite", "$", "bazel", "build", "--", "cxxopt", "='--", "std", "c", "11", "c", "opt", "--", "fat_apk_cpu", "arm64", "v8a", "armeabi", "v7a", "tensorflow", "lite", "java", "tensorflow", "lite", "gpu", "```", "`./", "configure", "set", "support", "question", "leave", "others", "default", "Configuration", "Value", "---", "---", "XLA", "JIT", "support", "No", "OpenCL", "SYCL", "support", "No", "ROCm", "support", "No", "CUDA", "support", "No", "Fresh", "released", "clang", "No", "MPI", "support", "No", "Bazel", "comilation", "option", "Default", "Android", "./", "WORKSPACE", "configuration", "|", "Yes", "|", "|", "Android", "NDK", "API", "level", "|", "22", "|", "|", "Android", "SDK", "path", "|", "Default", "|", "|", "Android", "SDK", "API", "level", "|", "Default", "29", "|", "|", "Android", "build", "tools", "version", "|", "Default", "29", "|", "5", "Import", "libraries", "Android", "project", "Copy", "generated", "aar", "files", "Android", "project", "change", "build", "gradle", "file", "```", "gradle", "dependencies", "...", "implementation", "files", "libs", "tensorflow", "lite", "aar", "implementation", "files", "libs", "tensorflow", "lite", "gpu", "aar", "implementation", "org", "tensorflow", "tensorflow", "lite", "2", "0", "0", "implementation", "org", "tensorflow", "tensorflow", "lite", "gpu", "2", "0", "0", "}", "```", "Any", "suggestion", "help", "appreciated", "Thanks", "advance", "like", "understand", "performance", "issue", "faced", "Why", "TF2", "TRT6", "keras", "slower", "TF1", "keras", "times", "GPU", "K80", "TF1", "keras", "separate", "package", "TF2", "TRT6", "integrated", "integrated", "keras", "example", "TF2", "times", "slower", "waiting", "acceleration", "training", "predition", "new", "version", "TRT", "integration", "System", "information", "Have", "written", "custom", "code", "opposed", "using", "stock", "example", "script", "provided", "TensorFlow", "Yes", "Platform", "Distribution", "e", ".,", "Linux", "Ubuntu", "04", "Ubuntu", "04", "LTS", "docker", "container", "Mobile", "device", "e", "iPhone", "Pixel", "Samsung", "Galaxy", "issue", "happens", "mobile", "device", "TensorFlow", "installed", "source", "binary", "pip", "wheel", "TensorFlow", "version", "use", "command", "Python", "version", "Bazel", "version", "compiling", "source", "GCC", "Compiler", "version", "compiling", "source", "CUDA", "cuDNN", "version", "NA", "GPU", "model", "memory", "NA", "Describe", "current", "behavior", "The", "training", "due", "low", "layer", "system", "call", "corrupted", "size", "prev_size", "process", "immediately", "corrupted", "without", "much", "log", "trace", "Describe", "expected", "behavior", "estimator", "BoostedTreesRegressor", "trained", "normal", "Code", "reproduce", "issue", "```", "import", "import", "uuid", "import", "json", "import", "StringIO", "import", "pandas", "import", "tensorflow", "sklearn", "model_selection", "import", "train_test_split", "tensorflow", "estimator", "import", "BoostedTreesRegressor", "def", "split_data", "DataFrame", "->", "DataFrame", "DataFrame", "DataFrame", "DataFrame", "\"\"\"", "Split", "data", "train", "test", "sets", "Args", "DataFrame", "pandas", "dataframe", "Returns", "X_train", "X_test", "y_train", "y_test", "\"\"\"", "feature_cols", "columns", "startswith", "FEATURE", "')]", "label_col", "columns", "startswith", "LABEL", "')]", "return", "train_test_split", "feature_cols", "label_col", "test_size", "random_state", "42", "def", "make_input_fn", "X", "n_epochs", "None", "shuffle", "True", "def", "input_fn", "():", "dataset", "data", "Dataset", "from_tensor_slices", "dict", "X", "))", "shuffle", "dataset", "dataset", "shuffle", "len", "))", "dataset", "dataset", "repeat", "n_epochs", "dataset", "dataset", "batch", "len", "))", "return", "dataset", "return", "input_fn", "def", "make_serving_receiver_fn", "DataFrame", "feature_col_names", "df", "columns", "startswith", "FEATURE", "')]", "feature_cols", "[", "feature_column", "numeric_column", "fc", "fc", "feature_col_names", "feature_spec", "feature_column", "make_parse_example_spec", "feature_cols", "return", "estimator", "export", "build_parsing_serving_input_receiver_fn", "feature_spec", "def", "train_model", "df", "pd", "DataFrame", "params", "->", "BoostedTreesRegressor", "dict", "dict", "\"\"\"", "Train", "Boost", "Tree", "Args", "df", "DataFrame", "pandas", "dataframe", "params", "(**", "dict", "parameters", "training", "Returns", "BoostTreesRegressor", "saved", "model", "dir", "dict", "containing", "evaluation", "metrics", "\"\"\"", "feature_col_names", "[", "c", "df", "columns", "c", "startswith", "FEATURE", "')]", "label_col_name", "[", "c", "c", "df", "columns", "c", "startswith", "LABEL", "')]", "feature_cols", "[", "feature_column", "numeric_column", "fc_name", "fc_name", "feature_col_names", "default_params", "feature_columns", "feature_cols", "n_batches_per_layer", "1", "model_dir", "os", "path", "join", "('../", "output", "str", "uuid", "uuid4", "())),", "default_params", "update", "params", "regressor", "BoostedTreesRegressor", "(**", "default_params", "X_train", "X_valid", "y_train", "y_valid", "train_test_split", "df", "[", "feature_col_names", "df", "[", "label_col_name", "test_size", "random_state", "42", "train_input_fn", "make_input_fn", "X_train", "y_train", "evaluate_input_fn", "make_input_fn", "X_valid", "y_valid", "n_epochs", "1", "regressor", "train", "input_fn", "train_input_fn", "summary", "regressor", "evaluate", "input_fn", "evaluate_input_fn", "receiver_fn", "make_serving_receiver_fn", "df", "export_dir", "regressor", "export_saved_model", "regressor", "model_dir", "receiver_fn", "summary", "float", "k", "v", "summary", "items", "()}", "return", "regressor", "export_dir", "summary", "```", "Other", "info", "logs", "**", "No", "problem", "environment", "__OSX", "14", "5__", "__pyenv", "virtualenv", "default", "Nov", "2019", "39", "n", "[", "Clang", "clang", "1100", "33", ")]", "No", "problem", "use", "google", "colab", "runtime", "__Ubuntu", "04", "LTS", "Python", "compiled", "GCC", "0__", "See", "[", "notebook", "shared", "https", "://", "colab", "research", "google", "com", "drive", "1aAjJCWOBd7R0Hb6w4d7UCSnkfk4c", "xyE", "__", "Same", "problem", "Kaggle", "runtime", "__Debian", "GNU", "Linux", "Python", "3", "Anaconda", "GCC", "7", "3", "0__", "using", "tensorflow", "0", "Full", "error", "log", "docker", "using", "official", "image", "__tensorflow", "tensorflow", "2", "0", "0", "py3__", "```", "WARNING", "Logging", "flag", "parsing", "goes", "stderr", "I1216", "01", "775628", "140590360139584", "estimator", "1800", "Using", "default", "config", "I1216", "01", "778364", "140590360139584", "estimator", "212", "Using", "config", "_model_dir", "'/", "app", "WINDMIL_PoC_Data_FE", "service", "estimator", "saved_model", "8f979f53", "4821", "4def", "bc6e", "9692d868e2ea", "_tf_random_seed", "None", "_save_summary_steps", "100", "_save_checkpoints_steps", "None", "_save_checkpoints_secs", "600", "_session_config", "allow_soft_placement", "true", "graph_options", "{", "rewrite_options", "{", "meta_optimizer_iterations", "ONE", "_keep_checkpoint_max", "5", "_keep_checkpoint_every_n_hours", "10000", "_log_step_count_steps", "100", "_train_distribute", "None", "_device_fn", "None", "_protocol", "None", "_eval_distribute", "None", "_experimental_distribute", "None", "_experimental_max_worker_delay_secs", "None", "_session_creation_timeout_secs", "7200", "_service", "None", "_cluster_spec", "<", "tensorflow", "python", "training", "server_lib", "ClusterSpec", "object", "0x7fdd837c5d30", "_task_type", "worker", "_task_id", "0", "_global_id_in_cluster", "0", "_master", "'',", "_evaluation_master", "'',", "_is_chief", "True", "_num_ps_replicas", "0", "_num_worker_replicas", "1", "}", "W1216", "01", "809657", "140590360139584", "deprecation", "506", "From", "usr", "local", "lib", "python3", "6", "dist", "packages", "tensorflow_core", "python", "ops", "resource_variable_ops", "1630", "calling", "BaseResourceVariable", "__init__", "tensorflow", "python", "ops", "resource_variable_ops", "constraint", "deprecated", "removed", "future", "version", "Instructions", "updating", "using", "Keras", "pass", "_constraint", "arguments", "layers", "W1216", "01", "811977", "140590360139584", "deprecation", "323", "From", "usr", "local", "lib", "python3", "6", "dist", "packages", "tensorflow_core", "python", "training", "training_util", "236", "Variable", "initialized_value", "tensorflow", "python", "ops", "variables", "deprecated", "removed", "future", "version", "Instructions", "updating", "Use", "Variable", "read_value", "Variables", "2", "X", "initialized", "automatically", "eager", "graph", "inside", "tf", "defun", "contexts", "I1216", "01", "888739", "140590360139584", "estimator", "1147", "Calling", "model_fn", "W1216", "01", "968535", "140590360139584", "deprecation", "323", "From", "usr", "local", "lib", "python3", "6", "dist", "packages", "tensorflow_estimator", "python", "estimator", "canned", "head", "437", "to_float", "(", "tensorflow", "python", "ops", "math_ops", "deprecated", "removed", "future", "version", "Instructions", "updating", "Use", "tf", "cast", "instead", "I1216", "01", "278414", "140590360139584", "estimator", "1149", "Done", "calling", "model_fn", "I1216", "01", "278981", "140590360139584", "basic_session_run_hooks", "541", "Create", "CheckpointSaverHook", "W1216", "01", "327183", "140590360139584", "meta_graph", "448", "Issue", "encountered", "serializing", "resources", "Type", "unsupported", "types", "items", "match", "field", "type", "CollectionDef", "Note", "warning", "probably", "safe", "ignore", "_Resource", "object", "attribute", "name", "I1216", "01", "468171", "140590360139584", "monitored_session", "240", "Graph", "finalized", "2019", "16", "01", "468761", "tensorflow", "core", "platform", "cpu_feature_guard", "142", "Your", "CPU", "supports", "instructions", "TensorFlow", "binary", "compiled", "use", "AVX2", "FMA", "2019", "16", "01", "475253", "tensorflow", "core", "platform", "profile_utils", "cpu_utils", "94", "CPU", "Frequency", "2904000000", "2019", "16", "01", "476582", "tensorflow", "compiler", "xla", "service", "service", "168", "XLA", "service", "0x4ed0210", "executing", "computations", "platform", "Host", "Devices", "2019", "16", "01", "476657", "tensorflow", "compiler", "xla", "service", "service", "175", "StreamExecutor", "device", "(", "0", "Host", "Default", "Version", "I1216", "01", "541273", "140590360139584", "session_manager", "500", "Running", "local_init_op", "I1216", "01", "561274", "140590360139584", "session_manager", "502", "Done", "running", "local_init_op", "W1216", "01", "960061", "140590360139584", "meta_graph", "448", "Issue", "encountered", "serializing", "resources", "Type", "unsupported", "types", "items", "match", "field", "type", "CollectionDef", "Note", "warning", "probably", "safe", "ignore", "_Resource", "object", "attribute", "name", "I1216", "01", "019694", "140590360139584", "basic_session_run_hooks", "606", "Saving", "checkpoints", "0", "app", "WINDMIL_PoC_Data_FE", "service", "estimator", "saved_model", "8f979f53", "4821", "4def", "bc6e", "9692d868e2ea", "model", "ckpt", "W1216", "01", "100714", "140590360139584", "meta_graph", "448", "Issue", "encountered", "serializing", "resources", "Type", "unsupported", "types", "items", "match", "field", "type", "CollectionDef", "Note", "warning", "probably", "safe", "ignore", "_Resource", "object", "attribute", "name", "I1216", "01", "385114", "140590360139584", "basic_session_run_hooks", "262", "loss", "0", "017109463", "step", "0", "W1216", "01", "594182", "140590360139584", "basic_session_run_hooks", "724", "It", "seems", "global", "step", "(", "tf", "train", "get_global_step", ")", "increased", "Current", "value", "(", "could", "stable", "0", "previous", "value", "0", "You", "could", "increase", "global", "step", "passing", "tf", "train", "get_global_step", "Optimizer", "apply_gradients", "Optimizer", "minimize", "corrupted", "size", "prev_size", "Aborted", "```", "System", "information", "Have", "written", "custom", "code", "opposed", "using", "stock", "example", "script", "provided", "TensorFlow", "Yes", "Platform", "Distribution", ".,", "Linux", "Ubuntu", "04", "Linux", "14", "106", "x86_64", "debian", "buster", "sid", "TensorFlow", "installed", "source", "binary", "pip", "install", "TensorFlow", "version", "use", "command", "2", "Python", "version", "Describe", "current", "behavior", "trying", "train", "model", "using", "2", "Keras", "functional", "API", "Feature", "columns", "DenseFeatures", "input", "layer", "data", "Dataset", "API", "parameter", "model", "fit", "This", "raises", "ValueError", "sure", "work", "even", "think", "minimal", "example", "suspect", "might", "due", "trying", "match", "feature", "columns", "inputs", "name", "name", "Input", "tensor", "contains", "suffix", "g", "age", "`,", "may", "well", "mistaken", "Might", "related", "https", "://", "github", "com", "tensorflow", "tensorflow", "issues", "30143", "Describe", "expected", "behavior", "expect", "able", "train", "model", "using", "Keras", "functional", "API", "using", "data", "Dataset", "API", "feature_columns", "fed", "Input", "layers", "Code", "reproduce", "issue", "The", "following", "test", "case", "represent", "use", "case", "reproduce", "problem", "Despite", "simplistic", "example", "suggests", "I", "explicitly", "require", "feature_columns", "functional", "API", "suggesting", "I", "use", "libraries", "would", "option", "unless", "I", "replicate", "functionality", "minimal", "effort", "```", "python", "import", "tensorflow", "import", "numpy", "tensorflow", "keras", "layers", "import", "DenseFeatures", "Dense", "Input", "def", "make_model", "features", "feature_columns", "feature_column", "numeric_column", "key", "key", "features", "nn_input", "{", "key", "Input", "name", "key", "shape", "=(),", "dtype", "float32", "key", "features", "feat", "DenseFeatures", "feature_columns", "nn_input", "dense", "Dense", "16", "feat", "output", "Dense", "dense", "model", "tf", "keras", "Model", "inputs", "nn_input", "outputs", "output", "model", "compile", "optimizer", "tf", "keras", "optimizers", "Adam", "learning_rate", "001", "loss", "tf", "keras", "losses", "BinaryCrossentropy", "from_logits", "False", "metrics", "tf", "keras", "metrics", "AUC", "()],", "return", "model", "features", "[\"", "age", "income", "label", "is_male", "input_dataset", "tf", "data", "Dataset", "from_tensor_slices", "{", "key", "ones", "1000", "dtype", "float", "key", "features", "target_dataset", "tf", "data", "Dataset", "from_tensor_slices", "{", "label", "np", "ones", "1000", "),", "dtype", "np", "int", "complete_dataset", "tf", "data", "Dataset", "zip", "input_dataset", "target_dataset", ")).", "shuffle", "10000", "model", "make_model", "features", "model", "summary", "model", "fit", "complete_dataset", "```", "This", "code", "references", "issue", "created", "durandg12", "Thank", "Stack", "trace", "```", "bash", "---------------------------------------------------------------------------", "KeyError", "Traceback", "recent", "call", "last", "opt", "conda", "lib", "python3", "site", "packages", "tensorflow_core", "python", "keras", "engine", "training_utils", "standardize_input_data", "data", "names", "shapes", "check_batch_axis", "exception_prefix", "498", "data", "__class__", "__name__", "DataFrame", "else", "data", "-->", "499", "names", "500", "opt", "conda", "lib", "python3", "site", "packages", "tensorflow_core", "python", "keras", "engine", "training_utils", "<", "listcomp", ">(.", "0", "498", "data", "__class__", "__name__", "DataFrame", "else", "data", "-->", "499", "names", "500", "KeyError", "dense_1", "During", "handling", "exception", "another", "exception", "occurred", "ValueError", "Traceback", "recent", "call", "last", "<", "ipython", "input", "1", "0081a84113eb", "<", "module", "27", "model", "make_model", "features", "28", "model", "summary", "--->", "model", "fit", "complete_dataset", "opt", "conda", "lib", "python3", "site", "packages", "tensorflow_core", "python", "keras", "engine", "training", "fit", "self", "batch_size", "epochs", "verbose", "callbacks", "validation_split", "validation_data", "shuffle", "class_weight", "sample_weight", "initial_epoch", "steps_per_epoch", "validation_steps", "validation_freq", "max_queue_size", "workers", "use_multiprocessing", "kwargs", "726", "max_queue_size", "max_queue_size", "727", "workers", "workers", "-->", "728", "use_multiprocessing", "use_multiprocessing", "729", "730", "def", "evaluate", "self", "opt", "conda", "lib", "python3", "site", "packages", "tensorflow_core", "python", "keras", "engine", "training_v2", "fit", "self", "model", "batch_size", "epochs", "verbose", "callbacks", "validation_split", "validation_data", "shuffle", "class_weight", "sample_weight", "initial_epoch", "steps_per_epoch", "validation_steps", "validation_freq", "kwargs", "322", "mode", "ModeKeys", "TRAIN", "323", "training_context", "training_context", "-->", "324", "total_epochs", "epochs", "325", "cbks", "make_logs", "model", "epoch_logs", "training_result", "ModeKeys", "TRAIN", "326", "opt", "conda", "lib", "python3", "site", "packages", "tensorflow_core", "python", "keras", "engine", "training_v2", "run_one_epoch", "model", "iterator", "execution_function", "dataset_size", "batch_size", "strategy", "steps_per_epoch", "num_samples", "mode", "training_context", "total_epochs", "121", "step", "step", "mode", "mode", "size", "current_batch_size", "batch_logs", "122", "try", "-->", "123", "batch_outs", "execution_function", "iterator", "124", "except", "StopIteration", "errors", "OutOfRangeError", "125", "TODO", "kaftan", "File", "bug", "tf", "function", "errors", "OutOfRangeError", "opt", "conda", "lib", "python3", "site", "packages", "tensorflow_core", "python", "keras", "engine", "training_v2_utils", "execution_function", "input_fn", "84", "numpy", "translates", "Tensors", "values", "Eager", "mode", "return", "nest", "map_structure", "_non_none_constant_value", "--->", "distributed_function", "input_fn", "87", "return", "execution_function", "opt", "conda", "lib", "python3", "site", "packages", "tensorflow_core", "python", "eager", "def_function", "__call__", "self", "args", "kwds", "455", "456", "tracing_count", "self", "_get_tracing_count", "-->", "457", "result", "self", "_call", "args", "kwds", "458", "tracing_count", "self", "_get_tracing_count", "():", "459", "self", "_call_counter", "called_without_tracing", "opt", "conda", "lib", "python3", "site", "packages", "tensorflow_core", "python", "eager", "def_function", "_call", "self", "args", "kwds", "501", "This", "first", "call", "__call__", "initialize", "502", "initializer_map", "object_identity", "ObjectIdentityDictionary", "-->", "503", "self", "_initialize", "args", "kwds", "add_initializers_to", "initializer_map", "504", "finally", "505", "At", "point", "know", "initialization", "complete", "less", "opt", "conda", "lib", "python3", "site", "packages", "tensorflow_core", "python", "eager", "def_function", "_initialize", "self", "args", "kwds", "add_initializers_to", "406", "self", "_concrete_stateful_fn", "407", "self", "_stateful_fn", "_get_concrete_function_internal_garbage_collected", "pylint", "disable", "protected", "access", "-->", "408", "args", "kwds", "409", "410", "def", "invalid_creator_scope", "unused_args", "unused_kwds", "opt", "conda", "lib", "python3", "site", "packages", "tensorflow_core", "python", "eager", "function", "_get_concrete_function_internal_garbage_collected", "self", "args", "kwargs", "1846", "self", "input_signature", "1847", "args", "kwargs", "None", "None", "1848", "graph_function", "_", "self", "_maybe_define_function", "args", "kwargs", "1849", "return", "graph_function", "1850", "opt", "conda", "lib", "python3", "site", "packages", "tensorflow_core", "python", "eager", "function", "_maybe_define_function", "self", "args", "kwargs", "2148", "graph_function", "self", "_function_cache", "primary", "get", "cache_key", "None", "2149", "graph_function", "None", "2150", "graph_function", "self", "_create_graph_function", "args", "kwargs", "2151", "self", "_function_cache", "primary", "cache_key", "graph_function", "2152", "return", "graph_function", "args", "kwargs", "opt", "conda", "lib", "python3", "site", "packages", "tensorflow_core", "python", "eager", "function", "_create_graph_function", "self", "args", "kwargs", "override_flat_arg_shapes", "2039", "arg_names", "arg_names", "2040", "override_flat_arg_shapes", "override_flat_arg_shapes", "2041", "capture_by_value", "self", "_capture_by_value", "),", "2042", "self", "_function_attributes", "2043", "Tell", "ConcreteFunction", "clean", "graph", "goes", "opt", "conda", "lib", "python3", "site", "packages", "tensorflow_core", "python", "framework", "func_graph", "func_graph_from_py_func", "name", "python_func", "args", "kwargs", "signature", "func_graph", "autograph", "autograph_options", "add_control_dependencies", "arg_names", "op_return_value", "collections", "capture_by_value", "override_flat_arg_shapes", "913", "converted_func", "914", "-->", "915", "func_outputs", "python_func", "func_args", "func_kwargs", "916", "917", "invariant", "func_outputs", "contains", "Tensors", "CompositeTensors", "opt", "conda", "lib", "python3", "site", "packages", "tensorflow_core", "python", "eager", "def_function", "wrapped_fn", "args", "kwds", "356", "__wrapped__", "allows", "AutoGraph", "swap", "converted", "function", "give", "357", "function", "weak", "reference", "avoid", "reference", "cycle", "-->", "358", "return", "weak_wrapped_fn", "().", "__wrapped__", "args", "kwds", "359", "weak_wrapped_fn", "weakref", "ref", "wrapped_fn", "360", "opt", "conda", "lib", "python3", "site", "packages", "tensorflow_core", "python", "keras", "engine", "training_v2_utils", "distributed_function", "input_iterator", "71", "strategy", "distribution_strategy_context", "get_strategy", "72", "outputs", "strategy", "experimental_run_v2", "--->", "per_replica_function", "args", "model", "x", "sample_weights", "74", "Out", "PerReplica", "outputs", "reduce", "pick", "values", "return", "all_outputs", "dist_utils", "unwrap_output_dict", "opt", "conda", "lib", "python3", "site", "packages", "tensorflow_core", "python", "distribute", "distribute_lib", "experimental_run_v2", "self", "args", "kwargs", "758", "autograph", "tf_convert", "ag_ctx", "control_status_ctx", "(),", "759", "convert_by_default", "False", "-->", "760", "return", "self", "_extended", "call_for_each_replica", "args", "args", "kwargs", "kwargs", "761", "762", "def", "reduce", "self", "reduce_op", "value", "axis", "opt", "conda", "lib", "python3", "site", "packages", "tensorflow_core", "python", "distribute", "distribute_lib", "call_for_each_replica", "self", "args", "kwargs", "1785", "kwargs", "{}", "1786", "self", "_container_strategy", "().", "scope", "():", "1787", "return", "self", "_call_for_each_replica", "args", "kwargs", "1788", "1789", "def", "_call_for_each_replica", "self", "fn", "args", "kwargs", "opt", "conda", "lib", "python3", "site", "packages", "tensorflow_core", "python", "distribute", "distribute_lib", "_call_for_each_replica", "self", "fn", "args", "kwargs", "2130", "self", "_container_strategy", "(),", "2131", "replica_id_in_sync_group", "constant_op", "constant", "0", "dtypes", "int32", ")):", "2132", "return", "fn", "args", "kwargs", "2133", "2134", "def", "_reduce_to", "self", "reduce_op", "value", "destinations", "opt", "conda", "lib", "python3", "site", "packages", "tensorflow_core", "python", "autograph", "impl", "api", "wrapper", "args", "kwargs", "290", "def", "wrapper", "args", "kwargs", "291", "ag_ctx", "ControlStatusCtx", "status", "ag_ctx", "Status", "DISABLED", "-->", "292", "return", "func", "(*", "args", "**", "kwargs", "293", "294", "inspect", "isfunction", "func", "inspect", "ismethod", "func", "opt", "conda", "lib", "python3", "site", "packages", "tensorflow_core", "python", "keras", "engine", "training_v2_utils", "train_on_batch", "model", "x", "sample_weight", "class_weight", "reset_metrics", "251", "x", "sample_weights", "model", "_standardize_user_data", "252", "x", "sample_weight", "sample_weight", "class_weight", "class_weight", "-->", "253", "extract_tensors_from_dataset", "True", ")", "254", "batch_size", "array_ops", "shape", "nest", "flatten", "x", "expand_composites", "True", "0", "])[", "0", "255", "If", "model", "_distribution_strategy", "True", "replica", "context", "opt", "conda", "lib", "python3", "site", "packages", "tensorflow_core", "python", "keras", "engine", "training", "_standardize_user_data", "self", "x", "sample_weight", "class_weight", "batch_size", "check_steps", "steps_name", "steps", "validation_split", "shuffle", "extract_tensors_from_dataset", ")", "2517", "shapes", "=", "None", "2518", "check_batch_axis", "=", "False", "Don", "enforce", "batch", "size", "2519", "exception_prefix", "target", "2520", "2521", "#", "Generate", "sample", "wise", "weight", "values", "given", "sample_weight", "`", "opt", "conda", "lib", "python3", "6", "site", "packages", "tensorflow_core", "python", "keras", "engine", "training_utils", "standardize_input_data", "data", "names", "shapes", "check_batch_axis", "exception_prefix", ")", "501", "except", "KeyError", "e", "502", "raise", "ValueError", "data", "provided", "e", "args", "0", "]", "'\".", "Need", "data", "-->", "503", "key", "str", "names", "504", "elif", "isinstance", "data", "list", "tuple", ")):", "505", "isinstance", "(", "data", "[", "0", "(", "list", "tuple", ")):", "ValueError", "No", "data", "provided", "dense_1", "Need", "data", "key", "dense_1", "```", "System", "information", "Have", "written", "custom", "code", "opposed", "using", "stock", "example", "script", "provided", "TensorFlow", "No", "Platform", "Distribution", "e", ".,", "Linux", "Ubuntu", "04", "Windows", "Mobile", "device", "e", "iPhone", "Pixel", "Samsung", "Galaxy", "issue", "happens", "mobile", "device", "TensorFlow", "installed", "source", "binary", "Binary", "pip", "TensorFlow", "version", "use", "command", "v2", "rc2", "g64c3d382ca", "0", "0", "Python", "version", "Python", "6", "Bazel", "version", "compiling", "source", "NA", "GCC", "Compiler", "version", "compiling", "source", "NA", "CUDA", "cuDNN", "version", "CUDA", "0", "130_411", ";", "cuDNN", "0", "6", "32", "GPU", "model", "memory", "NVIDIA", "Quadro", "P2000", "GB", "Describe", "current", "behavior", "When", "model", "saved", "default", "format", "warnings", "logged", "trying", "serve", "model", "Examplary", "warning", "logs", "```", "WARNING", "tensorflow", "last", "calls", "function", "recreate_function", "locals", "restored_function_body", "0x000001ED79058730", "triggered", "function", "retracing", "Tracing", "expensive", "excessive", "number", "tracings", "likely", "due", "passing", "python", "objects", "instead", "tensors", "Also", "function", "experimental_relax_shapes", "True", "option", "relaxes", "argument", "shapes", "avoid", "unnecessary", "retracing", "Please", "refer", "https", "://", "www", "tensorflow", "org", "beta", "tutorials", "eager", "tf_function", "python_or_tensor_args", "https", "://", "www", "tensorflow", "org", "api_docs", "python", "function", "details", "```", "When", "model", "saved", "hdf5", "format", "warnings", "occur", "Describe", "expected", "behavior", "The", "save", "formats", "equivalent", "behave", "way", "Code", "reproduce", "issue", "Execute", "following", "scripts", "create", "serve", "model", "Run", "first", "script", "format_ext", "''`", "saves", "model", "format", "restart", "Python", "console", "**,", "serve", "model", "second", "script", "creates", "aforementioned", "warnings", "When", "running", "scripts", "format_ext", "'.", "'`,", "model", "saved", "hdf5", "format", "warnings", "appear", "Model", "creation", "```", "python", "import", "import", "tensorflow", "format_ext", "''", "'.", "empty", "format", "model_path", "path", "join", "mnist", "classifier", "{}'.", "format", "format_ext", "gpus", "config", "experimental", "list_physical_devices", "GPU", "config", "experimental", "set_virtual_device_configuration", "gpus", "0", "config", "experimental", "VirtualDeviceConfiguration", "memory_limit", "512", "config", "experimental", "VirtualDeviceConfiguration", "memory_limit", "512", "tf", "config", "experimental", "VirtualDeviceConfiguration", "memory_limit", "512", "strategy", "tf", "distribute", "MirroredStrategy", "strategy", "scope", "():", "inputs", "tf", "keras", "Input", "shape", "784", ",),", "name", "digits", "tf", "keras", "layers", "Dense", "64", "activation", "relu", "name", "dense_1", "')(", "inputs", "tf", "keras", "layers", "Dense", "64", "activation", "relu", "name", "dense_2", "')(", "x", "outputs", "tf", "keras", "layers", "Dense", "10", "activation", "softmax", "',", "name", "predictions", "')(", "x", "model", "tf", "keras", "Model", "inputs", "inputs", "outputs", "outputs", "model", "compile", "optimizer", "tf", "keras", "optimizers", "RMSprop", "(),", "Optimizer", "Loss", "function", "minimize", "loss", "tf", "keras", "losses", "SparseCategoricalCrossentropy", "(),", "List", "metrics", "monitor", "metrics", "tf", "keras", "metrics", "SparseCategoricalAccuracy", "()])", "model", "save", "model_path", ")", "```", "Model", "serving", "```", "python", "import", "os", "import", "tensorflow", "tf", "format_ext", "''", "'.", "empty", "tf", "format", "model_path", "os", "path", "join", "',", "mnist", "classifier", "{}'.", "format", "format_ext", "gpus", "tf", "config", "experimental", "list_physical_devices", "GPU", "tf", "config", "experimental", "set_virtual_device_configuration", "gpus", "[", "0", "[", "tf", "config", "experimental", "VirtualDeviceConfiguration", "memory_limit", "512", "tf", "config", "experimental", "VirtualDeviceConfiguration", "memory_limit", "512", "tf", "config", "experimental", "VirtualDeviceConfiguration", "memory_limit", "512", ")", "),", "x_test", "_", ")", "tf", "keras", "datasets", "mnist", "load_data", "x_test", "x_test", "reshape", "10000", "784", "astype", "float32", "255", "strategy", "tf", "distribute", "MirroredStrategy", "strategy", "scope", "():", "loaded_model", "tf", "keras", "models", "load_model", "model_path", ")", "predictions", "loaded_model", "predict", "x_test", "batch_size", "64", ")", "```", "Other", "info", "logs", "The", "warnings", "occur", "two", "vGPUs", "used", "TensorFlow", "version", "using", "2", "Are", "willing", "contribute", "Yes", "):", "Yes", "```", "keras", "backend", "floatx", "float64", "f64", "Variable", "2", "0", "7", "dtype", "float64", "f64", "0", "1", "0", "<", "Tensor", "shape", ",),", "dtype", "float32", "numpy", "array", "0", "0", "0", "1", "1", "],", "dtype", "float32", "```", "alternatives", "float64", "models", "lead", "difficult", "read", "code", "```", "tf", "f64", "0", "tf", "constant", "1", "dtype", "tf", "float64", "tf", "constant", "0", "dtype", "tf", "float64", "tf", "cast", "tf", "(", "f64", "0", "5", "1", "0", "dtype", "tf", "float64", "```", "assuming", "tf", "respect", "float", "type", "input", "variable", "floatx", "setting", "change", "api", "better", "would", "```", "tf", "(", "f64", "0", "5", "1", "0", "dtype", "=", "tf", "float64", ")", "```", "em", "Please", "make", "sure", "build", "installation", "issue", "per", "GitHub", "Policy", "https", "://", "github", "com", "tensorflow", "tensorflow", "blob", "master", "ISSUES", "),", "address", "code", "doc", "bugs", "performance", "issues", "feature", "requests", "build", "installation", "issues", "GitHub", "tag", "build_template", "em", "System", "information", "OS", "Platform", "Distribution", "Ubuntu", "04", "LTS", "TensorFlow", "installed", "source", "binary", "source", "TensorFlow", "version", "rc1", "building", "using", "docker", "image", "raspberry", "build", "Describe", "problem", "able", "correctly", "build", "tensorflow", "1", "0rc1", "cp35", "none", "linux_armv7l", "whl", "using", "```", "CI_DOCKER_EXTRA_PARAMS", "=\"-", "CI_BUILD_PYTHON", "python3", "CROSSTOOL_PYTHON_INCLUDE_PATH", "usr", "include", "python3", "tensorflow", "tools", "ci_build", "ci_build", "PI", "PYTHON3", "tensorflow", "tools", "ci_build", "build_raspberry_pi", "```", "I", "trying", "python", "3", "7", "docker", "images", "PI", "PYTHON37", "(`", "tensorflow", "tools", "ci_build", "Dockerfile", "python37", "fails", "```", "ERROR", "workspace", "tensorflow", "lite", "python", "interpreter_wrapper", "BUILD", "1", "++", "compilation", "rule", "'//", "tensorflow", "lite", "python", "interpreter_wrapper", "numpy", "failed", "Exit", "1", ")", "cc1plus", "warning", "command", "line", "option", "std", "gnu11", "valid", "ObjC", "++", "file", "included", "bazel", "armeabi", "py2", "opt", "bin", "external", "local_config_python", "python_include", "Python", "8", "./", "tensorflow", "lite", "python", "interpreter_wrapper", "numpy", "49", "tensorflow", "lite", "python", "interpreter_wrapper", "numpy", "17", "bazel", "armeabi", "py2", "opt", "bin", "external", "local_config_python", "python_include", "pyconfig", "13", "fatal", "error", "arm", "linux", "gnueabihf", "python3", "pyconfig", "No", "file", "directory", "include", "arm", "linux", "gnueabihf", "python3", "pyconfig", ">", "compilation", "terminated", "INFO", "Elapsed", "time", "339", "221s", "Critical", "Path", "02s", "INFO", "6204", "processes", "6204", "local", "FAILED", "Build", "NOT", "complete", "successfully", "FAILED", "Build", "NOT", "complete", "successfully", "```", "Provide", "exact", "sequence", "commands", "steps", "executed", "running", "problem", "```", "tensorflow", "git", "checkout", "1", "rc1", "CI_DOCKER_EXTRA_PARAMS", "=\"-", "CI_BUILD_PYTHON", "python3", "CROSSTOOL_PYTHON_INCLUDE_PATH", "usr", "include", "python3", "tensorflow", "tools", "ci_build", "ci_build", "PI", "PYTHON37", "tensorflow", "tools", "ci_build", "build_raspberry_pi", "```", "Any", "info", "logs", "**", "Include", "logs", "source", "code", "would", "helpful", "diagnose", "problem", "including", "tracebacks", "please", "include", "full", "traceback", "Large", "logs", "files", "attached", "System", "information", "Have", "written", "custom", "code", "opposed", "using", "stock", "example", "script", "provided", "TensorFlow", "Yes", "Platform", "Distribution", "e", ".,", "Linux", "Ubuntu", "04", "Linux", "Ubuntu", "04", "Docker", "TensorFlow", "installed", "source", "binary", "pip", "install", "TensorFlow", "version", "use", "command", "v2", "rc2", "g64c3d38", "Python", "version", "CUDA", "cuDNN", "version", "GPU", "model", "memory", "GTX", "1080Ti", "11175MiB", "Describe", "current", "behavior", "Hi", "authors", "developers", "developing", "project", "eager_mode", "disable", "The", "main", "reason", "x", "maintained", "third", "party", "libraries", "ready", "yet", "This", "issues", "separate", "issues", "35050", "https", "://", "github", "com", "tensorflow", "tensorflow", "issues", "35050", "issuecomment", "565395512", "This", "potential", "issue", "somethine", "wrong", "users", "custom", "training", "level", "API", "includes", "keras", "layers", "BatchNormalization", "()`", "eager", "model", "disable", "summary", "testcaset", "following", "```", "python", "#%%", "import", "tensorflow", "compat", "disable_eager_execution", "compat", "disable_v2_behavior", "import", "numpy", "batch_size", "100", "def", "download_data", "():", "get", "raw", "data", "trainX", "trainY", "testX", "testY", "keras", "datasets", "cifar10", "load_data", "trainX", "trainX", "astype", "float32", "testX", "testX", "astype", "np", "float32", "ont", "hot", "trainY", "keras", "utils", "to_categorical", "trainY", "testY", "keras", "utils", "to_categorical", "testY", "get", "validation", "sets", "training_size", "45000", "validX", "trainX", "training_size", ":,:]", "validY", "trainY", "training_size", ":,:]", "trainX", "trainX", "training_size", ",:]", "trainY", "trainY", "training_size", ",:]", "return", "trainX", "trainY", "validX", "validY", "testX", "testY", "def", "data_pipeline", "dataX", "dataY", "dataset", "data", "Dataset", "from_tensor_slices", "dataX", "dataY", "dataset", "dataset", "shuffle", "batch_size", "dataset", "dataset", "repeat", "dataset", "dataset", "batch", "batch_size", "dataset", "dataset", "prefetch", "data", "experimental", "AUTOTUNE", "return", "dataset", "class", "custom_model", "():", "def", "__init__", "self", "def", "Acc", "():", "acc", "keras", "metrics", "categorical_accuracy", "label_ref", "clf_out", "return", "math", "reduce_mean", "acc", "def", "c_loss", "():", "loss", "keras", "losses", "categorical_crossentropy", "label_ref", "clf_out", "loss", "math", "reduce_mean", "loss", "return", "loss", "create", "model", "clf_input", "keras", "layers", "Input", "shape", "name", "model", "input", "model", "keras", "applications", "resnet_v2", "ResNet50V2", "include_top", "True", "weights", "None", "input_tensor", "clf_input", "pooling", "max", "classes", "model", "keras", "applications", "vgg16", "VGG16", "include_top", "True", "weights", "None", "input_tensor", "clf_input", "pooling", "max", "classes", "model", "compile", "loss", "categorical_crossentropy", "optimizer", "SGD", "metrics", "=['", "accuracy", "'])", "label_ref", "keras", "layers", "Input", "shape", "name", "label_ref", "clf_out", "model", "clf_input", "using", "keras", "optimizers", "Nadam", "would", "get", "error", "optimizer", "keras", "optimizers", "Nadam", "lr", "0005", "optimizer", "compat", "train", "AdamOptimizer", "learning_rate", "self", "train_op", "optimizer", "minimize", "c_loss", "(),", "var_list", "model", "trainable_variables", "self", "clf_model", "model", "self", "clf_input", "clf_input", "self", "label_ref", "label_ref", "self", "op_acc", "Acc", "self", "c_loss", "c_loss", "__name__", "__main__", "set", "GPU", "import", "environ", "get", "CUDA_VISIBLE_DEVICES", "None", "environ", "CUDA_VISIBLE_DEVICES", "reset", "session", "compat", "keras", "backend", "clear_session", "gpu_options", "compat", "GPUOptions", "allow_growth", "True", "sess", "compat", "Session", "config", "tf", "compat", "ConfigProto", "gpu_options", "gpu_options", "tf", "compat", "keras", "backend", "set_session", "sess", "prepare", "data", "trainX", "trainY", "validX", "validY", "testX", "testY", "download_data", "train_gen", "data_pipeline", "trainX", "trainY", "valid_gen", "data_pipeline", "validX", "validY", "test_gen", "data_pipeline", "testX", "testY", "build", "targeted", "model", "model", "tf", "keras", "applications", "resnet_v2", "ResNet50V2", "include_top", "True", "weights", "None", "input_shape", "32", "pooling", "max", "classes", "10", "#", "model", "tf", "keras", "applications", "vgg16", "VGG16", "include_top", "True", "weights", "None", "input_shape", "32", "32", "pooling", "None", "classes", "10", "model", "compile", "loss", "categorical_crossentropy", "optimizer", "SGD", "metrics", "=['", "accuracy", "'])", "#", "fit", "evalutate", "model", "fit", "train_gen", "steps_per_epoch", "trainY", "shape", "batch_size", "validation_data", "valid_gen", "validation_steps", "validY", "shape", "batch_size", "epochs", "verbose", "model", "evaluate", "testX", "testY", "verbose", "batch_size", "batch_size", "#", "create", "new", "model", "print", "Make", "sure", "create", "new", "model", ".')", "model", "custom_model", "sess", "run", "tf", "compat", "global_variables_initializer", "())", "model", "clf_model", "evaluate", "testX", "testY", "verbose", "batch_size", "batch_size", "#", "train", "model", "num_epoch", "total_len", "trainY", "shape", "batch_size", "tf_iter", "tf", "compat", "data", "make_initializable_iterator", "train_gen", "tf_next", "tf_iter", "get_next", "sess", "run", "tf_iter", "initializer", "epoch", "range", "num_epoch", "c_loss", "acc", "range", "total_len", "sess", "run", "tf_next", "b_c_loss", "b_acc", "sess", "run", "model", "c_loss", "model", "op_acc", "model", "train_op", "feed_dict", "model", "clf_input", "model", "label_ref", "tf", "keras", "backend", "learning_phase", "():", "})", "c_loss", "c_loss", "b_c_loss", "acc", "acc", "b_acc", "c_loss", "c_loss", "total_len", "acc", "acc", "total_len", "print", "('[", "Training", "Epoch", "}/{:", "loss", "{:.", "acc", "{:.", "}'.", "format", "epoch", "num_epoch", "c_loss", "acc", "print", "Show", "loss", "accuracy", "keras", "API", "model", "clf_model", "evaluate", "trainX", "trainY", "verbose", "batch_size", "batch_size", "model", "clf_model", "evaluate", "validX", "validY", "verbose", "batch_size", "batch_size", "model", "clf_model", "evaluate", "testX", "testY", "verbose", "batch_size", "batch_size", "print", "Show", "loss", "accuracy", "low", "level", "API", "#", "evaluate", "num_epoch", "total_len", "validY", "shape", "batch_size", "tf_iter", "tf", "compat", "data", "make_initializable_iterator", "valid_gen", "tf_next", "tf_iter", "get_next", "sess", "run", "tf_iter", "initializer", "epoch", "range", "num_epoch", "c_loss_t", "acc_t", "c_loss_f", "acc_f", "ii", "range", "total_len", "sess", "run", "tf_next", "b_c_loss", "b_acc", "sess", "run", "model", "c_loss", "model", "op_acc", "feed_dict", "model", "clf_input", "model", "label_ref", "tf", "keras", "backend", "learning_phase", "():", "})", "c_loss_t", "c_loss_t", "b_c_loss", "acc_t", "acc_t", "b_acc", "b_c_loss", "b_acc", "sess", "run", "model", "c_loss", "model", "op_acc", "feed_dict", "model", "clf_input", "model", "label_ref", "tf", "keras", "backend", "learning_phase", "():", "})", "c_loss_f", "c_loss_f", "b_c_loss", "acc_f", "acc_f", "b_acc", "c_loss_t", "c_loss_t", "total_len", "c_loss_f", "c_loss_f", "total_len", "acc_t", "acc_t", "total_len", "acc_f", "acc_f", "total_len", "print", "('[", "Validation", "learning_phase", "Epoch", "}/{:", "loss", "{:.", "acc", "{:.", "}'.", "format", "epoch", "num_epoch", "c_loss_t", "acc_t", "print", "('[", "Validation", "learning_phase", "Epoch", "}/{:", "loss", "{:.", "acc", "{:.", "}'.", "format", "epoch", "num_epoch", "c_loss_f", "acc_f", "#", "evaluate", "num_epoch", "total_len", "testY", "shape", "batch_size", "tf_iter", "tf", "compat", "data", "make_initializable_iterator", "test_gen", "tf_next", "tf_iter", "get_next", "sess", "run", "tf_iter", "initializer", "epoch", "range", "num_epoch", "c_loss_t", "acc_t", "c_loss_f", "acc_f", "ii", "range", "total_len", "sess", "run", "tf_next", "b_c_loss", "b_acc", "sess", "run", "model", "c_loss", "model", "op_acc", "feed_dict", "model", "clf_input", "model", "label_ref", "tf", "keras", "backend", "learning_phase", "():", "})", "c_loss_t", "c_loss_t", "b_c_loss", "acc_t", "acc_t", "b_acc", "b_c_loss", "b_acc", "sess", "run", "model", "c_loss", "model", "op_acc", "feed_dict", "model", "clf_input", "model", "label_ref", "tf", "keras", "backend", "learning_phase", "():", "})", "c_loss_f", "c_loss_f", "b_c_loss", "acc_f", "acc_f", "b_acc", "c_loss_t", "c_loss_t", "total_len", "c_loss_f", "c_loss_f", "total_len", "acc_t", "acc_t", "total_len", "acc_f", "acc_f", "total_len", "print", "('[", "Testing", "learning_phase", "Epoch", "}/{:", "loss", "{:.", "acc", "{:.", "}'.", "format", "epoch", "num_epoch", "c_loss_t", "acc_t", "print", "('[", "Testing", "learning_phase", "Epoch", "}/{:", "loss", "{:.", "acc", "{:.", "}'.", "format", "epoch", "num_epoch", "c_loss_f", "acc_f", "```", "The", "first", "part", "testing", "case", "training", "model", "high", "leval", "API", "result", "expected", "```", "450", "450", "39s", "loss", "9658", "accuracy", "2993", "val_loss", "7215", "val_accuracy", "3738", "Epoch", "2", "5", "450", "450", "28s", "loss", "5722", "accuracy", "4334", "val_loss", "5897", "val_accuracy", "4152", "Epoch", "5", "450", "450", "27s", "loss", "3876", "accuracy", "4993", "val_loss", "4867", "val_accuracy", "4770", "Epoch", "5", "450", "450", "28s", "loss", "2564", "accuracy", "5477", "val_loss", "3498", "val_accuracy", "5060", "Epoch", "5", "5", "450", "450", "27s", "loss", "1488", "accuracy", "5888", "val_loss", "3380", "val_accuracy", "5232", "10000", "10000", "loss", "3523", "accuracy", "5289", "```", "got", "strange", "loss", "ourput", "seen", "following", "```", "Make", "sure", "create", "new", "model", "10000", "10000", "loss", "10", "2004", "accuracy", "1048", "Training", "Epoch", "5", "loss", "2", "288", "acc", "268", "Training", "Epoch", "2", "5", "loss", "513", "acc", "448", "Training", "Epoch", "5", "loss", "285", "acc", "537", "Training", "Epoch", "5", "loss", "426", "acc", "487", "Training", "Epoch", "5", "5", "loss", "306", "acc", "535", "Show", "loss", "accuracy", "keras", "API", "45000", "45000", "loss", "nan", "accuracy", "1002", "5000", "5000", "loss", "nan", "accuracy", "0986", "10000", "10000", "loss", "nan", "accuracy", "1000", "Show", "loss", "accuracy", "low", "level", "API", "Validation", "learning_phase", "Epoch", "loss", "163", "acc", "585", "Validation", "learning_phase", "Epoch", "loss", "nan", "acc", "099", "Testing", "learning_phase", "Epoch", "loss", "179", "acc", "587", "Testing", "learning_phase", "Epoch", "loss", "nan", "acc", "100", "```", "Obviously", "training", "custom", "model", "low", "level", "API", "result", "would", "wrong", "setting", "tf", "keras", "backend", "learning_phase", "():", "Also", "result", "keras", "API", "wrong", "tf", "keras", "backend", "learning_phase", "():", "may", "affect", "behavior", "`", "tf", "keras", "layers", "BatchNormalization", "()`", "sure", "whether", "root", "cause", "tried", "small", "custom", "model", "without", "`", "tf", "keras", "layers", "BatchNormalization", "()`", "MNIST", "dataset", "result", "normal", "The", "testcase", "MNIST", "shown", "following", "```", "python", "import", "tensorflow", "tf", "tf", "compat", "disable_eager_execution", "#", "tf", "compat", "disable_v2_behavior", "import", "numpy", "np", "batch_size", "100", "def", "download_data", "():", "#", "get", "raw", "data", "trainX", "trainY", "testX", "testY", "tf", "keras", "datasets", "mnist", "load_data", "trainX", "trainX", "astype", "np", "float32", "testX", "testX", "astype", "np", "float32", "#", "ont", "hot", "trainY", "tf", "keras", "utils", "to_categorical", "trainY", "10", "testY", "tf", "keras", "utils", "to_categorical", "testY", "10", "#", "get", "validation", "sets", "training_size", "55000", "validX", "trainX", "training_size", ":,:]", "validY", "trainY", "training_size", ":,:]", "trainX", "trainX", "training_size", ",:]", "trainY", "trainY", "training_size", ",:]", "#", "expand", "dimesion", "trainX", "np", "expand_dims", "trainX", "axis", "validX", "np", "expand_dims", "validX", "axis", "testX", "np", "expand_dims", "testX", "axis", "3", "return", "trainX", "trainY", "validX", "validY", "testX", "testY", "def", "data_pipeline", "dataX", "dataY", "dataset", "tf", "data", "Dataset", "from_tensor_slices", "dataX", "dataY", "dataset", "dataset", "shuffle", "batch_size", "dataset", "dataset", "repeat", "dataset", "dataset", "batch", "batch_size", "dataset", "dataset", "prefetch", "tf", "data", "experimental", "AUTOTUNE", "return", "dataset", "class", "custom_model", "():", "def", "__init__", "self", "def", "Acc", "():", "acc", "tf", "keras", "metrics", "categorical_accuracy", "label_ref", "clf_out", "return", "tf", "math", "reduce_mean", "acc", "def", "c_loss", "():", "loss", "tf", "keras", "losses", "categorical_crossentropy", "label_ref", "clf_out", "loss", "tf", "math", "reduce_mean", "loss", "return", "loss", "#", "declare", "variables", "self", "init_op", "tf", "compat", "keras", "initializers", "he_normal", "model_layers", "tf", "keras", "layers", "Conv2D", "16", "3", "3", "padding", "activation", "relu", "kernel_initializer", "self", "init_op", "name", "clf", "\"),", "tf", "keras", "layers", "Conv2D", "32", "3", "3", "),", "padding", "activation", "relu", "kernel_initializer", "self", "init_op", "name", "clf", "\"),", "tf", "keras", "layers", "MaxPooling2D", "pool_size", "2", "2", "),", "name", "clf", "\"),", "tf", "keras", "layers", "Conv2D", "32", "3", "3", "),", "padding", "activation", "relu", "\",", "kernel_initializer", "self", "init_op", "name", "clf", "\"),", "tf", "keras", "layers", "Conv2D", "64", "3", "3", "),", "padding", "\",", "activation", "relu", "\",", "kernel_initializer", "self", "init_op", "name", "clf", "\"),", "tf", "keras", "layers", "MaxPooling2D", "pool_size", "2", "2", "),", "name", "clf", "\"),", "tf", "keras", "layers", "Flatten", "name", "clf", "\"),", "tf", "keras", "layers", "Dense", "256", "activation", "relu", "\",", "kernel_initializer", "self", "init_op", "name", "clf", "\"),", "tf", "keras", "layers", "Dense", "10", "activation", "None", "kernel_initializer", "self", "init_op", "name", "clf", "\"),", "tf", "keras", "layers", "Activation", "softmax", "name", "clf", "#", "clf_model", "clf_input", "tf", "keras", "layers", "Input", "shape", "28", "),", "name", "model", "input", "clf_out", "clf_input", "ii", "model_layers", "clf_out", "ii", "clf_out", "clf_model", "tf", "keras", "models", "Model", "inputs", "clf_input", "outputs", "clf_out", "name", "clf_model", "clf_model", "compile", "loss", "categorical_crossentropy", "optimizer", "Nadam", "metrics", "=['", "accuracy", "'])", "label_ref", "tf", "keras", "layers", "Input", "shape", "10", "name", "label_ref", "clf_out", "clf_model", "clf_input", "#", "using", "tf", "keras", "optimizers", "Nadam", "would", "get", "error", "#", "optimizer", "tf", "keras", "optimizers", "Nadam", "lr", "0005", "optimizer", "tf", "compat", "train", "AdamOptimizer", "learning_rate", "self", "train_op", "optimizer", "minimize", "c_loss", "(),", "var_list", "clf_model", "trainable_variables", "self", "clf_model", "clf_model", "self", "clf_input", "clf_input", "self", "label_ref", "label_ref", "self", "op_acc", "Acc", "self", "c_loss", "c_loss", "__name__", "__main__", "#", "set", "GPU", "import", "os", "environ", "get", "CUDA_VISIBLE_DEVICES", "\")", "None", "os", "environ", "CUDA_VISIBLE_DEVICES", "#", "reset", "tf", "session", "tf", "compat", "keras", "backend", "clear_session", "gpu_options", "tf", "compat", "GPUOptions", "allow_growth", "True", "sess", "tf", "compat", "Session", "config", "tf", "compat", "ConfigProto", "gpu_options", "gpu_options", "tf", "compat", "keras", "backend", "set_session", "sess", "#", "prepare", "data", "trainX", "trainY", "validX", "validY", "testX", "testY", "download_data", "train_gen", "data_pipeline", "trainX", "trainY", "valid_gen", "data_pipeline", "validX", "validY", "test_gen", "data_pipeline", "testX", "testY", "#", "create", "new", "model", "print", "Make", "sure", "create", "new", "model", ".')", "model", "custom_model", "sess", "run", "tf", "compat", "global_variables_initializer", "())", "model", "clf_model", "evaluate", "testX", "testY", "verbose", "2", "batch_size", "batch_size", "#", "train", "model", "num_epoch", "5", "total_len", "trainY", "shape", "batch_size", "tf_iter", "tf", "compat", "data", "make_initializable_iterator", "train_gen", "tf_next", "tf_iter", "get_next", "sess", "run", "tf_iter", "initializer", "epoch", "range", "num_epoch", "c_loss", "acc", "ii", "range", "total_len", "sess", "run", "tf_next", ")", "b_c_loss", "b_acc", "sess", "run", "model", "c_loss", "model", "op_acc", "model", "train_op", "feed_dict", "model", "clf_input", "model", "label_ref", "tf", "keras", "backend", "learning_phase", "():", "})", "c_loss", "c_loss", "b_c_loss", "acc", "acc", "b_acc", "c_loss", "c_loss", "total_len", "acc", "acc", "total_len", "print", "('[", "Training", "Epoch", "}/{:", "}", "loss", "{:.", "}", "acc", "{:.", "}'.", "format", "epoch", "num_epoch", "c_loss", "acc", ")", ")", "print", "Show", "loss", "accuracy", "keras", "API", "model", "clf_model", "evaluate", "trainX", "trainY", "verbose", "2", "batch_size", "batch_size", ")", "model", "clf_model", "evaluate", "validX", "validY", "verbose", "2", "batch_size", "batch_size", ")", "model", "clf_model", "evaluate", "testX", "testY", "verbose", "2", "batch_size", "batch_size", ")", "print", "Show", "loss", "accuracy", "low", "level", "API", "#", "evaluate", "num_epoch", "1", "total_len", "validY", "shape", "batch_size", "tf_iter", "tf", "compat", "data", "make_initializable_iterator", "valid_gen", ")", "tf_next", "tf_iter", "get_next", "sess", "run", "tf_iter", "initializer", ")", "epoch", "range", "num_epoch", "c_loss_t", "acc_t", "c_loss_f", "acc_f", "0", "0", "0", "0", "0", "0", "ii", "range", "total_len", "X", "sess", "run", "tf_next", ")", "b_c_loss", "b_acc", "sess", "run", "model", "c_loss", "model", "op_acc", "feed_dict", "model", "clf_input", "X", "model", "label_ref", "tf", "keras", "backend", "learning_phase", "():", "1", "})", "c_loss_t", "c_loss_t", "b_c_loss", "acc_t", "acc_t", "b_acc", "b_c_loss", "b_acc", "sess", "run", "model", "c_loss", "model", "op_acc", "feed_dict", "model", "clf_input", "X", "model", "label_ref", "tf", "keras", "backend", "learning_phase", "():", "0", "})", "c_loss_f", "c_loss_f", "b_c_loss", "acc_f", "acc_f", "b_acc", "c_loss_t", "c_loss_t", "total_len", "c_loss_f", "c_loss_f", "total_len", "acc_t", "acc_t", "total_len", "acc_f", "acc_f", "total_len", "print", "('[", "Validation", "learning_phase", "1", "Epoch", "}/{:", "}", "loss", "{:.", "}", "acc", "{:.", "}'.", "format", "epoch", "1", "num_epoch", "c_loss_t", "acc_t", ")", ")", "print", "('[", "Validation", "learning_phase", "0", "Epoch", "}/{:", "}", "loss", "{:.", "}", "acc", "{:.", "}'.", "format", "epoch", "1", "num_epoch", "c_loss_f", "acc_f", ")", ")", "#", "evaluate", "num_epoch", "=", "1", "total_len", "=", "testY", "shape", "0", "batch_size", "tf_iter", "=", "tf", "compat", "data", "make_initializable_iterator", "test_gen", ")", "tf_next", "=", "tf_iter", "get_next", "sess", "run", "tf_iter", "initializer", ")", "epoch", "range", "num_epoch", "c_loss_t", "acc_t", "c_loss_f", "acc_f", "=", "0", "0", "0", "0", "0", "0", "0", "0", "ii", "range", "(", "total_len", "X", "=", "sess", "run", "(", "tf_next", ")", "b_c_loss", "b_acc", "=", "sess", "run", "model", "c_loss", "model", "op_acc", "feed_dict", "model", "clf_input", "X", "model", "label_ref", "tf", "keras", "backend", "learning_phase", "():", "1", "})", "c_loss_t", "=", "c_loss_t", "b_c_loss", "acc_t", "=", "acc_t", "b_acc", "b_c_loss", "b_acc", "=", "sess", "run", "model", "c_loss", "model", "op_acc", "feed_dict", "model", "clf_input", "X", "model", "label_ref", "tf", "keras", "backend", "learning_phase", "():", "0", "})", "c_loss_f", "=", "c_loss_f", "b_c_loss", "acc_f", "=", "acc_f", "b_acc", "c_loss_t", "=", "c_loss_t", "total_len", "c_loss_f", "=", "c_loss_f", "total_len", "acc_t", "=", "acc_t", "total_len", "acc_f", "=", "acc_f", "total_len", "print", "('[", "Testing", "learning_phase", "=", "1", "Epoch", "}/{:", "}", "loss", "{:.", "}", "acc", "{:.", "}'.", "format", "(", "epoch", "1", "num_epoch", "c_loss_t", "acc_t", ")", ")", "print", "('[", "Testing", "learning_phase", "=", "0", "Epoch", "}/{:", "}", "loss", "{:.", "}", "acc", "{:.", "}'.", "format", "(", "epoch", "1", "num_epoch", "c_loss_f", "acc_f", ")", ")", "```", "Definitely", "got", "normal", "output", "```", "Make", "sure", "create", "new", "model", "10000", "10000", "loss", "398", "0696", "acc", "0", "1151", "Training", "Epoch", "1", "5", "loss", "997", "acc", "0", "558", "Training", "Epoch", "2", "5", "loss", "0", "474", "acc", "0", "849", "[", "Training", "Epoch", "3", "5", "loss", "0", "282", "acc", "0", "914", "[", "Training", "Epoch", "5", "loss", "0", "213", "acc", "0", "935", "[", "Training", "Epoch", "5", "5", "loss", "0", "181", "acc", "0", "945", "Show", "loss", "accuracy", "keras", "API", "55000", "55000", "loss", "0", "1555", "acc", "0", "9535", "5000", "5000", "loss", "0", "1501", "acc", "0", "9584", "10000", "10000", "loss", "0", "1687", "acc", "0", "9539", "Show", "loss", "accuracy", "low", "level", "API", "[", "Validation", "learning_phase", "=", "1", "Epoch", "1", "1", "loss", "0", "150", "acc", "0", "958", "[", "Validation", "learning_phase", "=", "0", "Epoch", "1", "1", "loss", "0", "150", "acc", "0", "958", "[", "Testing", "learning_phase", "=", "1", "]", "Epoch", "1", "1", "loss", "0", "169", "acc", "0", "954", "[", "Testing", "learning_phase", "=", "0", "]", "Epoch", "1", "1", "loss", "0", "169", "acc", "0", "954", "```", "Describe", "expected", "behavior", "It", "work", "properly", "Code", "reproduce", "issue", "Please", "see", "section", "Describe", "current", "behavior", "Other", "info", "logs", "**", "skip", "...", "System", "information", "Have", "written", "custom", "code", "opposed", "using", "stock", "example", "script", "provided", "TensorFlow", "N", "OS", "Platform", "Distribution", "e", ".,", "Linux", "Ubuntu", "04", "Ubuntu", "04", "Mobile", "device", "e", "iPhone", "Pixel", "Samsung", "Galaxy", "issue", "happens", "mobile", "device", "TensorFlow", "installed", "source", "binary", "binary", "TensorFlow", "version", "use", "command", "v2", "rc2", "g64c3d38", "0", "Python", "version", "7", "Bazel", "version", "compiling", "source", "N", "GCC", "Compiler", "version", "compiling", "source", "N", "CUDA", "cuDNN", "version", "V10", "0", "130", "GPU", "model", "memory", "Tesla", "V100", "SXM2", "Describe", "current", "behavior", "Adam", "paper", "subtract", "following", "quantity", "current", "gradient", "0", "alpha", "hat", "m_t", "(\\", "sqrt", "v_t", "beta", "t_2", "epsilon", "<", "img", "width", "475", "alt", "Screen", "Shot", "2019", "13", "32", "PM", "src", "https", "://", "user", "images", "githubusercontent", "com", "54961543", "70836600", "7f490780", "1db5", "11ea", "9669", "27c50fe48cae", "png", "The", "Tensorflow", "implementation", "subtracts", "subtly", "different", "quantity", "]):", "alpha", "\\", "hat", "m_t", "\\", "sqrt", "1", "beta", "T_2", "(\\", "sqrt", "v_t", "\\", "epsilon", "<", "img", "width", "438", "alt", "Screen", "Shot", "2019", "13", "34", "PM", "src", "https", "://", "user", "images", "githubusercontent", "com", "54961543", "70836654", "c1724900", "1db5", "11ea", "9260", "5fc0678f6f39", "png", "The", "difference", "two", "expressions", "first", "bias", "moving", "average", "squared", "gradient", "v_t", "In", "second", "bias", "correction", "also", "applied", "\\", "epsilon", "This", "manifests", "scaling", "epilson", "quite", "lot", "early", "training", "steps", "reducing", "magnitude", "gradient", "update", "Note", "bug", "present", "PyTorch", "prior", "3", "fixed", "https", "://", "github", "com", "pytorch", "pytorch", "pull", "22628", "That", "description", "provides", "useful", "visualization", "Describe", "expected", "behavior", "Implement", "algorithm", "described", "paper", "old", "implementation", "necessary", "preserve", "back", "compat", "providing", "flag", "trigger", "correct", "implementation", "would", "helpful", "0", "https", "://", "arxiv", "org", "pdf", "1412", "6980", "pdf", "see", "final", "lines", "Algorithm", "1", "[", "1", "]", "Notable", "lines", "implementation", "regarding", "issue", "https", "://", "github", "com", "tensorflow", "tensorflow", "blob", "0", "tensorflow", "python", "keras", "optimizer_v2", "adam", "#", "L162", "https", "://", "github", "com", "tensorflow", "tensorflow", "blob", "0", "tensorflow", "python", "keras", "optimizer_v2", "adam", "#", "L245", "https", "://", "github", "com", "tensorflow", "tensorflow", "blob", "master", "tensorflow", "core", "kernels", "training_ops", "#", "L373", "System", "information", "OS", "Platform", "Distribution", "e", ".,", "Linux", "Ubuntu", "04", "OSX", "14", "TensorFlow", "installed", "source", "binary", "source", "TensorFlow", "version", "15", "observation", "version", "https", "://", "github", "com", "tensorflow", "tensorflow", "releases", "tag", "15", "0", "Python", "version", "python3", "GCC", "Compiler", "version", "compiling", "source", "arm", "none", "eabi", "Describe", "problem", "The", "standalone", "projects", "generated", "Tensorflow", "Lite", "seem", "missing", "headers", "Following", "tutorial", "https", "://", "www", "tensorflow", "org", "lite", "microcontrollers", "library", "generate_projects_for_other_platforms", "https", "://", "www", "tensorflow", "org", "lite", "microcontrollers", "library", "generate_projects_for_other_platforms", "run", "following", "command", "(", "link", "seems", "tutorial", "micro", "another", "subfolder", "experimental", "'):", "gmake", "tensorflow", "lite", "experimental", "micro", "tools", "make", "Makefile", "TARGET", "sparkfun_edge", "generate_projects", "After", "command", "finished", "files", "generated", "expected", "tensorflow", "lite", "experimental", "micro", "tools", "make", "gen", "sparkfun_edge_cortex", "prj", "But", "trying", "build", "micro_speech", "binary", "like", "```", "tensorflow", "lite", "experimental", "micro", "tools", "make", "gen", "sparkfun_edge_cortex", "prj", "micro_speech", "make", "gmake", "```", "getting", "following", "error", "```", "arm", "none", "eabi", "DNDEBUG", "std", "++", "11", "DTF_LITE_STATIC_MEMORY", "DPART_apollo3", "DAM_PACKAGE_BGA", "DAM_PART_APOLLO3", "DGEMMLOWP_ALLOW_SLOW_SCALAR_FALLBACK", "DTF_LITE_STATIC_MEMORY", "DNDEBUG", "DTF_LITE_MCU_DEBUG_LOG", "__FPU_PRESENT", "DARM_MATH_CM4", "fno", "rtti", "fmessage", "length", "0", "fno", "exceptions", "fno", "unwind", "tables", "fno", "builtin", "ffunction", "sections", "fdata", "sections", "funsigned", "char", "MMD", "mcpu", "cortex", "mthumb", "mfpu", "fpv4", "d16", "mfloat", "abi", "hard", "std", "gnu", "++", "11", "Wvla", "Wall", "Wextra", "Wno", "unused", "parameter", "Wno", "missing", "field", "initializers", "Wno", "write", "strings", "Wno", "sign", "compare", "fno", "delete", "null", "pointer", "checks", "fomit", "frame", "pointer", "fpermissive", "nostdlib", "ggdb", "./", "third_party", "gemmlowp", "./", "third_party", "flatbuffers", "include", "I", "./", "third_party", "kissfft", "c", "tensorflow", "lite", "experimental", "micro", "sparkfun_edge", "debug_log", "tensorflow", "lite", "experimental", "micro", "sparkfun_edge", "debug_log", "tensorflow", "lite", "experimental", "micro", "sparkfun_edge", "debug_log", "22", "fatal", "error", "am_bsp", "No", "file", "directory", "include", "am_bsp", "NOLINT", "^~~~~~~~~~", "compilation", "terminated", "make", "***", "tensorflow", "lite", "experimental", "micro", "sparkfun_edge", "debug_log", "Error", "1", "```", "This", "header", "file", "sparkfun", "edge", "board", "I", "want", "build", "System", "information", "Have", "written", "custom", "code", "opposed", "using", "stock", "example", "script", "provided", "TensorFlow", "OS", "Platform", "Distribution", "Linux", "Ubuntu", "04", "Mobile", "device", "e", "iPhone", "Pixel", "Samsung", "Galaxy", "issue", "happens", "mobile", "device", "TensorFlow", "installed", "source", "binary", "TensorFlow", "version", "use", "command", "2", "Python", "version", "6", "Bazel", "version", "compiling", "source", "GCC", "Compiler", "version", "compiling", "source", "CUDA", "cuDNN", "version", "GPU", "model", "memory", "Describe", "current", "behavior", "img", "width", "368", "alt", "\u5c4f\u5e55\u5feb\u7167", "2019", "13", "\u4e0b\u53486", "20", "src", "https", "://", "user", "images", "githubusercontent", "com", "22017000", "70792077", "6c453000", "1dd3", "11ea", "8489", "5b6131950515", "png", "Describe", "expected", "behavior", "The", "data", "Dataset", "instance", "freed", "every", "step", "Code", "reproduce", "issue", "**", "```", "python", "import", "tensorflow", "import", "import", "numpy", "import", "psutil", "def", "_generator", "():", "range", "100", "yield", "2", "4", "6", "8", "def", "_py_parse_data", "record", "record", "record", "numpy", "record", "bytes", "decode", "record", "record", "split", "(\",\")", "str", "int", "r", "r", "rl", "]", "return", "[\",\".", "join", "rl", "def", "parse_data", "record", "shape", "10", "sparse_data", "strings", "split", "record", "sep", "=\",\")", "sparse_data", "strings", "to_number", "sparse_data", "0", "int64", "ids_num", "tf", "cast", "tf", "size", "sparse_data", "tf", "int64", "indices", "tf", "range", "0", "ids_num", "dtype", "tf", "int64", "indices", "tf", "reshape", "indices", "shape", "=(-", "1", "sparse_data", "tf", "sparse", "SparseTensor", "indices", "sparse_data", "dense_shape", "shape", "return", "sparse_data", "process", "psutil", "Process", "os", "getpid", "())", "step", "0", "step", "<", "10000", "tf", "data", "Dataset", "from_generator", "_generator", "output_types", "=", "tf", "string", "=", "map", "lambda", "record", "tf", "py_function", "_py_parse_data", "record", "[", "tf", "string", "]))", "=", "map", "parse_data", "=", "1", "step", "10", "0", "print", "Memory", "process", "memory_info", "().", "rss", ")", "step", "1", "```", "Thank", "submitting", "TensorFlow", "documentation", "issue", "Per", "GitHub", "policy", "address", "code", "doc", "bugs", "performance", "issues", "feature", "requests", "build", "installation", "issues", "GitHub", "The", "TensorFlow", "docs", "open", "source", "get", "involved", "read", "documentation", "contributor", "guide", "https", "://", "www", "tensorflow", "org", "community", "contribute", "docs", "URL", ")", "issue", "Please", "provide", "link", "documentation", "entry", "example", "https", "://", "www", "tensorflow", "org", "api_docs", "python", "audio", "Description", "issue", "needs", "changing", "Currently", "usage", "examples", "audio", "APIs", "makes", "difficult", "new", "users", "implement", "###", "Clear", "description", "For", "example", "someone", "use", "method", "How", "useful", "Audio", "area", "really", "explored", "machine", "learning", "extent", "image", "text", "While", "TensorFlow", "provide", "good", "amount", "documentation", "general", "Args", "Returns", "various", "functions", "audio", "since", "new", "users", "little", "experience", "audio", "compared", "image", "###", "Correct", "links", "link", "source", "code", "correct", "Yes", "###", "Parameters", "defined", "Are", "parameters", "defined", "formatted", "correctly", "Yes", "###", "Returns", "defined", "Are", "return", "values", "defined", "Yes", "###", "Raises", "listed", "defined", "Are", "errors", "defined", "For", "example", "https", "://", "www", "tensorflow", "org", "versions", "0", "api_docs", "python", "feature_column", "categorical_column_with_vocabulary_file", "raises", "No", "###", "Usage", "example", "usage", "example", "No", "See", "API", "guide", "https", "://", "www", "tensorflow", "org", "community", "contribute", "docs_ref", "write", "testable", "usage", "examples", "###", "Request", "visuals", "applicable", "Are", "currently", "visuals", "clarify", "content", "Formatted", "code", "blocks", "present", "satisfactory", "###", "Submit", "pull", "request", "Are", "planning", "also", "submit", "pull", "request", "fix", "issue", "See", "docs", "contributor", "guide", "https", "://", "www", "tensorflow", "org", "community", "contribute", "docs", "docs", "API", "guide", "https", "://", "www", "tensorflow", "org", "community", "contribute", "docs_ref", "docs", "style", "guide", "https", "://", "www", "tensorflow", "org", "community", "contribute", "docs_style", "Yes", "think", "provide", "detailed", "usage", "example", "TensorFlow", "Lite", "Microcontrollers", "MAXPOOL", "operation", "supports", "float", "uint8", "execution", "int8"], "2020-01-2": ["em", "Please", "make", "sure", "build", "installation", "issue", "per", "GitHub", "Policy", "https", "://", "github", "com", "tensorflow", "tensorflow", "blob", "master", "ISSUES", "),", "address", "code", "doc", "bugs", "performance", "issues", "feature", "requests", "build", "installation", "issues", "GitHub", "tag", "build_template", "em", "System", "information", "OS", "Platform", "Distribution", "e", ".,", "Linux", "Ubuntu", "04", "Windows", "x64", "Mobile", "device", "e", "iPhone", "Pixel", "Samsung", "Galaxy", "issue", "happens", "mobile", "device", "A", "TensorFlow", "installed", "source", "binary", "source", "TensorFlow", "version", "master", "Python", "version", "Installed", "using", "virtualenv", "pip", "conda", "A", "Bazel", "version", "compiling", "source", "GCC", "Compiler", "version", "compiling", "source", "Visual", "Studio", "2019", "++", "compiler", "CUDA", "cuDNN", "version", "6", "GPU", "model", "memory", "RTX2080Ti", "GDDR6", "11GB", "Describe", "problem", "bazel", "build", "failed", "Provide", "exact", "sequence", "commands", "steps", "executed", "running", "problem", "bazel", "build", "tensorflwo", "tools", "pip_package", "build_pip_package", "Any", "info", "logs", "**", "Include", "logs", "source", "code", "would", "helpful", "diagnose", "problem", "including", "tracebacks", "please", "include", "full", "traceback", "Large", "logs", "files", "attached", "```", "ERROR", ":/", "repo", "tensorflow", "tensorflow", "BUILD", "867", "Executing", "genrule", "tensorflow", "tf_python_api_gen_v2", "failed", "Exit", "Anaconda3", "lib", "site", "packages", "numpy", "__init__", "140", "UserWarning", "mkl", "service", "package", "failed", "import", "therefore", "Intel", "R", "MKL", "initialization", "ensuring", "correct", "box", "operation", "condition", "Gnu", "OpenMP", "already", "loaded", "Python", "process", "assured", "Please", "install", "mkl", "service", "package", "see", "http", "://", "github", "com", "IntelPython", "mkl", "service", "import", "_distributor_init", "Traceback", "recent", "call", "last", "File", ":\\", "Anaconda3", "lib", "site", "packages", "numpy", "core", "__init__", "line", "module", "import", "multiarray", "File", ":\\", "Anaconda3", "lib", "site", "packages", "numpy", "core", "multiarray", "\",", "line", "<", "module", "import", "overrides", "File", ":\\", "Anaconda3", "lib", "site", "packages", "numpy", "core", "overrides", "\",", "line", "<", "module", "numpy", "core", "_multiarray_umath", "import", "ImportError", "DLL", "load", "failed", "The", "specified", "module", "could", "found", "During", "handling", "exception", "another", "exception", "occurred", "Traceback", "recent", "call", "last", "File", "\"\\\\?\\", ":\\", "Users", "ALAN", "~", "AppData", "Local", "Temp", "Bazel", "runfiles_t25kvwuy", "runfiles", "org_tensorflow", "tensorflow", "python", "tools", "api", "generator", "create_python_api", "\",", "line", "<", "module", "tensorflow", "python", "tools", "api", "generator", "import", "doc_srcs", "File", "\"\\\\?\\", ":\\", "Users", "ALAN", "~", "AppData", "Local", "Temp", "Bazel", "runfiles_t25kvwuy", "runfiles", "org_tensorflow", "tensorflow", "python", "__init__", "\",", "line", "<", "module", "import", "numpy", "File", ":\\", "Anaconda3", "lib", "site", "packages", "numpy", "__init__", "\",", "line", "142", "<", "module", "import", "core", "File", ":\\", "Anaconda3", "lib", "site", "packages", "numpy", "core", "\\", "__init__", "\",", "line", "<", "module", "raise", "ImportError", "msg", "ImportError", "IMPORTANT", "PLEASE", "READ", "THIS", "FOR", "ADVICE", "HOW", "SOLVE", "THIS", "ISSUE", "Importing", "numpy", "extensions", "failed", "Try", "uninstalling", "reinstalling", "numpy", "already", "done", "Check", "expected", "use", "Python3", "7", "C", ":\\", "Anaconda3", "\\", "python", "exe", "\",", "directories", "PATH", "PYTHONPATH", "interfere", "Python", "numpy", "version", "18", "1", "trying", "use", "2", "1", "looks", "fine", "open", "new", "issue", "https", "://", "github", "com", "numpy", "numpy", "issues", "Please", "include", "details", "installed", "Python", "installed", "numpy", "operating", "system", "whether", "multiple", "versions", "Python", "installed", "built", "source", "compiler", "versions", "ideally", "build", "log", "If", "working", "numpy", "git", "repository", "try", "git", "clean", "xdf", "removes", "files", "version", "control", ")", "rebuild", "numpy", "Note", "error", "many", "possible", "causes", "please", "comment", "existing", "issue", "open", "new", "one", "instead", "Original", "error", "DLL", "load", "failed", "The", "specified", "module", "could", "found", "Target", "tensorflow", "tools", "pip_package", "build_pip_package", "failed", "build", "ERROR", ":/", "repo", "tensorflow", "tensorflow", "tools", "pip_package", "BUILD", "229", "1", "Executing", "genrule", "tensorflow", "tf_python_api_gen_v2", "failed", "(", "Exit", "1", ")", "```", "This", "enables", "kernel", "Relu", "float16", "ROCm", "removes", "obsolete", "ifdef", "relu_op_gpu", "cc", "System", "information", "Have", "written", "custom", "code", "opposed", "using", "stock", "example", "script", "provided", "TensorFlow", "yes", "Platform", "Distribution", "e", ".,", "Linux", "Ubuntu", "04", "Mac", "X", "Catalina", "10", "TensorFlow", "installed", "source", "binary", "binary", "TensorFlow", "version", "use", "command", "v2", "rc2", "g64c3d382ca", "Python", "version", "7", "GPU", "model", "memory", "Intel", "Iris", "Pro", "1536", "Describe", "current", "behavior", "get", "errors", "tensorflow", "python", "eager", "core", "_FallbackException", "This", "function", "handle", "case", "path", "inputs", "already", "EagerTensors", "AttributeError", "Tensor", "object", "attribute", "_datatype_enum", "AttributeError", "ProgbarLogger", "object", "attribute", "log_values", "add", "following", "callback", "list", "callbacks", "my_model", "fit", "```", "my_callback", "keras", "callbacks", "LambdaCallback", "on_batch_begin", "lambda", "batch", "logs", "print", "my_model", "losses", "```", "Describe", "expected", "behavior", "No", "error", "Code", "reproduce", "issue", "**", "```", "import", "tensorflow", "def", "get_model", "():", "inp", "keras", "layers", "Input", "shape", ",))", "tf", "keras", "layers", "Dense", "8", "activity_regularizer", "tf", "keras", "regularizers", "0", "01", "))(", "inp", "tf", "keras", "layers", "Dense", "16", "activity_regularizer", "tf", "keras", "regularizers", "0", "01", "))(", "x", "tf", "keras", "layers", "Dense", "1", "x", ")", "model", "tf", "keras", "Model", "inputs", "inp", "outputs", ")", "return", "model", "def", "train", "():", "my_model", "get_model", "my_model", "compile", "optimizer", "adam", "loss", "mse", "my_callback", "tf", "keras", "callbacks", "LambdaCallback", "(", "on_batch_begin", "=", "lambda", "batch", "logs", "tf", "print", "(", "my_model", "losses", "my_model", "fit", "1", "3", "],", "0", "1", "0", "0", "0", "2", "],", "callbacks", "my_callback", "__name__", "__main__", "train", "```", "This", "issue", "may", "related", "https", "://", "github", "com", "tensorflow", "tensorflow", "issues", "28924", "https", "://", "github", "com", "tensorflow", "tensorflow", "issues", "29931", "Note", "I", "use", "regulariser", "tf", "print", "prints", "empty", "list", "error", "occurs", "System", "information", "Custom", "code", "TensorFlow", "version", "Python", "version", "7", "GPU", "model", "V100", "GPUs", "Kubernetes", "Engine", "Describe", "current", "behavior", "On", "multi", "GPU", "loading", "model", "file", "working", "Describe", "expected", "behavior", "Saving", "reloading", "model", "file", "using", "model", "save", "keras", "models", "load_model", "work", "single", "multi", "GPU", "Code", "reproduce", "issue", "```", "python", "import", "tensorflow", "import", "import", "contextlib", "import", "numpy", "import", "tensorflow", "keras", "keras", "def", "get_model", "():", "model", "keras", "Sequential", "keras", "layers", "Flatten", "input_shape", "28", ")),", "keras", "layers", "Dense", "10", "activation", "tf", "softmax", "])", "model", "compile", "optimizer", "tf", "keras", "optimizers", "Adam", "(),", "loss", "sparse_categorical_crossentropy", "return", "model", "def", "get_model_path", "():", "model_dir", "tmp", "str", "np", "random", "randint", "1000000", "os", "makedirs", "model_dir", "model_path", "os", "path", "join", "model_dir", "model", "return", "model_path", "def", "attempt_save_and_reload", "model_path", "distributed_training", "False", "fashion_mnist", "keras", "datasets", "fashion_mnist", "train_images", "train_labels", "test_images", "test_labels", "fashion_mnist", "load_data", "train_images", "train_images", "255", "test_images", "test_images", "255", "strategy", "scope", "distributed_training", "else", "contextlib", "nullcontext", "():", "model", "get_model", "model", "fit", "train_images", "train_labels", "epochs", "1", "model", "save", "model_path", "model", "tf", "keras", "models", "load_model", "model_path", "__name__", "__main__", "strategy", "tf", "distribute", "MirroredStrategy", "distributed_training", "False", "True", "print", "distributed", "training", "distributed_training", "model_path", "get_model_path", "try", "attempt_save_and_reload", "model_path", "distributed_training", "except", "Exception", "print", "Exception", "raised", "n", "e", "print", "```", "info", "logs", "need", "use", "h5", "files", "since", "saving", "optimizer", "state", "work", "otherwise", "(", "see", "33424", "The", "logs", "I", "get", "```", "INFO", "tensorflow", "Using", "MirroredStrategy", "devices", "('/", "job", "localhost", "replica", "task", "device", "GPU", "',", "job", "localhost", "replica", "task", "device", "GPU", "1", "',", "job", "localhost", "replica", "task", "device", "GPU", "',", "'/", "job", "localhost", "replica", "task", "device", "GPU", "')", "distributed", "training", "False", "Train", "60000", "samples", "60000", "60000", "[==============================]", "52us", "sample", "loss", "5991", "distributed", "training", "True", "Train", "60000", "samples", "INFO", "tensorflow", "batch_all_reduce", "reduces", "algorithm", "nccl", "num_packs", "1", "agg_small_grads_max_bytes", "agg_small_grads_max_group", "10", "INFO", "tensorflow", "Reduce", "job", "localhost", "replica", "task", "device", "CPU", "broadcast", "('/", "job", "localhost", "replica", "task", "device", "CPU", "',).", "INFO", "tensorflow", "Reduce", "job", "localhost", "replica", "task", "device", "CPU", "broadcast", "('/", "job", "localhost", "replica", "task", "device", "CPU", "',).", "INFO", "tensorflow", "batch_all_reduce", "reduces", "algorithm", "nccl", "num_packs", "1", "agg_small_grads_max_bytes", "agg_small_grads_max_group", "=", "10", "INFO", "tensorflow", "Reduce", "job", "localhost", "replica", "task", "device", "CPU", "broadcast", "('/", "job", "localhost", "replica", "task", "device", "CPU", "',).", "INFO", "tensorflow", "Reduce", "job", "localhost", "replica", "task", "device", "CPU", "broadcast", "('/", "job", "localhost", "replica", "task", "0", "device", "CPU", "0", "',).", "60000", "60000", "[==============================]", "152us", "sample", "loss", "0", "6016", "Exception", "raised", "handle", "available", "outside", "replica", "context", "tf", "distribute", "Strategy", "update", "()`", "call", "```", "code", "works", "GPU", "based", "tensorflow", "environment", "without", "fuss", "fails", "CPU", "based", "environments", "Some", "people", "also", "facing", "issue", "Training", "works", "without", "issues", "predict", "method", "failing", "System", "information", "Have", "written", "custom", "code", "opposed", "using", "stock", "example", "script", "provided", "TensorFlow", "Yes", "TensorFlow", "installed", "source", "binary", "Source", "Other", "system", "related", "information", "```", "Collecting", "system", "information", "...", "tmp", "check_os", "18", "DeprecationWarning", "dist", "linux_distribution", "functions", "deprecated", "Python", "5", "platform", "linux_distribution", "(),", "tmp", "check_os", "19", "DeprecationWarning", "dist", "linux_distribution", "functions", "deprecated", "Python", "5", "platform", "dist", "(),", "cat", "proc", "cgroup", "file", "directory", "2020", "16", "58", "661018", "tensorflow", "core", "platform", "cpu_feature_guard", "145", "This", "TensorFlow", "binary", "optimized", "Intel", "R", "MKL", "DNN", "use", "following", "CPU", "instructions", "performance", "critical", "operations", "SSE4", "SSE4", "AVX", "AVX2", "FMA", "enable", "non", "MKL", "DNN", "operations", "rebuild", "TensorFlow", "appropriate", "compiler", "flags", "2020", "16", "58", "661360", "tensorflow", "core", "common_runtime", "process_util", "115", "Creating", "new", "thread", "pool", "default", "inter", "setting", "Tune", "using", "inter_op_parallelism_threads", "best", "performance", "architecture", "64bit", "'')", "machine", "x86_64", "docker", "=============================================", "compiler", "=====================================================", "Apple", "LLVM", "version", "clang", "1001", "46", "Target", "x86_64", "apple", "darwin18", "Thread", "model", "posix", "InstalledDir", "Library", "Developer", "CommandLineTools", "usr", "bin", "check", "pips", "===================================================", "numpy", "17", "protobuf", "11", "tensorflow", "tensorflow", "estimator", "tensorflow", "hub", "check", "virtualenv", "=========================================", "False", "tensorflow", "import", "============================================", "version", "VERSION", "version", "GIT_VERSION", "unknown", "version", "COMPILER_VERSION", "Compatible", "Clang", "tags", "RELEASE_401", "final", "Sanity", "check", "array", "dtype", "int32", "env", "==========================================================", "LD_LIBRARY_PATH", "unset", "DYLD_LIBRARY_PATH", "unset", "nvidia", "smi", "===================================================", "tf_env_cololect", "line", "147", "nvidia", "smi", "command", "found", "==", "cuda", "libs", "===================================================", "==", "tensorflow", "installed", "info", "==================", "Name", "tensorflow", "Version", "Summary", "TensorFlow", "open", "source", "machine", "learning", "framework", "everyone", "Home", "page", "https", "://", "www", "tensorflow", "org", "Author", "email", "packages", "tensorflow", "org", "License", "Apache", "Location", "Users", "sardarmrinal", "anaconda3", "lib", "python3", "site", "packages", "Required", "==", "python", "version", "==============================================", "major", "minor", "micro", "releaselevel", "serial", "final", "0", "==", "bazel", "version", "===============================================", "Build", "label", "1", "1", "Build", "time", "Tue", "Nov", "15", "31", "2019", "1574782051", "Build", "timestamp", "1574782051", "Build", "timestamp", "int", "1574782051", "```", "Describe", "current", "behavior", "The", "code", "running", "successfully", "GPU", "based", "environment", "failing", "CPU", "based", "environments", "Describe", "expected", "behavior", "It", "run", "fail", "way", "GPU", "CPU", "`", "based", "environments", "Code", "reproduce", "issue", "Code", "following", "link", "behavior", "https", "://", "www", "kaggle", "com", "xhlulu", "disaster", "nlp", "keras", "bert", "using", "tfhub", "And", "also", "people", "talking", "issue", "comments", "Other", "info", "logs", "```", "Making", "predictions", "Traceback", "recent", "call", "last", "File", "Users", "sardarmrinal", "Egnyte", "Private", "sardar", "mrinal", "workspace", "competitions", "kaggle_nlp_disaster", "working", "NLP_disaster_bert", "\",", "line", "218", "module", "df_sub", "model_bert", "predict", "df_eval", "File", "Users", "sardarmrinal", "Egnyte", "Private", "sardar", "mrinal", "workspace", "competitions", "kaggle_nlp_disaster", "working", "NLP_disaster_bert", "\",", "line", "186", "predict", "prediction", "self", "model", "predict", "X", "File", "Users", "sardarmrinal", "anaconda3", "lib", "python3", "site", "packages", "tensorflow_core", "python", "keras", "engine", "training", "\",", "line", "909", "predict", "use_multiprocessing", "use_multiprocessing", "File", "Users", "sardarmrinal", "anaconda3", "lib", "python3", "site", "packages", "tensorflow_core", "python", "keras", "engine", "training_v2", "\",", "line", "462", "predict", "steps", "steps", "callbacks", "callbacks", "kwargs", "File", "Users", "sardarmrinal", "anaconda3", "lib", "python3", "site", "packages", "tensorflow_core", "python", "keras", "engine", "training_v2", "\",", "line", "444", "_model_iteration", "total_epochs", "1", "File", "Users", "sardarmrinal", "anaconda3", "lib", "python3", "site", "packages", "tensorflow_core", "python", "keras", "engine", "training_v2", "\",", "line", "123", "run_one_epoch", "batch_outs", "execution_function", "iterator", "File", "Users", "sardarmrinal", "anaconda3", "lib", "python3", "site", "packages", "tensorflow_core", "python", "keras", "engine", "training_v2_utils", "\",", "line", "execution_function", "distributed_function", "input_fn", "File", "Users", "sardarmrinal", "anaconda3", "lib", "python3", "site", "packages", "tensorflow_core", "python", "eager", "def_function", "\",", "line", "457", "__call__", "result", "self", "_call", "args", "kwds", "File", "Users", "sardarmrinal", "anaconda3", "lib", "python3", "site", "packages", "tensorflow_core", "python", "eager", "def_function", "\",", "line", "503", "_call", "self", "_initialize", "args", "kwds", "add_initializers_to", "initializer_map", "File", "Users", "sardarmrinal", "anaconda3", "lib", "python3", "site", "packages", "tensorflow_core", "python", "eager", "def_function", "\",", "line", "408", "_initialize", "args", "kwds", "File", "Users", "sardarmrinal", "anaconda3", "lib", "python3", "site", "packages", "tensorflow_core", "python", "eager", "function", "\",", "line", "1848", "_get_concrete_function_internal_garbage_collected", "graph_function", "_", "self", "_maybe_define_function", "args", "kwargs", "File", "Users", "sardarmrinal", "anaconda3", "lib", "python3", "site", "packages", "tensorflow_core", "python", "eager", "function", "\",", "line", "2150", "_maybe_define_function", "graph_function", "self", "_create_graph_function", "args", "kwargs", "File", "Users", "sardarmrinal", "anaconda3", "lib", "python3", "site", "packages", "tensorflow_core", "python", "eager", "function", "\",", "line", "2041", "_create_graph_function", "capture_by_value", "self", "_capture_by_value", "File", "Users", "sardarmrinal", "anaconda3", "lib", "python3", "site", "packages", "tensorflow_core", "python", "framework", "func_graph", "\",", "line", "915", "func_graph_from_py_func", "func_outputs", "python_func", "func_args", "func_kwargs", "File", "Users", "sardarmrinal", "anaconda3", "lib", "python3", "site", "packages", "tensorflow_core", "python", "eager", "def_function", "\",", "line", "358", "wrapped_fn", "return", "weak_wrapped_fn", "().", "__wrapped__", "args", "kwds", "File", "Users", "sardarmrinal", "anaconda3", "lib", "python3", "site", "packages", "tensorflow_core", "python", "keras", "engine", "training_v2_utils", "\",", "line", "distributed_function", "per_replica_function", "args", "model", "sample_weights", "File", "Users", "sardarmrinal", "anaconda3", "lib", "python3", "site", "packages", "tensorflow_core", "python", "distribute", "distribute_lib", "\",", "line", "760", "experimental_run_v2", "return", "self", "_extended", "call_for_each_replica", "args", "args", "kwargs", "kwargs", "File", "Users", "sardarmrinal", "anaconda3", "lib", "python3", "site", "packages", "tensorflow_core", "python", "distribute", "distribute_lib", "\",", "line", "1787", "call_for_each_replica", "return", "self", "_call_for_each_replica", "fn", "args", "kwargs", "File", "Users", "sardarmrinal", "anaconda3", "lib", "python3", "site", "packages", "tensorflow_core", "python", "distribute", "distribute_lib", "\",", "line", "2132", "_call_for_each_replica", "return", "fn", "args", "kwargs", "File", "Users", "sardarmrinal", "anaconda3", "lib", "python3", "site", "packages", "tensorflow_core", "python", "autograph", "impl", "api", "\",", "line", "292", "wrapper", "return", "func", "args", "kwargs", "File", "Users", "sardarmrinal", "anaconda3", "lib", "python3", "site", "packages", "tensorflow_core", "python", "keras", "engine", "training_v2_utils", "\",", "line", "162", "_predict_on_batch", "return", "predict_on_batch", "model", "x", "File", "Users", "sardarmrinal", "anaconda3", "lib", "python3", "site", "packages", "tensorflow_core", "python", "keras", "engine", "training_v2_utils", "\",", "line", "370", "predict_on_batch", "return", "model", "inputs", "#", "pylint", "disable", "callable", "File", "Users", "sardarmrinal", "anaconda3", "lib", "python3", "site", "packages", "tensorflow_core", "python", "keras", "engine", "base_layer", "\",", "line", "847", "__call__", "outputs", "call_fn", "cast_inputs", "args", "kwargs", "File", "Users", "sardarmrinal", "anaconda3", "lib", "python3", "site", "packages", "tensorflow_core", "python", "keras", "engine", "network", "\",", "line", "708", "call", "convert_kwargs_to_constants", "base_layer_utils", "call_context", "().", "saving", "File", "Users", "sardarmrinal", "anaconda3", "lib", "python3", "site", "packages", "tensorflow_core", "python", "keras", "engine", "network", "\",", "line", "860", "_run_internal_graph", "output_tensors", "layer", "computed_tensors", "kwargs", "File", "Users", "sardarmrinal", "anaconda3", "lib", "python3", "site", "packages", "tensorflow_core", "python", "keras", "engine", "base_layer", "\",", "line", "847", "__call__", "outputs", "call_fn", "cast_inputs", "args", "kwargs", "File", "Users", "sardarmrinal", "anaconda3", "lib", "python3", "site", "packages", "tensorflow_core", "python", "autograph", "impl", "api", "\",", "line", "292", "wrapper", "return", "func", "args", "kwargs", "File", "Users", "sardarmrinal", "anaconda3", "lib", "python3", "site", "packages", "tensorflow_hub", "keras_layer", "\",", "line", "218", "call", "lambda", "training", "False", "File", "Users", "sardarmrinal", "anaconda3", "lib", "python3", "site", "packages", "tensorflow_core", "python", "framework", "smart_cond", "\",", "line", "smart_cond", "return", "false_fn", "File", "Users", "sardarmrinal", "anaconda3", "lib", "python3", "site", "packages", "tensorflow_hub", "keras_layer", "\",", "line", "218", "lambda", "lambda", "training", "False", "File", "Users", "sardarmrinal", "anaconda3", "lib", "python3", "site", "packages", "tensorflow_core", "python", "saved_model", "load", "\",", "line", "436", "_call_attribute", "return", "instance", "__call__", "args", "kwargs", "File", "Users", "sardarmrinal", "anaconda3", "lib", "python3", "site", "packages", "tensorflow_core", "python", "eager", "def_function", "\",", "line", "457", "__call__", "result", "self", "_call", "args", "kwds", "File", "Users", "sardarmrinal", "anaconda3", "lib", "python3", "site", "packages", "tensorflow_core", "python", "eager", "def_function", "\",", "line", "494", "_call", "results", "self", "_stateful_fn", "args", "kwds", "File", "Users", "sardarmrinal", "anaconda3", "lib", "python3", "site", "packages", "tensorflow_core", "python", "eager", "function", "\",", "line", "1822", "__call__", "graph_function", "args", "kwargs", "self", "_maybe_define_function", "args", "kwargs", "File", "Users", "sardarmrinal", "anaconda3", "lib", "python3", "site", "packages", "tensorflow_core", "python", "eager", "function", "\",", "line", "2150", "_maybe_define_function", "graph_function", "self", "_create_graph_function", "args", "kwargs", "File", "Users", "sardarmrinal", "anaconda3", "lib", "python3", "site", "packages", "tensorflow_core", "python", "eager", "function", "\",", "line", "2041", "_create_graph_function", "capture_by_value", "self", "_capture_by_value", "File", "Users", "sardarmrinal", "anaconda3", "lib", "python3", "site", "packages", "tensorflow_core", "python", "framework", "func_graph", "\",", "line", "915", "func_graph_from_py_func", "func_outputs", "python_func", "func_args", "func_kwargs", ")", "File", "Users", "sardarmrinal", "anaconda3", "lib", "python3", "7", "site", "packages", "tensorflow_core", "python", "eager", "def_function", "\",", "line", "358", "wrapped_fn", "return", "weak_wrapped_fn", "().", "__wrapped__", "(*", "args", "kwds", ")", "File", "Users", "sardarmrinal", "anaconda3", "lib", "python3", "7", "site", "packages", "tensorflow_core", "python", "saved_model", "function_deserialization", "\",", "line", "262", "restored_function_body", "n", "n", "join", "signature_descriptions", ")))", "ValueError", "Could", "find", "matching", "function", "call", "loaded", "SavedModel", "Got", "Positional", "arguments", "total", "[<", "Tensor", "inputs", "0", "shape", "None", ")", "dtype", "int64", "<", "Tensor", "inputs_1", "0", "shape", "None", ")", "dtype", "int64", "<", "Tensor", "inputs_2", "0", "shape", "None", ")", "dtype", "int64", "False", "None", "Keyword", "arguments", "Expected", "arguments", "match", "one", "following", "option", "Option", "1", "Positional", "arguments", "3", "total", "[", "TensorSpec", "shape", "None", "None", "dtype", "tf", "int32", "name", "input_word_ids", "'),", "TensorSpec", "shape", "None", "None", "dtype", "tf", "int32", "name", "input_mask", "'),", "TensorSpec", "shape", "None", "None", "dtype", "tf", "int32", "name", "input_type_ids", "')]", "True", "None", "Keyword", "arguments", "Option", "Positional", "arguments", "3", "total", "[", "TensorSpec", "shape", "None", "None", "dtype", "tf", "int32", "name", "input_word_ids", "'),", "TensorSpec", "shape", "None", "None", "dtype", "tf", "int32", "name", "input_mask", "'),", "TensorSpec", "shape", "None", "None", "dtype", "tf", "int32", "name", "input_type_ids", "')]", "False", "None", "Keyword", "arguments", "Option", "3", "Positional", "arguments", "3", "total", "[", "TensorSpec", "shape", "None", "None", "dtype", "tf", "int32", "name", "inputs", "0", "'),", "TensorSpec", "shape", "None", "None", "dtype", "tf", "int32", "name", "inputs", "1", "'),", "TensorSpec", "(", "shape", "None", "None", "dtype", "tf", "int32", "name", "inputs", "2", "')]", "True", "None", "Keyword", "arguments", "Option", "4", "Positional", "arguments", "(", "3", "total", "):", "[", "TensorSpec", "(", "shape", "None", "None", "dtype", "tf", "int32", "name", "inputs", "0", "'),", "TensorSpec", "(", "shape", "None", "None", "dtype", "tf", "int32", "name", "inputs", "1", "'),", "TensorSpec", "(", "shape", "None", "None", "dtype", "tf", "int32", "name", "inputs", "2", "')]", "False", "None", "Keyword", "arguments", "```", "This", "implements", "GPU", "kernels", "ApplyAdagrad", "ApplyAdagradV2", "ApplyAdadelta", "ApplyRMSProp", "ApplyCenteredRMSProp", "ROCm", "enables", "corresponding", "unit", "tests", "Minor", "fixes", "StructuredTensor", "pydocs", "incorrect", "example", "code", "Python", "style", "print", "statements", "em", "Please", "make", "sure", "bug", "per", "GitHub", "Policy", "https", "://", "github", "com", "tensorflow", "tensorflow", "blob", "master", "ISSUES", "),", "address", "code", "doc", "bugs", "performance", "issues", "feature", "requests", "build", "installation", "issues", "GitHub", "tag", "bug_template", "em", "System", "information", "Have", "written", "custom", "code", "opposed", "using", "stock", "example", "script", "provided", "TensorFlow", "OS", "Platform", "Distribution", "e", ".,", "Linux", "Ubuntu", "04", "Windows", "Mobile", "device", "e", "iPhone", "Pixel", "Samsung", "Galaxy", "issue", "happens", "mobile", "device", "TensorFlow", "installed", "source", "binary", "binary", "TensorFlow", "version", "use", "command", "nightly", "Python", "version", "Bazel", "version", "compiling", "source", "GCC", "Compiler", "version", "compiling", "source", "CUDA", "cuDNN", "version", "GPU", "model", "memory", "You", "collect", "information", "using", "environment", "capture", "script", "https", "://", "github", "com", "tensorflow", "tensorflow", "tree", "master", "tools", "tf_env_collect", "You", "also", "obtain", "TensorFlow", "version", "TF", "0", "python", "import", "tensorflow", ";", "print", "GIT_VERSION", "VERSION", ")\"`", "TF", "0", "python", "import", "tensorflow", "tf", ";", "print", "tf", "version", "GIT_VERSION", "tf", "version", "VERSION", ")\"`", "Describe", "current", "behavior", "File", "\"\\\\?\\", ":\\", "Users", "RUNNER", "1", "AppData", "Local", "Temp", "Bazel", "runfiles_e847arzc", "runfiles", "__main__", "tensorflow_addons", "activations", "rrelu_test", "\",", "line", "benchmarkRreluOp", "self", "run_op_benchmark", "sess", "result", "min_iters", "25", "File", ":\\", "hostedtoolcache", "windows", "Python", "3", "7", "5", "x64", "lib", "site", "packages", "tensorflow_core", "python", "platform", "benchmark", "\",", "line", "389", "run_op_benchmark", "throughput", "mbs", "median_delta", "ZeroDivisionError", "float", "division", "zero", "Describe", "expected", "behavior", "Same", "behavior", "ubuntu", "Code", "reproduce", "issue", "Provide", "reproducible", "test", "case", "bare", "minimum", "necessary", "generate", "problem", "```", "python", "self", "run_op_benchmark", "sess", "result", "min_iters", "25", "```", "Other", "info", "logs", "**", "https", "://", "github", "com", "tensorflow", "addons", "issues", "839", "seems", "[```", "time", "time", "()```](", "https", "://", "github", "com", "tensorflow", "tensorflow", "blob", "590d6eef7e91a6a7392c8ffffb7b58f2e0c8bc6b", "tensorflow", "python", "platform", "benchmark", "#", "L294", ")", "cause", "problem", "```", "timeit", "default_timer", "()```", "could", "fix", "problem", "em", "Please", "make", "sure", "bug", "per", "GitHub", "Policy", "https", "://", "github", "com", "tensorflow", "tensorflow", "blob", "master", "ISSUES", "address", "code", "doc", "bugs", "performance", "issues", "feature", "requests", "build", "installation", "issues", "GitHub", "tag", "bug_template", "em", "System", "information", "Have", "written", "custom", "code", "opposed", "using", "stock", "example", "script", "provided", "TensorFlow", "Stateless", "LSTM", "Keras", "tutorial", "using", "backend", "Platform", "Distribution", "e", ".,", "Linux", "Ubuntu", "Windows", "TensorFlow", "installed", "source", "binary", "binary", "TensorFlow", "version", "use", "command", "Python", "version", "7", "CUDA", "cuDNN", "version", "GPU", "model", "memory", "MX150", "10GB", "Describe", "current", "behavior", "When", "using", "keras", "callbacks", "TensorBoard", "without", "profile_batch", "setting", "gives", "errors", "CUPTI_ERROR_INSUFFICIENT_PRIVILEGES", "CUPTI_ERROR_INVALID_PARAMETER", "tensorflow", "core", "profiler", "internal", "gpu", "cupti_tracer", "Describe", "expected", "behavior", "With", "profile_batch", "two", "errors", "gone", "But", "comes", "back", "profile_batch", "non", "zero", "values", "Code", "reproduce", "issue", "```", "__future__", "import", "print_function", "import", "numpy", "import", "matplotlib", "pyplot", "plt", "import", "pandas", "import", "tensorflow", "tensorflow", "keras", "models", "import", "Sequential", "tensorflow", "keras", "layers", "import", "Dense", "LSTM", "input_len", "1000", "tsteps", "2", "lahead", "batch_size", "epochs", "print", "(\"*\"", "lahead", "tsteps", "print", "STATELESS", "LSTM", "WILL", "ALSO", "CONVERGE", "else", "print", "STATELESS", "LSTM", "WILL", "NOT", "CONVERGE", "print", "(\"*\"", "random", "seed", "1986", "print", "Generating", "Data", "...')", "def", "gen_uniform_amp", "amp", "10000", "data_input", "np", "random", "uniform", "amp", "amp", "data_input", "pd", "DataFrame", "data_input", "return", "data_input", "to_drop", "max", "tsteps", "lahead", "data_input", "gen_uniform_amp", "amp", "1", "xn", "input_len", "to_drop", "expected_output", "data_input", "rolling", "window", "tsteps", "center", "False", "mean", "lahead", "1", "data_input", "np", "repeat", "data_input", "values", "repeats", "lahead", "axis", "1", "data_input", "pd", "DataFrame", "data_input", "c", "enumerate", "data_input", "columns", "data_input", "c", "data_input", "c", "shift", "expected_output", "expected_output", "to_drop", "data_input", "data_input", "to_drop", "def", "create_model", "stateful", "model", "Sequential", "model", "add", "LSTM", "20", "input_shape", "lahead", "1", "batch_size", "batch_size", "stateful", "stateful", "model", "add", "Dense", "1", "model", "compile", "loss", "mse", "optimizer", "adam", "return", "model", "print", "Creating", "Stateful", "Model", "...')", "model_stateful", "create_model", "stateful", "True", "def", "split_data", "ratio", "to_train", "int", "input_len", "ratio", "to_train", "to_train", "batch_size", "x_train", "to_train", "y_train", "[:", "to_train", "x_test", "x", "to_train", "y_test", "to_train", "#", "tweak", "match", "batch_size", "to_drop", "x", "shape", "%", "batch_size", "to_drop", "x_test", "x_test", "[:-", "1", "to_drop", "y_test", "y_test", "[:-", "1", "to_drop", "#", "reshaping", "reshape_3", "lambda", "x", "x", "values", "reshape", "x", "shape", "0", "x", "shape", "1", "1", "x_train", "reshape_3", "x_train", "x_test", "reshape_3", "x_test", "reshape_2", "lambda", "x", "x", "values", "reshape", "x", "shape", "[", "0", "1", "y_train", "reshape_2", "y_train", "y_test", "reshape_2", "y_test", "return", "x_train", "y_train", "x_test", "y_test", "x_train", "y_train", "),", "x_test", "y_test", "split_data", "data_input", "expected_output", "print", "x_train", "shape", "x_train", "shape", "print", "y_train", "shape", "y_train", "shape", "print", "x_test", "shape", "x_test", "shape", "print", "y_test", "shape", "y_test", "shape", "print", "Creating", "Stateless", "Model", "...')", "model_stateless", "create_model", "stateful", "False", "import", "import", "datetime", "ROOT_DIR", "os", "getcwd", "log_dir", "os", "path", "join", "callback_tests", "os", "path", "exists", "log_dir", "):", "os", "makedirs", "log_dir", "print", "log_dir", "tensorboard_callback", "tf", "keras", "callbacks", "TensorBoard", "log_dir", "log_dir", ")", "print", "Training", "history", "model_stateless", "fit", "x_train", "y_train", "batch_size", "batch_size", "epochs", "=", "epochs", "verbose", "=", "1", "validation_data", "x_test", "y_test", "),", "shuffle", "=", "False", "callbacks", "tensorboard_callback", ")", "```", "**", "Other", "info", "logs", "**", "Train", "800", "samples", "validate", "200", "samples", "2020", "14", "30", "591905", "tensorflow", "core", "profiler", "lib", "profiler_session", "225", "Profiler", "session", "started", "2020", "14", "30", "594743", "tensorflow", "core", "profiler", "internal", "gpu", "cupti_tracer", "1259", "Profiler", "found", "1", "GPUs", "2020", "14", "30", "599172", "tensorflow", "stream_executor", "platform", "default", "dso_loader", "44", "Successfully", "opened", "dynamic", "library", "cupti64_101", "dll", "2020", "14", "30", "704083", "tensorflow", "core", "profiler", "internal", "gpu", "cupti_tracer", "1307", "function", "cupti_interface_", "Subscribe", "&", "subscriber_", "(", "CUpti_CallbackFunc", ")", "ApiCallback", ")", "failed", "error", "CUPTI_ERROR_INSUFFICIENT_PRIVILEGES", "2020", "14", "30", "716790", "tensorflow", "core", "profiler", "internal", "gpu", "cupti_tracer", "1346", "function", "cupti_interface_", "ActivityRegisterCallbacks", "(", "AllocCuptiActivityBuffer", "FreeCuptiActivityBuffer", ")", "failed", "error", "CUPTI_ERROR_INSUFFICIENT_PRIVILEGES", "Epoch", "1", "5", "2020", "14", "30", "370429", "tensorflow", "stream_executor", "platform", "default", "dso_loader", "44", "Successfully", "opened", "dynamic", "library", "cublas64_10", "dll", "2020", "14", "30", "651767", "tensorflow", "stream_executor", "platform", "default", "dso_loader", "44", "Successfully", "opened", "dynamic", "library", "cudnn64_7", "dll", "2020", "14", "30", "662864", "tensorflow", "core", "profiler", "internal", "gpu", "cupti_tracer", "1329", "function", "cupti_interface_", "EnableCallback", "(", "0", "subscriber_", "CUPTI_CB_DOMAIN_DRIVER_API", "cbid", ")", "failed", "error", "CUPTI_ERROR_INVALID_PARAMETER", "2020", "14", "30", "670282", "tensorflow", "core", "profiler", "internal", "gpu", "device_tracer", "88", "GpuTracer", "collected", "0", "callback", "api", "events", "0", "activity", "events", "800", "800", "[==============================]", "6ms", "sample", "loss", "0", "0011", "val_loss", "0", "0011", "Epoch", "2", "5", "800", "800", "[==============================]", "4ms", "sample", "loss", "5921e", "val_loss", "0", "0010", "Epoch", "5", "800", "800", "[==============================]", "3ms", "sample", "loss", "5613e", "val_loss", "0", "0010", "Epoch", "5", "800", "800", "[==============================]", "4ms", "sample", "loss", "5458e", "val_loss", "9713e", "Epoch", "5", "5", "800", "800", "[==============================]", "4ms", "sample", "loss", "5345e", "val_loss", "8825e", "04", "em", "Please", "make", "sure", "bug", "per", "GitHub", "Policy", "https", "://", "github", "com", "tensorflow", "tensorflow", "blob", "master", "ISSUES", "),", "address", "code", "doc", "bugs", "performance", "issues", "feature", "requests", "build", "installation", "issues", "GitHub", "tag", "bug_template", "em", "System", "information", "Have", "written", "custom", "code", "opposed", "using", "stock", "example", "script", "provided", "TensorFlow", "Yes", "Platform", "Distribution", "e", ".,", "Linux", "Ubuntu", "04", "colab", "Mobile", "device", "e", "iPhone", "Pixel", "Samsung", "Galaxy", "issue", "happens", "mobile", "device", "TensorFlow", "installed", "source", "binary", "TensorFlow", "version", "use", "command", "2", "0", "rc1", "Python", "version", "6", "Bazel", "version", "compiling", "source", "GCC", "Compiler", "version", "compiling", "source", "CUDA", "cuDNN", "version", "V10", "243", "GPU", "model", "memory", "Describe", "current", "behavior", "use", "image", "random_brightness", "api", "augmentation", "With", "dataset", "api", "put", "augmentation", "functions", "parser", "method", "use", "Dataset", "map", "api", "applying", "method", "dataset", "_Transformed", "dataset_", "reproducible", "put", "non", "negative", "integer", "0", "_num_parallel_calls_", "argument", "Dataset", "map", "api", "also", "use", "data", "experimental", "AUTOTUNE", "num_parallel_calls", "argument", "Code", "reproduce", "issue", "[", "colab", "link", "reproduce", "issue", "https", "://", "colab", "research", "google", "com", "drive", "1uNpn1Rf1_WvG2lnAS41g36IDWOB2IW7", "**", "Other", "info", "logs", "**", "It", "looks", "like", "random", "uniform", "method", "reason", "happening", "The", "implementation", "image", "random_brightness", "use", "tensorflow", "random", "uniform", "method", "method", "reproducible", "multiprocessing", "I", "tested", "image", "random_contrast", "image", "random_saturation", "They", "reproducible", "also", "System", "information", "TensorFlow", "version", "using", "TF", "0", "Are", "willing", "contribute", "Yes", "):", "Yes", "Describe", "feature", "current", "behaviour", "state", "Currently", "keras", "models", "Model", "fit", "method", "allows", "user", "pass", "either", "sample_weight", "class_weight", "parameters", "These", "used", "compute", "point", "https", "://", "github", "com", "tensorflow", "tensorflow", "blob", "1cf0898dd4331baf93fe77205550f2c2e6c90ee5", "tensorflow", "python", "keras", "engine", "training", "#", "L2527", "standardised", "sample_weights", "used", "later", "calculating", "loss", "This", "feature", "request", "extending", "tf", "keras", "Model", "evaluate", "API", "permits", "using", "class_weight", "directly", "The", "evaluate", "function", "already", "permits", "sample_weight", "Will", "change", "current", "api", "How", "current", "API", "```", "evaluate", "x", "None", "None", "batch_size", "None", "verbose", "1", "sample_weight", "None", "steps", "None", "callbacks", "None", "max_queue_size", "10", "workers", "1", "use_multiprocessing", "False", "```", "new", "API", "```", "evaluate", "x", "None", "None", "batch_size", "None", "verbose", "1", "sample_weight", "None", ">>>", "class_weight", "None", "steps", "None", "callbacks", "None", "max_queue_size", "10", "workers", "1", "use_multiprocessing", "False", "```", "Who", "benefit", "feature", "Those", "users", "API", "would", "like", "perform", "evaluation", "model", "trained", "bespoke", "class", "weights", "Any", "Other", "info", "**", "https", "://", "github", "com", "tensorflow", "examples", "blob", "master", "courses", "udacity_intro_to_tensorflow_lite", "tflite_c04_exercise_convert_model_to_tflite_solution", "ipynb", "Under", "Create", "Dataset", "Images", "Labels", "code", "train_batches", "train_examples", "cache", "().", "shuffle", "num_examples", "batch", "BATCH_SIZE", "map", "format_example", ").", "prefetch", "1", "similar", "validation", "test", "examples", "...", "right", "practise", "Shouldn", "first", "format", "raw", "images", "batch", "together", "rather", "opposite", "way", "em", "Please", "make", "sure", "build", "installation", "issue", "per", "GitHub", "Policy", "https", "://", "github", "com", "tensorflow", "tensorflow", "blob", "master", "ISSUES", "),", "address", "code", "doc", "bugs", "performance", "issues", "feature", "requests", "build", "installation", "issues", "GitHub", "tag", "build_template", "em", "System", "information", "OS", "Platform", "Distribution", "e", ".,", "Linux", "Ubuntu", "04", "Windows", "home", "Mobile", "device", "e", "iPhone", "Pixel", "Samsung", "Galaxy", "issue", "happens", "mobile", "device", "TensorFlow", "installed", "source", "binary", "TensorFlow", "version", "Python", "version", "Installed", "using", "virtualenv", "pip", "conda", "conda", "Bazel", "version", "compiling", "source", "GCC", "Compiler", "version", "compiling", "source", "CUDA", "cuDNN", "version", "4", "GPU", "model", "memory", "RTX", "2080", "CPU", "model", "make", "AMD", "Ryzen", "3800X", "Core", "Processor", "89GHz", "Anaconda", "Python", "Command", "Prompt", "Describe", "problem", "Trying", "build", "source", "Issue", "creation", "wheel", "file", "bazel", "Attached", "exact", "sequence", "commands", "issued", "Trying", "conver", "pb", "file", "TFLite", "file", "trained", "tensorflow", "13", "Exact", "sequence", "commands", "steps", "executed", "running", "problem", "conda", "update", "base", "defaults", "conda", "conda", "update", "conda", "create", "tensorflow", "build", "pip", "python", "6", "conda", "activate", "tensorflow", "build", "python", "pip", "install", "upgrade", "pip", "conda", "install", "anaconda", "git", "set", "PATH", "PATH", "msys64", "usr", "bin", "pip", "install", "six", "numpy", "wheel", "pip", "install", "keras_applications", "1", "6", "deps", "pip", "install", "keras_preprocessing", "1", "deps", "conda", "install", "conda", "forge", "bazel", "mkdir", "tensorflow", "build", "tensorflow", "build", "git", "clone", "https", "://", "github", "com", "tensorflow", "tensorflow", "git", "tensorflow", "git", "checkout", "13", "python", "configure", "You", "bazel", "21", "(@", "non", "git", "installed", "Please", "specify", "location", "python", "Default", "ProgramData", "Anaconda3", "envs", "tensorflow", "build", "python", "exe", "Found", "possible", "Python", "library", "paths", "ProgramData", "Anaconda3", "envs", "tensorflow", "build", "lib", "site", "packages", "Please", "input", "desired", "Python", "library", "path", "use", "Default", ":\\", "ProgramData", "Anaconda3", "envs", "tensorflow", "build", "lib", "site", "packages", "wish", "build", "TensorFlow", "XLA", "JIT", "support", "N", "XLA", "JIT", "support", "enabled", "TensorFlow", "wish", "build", "TensorFlow", "ROCm", "support", "N", "n", "ROCm", "support", "enabled", "TensorFlow", "Do", "wish", "build", "TensorFlow", "CUDA", "support", "N", "Please", "specify", "CUDA", "SDK", "version", "want", "use", "Leave", "empty", "default", "CUDA", "0", "0", "Please", "specify", "location", "CUDA", "10", "0", "toolkit", "installed", "Refer", "README", "details", "Default", "Program", "Files", "NVIDIA", "GPU", "Computing", "Toolkit", "CUDA", "v10", "0", "Please", "specify", "cuDNN", "version", "want", "use", "Leave", "empty", "default", "cuDNN", "4", "Please", "specify", "location", "cuDNN", "library", "installed", "Refer", "README", "details", "Default", "Program", "Files", "NVIDIA", "GPU", "Computing", "Toolkit", "CUDA", "v10", "0", "]:", "Please", "specify", "list", "comma", "separated", "Cuda", "compute", "capabilities", "want", "build", "You", "find", "compute", "capability", "device", "https", "://", "developer", "nvidia", "com", "cuda", "gpus", "Please", "note", "additional", "compute", "capability", "significantly", "increases", "build", "time", "binary", "size", "Default", "3", "0", "]:", "7", "5", "Please", "specify", "optimization", "flags", "use", "compilation", "bazel", "option", "\"--", "config", "opt", "specified", "Default", "arch", "AVX", "]:", "Would", "like", "override", "eigen", "strong", "inline", "++", "compilation", "reduce", "compilation", "time", "Y", "n", "]:", "Eigen", "strong", "inline", "overridden", "bazel", "build", "config", "opt", "config", "cuda", "define", "no_tensorflow_py_deps", "true", "tensorflow", "tools", "pip_package", "build_pip_package", "info", "logs", "**", "////////////////////////////////////////////////////////", "LOG", "/////////////////////////////////////////////////////", "ERROR", "tensorflow", "build", "tensorflow", "tensorflow", "BUILD", "579", "1", "Executing", "genrule", "tensorflow", "tf_python_api_gen_v1", "failed", "Exit", "1", "bash", "exe", "failed", "error", "executing", "command", "users", "eduar", "_bazel_eduar", "j7bi4x5j", "execroot", "org_tensorflow", "SET", "CUDA_TOOLKIT_PATH", "Program", "Files", "NVIDIA", "GPU", "Computing", "Toolkit", "CUDA", "v10", "0", "SET", "CUDNN_INSTALL_PATH", ":/", "Program", "Files", "NVIDIA", "GPU", "Computing", "Toolkit", "CUDA", "v10", "0", "SET", "PATH", ":\\", "msys64", "usr", "bin", ":\\", "msys64", "bin", "SET", "PYTHON_BIN_PATH", ":/", "Users", "eduar", "conda", "envs", "tensorflow", "build", "python", "exe", "SET", "PYTHON_LIB_PATH", ":/", "Users", "eduar", "conda", "envs", "tensorflow", "build", "lib", "site", "packages", "SET", "TF_CUDA_CLANG", "0", "SET", "TF_CUDA_COMPUTE_CAPABILITIES", "7", "5", "SET", "TF_CUDA_VERSION", "10", "0", "SET", "TF_CUDNN_VERSION", "7", "SET", "TF_NEED_CUDA", "1", "SET", "TF_NEED_OPENCL_SYCL", "0", "SET", "TF_NEED_ROCM", "0", ":/", "msys64", "usr", "bin", "bash", "exe", "bazel", "x64_windows", "opt", "genfiles", "tensorflow", "tf_python_api_gen_v1", "genrule_script", "Execution", "platform", "bazel_tools", "platforms", "host_platform", "Traceback", "recent", "call", "last", "File", "\"\\\\?\\", ":\\", "Users", "eduar", "AppData", "Local", "Temp", "Bazel", "runfiles_fxnhn1zo", "runfiles", "org_tensorflow", "tensorflow", "python", "pywrap_tensorflow", "\",", "line", "<", "module", "tensorflow", "python", "pywrap_tensorflow_internal", "import", "File", "\"\\\\?\\", ":\\", "Users", "eduar", "AppData", "Local", "Temp", "Bazel", "runfiles_fxnhn1zo", "runfiles", "org_tensorflow", "tensorflow", "python", "pywrap_tensorflow_internal", "\",", "line", "<", "module", "_pywrap_tensorflow_internal", "swig_import_helper", "File", "\"\\\\?\\", ":\\", "Users", "eduar", "AppData", "Local", "Temp", "Bazel", "runfiles_fxnhn1zo", "runfiles", "org_tensorflow", "tensorflow", "python", "pywrap_tensorflow_internal", "\",", "line", "swig_import_helper", "_mod", "imp", "load_module", "_pywrap_tensorflow_internal", "fp", "pathname", "description", "File", "C", ":\\", "Users", "eduar", "conda", "envs", "tensorflow", "build", "lib", "imp", "\",", "line", "243", "load_module", "return", "load_dynamic", "name", "filename", "file", "File", "C", ":\\", "Users", "eduar", "conda", "envs", "tensorflow", "build", "lib", "imp", "\",", "line", "343", "load_dynamic", "return", "_load", "spec", "ImportError", "DLL", "load", "failed", "The", "specified", "module", "could", "found", "During", "handling", "exception", "another", "exception", "occurred", "Traceback", "recent", "call", "last", "File", "\"\\\\?\\", "C", ":\\", "Users", "eduar", "AppData", "Local", "Temp", "Bazel", "runfiles_fxnhn1zo", "runfiles", "org_tensorflow", "tensorflow", "python", "tools", "api", "generator", "create_python_api", "\",", "line", "<", "module", "tensorflow", "python", "tools", "api", "generator", "import", "doc_srcs", "File", "\"\\\\?\\", "C", ":\\", "Users", "eduar", "AppData", "Local", "Temp", "Bazel", "runfiles_fxnhn1zo", "runfiles", "org_tensorflow", "tensorflow", "python", "__init__", "\",", "line", "<", "module", "tensorflow", "python", "import", "pywrap_tensorflow", "File", "\"\\\\?\\", "C", ":\\", "Users", "eduar", "AppData", "Local", "Temp", "Bazel", "runfiles_fxnhn1zo", "runfiles", "org_tensorflow", "tensorflow", "python", "pywrap_tensorflow", "\",", "line", "<", "module", "raise", "ImportError", "msg", "ImportError", "Traceback", "recent", "call", "last", "):", "File", "\"\\\\?\\", "C", ":\\", "Users", "eduar", "AppData", "Local", "Temp", "Bazel", "runfiles_fxnhn1zo", "runfiles", "org_tensorflow", "tensorflow", "python", "pywrap_tensorflow", "\",", "line", "<", "module", "tensorflow", "python", "pywrap_tensorflow_internal", "import", "File", "\"\\\\?\\", "C", ":\\", "Users", "eduar", "AppData", "Local", "Temp", "Bazel", "runfiles_fxnhn1zo", "runfiles", "org_tensorflow", "tensorflow", "python", "pywrap_tensorflow_internal", "\",", "line", "<", "module", "_pywrap_tensorflow_internal", "swig_import_helper", "File", "\"\\\\?\\", "C", ":\\", "Users", "eduar", "AppData", "Local", "Temp", "Bazel", "runfiles_fxnhn1zo", "runfiles", "org_tensorflow", "tensorflow", "python", "pywrap_tensorflow_internal", "\",", "line", "24", "swig_import_helper", "_mod", "imp", "load_module", "_pywrap_tensorflow_internal", "fp", "pathname", "description", "File", "C", ":\\", "Users", "eduar", "conda", "envs", "tensorflow", "build", "lib", "imp", "\",", "line", "243", "load_module", "return", "load_dynamic", "name", "filename", "file", "File", "C", ":\\", "Users", "eduar", "conda", "envs", "tensorflow", "build", "lib", "imp", "\",", "line", "343", "load_dynamic", "return", "_load", "spec", "ImportError", "DLL", "load", "failed", "The", "specified", "module", "could", "found", "Failed", "load", "native", "TensorFlow", "runtime", "See", "https", "://", "www", "tensorflow", "org", "install", "errors", "common", "reasons", "solutions", "Include", "entire", "stack", "trace", "error", "message", "asking", "help", "Target", "tensorflow", "tools", "pip_package", "build_pip_package", "failed", "build", "INFO", "Elapsed", "time", "1319", "085s", "Critical", "Path", "291", "62s", "INFO", "4651", "processes", "4651", "local", "FAILED", "Build", "NOT", "complete", "successfully", "///////////////////////////////////////////////////////////////////////////////////////////////////////////////////", "Include", "logs", "source", "code", "would", "helpful", "diagnose", "problem", "including", "tracebacks", "please", "include", "full", "traceback", "Large", "logs", "files", "attached", "em", "Please", "make", "sure", "build", "installation", "issue", "per", "GitHub", "Policy", "https", "://", "github", "com", "tensorflow", "tensorflow", "blob", "master", "ISSUES", "),", "address", "code", "doc", "bugs", "performance", "issues", "feature", "requests", "build", "installation", "issues", "GitHub", "tag", "build_template", "em", "System", "information", "**", "OS", "Platform", "Distribution", "Windows", "TensorFlow", "installed", "source", "binary", "Source", "TensorFlow", "version", "Python", "version", "Bazel", "version", "compiling", "source", "0", "1", "GCC", "Compiler", "version", "compiling", "source", "VS2019", "CUDA", "cuDNN", "version", "1", "7", "6", "GPU", "model", "memory", "2070", "Max", "setup", "using", "configure", "following", "options", "selected", "XLA", "JIT", "Cuda", "arch", "AVX", "Eigen", "strong", "inline", "overridden", "When", "attempting", "build", "source", "using", "following", "command", "bazel", "build", "config", "opt", "config", "cuda", "define", "no_tensorflow_py_deps", "true", "tensorflow", "libtensorflow", "I", "get", "following", "error", "ERROR", ":/", "sdks", "tensorflow", "tensorflow", "compiler", "xla", "service", "gpu", "BUILD", "1616", "1", "C", "compilation", "rule", "'//", "tensorflow", "compiler", "xla", "service", "gpu", "hlo_algorithm_blacklist", "failed", "Exit", ")", "Command", "line", "warning", "D9002", "ignoring", "unknown", "option", "std", "c", "14", "tensorflow", "compiler", "xla", "service", "gpu", "hlo_algorithm_blacklist", "error", "C2131", "expression", "evaluate", "constant", "external", "com_google_absl", "absl", "strings", "string_view", "(", "186", "):", "note", "non", "constant", "(", "sub", "expression", "encountered", "System", "information", "Have", "written", "custom", "code", "opposed", "using", "stock", "example", "script", "provided", "TensorFlow", "see", "Platform", "Distribution", "e", ".,", "Linux", "Ubuntu", "04", "Windows", "Linux", "TensorFlow", "installed", "source", "binary", "pip", "TensorFlow", "version", "use", "command", "2", "Python", "version", "Describe", "current", "behavior", "In", "example", "error", "raised", "although", "session", "kwargs", "supported", "eager", "mode", "kwargs", "simply", "silently", "ignored", "```", "import", "tensorflow", "tensorflow", "import", "keras", "fetches", "[", "lambda", "whatever_I_write_here_is_ignored", "var", "Variable", "([[", "]])", "model", "keras", "models", "Sequential", "keras", "layers", "Dense", "1", "input_shape", "1", ",))])", "model", "compile", "loss", "mse", "optimizer", "adam", "model", "_function_kwargs", "{\"", "fetches", "fetches", "should_fail", "ignored_as_well", "model", "fit", "([[", "0", "]],", "9", "0", "]],", "epochs", "2", "```", "Describe", "expected", "behavior", "**", "An", "error", "raised", "aware", "model", "_function_kwargs", "part", "public", "API", "keras", "opposed", "tf", "keras", "raise", "error", "```", "import", "keras", "import", "tensorflow", "tf", "fetches", "[", "lambda", "whatever_I_write_here_is_ignored", "var", "tf", "Variable", "([[", "0", "]])", "model", "keras", "models", "Sequential", "keras", "layers", "Dense", "1", "input_shape", "1", ",))])", "model", "compile", "(", "loss", "mse", "optimizer", "adam", "model", "_function_kwargs", "{\"", "fetches", "fetches", "should_fail", "ignored_as_well", "model", "fit", "([[", "0", "]],", "9", "0", "]],", "epochs", "2", "```", "outputs", "```", "Exception", "occurred", "ValueError", "Session", "keyword", "arguments", "support", "eager", "execution", "You", "passed", "fetches", "[<", "function", "lambda", "0x7f94681be3b0", ">],", "should_fail", "ignored_as_well", "File", "home", "bersbersbers", "pyenv", "versions", "7", "lib", "python3", "7", "site", "packages", "tensorflow_core", "python", "keras", "backend", "\",", "line", "3759", "function", "```", "Somewhat", "related", "https", "://", "github", "com", "tensorflow", "tensorflow", "issues", "34448", "Version", "Python", "7", "IDE", "Spyder", "Windows", "wrote", "subclass", "custom", "loss", "function", "tried", "list", "arguments", "checkpoint", "follows", "The", "model", "arbitrary", "one", "```", "class", "SoftDiceLoss", "keras", "losses", "Loss", "'''", "SoftDiceLoss", "calculates", "multi", "class", "soft", "dice", "loss", "loss", "avg_batch", "1", "sum", "W_k", "sum", "yPred", "yTrue", ")))/(", "sum", "W_ksum", "yPred", "yTrue", "2", "))))", "W_k", "1", "number", "voxels", "class", ")^", "wPow", "Class", "number", "segmented", "regions", "includes", "background", "Args", "yPred", "yTrue", "prediced", "desired", "outputs", "shaped", "mbSize", "classNum", "tensor", "dimensions", "Also", "must", "float", "point", "wPow", "power", "weiight", "higher", "one", "favours", "classes", "smaller", "number", "voxels", "Return", "loss", "scalar", "tensor", "'''", "def", "__init__", "self", "wPow", "2", "name", "SoftDiceLoss", "'):", "super", "().", "__init__", "name", "name", "self", "epsilon", "1e", "self", "wPow", "wPow", "def", "call", "self", "yPred", "yTrue", "yTrue", "dtypes", "cast", "yTrue", "dtype", "yPred", "dtype", "Dot", "product", "yPred", "yTrue", "sum", "datum", "class", "crossProd", "multiply", "yPred", "yTrue", "symbolic", "tensor", "dimensions", "shapes", "etc", "cannot", "extracted", "data", "used", "subroutines", "crossProdSum", "math", "reduce_sum", "crossProd", "axis", "np", "arange", "2", "rank", "yTrue", ")))", "Calculate", "weight", "datum", "class", "weight", "math", "reduce_sum", "yTrue", "axis", "np", "arange", "2", "))#", "tf", "rank", "yTrue", ")))", "#", "weight", "tf", "math", "divide", "1", "tf", "math", "square", "weight", "self", "epsilon", "weight", "tf", "math", "divide", "1", "tf", "math", "pow", "weight", "self", "wPow", "self", "epsilon", "#", "Weighted", "sum", "classes", "numerator", "2", "tf", "math", "reduce_sum", "tf", "multiply", "crossProdSum", "weight", "axis", "1", "#", "Saquared", "summation", "yySum", "tf", "math", "reduce_sum", "tf", "math", "square", "yPred", "tf", "math", "square", "yTrue", "axis", "np", "arange", "2", "))#", "tf", "rank", "yTrue", ")))", "#", "Weighted", "sum", "classes", "denominator", "tf", "math", "reduce_sum", "tf", "multiply", "weight", "yySum", "axis", "1", "#", "Get", "individual", "loss", "average", "minibatch", "loss", "tf", "math", "reduce_mean", "1", "tf", "math", "divide", "numerator", "denominator", "self", "epsilon", "))", "return", "loss", "def", "get_config", "self", "config", "super", "SoftDiceLoss", "self", "get_config", "return", "config", "curOpt", "tf", "keras", "optimizers", "Adam", "learning_rate", "1e", "lossFunc", "SoftDiceLoss", "2", "0", "ckpt", "tf", "train", "Checkpoint", "model", "myModel", "(...),", "optimizer", "curOpt", "lossFunc", "lossFunc", "accFunc", "accFunc", "```", "got", "following", "error", "```", "ckpt", "tf", "train", "Checkpoint", "model", "myModel", "(...),", "optimizer", "curOpt", "lossFunc", "lossFunc", "accFunc", "accFunc", ")", "Traceback", "recent", "call", "last", "File", "ipython", "input", "a4d9163bdda3", ">\",", "line", "2", "module", "optimizer", "curOpt", "lossFunc", "lossFunc", "accFunc", "accFunc", ")", "File", ":\\", "TProgramFiles", "Anaconda3", "envs", "keras", "gpu", "lib", "site", "packages", "tensorflow_core", "python", "training", "tracking", "util", "\",", "line", "1779", "__init__", ",))", "ValueError", "Checkpoint", "expecting", "trackable", "object", "object", "derived", "TrackableBase", "`),", "got", "<", "SoftDiceLoss", "object", "0x0000000011F6F7C8", "If", "believe", "object", "trackable", "(", "e", "part", "TensorFlow", "Python", "API", "manages", "state", "please", "open", "issue", "```", "sure", "subclass", "trackable", "intention", "design", "shall", "feature", "added", "way", "change", "subclass", "normal", "function", "works", "fine", "Actually", "accFunc", "(...)", "normal", "function", "em", "Please", "make", "sure", "bug", "per", "GitHub", "Policy", "https", "://", "github", "com", "tensorflow", "tensorflow", "blob", "master", "ISSUES", "),", "address", "code", "doc", "bugs", "performance", "issues", "feature", "requests", "build", "installation", "issues", "GitHub", "tag", "bug_template", "em", "System", "information", "Have", "written", "custom", "code", "opposed", "using", "stock", "example", "script", "provided", "TensorFlow", "yes", "Platform", "Distribution", "e", ".,", "Linux", "Ubuntu", "04", "Mac", "10", "5", "Mobile", "device", "e", "iPhone", "Pixel", "Samsung", "Galaxy", "issue", "happens", "mobile", "device", "TensorFlow", "installed", "source", "binary", "binary", "TensorFlow", "version", "use", "command", "2", "Python", "version", "6", "Bazel", "version", "compiling", "source", "GCC", "Compiler", "version", "compiling", "source", "A", "CUDA", "cuDNN", "version", "N", "A", "GPU", "model", "memory", "N", "A", "Describe", "current", "behavior", "**", "See", "code", "```", "import", "numpy", "import", "tensorflow", "cast", "np", "random", "randn", "),", "float32", "tile", "x", "layer", "=", "keras", "layers", "Dense", "32", "=", "layer", "print", "tf", "norm", "z", ":]", "z", "1", ":]),", "tf", "norm", "z", "1", ":]", "z", "1", ":]))", "tf", "print", "tf", "norm", "[", ":]", "w", "[", "1", ":]),", "tf", "norm", "w", "[", "1", ":,", ":]", "w", "[", "n", "1", ":,", ":]))", "```", "code", "replicate", "input", "x", "times", "apply", "dense", "layer", "upon", "expect", "get", "results", "3", "replicates", "fact", "1st", "2nd", "results", "indeed", "3rd", "result", "different", "Here", "results", "script", "```", "0", "0", "0", "1", "0617149e", "#", "error", "fixed", "run", "```", "expect", "results", "0", "Strangely", "enough", "bug", "appears", "n", "pairs", "example", "=", "n", "=", "3", "`).", "ran", "code", "n", "`", "1", "100", "found", "40", "combinations", "cause", "bug", "find", "obvious", "pattern", "...", "System", "information", "OS", "Platform", "Distribution", "e", ".,", "Linux", "Ubuntu", "04", "Windows", "Mobile", "device", "e", "iPhone", "Pixel", "Samsung", "Galaxy", "issue", "happens", "mobile", "device", "TensorFlow", "installed", "source", "binary", "binary", "TensorFlow", "version", "1", "Python", "version", "6", "Installed", "using", "virtualenv", "pip", "conda", "pip", "Bazel", "version", "compiling", "source", "GCC", "Compiler", "version", "compiling", "source", "A", "CUDA", "cuDNN", "version", "N", "A", "GPU", "model", "memory", "N", "A", "Describe", "problem", "TensorFlow", "1", "added", "scipy", "required", "dependency", "However", "far", "tell", "TensorFlow", "actually", "need", "scipy", "Judging", "https", "://", "github", "com", "tensorflow", "tensorflow", "pull", "35278", "introduced", "requirement", "intention", "avoid", "bug", "scipy", "1", "0", "But", "seems", "simply", "scipy", "installed", "would", "another", "way", "avoid", "bug", "adding", "scipy", "requirement", "every", "tensorflow", "installation", "seems", "like", "kind", "drastic", "solution", "also", "mentioned", "release", "notes", "wondering", "whether", "intentional", "change", "Provide", "exact", "sequence", "commands", "steps", "executed", "running", "problem", "pip", "install", "tensorflow", "`", "System", "information", "OS", "Platform", "Distribution", "e", ".,", "Linux", "Ubuntu", "04", "Linux", "Ubuntu", "04", "TensorFlow", "installed", "source", "binary", "binary", "TensorFlow", "version", "14", "Python", "version", "Installed", "using", "virtualenv", "pip", "conda", "conda", "Bazel", "version", "compiling", "source", "GCC", "Compiler", "version", "compiling", "source", "CUDA", "cuDNN", "version", "GPU", "model", "memory", "GeForce", "GTX", "960M", "PCIe", "SSE2", "16GB", "Describe", "problem", "2020", "09", "25", "491189", "tensorflow", "lite", "toco", "graph_transformations", "quantize", "611", "Check", "failed", "is_rnn_state_array", "Provide", "exact", "sequence", "commands", "steps", "executed", "running", "problem", "converting", "quantized", "graph", "def", "quantized", "tflite", "tflite", "using", "dummy", "quantization", "encounter", "error", "follows", "```", "tf_gpu_clone", "ridlr", "ridlr107", ":~/", "TensorFlow", "exported_model_12k_quantized", "tflite_convert", "output_file", "tflite_graph", "tflite", "graph_def_file", "tflite_graph", "pb", "input_arrays", "image_tensor", "output_arrays", "TFLite_Detection_PostProcess", "input_shapes", "576", "720", "allow_custom_ops", "inference_type", "QUANTIZED_UINT8", "std_dev_values", "127", "mean_values", "128", "default_ranges_min", "default_ranges_max", "2020", "09", "25", "452049", "tensorflow", "core", "platform", "cpu_feature_guard", "142", "Your", "CPU", "supports", "instructions", "TensorFlow", "binary", "compiled", "use", "AVX2", "FMA", "2020", "09", "25", "474575", "tensorflow", "core", "platform", "profile_utils", "cpu_utils", "94", "CPU", "Frequency", "2808000000", "2020", "09", "25", "475004", "tensorflow", "compiler", "xla", "service", "service", "168", "XLA", "service", "0x561bb6736540", "executing", "computations", "platform", "Host", "Devices", "2020", "09", "25", "475031", "tensorflow", "compiler", "xla", "service", "service", "175", "StreamExecutor", "device", "<", "undefined", "<", "undefined", "Traceback", "recent", "call", "last", "File", "home", "ridlr", "anaconda3", "bin", "tflite_convert", "line", "<", "module", "sys", "exit", "main", "())", "File", "home", "ridlr", "anaconda3", "lib", "python3", "site", "packages", "tensorflow", "lite", "python", "tflite_convert", "line", "503", "main", "app", "run", "main", "run_main", "argv", "sys", "argv", "File", "home", "ridlr", "anaconda3", "lib", "python3", "site", "packages", "tensorflow", "python", "platform", "app", "\",", "line", "run", "_run", "main", "main", "argv", "argv", "flags_parser", "_parse_flags_tolerate_undef", "File", "home", "ridlr", "anaconda3", "lib", "python3", "site", "packages", "absl", "app", "\",", "line", "299", "run", "_run_main", "main", "args", "File", "home", "ridlr", "anaconda3", "lib", "python3", "site", "packages", "absl", "app", "\",", "line", "250", "_run_main", "sys", "exit", "main", "argv", "File", "home", "ridlr", "anaconda3", "lib", "python3", "site", "packages", "tensorflow", "lite", "python", "tflite_convert", "\",", "line", "499", "run_main", "_convert_tf1_model", "tflite_flags", "File", "home", "ridlr", "anaconda3", "lib", "python3", "site", "packages", "tensorflow", "lite", "python", "tflite_convert", "\",", "line", "193", "_convert_tf1_model", "output_data", "converter", "convert", "File", "home", "ridlr", "anaconda3", "lib", "python3", "site", "packages", "tensorflow", "lite", "python", "lite", "\",", "line", "904", "convert", "converter_kwargs", "File", "home", "ridlr", "anaconda3", "lib", "python3", "site", "packages", "tensorflow", "lite", "python", "convert", "\",", "line", "373", "toco_convert_graph_def", "input_data", "SerializeToString", "())", "File", "home", "ridlr", "anaconda3", "lib", "python3", "site", "packages", "tensorflow", "lite", "python", "convert", "\",", "line", "172", "toco_convert_protos", "TOCO", "failed", "See", "console", "info", "n", "\\", "n", "%", "stdout", "stderr", "tensorflow", "lite", "python", "convert", "ConverterError", "TOCO", "failed", "See", "console", "info", "2020", "09", "25", "861669", "tensorflow", "lite", "toco", "import_tensorflow", "1336", "Converting", "unsupported", "operation", "TFLite_Detection_PostProcess", "2020", "09", "25", "957738", "tensorflow", "lite", "toco", "graph_transformations", "graph_transformations", "39", "Before", "Removing", "unused", "ops", "1537", "operators", "2264", "arrays", "0", "quantized", "2020", "09", "25", "017901", "tensorflow", "lite", "toco", "graph_transformations", "graph_transformations", "39", "Before", "general", "graph", "transformations", "1537", "operators", "2264", "arrays", "0", "quantized", "2020", "09", "25", "482076", "tensorflow", "lite", "toco", "graph_transformations", "graph_transformations", "39", "After", "general", "graph", "transformations", "pass", "181", "operators", "341", "arrays", "0", "quantized", "2020", "09", "25", "485583", "tensorflow", "lite", "toco", "graph_transformations", "graph_transformations", "39", "Before", "pre", "quantization", "graph", "transformations", "181", "operators", "341", "arrays", "0", "quantized", "2020", "09", "25", "486877", "tensorflow", "lite", "toco", "graph_transformations", "graph_transformations", "39", "After", "pre", "quantization", "graph", "transformations", "pass", "operators", "259", "arrays", "0", "quantized", "2020", "09", "25", "488034", "tensorflow", "lite", "toco", "graph_transformations", "graph_transformations", "39", "Before", "Group", "bidirectional", "sequence", "lstm", "rnn", "operators", "259", "arrays", "0", "quantized", "2020", "09", "25", "489088", "tensorflow", "lite", "toco", "graph_transformations", "graph_transformations", "39", "Before", "default", "min", "max", "range", "propagation", "graph", "transformations", "operators", "259", "arrays", "0", "quantized", "2020", "09", "25", "489972", "tensorflow", "lite", "toco", "graph_transformations", "graph_transformations", "39", "After", "default", "min", "max", "range", "propagation", "graph", "transformations", "pass", "1", "99", "operators", "259", "arrays", "0", "quantized", "2020", "09", "25", "491160", "tensorflow", "lite", "toco", "graph_transformations", "graph_transformations", "39", "Before", "quantization", "graph", "transformations", "99", "operators", "259", "arrays", "0", "quantized", "2020", "09", "25", "491189", "tensorflow", "lite", "toco", "graph_transformations", "quantize", "611", "Check", "failed", "is_rnn_state_array", "Fatal", "Python", "error", "Aborted", "Current", "thread", "0x00007fb839eed740", "recent", "call", "first", "File", "home", "ridlr", "anaconda3", "lib", "python3", "site", "packages", "tensorflow", "lite", "toco", "python", "toco_from_protos", "\",", "line", "execute", "File", "home", "ridlr", "anaconda3", "lib", "python3", "site", "packages", "absl", "app", "\",", "line", "250", "_run_main", "File", "home", "ridlr", "anaconda3", "lib", "python3", "site", "packages", "absl", "app", "\",", "line", "299", "run", "File", "home", "ridlr", "anaconda3", "lib", "python3", "7", "site", "packages", "tensorflow", "python", "platform", "app", "\",", "line", "run", "File", "home", "ridlr", "anaconda3", "lib", "python3", "7", "site", "packages", "tensorflow", "lite", "toco", "python", "toco_from_protos", "\",", "line", "main", "File", "home", "ridlr", "anaconda3", "bin", "toco_from_protos", "\",", "line", "<", "module", "Aborted", "core", "dumped", "```", "However", "I", "include", "following", "specifiers", "tflite", "created", "`--", "inference_type", "QUANTIZED_UINT8", "--", "std_dev_values", "127", "--", "mean_values", "128", "--", "default_ranges_min", "0", "--", "default_ranges_max", "`", "This", "tflite", "file", "used", "convert", "_edgetpu", "tflite", "model", "used", "run", "inference", "Google", "coral", "gives", "following", "error", "```", "(", "tf_gpu_clone", "ridlr", "ridlr107", ":~/", "TensorFlow", "exported_model_12k_quantized", "edgetpu_compiler", "tflite_graph", "tflite", "Edge", "TPU", "Compiler", "version", "2", "0", "267685300", "Invalid", "model", "tflite_graph", "tflite", "Model", "quantized", "```", "Hence", "necessary", "include", "specifiers", "quantization", "working", "2", "noticed", "Feature", "Columns", "API", "seems", "overlap", "Keras", "Preprocessing", "layers", "Keras", "Utils", "For", "example", "create", "tf", "feature_column", "indicator_column", "()`", "creates", "bunch", "dummy", "variables", "one", "hot", "encoded", "matrix", "based", "upon", "categorical", "variable", "With", "Keras", "preprocessing", "Utils", "use", "tf", "keras", "backend", "one_hot", "()`", "function", "perform", "operation", "think", "similar", "overlaps", "Feature", "Columns", "like", "embedding", "columns", "similar", "Keras", "functions", "embedding", "columns", "wondering", "steering", "committees", "Tensorflow", "direction", "whether", "plan", "promote", "one", "set", "functions", "versus", "Are", "plans", "deprecate", "one", "set", "versus", "For", "question", "invest", "time", "planning", "code", "might", "change", "future", "Seems", "like", "maintaining", "redundancy", "package", "potentially", "lead", "performance", "differences", "similar", "functions", "confusion", "setting", "code", "etc", "NB", "Oh", "yes", "actually", "asked", "question", "Tensorflow", "Discussion", "forum", "one", "answered", "dynamicwebpaige", "even", "forwarded", "message", "karmel", "Mark", "Omernick", "one", "responded", "Hence", "I", "posted", "guys", "Here", "prefetch", "enabled", "input", "stream", "yet", "another", "random", "access", "file", "buffer", "talked", "earlier", "33023", "Here", "come", "code", "benchmark", "numbers", "way", "System", "information", "Have", "written", "custom", "code", "opposed", "using", "stock", "example", "script", "provided", "TensorFlow", "No", "Platform", "Distribution", "e", ".,", "Linux", "Ubuntu", "04", "CentOS", "Linux", "Mobile", "device", "e", "iPhone", "Pixel", "Samsung", "Galaxy", "issue", "happens", "mobile", "device", "TensorFlow", "installed", "source", "binary", "pip", "install", "TensorFlow", "version", "use", "command", "v2", "rc2", "g64c3d38", "0", "0", "Python", "version", "Bazel", "version", "compiling", "source", "GCC", "Compiler", "version", "compiling", "source", "CUDA", "cuDNN", "version", "GPU", "model", "memory", "CPU", "Describe", "current", "behavior", "For", "reference", "numpy", "planning", "register", "numpy", "ndarray", "Sequence", "https", "://", "github", "com", "numpy", "numpy", "issues", "2776", "The", "sample", "ResNet50", "code", "https", "://", "keras", "applications", "runs", "fine", "But", "ndarray", "registered", "sequence", "TF2", "throws", "InvalidArgumentError", "Code", "reproduce", "issue", "```", "keras", "applications", "resnet50", "import", "ResNet50", "keras", "preprocessing", "import", "image", "keras", "applications", "resnet50", "import", "preprocess_input", "decode_predictions", "import", "numpy", "import", "typing", "typing", "Sequence", "register", "np", "ndarray", "model", "ResNet50", "weights", "imagenet", "img_path", "elephant", "jpg", "img", "image", "load_img", "img_path", "target_size", "224", "224", "x", "image", "img_to_array", "img", "x", "np", "expand_dims", "x", "axis", "0", "x", "preprocess_input", "x", "preds", "model", "predict", "x", "#", "decode", "results", "list", "tuples", "class", "description", "probability", "#", "one", "list", "sample", "batch", "print", "Predicted", ":',", "decode_predictions", "preds", "top", "0", "#", "Predicted", "n02504013", "Indian_elephant", "0", "82658225", "u", "n01871265", "u", "tusker", "0", "1122357", "u", "n02504458", "u", "African_elephant", "0", "061040461", "```", "Two", "extra", "lines", "added", "sample", "ResNet50", "code", "```", "import", "typing", "typing", "Sequence", "register", "np", "ndarray", "```", "The", "error", "```", "2020", "07", "48", "421816", "tensorflow", "core", "common_runtime", "base_collective_executor", "216", "BaseCollectiveExecutor", "StartAbort", "Invalid", "argument", "The", "first", "dimension", "padding", "must", "rank", "inputs", "4", "[[{{", "node", "conv1_pad", "Pad", "}}]]", "Traceback", "recent", "call", "last", "File", "test_d3m_imports", "\",", "line", "<", "module", "preds", "model", "predict", "x", "File", "data", "dsbox", "kyao", "miniconda3", "envs", "dsbox", "eval", "2019", "winter", "lib", "python3", "site", "packages", "keras", "engine", "training", "\",", "line", "1462", "predict", "callbacks", "callbacks", "File", "data", "dsbox", "kyao", "miniconda3", "envs", "dsbox", "eval", "2019", "winter", "lib", "python3", "site", "packages", "keras", "engine", "training_arrays", "\",", "line", "324", "predict_loop", "batch_outs", "f", "ins_batch", "File", "data", "dsbox", "kyao", "miniconda3", "envs", "dsbox", "eval", "2019", "winter", "lib", "python3", "site", "packages", "tensorflow_core", "python", "keras", "backend", "\",", "line", "3740", "__call__", "outputs", "self", "_graph_fn", "converted_inputs", "File", "data", "dsbox", "kyao", "miniconda3", "envs", "dsbox", "eval", "2019", "winter", "lib", "python3", "site", "packages", "tensorflow_core", "python", "eager", "function", "\",", "line", "1081", "__call__", "return", "self", "_call_impl", "args", "kwargs", "File", "data", "dsbox", "kyao", "miniconda3", "envs", "dsbox", "eval", "2019", "winter", "lib", "python3", "site", "packages", "tensorflow_core", "python", "eager", "function", "\",", "line", "1121", "_call_impl", "return", "self", "_call_flat", "args", "self", "captured_inputs", "cancellation_manager", "File", "data", "dsbox", "kyao", "miniconda3", "envs", "dsbox", "eval", "2019", "winter", "lib", "python3", "site", "packages", "tensorflow_core", "python", "eager", "function", "\",", "line", "1224", "_call_flat", "ctx", "args", "cancellation_manager", "cancellation_manager", "File", "data", "dsbox", "kyao", "miniconda3", "envs", "dsbox", "eval", "2019", "winter", "lib", "python3", "site", "packages", "tensorflow_core", "python", "eager", "function", "\",", "line", "511", "call", "ctx", "ctx", "File", "data", "dsbox", "kyao", "miniconda3", "envs", "dsbox", "eval", "2019", "winter", "lib", "python3", "site", "packages", "tensorflow_core", "python", "eager", "execute", "\",", "line", "quick_execute", "six", "raise_from", "core", "_status_to_exception", "(", "e", "code", "message", "None", "File", "string", ">\",", "line", "3", "raise_from", "tensorflow", "python", "framework", "errors_impl", "InvalidArgumentError", "The", "first", "dimension", "paddings", "must", "rank", "inputs", "4", "]", "[[", "node", "conv1_pad", "Pad", "(", "defined", "data", "dsbox", "kyao", "miniconda3", "envs", "dsbox", "eval", "2019", "winter", "lib", "python3", "6", "site", "packages", "tensorflow_core", "python", "framework", "ops", "1751", "]]", "O", "p", "__inference_keras_scratch_graph_10370", "]", "Function", "call", "stack", "keras_scratch_graph", "```", "em", "Please", "make", "sure", "build", "installation", "issue", "per", "GitHub", "Policy", "https", "://", "github", "com", "tensorflow", "tensorflow", "blob", "master", "ISSUES", "),", "address", "code", "doc", "bugs", "performance", "issues", "feature", "requests", "build", "installation", "issues", "GitHub", "tag", "build_template", "em", "System", "information", "OS", "Platform", "Distribution", ".,", "Linux", "Ubuntu", "04", "official", "tensorflow", "image", "docker", "hub", "Mobile", "device", "e", "iPhone", "Pixel", "Samsung", "Galaxy", "issue", "happens", "mobile", "device", "TensorFlow", "installed", "source", "binary", "TensorFlow", "version", "15", "Python", "version", "Installed", "using", "virtualenv", "pip", "conda", "Docker", "Bazel", "version", "compiling", "source", "n", "GCC", "Compiler", "version", "compiling", "source", "n", "CUDA", "cuDNN", "version", "GPU", "model", "memory", "n", "Describe", "problem", "Simple", "image", "built", "FROM", "tensorflow", "tensorflow", "tag", "fails", "build", "including", "mysql", "client", "```", "dockerfile", "FROM", "tensorflow", "tensorflow", "15", "gpu", "py3", "jupyter", "Avoid", "ERROR", "invoke", "policy", "denied", "execution", "start", "RUN", "sed", "exit", "101", "exit", "/\"", "usr", "sbin", "policy", "---", "Install", "needed", "packages", "specified", "requirements", "apt", "COPY", "requirements", "apt", "RUN", "apt", "get", "update", "xargs", "apt", "get", "install", "requirements", "apt", "---", "Install", "needed", "packages", "specified", "requirements", "pip", "COPY", "requirements", "pip", "RUN", "pip", "install", "--", "trusted", "host", "pypi", "python", "org", "requirements", "pip", "#", "activate", "jupyter", "extensions", "RUN", "jupyter", "contrib", "nbextension", "install", "&&", "jupyter", "nbextension", "enable", "codefolding", "main", "&&", "jupyter", "nbextension", "enable", "collapsible_headings", "main", "```", "Provide", "exact", "sequence", "commands", "steps", "executed", "running", "problem", "A", "MWE", "repo", "https", "://", "gitlab", "com", "SumNeuron", "mytf", "contains", "following", "files", "Dockerfile", "custom", "image", "built", "top", "official", "tensorflow", "tensorflow", "docker", "compose", "development", "yml", "specifies", "Dockerfile", "build", "file", "mounts", "notebooks", "directory", "requirements", "pip", "pip", "requirements", "may", "used", "images", "Dockerfile", "requirements", "apt", "`:", "packages", "needed", "installed", "via", "apt", "get", "`", "For", "convenience", "python", "script", "`", "docker", "`", "provided", "e", "g", "```", "python", "docker", "c", "build", "```", "instead", "```", "docker", "compose", "docker", "compose", "development", "yml", "build", "|", "|", "```", "**", "Any", "info", "logs", "**", "Include", "logs", "source", "code", "would", "helpful", "diagnose", "problem", "including", "tracebacks", "please", "include", "full", "traceback", "Large", "logs", "files", "attached", "Thank", "submitting", "TensorFlow", "documentation", "issue", "Per", "GitHub", "policy", "address", "code", "doc", "bugs", "performance", "issues", "feature", "requests", "build", "installation", "issues", "GitHub", "The", "TensorFlow", "docs", "open", "source", "get", "involved", "read", "documentation", "contributor", "guide", "https", "://", "www", "tensorflow", "org", "community", "contribute", "docs", "URL", ")", "issue", "Please", "provide", "link", "documentation", "entry", "example", "https", "://", "www", "tensorflow", "org", "api_docs", "python", "gradients", "version", "stable", "Description", "issue", "needs", "changing", "unclear", "many", "list", "items", "returned", "gradients", "The", "second", "paragraph", "states", "It", "returns", "list", "Tensor", "length", "len", "tensor", "sum", "dy", ")`", "ys", "`.\"", "The", "Returns", "section", "says", "list", "sum", "dy", ")`", "`.\"", "...", "one", "sum", "dy", ")`", "sum", "dy", ")`", "ys", "Besides", "inconsistency", "summation", "notation", "documentation", "ambiguous", "When", "says", "sum", "dy", ")`", "xs", "mean", "dy", "summed", "ys", "axis", "one", "element", "produced", "`", "xs", "`", "way", "around", "clarifying", "example", "would", "help", "statement", "along", "lines", "returns", "list", "whatever", "many", "elements", "`", "xs", "`\"", "(", "`", "ys", "`", "--", "know", "###", "Clear", "description", "For", "example", "someone", "use", "method", "How", "useful", "###", "Correct", "links", "link", "source", "code", "correct", "###", "Parameters", "defined", "Are", "parameters", "defined", "formatted", "correctly", "###", "Returns", "defined", "Are", "return", "values", "defined", "###", "Raises", "listed", "defined", "Are", "errors", "defined", "For", "example", "https", "://", "www", "tensorflow", "org", "versions", "0", "api_docs", "python", "tf", "feature_column", "categorical_column_with_vocabulary_file", "raises", "###", "Usage", "example", "usage", "example", "See", "API", "guide", "https", "://", "www", "tensorflow", "org", "community", "contribute", "docs_ref", "write", "testable", "usage", "examples", "###", "Request", "visuals", "applicable", "Are", "currently", "visuals", "clarify", "content", "###", "Submit", "pull", "request", "Are", "planning", "also", "submit", "pull", "request", "fix", "issue", "See", "docs", "contributor", "guide", "https", "://", "www", "tensorflow", "org", "community", "contribute", "docs", "docs", "API", "guide", "https", "://", "www", "tensorflow", "org", "community", "contribute", "docs_ref", "docs", "style", "guide", "https", "://", "www", "tensorflow", "org", "community", "contribute", "docs_style", "The", "codelab", "still", "links", "experimental", "folder", "makefile", "incorrect", "Visual", "image", "https", "://", "user", "images", "githubusercontent", "com", "997157", "71787651", "3bc27180", "2fe0", "11ea", "8318", "424dc887efc5", "png", "Update", "codelab", "link", "https", "://", "codelabs", "developers", "google", "com", "codelabs", "sparkfun", "tensorflow", "3", "Code", "read", "```", "make", "tensorflow", "lite", "micro", "tools", "make", "Makefile", "TARGET", "sparkfun_edge", "micro_speech_bin", "```", "URL", ")", "issue", "https", "://", "codelabs", "developers", "google", "com", "codelabs", "sparkfun", "tensorflow", "3", "running", "training", "loop", "using", "gradientTape", "works", "well", "however", "getting", "different", "training", "accuracy", "metrics", "training", "using", "gradientTape", "loop", "straight", "model", "fit", "method", "apologise", "question", "stack", "overflow", "however", "best", "knowledge", "parameters", "therefore", "producing", "exactly", "results", "close", "least", ")..", "therefore", "think", "may", "bug", "one", "help", "elucidate", "would", "really", "appreciate", "prepared", "sequential", "model", "follows", "```", "model", "keras", "models", "Sequential", "model", "add", "tf", "keras", "layers", "Dense", "units", "64", "input_dim", "5078", "activation", "relu", "\"))", "model", "add", "tf", "keras", "layers", "Dense", "units", "activation", "relu", "\"))", "model", "add", "tf", "keras", "layers", "Dense", "units", "100", "activation", "relu", "\"))", "model", "add", "tf", "keras", "layers", "Dense", "units", "24", "activation", "sigmoid", "\"))", "```", "model", "fit", "method", "fit", "follows", "```", "model", "compile", "optimizer", "Adam", "loss", "binary_crossentropy", "metrics", "=[\"", "acc", "\"])", "model", "fit", "X_train", "y_train", "batch_size", "32", "epochs", "100", "verbose", "validation_split", "shuffle", "True", "```", "This", "works", "well", "produces", "following", "results", "please", "note", "100", "epochs", "overkill", "model", "overfits", "however", "keep", "epochs", "gradientTape", "loop", "otherwise", "would", "early", "stopping", "callback", "normally", "...", "The", "model", "metrics", "follows", "```", "32", "119", "[=======>......................]", "ETA", "loss", "0699", "acc", "9753", "119", "119", "[==============================]", "168us", "sample", "loss", "0668", "acc", "9779", "val_loss", "2350", "val_acc", "9048", "```", "This", "expected", "behaviour", "minus", "overfitting", ")...", "Now", "create", "gradientTape", "loop", "follows", "accuracy", "metrics", "4", "100", "epochs", "reason", "suspect", "bug", "believe", "using", "appropriate", "metrics", "```", "def", "random_batch", "batch_size", "32", "idx", "np", "random", "randint", "len", "X", "size", "batch_size", "return", "X", "[", "idx", "[", "idx", "Further", "split", "train", "data", "training", "set", "validation", "set", "X_train", "X_val", "y_train", "y_val", "train_test_split", "X_train", "y_train", "test_size", "random_state", "```", "```", "##", "Run", "autodiff", "model", "n_epochs", "100", "batch_size", "32", "n_steps", "len", "X_train", ")//", "batch_size", "optimizer", "tf", "keras", "optimizers", "Adam", "loss", "tf", "keras", "losses", "BinaryCrossentropy", "metricLoss", "tf", "keras", "metrics", "BinaryCrossentropy", "metricsAcc", "tf", "keras", "metrics", "BinaryAccuracy", "val_acc_metric", "tf", "keras", "metrics", "BinaryAccuracy", "val_acc_loss", "tf", "keras", "metrics", "BinaryCrossentropy", "train_loss_results", "[]", "train_accuracy_results", "[]", "validation_loss_results", "[]", "validation_accuracy_results", "[]", "loop", "iterate", "epochs", "epoch", "range", "n_epochs", "print", "Epoch", "{}/{}\".", "format", "epoch", "n_epochs", "loop", "iterate", "batches", "step", "range", "n_steps", "1", "X_batch", "y_batch", "random_batch", "X_train", "values", "y_train", "gradientTape", "autodiff", "tf", "GradientTape", "tape", "y_pred", "model", "X_batch", "training", "True", "loss_values", "loss", "y_batch", "y_pred", "gradients", "tape", "gradient", "loss_values", "model", "trainable_weights", "optimizer", "apply_gradients", "zip", "gradients", "model", "trainable_weights", "metricLoss", "y_batch", "y_pred", "metricsAcc", "update_state", "y_batch", "y_pred", "Loss", "accuracy", "train_loss_results", "append", "loss_values", "train_accuracy_results", "append", "metricsAcc", "result", "())", "#", "Read", "training", "results", "readout", "Epoch", "{},", "Training", "loss", "{},", "Training", "accuracy", "{}'", "print", "readout", "format", "epoch", "1", "loss_values", "metricsAcc", "result", "100", "metricsAcc", "reset_states", "#", "Run", "validation", "loop", "end", "epoch", "valbatch", "range", "1", "n_steps", "1", "):", "X_batchVal", "y_batchVal", "random_batch", "X_val", "values", "y_val", "val_logits", "model", "X_batchVal", "#", "Update", "val", "metrics", "val_acc_metric", "y_batchVal", "val_logits", "val_acc", "val_acc_metric", "result", "val_acc_metric", "update_state", "y_batchVal", "val_logits", "val_loss", "val_acc_loss", "y_batchVal", "val_logits", "validation_loss_results", "append", "val_loss", "validation_accuracy_results", "append", "val_acc_metric", "result", "())", "#", "Read", "validation", "results", "print", "Validation", "loss", "float", "val_loss", "),'", "Validation", "acc", "%", "%", "float", "val_acc", "100", "),)", "val_acc_metric", "reset_states", "```", "When", "run", "code", "works", "fine", "iterations", "update", "states", "accuracy", "loss", "however", "training", "accuracy", "much", "lower", "model", "fit", "method", "running", "also", "100", "epochs", "showing", "final", "epoch", "result", "printed", "epoch", "iterating", "batch", "):", "Epoch", "100", "Training", "loss", "027735430747270584", "Training", "accuracy", "6534423828125", "Epoch", "100", "Training", "loss", "03832387551665306", "Training", "accuracy", "67249298095703", "Epoch", "100", "Training", "loss", "035500235855579376", "Training", "accuracy", "69097900390625", "Validation", "loss", "3204055726528168", "Validation", "acc", "36458587646484", "Validation", "loss", "32066160440444946", "Validation", "acc", "71354675292969", "Validation", "loss", "32083287835121155", "Validation", "acc", "49479675292969", "Validation", "loss", "3209479749202728", "Validation", "acc", "10416412353516", "Validation", "loss", "32088229060173035", "Validation", "acc", "625", "As", "see", "training", "accuracy", "4", "%", "lower", "compared", "model", "fit", "method", "The", "loss", "records", "fine", "also", "validation", "data", "looks", "pretty", "much", "like", "validation", "data", "model", "fit", "method", "Additionally", "plot", "accuracy", "loss", "model", "fit", "geadientTape", "methods", "shape", "curves", "look", "pretty", "much", "begin", "overfit", "similar", "points", "huge", "discrepancy", "training", "accuracy", "specified", "adam", "optimizer", "well", "binary_crossentropy", "loss", "model", "fit", "gradientTape", "For", "model", "fit", "specific", "accuracy", "acc", "metrics", "understanding", "call", "binary_accuracy", "calculating", "accuracy", "far", "aware", "parameters", "similar", "results", "fairly", "similar", "Additionally", "call", "model", "compile", "training", "model", "gradientTape", "confirm", "evaluation", "results", "slightly", "different", "look", "like", "model", "fit", "method", "```", "Training", "model", "compile", "optimizer", "optimizer", "loss", "tf", "keras", "losses", "binary_crossentropy", "metrics", "=['", "acc", "'])", "print", "('\\", "',", "model", "evaluate", "X_train", "y_train", "verbose", "1", "1", "32", "101", "[========>.....................]", "ETA", "loss", "0336", "acc", "0", "9948", "101", "101", "[==============================]", "307us", "sample", "loss", "0", "0330", "acc", "0", "9942", "Validation", "model", "compile", "optimizer", "optimizer", "loss", "tf", "keras", "losses", "binary_crossentropy", "metrics", "=['", "acc", "'])", "print", "('\\", "',", "model", "evaluate", "X_val", "y_val", "verbose", "1", "1", "18", "[==============================]", "111us", "sample", "loss", "0", "3879", "acc", "0", "9028", "**", "```", "Now", "model", "evaluate", "shows", "loss", "accuracy", "similar", "model", "fit", "method", "call", "evaluate", "X_train", "y_train", "This", "suspect", "bug", "Interestingly", "model", "evaluate", "validation", "data", "look", "similar", "gradientTape", "loop", "leaves", "really", "confused", "therefore", "unsure", "true", "training", "accuracy", "loss", "anyone", "help", "would", "really", "appreciate", "...", "I", "happy", "provide", "code", "upstream", "model", "etc", "Again", "apologies", "bug", "seems", "really", "confusing", "like", "incorrect", "behaviour", "...", "We", "code", "create", "graph", "later", "loaded", "Scala", "Java", "application", "Code", "generate", "graph", "https", "://", "github", "com", "JohnSnowLabs", "spark", "nlp", "blob", "9407da076eced850ec840cfc61e665887400de12", "python", "tensorflow", "lib", "ner", "ner_model", "1", "1", "used", "see", "device", "placement", "logs", "console", "TF", "`", "1", "`", "logs", "thousands", "lines", "complaining", "```", "Failed", "place", "graph", "without", "changing", "devices", "resources", "Some", "operations", "colocated", "resource", "generating", "operations", ")", "supported", "resources", "devices", "Current", "candidate", "devices", "job", "localhost", "replica", "task", "device", "CPU", "0", "].", "```", "The", "full", "log", "due", "length", "https", "://", "gist", "github", "com", "maziyarpanahi", "83f179e01634db2de12cb82501177c8d", "understand", "log", "saying", "know", "way", "control", "logging", "level", "Java", "API", "would", "like", "understand", "changed", "TF", "1", "15", "0", "logs", "without", "change", "process", "Issue", "really", "hard", "debug", "many", "logs", "console", "also", "Travis", "fails", "due", "exceeding", "logs", "limit", "since", "many", "unit", "tests", "using", "graph", "every", "time", "1000", "lines", "logs", "saying", "something", "really", "care", "Any", "help", "manage", "suppress", "logs", "would", "highly", "appreciated", "System", "information", "Google", "Colab", "system", "GPU", "mode", "TensorFlow", "rc2", "Python", "Describe", "current", "behavior", "Take", "long", "time", "build", "compile", "seq2seq", "model", "use", "set_floatx", "float16", "')``", "instead", "float32", "default", "Describe", "expected", "behavior", "I", "know", "normal", "default", "value", "float32", "takes", "1", "2", "second", "**", "Code", "reproduce", "issue", "**", "I", "coded", "example", "](", "https", "://", "drive", "google", "com", "open", "=", "170KpjIGFmNNt", "6oXgVbRnZR4", "7ah_", "Base", "System", "information", "Linux", "Ubuntu", "nvidia", "docker", "Docker", "version", "03", "build", "633a0ea838", "nvidia", "driver", "via", "sudo", "apt", "get", "install", "nvidia", "driver", "418", "CUDA", "cuDNN", "version", "GPU", "model", "memory", "```", "nvidia", "smi", "Thu", "Jan", "12", "27", "2020", "+-----------------------------------------------------------------------------+", "NVIDIA", "SMI", "430", "Driver", "Version", "430", "CUDA", "Version", "|-------------------------------+----------------------+----------------------+", "GPU", "Name", "Persistence", "Bus", "Disp", "Volatile", "Uncorr", "ECC", "Fan", "Temp", "Perf", "Pwr", "Usage", "Cap", "Memory", "Usage", "GPU", "Util", "Compute", "|===============================+======================+======================|", "GeForce", "710", "Off", "00000000", "00", "N", "46C", "N", "N", "0MiB", "2002MiB", "N", "Default", "+-------------------------------+----------------------+----------------------+", "GeForce", "RTX", "207", "...", "Off", "00000000", "00", "Off", "N", "A", "34", "39C", "1W", "215W", "|", "0MiB", "7982MiB", "|", "%", "Default", "|", "+-------------------------------+----------------------+----------------------+", "+-----------------------------------------------------------------------------+", "|", "Processes", "GPU", "Memory", "|", "|", "GPU", "PID", "Type", "Process", "name", "Usage", "|", "|=============================================================================|", "|", "Not", "Supported", "|", "+-----------------------------------------------------------------------------+", "```", "Docker", "container", "information", "Linux", "Ubuntu", "04", "TensorFlow", "installed", "pip3", "TensorFlow", "version", "14", "Python", "version", "6", "CUDA", "cuDNN", "version", "GPU", "model", "memory", "nvidia", "smi", "output", "see", "Dockerfile", "```", "https", "://", "www", "tensorflow", "org", "install", "gpu", "FROM", "nvidia", "cuda", "0", "base", "ubuntu18", "04", "ENV", "PATH", "bin", "usr", "local", "sbin", "usr", "local", "bin", "usr", "sbin", "usr", "bin", "opt", "conda", "bin", "PATH", "RUN", "apt", "get", "update", "apt", "get", "upgrade", "apt", "get", "install", "nodejs", "npm", "python3", "pip", "wget", "libmysqlclient", "dev", "python", "dev", "RUN", "wget", "https", "://", "repo", "anaconda", "com", "miniconda", "Miniconda3", "latest", "Linux", "x86_64", "bash", "Miniconda3", "latest", "Linux", "x86_64", "b", "opt", "conda", "rm", "Miniconda3", "latest", "Lin", "RUN", "mkdir", "etc", "skel", "notebooks", "RUN", "npm", "install", "configurable", "http", "proxy", "&&", "pip3", "install", "jupyterhub", "jupyterhub", "ldapauthenticator", "jupyterlab", "notebook", "tensorflow", "gpu", "RUN", "pip3", "install", "folium", "keras", "matplotlib", "mysql", "mysql", "connector", "pandas", "pymysql", "seaborn", "sklearn", "VOLUME", "[\"/", "home", "RUN", "useradd", "bin", "bash", "user", "\"$(", "openssl", "passwd", "1", "test", "COPY", "jupyterhub_config", "etc", "jupyterhub", "jupyterhub_config", "COPY", "jupyterhub_cookie_secret", "etc", "jupyterhub", "jupyterhub_cookie_secret", "COPY", "jupyterhub", "sqlite", "etc", "jupyterhub", "jupyterhub", "sqlite", "CMD", "[\"/", "usr", "local", "bin", "jupyterhub", "upgrade", "\"--", "sqlite", ":////", "etc", "jupyterhub", "jupyterhub", "sqlite", "EXPOSE", "8000", "CMD", "[\"/", "usr", "local", "bin", "jupyterhub", "\",", "\"-", "\",", "etc", "jupyterhub", "jupyterhub_config", "\",", "\"--", "debug", "```", "Describe", "problem", "created", "Docker", "container", "based", "Dockerfile", "see", "multiuser", "jupyterhub", "notebook", "lab", "The", "basics", "works", "fine", "log", "use", "desired", "python", "packages", "running", "projects", "However", "container", "lacks", "GPU", "capabiltites", "container", "started", "nvidia", "docker", "run", "8000", "8000", "runtime", "=", "nvidia", "restart", "unless", "stopped", "gpus", "~/", "myDocker", "home", "home", "jupyterhub", "nvidia", "smi", "works", "within", "container", "device_lib", "list_local_devices", "()`", "prints", "```[", "name", "device", "CPU", "0", "device_type", "CPU", "memory_limit", "268435456", "locality", "}", "incarnation", "9710542890831123693", "name", "device", "XLA_GPU", "0", "device_type", "XLA_GPU", "memory_limit", "17179869184", "locality", "}", "incarnation", "12724683280898329209", "physical_device_desc", "device", "XLA_GPU", "device", "name", "device", "XLA_GPU", "1", "device_type", "XLA_GPU", "memory_limit", "17179869184", "locality", "}", "incarnation", "12608392157467121046", "physical_device_desc", "device", "XLA_GPU", "device", "name", "device", "XLA_CPU", "0", "device_type", "XLA_CPU", "memory_limit", "17179869184", "locality", "}", "incarnation", "16188673672643731433", "physical_device_desc", "device", "XLA_CPU", "device", "```", "keras", "import", "backend", "K", "tensorflow_backend", "_get_available_gpus", "()`", "prints", "empty", "field", "tf", "test", "is_gpu_available", "()`", "says", "False", "`", "see", "tensorflow", "looking", "following", "ones", "cannot", "find", "libcublas", "0", "libcufft", "0", "libcurand", "0", "libcusolver", "0", "libcusparse", "0", "libcudnn", "strange", "never", "installed", "nvidia", "smi", "within", "container", "seems", "deployed", "docker", "necessary", "parts", "missing", "tensorflow", "However", "install", "CUDA", "nvidia", "toolkits", "software", "parts", "container", "tensorflow", "reporting", "incorpatible", "versions", "```", "2020", "50", "429852", "tensorflow", "core", "platform", "cpu_feature_guard", "142", "Your", "CPU", "supports", "instructions", "TensorFlow", "binary", "compiled", "use", "AVX2", "AVX512F", "FMA", "2020", "50", "466847", "tensorflow", "stream_executor", "platform", "default", "dso_loader", "42", "Successfully", "opened", "dynamic", "library", "libcuda", "1", "2020", "50", "468037", "tensorflow", "stream_executor", "cuda", "cuda_driver", "318", "failed", "call", "cuInit", "CUDA_ERROR_SYSTEM_DRIVER_MISMATCH", "system", "unsupported", "display", "driver", "cuda", "driver", "combination", "2020", "50", "468085", "tensorflow", "stream_executor", "cuda", "cuda_diagnostics", "169", "retrieving", "CUDA", "diagnostic", "information", "host", "9f9f93453aee", "2020", "50", "468093", "tensorflow", "stream_executor", "cuda", "cuda_diagnostics", "176", "hostname", "9f9f93453aee", "2020", "01", "50", "468236", "tensorflow", "stream_executor", "cuda", "cuda_diagnostics", "200", "libcuda", "reported", "version", "440", "1", "2020", "01", "01", "50", "468265", "tensorflow", "stream_executor", "cuda", "cuda_diagnostics", "204", "kernel", "reported", "version", "430", "0", "2020", "01", "01", "50", "468285", "tensorflow", "stream_executor", "cuda", "cuda_diagnostics", "313", "kernel", "version", "430", "0", "match", "DSO", "version", "440", "1", "cannot", "find", "working", "devices", "configuration", "2020", "01", "01", "50", "489100", "tensorflow", "core", "platform", "profile_utils", "cpu_utils", "94", "CPU", "Frequency", "2100000000", "2020", "01", "01", "50", "493082", "tensorflow", "compiler", "xla", "service", "service", "168", "XLA", "service", "0x4c12f30", "executing", "computations", "platform", "Host", "Devices", "2020", "01", "01", "50", "493143", "I", "tensorflow", "compiler", "xla", "service", "service", "175", "StreamExecutor", "device", "0", "<", "undefined", "<", "undefined", "```", "I", "think", "tensorflow", "issue", "It", "moreover", "question", "create", "docker", "container", "tensorflow", "gpu", "CUDA", "support", "docker", "base", "image", "right", "one", "em", "Please", "make", "sure", "bug", "per", "GitHub", "Policy", "https", "://", "github", "com", "tensorflow", "tensorflow", "blob", "master", "ISSUES", "),", "address", "code", "doc", "bugs", "performance", "issues", "feature", "requests", "build", "installation", "issues", "GitHub", "tag", "bug_template", "em", "System", "information", "Have", "written", "custom", "code", "opposed", "using", "stock", "example", "script", "provided", "TensorFlow", "yes", "Platform", "Distribution", "e", ".,", "Linux", "Ubuntu", "04", "Linux", "Ubuntu", "04", "Mobile", "device", "e", "iPhone", "Pixel", "Samsung", "Galaxy", "issue", "happens", "mobile", "device", "TensorFlow", "installed", "source", "binary", "binary", "wheel", "via", "PyPI", "TensorFlow", "version", "use", "command", "dev20191231", "v1", "21412", "g3a094e6", "dev20191231", "Python", "version", "Bazel", "version", "compiling", "source", "NA", "GCC", "Compiler", "version", "compiling", "source", "NA", "CUDA", "cuDNN", "version", "CUDA", "GPU", "model", "memory", "V100", "GB", "You", "collect", "information", "using", "environment", "capture", "script", "https", "://", "github", "com", "tensorflow", "tensorflow", "tree", "master", "tools", "tf_env_collect", "You", "also", "obtain", "TensorFlow", "version", "python", "import", "tensorflow", ";", "print", "GIT_VERSION", "VERSION", ")\"`", "python", "import", "tensorflow", ";", "print", "version", "GIT_VERSION", "version", "VERSION", ")\"`", "Describe", "current", "behavior", "suspecting", "CPU", "memory", "leak", "loading", "multiple", "models", "When", "running", "infinite", "loop", "keeps", "loading", "model", "using", "variable", "memory", "private", "bytes", "working", "set", "process", "keep", "increasing", "points", "working", "set", "seems", "free", "memory", "trend", "memory", "keeps", "rising", "used", "simple", "model", "attached", "This", "trend", "happens", "even", "though", "I", "call", "collect", "every", "iteration", "keras", "backend", "clear_session", "().", "issue", "also", "happens", "0", "0", "0", "rc2", "g64c3d38", "0", "0", ").", "specific", "model", "running", "TF", "2", "0", "iteration", "adds", "MiB", "running", "TF", "2", "iteration", "adds", "2", "MiB", "Describe", "expected", "behavior", "The", "memory", "shouldnt", "increase", "interation", "Code", "reproduce", "issue", "```", "import", "import", "tensorflow", "import", "garbage", "collector", "import", "objgraph", "memory_profiler", "import", "profile", "def", "mem_stat", "():", "objs", "get_objects", "print", "total", "objects", "count", "len", "objs", "profile", "def", "profile_own_model", "():", "model", "keras", "models", "Sequential", "keras", "layers", "Flatten", "input_shape", "28", ")),", "tf", "keras", "layers", "Dense", "128", "activation", "relu", "'),", "tf", "keras", "layers", "Dropout", "0", "2", "),", "tf", "keras", "layers", "Dense", "10", "activation", "softmax", "])", "#", "model", "save", "my_model", "tf", "keras", "backend", "clear_session", "del", "model", "collect", "profile", "def", "profile_load_model", "path", "model", "tf", "keras", "models", "load_model", "model_path", "compile", "False", "tf", "keras", "backend", "clear_session", "del", "model", "gc", "collect", "model_path", "f", "my_model", "hd5", "print", "load", "model", "loops", ":\")", "1", "True", "print", "(\"-----------", "iter", "c", "profile_load_model", "model_path", "print", "mem", "stat", "model", "creation", ":\")", "mem_stat", "objgraph", "show_growth", "(", "limit", "=", "30", "c", "1", "```", "`", "**", "Other", "info", "logs", "**", "[", "memory", "tf", "2", "1", "](", "https", "://", "user", "images", "githubusercontent", "com", "27951762", "71644038", "d9f5c500", "2cca", "11ea", "96e3", "b8aedd2e4efb", "png", ")", "Include", "logs", "source", "code", "would", "helpful", "diagnose", "problem", "including", "tracebacks", "please", "include", "full", "traceback", "Large", "logs", "files", "attached", "function", "files_io", "get_matching_files", "says", "takes", "filepath", "actually", "takes", "glob", "means", "save", "checkpoints", "folder", "like", "abc", "]`,", "load", "previous", "checkpoint", "using", "something", "like", "```", "def", "load_checkpoint", "sess", "checkpoint_path", "saver", "tf", "train", "Saver", "tf", "global_variables", "())", "ckpt", "tf", "train", "get_checkpoint_state", "checkpoint_path", "tf", "logging", "info", "Loading", "model", "',", "ckpt", "model_checkpoint_path", "saver", "restore", "sess", "ckpt", "model_checkpoint_path", "```", "checkpoint_path", "=\"./", "logs", "x", "=[", "abc", "]\"`.", "Incompatible", "flag", "incompatible_no_implicit_file_export", "enabled", "default", "future", "Bazel", "release", "1", "thus", "breaking", "TensorFlow", "The", "flag", "documented", "https", "://", "github", "com", "bazelbuild", "bazel", "issues", "10225", "Please", "check", "following", "builds", "build", "test", "results", "href", "https", "://", "buildkite", "com", "bazel", "bazelisk", "plus", "incompatible", "flags", "builds", "361", "3e0dba20", "d84a", "4394", "bbe8", "4155855f8aa5", "target", "_blank", "\"><", "img", "src", "https", "://", "raw", "githubusercontent", "com", "buildkite", "emojis", "master", "img", "buildkite", "mac", "png", "height", "16", "\"/>", "macOS", "OpenJDK", "</", "<", "href", "https", "://", "buildkite", "com", "bazel", "bazelisk", "plus", "incompatible", "flags", "builds", "361", "8067be5e", "7d21", "4333", "a4e1", "6e2817d456d4", "target", "_blank", "\"><", "img", "src", "https", "://", "raw", "githubusercontent", "com", "buildkite", "emojis", "master", "img", "buildkite", "ubuntu", "png", "height", "16", "\"/>", "Ubuntu", "04", "OpenJDK", "</", "<", "href", "https", "://", "buildkite", "com", "bazel", "bazelisk", "plus", "incompatible", "flags", "builds", "361", "5664296d", "5125", "45bc", "a16b", "80fb8b5b94f1", "target", "_blank", "\"><", "img", "src", "https", "://", "raw", "githubusercontent", "com", "buildkite", "emojis", "master", "img", "buildkite", "windows", "png", "height", "16", "\"/>", "Windows", "OpenJDK", "</", "Never", "heard", "incompatible", "flags", "documentation", "https", "://", "docs", "bazel", "build", "versions", "master", "backward", "compatibility", "html", "explains", "everything", "want", "receive", "future", "issues", "TensorFlow", "questions", "please", "file", "issue", "https", "://", "github", "com", "bazelbuild", "continuous", "integration", "Important", "**:", "Please", "NOT", "modify", "issue", "title", "since", "might", "break", "tools", "[", "1", "The", "target", "release", "determined", "yet", "Our", "tool", "update", "issue", "title", "flag", "flip", "scheduled", "System", "information", "windows", "TensorFlow", "installed", "conda", "TensorFlow", "version", "Python", "version", "CUDA", "cuDNN", "version", "7", "6", "GPU", "model", "memory", "2", "nvidia", "rtx", "2070s", "8GB", "Describe", "current", "behavior", "follow", "distributed", "training", "tutorials", "change", "code", "custom", "model", "cumtom", "training", "loop", "run", "script", "shows", "mistake", "ValueError", "Flattening", "PerReplica", "components", "supported", "replica", "context", ".\".", "understande", "happens", "run", "train", "step", "run", "test", "step", "Describe", "expected", "behavior", "Code", "reproduce", "issue", "Provide", "reproducible", "test", "case", "bare", "minimum", "necessary", "generate", "problem", "```", "use", "strategy", "make", "mistake", "strategy", "distribute", "MirroredStrategy", "cross_device_ops", "tf", "distribute", "HierarchicalCopyAllReduce", "())", "strategy", "tf", "distribute", "MirroredStrategy", "cross_device_ops", "tf", "distribute", "ReductionToOneDevice", "(\"/", "device", "CPU", "0", "\"))", "def", "train_step_fn", "rgb", "spec", "tf", "GradientTape", "tape", "fake_spec", "model", "rgb", "training", "True", "loss", "compute_loss", "spec", "fake_spec", "gradients", "tape", "gradient", "loss", "model", "trainable_variables", "opt", "apply_gradients", "zip", "gradients", "model", "trainable_variables", "update", "metrics", "rmse1", "update_state", "spec", "fake_spec", "rmse2", "update_state", "spec", "fake_spec", "rrmse1", "update_state", "spec", "fake_spec", "rrmse2", "update_state", "spec", "fake_spec", "sam", "update_state", "spec", "fake_spec", "return", "loss", "def", "test_step_fn", "rgb", "sepc", "fake_spec", "model", "rgb", "training", "False", "loss", "loss_object", "spec", "fake_spec", "#", "update", "metrics", "rmse1", "update_state", "spec", "fake_spec", "rmse2", "update_state", "spec", "fake_spec", "rrmse1", "update_state", "spec", "fake_spec", "rrmse2", "update_state", "spec", "fake_spec", "sam", "update_state", "spec", "fake_spec", "return", "loss", "tf", "function", "def", "distributed_train_step", "rgb", "spec", "per_replica_losses", "strategy", "experimental_run_v2", "train_step_fn", "args", "rgb", "spec", "return", "strategy", "reduce", "tf", "distribute", "ReduceOp", "SUM", "per_replica_losses", "axis", "None", "tf", "function", "def", "distributed_test_step", "rgb", "spec", "return", "strategy", "experimental_run_v2", "test_step_fn", "args", "rgb", "spec", "epoch", "range", "parser", "epochs", "#", "train", "step", "rgb", "spec", "enumerate", "datas", "0", "]):", "train_mean_loss", "distributed_train_step", "rgb", "spec", "steps", "1", "ckpt", "steps", "assign", "steps", "step", "50", "break", "#", "val", "rmse1", "reset_state", "rmse2", "reset_state", "rrmse1", "reset_state", "rrmse2", "reset_state", "sam", "reset_state", "step", "rgb", "spec", "enumerate", "datas", "1", "]):", "test_mean_loss", "distributed_test_step", "rgb", "spec", "```", "Other", "info", "logs", "**", "```", "ValueError", "converted", "code", "mytrainT", "163", "distributed_test_step", "return", "strategy", "experimental_run_v2", "test_step_fn", "args", "rgb", "spec", "Users", "zhangstation", "Anaconda3", "envs", "tf", "lib", "site", "packages", "tensorflow_core", "python", "distribute", "distribute_lib", "760", "experimental_run_v2", "return", "self", "_extended", "call_for_each_replica", "fn", "args", "args", "kwargs", "kwargs", "mytrainT", "144", "test_step_fn", "loss", "loss_object", "spec", "fake_spec", "Users", "zhangstation", "Anaconda3", "envs", "tf", "lib", "site", "packages", "tensorflow_core", "python", "keras", "losses", "125", "__call__", "name_scope", "scope_name", "self", "__class__", "__name__", "graph_ctx", "Users", "zhangstation", "Anaconda3", "envs", "tf", "lib", "contextlib", "112", "__enter__", "return", "next", "self", "gen", ":\\", "Users", "zhangstation", "Anaconda3", "envs", "tf", "lib", "site", "packages", "tensorflow_core", "python", "keras", "utils", "tf_utils", "435", "graph_context_for_symbolic_tensors", "is_symbolic_tensor", "v", "v", "list", "args", "list", "kwargs", "values", "())):", ":\\", "Users", "zhangstation", "Anaconda3", "envs", "tf", "lib", "site", "packages", "tensorflow_core", "python", "keras", "utils", "tf_utils", "435", "genexpr", "is_symbolic_tensor", "v", "v", "list", "args", "list", "kwargs", "values", "())):", "C", ":\\", "Users", "zhangstation", "Anaconda3", "envs", "tf", "lib", "site", "packages", "tensorflow_core", "python", "keras", "utils", "tf_utils", "345", "is_symbolic_tensor", "return", "tensor", "_is_graph_tensor", "#", "pylint", "disable", "protected", "access", "C", ":\\", "Users", "zhangstation", "Anaconda3", "envs", "tf", "lib", "site", "packages", "tensorflow_core", "python", "framework", "composite_tensor", "119", "_is_graph_tensor", "components", "self", "_type_spec", "_to_components", "(", "self", "#", "pylint", "disable", "protected", "access", "C", ":\\", "Users", "zhangstation", "Anaconda3", "envs", "tf", "lib", "site", "packages", "tensorflow_core", "python", "distribute", "values", "500", "_to_components", "Flattening", "PerReplica", "components", "supported", "replica", "ValueError", "Flattening", "PerReplica", "components", "supported", "replica", "context", "```", "System", "information", "Have", "written", "custom", "code", "opposed", "using", "stock", "example", "script", "provided", "TensorFlow", "yes", "Platform", "Distribution", "e", ".,", "Linux", "Ubuntu", "04", "Ubuntu", "04", "LTS", "TensorFlow", "installed", "source", "binary", "binary", "TensorFlow", "version", "use", "command", "v2", "rc0", "g064e153", "rc1", "python3", "import", "tensorflow", ";", "print", "version", "GIT_VERSION", "version", "VERSION", ")\"`)", "Python", "version", "Python", "6", "CUDA", "cuDNN", "version", "Driver", "Version", "440", "01", "CUDA", "Version", "cuDNN", "6", "2", "GPU", "model", "memory", "Tesla", "V100", "SXM2", "16GB", "Describe", "current", "behavior", "Compiling", "autograph", "function", "slower", "Distributed", "Mirrored", "Strategy", "Single", "GPU", "Distributed", "Mirrored", "Strategy", "minutes", "Multi", "GPU", "Distributed", "Mirrored", "Strategy", "minutes", "The", "tensorflow", "code", "identical", "setups", "Describe", "expected", "behavior", "Autograph", "compilation", "take", "roughly", "time", "single", "multi", "GPU", "Distributed", "Mode", "Mirrored", "Strategy", "Code", "reproduce", "issue", "Training", "loop", "hierarchical", "VAE", "current", "configuration", "https", "://", "github", "com", "olegmyrk", "SPADE", "Tensorflow", "blob", "4681ac60f2078144d55178f23fa885d3ed191450", "SPADE", "#", "L1151", "The", "code", "adapted", "TF1", "repository", "https", "://", "github", "com", "olegmyrk", "SPADE", "Tensorflow", "blob", "8866a0b1457cbd4be5d6f549f9bf4075d49b2486", "SPADE", "#", "L1045", "compiled", "using", "TF2", "tf", "function", "annotation", "uses", "dry", "run", "model", "pre", "create", "variables", "using", "tf", "compat", "variable_scope", "scope", "reuse", "tf", "compat", "AUTO_REUSE", "https", "://", "github", "com", "olegmyrk", "SPADE", "Tensorflow", "blob", "4681ac60f2078144d55178f23fa885d3ed191450", "SPADE", "#", "L1174", "takes", "minutes", "compile", "run", "multi", "gpu", "mode", "Then", "runs", "actual", "training", "step", "https", "://", "github", "com", "olegmyrk", "SPADE", "Tensorflow", "blob", "4681ac60f2078144d55178f23fa885d3ed191450", "SPADE", "#", "L1257", "takes", "minutes", "compile", "run", "first", "time", "multi", "gpu", "mode", "It", "looks", "disabling", "lines", "optim", "apply_gradients", "https", "://", "github", "com", "olegmyrk", "SPADE", "Tensorflow", "blob", "4681ac60f2078144d55178f23fa885d3ed191450", "SPADE", "#", "L1229", "https", "://", "github", "com", "olegmyrk", "SPADE", "Tensorflow", "blob", "4681ac60f2078144d55178f23fa885d3ed191450", "SPADE", "#", "L1231", "https", "://", "github", "com", "olegmyrk", "SPADE", "Tensorflow", "blob", "4681ac60f2078144d55178f23fa885d3ed191450", "SPADE", "#", "L1233", "slashes", "minutes", "needed", "initial", "run", "multi", "gpu", "mode", "Which", "essentially", "compiling", "back", "propagation", "After", "first", "training", "step", "takes", "20", "minutes", "following", "training", "steps", "run", "normal", "speed", "The", "total", "number", "mirrored", "parameters", "around", "500MB", "With", "V100", "GPUs", "training", "step", "around", "5x", "slower", "single", "V100", "GPU", "Command", "NCCL_DEBUG", "INFO", "NCCL_DEBUG_SUBSYS", "ALL", "nohup", "python3", "main", "dataset", "CelebAMask", "img_height", "256", "img_width", "256", "ch", "img_ch", "phase", "train", "save_freq", "10000", "batch_size", "gan_type", "hinge", "code_gan_type", "gan", "n_critic", "1", "code_num_layers", "4", "code_dist_num_layers", "0", "augment_flag", "false", "sn", "False", "--", "train_main", "true", "--", "train_nondet", "true", "--", "lr", "0", "0002", "--", "epoch", "50", "--", "decay_epoch", "25", "--", "print_freq", "100", "train", "CelebAMask", "log", "Other", "info", "logs", "**", "[", "train", "CelebAMask", "slow_compile", "log", "https", "://", "github", "com", "tensorflow", "tensorflow", "files", "3993026", "train", "CelebAMask", "slow_compile", "log", ")", "external", "developer", "pointed", "test", "quantized", "fully", "connected", "operation", "passes", "non", "zero", "weight", "offset", "kernel", "int8", "tests", "https", "://", "github", "com", "tensorflow", "tensorflow", "blob", "master", "tensorflow", "lite", "micro", "kernels", "fully_connected_test", "#", "L118", "L119", "The", "quantization", "specification", "promises", "int8", "kernels", "always", "receive", "zero", "weight", "offsets", "https", "://", "www", "tensorflow", "org", "lite", "performance", "quantization_spec", "This", "failing", "test", "preventing", "optimized", "kernel", "hardware", "platform", "accepted", "System", "information", "Have", "written", "custom", "code", "opposed", "using", "stock", "example", "script", "provided", "TensorFlow", "Yes", "see", "minimal", "example", "Platform", "Distribution", "Ubuntu", "04", "LTS", "Mobile", "device", "e", "iPhone", "Pixel", "Samsung", "Galaxy", "issue", "happens", "mobile", "device", "TensorFlow", "installed", "source", "binary", "binary", "specifically", "tensorflow", "tensorflow", "nightly", "py3", "Docker", "image", "TensorFlow", "version", "use", "command", "dev20191216", "Python", "version", "6", "Bazel", "version", "compiling", "source", "GCC", "Compiler", "version", "compiling", "source", "A", "CUDA", "cuDNN", "version", "N", "A", "GPU", "model", "memory", "N", "A", "Describe", "current", "behavior", "A", "multi", "output", "Keras", "model", "compiled", "one", "output", "loss", "function", "raises", "exception", "calling", "fit", "Describe", "expected", "behavior", "Training", "minimise", "losses", "defined", "output", ").", "Code", "reproduce", "issue", "**", "```", "import", "numpy", "import", "tensorflow", "import", "tensorflow", "keras", "keras", "input_a", "keras", "layers", "Input", "shape", ",),", "name", "input_a", "input_b", "keras", "layers", "Input", "shape", ",),", "name", "input_b", "output_a", "keras", "layers", "Dense", "name", "output_a", "\")(", "input_a", "output_b", "keras", "layers", "Dense", "name", "output_b", "\")(", "input_b", "model", "keras", "Model", "inputs", "input_a", "input_b", "outputs", "output_a", "output_b", "model", "compile", "optimizer", "sgd", "loss", "={\"", "output_a", "None", "output_b", "mse", "\"})", "128", "input_a", "np", "ones", "n", "10", "input_b", "np", "ones", "n", "20", "))", "output_a", "np", "ones", "n", "))", "output_b", "np", "ones", "n", "))", "dataset", "data", "Dataset", "from_tensor_slices", "((", "input_a", "input_b", "output_a", "output_b", "))", ").", "batch", "64", "model", "fit", "dataset", "```", "Raises", "```", "ValueError", "Error", "checking", "model", "target", "list", "Numpy", "arrays", "passing", "model", "size", "model", "expected", "Expected", "see", "array", "(", "),", "inputs", "output_b", "instead", "got", "following", "list", "2", "arrays", "tf", "Tensor", "args_2", "shape", "None", "1", ")", "dtype", "float64", "<", "tf", "Tensor", "args_3", "0", "shape", "None", "1", ")", "dtype", "=", "float64", ">]...", "```", "Incompatible", "flag", "incompatible_disable_target_provider_fields", "break", "TensorFlow", "Bazel", "2", "released", "Please", "see", "following", "builds", "information", "darwin", "OpenJDK", ")](<", "href", "https", "://", "buildkite", "com", "bazel", "bazelisk", "plus", "incompatible", "flags", "builds", "342", "042f4c72", "2a23", "4d7b", "9d3b", "d78619ea3fc7", "target", "_blank", "\">:", "darwin", "OpenJDK", ")</", "[:", "windows", "OpenJDK", ")](<", "href", "https", "://", "buildkite", "com", "bazel", "bazelisk", "plus", "incompatible", "flags", "builds", "342", "65246ccf", "c676", "40de", "b693", "3e1408052faa", "target", "_blank", "\">:", "windows", "OpenJDK", ")</", "[:", "ubuntu", "04", "OpenJDK", ")](<", "href", "https", "://", "buildkite", "com", "bazel", "bazelisk", "plus", "incompatible", "flags", "builds", "342", "42574ec2", "097a", "4fa6", "9c82", "5de0093a2ed1", "target", "_blank", "\">:", "ubuntu", "04", "OpenJDK", ")</", "Questions", "Please", "file", "issue", "https", "://", "github", "com", "bazelbuild", "continuous", "integration", "Important", "**:", "Please", "NOT", "modify", "issue", "title", "since", "might", "break", "tools", "tensorflow", "micro", "System", "information", "macOS", "15", "Catalina", "TensorFlow", "installed", "source", "Tensorflow", "version", "commit", "SHA", "source", "2ba0b2ef68d4259e8b02fa8be77a9372020b81b7", "Dec", "Target", "platform", "e", "Arm", "Mbed", "Arduino", "Nano", "etc", "bluepill", "Describe", "problem", "```", "arm", "none", "eabi", "DNDEBUG", "std", "c", "11", "DTF_LITE_STATIC_MEMORY", "fno", "rtti", "DGEMMLOWP_ALLOW_SLOW_SCALAR_FALLBACK", "DTF_LITE_STATIC_MEMORY", "DTF_LITE_MCU_DEBUG_LOG", "fno", "rtti", "fmessage", "length", "0", "fno", "exceptions", "fno", "unwind", "tables", "fno", "builtin", "ffunction", "sections", "fdata", "sections", "funsigned", "char", "MMD", "mcpu", "cortex", "mthumb", "std", "gnu", "++", "11", "Wvla", "Wall", "Wextra", "Wno", "unused", "parameter", "Wno", "missing", "field", "initializers", "Wno", "write", "strings", "Wno", "sign", "compare", "fno", "delete", "null", "pointer", "checks", "fomit", "frame", "pointer", "fpermissive", "nostdlib", "Os", "Itensorflow", "lite", "micro", "tools", "make", "downloads", "Itensorflow", "lite", "micro", "tools", "make", "downloads", "gemmlowp", "Itensorflow", "lite", "micro", "tools", "make", "downloads", "flatbuffers", "include", "isystemtensorflow", "lite", "micro", "tools", "make", "downloads", "cmsis", "CMSIS", "Core", "Include", "Itensorflow", "lite", "micro", "tools", "make", "downloads", "stm32_bare_lib", "include", "Itensorflow", "lite", "micro", "tools", "make", "downloads", "kissfft", "tensorflow", "lite", "micro", "tools", "make", "gen", "bluepill_cortex", "bin", "hello_world", "tensorflow", "lite", "micro", "tools", "make", "gen", "bluepill_cortex", "obj", "tensorflow", "lite", "micro", "examples", "hello_world", "main", "tensorflow", "lite", "micro", "tools", "make", "gen", "bluepill_cortex", "obj", "tensorflow", "lite", "micro", "examples", "hello_world", "main_functions", "tensorflow", "lite", "micro", "tools", "make", "gen", "bluepill_cortex", "obj", "tensorflow", "lite", "micro", "examples", "hello_world", "sine_model_data", "tensorflow", "lite", "micro", "tools", "make", "gen", "bluepill_cortex", "obj", "tensorflow", "lite", "micro", "examples", "hello_world", "output_handler", "tensorflow", "lite", "micro", "tools", "make", "gen", "bluepill_cortex", "obj", "tensorflow", "lite", "micro", "examples", "hello_world", "constants", "tensorflow", "lite", "micro", "tools", "make", "gen", "bluepill_cortex", "lib", "libtensorflow", "microlite", "tensorflow", "lite", "micro", "tools", "make", "targets", "bluepill", "bluepill", "lds", ",-", "Map", "tensorflow", "lite", "micro", "tools", "make", "gen", "bluepill", "map", ",--", "cref", ",--", "sections", "tensorflow", "lite", "micro", "tools", "make", "gen", "bluepill_cortex", "obj", "tensorflow", "lite", "micro", "examples", "hello_world", "main_functions", "function", "setup", "()':", "Users", "pinxue", "projects", "thread", "tensorflow", "tensorflow", "lite", "micro", "examples", "hello_world", "main_functions", "47", "undefined", "reference", "__cxa_guard_acquire", "Users", "pinxue", "projects", "thread", "tensorflow", "tensorflow", "lite", "micro", "examples", "hello_world", "main_functions", "47", "undefined", "reference", "__cxa_guard_release", "Users", "pinxue", "projects", "thread", "tensorflow", "tensorflow", "lite", "micro", "examples", "hello_world", "main_functions", "63", "undefined", "reference", "__cxa_guard_acquire", "Users", "pinxue", "projects", "thread", "tensorflow", "tensorflow", "lite", "micro", "examples", "hello_world", "main_functions", "63", "undefined", "reference", "__cxa_guard_release", "Users", "pinxue", "projects", "thread", "tensorflow", "tensorflow", "lite", "micro", "examples", "hello_world", "main_functions", "67", "undefined", "reference", "__cxa_guard_acquire", "Users", "pinxue", "projects", "thread", "tensorflow", "tensorflow", "lite", "micro", "examples", "hello_world", "main_functions", "67", "undefined", "reference", "__cxa_guard_release", "Users", "pinxue", "projects", "thread", "tensorflow", "tensorflow", "lite", "micro", "examples", "hello_world", "main_functions", "83", "undefined", "reference", "__dso_handle", "tensorflow", "lite", "micro", "tools", "make", "gen", "bluepill_cortex", "lib", "libtensorflow", "microlite", "greedy_memory_planner", "In", "function", "tflite", "GreedyMemoryPlanner", "::~", "GreedyMemoryPlanner", "()':", "Users", "pinxue", "projects", "thread", "tensorflow", "tensorflow", "lite", "micro", "memory_planner", "greedy_memory_planner", "70", "undefined", "reference", "operator", "delete", "void", "*)'", "__lock___atexit_recursive_mutex", "referenced", "section", "data", "__atexit_recursive_mutex", "Users", "pinxue", "projects", "thread", "tensorflow", "tensorflow", "lite", "micro", "tools", "make", "downloads", "gcc_embedded", "bin", "/../", "lib", "gcc", "arm", "none", "eabi", "3", "/../../../../", "arm", "none", "eabi", "lib", "thumb", "libc", "lib_a", "__call_atexit", "defined", "discarded", "section", "COMMON", "Users", "pinxue", "projects", "thread", "tensorflow", "tensorflow", "lite", "micro", "tools", "make", "downloads", "gcc_embedded", "bin", "/../", "lib", "gcc", "arm", "none", "eabi", "3", "/../../../../", "arm", "none", "eabi", "lib", "thumb", "libc", "lib_a", "lock", ")", "Users", "pinxue", "projects", "thread", "tensorflow", "tensorflow", "lite", "micro", "tools", "make", "downloads", "gcc_embedded", "bin", "/../", "lib", "gcc", "arm", "none", "eabi", "3", "/../../../../", "arm", "none", "eabi", "bin", "tensorflow", "lite", "micro", "tools", "make", "gen", "bluepill_cortex", "bin", "hello_world", "hidden", "symbol", "__dso_handle", "defined", "Users", "pinxue", "projects", "thread", "tensorflow", "tensorflow", "lite", "micro", "tools", "make", "downloads", "gcc_embedded", "bin", "/../", "lib", "gcc", "arm", "none", "eabi", "3", "/../../../../", "arm", "none", "eabi", "bin", "final", "link", "failed", "Bad", "value", "collect2", "error", "returned", "exit", "status", "gmake", "***", "tensorflow", "lite", "micro", "examples", "hello_world", "Makefile", "inc", "tensorflow", "lite", "micro", "tools", "make", "gen", "bluepill_cortex", "bin", "hello_world", "Error", "```", "Please", "provide", "exact", "sequence", "commands", "steps", "ran", "problem", "```", "opt", "local", "bin", "gmake", "f", "tensorflow", "lite", "micro", "tools", "make", "Makefile", "TARGET", "bluepill", "hello_world", "```", "Add", "TfLite", "micro", "Squeeze", "reference", "kernel", "tests", "uint8", "int8", "float32", "Signed", "SiCongLi", "sicong", "arm", "com", "System", "information", "OS", "Platform", "Distribution", "e", ".,", "Linux", "Ubuntu", "04", "Ubuntu", "04", "TensorFlow", "installed", "pip", "TensorFlow", "version", "use", "command", "1", "Python", "version", "python3", "CUDA", "cuDNN", "version", "1", "GPU", "model", "memory", "GTX", "1080", "Describe", "current", "behavior", "Since", "++", "default", "version", "Ubuntu", "distributions", "builds", "use", "_GLIBCXX_USE_CXX11_ABI", "1", "It", "seems", "also", "tensorflow", "built", "_GLIBCXX_USE_CXX11_ABI", "implies", "recompiling", "libraries", "project", "flag", "unconvenient", "noticed", "building", "_GLIBCXX_USE_CXX11_ABI", "1", "increases", "RAM", "lot", "Describe", "expected", "behavior", "Both", "packages", "consume", "amount", "RAM", "Code", "reproduce", "issue", "You", "install", "tensorflow", "using", "python3", "pip", "install", "tensorflow", "1", "1", "related", "https", "://", "github", "com", "tensorflow", "tensorflow", "issues", "27078", "makes", "sure", "python3", "c", "import", "tensorflow", "print", "tensorflow", "sysconfig", "get_compile_flags", "())\"`", "prints", "D_GLIBCXX_USE_CXX11_ABI", "1", "Then", "install", "python3", "python3", "pip", "install", "tensorflow", "1", "1", "make", "sure", "python3", "c", "import", "tensorflow", "print", "tensorflow", "sysconfig", "get_compile_flags", "())\"`", "prints", "D_GLIBCXX_USE_CXX11_ABI", "Now", "run", "script", "python3", "python3", "see", "second", "one", "consume", "lot", "x3", "model", "use", "Any", "`", "saved_model", "`", "work", "```", "python", "import", "import", "import", "sys", "try", "urllib", "import", "urlopen", "except", "ImportError", "urllib", "request", "import", "urlopen", "import", "numpy", "import", "psutil", "PIL", "import", "Image", "import", "tensorflow", "tensorflow", "core", "protobuf", "import", "saved_model_pb2", "tensorflow", "python", "platform", "import", "gfile", "tensorflow", "python", "util", "import", "compat", "process", "psutil", "Process", "os", "getpid", "())", "def", "print_ram", "prefix", "=''):", "print", "RAM", "prefix", "process", "memory_info", "().", "rss", "1024", "1024", "__name__", "__main__", "len", "sys", "argv", "==", "1", "model_filename", "saved_model", "else", "model_filename", "sys", "argv", "1", "gfile", "FastGFile", "model_filename", "data", "compat", "as_bytes", "f", "read", "())", "saved_model_pb2", "SavedModel", "sm", "ParseFromString", "data", "1", "len", "sm", "meta_graphs", "print", "More", "one", "graph", "found", "Not", "sure", "write", "sys", "exit", "1", "img_url", "https", "://", "dailymail", "uk", "2019", "23", "21370544", "7717313", "image", "1_1574501083030", "jpg", "image_data", "urlopen", "img_url", "read", "decoded_data", "numpy", "array", "Image", "open", "io", "BytesIO", "image_data", ")))", "decoded_data", "numpy", "expand_dims", "decoded_data", "axis", "print_ram", "graph", "import", "graph", "import_graph_def", "sm", "meta_graphs", "graph_def", "print_ram", "device", "tf", "device", "(\"/", "device", "GPU", "\"):", "tf", "Session", "graph", "graph", "config", "None", "sess", "print_ram", "session", "output", "sess", "graph", "get_tensor_by_name", "import", "predictions", "0", "print_ram", "run", "')", "range", "10000", "results", "=", "sess", "run", "output", "feed_dict", "={\"", "import", "image_tensor", "0", "\":", "decoded_data", "print_ram", "run", "')", "```", "Other", "info", "logs", "**", "python3", "```", "RAM", "graph", "import", "527", "55078125", "RAM", "device", "856", "59375", "2019", "16", "51", "400388", "tensorflow", "core", "platform", "cpu_feature_guard", "141", "Your", "CPU", "supports", "instructions", "TensorFlow", "binary", "compiled", "use", "AVX2", "FMA", "2019", "16", "51", "425979", "tensorflow", "core", "platform", "profile_utils", "cpu_utils", "94", "CPU", "Frequency", "3399580000", "2019", "16", "51", "426637", "tensorflow", "compiler", "xla", "service", "service", "150", "XLA", "service", "0x229fee0", "executing", "computations", "platform", "Host", "Devices", "2019", "16", "51", "426655", "tensorflow", "compiler", "xla", "service", "service", "158", "StreamExecutor", "device", "0", "<", "undefined", "<", "undefined", "RAM", "session", "860", "RAM", "run", "860", "RAM", "run", "948", "12109375", "RAM", "run", "998", "0", "RAM", "run", "1022", "2265625", "RAM", "run", "1038", "984375", "RAM", "run", "1038", "984375", "RAM", "run", "1056", "0", "RAM", "run", "1092", "1953125", "RAM", "run", "1097", "09375", "RAM", "run", "1097", "09375", "RAM", "run", "1097", "09375", "RAM", "run", "1097", "09375", "RAM", "run", "1097", "09375", "RAM", "run", "1116", "42578125", "RAM", "run", "1116", "42578125", "RAM", "run", "1116", "42578125", "RAM", "run", "1116", "42578125", "RAM", "run", "1116", "42578125", "```", "python3", "```", "RAM", "graph", "import", "510", "33984375", "RAM", "device", "752", "87890625", "2019", "16", "26", "118658", "tensorflow", "core", "platform", "cpu_feature_guard", "141", "Your", "CPU", "supports", "instructions", "TensorFlow", "binary", "compiled", "use", "AVX2", "FMA", "2019", "16", "26", "141979", "tensorflow", "core", "platform", "profile_utils", "cpu_utils", "94", "CPU", "Frequency", "3399580000", "2019", "16", "26", "142737", "tensorflow", "compiler", "xla", "service", "service", "150", "XLA", "service", "0x265aff0", "executing", "computations", "platform", "Host", "Devices", "2019", "16", "26", "142775", "tensorflow", "compiler", "xla", "service", "service", "158", "StreamExecutor", "device", "(", "0", "<", "undefined", "<", "undefined", "RAM", "session", "756", "5625", "RAM", "run", "756", "5625", "RAM", "run", "2977", "8515625", "RAM", "run", "3030", "1640625", "RAM", "run", "3047", "8046875", "RAM", "run", "3090", "08203125", "RAM", "run", "3121", "296875", "RAM", "run", "3122", "0703125", "RAM", "run", "3123", "1015625", "RAM", "run", "3123", "1015625", "RAM", "run", "3135", "9921875", "```", "looks", "like", "experimental_run_tf_function", "removed", "tf", "keras", "Model", "compile", "commit", "days", "ago", "https", "://", "github", "com", "tensorflow", "tensorflow", "commit", "c73c99ca3e0bacf2bca313f270bb3eae28869530", "diff", "de9b96ac2d81503324cbbbe21732031fR1159", "[", "Horovod", "http", "://", "horovod", "/),", "flag", "graph", "mode", "necessary", "order", "Optimizer", "get_gradients", "()`", "called", "aggregates", "gradients", "across", "workers", "Since", "flag", "removed", "distributed", "training", "Horovod", "tf", "keras", "working", "nightly", "builds", "workaround", "achieve", "behavior", "latest", "changes", "master", "Note", "cannot", "perform", "allreduce", "aggregation", "apply_gradients", "due", "interactions", "gradient", "clipping", "loss", "scaling", "see", "https", "://", "github", "com", "horovod", "horovod", "pull", "1347", "System", "information", "Have", "written", "custom", "code", "opposed", "using", "stock", "example", "script", "provided", "TensorFlow", "Yes", "Platform", "Distribution", "e", ".,", "Linux", "Ubuntu", "Linux", "Ubuntu", "Docker", "TensorFlow", "installed", "source", "binary", "pip", "install", "TensorFlow", "version", "use", "command", "v2", "rc2", "g64c3d38", "Python", "version", "CUDA", "cuDNN", "version", "GPU", "model", "memory", "GTX", "1080Ti", "11175MiB", "Describe", "current", "behavior", "Hi", "authors", "developers", "developing", "project", "eager_mode", "disable", "The", "main", "reason", "maintained", "third", "party", "libraries", "ready", "yet", "got", "bug", "running", "custom", "loss", "keras", "model", "distribute", "MirroredStrategy", "This", "bug", "reproduced", "following", "minimal", "testcase", "```", "python", "#%%", "distutils", "version", "import", "LooseVersion", "import", "numpy", "import", "tensorflow", "disable", "eager", "model", "compat", "disable_eager_execution", "batch_size", "100", "img_h", "img_w", "img_min", "img_max", "channels", "num_classes", "strategy", "distribute", "MirroredStrategy", "#%%", "def", "download_data", "():", "get", "raw", "data", "trainX", "trainY", "testX", "testY", "keras", "datasets", "cifar10", "load_data", "trainX", "trainX", "astype", "np", "float32", "testX", "testX", "astype", "np", "float32", "ont", "hot", "trainY", "keras", "utils", "to_categorical", "trainY", "testY", "keras", "utils", "to_categorical", "testY", "get", "validation", "sets", "training_size", "45000", "validX", "trainX", "training_size", ":,:]", "validY", "trainY", "training_size", ":,:]", "trainX", "trainX", "training_size", ",:]", "trainY", "trainY", "training_size", ",:]", "return", "trainX", "trainY", "validX", "validY", "testX", "testY", "#%%", "class", "DataGenerator", "def", "__init__", "self", "sess", "dataX", "dataY", "total_len", "batch_size", "super", "().", "__init__", "self", "total_len", "total_len", "self", "batch_size", "batch_size", "self", "cleanX", "dataX", "self", "totalY", "dataY", "self", "sess", "sess", "self", "on_epoch_end", "def", "__build_pipeline", "self", "dataX", "dataY", "create", "dataset", "API", "def", "preprocess_fn", "dataX", "dataY", "dataX", "image", "random_flip_left_right", "dataX", "workaround", "solution", "LooseVersion", "__version__", "LooseVersion", "'):", "outputX", "dataX", "else", "outputX", "dataX", "dataY", "return", "outputX", "dataY", "dataset", "data", "Dataset", "from_tensor_slices", "dataX", "dataY", "dataset", "dataset", "shuffle", "batch_size", "dataset", "dataset", "repeat", "dataset", "dataset", "batch", "batch_size", "dataset", "dataset", "map", "preprocess_fn", "num_parallel_calls", "data", "experimental", "AUTOTUNE", "dataset", "dataset", "prefetch", "data", "experimental", "AUTOTUNE", "self", "dataset", "dataset", "def", "__len__", "self", "return", "self", "total_len", "self", "batch_size", "def", "on_epoch_end", "self", "run", "permutation", "rand_idx", "np", "random", "permutation", "self", "total_len", "cleanX", "self", "cleanX", "rand_idx", "totalY", "self", "totalY", "rand_idx", "self", "__build_pipeline", "cleanX", "totalY", "#%%", "ref", "https", "://", "keras", "examples", "cifar10_resnet", "def", "build_clf", "():", "strategy", "scope", "():", "compat", "variable_scope", "optimizer", "'):", "def", "resnet_layer", "inputs", "num_filters", "kernel_size", "strides", "activation", "relu", "batch_normalization", "True", "conv_first", "True", "\"\"\"", "Convolution", "Batch", "Normalization", "Activation", "stack", "builder", "Arguments", "inputs", "tensor", "input", "tensor", "input", "image", "previous", "layer", "num_filters", "int", "Conv2D", "number", "filters", "kernel_size", "int", "Conv2D", "square", "kernel", "dimensions", "strides", "int", "Conv2D", "square", "stride", "dimensions", "activation", "string", "activation", "name", "batch_normalization", "bool", "whether", "include", "batch", "normalization", "conv_first", "bool", "conv", "activation", "True", "bn", "activation", "conv", "False", "Returns", "tensor", "tensor", "input", "next", "layer", "\"\"\"", "conv", "keras", "layers", "Conv2D", "num_filters", "kernel_size", "kernel_size", "strides", "strides", "padding", "kernel_initializer", "he_normal", "kernel_regularizer", "keras", "regularizers", "inputs", "conv_first", "conv", "batch_normalization", "keras", "layers", "BatchNormalization", "()(", "activation", "None", "keras", "layers", "Activation", "activation", "else", "batch_normalization", "keras", "layers", "BatchNormalization", "()(", "activation", "None", "keras", "layers", "Activation", "activation", "conv", "return", "def", "cw_loss", "y_true", "y_pred", "label_mask", "label_ref", "pre_softmax", "x", "LooseVersion", "tf", "__version__", "<", "LooseVersion", "'):", "correct_logit", "tf", "reduce_sum", "label_mask", "pre_softmax", "axis", "keep_dims", "True", "else", "correct_logit", "tf", "reduce_sum", "label_mask", "pre_softmax", "axis", "keepdims", "True", "distance", "tf", "relu", "pre_softmax", "correct_logit", "label_mask", "10", "inactivate", "tf", "cast", "tf", "less_equal", "distance", "dtype", "tf", "float32", "weight", "tf", "keras", "layers", "Activation", "softmax", "')(-", "1e9", "inactivate", "distance", "loss", "tf", "reduce_sum", "label_mask", "distance", "weight", "axis", "loss", "tf", "math", "reduce_mean", "loss", "return", "loss", "set", "model", "parameters", "depth", "n", "n", "num_filters", "clf_input", "tf", "keras", "layers", "Input", "shape", "img_h", "img_w", "channels", "name", "model", "input", "label_ref", "tf", "keras", "layers", "Input", "shape", "num_classes", ",),", "name", "label_ref", "input_list", "clf_input", "label_ref", "x", "resnet_layer", "inputs", "clf_input", "stack", "range", "res_block", "range", "n", "strides", "stack", "res_block", "first", "layer", "first", "stack", "strides", "downsample", "resnet_layer", "inputs", "x", "num_filters", "num_filters", "strides", "strides", "resnet_layer", "inputs", "num_filters", "num_filters", "activation", "None", "stack", "res_block", "first", "layer", "first", "stack", "linear", "projection", "residual", "shortcut", "connection", "match", "#", "changed", "dims", "x", "resnet_layer", "inputs", "x", "num_filters", "num_filters", "kernel_size", "strides", "strides", "activation", "None", "batch_normalization", "False", "x", "tf", "keras", "layers", "Add", "()([", "x", "x", "tf", "keras", "layers", "Activation", "relu", "')(", "x", "num_filters", "x", "tf", "keras", "layers", "AveragePooling2D", "pool_size", "8", "x", "x", "tf", "keras", "layers", "Flatten", "()(", "x", "x", "tf", "keras", "layers", "Dense", "num_classes", "kernel_initializer", "he_normal", "activation", "None", "x", "tf", "keras", "layers", "Activation", "softmax", "')(", "x", "optimizer", "tf", "keras", "optimizers", "Adam", "lr", "001", "clf_model", "tf", "keras", "models", "Model", "inputs", "input_list", "outputs", "name", "clf_model", "clf_model", "compile", "loss", "categorical_crossentropy", "optimizer", "optimizer", "metrics", "=['", "accuracy", "cw_loss", "clf_model", "summary", "return", "clf_model", "#%%", "__name__", "__main__", "#", "set", "GPU", "import", "environ", "get", "CUDA_VISIBLE_DEVICES", "None", "environ", "CUDA_VISIBLE_DEVICES", "#", "reset", "tf", "session", "tf", "compat", "keras", "backend", "clear_session", "gpu_options", "tf", "compat", "GPUOptions", "allow_growth", "True", "sess", "tf", "compat", "Session", "config", "tf", "compat", "ConfigProto", "gpu_options", "gpu_options", "tf", "compat", "keras", "backend", "set_session", "sess", "#", "Hyperparameters", "batch_size", "100", "epochs", "#", "prepare", "data", "trainX", "trainY", "validX", "validY", "testX", "testY", "download_data", "train_gen", "DataGenerator", "sess", "trainX", "trainY", "trainY", "shape", "batch_size", "valid_gen", "DataGenerator", "sess", "validX", "validY", "validY", "shape", "batch_size", "test_gen", "DataGenerator", "sess", "testX", "testY", "testY", "shape", "batch_size", "#", "build", "model", "model", "build_clf", "#", "train", "model", "model", "fit", "train_gen", "dataset", "epochs", "epochs", "steps_per_epoch", "train_gen", "__len__", "(),", "validation_data", "valid_gen", "dataset", "validation_steps", "valid_gen", "__len__", "(),", "verbose", "#", "print", "result", "meta_string", "'[", "Testing", "prefix_string", "''", "output", "model", "evaluate", "test_gen", "dataset", "steps", "test_gen", "__len__", "())", "range", "len", "model", "metrics_names", "meta_string", "meta_string", "{:", "}{:", "{:.", "}", "format", "prefix_string", "model", "metrics_names", "ii", "output", "ii", "])", "print", "meta_string", "```", "First", "testing", "case", "looks", "good", "without", "enabling", "tf", "distribute", "MirroredStrategy", "()`", "There", "output", "normal", "case", "```", "Train", "450", "steps", "validate", "steps", "2019", "20", "625379", "tensorflow", "stream_executor", "platform", "default", "dso_loader", "44", "Successfully", "opened", "dynamic", "library", "libcublas", "10", "2019", "13", "20", "217430", "tensorflow", "stream_executor", "platform", "default", "dso_loader", "44", "Successfully", "opened", "dynamic", "library", "libcudnn", "2019", "13", "16", "20", "007150", "tensorflow", "stream_executor", "cuda", "redzone_allocator", "312", "Not", "found", "bin", "ptxas", "found", "Relying", "driver", "perform", "ptx", "compilation", "This", "message", "logged", "450", "450", "[==============================]", "40s", "88ms", "step", "loss", "8299", "accuracy", "4744", "cw_loss", "5022", "val_loss", "9870", "val_accuracy", "4528", "val_cw_loss", "6570", "100", "100", "[==============================]", "26ms", "step", "loss", "0089", "accuracy", "4511", "cw_loss", "6708", "Testing", "loss", "009", "accuracy", "451", "cw_loss", "671", "```", "Next", "tried", "enable", "tf", "distribute", "MirroredStrategy", "()`", "modified", "testcase", "following", "patch", "```", "diff", "def", "build_clf", "():", "#", "strategy", "scope", "():", "tf", "compat", "variable_scope", "optimizer", "'):", "def", "build_clf", "():", "strategy", "scope", "():", "#", "tf", "compat", "variable_scope", "optimizer", "'):", "```", "And", "got", "error", "message", "```", "Traceback", "recent", "call", "last", "):", "File", "bug", "\",", "line", "233", "<", "module", "verbose", "File", "usr", "local", "lib", "python3", "dist", "packages", "tensorflow_core", "python", "keras", "engine", "training", "\",", "line", "717", "fit", "use_multiprocessing", "use_multiprocessing", "File", "usr", "local", "lib", "python3", "dist", "packages", "tensorflow_core", "python", "keras", "engine", "training_distributed", "\",", "line", "685", "fit", "steps_name", "steps_per_epoch", "File", "usr", "local", "lib", "python3", "dist", "packages", "tensorflow_core", "python", "keras", "engine", "training_arrays", "\",", "line", "299", "model_iteration", "batch_outs", "f", "actual_inputs", "File", "usr", "local", "lib", "python3", "dist", "packages", "tensorflow_core", "python", "keras", "backend", "\",", "line", "3580", "__call__", "run_metadata", "self", "run_metadata", "File", "usr", "local", "lib", "python3", "dist", "packages", "tensorflow_core", "python", "client", "session", "\",", "line", "1472", "__call__", "run_metadata_ptr", "tensorflow", "python", "framework", "errors_impl", "InvalidArgumentError", "root", "error", "found", "Invalid", "argument", "You", "must", "feed", "value", "placeholder", "tensor", "model", "input", "dtype", "float", "shape", "[?,", "32", "32", "[[{{", "node", "model", "input", "}}]]", "batch_normalization_9", "cond", "else", "_325", "FusedBatchNormV3", "ReadVariableOp", "_2529", "Invalid", "argument", "You", "must", "feed", "value", "placeholder", "tensor", "model", "input", "dtype", "float", "shape", "[?,", "32", "32", "[[{{", "node", "model", "input", "}}]]", "successful", "operations", "derived", "errors", "ignored", "```", "This", "error", "similar", "previous", "issue", "#", "34866", "guess", "two", "issues", "may", "strong", "connection", "Describe", "expected", "behavior", "It", "work", "properly", "Code", "reproduce", "issue", "Please", "see", "section", "Describe", "current", "behavior", "Other", "info", "logs", "**", "The", "following", "message", "result", "generated", "tf_env_collect", "`", "```", "check", "python", "===================================================", "python", "version", "python", "branch", "python", "build", "version", "default", "Oct", "8", "2019", "13", "python", "compiler", "version", "GCC", "20160609", "python", "implementation", "CPython", "check", "platform", "===============================================", "Linux", "kernel", "version", "#", "Ubuntu", "SMP", "Thu", "Nov", "12", "39", "UTC", "2019", "release", "version", "generic", "platform", "Linux", "37", "generic", "x86_64", "Ubuntu", "16", "xenial", "linux", "distribution", "Ubuntu", "16", "04", "xenial", "linux", "os", "distribution", "Ubuntu", "16", "04", "xenial", "mac", "version", "('',", "('',", "'',", "''),", "'')", "uname", "uname_result", "system", "Linux", "node", "f7f509f1dacf", "release", "37", "generic", "version", "='#", "40", "18", "04", "Ubuntu", "SMP", "Thu", "Nov", "12", "06", "39", "UTC", "2019", "',", "machine", "x86_64", "',", "processor", "x86_64", "architecture", "64bit", "',", "ELF", "')", "machine", "x86_64", "docker", "=============================================", "Yes", "compiler", "=====================================================", "++", "Ubuntu", "6ubuntu1", "~", "16", "04", "12", "20160609", "Copyright", "C", "2015", "Free", "Software", "Foundation", "Inc", "This", "free", "software", "see", "source", "copying", "conditions", "There", "warranty", "even", "MERCHANTABILITY", "FITNESS", "FOR", "PARTICULAR", "PURPOSE", "check", "pips", "===================================================", "numpy", "17", "protobuf", "11", "tensorflow", "estimator", "tensorflow", "gpu", "tensorflow", "probability", "8", "check", "virtualenv", "=========================================", "False", "==", "tensorflow", "import", "============================================", "tf", "version", "VERSION", "tf", "version", "GIT_VERSION", "v2", "rc2", "g64c3d38", "tf", "version", "COMPILER_VERSION", "7", "20180303", "Sanity", "check", "array", "dtype", "int32", "443", "find", "library", "libpthread", "searching", "443", "search", "path", "usr", "local", "nvidia", "lib", "tls", "x86_64", "usr", "local", "nvidia", "lib", "tls", "usr", "local", "nvidia", "lib", "x86_64", "usr", "local", "nvidia", "lib", "usr", "local", "nvidia", "lib64", "tls", "x86_64", "usr", "local", "nvidia", "lib64", "tls", "usr", "local", "nvidia", "lib64", "x86_64", "usr", "local", "nvidia", "lib64", "LD_LIBRARY_PATH", "443", "trying", "file", "usr", "local", "nvidia", "lib", "tls", "x86_64", "libpthread", "443", "trying", "file", "usr", "local", "nvidia", "lib", "tls", "libpthread", "443", "trying", "file", "usr", "local", "nvidia", "lib", "x86_64", "libpthread", "443", "trying", "file", "usr", "local", "nvidia", "lib", "libpthread", "443", "trying", "file", "usr", "local", "nvidia", "lib64", "tls", "x86_64", "libpthread", "443", "trying", "file", "usr", "local", "nvidia", "lib64", "tls", "libpthread", "443", "trying", "file", "usr", "local", "nvidia", "lib64", "x86_64", "libpthread", "443", "trying", "file", "usr", "local", "nvidia", "lib64", "libpthread", "443", "search", "cache", "etc", "cache", "443", "trying", "file", "lib", "x86_64", "linux", "gnu", "libpthread", "443", "443", "find", "library", "libc", "searching", "443", "search", "path", "LD_LIBRARY_PATH", "443", "search", "cache", "etc", "cache", "443", "trying", "file", "lib", "x86_64", "linux", "gnu", "libc", "443", "443", "find", "library", "libdl", "searching", "443", "search", "path", "LD_LIBRARY_PATH", "443", "search", "cache", "etc", "cache", "443", "trying", "file", "lib", "x86_64", "linux", "gnu", "libdl", "443", "443", "find", "library", "libutil", "searching", "443", "search", "path", "LD_LIBRARY_PATH", "443", "search", "cache", "etc", "cache", "443", "trying", "file", "lib", "x86_64", "linux", "gnu", "libutil", "443", "443", "find", "library", "libexpat", "searching", "443", "search", "path", "LD_LIBRARY_PATH", "443", "search", "cache", "etc", "cache", "443", "trying", "file", "lib", "x86_64", "linux", "gnu", "libexpat", "443", "443", "find", "library", "libz", "searching", "443", "search", "path", "LD_LIBRARY_PATH", "443", "search", "cache", "etc", "cache", "443", "trying", "file", "lib", "x86_64", "linux", "gnu", "libz", "443", "443", "find", "library", "libm", "];", "searching", "443", "search", "path", "LD_LIBRARY_PATH", "443", "search", "cache", "etc", "cache", "443", "trying", "file", "lib", "x86_64", "linux", "gnu", "libm", "443", "443", "443", "calling", "init", "lib", "x86_64", "linux", "gnu", "libpthread", "443", "443", "443", "calling", "init", "lib", "x86_64", "linux", "gnu", "libc", "443", "443", "443", "calling", "init", "lib", "x86_64", "linux", "gnu", "libm", "443", "443", "443", "calling", "init", "lib", "x86_64", "linux", "gnu", "libz", "443", "443", "443", "calling", "init", "lib", "x86_64", "linux", "gnu", "libexpat", "443", "443", "443", "calling", "init", "lib", "x86_64", "linux", "gnu", "libutil", "443", "443", "443", "calling", "init", "lib", "x86_64", "linux", "gnu", "libdl", "443", "443", "443", "initialize", "program", "usr", "local", "bin", "python", "443", "443", "443", "transferring", "control", "usr", "local", "bin", "python", "443", "443", "443", "calling", "init", "usr", "lib", "python3", "lib", "dynload", "_opcode", "cpython", "35m", "x86_64", "linux", "gnu", "443", "443", "443", "calling", "init", "usr", "lib", "python3", "lib", "dynload", "_ctypes", "cpython", "35m", "x86_64", "linux", "gnu", "443", "443", "find", "library", "libopenblasp", "34a18dc3", "7", "];", "searching", "443", "search", "path", "usr", "local", "lib", "python3", "dist", "packages", "numpy", "core", "/../.", "libs", "tls", "x86_64", "usr", "local", "lib", "python3", "dist", "packages", "numpy", "core", "/../.", "libs", "tls", "usr", "local", "lib", "python3", "dist", "packages", "numpy", "core", "/../.", "libs", "x86_64", "usr", "local", "lib", "python3", "dist", "packages", "numpy", "core", "/../.", "libs", "RPATH", "file", "usr", "local", "lib", "python3", "dist", "packages", "numpy", "core", "_multiarray_umath", "cpython", "35m", "x86_64", "linux", "gnu", "443", "trying", "file", "usr", "local", "lib", "python3", "dist", "packages", "numpy", "core", "/../.", "libs", "tls", "x86_64", "libopenblasp", "34a18dc3", "7", "443", "trying", "file", "usr", "local", "lib", "python3", "dist", "packages", "numpy", "core", "/../.", "libs", "tls", "libopenblasp", "34a18dc3", "7", "443", "trying", "file", "usr", "local", "lib", "python3", "dist", "packages", "numpy", "core", "/../.", "libs", "x86_64", "libopenblasp", "34a18dc3", "7", "443", "trying", "file", "usr", "local", "lib", "python3", "dist", "packages", "numpy", "core", "/../.", "libs", "libopenblasp", "34a18dc3", "7", "443", "443", "find", "library", "libgfortran", "ed201abd", "];", "searching", "443", "search", "path", "usr", "local", "lib", "python3", "dist", "packages", "numpy", "core", "/../.", "libs", "RPATH", "file", "usr", "local", "lib", "python3", "dist", "packages", "numpy", "core", "_multiarray_umath", "cpython", "35m", "x86_64", "linux", "gnu", "443", "trying", "file", "usr", "local", "lib", "python3", "dist", "packages", "numpy", "core", "/../.", "libs", "libgfortran", "ed201abd", "443", "443", "443", "calling", "init", "usr", "local", "lib", "python3", "dist", "packages", "numpy", "core", "/../.", "libs", "libgfortran", "ed201abd", "443", "443", "443", "calling", "init", "usr", "local", "lib", "python3", "dist", "packages", "numpy", "core", "/../.", "libs", "libopenblasp", "34a18dc3", "7", "443", "443", "443", "calling", "init", "usr", "local", "lib", "python3", "dist", "packages", "numpy", "core", "_multiarray_umath", "cpython", "35m", "x86_64", "linux", "gnu", "443", "443", "443", "calling", "init", "usr", "local", "lib", "python3", "dist", "packages", "numpy", "core", "_multiarray_tests", "cpython", "35m", "x86_64", "linux", "gnu", "443", "443", "443", "calling", "init", "usr", "local", "lib", "python3", "dist", "packages", "numpy", "linalg", "lapack_lite", "cpython", "35m", "x86_64", "linux", "gnu", "443", "443", "443", "calling", "init", "usr", "local", "lib", "python3", "dist", "packages", "numpy", "linalg", "_umath_linalg", "cpython", "35m", "x86_64", "linux", "gnu", "443", "443", "find", "library", "libbz2", "];", "searching", "443", "search", "path", "LD_LIBRARY_PATH", "443", "search", "cache", "etc", "cache", "443", "trying", "file", "lib", "x86_64", "linux", "gnu", "libbz2", "443", "443", "443", "calling", "init", "lib", "x86_64", "linux", "gnu", "libbz2", "443", "443", "443", "calling", "init", "usr", "lib", "python3", "lib", "dynload", "_bz2", "cpython", "35m", "x86_64", "linux", "gnu", "443", "443", "find", "library", "liblzma", "];", "searching", "443", "search", "path", "LD_LIBRARY_PATH", "443", "search", "cache", "etc", "cache", "443", "trying", "file", "lib", "x86_64", "linux", "gnu", "liblzma", "443", "443", "443", "calling", "init", "lib", "x86_64", "linux", "gnu", "liblzma", "443", "443", "443", "calling", "init", "usr", "lib", "python3", "lib", "dynload", "_lzma", "cpython", "35m", "x86_64", "linux", "gnu", "443", "443", "find", "library", "libmpdec", "];", "searching", "443", "search", "path", "(", "LD_LIBRARY_PATH", "443", "search", "cache", "etc", "cache", "443", "trying", "file", "usr", "lib", "x86_64", "linux", "gnu", "libmpdec", "443", "443", "443", "calling", "init", "usr", "lib", "x86_64", "linux", "gnu", "libmpdec", "443", "443", "443", "calling", "init", "usr", "lib", "python3", "lib", "dynload", "_decimal", "cpython", "35m", "x86_64", "linux", "gnu", "443", "443", "443", "calling", "init", "usr", "local", "lib", "python3", "dist", "packages", "numpy", "fft", "_pocketfft_internal", "cpython", "35m", "x86_64", "linux", "gnu", "443", "443", "443", "calling", "init", "usr", "local", "lib", "python3", "dist", "packages", "numpy", "random", "mtrand", "cpython", "35m", "x86_64", "linux", "gnu", "443", "443", "443", "calling", "init", "usr", "local", "lib", "python3", "dist", "packages", "numpy", "random", "common", "cpython", "35m", "x86_64", "linux", "gnu", "443", "443", "443", "calling", "init", "usr", "local", "lib", "python3", "dist", "packages", "numpy", "random", "bounded_integers", "cpython", "35m", "x86_64", "linux", "gnu", "443", "443", "443", "calling", "init", "usr", "local", "lib", "python3", "dist", "packages", "numpy", "random", "mt19937", "cpython", "35m", "x86_64", "linux", "gnu", "443", "443", "443", "calling", "init", "usr", "local", "lib", "python3", "dist", "packages", "numpy", "random", "bit_generator", "cpython", "35m", "x86_64", "linux", "gnu", "443", "443", "find", "library", "libcrypto", "];", "searching", "443", "search", "path", "(", "LD_LIBRARY_PATH", "443", "search", "cache", "etc", "cache", "443", "trying", "file", "lib", "x86_64", "linux", "gnu", "libcrypto", "443", "443", "443", "calling", "init", "lib", "x86_64", "linux", "gnu", "libcrypto", "443", "443", "443", "calling", "init", "usr", "lib", "python3", "lib", "dynload", "_hashlib", "cpython", "35m", "x86_64", "linux", "gnu", "443", "443", "443", "calling", "init", "usr", "local", "lib", "python3", "dist", "packages", "numpy", "random", "philox", "cpython", "35m", "x86_64", "linux", "gnu", "443", "443", "443", "calling", "init", "usr", "local", "lib", "python3", "dist", "packages", "numpy", "random", "pcg64", "cpython", "35m", "x86_64", "linux", "gnu", "443", "443", "443", "calling", "init", "usr", "local", "lib", "python3", "dist", "packages", "numpy", "random", "sfc64", "cpython", "35m", "x86_64", "linux", "gnu", "443", "443", "443", "calling", "init", "usr", "local", "lib", "python3", "dist", "packages", "numpy", "random", "generator", "cpython", "35m", "x86_64", "linux", "gnu", "443", "443", "find", "library", "libtensorflow_framework", "];", "searching", "443", "search", "path", "usr", "local", "lib", "python3", "dist", "packages", "tensorflow_core", "python", "/../../", "_solib_local", "_U_S_Stensorflow_Spython_C_Upywrap_Utensorflow_Uinternal", "so___Utensorflow", "tls", "x86_64", "usr", "local", "lib", "python3", "dist", "packages", "tensorflow_core", "python", "/../../", "_solib_local", "_U_S_Stensorflow_Spython_C_Upywrap_Utensorflow_Uinternal", "so___Utensorflow", "tls", "usr", "local", "lib", "python3", "dist", "packages", "tensorflow_core", "python", "/../../", "_solib_local", "_U_S_Stensorflow_Spython_C_Upywrap_Utensorflow_Uinternal", "so___Utensorflow", "x86_64", "usr", "local", "lib", "python3", "dist", "packages", "tensorflow_core", "python", "/../../", "_solib_local", "_U_S_Stensorflow_Spython_C_Upywrap_Utensorflow_Uinternal", "so___Utensorflow", "usr", "local", "lib", "python3", "dist", "packages", "tensorflow_core", "python", "tls", "x86_64", "usr", "local", "lib", "python3", "dist", "packages", "tensorflow_core", "python", "tls", "usr", "local", "lib", "python3", "dist", "packages", "tensorflow_core", "python", "x86_64", "usr", "local", "lib", "python3", "dist", "packages", "tensorflow_core", "python", "usr", "local", "lib", "python3", "dist", "packages", "tensorflow_core", "python", "/../", "tls", "x86_64", "usr", "local", "lib", "python3", "dist", "packages", "tensorflow_core", "python", "/../", "tls", "usr", "local", "lib", "python3", "dist", "packages", "tensorflow_core", "python", "/../", "x86_64", "usr", "local", "lib", "python3", "dist", "packages", "tensorflow_core", "python", "/..", "(", "RPATH", "file", "usr", "local", "lib", "python3", "dist", "packages", "tensorflow_core", "python", "_pywrap_tensorflow_internal", "443", "trying", "file", "usr", "local", "lib", "python3", "dist", "packages", "tensorflow_core", "python", "/../../", "_solib_local", "_U_S_Stensorflow_Spython_C_Upywrap_Utensorflow_Uinternal", "so___Utensorflow", "tls", "x86_64", "libtensorflow_framework", "443", "trying", "file", "usr", "local", "lib", "python3", "dist", "packages", "tensorflow_core", "python", "/../../", "_solib_local", "_U_S_Stensorflow_Spython_C_Upywrap_Utensorflow_Uinternal", "so___Utensorflow", "tls", "libtensorflow_framework", "443", "trying", "file", "usr", "local", "lib", "python3", "dist", "packages", "tensorflow_core", "python", "/../../", "_solib_local", "_U_S_Stensorflow_Spython_C_Upywrap_Utensorflow_Uinternal", "so___Utensorflow", "x86_64", "libtensorflow_framework", "443", "trying", "file", "usr", "local", "lib", "python3", "dist", "packages", "tensorflow_core", "python", "/../../", "_solib_local", "_U_S_Stensorflow_Spython_C_Upywrap_Utensorflow_Uinternal", "so___Utensorflow", "libtensorflow_framework", "443", "trying", "file", "usr", "local", "lib", "python3", "dist", "packages", "tensorflow_core", "python", "tls", "x86_64", "libtensorflow_framework", "443", "trying", "file", "usr", "local", "lib", "python3", "dist", "packages", "tensorflow_core", "python", "tls", "libtensorflow_framework", "443", "trying", "file", "usr", "local", "lib", "python3", "dist", "packages", "tensorflow_core", "python", "x86_64", "libtensorflow_framework", "443", "trying", "file", "usr", "local", "lib", "python3", "dist", "packages", "tensorflow_core", "python", "libtensorflow_framework", "443", "trying", "file", "usr", "local", "lib", "python3", "dist", "packages", "tensorflow_core", "python", "/../", "tls", "x86_64", "libtensorflow_framework", "443", "trying", "file", "usr", "local", "lib", "python3", "dist", "packages", "tensorflow_core", "python", "/../", "tls", "libtensorflow_framework", "443", "trying", "file", "usr", "local", "lib", "python3", "dist", "packages", "tensorflow_core", "python", "/../", "x86_64", "libtensorflow_framework", "443", "trying", "file", "usr", "local", "lib", "python3", "dist", "packages", "tensorflow_core", "python", "/../", "libtensorflow_framework", "443", "443", "find", "library", "librt", "];", "searching", "443", "search", "path", "usr", "local", "lib", "python3", "dist", "packages", "tensorflow_core", "python", "usr", "local", "lib", "python3", "dist", "packages", "tensorflow_core", "python", "/..", "(", "RPATH", "file", "usr", "local", "lib", "python3", "dist", "packages", "tensorflow_core", "python", "_pywrap_tensorflow_internal", "443", "trying", "file", "usr", "local", "lib", "python3", "dist", "packages", "tensorflow_core", "python", "librt", "443", "trying", "file", "usr", "local", "lib", "python3", "dist", "packages", "tensorflow_core", "python", "/../", "librt", "443", "search", "path", "(", "LD_LIBRARY_PATH", "443", "search", "cache", "etc", "cache", "443", "trying", "file", "lib", "x86_64", "linux", "gnu", "librt", "443", "443", "find", "library", "libstdc", "++.", "];", "searching", "443", "search", "path", "usr", "local", "lib", "python3", "dist", "packages", "tensorflow_core", "python", "usr", "local", "lib", "python3", "dist", "packages", "tensorflow_core", "python", "/..", "(", "RPATH", "file", "usr", "local", "lib", "python3", "dist", "packages", "tensorflow_core", "python", "_pywrap_tensorflow_internal", "443", "trying", "file", "usr", "local", "lib", "python3", "dist", "packages", "tensorflow_core", "python", "libstdc", "++.", "443", "trying", "file", "usr", "local", "lib", "python3", "dist", "packages", "tensorflow_core", "python", "/../", "libstdc", "++.", "443", "search", "path", "(", "LD_LIBRARY_PATH", "443", "search", "cache", "etc", "cache", "443", "trying", "file", "usr", "lib", "x86_64", "linux", "gnu", "libstdc", "++.", "443", "443", "find", "library", "libgcc_s", "];", "searching", "443", "search", "path", "usr", "local", "lib", "python3", "dist", "packages", "tensorflow_core", "python", "usr", "local", "lib", "python3", "dist", "packages", "tensorflow_core", "python", "/..", "(", "RPATH", "file", "usr", "local", "lib", "python3", "dist", "packages", "tensorflow_core", "python", "_pywrap_tensorflow_internal", "443", "trying", "file", "usr", "local", "lib", "python3", "dist", "packages", "tensorflow_core", "python", "libgcc_s", "443", "trying", "file", "usr", "local", "lib", "python3", "dist", "packages", "tensorflow_core", "python", "/../", "libgcc_s", "443", "search", "path", "(", "LD_LIBRARY_PATH", "443", "search", "cache", "etc", "cache", "443", "trying", "file", "lib", "x86_64", "linux", "gnu", "libgcc_s", "443", "443", "443", "calling", "init", "lib", "x86_64", "linux", "gnu", "libgcc_s", "443", "443", "443", "calling", "init", "usr", "lib", "x86_64", "linux", "gnu", "libstdc", "++.", "443", "443", "443", "calling", "init", "lib", "x86_64", "linux", "gnu", "librt", "443", "443", "443", "calling", "init", "usr", "local", "lib", "python3", "dist", "packages", "tensorflow_core", "python", "/../", "libtensorflow_framework", "443", "443", "find", "library", "=", "libhdfs", "];", "searching", "443", "search", "path", "usr", "local", "lib", "python3", "dist", "packages", "tensorflow_core", "python", "/..", "(", "RPATH", "file", "usr", "local", "lib", "python3", "dist", "packages", "tensorflow_core", "python", "_pywrap_tensorflow_internal", "443", "trying", "file", "usr", "local", "lib", "python3", "dist", "packages", "tensorflow_core", "python", "/../", "libhdfs", "443", "search", "path", "usr", "local", "lib", "python3", "dist", "packages", "tensorflow_core", "python", "usr", "local", "lib", "python3", "dist", "packages", "tensorflow_core", "python", "/..", "(", "RPATH", "file", "usr", "local", "lib", "python3", "dist", "packages", "tensorflow_core", "python", "_pywrap_tensorflow_internal", "443", "trying", "file", "usr", "local", "lib", "python3", "dist", "packages", "tensorflow_core", "python", "libhdfs", "443", "trying", "file", "usr", "local", "lib", "python3", "dist", "packages", "tensorflow_core", "python", "/../", "libhdfs", "443", "search", "path", "=", "(", "LD_LIBRARY_PATH", "443", "search", "cache", "etc", "cache", "443", "search", "path", "lib", "x86_64", "linux", "gnu", "tls", "x86_64", "lib", "x86_64", "linux", "gnu", "tls", "lib", "x86_64", "linux", "gnu", "x86_64", "lib", "x86_64", "linux", "gnu", "usr", "lib", "x86_64", "linux", "gnu", "tls", "x86_64", "usr", "lib", "x86_64", "linux", "gnu", "tls", "usr", "lib", "x86_64", "linux", "gnu", "x86_64", "usr", "lib", "x86_64", "linux", "gnu", "lib", "tls", "x86_64", "lib", "tls", "lib", "x86_64", "lib", "usr", "lib", "tls", "x86_64", "usr", "lib", "tls", "usr", "lib", "x86_64", "usr", "lib", "(", "system", "search", "path", "443", "trying", "file", "lib", "x86_64", "linux", "gnu", "tls", "x86_64", "libhdfs", "443", "trying", "file", "lib", "x86_64", "linux", "gnu", "tls", "libhdfs", "443", "trying", "file", "lib", "x86_64", "linux", "gnu", "x86_64", "libhdfs", "443", "trying", "file", "lib", "x86_64", "linux", "gnu", "libhdfs", "443", "trying", "file", "usr", "lib", "x86_64", "linux", "gnu", "tls", "x86_64", "libhdfs", "443", "trying", "file", "usr", "lib", "x86_64", "linux", "gnu", "tls", "libhdfs", "443", "trying", "file", "usr", "lib", "x86_64", "linux", "gnu", "x86_64", "libhdfs", "443", "trying", "file", "usr", "lib", "x86_64", "linux", "gnu", "libhdfs", "443", "trying", "file", "lib", "tls", "x86_64", "libhdfs", "443", "trying", "file", "lib", "tls", "libhdfs", "443", "trying", "file", "lib", "x86_64", "libhdfs", "443", "trying", "file", "lib", "libhdfs", "443", "trying", "file", "usr", "lib", "tls", "x86_64", "libhdfs", "443", "trying", "file", "usr", "lib", "tls", "libhdfs", "443", "trying", "file", "usr", "lib", "x86_64", "libhdfs", "443", "trying", "file", "usr", "lib", "libhdfs", "443", "443", "443", "calling", "init", "usr", "local", "lib", "python3", "dist", "packages", "tensorflow_core", "python", "_pywrap_tensorflow_internal", "443", "443", "443", "calling", "init", "usr", "local", "lib", "python3", "dist", "packages", "google", "protobuf", "internal", "_api_implementation", "cpython", "35m", "x86_64", "linux", "gnu", "443", "443", "443", "calling", "init", "usr", "local", "lib", "python3", "dist", "packages", "google", "protobuf", "pyext", "_message", "cpython", "35m", "x86_64", "linux", "gnu", "443", "443", "443", "calling", "init", "usr", "lib", "python3", "lib", "dynload", "_csv", "cpython", "35m", "x86_64", "linux", "gnu", "443", "443", "443", "calling", "init", "usr", "lib", "python3", "lib", "dynload", "termios", "cpython", "35m", "x86_64", "linux", "gnu", "443", "443", "443", "calling", "init", "usr", "local", "lib", "python3", "dist", "packages", "tensorflow_core", "python", "framework", "fast_tensor_util", "443", "443", "find", "library", "=", "libuuid", "];", "searching", "443", "search", "path", "=", "(", "LD_LIBRARY_PATH", "443", "search", "cache", "etc", "cache", "443", "trying", "file", "lib", "x86_64", "linux", "gnu", "libuuid", "443", "443", "443", "calling", "init", "lib", "x86_64", "linux", "gnu", "libuuid", "443", "443", "443", "calling", "init", "usr", "local", "lib", "python3", "dist", "packages", "wrapt", "_wrappers", "cpython", "35m", "x86_64", "linux", "gnu", "443", "443", "443", "calling", "init", "usr", "lib", "python3", "lib", "dynload", "_json", "cpython", "35m", "x86_64", "linux", "gnu", "443", "443", "find", "library", "=", "libssl", "];", "searching", "443", "search", "path", "=", "(", "LD_LIBRARY_PATH", ")", "443", "search", "cache", "etc", "cache", "443", "trying", "file", "lib", "x86_64", "linux", "gnu", "libssl", "443", "443", "443", "calling", "init", "lib", "x86_64", "linux", "gnu", "libssl", "443", "443", "443", "calling", "init", "usr", "lib", "python3", "lib", "dynload", "_ssl", "cpython", "35m", "x86_64", "linux", "gnu", "443", "443", "find", "library", "=", "libhdf5", "49599f4e", "103", "];", "searching", "443", "search", "path", "usr", "local", "lib", "python3", "dist", "packages", "h5py", "libs", "tls", "x86_64", "usr", "local", "lib", "python3", "dist", "packages", "h5py", "libs", "tls", "usr", "local", "lib", "python3", "dist", "packages", "h5py", "libs", "x86_64", "usr", "local", "lib", "python3", "dist", "packages", "h5py", "libs", "(", "RPATH", "file", "usr", "local", "lib", "python3", "dist", "packages", "h5py", "_errors", "cpython", "35m", "x86_64", "linux", "gnu", ")", "443", "trying", "file", "usr", "local", "lib", "python3", "dist", "packages", "h5py", "libs", "tls", "x86_64", "libhdf5", "49599f4e", "103", "443", "trying", "file", "usr", "local", "lib", "python3", "dist", "packages", "h5py", "libs", "tls", "libhdf5", "49599f4e", "103", "443", "trying", "file", "usr", "local", "lib", "python3", "dist", "packages", "h5py", "libs", "x86_64", "libhdf5", "49599f4e", "103", "443", "trying", "file", "usr", "local", "lib", "python3", "dist", "packages", "h5py", "libs", "libhdf5", "49599f4e", "103", "443", "443", "find", "library", "=", "libhdf5_hl", "db841637", "100", "];", "searching", "443", "search", "path", "usr", "local", "lib", "python3", "dist", "packages", "h5py", "libs", "(", "RPATH", "file", "usr", "local", "lib", "python3", "dist", "packages", "h5py", "_errors", "cpython", "35m", "x86_64", "linux", "gnu", ")", "443", "trying", "file", "usr", "local", "lib", "python3", "dist", "packages", "h5py", "libs", "libhdf5_hl", "db841637", "100", "443", "443", "find", "library", "=", "libsz", "1c7dd0cf", "];", "searching", "443", "search", "path", "usr", "local", "lib", "python3", "dist", "packages", "h5py", "libs", "/./", "tls", "x86_64", "usr", "local", "lib", "python3", "dist", "packages", "h5py", "libs", "/./", "tls", "usr", "local", "lib", "python3", "dist", "packages", "h5py", "libs", "/./", "x86_64", "usr", "local", "lib", "python3", "dist", "packages", "h5py", "libs", "(", "RPATH", "file", "usr", "local", "lib", "python3", "dist", "packages", "h5py", "libs", "libhdf5", "49599f4e", "103", ")", "443", "trying", "file", "usr", "local", "lib", "python3", "dist", "packages", "h5py", "libs", "/./", "tls", "x86_64", "libsz", "1c7dd0cf", "443", "trying", "file", "usr", "local", "lib", "python3", "dist", "packages", "h5py", "libs", "/./", "tls", "libsz", "1c7dd0cf", "443", "trying", "file", "usr", "local", "lib", "python3", "dist", "packages", "h5py", "libs", "/./", "x86_64", "libsz", "1c7dd0cf", "443", "trying", "file", "usr", "local", "lib", "python3", "dist", "packages", "h5py", "libs", "/./", "libsz", "1c7dd0cf", "443", "443", "find", "library", "=", "libaec", "2147abcd", "0", "0", "];", "searching", "443", "search", "path", "usr", "local", "lib", "python3", "dist", "packages", "h5py", "libs", "(", "RPATH", "file", "usr", "local", "lib", "python3", "dist", "packages", "h5py", "libs", "libhdf5", "49599f4e", "103", "0", "0", ")", "443", "trying", "file", "usr", "local", "lib", "python3", "dist", "packages", "h5py", "libs", "/./", "libaec", "2147abcd", "0", "0", "443", "443", "find", "library", "=", "libz", "a147dcb0", "0", "];", "searching", "443", "search", "path", "usr", "local", "lib", "python3", "dist", "packages", "h5py", "libs", "(", "RPATH", "file", "usr", "local", "lib", "python3", "dist", "packages", "h5py", "libs", "libhdf5", "49599f4e", "103", "0", "0", ")", "443", "trying", "file", "usr", "local", "lib", "python3", "dist", "packages", "h5py", "libs", "/./", "libz", "a147dcb0", "443", "443", "443", "calling", "init", "usr", "local", "lib", "python3", "dist", "packages", "h5py", "libs", "/./", "libz", "a147dcb0", "1", "443", "443", "443", "calling", "init", "usr", "local", "lib", "python3", "dist", "packages", "h5py", "libs", "/./", "libaec", "2147abcd", "0", "0", "443", "443", "443", "calling", "init", "usr", "local", "lib", "python3", "dist", "packages", "h5py", "libs", "/./", "libsz", "1c7dd0cf", "0", "1", "443", "443", "443", "calling", "init", "usr", "local", "lib", "python3", "dist", "packages", "h5py", "libs", "libhdf5", "49599f4e", "103", "0", "0", "443", "443", "443", "calling", "init", "usr", "local", "lib", "python3", "dist", "packages", "h5py", "libs", "libhdf5_hl", "db841637", "100", "1", "1", "443", "443", "443", "calling", "init", "usr", "local", "lib", "python3", "dist", "packages", "h5py", "_errors", "cpython", "35m", "x86_64", "linux", "gnu", "443", "443", "443", "calling", "init", "usr", "local", "lib", "python3", "dist", "packages", "h5py", "cpython", "35m", "x86_64", "linux", "gnu", "443", "443", "443", "calling", "init", "usr", "local", "lib", "python3", "dist", "packages", "h5py", "defs", "cpython", "35m", "x86_64", "linux", "gnu", "443", "443", "443", "calling", "init", "usr", "local", "lib", "python3", "dist", "packages", "h5py", "_objects", "cpython", "35m", "x86_64", "linux", "gnu", "443", "443", "443", "calling", "init", "usr", "local", "lib", "python3", "dist", "packages", "h5py", "_conv", "cpython", "35m", "x86_64", "linux", "gnu", "443", "443", "443", "calling", "init", "usr", "local", "lib", "python3", "dist", "packages", "h5py", "h5r", "cpython", "35m", "x86_64", "linux", "gnu", "443", "443", "443", "calling", "init", "usr", "local", "lib", "python3", "dist", "packages", "h5py", "h5t", "cpython", "35m", "x86_64", "linux", "gnu", "443", "443", "443", "calling", "init", "usr", "local", "lib", "python3", "dist", "packages", "h5py", "utils", "cpython", "35m", "x86_64", "linux", "gnu", "443", "452", "find", "library", "=", "libc", "0", "];", "searching", "452", "search", "path", "usr", "local", "nvidia", "lib", "tls", "x86_64", "usr", "local", "nvidia", "lib", "tls", "usr", "local", "nvidia", "lib", "x86_64", "usr", "local", "nvidia", "lib", "usr", "local", "nvidia", "lib64", "tls", "x86_64", "usr", "local", "nvidia", "lib64", "tls", "usr", "local", "nvidia", "lib64", "x86_64", "usr", "local", "nvidia", "lib64", "(", "LD_LIBRARY_PATH", ")", "452", "trying", "file", "usr", "local", "nvidia", "lib", "tls", "x86_64", "libc", "452", "trying", "file", "usr", "local", "nvidia", "lib", "tls", "libc", "452", "trying", "file", "usr", "local", "nvidia", "lib", "x86_64", "libc", "452", "trying", "file", "usr", "local", "nvidia", "lib", "libc", "452", "trying", "file", "usr", "local", "nvidia", "lib64", "tls", "x86_64", "libc", "452", "trying", "file", "usr", "local", "nvidia", "lib64", "tls", "libc", "452", "trying", "file", "usr", "local", "nvidia", "lib64", "x86_64", "libc", "452", "trying", "file", "usr", "local", "nvidia", "lib64", "libc", "452", "search", "cache", "etc", "cache", "452", "trying", "file", "lib", "x86_64", "linux", "gnu", "libc", "452", "452", "452", "calling", "init", "lib", "x86_64", "linux", "gnu", "libc", "452", "452", "452", "initialize", "program", "bin", "452", "452", "452", "transferring", "control", "bin", "452", "443", "443", "calling", "init", "usr", "local", "lib", "python3", "dist", "packages", "h5py", "h5z", "cpython", "35m", "x86_64", "linux", "gnu", "443", "443", "443", "calling", "init", "usr", "local", "lib", "python3", "dist", "packages", "h5py", "h5a", "cpython", "35m", "x86_64", "linux", "gnu", "443", "443", "443", "calling", "init", "usr", "local", "lib", "python3", "dist", "packages", "h5py", "h5s", "cpython", "35m", "x86_64", "linux", "gnu", "443", "443", "443", "calling", "init", "usr", "local", "lib", "python3", "dist", "packages", "h5py", "h5p", "cpython", "35m", "x86_64", "linux", "gnu", "443", "443", "443", "calling", "init", "usr", "local", "lib", "python3", "dist", "packages", "h5py", "h5ac", "cpython", "35m", "x86_64", "linux", "gnu", "443", "443", "443", "calling", "init", "usr", "local", "lib", "python3", "dist", "packages", "h5py", "_proxy", "cpython", "35m", "x86_64", "linux", "gnu", "443", "443", "443", "calling", "init", "usr", "local", "lib", "python3", "dist", "packages", "h5py", "h5d", "cpython", "35m", "x86_64", "linux", "gnu", "443", "443", "443", "calling", "init", "usr", "local", "lib", "python3", "dist", "packages", "h5py", "h5ds", "cpython", "35m", "x86_64", "linux", "gnu", "443", "443", "443", "calling", "init", "usr", "local", "lib", "python3", "dist", "packages", "h5py", "h5f", "cpython", "35m", "x86_64", "linux", "gnu", "443", "443", "443", "calling", "init", "usr", "local", "lib", "python3", "dist", "packages", "h5py", "h5g", "cpython", "35m", "x86_64", "linux", "gnu", "443", "443", "443", "calling", "init", "usr", "local", "lib", "python3", "dist", "packages", "h5py", "h5i", "cpython", "35m", "x86_64", "linux", "gnu", "443", "443", "443", "calling", "init", "usr", "local", "lib", "python3", "dist", "packages", "h5py", "h5fd", "cpython", "35m", "x86_64", "linux", "gnu", "443", "443", "443", "calling", "init", "usr", "local", "lib", "python3", "dist", "packages", "h5py", "h5pl", "cpython", "35m", "x86_64", "linux", "gnu", "443", "443", "443", "calling", "init", "usr", "local", "lib", "python3", "dist", "packages", "h5py", "h5o", "cpython", "35m", "x86_64", "linux", "gnu", "443", "443", "443", "calling", "init", "usr", "local", "lib", "python3", "dist", "packages", "h5py", "h5l", "cpython", "35m", "x86_64", "linux", "gnu", "443", "443", "443", "calling", "init", "usr", "local", "lib", "python3", "dist", "packages", "scipy", "_lib", "_ccallback_c", "cpython", "35m", "x86_64", "linux", "gnu", "443", "443", "443", "calling", "init", "usr", "local", "lib", "python3", "dist", "packages", "scipy", "sparse", "_sparsetools", "cpython", "35m", "x86_64", "linux", "gnu", "443", "443", "443", "calling", "init", "usr", "local", "lib", "python3", "dist", "packages", "scipy", "sparse", "_csparsetools", "cpython", "35m", "x86_64", "linux", "gnu", "443", "443", "443", "calling", "init", "usr", "local", "lib", "python3", "dist", "packages", "scipy", "sparse", "csgraph", "_shortest_path", "cpython", "35m", "x86_64", "linux", "gnu", "443", "443", "443", "calling", "init", "usr", "local", "lib", "python3", "dist", "packages", "scipy", "sparse", "csgraph", "_tools", "cpython", "35m", "x86_64", "linux", "gnu", "443", "443", "443", "calling", "init", "usr", "local", "lib", "python3", "dist", "packages", "scipy", "sparse", "csgraph", "_traversal", "cpython", "35m", "x86_64", "linux", "gnu", "443", "443", "443", "calling", "init", "usr", "local", "lib", "python3", "dist", "packages", "scipy", "sparse", "csgraph", "_min_spanning_tree", "cpython", "35m", "x86_64", "linux", "gnu", "443", "443", "443", "calling", "init", "usr", "local", "lib", "python3", "dist", "packages", "scipy", "sparse", "csgraph", "_reordering", "cpython", "35m", "x86_64", "linux", "gnu", "443", "443", "find", "library", "=", "libjpeg", "3b10b538", "0", "0", "];", "searching", "443", "search", "path", "usr", "local", "lib", "python3", "dist", "packages", "PIL", "libs", "tls", "x86_64", "usr", "local", "lib", "python3", "dist", "packages", "PIL", "libs", "tls", "usr", "local", "lib", "python3", "dist", "packages", "PIL", "libs", "x86_64", "usr", "local", "lib", "python3", "dist", "packages", "PIL", "libs", "(", "RPATH", "file", "usr", "local", "lib", "python3", "dist", "packages", "PIL", "_imaging", "cpython", "35m", "x86_64", "linux", "gnu", ")", "443", "trying", "file", "usr", "local", "lib", "python3", "dist", "packages", "PIL", "libs", "tls", "x86_64", "libjpeg", "3b10b538", "0", "443", "trying", "file", "usr", "local", "lib", "python3", "dist", "packages", "PIL", "libs", "tls", "libjpeg", "3b10b538", "0", "443", "trying", "file", "usr", "local", "lib", "python3", "dist", "packages", "PIL", "libs", "x86_64", "libjpeg", "3b10b538", "0", "443", "trying", "file", "usr", "local", "lib", "python3", "dist", "packages", "PIL", "libs", "libjpeg", "3b10b538", "0", "443", "443", "find", "library", "=", "libopenjp2", "b3d7668a", "1", "0", "];", "searching", "443", "search", "path", "usr", "local", "lib", "python3", "dist", "packages", "PIL", "libs", "(", "RPATH", "file", "usr", "local", "lib", "python3", "dist", "packages", "PIL", "_imaging", "cpython", "35m", "x86_64", "linux", "gnu", ")", "443", "trying", "file", "usr", "local", "lib", "python3", "dist", "packages", "PIL", "libs", "libopenjp2", "b3d7668a", "2", "1", "443", "443", "find", "library", "=", "libtiff", "8267adfe", "0", "0", "];", "searching", "443", "search", "path", "usr", "local", "lib", "python3", "dist", "packages", "PIL", "libs", "(", "RPATH", "file", "usr", "local", "lib", "python3", "dist", "packages", "PIL", "_imaging", "cpython", "35m", "x86_64", "linux", "gnu", ")", "443", "trying", "file", "usr", "local", "lib", "python3", "dist", "packages", "PIL", "libs", "libtiff", "8267adfe", "0", "443", "443", "find", "library", "=", "liblzma", "6cd627ed", "2", "0", "];", "searching", "443", "search", "path", "usr", "local", "lib", "python3", "dist", "packages", "PIL", "libs", "/./", "tls", "x86_64", "usr", "local", "lib", "python3", "dist", "packages", "PIL", "libs", "/./", "tls", "usr", "local", "lib", "python3", "dist", "packages", "PIL", "libs", "/./", "x86_64", "usr", "local", "lib", "python3", "dist", "packages", "PIL", "libs", "(", "RPATH", "file", "usr", "local", "lib", "python3", "dist", "packages", "PIL", "libs", "libtiff", "8267adfe", "0", ")", "443", "trying", "file", "usr", "local", "lib", "python3", "dist", "packages", "PIL", "libs", "/./", "tls", "x86_64", "liblzma", "6cd627ed", "2", "443", "trying", "file", "usr", "local", "lib", "python3", "dist", "packages", "PIL", "libs", "/./", "tls", "liblzma", "6cd627ed", "2", "4", "443", "trying", "file", "usr", "local", "lib", "python3", "dist", "packages", "PIL", "libs", "/./", "x86_64", "liblzma", "6cd627ed", "2", "4", "443", "trying", "file", "usr", "local", "lib", "python3", "dist", "packages", "PIL", "libs", "/./", "liblzma", "6cd627ed", "2", "4", "443", "443", "443", "calling", "init", "usr", "local", "lib", "python3", "dist", "packages", "PIL", "libs", "/./", "liblzma", "6cd627ed", "2", "4", "443", "443", "443", "calling", "init", "usr", "local", "lib", "python3", "dist", "packages", "PIL", "libs", "libjpeg", "3b10b538", "3", "0", "443", "443", "443", "calling", "init", "usr", "local", "lib", "python3", "dist", "packages", "PIL", "libs", "libtiff", "8267adfe", "4", "0", "443", "443", "443", "calling", "init", "usr", "local", "lib", "python3", "dist", "packages", "PIL", "libs", "libopenjp2", "b3d7668a", "2", "3", "1", "443", "443", "443", "calling", "init", "usr", "local", "lib", "python3", "dist", "packages", "PIL", "_imaging", "cpython", "35m", "x86_64", "linux", "gnu", "443", "443", "443", "calling", "init", "usr", "local", "lib", "python3", "dist", "packages", "scipy", "ndimage", "_nd_image", "cpython", "35m", "x86_64", "linux", "gnu", "443", "443", "443", "calling", "init", "usr", "local", "lib", "python3", "dist", "packages", "scipy", "ndimage", "_ni_label", "cpython", "35m", "x86_64", "linux", "gnu", "443", "443", "find", "library", "=", "libopenblasp", "2ecf47d5", "3", "7", "dev", "0", "];", "searching", "443", "search", "path", "usr", "local", "lib", "python3", "dist", "packages", "scipy", "linalg", "/../.", "libs", "tls", "x86_64", "usr", "local", "lib", "python3", "dist", "packages", "scipy", "linalg", "/../.", "libs", "tls", "usr", "local", "lib", "python3", "dist", "packages", "scipy", "linalg", "/../.", "libs", "x86_64", "usr", "local", "lib", "python3", "dist", "packages", "scipy", "linalg", "/../.", "libs", "(", "RPATH", "file", "usr", "local", "lib", "python3", "dist", "packages", "scipy", "linalg", "_fblas", "cpython", "35m", "x86_64", "linux", "gnu", ")", "443", "trying", "file", "usr", "local", "lib", "python3", "dist", "packages", "scipy", "linalg", "/../.", "libs", "tls", "x86_64", "libopenblasp", "2ecf47d5", "3", "7", "dev", "443", "trying", "file", "usr", "local", "lib", "python3", "dist", "packages", "scipy", "linalg", "/../.", "libs", "tls", "libopenblasp", "2ecf47d5", "3", "7", "dev", "443", "trying", "file", "usr", "local", "lib", "python3", "dist", "packages", "scipy", "linalg", "/../.", "libs", "x86_64", "libopenblasp", "2ecf47d5", "3", "7", "dev", "443", "trying", "file", "usr", "local", "lib", "python3", "dist", "packages", "scipy", "linalg", "/../.", "libs", "libopenblasp", "2ecf47d5", "3", "7", "dev", "443", "443", "443", "calling", "init", "usr", "local", "lib", "python3", "dist", "packages", "scipy", "linalg", "/../.", "libs", "libopenblasp", "2ecf47d5", "3", "7", "dev", "443", "443", "443", "calling", "init", "usr", "local", "lib", "python3", "dist", "packages", "scipy", "linalg", "_fblas", "cpython", "35m", "x86_64", "linux", "gnu", "443", "443", "443", "calling", "init", "usr", "local", "lib", "python3", "dist", "packages", "scipy", "linalg", "_flapack", "cpython", "35m", "x86_64", "linux", "gnu", "443", "443", "443", "calling", "init", "usr", "local", "lib", "python3", "dist", "packages", "scipy", "linalg", "_flinalg", "cpython", "35m", "x86_64", "linux", "gnu", "443", "443", "443", "calling", "init", "usr", "local", "lib", "python3", "dist", "packages", "scipy", "linalg", "_solve_toeplitz", "cpython", "35m", "x86_64", "linux", "gnu", "443", "443", "443", "calling", "init", "usr", "local", "lib", "python3", "dist", "packages", "scipy", "linalg", "_decomp_update", "cpython", "35m", "x86_64", "linux", "gnu", "443", "443", "443", "calling", "init", "usr", "local", "lib", "python3", "dist", "packages", "scipy", "linalg", "cython_blas", "cpython", "35m", "x86_64", "linux", "gnu", "443", "443", "443", "calling", "init", "usr", "local", "lib", "python3", "dist", "packages", "scipy", "linalg", "cython_lapack", "cpython", "35m", "x86_64", "linux", "gnu", "443", "443", "443", "calling", "init", "usr", "local", "lib", "python3", "dist", "packages", "tensorflow_core", "lite", "experimental", "microfrontend", "python", "ops", "_audio_microfrontend_op", "443", "443", "443", "calling", "fini", "usr", "local", "bin", "python", "0", "443", "443", "443", "calling", "fini", "lib", "x86_64", "linux", "gnu", "libutil", "1", "0", "443", "443", "443", "calling", "fini", "lib", "x86_64", "linux", "gnu", "libexpat", "1", "0", "443", "443", "443", "calling", "fini", "lib", "x86_64", "linux", "gnu", "libz", "1", "0", "443", "443", "443", "calling", "fini", "usr", "lib", "python3", "lib", "dynload", "_opcode", "cpython", "35m", "x86_64", "linux", "gnu", "0", "443", "443", "443", "calling", "fini", "usr", "lib", "python3", "lib", "dynload", "_ctypes", "cpython", "35m", "x86_64", "linux", "gnu", "0", "443", "443", "443", "calling", "fini", "usr", "local", "lib", "python3", "dist", "packages", "numpy", "core", "_multiarray_umath", "cpython", "35m", "x86_64", "linux", "gnu", "0", "443", "443", "443", "calling", "fini", "usr", "local", "lib", "python3", "dist", "packages", "numpy", "core", "_multiarray_tests", "cpython", "35m", "x86_64", "linux", "gnu", "0", "443", "443", "443", "calling", "fini", "usr", "local", "lib", "python3", "dist", "packages", "numpy", "linalg", "lapack_lite", "cpython", "35m", "x86_64", "linux", "gnu", "0", "443", "443", "443", "calling", "fini", "usr", "local", "lib", "python3", "dist", "packages", "numpy", "linalg", "_umath_linalg", "cpython", "35m", "x86_64", "linux", "gnu", "0", "443", "443", "443", "calling", "fini", "usr", "local", "lib", "python3", "dist", "packages", "numpy", "core", "/../.", "libs", "libopenblasp", "34a18dc3", "3", "7", "0", "443", "443", "443", "calling", "fini", "usr", "lib", "python3", "lib", "dynload", "_bz2", "cpython", "35m", "x86_64", "linux", "gnu", "0", "443", "443", "443", "calling", "fini", "lib", "x86_64", "linux", "gnu", "libbz2", "1", "0", "0", "443", "443", "443", "calling", "fini", "usr", "lib", "python3", "lib", "dynload", "_lzma", "cpython", "35m", "x86_64", "linux", "gnu", "0", "443", "443", "443", "calling", "fini", "lib", "x86_64", "linux", "gnu", "liblzma", "0", "443", "443", "443", "calling", "fini", "usr", "lib", "python3", "lib", "dynload", "_decimal", "cpython", "35m", "x86_64", "linux", "gnu", "0", "443", "443", "443", "calling", "fini", "usr", "lib", "x86_64", "linux", "gnu", "libmpdec", "2", "0", "443", "443", "443", "calling", "fini", "usr", "local", "lib", "python3", "dist", "packages", "numpy", "fft", "_pocketfft_internal", "cpython", "35m", "x86_64", "linux", "gnu", "0", "443", "443", "443", "calling", "fini", "usr", "local", "lib", "python3", "dist", "packages", "numpy", "random", "mtrand", "cpython", "35m", "x86_64", "linux", "gnu", "0", "443", "443", "443", "calling", "fini", "usr", "local", "lib", "python3", "dist", "packages", "numpy", "random", "common", "cpython", "35m", "x86_64", "linux", "gnu", "0", "443", "443", "443", "calling", "fini", "usr", "local", "lib", "python3", "dist", "packages", "numpy", "random", "bounded_integers", "cpython", "35m", "x86_64", "linux", "gnu", "0", "443", "443", "443", "calling", "fini", "usr", "local", "lib", "python3", "dist", "packages", "numpy", "random", "mt19937", "cpython", "35m", "x86_64", "linux", "gnu", "0", "443", "443", "443", "calling", "fini", "usr", "local", "lib", "python3", "dist", "packages", "numpy", "random", "bit_generator", "cpython", "35m", "x86_64", "linux", "gnu", "0", "443", "443", "443", "calling", "fini", "usr", "lib", "python3", "lib", "dynload", "_hashlib", "cpython", "35m", "x86_64", "linux", "gnu", "0", "443", "443", "443", "calling", "fini", "usr", "local", "lib", "python3", "dist", "packages", "numpy", "random", "philox", "cpython", "35m", "x86_64", "linux", "gnu", "0", "443", "443", "443", "calling", "fini", "usr", "local", "lib", "python3", "dist", "packages", "numpy", "random", "pcg64", "cpython", "35m", "x86_64", "linux", "gnu", "0", "443", "443", "443", "calling", "fini", "usr", "local", "lib", "python3", "dist", "packages", "numpy", "random", "sfc64", "cpython", "35m", "x86_64", "linux", "gnu", "0", "443", "443", "443", "calling", "fini", "usr", "local", "lib", "python3", "dist", "packages", "numpy", "random", "generator", "cpython", "35m", "x86_64", "linux", "gnu", "0", "443", "443", "443", "calling", "fini", "usr", "local", "lib", "python3", "dist", "packages", "tensorflow_core", "python", "_pywrap_tensorflow_internal", "0", "443", "443", "443", "calling", "fini", "usr", "local", "lib", "python3", "dist", "packages", "google", "protobuf", "internal", "_api_implementation", "cpython", "35m", "x86_64", "linux", "gnu", "0", "443", "443", "443", "calling", "fini", "usr", "local", "lib", "python3", "dist", "packages", "google", "protobuf", "pyext", "_message", "cpython", "35m", "x86_64", "linux", "gnu", "0", "443", "443", "443", "calling", "fini", "usr", "lib", "python3", "lib", "dynload", "_csv", "cpython", "35m", "x86_64", "linux", "gnu", "0", "443", "443", "443", "calling", "fini", "usr", "lib", "python3", "lib", "dynload", "termios", "cpython", "35m", "x86_64", "linux", "gnu", "0", "443", "443", "443", "calling", "fini", "usr", "local", "lib", "python3", "dist", "packages", "tensorflow_core", "python", "framework", "fast_tensor_util", "0", "443", "443", "443", "calling", "fini", "lib", "x86_64", "linux", "gnu", "libuuid", "1", "0", "443", "443", "443", "calling", "fini", "usr", "local", "lib", "python3", "dist", "packages", "wrapt", "_wrappers", "cpython", "35m", "x86_64", "linux", "gnu", "0", "443", "443", "443", "calling", "fini", "usr", "lib", "python3", "lib", "dynload", "_json", "cpython", "35m", "x86_64", "linux", "gnu", "0", "443", "443", "443", "calling", "fini", "usr", "lib", "python3", "lib", "dynload", "_ssl", "cpython", "35m", "x86_64", "linux", "gnu", "0", "443", "443", "443", "calling", "fini", "lib", "x86_64", "linux", "gnu", "libssl", "1", "0", "0", "0", "443", "443", "443", "calling", "fini", "lib", "x86_64", "linux", "gnu", "libcrypto", "1", "0", "0", "0", "443", "443", "443", "calling", "fini", "usr", "local", "lib", "python3", "dist", "packages", "h5py", "_errors", "cpython", "35m", "x86_64", "linux", "gnu", "0", "443", "443", "443", "calling", "fini", "usr", "local", "lib", "python3", "dist", "packages", "h5py", "cpython", "35m", "x86_64", "linux", "gnu", "0", "443", "443", "443", "calling", "fini", "usr", "local", "lib", "python3", "dist", "packages", "h5py", "defs", "cpython", "35m", "x86_64", "linux", "gnu", "0", "443", "443", "443", "calling", "fini", "usr", "local", "lib", "python3", "dist", "packages", "h5py", "_objects", "cpython", "35m", "x86_64", "linux", "gnu", "0", "443", "443", "443", "calling", "fini", "usr", "local", "lib", "python3", "dist", "packages", "h5py", "_conv", "cpython", "35m", "x86_64", "linux", "gnu", "0", "443", "443", "443", "calling", "fini", "usr", "local", "lib", "python3", "dist", "packages", "h5py", "h5r", "cpython", "35m", "x86_64", "linux", "gnu", "0", "443", "443", "443", "calling", "fini", "usr", "local", "lib", "python3", "dist", "packages", "h5py", "h5t", "cpython", "35m", "x86_64", "linux", "gnu", "0", "443", "443", "443", "calling", "fini", "usr", "local", "lib", "python3", "dist", "packages", "h5py", "utils", "cpython", "35m", "x86_64", "linux", "gnu", "0", "443", "443", "443", "calling", "fini", "usr", "local", "lib", "python3", "dist", "packages", "h5py", "h5z", "cpython", "35m", "x86_64", "linux", "gnu", "0", "443", "443", "443", "calling", "fini", "usr", "local", "lib", "python3", "dist", "packages", "h5py", "h5a", "cpython", "35m", "x86_64", "linux", "gnu", "0", "443", "443", "443", "calling", "fini", "usr", "local", "lib", "python3", "dist", "packages", "h5py", "h5s", "cpython", "35m", "x86_64", "linux", "gnu", "0", "443", "443", "443", "calling", "fini", "usr", "local", "lib", "python3", "dist", "packages", "h5py", "h5p", "cpython", "35m", "x86_64", "linux", "gnu", "[", "0", "443", "443", "443", "calling", "fini", "usr", "local", "lib", "python3", "dist", "packages", "h5py", "h5ac", "cpython", "35m", "x86_64", "linux", "gnu", "[", "0", "443", "443", "443", "calling", "fini", "usr", "local", "lib", "python3", "dist", "packages", "h5py", "_proxy", "cpython", "35m", "x86_64", "linux", "gnu", "[", "0", "443", "443", "443", "calling", "fini", "usr", "local", "lib", "python3", "dist", "packages", "h5py", "h5d", "cpython", "35m", "x86_64", "linux", "gnu", "[", "0", "443", "443", "443", "calling", "fini", "usr", "local", "lib", "python3", "dist", "packages", "h5py", "h5ds", "cpython", "35m", "x86_64", "linux", "gnu", "[", "0", "443", "443", "443", "calling", "fini", "usr", "local", "lib", "python3", "dist", "packages", "h5py", "h5f", "cpython", "35m", "x86_64", "linux", "gnu", "[", "0", "443", "443", "443", "calling", "fini", "usr", "local", "lib", "python3", "dist", "packages", "h5py", "h5g", "cpython", "35m", "x86_64", "linux", "gnu", "[", "0", "443", "443", "443", "calling", "fini", "usr", "local", "lib", "python3", "dist", "packages", "h5py", "h5i", "cpython", "35m", "x86_64", "linux", "gnu", "[", "0", "443", "443", "443", "calling", "fini", "usr", "local", "lib", "python3", "dist", "packages", "h5py", "h5fd", "cpython", "35m", "x86_64", "linux", "gnu", "[", "0", "443", "443", "443", "calling", "fini", "usr", "local", "lib", "python3", "dist", "packages", "h5py", "h5pl", "cpython", "35m", "x86_64", "linux", "gnu", "[", "0", "443", "443", "443", "calling", "fini", "usr", "local", "lib", "python3", "dist", "packages", "h5py", "h5o", "cpython", "35m", "x86_64", "linux", "gnu", "[", "0", "443", "443", "443", "calling", "fini", "usr", "local", "lib", "python3", "dist", "packages", "h5py", "h5l", "cpython", "35m", "x86_64", "linux", "gnu", "[", "0", "443", "443", "443", "calling", "fini", "usr", "local", "lib", "python3", "dist", "packages", "h5py", "libs", "libhdf5_hl", "db841637", "100", "1", "1", "[", "0", "443", "443", "443", "calling", "fini", "usr", "local", "lib", "python3", "dist", "packages", "h5py", "libs", "libhdf5", "49599f4e", "103", "0", "0", "[", "0", "443", "443", "443", "calling", "fini", "usr", "local", "lib", "python3", "dist", "packages", "h5py", "libs", "/./", "libsz", "1c7dd0cf", "2", "0", "1", "[", "0", "443", "443", "443", "calling", "fini", "usr", "local", "lib", "python3", "dist", "packages", "h5py", "libs", "/./", "libaec", "2147abcd", "0", "0", "4", "[", "0", "443", "443", "443", "calling", "fini", "usr", "local", "lib", "python3", "dist", "packages", "scipy", "_lib", "_ccallback_c", "cpython", "35m", "x86_64", "linux", "gnu", "[", "0", "443", "443", "443", "calling", "fini", "usr", "local", "lib", "python3", "dist", "packages", "scipy", "sparse", "_sparsetools", "cpython", "35m", "x86_64", "linux", "gnu", "[", "0", "443", "443", "443", "calling", "fini", "usr", "local", "lib", "python3", "dist", "packages", "scipy", "sparse", "_csparsetools", "cpython", "35m", "x86_64", "linux", "gnu", "[", "0", "443", "443", "443", "calling", "fini", "usr", "local", "lib", "python3", "dist", "packages", "scipy", "sparse", "csgraph", "_shortest_path", "cpython", "35m", "x86_64", "linux", "gnu", "[", "0", "443", "443", "443", "calling", "fini", "usr", "local", "lib", "python3", "dist", "packages", "scipy", "sparse", "csgraph", "_tools", "cpython", "35m", "x86_64", "linux", "gnu", "[", "0", "443", "443", "443", "calling", "fini", "usr", "local", "lib", "python3", "dist", "packages", "scipy", "sparse", "csgraph", "_traversal", "cpython", "35m", "x86_64", "linux", "gnu", "[", "0", "443", "443", "443", "calling", "fini", "usr", "local", "lib", "python3", "dist", "packages", "scipy", "sparse", "csgraph", "_min_spanning_tree", "cpython", "35m", "x86_64", "linux", "gnu", "[", "0", "443", "443", "443", "calling", "fini", "usr", "local", "lib", "python3", "dist", "packages", "scipy", "sparse", "csgraph", "_reordering", "cpython", "35m", "x86_64", "linux", "gnu", "[", "0", "443", "443", "443", "calling", "fini", "usr", "local", "lib", "python3", "dist", "packages", "PIL", "_imaging", "cpython", "35m", "x86_64", "linux", "gnu", "[", "0", "]", "443", "443", "443", "calling", "fini", "usr", "local", "lib", "python3", "dist", "packages", "PIL", "libs", "libopenjp2", "b3d7668a", "2", "3", "1", "[", "0", "]", "443", "443", "443", "calling", "fini", "usr", "local", "lib", "python3", "dist", "packages", "PIL", "libs", "libtiff", "8267adfe", "4", "0", "[", "0", "]", "443", "443", "443", "calling", "fini", "usr", "local", "lib", "python3", "dist", "packages", "PIL", "libs", "libjpeg", "3b10b538", "9", "3", "0", "[", "0", "]", "443", "443", "443", "calling", "fini", "usr", "local", "lib", "python3", "dist", "packages", "h5py", "libs", "/./", "libz", "a147dcb0", "1", "2", "3", "[", "0", "]", "443", "443", "443", "calling", "fini", "usr", "local", "lib", "python3", "dist", "packages", "PIL", "libs", "/./", "liblzma", "6cd627ed", "2", "4", "[", "0", "]", "443", "443", "443", "calling", "fini", "usr", "local", "lib", "python3", "dist", "packages", "scipy", "ndimage", "_nd_image", "cpython", "35m", "x86_64", "linux", "gnu", "[", "0", "]", "443", "443", "443", "calling", "fini", "usr", "local", "lib", "python3", "dist", "packages", "scipy", "ndimage", "_ni_label", "cpython", "35m", "x86_64", "linux", "gnu", "[", "0", "]", "443", "443", "443", "calling", "fini", "usr", "local", "lib", "python3", "dist", "packages", "scipy", "linalg", "_fblas", "cpython", "35m", "x86_64", "linux", "gnu", "[", "0", "]", "443", "443", "443", "calling", "fini", "usr", "local", "lib", "python3", "dist", "packages", "scipy", "linalg", "_flapack", "cpython", "35m", "x86_64", "linux", "gnu", "[", "0", "]", "443", "443", "443", "calling", "fini", "usr", "local", "lib", "python3", "dist", "packages", "scipy", "linalg", "_flinalg", "cpython", "35m", "x86_64", "linux", "gnu", "[", "0", "]", "443", "443", "443", "calling", "fini", "usr", "local", "lib", "python3", "dist", "packages", "scipy", "linalg", "_solve_toeplitz", "cpython", "35m", "x86_64", "linux", "gnu", "[", "0", "]", "443", "443", "443", "calling", "fini", "usr", "local", "lib", "python3", "dist", "packages", "scipy", "linalg", "_decomp_update", "cpython", "35m", "x86_64", "linux", "gnu", "[", "0", "]", "443", "443", "443", "calling", "fini", "usr", "local", "lib", "python3", "dist", "packages", "scipy", "linalg", "cython_blas", "cpython", "35m", "x86_64", "linux", "gnu", "[", "0", "]", "443", "443", "443", "calling", "fini", "usr", "local", "lib", "python3", "dist", "packages", "scipy", "linalg", "cython_lapack", "cpython", "35m", "x86_64", "linux", "gnu", "[", "0", "]", "443", "443", "443", "calling", "fini", "usr", "local", "lib", "python3", "5", "dist", "packages", "scipy", "linalg", "/../.", "libs", "libopenblasp", "2ecf47d5", "3", "7", "dev", "[", "0", "]", "443", "443", "443", "calling", "fini", "usr", "local", "lib", "python3", "5", "dist", "packages", "numpy", "core", "/../.", "libs", "libgfortran", "ed201abd", "3", "0", "0", "[", "0", "]", "443", "443", "443", "calling", "fini", "usr", "local", "lib", "python3", "5", "dist", "packages", "tensorflow_core", "lite", "experimental", "microfrontend", "python", "ops", "_audio_microfrontend_op", "[", "0", "]", "443", "443", "443", "calling", "fini", "usr", "local", "lib", "python3", "5", "dist", "packages", "tensorflow_core", "python", "/../", "libtensorflow_framework", "2", "[", "0", "]", "443", "443", "443", "calling", "fini", "usr", "lib", "x86_64", "linux", "gnu", "libstdc", "++.", "[", "0", "]", "443", "443", "443", "calling", "fini", "lib", "x86_64", "linux", "gnu", "libgcc_s", "1", "[", "0", "]", "443", "443", "443", "calling", "fini", "lib", "x86_64", "linux", "gnu", "librt", "1", "[", "0", "]", "443", "443", "443", "calling", "fini", "lib", "x86_64", "linux", "gnu", "libm", "[", "0", "]", "443", "443", "443", "calling", "fini", "lib", "x86_64", "linux", "gnu", "libdl", "2", "[", "0", "]", "443", "443", "443", "calling", "fini", "lib", "x86_64", "linux", "gnu", "libpthread", "0", "[", "0", "]", "443", "```"], "2020-03-1": ["adding", "example", "cwrapper", "generates", "projects", "simple", "api", "adding", "make", "library", "option", "makefile", "template", "make", "project", "compiler", "path", "defined", "setting", "adds", "parser", "pull", "used", "ops", "tflite", "model", "System", "information", "Have", "written", "custom", "code", "opposed", "using", "stock", "example", "script", "provided", "TensorFlow", "Platform", "Distribution", "e", ".,", "Linux", "Ubuntu", "04", "Ubuntu", "04", "Mobile", "device", "e", "iPhone", "Pixel", "Samsung", "Galaxy", "issue", "happens", "mobile", "device", "No", "TensorFlow", "installed", "source", "binary", "source", "TensorFlow", "version", "use", "command", "2", "Python", "version", "Bazel", "version", "compiling", "source", "0", "GCC", "Compiler", "version", "compiling", "source", "GCC", "4", "0", "CUDA", "cuDNN", "version", "1", "2", "CuDNN", "GPU", "model", "memory", "NVidia", "GTX", "1080", "TensorRT", "version", "6", "7", "Describe", "current", "behavior", "Compiling", "source", "indicated", "official", "tensorflow", "manual", "compilation", "fails", "error", "listed", "log", "Describe", "expected", "behavior", "Compilation", "successfully", "complete", "Code", "reproduce", "issue", "No", "code", "needed", "After", "checkout", "current", "2", "1", "0", "configuration", "carried", "changes", "default", "enabling", "CUDA", "Other", "info", "logs", "**", "Log", "see", "attached", "log", "txt", "log", "txt", "https", "://", "github", "com", "tensorflow", "tensorflow", "files", "4068010", "log", "txt", "System", "information", "Have", "written", "custom", "code", "Yes", "Platform", "Distribution", "Windows", "TensorFlow", "installed", "binary", "TensorFlow", "version", "Same", "issue", "using", "tf2", "0", "beta1", "cpu", "tf1", "0", "gpu", "Python", "version", "6", "CUDA", "cuDNN", "version", "CUDA", "168", "cuDNN", "6", "GPU", "model", "memory", "NVIDIA", "GeForce", "RTX", "2060", "6GB", "dedicated", "memory", "Describe", "current", "behavior", "A", "convolutional", "reggression", "last", "layer", "linear", "activation", "one", "neuron", "network", "built", "keras", "shown", "fit", "MNIST", "dataset", "know", "MNIST", "classification", "task", "example", "converted", "dataset", "When", "model", "packaged", "estimator", "using", "keras", "estimator", "model_to_estimator", "error", "messages", "occur", "however", "model", "longer", "fits", "The", "loss", "decrease", "made", "Stackoverflow", "question", "https", "://", "stackoverflow", "com", "59631744", "9988487", "traction", "whatsoever", "After", "trying", "get", "work", "I", "believe", "bug", "Describe", "expected", "behavior", "The", "keras", "estimator", "behaviour", "underlying", "model", "Change", "USE_ESTIMATOR", "variable", "see", "underlying", "model", "works", "Code", "reproduce", "issue", "```", "python", "6", "Tested", "tensorflow", "gpu", "14", "tensorflow", "cpu", "0", "import", "tensorflow", "import", "numpy", "def", "get_model", "IM_WIDTH", "num_color_channels", "\"\"\"", "Create", "simple", "convolutional", "neural", "network", "using", "keras", "Functional", "Model", ".\"\"\"", "input", "keras", "Input", "shape", "IM_WIDTH", "IM_WIDTH", "num_color_channels", "keras", "layers", "Conv2D", "32", "activation", "relu", "')(", "input", "keras", "layers", "MaxPooling2D", "keras", "layers", "Conv2D", "64", "3", "activation", "relu", "')(", "tf", "keras", "layers", "MaxPooling2D", "3", "x", "x", "tf", "keras", "layers", "Flatten", "()(", "x", "x", "tf", "keras", "layers", "Dense", "64", "activation", "relu", "')(", "x", "output", "tf", "keras", "layers", "Dense", "1", "activation", "linear", "')(", "x", "model", "tf", "keras", "Model", "inputs", "input", "outputs", "output", "model", "compile", "optimizer", "adam", "loss", "mae", "metrics", "=['", "mae", "'])", "model", "summary", "return", "model", "def", "input_fun", "train", "True", "\"\"\"", "Load", "MNIST", "return", "training", "test", "set", "tf", "data", "Dataset", "Valid", "input", "function", "tf", "estimator", "\"\"\"", "train_images", "train_labels", "eval_images", "eval_labels", "tf", "keras", "datasets", "mnist", "load_data", "train_images", "train_images", "reshape", "60_000", "28", "1", ")).", "astype", "np", "float32", "255", "eval_images", "eval_images", "reshape", "10_000", "28", "28", "1", ")).", "astype", "np", "float32", "255", "train_labels", "train_labels", "astype", "np", "float32", "two", "lines", "affect", "behaviour", "eval_labels", "eval_labels", "astype", "np", "float32", "For", "neural", "network", "one", "neuron", "final", "layer", "seem", "matter", "target", "data", "float", "int", "train", "dataset", "tf", "data", "Dataset", "from_tensor_slices", "train_images", "train_labels", "dataset", "dataset", "shuffle", "buffer_size", "100", "repeat", "None", "batch", "32", "prefetch", "1", "else", "dataset", "tf", "data", "Dataset", "from_tensor_slices", "eval_images", "eval_labels", "dataset", "dataset", "batch", "32", "prefetch", "1", "note", "prefetching", "affect", "behaviour", "return", "dataset", "model", "get_model", "train_input_fn", "lambda", "input_fun", "train", "True", "eval_input_fn", "lambda", "input_fun", "train", "False", "NUM_EPOCHS", "STEPS_PER_EPOCH", "1875", "#", "1875", "number_of_train_images", "60", "000", "batch_size", "32", "USE_ESTIMATOR", "False", "#", "change", "compare", "model", "estimator", "Estimator", "performs", "much", "worse", "apparent", "reason", "USE_ESTIMATOR", "estimator", "tf", "keras", "estimator", "model_to_estimator", "keras_model", "model", "model_dir", "model_directory", "config", "tf", "estimator", "RunConfig", "save_checkpoints_steps", "200", "save_summary_steps", "200", "train_spec", "tf", "estimator", "TrainSpec", "input_fn", "train_input_fn", "max_steps", "STEPS_PER_EPOCH", "NUM_EPOCHS", ")", "eval_spec", "tf", "estimator", "EvalSpec", "input_fn", "eval_input_fn", "throttle_secs", "0", ")", "tf", "estimator", "train_and_evaluate", "estimator", "train_spec", "eval_spec", ")", "print", "Training", "complete", "Evaluating", "Estimator", ":\")", "print", "estimator", "evaluate", "eval_input_fn", "#", "final", "train", "loss", "estimator", "2", "mean", "abs", "error", "else", "dataset", "=", "train_input_fn", "model", "fit", "dataset", "steps_per_epoch", "=", "STEPS_PER_EPOCH", "epochs", "=", "NUM_EPOCHS", ")", "print", "Training", "complete", "Evaluating", "Keras", "model", ":\")", "print", "(", "model", "evaluate", "(", "eval_input_fn", "()))", "#", "final", "train", "loss", "Keras", "model", "0", "4", "(", "mean", "abs", "error", "```", "System", "information", "Custom", "code", "opposed", "using", "stock", "example", "script", "provided", "TensorFlow", "Yes", "Platform", "Distribution", "e", ".,", "Linux", "Ubuntu", "04", "Google", "Colab", "TensorFlow", "installed", "source", "binary", "use", "tensorflow_version", "x", "TensorFlow", "version", "use", "command", "rc1", "Python", "version", "Describe", "current", "behavior", "tried", "run", "huan", "Google", "Colab", "Notebook", "mentioned", "https", "://", "stackoverflow", "com", "questions", "55541881", "convert", "keras", "model", "tpu", "using", "tensorflow", "google", "colab", "55686370", "55686370", "available", "](", "https", "://", "colab", "research", "google", "com", "github", "huan", "tensorflow", "handbook", "tpu", "blob", "master", "tensorflow", "handbook", "tpu", "example", "ipynb", "It", "raises", "following", "error", "```", "---------------------------------------------------------------------------", "InternalError", "Traceback", "recent", "call", "last", "<", "ipython", "input", "79d308ea228d", "<", "module", ">()", "steps_per_epoch", "60", "validation_data", "x_test", "astype", "np", "float32", "y_test", "astype", "np", "float32", ")),", "---->", "validation_freq", "5", "11", "frames", "usr", "local", "lib", "python3", "dist", "packages", "six", "raise_from", "value", "from_value", "InternalError", "Assigned", "device", "job", "worker", "replica", "task", "device", "TPU", "0", "registered", "OpKernel", "support", "_Arg", "[[{{", "node", "iteratorgetnext_iterator", "}}]]", "Op", "__inference_distributed_function_2822", "```", "tried", "compat", "disable_eager_execution", "()`", "discussed", "](", "https", "://", "github", "com", "huan", "tensorflow", "handbook", "tpu", "issues", "work", "```", "---------------------------------------------------------------------------", "RuntimeError", "Traceback", "recent", "call", "last", "<", "ipython", "input", "5118e7c1b79a", "<", "module", ">()", "steps_per_epoch", "60", "validation_data", "x_test", "astype", "np", "float32", "y_test", "astype", "np", "float32", ")),", "---->", "validation_freq", "5", ")", "25", "frames", "tensorflow", "0", "python3", "6", "tensorflow_core", "python", "framework", "ops", "convert_to_tensor", "value", "dtype", "name", "as_ref", "preferred_dtype", "dtype_hint", "ctx", "accepted_result_types", ")", "1278", "graph", "get_default_graph", "1279", "graph", "building_function", "1280", "raise", "RuntimeError", "Attempting", "capture", "EagerTensor", "without", "1281", "building", "function", ".\")", "1282", "return", "graph", "capture", "value", "name", "name", ")", "RuntimeError", "Attempting", "capture", "EagerTensor", "without", "building", "function", "```", "Describe", "expected", "behavior", "Not", "sure", "huan", "example", "working", "given", "explained", "stackoverflow", "](", "https", "://", "stackoverflow", "com", "questions", "55541881", "convert", "tf", "keras", "model", "tpu", "using", "tensorflow", "2", "0", "google", "colab", "55686370", "55686370", "I", "think", "2", "0", "version", "Code", "reproduce", "issue", "Again", "huan", "work", "available", "](", "https", "://", "colab", "research", "google", "com", "github", "huan", "tensorflow", "handbook", "tpu", "blob", "master", "tensorflow", "handbook", "tpu", "example", "ipynb", "**", "Other", "info", "logs", "**", "I", "issue", "personal", "code", "thought", "first", "due", "ImageDataGenerator", "(", "see", "last", "comment", "](", "https", "://", "github", "com", "tensorflow", "tensorflow", "issues", "34346", ")),", "however", "seems", "huan", "example", "use", "I", "issue", "huan", "code", "2", "0", "installed", "pip", "install", "tensorflow", "2", "1", "0", "notebook", "System", "information", "Have", "written", "custom", "code", "opposed", "using", "stock", "example", "script", "provided", "TensorFlow", "yes", "Platform", "Distribution", "e", ".,", "Linux", "Ubuntu", "04", "Windows", "Mobile", "device", "e", "iPhone", "Pixel", "Samsung", "Galaxy", "issue", "happens", "mobile", "device", "TensorFlow", "installed", "source", "binary", "pip", "TensorFlow", "version", "use", "command", "v2", "rc2", "g64c3d382ca", "0", "0", "Python", "version", "6", "Bazel", "version", "compiling", "source", "GCC", "Compiler", "version", "compiling", "source", "CUDA", "cuDNN", "version", "0", "6", "GPU", "model", "memory", "GeForce", "GTX", "1070", "GeForce", "GTX", "1080", "Describe", "current", "behavior", "Crash", "writing", "Checkpoint", "stuck", "writing", "log", "tensorboard", "Describe", "expected", "behavior", "Write", "checkpoint", "Tensorboardlog", "Code", "reproduce", "issue", "```", "environ", "TF_CONFIG", "json", "dumps", "cluster", "{", "worker", "[\"", "168", "1234", "\"],", "chief", "[\"", "10", "10", "60", "2345", "},", "task", "{'", "type", "chief", "index", "0", "})", "strategy", "distribute", "experimental", "MultiWorkerMirroredStrategy", "def", "get_label", "file_path", "class_names", "parts", "strings", "split", "file_path", "path", "sep", "return", "parts", "2", "==", "class_names", "def", "parse_image", "filename", "parts", "strings", "split", "filename", "\"\\\\\")", "label", "get_label", "filename", "CLASS_NAMES", "image", "read_file", "filename", "image", "image", "decode_png", "image", "channels", "image", "tf", "image", "convert_image_dtype", "image", "tf", "float32", "image", "tf", "image", "resize", "image", "299", "299", "return", "image", "label", "def", "make_dataset_unbatched", "():", "images_ds", "list_ds", "map", "parse_image", "num_parallel_calls", "AUTOTUNE", "images_ds", "images_ds", "shuffle", "BATCH_SIZE", "images_ds", "images_ds", "repeat", "epochs", "images_ds", "images_ds", "prefetch", "BUFFER_SIZE", "return", "images_ds", "datasetFilePath", "D", "TrainData", "BalancedData", "IMAGESIZE", "299", "AUTOTUNE", "tf", "data", "experimental", "AUTOTUNE", "datasetPath", "pathlib", "Path", "datasetFilePath", "list_ds", "tf", "data", "Dataset", "list_files", "str", "datasetPath", "/\"*/*\"))", "num_elements", "tf", "data", "experimental", "cardinality", "list_ds", "numpy", "CLASS_NAMES", "np", "array", "item", "name", "item", "datasetPath", "glob", "('*')])", "epochs", "2", "def", "build_and_compile_model", "():", "base_model", "tf", "keras", "applications", "InceptionV3", "include_top", "False", "weights", "imagenet", "input_shape", "299", "299", "3", "))", "base_model", "trainable", "True", "base_model", "output", "tf", "keras", "layers", "GlobalAveragePooling2D", "name", "avg_pool", "\")(", "tf", "keras", "layers", "Dense", "256", "activation", "relu", "\")(", "predictions", "tf", "keras", "layers", "Dense", "2", "activation", "softmax", "\")(", "model", "tf", "keras", "models", "Model", "inputs", "base_model", "input", "outputs", "predictions", "base_learning_rate", "0", "00001", "model", "compile", "optimizer", "tf", "keras", "optimizers", "Adam", "lr", "base_learning_rate", "loss", "categorical_crossentropy", "metrics", "=[\"", "accuracy", "\"])", "return", "model", "logdir", "os", "path", "join", "Z", "Tensorflow", "TensorboardLogs", "datetime", "datetime", "().", "strftime", "(\"%", "%", "-%", "%", "%", "\"))", "callbacks", "[", "tf", "keras", "callbacks", "ModelCheckpoint", "filepath", "Z", "Tensorflow", "Checkpoints", "\"),", "tf", "keras", "callbacks", "TensorBoard", "logdir", "histogram_freq", "1", "strategy", "scope", "():", "dataset", "make_dataset_unbatched", "().", "batch", "BATCH_SIZE", "drop_remainder", "True", ")", "multi_worker_model", "build_and_compile_model", "history", "=", "multi_worker_model", "fit", "dataset", "epochs", "=", "epochs", "steps_per_epoch", "=", "50", "callbacks", "=", "callbacks", ")", "```", "Other", "info", "logs", "**", "[", "ckpt_error", "txt", "https", "://", "github", "com", "tensorflow", "tensorflow", "files", "4040557", "ckpt_error", "txt", ")", "This", "log", "happens", "checkpoint", "code", "tensorboard", "log", "checkpoint", "chief", "stops", "right", "end", "first", "epoch", "nothing", "else", "happens", "hope", "someone", "help", "em", "Please", "make", "sure", "build", "installation", "issue", "per", "GitHub", "Policy", "https", "://", "github", "com", "tensorflow", "tensorflow", "blob", "master", "ISSUES", "),", "address", "code", "doc", "bugs", "performance", "issues", "feature", "requests", "build", "installation", "issues", "GitHub", "tag", "build_template", "em", "System", "information", "OS", "Platform", "Distribution", "e", ".,", "Linux", "Ubuntu", "04", "Windows", "Mobile", "device", "e", "iPhone", "Pixel", "Samsung", "Galaxy", "issue", "happens", "mobile", "device", "TensorFlow", "installed", "source", "binary", "source", "TensorFlow", "version", "0", "Python", "version", "6", "Installed", "using", "virtualenv", "pip", "conda", "pip", "Bazel", "version", "compiling", "source", "0", "1", "GCC", "Compiler", "version", "compiling", "source", "CUDA", "cuDNN", "version", "7", "GPU", "model", "memory", "NVIDIA", "GeForce", "MX150", "Describe", "problem", "I", "trying", "build", "tensorflow", "AVX2", "instructions", "CPU", "increase", "speeds", "bazel", "keeps", "failing", "loading", "tensorflow", "Provide", "exact", "sequence", "commands", "steps", "executed", "running", "problem", "1", "Cloned", "tensorflow", "source", "github", "checked", "0", "branch", "Ran", "python", "configure", "3", "Proceded", "steps", "selecting", "builds", "set", "bazel", "config", "option", "arch", "AVC2", "Ran", "bazel", "build", "config", "opt", "tensorflow", "tools", "pip_package", "build_pip_package", "Any", "info", "logs", "**", "Include", "logs", "source", "code", "would", "helpful", "diagnose", "problem", "including", "tracebacks", "please", "include", "full", "traceback", "Large", "logs", "files", "attached", "The", "error", "text", "attached", "error", "txt", "https", "://", "github", "com", "tensorflow", "tensorflow", "files", "4032375", "error", "txt", "System", "information", "Custom", "implementation", "ALBERT", "TF2", "Training", "DataBricks", "TensorFlow", "installed", "source", "binary", "Binary", "pypi", "TensorFlow", "version", "use", "command", "gpu", "Python", "version", "CUDA", "cuDNN", "version", "GPU", "model", "memory", "Databricks", "4xGPU", "cluster", "Describe", "current", "behavior", "Current", "behavior", "Training", "proceeds", "epochs", "barfs", "Train", "Step", "399", "1330", "_save_checkpoint", "routine", "using", "ADLSgen2", "store", "data", "mounting", "filesystem", "Filesystem", "works", "transparently", "tasks", "far", "DataBricks", "team", "support", "There", "many", "read", "writes", "mount", "point", "quick", "blame", "filesystem", "still", "worth", "noting", "The", "actual", "error", "2020", "03", "51", "688654", "tensorflow", "core", "framework", "op_kernel", "1622", "OP_REQUIRES", "failed", "save_restore_v2_ops", "137", "Invalid", "argument", "dbfs", "mnt", "devscoutprototype", "eval_out", "checkpoint", "ctl_step_399", "ckpt", "3_temp_08f0418651184fbd97263e13fc11b45c", "part", "00001", "00002", "data", "00000", "00001", "tempstate9461307533243821894", "Invalid", "argument", "When", "navigate", "location", "find", "folder", "genuinely", "however", "inside", "folder", "temp", "file", "Instead", "two", "files", "part", "00000", "00002", "data", "00000", "00001", "2", "part", "00000", "00002", "index", "Describe", "expected", "behavior", "I", "would", "expect", "see", "new", "checkpoint", "step", "Code", "reproduce", "issue", "This", "made", "following", "examples", "https", "://", "github", "com", "kamalkraj", "ALBERT", "TF2", "If", "simply", "run", "example", "top", "bottom", "DataBricks", "encounter", "error", "Other", "info", "logs", "loss", "2804690897464752", "I0103", "48", "790678", "140033029736192", "model_training_utils", "346", "Train", "Step", "396", "1330", "loss", "3561434745788574", "I0103", "48", "499201", "140033029736192", "model_training_utils", "346", "Train", "Step", "397", "1330", "loss", "26206889748573303", "I0103", "48", "168039", "140033029736192", "model_training_utils", "346", "Train", "Step", "398", "1330", "loss", "3312344551086426", "I0103", "48", "838387", "140033029736192", "model_training_utils", "346", "Train", "Step", "399", "1330", "loss", "41013699769973755", "2020", "03", "51", "688654", "tensorflow", "core", "framework", "op_kernel", "1622", "OP_REQUIRES", "failed", "save_restore_v2_ops", "137", "Invalid", "argument", "dbfs", "mnt", "devscoutprototype", "eval_out", "checkpoint", "ctl_step_399", "ckpt", "3_temp_08f0418651184fbd97263e13fc11b45c", "part", "00001", "00002", "data", "00000", "00001", "tempstate9461307533243821894", "Invalid", "argument", "Traceback", "recent", "call", "last", "File", "dbfs", "mnt", "devscoutprototype", "ALBERT", "TF2", "master", "run_classifer", "\",", "line", "455", "module", "app", "run", "main", "File", "databricks", "conda", "envs", "databricks", "gpu", "lib", "python3", "site", "packages", "absl", "app", "\",", "line", "299", "run", "_run_main", "main", "args", "File", "databricks", "conda", "envs", "databricks", "gpu", "lib", "python3", "site", "packages", "absl", "app", "\",", "line", "250", "_run_main", "sys", "exit", "main", "argv", "File", "dbfs", "mnt", "devscoutprototype", "ALBERT", "TF2", "0", "master", "run_classifer", "\",", "line", "356", "main", "custom_callbacks", "custom_callbacks", "File", "dbfs", "mnt", "devscoutprototype", "ALBERT", "TF2", "0", "master", "model_training_utils", "\",", "line", "354", "run_customized_training_loop", "checkpoint_name", "format", "step", "current_step", "File", "dbfs", "mnt", "devscoutprototype", "ALBERT", "TF2", "0", "master", "model_training_utils", "\",", "line", "_save_checkpoint", "saved_path", "checkpoint", "save", "checkpoint_path", "File", "databricks", "conda", "envs", "databricks", "gpu", "lib", "python3", "site", "packages", "tensorflow_core", "python", "training", "tracking", "util", "\",", "line", "1889", "save", "file_path", "self", "write", "(\"%", "%", "file_prefix", "checkpoint_number", "File", "databricks", "conda", "envs", "databricks", "gpu", "lib", "python3", "site", "packages", "tensorflow_core", "python", "training", "tracking", "util", "\",", "line", "1819", "write", "output", "self", "_saver", "save", "file_prefix", "file_prefix", "File", "databricks", "conda", "envs", "databricks", "gpu", "lib", "python3", "site", "packages", "tensorflow_core", "python", "training", "tracking", "util", "\",", "line", "1155", "save", "file_prefix", "file_prefix_tensor", "object_graph_tensor", "object_graph_tensor", "File", "databricks", "conda", "envs", "databricks", "gpu", "lib", "python3", "site", "packages", "tensorflow_core", "python", "training", "tracking", "util", "\",", "line", "1103", "_save_cached_when_graph_building", "save_op", "saver", "save", "file_prefix", "File", "databricks", "conda", "envs", "databricks", "gpu", "lib", "python3", "site", "packages", "tensorflow_core", "python", "training", "saving", "functional_saver", "\",", "line", "230", "save", "sharded_saves", "append", "saver", "save", "shard_prefix", "File", "databricks", "conda", "envs", "databricks", "gpu", "lib", "python3", "site", "packages", "tensorflow_core", "python", "training", "saving", "functional_saver", "\",", "line", "save", "return", "io_ops", "save_v2", "file_prefix", "tensor_names", "tensor_slices", "tensors", "File", "databricks", "conda", "envs", "databricks", "gpu", "lib", "python3", "site", "packages", "tensorflow_core", "python", "ops", "gen_io_ops", "\",", "line", "1933", "save_v2", "ctx", "_ctx", "File", "databricks", "conda", "envs", "databricks", "gpu", "lib", "python3", "site", "packages", "tensorflow_core", "python", "ops", "gen_io_ops", "\",", "line", "1970", "save_v2_eager_fallback", "ctx", "_ctx", "name", "name", "File", "databricks", "conda", "envs", "databricks", "gpu", "lib", "python3", "site", "packages", "tensorflow_core", "python", "eager", "execute", "\",", "line", "quick_execute", "six", "raise_from", "core", "_status_to_exception", "e", "code", "message", "None", "File", "string", ">\",", "line", "raise_from", "tensorflow", "python", "framework", "errors_impl", "InvalidArgumentError", "dbfs", "mnt", "devscoutprototype", "eval_out", "checkpoint", "ctl_step_399", "ckpt", "3_temp_08f0418651184fbd97263e13fc11b45c", "part", "00001", "00002", "data", "00000", "00001", "tempstate9461307533243821894", "Invalid", "argument", "Op", "SaveV2", "---------------------------------------------------------------------------", "CalledProcessError", "Traceback", "recent", "call", "last", "<", "command", "1805221645764486", "<", "module", "---->", "1", "get_ipython", "().", "run_cell_magic", "sh", "'',", "Running", "classifier", "nexport", "GLUE_DIR", "='/", "dbfs", "mnt", "devscoutprototype", "dataset", "/'\\", "nexport", "ALBERT_DIR", "='/", "dbfs", "mnt", "devscoutprototype", "models", "base_2", "/'\\", "nexport", "TASK_NAME", "CoLA", "nexport", "OUTPUT_DIR", "='/", "dbfs", "mnt", "devscoutprototype", "train_out", "nexport", "MODEL_DIR", "='/", "dbfs", "mnt", "devscoutprototype", "eval_out", "/'\\", "npython", "dbfs", "mnt", "devscoutprototype", "ALBERT", "TF2", "0", "master", "run_classifer", "train_data_path", "=${", "OUTPUT_DIR", "}/${", "TASK_NAME", "_train", "tf_record", "eval_data_path", "=${", "OUTPUT_DIR", "}/${", "TASK_NAME", "_eval", "tf_record", "input_meta_data_path", "=${", "OUTPUT_DIR", "}/${", "TASK_NAME", "_meta_data", "init_checkpoint", "=${", "ALBERT_DIR", "tf2_model", "spm_model_file", "=${", "ALBERT_DIR", "vocab", "30k", "clean", "model", "albert_config_file", "=${", "ALBERT_DIR", "config", "json", "output_dir", "=${", "MODEL_DIR", "do_train", "task_name", "=${", "TASK_NAME", "--", "do_eval", "--", "custom_training_loop", "--", "train_batch_size", "64", "--", "learning_rate", "1e", "--", "num_train_epochs", "10", "n", "databricks", "python", "lib", "python3", "site", "packages", "IPython", "core", "interactiveshell", "run_cell_magic", "self", "magic_name", "line", "cell", "2350", "self", "builtin_trap", "2351", "args", "magic_arg_s", "cell", "->", "2352", "result", "fn", "args", "kwargs", "2353", "return", "result", "2354", "databricks", "python", "lib", "python3", "site", "packages", "IPython", "core", "magics", "script", "named_script_magic", "line", "cell", "140", "else", "141", "line", "script", "-->", "142", "return", "self", "shebang", "line", "cell", "143", "144", "write", "basic", "docstring", "databricks", "python", "lib", "python3", "site", "packages", "decorator", "decorator", "gen", "110", "shebang", "self", "line", "cell", "databricks", "python", "lib", "python3", "site", "packages", "IPython", "core", "magic", "<", "lambda", "**", "185", "overkill", "one", "bit", "state", "186", "def", "magic_deco", "arg", "-->", "187", "call", "lambda", "f", "**", "f", "**", "k", ")", "188", "189", "callable", "arg", "databricks", "python", "lib", "python3", "7", "site", "packages", "IPython", "core", "magics", "script", "shebang", "self", "line", "cell", ")", "243", "sys", "stderr", "flush", "244", "args", "raise_error", "returncode", "0", "-->", "245", "raise", "CalledProcessError", "returncode", "cell", "output", "stderr", "err", ")", "246", "247", "def", "_run_script", "(", "self", "p", "cell", "to_close", "CalledProcessError", "Command", "\"\\", "n", "#", "Running", "classifier", "n", "\\", "nexport", "GLUE_DIR", "='/", "dbfs", "mnt", "devscoutprototype", "dataset", "/'\\", "nexport", "ALBERT_DIR", "='/", "dbfs", "mnt", "devscoutprototype", "models", "base_2", "/'\\", "nexport", "TASK_NAME", "CoLA", "nexport", "OUTPUT_DIR", "='/", "dbfs", "mnt", "devscoutprototype", "train_out", "nexport", "MODEL_DIR", "='/", "dbfs", "mnt", "devscoutprototype", "eval_out", "/'\\", "n", "\\", "npython", "dbfs", "mnt", "devscoutprototype", "ALBERT", "TF2", "0", "master", "run_classifer", "Got", "following", "error", "output", "Databricks", "exported", "notebook", "attached", "file", "error", "occurs", "cell", "INFO", "tensorflow", "Converted", "call", "function", "read", "locals", ">.<", "lambda", "0x7fbde97eae18", "args", "tf", "Tensor", "args_0", "shape", "=()", "dtype", "string", ">,)", "kwargs", "INFO", "tensorflow", "Not", "whitelisted", "method", "wrapper", "__call__", "function", "object", "0x7fbde97eae18", "default", "rule", "INFO", "tensorflow", "Not", "whitelisted", "function", "read", "locals", ">.<", "lambda", "0x7fbde97eae18", "default", "rule", "INFO", "tensorflow", "Entity", "function", "read", "locals", ">.<", "lambda", "0x7fbde97eae18", "cached", "key", "code", "object", "lambda", "0x7fbde9888f60", "file", "command", "608347", ">\",", "line", "138", "subkey", "tensorflow", "python", "autograph", "core", "converter", "ConversionOptions", "object", "0x7fbdddf7c0b8", "frozenset", "({'", "mean", "var", "'}))", "INFO", "tensorflow", "Converting", "function", "read", "locals", ">.<", "lambda", "0x7fbde97eae18", "INFO", "tensorflow", "Error", "transforming", "entity", "function", "read", "locals", ">.<", "lambda", "0x7fbde97eae18", "Traceback", "recent", "call", "last", "File", "databricks", "python", "lib", "python3", "site", "packages", "tensorflow_core", "python", "autograph", "pyct", "parser", "\",", "line", "parse_entity", "return", "parse_str", "source", "preamble_len", "len", "future_features", ")),", "source", "File", "databricks", "python", "lib", "python3", "site", "packages", "tensorflow_core", "python", "autograph", "pyct", "parser", "\",", "line", "139", "parse_str", "module_node", "gast", "parse", "src", "File", "databricks", "python", "lib", "python3", "site", "packages", "gast", "gast", "\",", "line", "240", "parse", "return", "ast_to_gast", "_ast", "parse", "args", "kwargs", "File", "usr", "lib", "python3", "ast", "\",", "line", "parse", "return", "compile", "source", "filename", "mode", "PyCF_ONLY_AST", "File", "unknown", ">\",", "line", "map", "lambda", "decode", "x", "mean", "var", "^", "SyntaxError", "invalid", "syntax", "During", "handling", "exception", "another", "exception", "occurred", "Traceback", "recent", "call", "last", "File", "databricks", "python", "lib", "python3", "site", "packages", "tensorflow_core", "python", "autograph", "impl", "api", "\",", "line", "506", "converted_call", "converted_f", "conversion", "convert", "target_entity", "program_ctx", "File", "databricks", "python", "lib", "python3", "site", "packages", "tensorflow_core", "python", "autograph", "impl", "conversion", "\",", "line", "322", "convert", "free_nonglobal_var_names", "File", "databricks", "python", "lib", "python3", "site", "packages", "tensorflow_core", "python", "autograph", "impl", "conversion", "\",", "line", "240", "_convert_with_cache", "entity", "program_ctx", "File", "databricks", "python", "lib", "python3", "site", "packages", "tensorflow_core", "python", "autograph", "impl", "conversion", "\",", "line", "469", "convert_entity_to_ast", "nodes", "name", "entity_info", "convert_func_to_ast", "program_ctx", "File", "databricks", "python", "lib", "python3", "site", "packages", "tensorflow_core", "python", "autograph", "impl", "conversion", "\",", "line", "630", "convert_func_to_ast", "node", "source", "parser", "parse_entity", "f", "future_features", "future_features", "File", "databricks", "python", "lib", "python3", "site", "packages", "tensorflow_core", "python", "autograph", "pyct", "parser", "\",", "line", "118", "parse_entity", "return", "parse_str", "source", "preamble_len", "len", "future_features", ")),", "source", "File", "databricks", "python", "lib", "python3", "site", "packages", "tensorflow_core", "python", "autograph", "pyct", "parser", "\",", "line", "145", "parse_str", "raise", "ValueError", "expected", "exactly", "one", "node", "node", "found", "{}'.", "format", "nodes", "ValueError", "expected", "exactly", "one", "node", "node", "found", "WARNING", "tensorflow", "Entity", "function", "read", "locals", ">.<", "lambda", "0x7fbde97eae18", "could", "transformed", "executed", "Please", "report", "AutoGraph", "team", "When", "filing", "bug", "set", "verbosity", "(", "Linux", "export", "AUTOGRAPH_VERBOSITY", "10", "attach", "full", "output", "Cause", "expected", "exactly", "one", "node", "node", "found", "[", "v2_compute_ndcg_geov4", "ipynb", "zip", "https", "://", "github", "com", "tensorflow", "tensorflow", "files", "4011226", "v2_compute_ndcg_geov4", "ipynb", "zip", "Added", "usage", "examples", "math", "subtract", "scalar_mul", "truediv", "divide_no_nan", "multiply_no_nan", "floordiv", "reduce_prod", "reduce_min", "reduce_max", "sigmoid", "log_sigmoid", "unsorted_segmentation", "unsorted_segment_sqrt_n", "polyval", "System", "information", "OS", "Platform", "Distribution", "e", ".,", "Linux", "Ubuntu", "04", "MacOS", "15", "TensorFlow", "installed", "source", "binary", "binary", "TensorFlow", "version", "github", "SHA", "source", "nightly", "2", "dev20191203", "Command", "used", "run", "converter", "code", "using", "Python", "API", "```", "import", "pathlib", "inpt", "tf", "keras", "layers", "Input", "shape", "256", "256", "])", "tf", "keras", "layers", "Lambda", "lambda", "tf", "keras", "activations", "softmax", "))(", "inpt", "tf", "keras", "layers", "Lambda", "lambda", "x", "tf", "softmax", "x", "))(", "model", "tf", "keras", "Model", "inpt", "converter", "tf", "lite", "TFLiteConverter", "from_keras_model", "model", "tflite_model", "=", "converter", "convert", "pathlib", "Path", "tflite", "').", "write_bytes", "tflite_model", "```", "Failure", "details", "[", "image", "https", "://", "user", "images", "githubusercontent", "com", "1422280", "71025023", "3904e880", "20d4", "11ea", "95fb", "29cfea49a44d", "png", "This", "graph", "shows", "difference", "different", "softmax", "methods", "When", "using", "tf", "keras", "activations", "softmax", "[", "code", "https", "://", "github", "com", "tensorflow", "tensorflow", "blob", "1", "0", "rc1", "tensorflow", "python", "keras", "activations", "#", "L43", "L79", "workaround", "multiple", "dimensions", "looks", "like", "written", "tensorflow", "multi", "dimension", "support", "feedback", "multiple", "developers", "hard", "figure", "calculate", "right", "int8", "values", "quantized", "inputs", "understand", "int8", "values", "mean", "outputs", "For", "example", "feeding", "image", "uint8", "quantized", "inputs", "values", "left", "source", "255", "range", "For", "int8", "inputs", "developer", "typically", "need", "subtract", "128", "value", "knowledge", "offset", "value", "calculated", "documented", "way", "users", "need", "map", "128", "127", "output", "values", "actual", "real", "number", "range", "outputs", "process", "unclear", "Tagging", "tensorflow", "micro", "team"]}