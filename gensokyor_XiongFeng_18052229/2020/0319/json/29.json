[{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/21478", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/21478/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/21478/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/21478/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/21478", "id": 348719016, "node_id": "MDU6SXNzdWUzNDg3MTkwMTY=", "number": 21478, "title": "Implement \"quantize_graph\" will print \"tf.estimator package not installed.\"", "user": {"login": "gary90231", "id": 17735522, "node_id": "MDQ6VXNlcjE3NzM1NTIy", "avatar_url": "https://avatars0.githubusercontent.com/u/17735522?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gary90231", "html_url": "https://github.com/gary90231", "followers_url": "https://api.github.com/users/gary90231/followers", "following_url": "https://api.github.com/users/gary90231/following{/other_user}", "gists_url": "https://api.github.com/users/gary90231/gists{/gist_id}", "starred_url": "https://api.github.com/users/gary90231/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gary90231/subscriptions", "organizations_url": "https://api.github.com/users/gary90231/orgs", "repos_url": "https://api.github.com/users/gary90231/repos", "events_url": "https://api.github.com/users/gary90231/events{/privacy}", "received_events_url": "https://api.github.com/users/gary90231/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1097545817, "node_id": "MDU6TGFiZWwxMDk3NTQ1ODE3", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/comp:apis", "name": "comp:apis", "color": "0052cc", "default": false, "description": ""}, {"id": 473172988, "node_id": "MDU6TGFiZWw0NzMxNzI5ODg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:bug", "name": "type:bug", "color": "159b2e", "default": false, "description": ""}], "state": "open", "locked": false, "assignee": {"login": "case540", "id": 1299636, "node_id": "MDQ6VXNlcjEyOTk2MzY=", "avatar_url": "https://avatars2.githubusercontent.com/u/1299636?v=4", "gravatar_id": "", "url": "https://api.github.com/users/case540", "html_url": "https://github.com/case540", "followers_url": "https://api.github.com/users/case540/followers", "following_url": "https://api.github.com/users/case540/following{/other_user}", "gists_url": "https://api.github.com/users/case540/gists{/gist_id}", "starred_url": "https://api.github.com/users/case540/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/case540/subscriptions", "organizations_url": "https://api.github.com/users/case540/orgs", "repos_url": "https://api.github.com/users/case540/repos", "events_url": "https://api.github.com/users/case540/events{/privacy}", "received_events_url": "https://api.github.com/users/case540/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "case540", "id": 1299636, "node_id": "MDQ6VXNlcjEyOTk2MzY=", "avatar_url": "https://avatars2.githubusercontent.com/u/1299636?v=4", "gravatar_id": "", "url": "https://api.github.com/users/case540", "html_url": "https://github.com/case540", "followers_url": "https://api.github.com/users/case540/followers", "following_url": "https://api.github.com/users/case540/following{/other_user}", "gists_url": "https://api.github.com/users/case540/gists{/gist_id}", "starred_url": "https://api.github.com/users/case540/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/case540/subscriptions", "organizations_url": "https://api.github.com/users/case540/orgs", "repos_url": "https://api.github.com/users/case540/repos", "events_url": "https://api.github.com/users/case540/events{/privacy}", "received_events_url": "https://api.github.com/users/case540/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 15, "created_at": "2018-08-08T13:10:18Z", "updated_at": "2019-01-25T22:21:16Z", "closed_at": null, "author_association": "NONE", "body": "Making quantization by using command \"sudo bazel-bin/tensorflow/tools/quantization/quantize_graph .......\" in the directory of tensorflow, and it will input \"tf.estimator package not installed.\" And in this directory, implemt \"python->import tensorflow\", it will return error message. But in other directory, implemt \"python->import tensorflow\", it will be normally. The folllowing is my envirnment information: \r\n OS Platform and Distribution: Linux Ubuntu 18.04\r\n TensorFlow installed from: using TF source code (CPU) for graph conversion, not using binary-python(GPU) for inference\r\nTensorFlow version:  using r1.10.0-rc1\r\nPython version: 3.6\r\nBazel version: 0.16.0\r\n\r\n"}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/21473", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/21473/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/21473/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/21473/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/21473", "id": 348646318, "node_id": "MDU6SXNzdWUzNDg2NDYzMTg=", "number": 21473, "title": "Do not generate LSTM op by incorrect param check logic", "user": {"login": "jyoungyun", "id": 7223627, "node_id": "MDQ6VXNlcjcyMjM2Mjc=", "avatar_url": "https://avatars1.githubusercontent.com/u/7223627?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jyoungyun", "html_url": "https://github.com/jyoungyun", "followers_url": "https://api.github.com/users/jyoungyun/followers", "following_url": "https://api.github.com/users/jyoungyun/following{/other_user}", "gists_url": "https://api.github.com/users/jyoungyun/gists{/gist_id}", "starred_url": "https://api.github.com/users/jyoungyun/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jyoungyun/subscriptions", "organizations_url": "https://api.github.com/users/jyoungyun/orgs", "repos_url": "https://api.github.com/users/jyoungyun/repos", "events_url": "https://api.github.com/users/jyoungyun/events{/privacy}", "received_events_url": "https://api.github.com/users/jyoungyun/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 750616506, "node_id": "MDU6TGFiZWw3NTA2MTY1MDY=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/comp:lite", "name": "comp:lite", "color": "0052cc", "default": false, "description": ""}, {"id": 473173272, "node_id": "MDU6TGFiZWw0NzMxNzMyNzI=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:feature", "name": "type:feature", "color": "159b2e", "default": false, "description": ""}], "state": "open", "locked": false, "assignee": {"login": "miaout17", "id": 22063, "node_id": "MDQ6VXNlcjIyMDYz", "avatar_url": "https://avatars0.githubusercontent.com/u/22063?v=4", "gravatar_id": "", "url": "https://api.github.com/users/miaout17", "html_url": "https://github.com/miaout17", "followers_url": "https://api.github.com/users/miaout17/followers", "following_url": "https://api.github.com/users/miaout17/following{/other_user}", "gists_url": "https://api.github.com/users/miaout17/gists{/gist_id}", "starred_url": "https://api.github.com/users/miaout17/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/miaout17/subscriptions", "organizations_url": "https://api.github.com/users/miaout17/orgs", "repos_url": "https://api.github.com/users/miaout17/repos", "events_url": "https://api.github.com/users/miaout17/events{/privacy}", "received_events_url": "https://api.github.com/users/miaout17/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "miaout17", "id": 22063, "node_id": "MDQ6VXNlcjIyMDYz", "avatar_url": "https://avatars0.githubusercontent.com/u/22063?v=4", "gravatar_id": "", "url": "https://api.github.com/users/miaout17", "html_url": "https://github.com/miaout17", "followers_url": "https://api.github.com/users/miaout17/followers", "following_url": "https://api.github.com/users/miaout17/following{/other_user}", "gists_url": "https://api.github.com/users/miaout17/gists{/gist_id}", "starred_url": "https://api.github.com/users/miaout17/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/miaout17/subscriptions", "organizations_url": "https://api.github.com/users/miaout17/orgs", "repos_url": "https://api.github.com/users/miaout17/repos", "events_url": "https://api.github.com/users/miaout17/events{/privacy}", "received_events_url": "https://api.github.com/users/miaout17/received_events", "type": "User", "site_admin": false}, {"login": "aselle", "id": 326106, "node_id": "MDQ6VXNlcjMyNjEwNg==", "avatar_url": "https://avatars1.githubusercontent.com/u/326106?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aselle", "html_url": "https://github.com/aselle", "followers_url": "https://api.github.com/users/aselle/followers", "following_url": "https://api.github.com/users/aselle/following{/other_user}", "gists_url": "https://api.github.com/users/aselle/gists{/gist_id}", "starred_url": "https://api.github.com/users/aselle/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aselle/subscriptions", "organizations_url": "https://api.github.com/users/aselle/orgs", "repos_url": "https://api.github.com/users/aselle/repos", "events_url": "https://api.github.com/users/aselle/events{/privacy}", "received_events_url": "https://api.github.com/users/aselle/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 8, "created_at": "2018-08-08T09:29:49Z", "updated_at": "2019-01-25T22:19:14Z", "closed_at": null, "author_association": "NONE", "body": "### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**: Yes\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**: Linux Ubuntu 16.04\r\n- **Mobile device (e.g. iPhone 8, Pixel 2, Samsung Galaxy) if the issue happens on mobile device**: x\r\n- **TensorFlow installed from (source or binary)**: source\r\n- **TensorFlow version (use command below)**: r1.10\r\n- **Python version**: 3.6.5\r\n- **Bazel version (if compiling from source)**: 0.16.0\r\n- **GCC/Compiler version (if compiling from source)**: 7.3.0\r\n- **CUDA/cuDNN version**: 9.2\r\n- **GPU model and memory**: \r\n- **Exact command to reproduce**:\r\n\r\n### Describe the problem\r\n**Related to input param of state forget gate activation**\r\n\r\nI made a simple RNN test code with below 2 lines. I attached the full code as a file. [rnn.py.txt](https://github.com/tensorflow/tensorflow/files/2269704/rnn.py.txt)\r\n```\r\nlstm_layer=tf.nn.rnn_cell.BasicLSTMCell(num_units)\r\noutputs,_=tf.nn.static_rnn(lstm_layer,input,dtype=tf.float32)\r\n```\r\nAnd I tried to generate tflite file from frozen pb via toco. But it failed to generate LSTM operation because `state_forget_sig`(State forget gate activation) did not have `Split` as an input parameter. Instead it had a `Add` operation as an input and the `Add` operation had a `Split` operation. It generates the same graph when I tried to use `dynamic_rnn`. I attached the tensorboard image. \r\n\r\n![state_forget_sig](https://user-images.githubusercontent.com/7223627/43870358-09d57a3c-9bb2-11e8-9d7d-2f6dcd8dd5ab.png)\r\n\r\nI fixed some codes and it succesfully generated LSTM operations.\r\n```\r\nNumber of all operator types: 5\r\n\tEXPAND_DIMS                           :    2 \t (instrs: ???)\r\n\tCONCATENATION                         :    2 \t (instrs: 0)\r\n\tCUSTOM(Fill)                          :    2 \t (instrs: ???)\r\n\tLSTM                                  :   28 \t (instrs: ???)\r\n\tFULLY_CONNECTED                       :    1 \t (instrs: 7,307,045,943,451,530,714)\r\nNumber of all operators                       :   35 \t (total instrs: 7,307,045,943,451,530,714)\r\n```\r\n\r\nIf I understand it correctly, I will make a PR soon.\r\n"}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/21470", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/21470/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/21470/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/21470/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/21470", "id": 348629006, "node_id": "MDU6SXNzdWUzNDg2MjkwMDY=", "number": 21470, "title": "NCCL is not supported on Windows ", "user": {"login": "Windaway", "id": 4530735, "node_id": "MDQ6VXNlcjQ1MzA3MzU=", "avatar_url": "https://avatars0.githubusercontent.com/u/4530735?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Windaway", "html_url": "https://github.com/Windaway", "followers_url": "https://api.github.com/users/Windaway/followers", "following_url": "https://api.github.com/users/Windaway/following{/other_user}", "gists_url": "https://api.github.com/users/Windaway/gists{/gist_id}", "starred_url": "https://api.github.com/users/Windaway/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Windaway/subscriptions", "organizations_url": "https://api.github.com/users/Windaway/orgs", "repos_url": "https://api.github.com/users/Windaway/repos", "events_url": "https://api.github.com/users/Windaway/events{/privacy}", "received_events_url": "https://api.github.com/users/Windaway/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 996845227, "node_id": "MDU6TGFiZWw5OTY4NDUyMjc=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/comp:dist-strat", "name": "comp:dist-strat", "color": "0052cc", "default": false, "description": "Distribution Strategy related issues"}, {"id": 1093464312, "node_id": "MDU6TGFiZWwxMDkzNDY0MzEy", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:others", "name": "type:others", "color": "159b2e", "default": false, "description": ""}], "state": "open", "locked": false, "assignee": {"login": "yuefengz", "id": 1647833, "node_id": "MDQ6VXNlcjE2NDc4MzM=", "avatar_url": "https://avatars0.githubusercontent.com/u/1647833?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yuefengz", "html_url": "https://github.com/yuefengz", "followers_url": "https://api.github.com/users/yuefengz/followers", "following_url": "https://api.github.com/users/yuefengz/following{/other_user}", "gists_url": "https://api.github.com/users/yuefengz/gists{/gist_id}", "starred_url": "https://api.github.com/users/yuefengz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yuefengz/subscriptions", "organizations_url": "https://api.github.com/users/yuefengz/orgs", "repos_url": "https://api.github.com/users/yuefengz/repos", "events_url": "https://api.github.com/users/yuefengz/events{/privacy}", "received_events_url": "https://api.github.com/users/yuefengz/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "yuefengz", "id": 1647833, "node_id": "MDQ6VXNlcjE2NDc4MzM=", "avatar_url": "https://avatars0.githubusercontent.com/u/1647833?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yuefengz", "html_url": "https://github.com/yuefengz", "followers_url": "https://api.github.com/users/yuefengz/followers", "following_url": "https://api.github.com/users/yuefengz/following{/other_user}", "gists_url": "https://api.github.com/users/yuefengz/gists{/gist_id}", "starred_url": "https://api.github.com/users/yuefengz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yuefengz/subscriptions", "organizations_url": "https://api.github.com/users/yuefengz/orgs", "repos_url": "https://api.github.com/users/yuefengz/repos", "events_url": "https://api.github.com/users/yuefengz/events{/privacy}", "received_events_url": "https://api.github.com/users/yuefengz/received_events", "type": "User", "site_admin": false}, {"login": "seemuch", "id": 2233625, "node_id": "MDQ6VXNlcjIyMzM2MjU=", "avatar_url": "https://avatars0.githubusercontent.com/u/2233625?v=4", "gravatar_id": "", "url": "https://api.github.com/users/seemuch", "html_url": "https://github.com/seemuch", "followers_url": "https://api.github.com/users/seemuch/followers", "following_url": "https://api.github.com/users/seemuch/following{/other_user}", "gists_url": "https://api.github.com/users/seemuch/gists{/gist_id}", "starred_url": "https://api.github.com/users/seemuch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/seemuch/subscriptions", "organizations_url": "https://api.github.com/users/seemuch/orgs", "repos_url": "https://api.github.com/users/seemuch/repos", "events_url": "https://api.github.com/users/seemuch/events{/privacy}", "received_events_url": "https://api.github.com/users/seemuch/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 10, "created_at": "2018-08-08T08:39:51Z", "updated_at": "2019-09-16T13:59:43Z", "closed_at": null, "author_association": "NONE", "body": "------------------------\r\n### System information\r\nWindows 10 x64 pro 17314.365, i7 7900X R6E, TTxp (*4), 16G DDR4 3000@2666 (*6) \r\nChannel .\r\nTensorflow 1.9.0 with AVX2 simd, CUDA9.2.148, Cudnn7.1.4, py3.6.6 , VS2017 15.7(with cmake), CP/SM6.1\r\n\r\n### Describe the problem\r\nOp type not registered 'NcclAllReduce' in binary running on Windows10.\r\nWith onedevicestrategy no problems. I noticed that NCCL only works in Linux.\r\n\r\n### Source code / logs\r\ntensorflow/contrib/distribute/python/examples/simple_tfkeras_example.py\r\n\r\n\r\n> `\r\n> from __future__ import absolute_import\r\n> from __future__ import division\r\n> from __future__ import print_function\r\n> \r\n> import sys\r\n> \r\n> import numpy as np\r\n> import tensorflow as tf\r\n> \r\n> \r\n> def input_fn():\r\n>   x = np.random.random((1024, 10))\r\n>   y = np.random.randint(2, size=(1024, 1))\r\n>   x = tf.cast(x, tf.float32)\r\n>   dataset = tf.data.Dataset.from_tensor_slices((x, y))\r\n>   dataset = dataset.repeat(10)\r\n>   dataset = dataset.batch(32)\r\n>   return dataset\r\n> \r\n> \r\n> def main(args):\r\n> \r\n>   model_dir = './'\r\n>   print('Using %s to store checkpoints.' % model_dir)\r\n> \r\n>   # Define tf.keras Model.\r\n>   model = tf.keras.Sequential()\r\n>   model.add(tf.keras.layers.Dense(16, activation='relu', input_shape=(10,)))\r\n>   model.add(tf.keras.layers.Dense(1, activation='sigmoid'))\r\n> \r\n>   # Compile tf.keras Model.\r\n>   optimizer = tf.train.GradientDescentOptimizer(0.2)\r\n>   model.compile(loss='binary_crossentropy', optimizer=optimizer)\r\n>   model.summary()\r\n>   tf.keras.backend.set_learning_phase(True)\r\n> \r\n>   # Define a DistributionStrategy and convert the tf.keras Model to a\r\n>   # tf.Estimator that utilizes the DistributionStrategy.\r\n>   strategy = tf.contrib.distribute.MirroredStrategy()\r\n>   config = tf.estimator.RunConfig(\r\n>       train_distribute=strategy)\r\n>   keras_estimator = tf.keras.estimator.model_to_estimator(\r\n>       keras_model=model, config=config, model_dir=model_dir)\r\n> \r\n>   # Train and evaluate the tf.Estimator.\r\n>   keras_estimator.train(input_fn=input_fn, steps=10)\r\n>   eval_result = keras_estimator.evaluate(input_fn=input_fn)\r\n>   print('Eval result: {}'.format(eval_result))\r\n> \r\n> if __name__ == '__main__':\r\n>   tf.app.run(argv=sys.argv)`\r\n\r\nLogs:\r\n\r\n\r\n> D:\\Anaconda3\\envs\\tensorflow\\python.exe Z:/PyProj/leaf/othertest.py\r\n> Using ./ to store checkpoints.\r\n> _________________________________________________________________\r\n> Layer (type)                 Output Shape              Param #   \r\n> =================================================================\r\n> dense (Dense)                (None, 16)                176       \r\n> _________________________________________________________________\r\n> dense_1 (Dense)              (None, 1)                 17        \r\n> =================================================================\r\n> Total params: 193\r\n> Trainable params: 193\r\n> Non-trainable params: 0\r\n> _________________________________________________________________\r\n> 2018-08-08 16:28:32.965695: I c:\\users\\user\\source\\repos\\tensorflow\\tensorflow\\core\\common_runtime\\gpu\\gpu_device.cc:1392] Found device 0 with properties: \r\n> name: TITAN Xp COLLECTORS EDITION major: 6 minor: 1 memoryClockRate(GHz): 1.582\r\n> pciBusID: 0000:17:00.0\r\n> totalMemory: 12.00GiB freeMemory: 9.93GiB\r\n> 2018-08-08 16:28:33.068708: I c:\\users\\user\\source\\repos\\tensorflow\\tensorflow\\core\\common_runtime\\gpu\\gpu_device.cc:1392] Found device 1 with properties: \r\n> name: TITAN Xp COLLECTORS EDITION major: 6 minor: 1 memoryClockRate(GHz): 1.582\r\n> pciBusID: 0000:18:00.0\r\n> totalMemory: 12.00GiB freeMemory: 9.93GiB\r\n> 2018-08-08 16:28:33.170068: I c:\\users\\user\\source\\repos\\tensorflow\\tensorflow\\core\\common_runtime\\gpu\\gpu_device.cc:1392] Found device 2 with properties: \r\n> name: TITAN Xp COLLECTORS EDITION major: 6 minor: 1 memoryClockRate(GHz): 1.582\r\n> pciBusID: 0000:65:00.0\r\n> totalMemory: 12.00GiB freeMemory: 9.93GiB\r\n> 2018-08-08 16:28:33.280326: I c:\\users\\user\\source\\repos\\tensorflow\\tensorflow\\core\\common_runtime\\gpu\\gpu_device.cc:1392] Found device 3 with properties: \r\n> name: TITAN Xp COLLECTORS EDITION major: 6 minor: 1 memoryClockRate(GHz): 1.582\r\n> pciBusID: 0000:b3:00.0\r\n> totalMemory: 12.00GiB freeMemory: 9.93GiB\r\n> 2018-08-08 16:28:33.281257: I c:\\users\\user\\source\\repos\\tensorflow\\tensorflow\\core\\common_runtime\\gpu\\gpu_device.cc:1471] Adding visible gpu devices: 0, 1, 2, 3\r\n> 2018-08-08 16:28:35.779554: I c:\\users\\user\\source\\repos\\tensorflow\\tensorflow\\core\\common_runtime\\gpu\\gpu_device.cc:952] Device interconnect StreamExecutor with strength 1 edge matrix:\r\n> 2018-08-08 16:28:35.779811: I c:\\users\\user\\source\\repos\\tensorflow\\tensorflow\\core\\common_runtime\\gpu\\gpu_device.cc:958]      0 1 2 3 \r\n> 2018-08-08 16:28:35.779990: I c:\\users\\user\\source\\repos\\tensorflow\\tensorflow\\core\\common_runtime\\gpu\\gpu_device.cc:971] 0:   N N N N \r\n> 2018-08-08 16:28:35.780385: I c:\\users\\user\\source\\repos\\tensorflow\\tensorflow\\core\\common_runtime\\gpu\\gpu_device.cc:971] 1:   N N N N \r\n> 2018-08-08 16:28:35.780639: I c:\\users\\user\\source\\repos\\tensorflow\\tensorflow\\core\\common_runtime\\gpu\\gpu_device.cc:971] 2:   N N N N \r\n> 2018-08-08 16:28:35.783787: I c:\\users\\user\\source\\repos\\tensorflow\\tensorflow\\core\\common_runtime\\gpu\\gpu_device.cc:971] 3:   N N N N \r\n> 2018-08-08 16:28:35.784232: I c:\\users\\user\\source\\repos\\tensorflow\\tensorflow\\core\\common_runtime\\gpu\\gpu_device.cc:1084] Created TensorFlow device (/job:localhost/replica:0/task:0/device:GPU:0 with 9612 MB memory) -> physical GPU (device: 0, name: TITAN Xp COLLECTORS EDITION, pci bus id: 0000:17:00.0, compute capability: 6.1)\r\n> 2018-08-08 16:28:36.220466: I c:\\users\\user\\source\\repos\\tensorflow\\tensorflow\\core\\common_runtime\\gpu\\gpu_device.cc:1084] Created TensorFlow device (/job:localhost/replica:0/task:0/device:GPU:1 with 9612 MB memory) -> physical GPU (device: 1, name: TITAN Xp COLLECTORS EDITION, pci bus id: 0000:18:00.0, compute capability: 6.1)\r\n> 2018-08-08 16:28:36.655982: I c:\\users\\user\\source\\repos\\tensorflow\\tensorflow\\core\\common_runtime\\gpu\\gpu_device.cc:1084] Created TensorFlow device (/job:localhost/replica:0/task:0/device:GPU:2 with 9612 MB memory) -> physical GPU (device: 2, name: TITAN Xp COLLECTORS EDITION, pci bus id: 0000:65:00.0, compute capability: 6.1)\r\n> 2018-08-08 16:28:37.091894: I c:\\users\\user\\source\\repos\\tensorflow\\tensorflow\\core\\common_runtime\\gpu\\gpu_device.cc:1084] Created TensorFlow device (/job:localhost/replica:0/task:0/device:GPU:3 with 9612 MB memory) -> physical GPU (device: 3, name: TITAN Xp COLLECTORS EDITION, pci bus id: 0000:b3:00.0, compute capability: 6.1)\r\n> 2018-08-08 16:28:37.529496: I c:\\users\\user\\source\\repos\\tensorflow\\tensorflow\\core\\common_runtime\\gpu\\gpu_device.cc:1471] Adding visible gpu devices: 0, 1, 2, 3\r\n> 2018-08-08 16:28:37.530168: I c:\\users\\user\\source\\repos\\tensorflow\\tensorflow\\core\\common_runtime\\gpu\\gpu_device.cc:952] Device interconnect StreamExecutor with strength 1 edge matrix:\r\n> 2018-08-08 16:28:37.530377: I c:\\users\\user\\source\\repos\\tensorflow\\tensorflow\\core\\common_runtime\\gpu\\gpu_device.cc:958]      0 1 2 3 \r\n> 2018-08-08 16:28:37.530527: I c:\\users\\user\\source\\repos\\tensorflow\\tensorflow\\core\\common_runtime\\gpu\\gpu_device.cc:971] 0:   N N N N \r\n> 2018-08-08 16:28:37.530675: I c:\\users\\user\\source\\repos\\tensorflow\\tensorflow\\core\\common_runtime\\gpu\\gpu_device.cc:971] 1:   N N N N \r\n> 2018-08-08 16:28:37.530822: I c:\\users\\user\\source\\repos\\tensorflow\\tensorflow\\core\\common_runtime\\gpu\\gpu_device.cc:971] 2:   N N N N \r\n> 2018-08-08 16:28:37.530971: I c:\\users\\user\\source\\repos\\tensorflow\\tensorflow\\core\\common_runtime\\gpu\\gpu_device.cc:971] 3:   N N N N \r\n> 2018-08-08 16:28:37.531268: I c:\\users\\user\\source\\repos\\tensorflow\\tensorflow\\core\\common_runtime\\gpu\\gpu_device.cc:1084] Created TensorFlow device (/job:localhost/replica:0/task:0/device:GPU:0 with 9612 MB memory) -> physical GPU (device: 0, name: TITAN Xp COLLECTORS EDITION, pci bus id: 0000:17:00.0, compute capability: 6.1)\r\n> 2018-08-08 16:28:37.531988: I c:\\users\\user\\source\\repos\\tensorflow\\tensorflow\\core\\common_runtime\\gpu\\gpu_device.cc:1084] Created TensorFlow device (/job:localhost/replica:0/task:0/device:GPU:1 with 9612 MB memory) -> physical GPU (device: 1, name: TITAN Xp COLLECTORS EDITION, pci bus id: 0000:18:00.0, compute capability: 6.1)\r\n> 2018-08-08 16:28:37.532651: I c:\\users\\user\\source\\repos\\tensorflow\\tensorflow\\core\\common_runtime\\gpu\\gpu_device.cc:1084] Created TensorFlow device (/job:localhost/replica:0/task:0/device:GPU:2 with 9612 MB memory) -> physical GPU (device: 2, name: TITAN Xp COLLECTORS EDITION, pci bus id: 0000:65:00.0, compute capability: 6.1)\r\n> 2018-08-08 16:28:37.533329: I c:\\users\\user\\source\\repos\\tensorflow\\tensorflow\\core\\common_runtime\\gpu\\gpu_device.cc:1084] Created TensorFlow device (/job:localhost/replica:0/task:0/device:GPU:3 with 9612 MB memory) -> physical GPU (device: 3, name: TITAN Xp COLLECTORS EDITION, pci bus id: 0000:b3:00.0, compute capability: 6.1)\r\n> 2018-08-08 16:28:37.570852: I c:\\users\\user\\source\\repos\\tensorflow\\tensorflow\\core\\common_runtime\\gpu\\gpu_device.cc:1471] Adding visible gpu devices: 0, 1, 2, 3\r\n> 2018-08-08 16:28:37.571420: I c:\\users\\user\\source\\repos\\tensorflow\\tensorflow\\core\\common_runtime\\gpu\\gpu_device.cc:952] Device interconnect StreamExecutor with strength 1 edge matrix:\r\n> 2018-08-08 16:28:37.571620: I c:\\users\\user\\source\\repos\\tensorflow\\tensorflow\\core\\common_runtime\\gpu\\gpu_device.cc:958]      0 1 2 3 \r\n> 2018-08-08 16:28:37.571766: I c:\\users\\user\\source\\repos\\tensorflow\\tensorflow\\core\\common_runtime\\gpu\\gpu_device.cc:971] 0:   N N N N \r\n> 2018-08-08 16:28:37.571910: I c:\\users\\user\\source\\repos\\tensorflow\\tensorflow\\core\\common_runtime\\gpu\\gpu_device.cc:971] 1:   N N N N \r\n> 2018-08-08 16:28:37.572056: I c:\\users\\user\\source\\repos\\tensorflow\\tensorflow\\core\\common_runtime\\gpu\\gpu_device.cc:971] 2:   N N N N \r\n> 2018-08-08 16:28:37.572200: I c:\\users\\user\\source\\repos\\tensorflow\\tensorflow\\core\\common_runtime\\gpu\\gpu_device.cc:971] 3:   N N N N \r\n> 2018-08-08 16:28:37.572479: I c:\\users\\user\\source\\repos\\tensorflow\\tensorflow\\core\\common_runtime\\gpu\\gpu_device.cc:1084] Created TensorFlow device (/job:localhost/replica:0/task:0/device:GPU:0 with 9612 MB memory) -> physical GPU (device: 0, name: TITAN Xp COLLECTORS EDITION, pci bus id: 0000:17:00.0, compute capability: 6.1)\r\n> 2018-08-08 16:28:37.573133: I c:\\users\\user\\source\\repos\\tensorflow\\tensorflow\\core\\common_runtime\\gpu\\gpu_device.cc:1084] Created TensorFlow device (/job:localhost/replica:0/task:0/device:GPU:1 with 9612 MB memory) -> physical GPU (device: 1, name: TITAN Xp COLLECTORS EDITION, pci bus id: 0000:18:00.0, compute capability: 6.1)\r\n> 2018-08-08 16:28:37.573824: I c:\\users\\user\\source\\repos\\tensorflow\\tensorflow\\core\\common_runtime\\gpu\\gpu_device.cc:1084] Created TensorFlow device (/job:localhost/replica:0/task:0/device:GPU:2 with 9612 MB memory) -> physical GPU (device: 2, name: TITAN Xp COLLECTORS EDITION, pci bus id: 0000:65:00.0, compute capability: 6.1)\r\n> 2018-08-08 16:28:37.574554: I c:\\users\\user\\source\\repos\\tensorflow\\tensorflow\\core\\common_runtime\\gpu\\gpu_device.cc:1084] Created TensorFlow device (/job:localhost/replica:0/task:0/device:GPU:3 with 9612 MB memory) -> physical GPU (device: 3, name: TITAN Xp COLLECTORS EDITION, pci bus id: 0000:b3:00.0, compute capability: 6.1)\r\n> 2018-08-08 16:28:37.902576: I c:\\users\\user\\source\\repos\\tensorflow\\tensorflow\\core\\common_runtime\\gpu\\gpu_device.cc:1471] Adding visible gpu devices: 0, 1, 2, 3\r\n> 2018-08-08 16:28:37.903108: I c:\\users\\user\\source\\repos\\tensorflow\\tensorflow\\core\\common_runtime\\gpu\\gpu_device.cc:952] Device interconnect StreamExecutor with strength 1 edge matrix:\r\n> 2018-08-08 16:28:37.903311: I c:\\users\\user\\source\\repos\\tensorflow\\tensorflow\\core\\common_runtime\\gpu\\gpu_device.cc:958]      0 1 2 3 \r\n> 2018-08-08 16:28:37.903456: I c:\\users\\user\\source\\repos\\tensorflow\\tensorflow\\core\\common_runtime\\gpu\\gpu_device.cc:971] 0:   N N N N \r\n> 2018-08-08 16:28:37.903604: I c:\\users\\user\\source\\repos\\tensorflow\\tensorflow\\core\\common_runtime\\gpu\\gpu_device.cc:971] 1:   N N N N \r\n> 2018-08-08 16:28:37.903751: I c:\\users\\user\\source\\repos\\tensorflow\\tensorflow\\core\\common_runtime\\gpu\\gpu_device.cc:971] 2:   N N N N \r\n> 2018-08-08 16:28:37.903896: I c:\\users\\user\\source\\repos\\tensorflow\\tensorflow\\core\\common_runtime\\gpu\\gpu_device.cc:971] 3:   N N N N \r\n> 2018-08-08 16:28:37.904189: I c:\\users\\user\\source\\repos\\tensorflow\\tensorflow\\core\\common_runtime\\gpu\\gpu_device.cc:1084] Created TensorFlow device (/device:GPU:0 with 9612 MB memory) -> physical GPU (device: 0, name: TITAN Xp COLLECTORS EDITION, pci bus id: 0000:17:00.0, compute capability: 6.1)\r\n> 2018-08-08 16:28:37.904886: I c:\\users\\user\\source\\repos\\tensorflow\\tensorflow\\core\\common_runtime\\gpu\\gpu_device.cc:1084] Created TensorFlow device (/device:GPU:1 with 9612 MB memory) -> physical GPU (device: 1, name: TITAN Xp COLLECTORS EDITION, pci bus id: 0000:18:00.0, compute capability: 6.1)\r\n> 2018-08-08 16:28:37.905868: I c:\\users\\user\\source\\repos\\tensorflow\\tensorflow\\core\\common_runtime\\gpu\\gpu_device.cc:1084] Created TensorFlow device (/device:GPU:2 with 9612 MB memory) -> physical GPU (device: 2, name: TITAN Xp COLLECTORS EDITION, pci bus id: 0000:65:00.0, compute capability: 6.1)\r\n> 2018-08-08 16:28:37.906462: I c:\\users\\user\\source\\repos\\tensorflow\\tensorflow\\core\\common_runtime\\gpu\\gpu_device.cc:1084] Created TensorFlow device (/device:GPU:3 with 9612 MB memory) -> physical GPU (device: 3, name: TITAN Xp COLLECTORS EDITION, pci bus id: 0000:b3:00.0, compute capability: 6.1)\r\n> Traceback (most recent call last):\r\n>   File \"D:\\Anaconda3\\envs\\tensorflow\\lib\\site-packages\\tensorflow\\python\\framework\\ops.py\", line 1589, in _create_c_op\r\n>     c_op = c_api.TF_FinishOperation(op_desc)\r\n> tensorflow.python.framework.errors_impl.InvalidArgumentError: Op type not registered 'NcclAllReduce' in binary running on DESKTOP-K1BEKCL. Make sure the Op and Kernel are registered in the binary running in this process. Note that if you are loading a saved graph which used ops from tf.contrib, accessing (e.g.) `tf.contrib.resampler` should be done before importing the graph, as contrib ops are lazily registered when the module is first accessed. while building NodeDef 'NcclAllReduce'\r\n> \r\n> During handling of the above exception, another exception occurred:\r\n> \r\n> Traceback (most recent call last):\r\n>   File \"Z:/PyProj/leaf/othertest.py\", line 66, in <module>\r\n>     tf.app.run(argv=sys.argv)\r\n>   File \"D:\\Anaconda3\\envs\\tensorflow\\lib\\site-packages\\tensorflow\\python\\platform\\app.py\", line 125, in run\r\n>     _sys.exit(main(argv))\r\n>   File \"Z:/PyProj/leaf/othertest.py\", line 61, in main\r\n>     keras_estimator.train(input_fn=input_fn, steps=10)\r\n>   File \"D:\\Anaconda3\\envs\\tensorflow\\lib\\site-packages\\tensorflow\\python\\estimator\\estimator.py\", line 366, in train\r\n>     loss = self._train_model(input_fn, hooks, saving_listeners)\r\n>   File \"D:\\Anaconda3\\envs\\tensorflow\\lib\\site-packages\\tensorflow\\python\\estimator\\estimator.py\", line 1117, in _train_model\r\n>     return self._train_model_distributed(input_fn, hooks, saving_listeners)\r\n>   File \"D:\\Anaconda3\\envs\\tensorflow\\lib\\site-packages\\tensorflow\\python\\estimator\\estimator.py\", line 1160, in _train_model_distributed\r\n>     self.config)\r\n>   File \"D:\\Anaconda3\\envs\\tensorflow\\lib\\site-packages\\tensorflow\\python\\training\\distribute.py\", line 794, in call_for_each_tower\r\n>     return self._call_for_each_tower(fn, *args, **kwargs)\r\n>   File \"D:\\Anaconda3\\envs\\tensorflow\\lib\\site-packages\\tensorflow\\contrib\\distribute\\python\\mirrored_strategy.py\", line 269, in _call_for_each_tower\r\n>     coord.join(threads)\r\n>   File \"D:\\Anaconda3\\envs\\tensorflow\\lib\\site-packages\\tensorflow\\python\\training\\coordinator.py\", line 389, in join\r\n>     six.reraise(*self._exc_info_to_raise)\r\n>   File \"D:\\Anaconda3\\envs\\tensorflow\\lib\\site-packages\\six.py\", line 693, in reraise\r\n>     raise value\r\n>   File \"D:\\Anaconda3\\envs\\tensorflow\\lib\\site-packages\\tensorflow\\python\\training\\coordinator.py\", line 297, in stop_on_exception\r\n>     yield\r\n>   File \"D:\\Anaconda3\\envs\\tensorflow\\lib\\site-packages\\tensorflow\\contrib\\distribute\\python\\mirrored_strategy.py\", line 263, in _call_for_each_tower\r\n>     self, *merge_args, **merge_kwargs)\r\n>   File \"D:\\Anaconda3\\envs\\tensorflow\\lib\\site-packages\\tensorflow\\python\\training\\optimizer.py\", line 652, in _distributed_apply\r\n>     reduced_grads = distribution.batch_reduce(\"sum\", grads_and_vars)\r\n>   File \"D:\\Anaconda3\\envs\\tensorflow\\lib\\site-packages\\tensorflow\\python\\training\\distribute.py\", line 840, in batch_reduce\r\n>     return self._batch_reduce(method_string, value_destination_pairs)\r\n>   File \"D:\\Anaconda3\\envs\\tensorflow\\lib\\site-packages\\tensorflow\\contrib\\distribute\\python\\mirrored_strategy.py\", line 310, in _batch_reduce\r\n>     value_destination_pairs)\r\n>   File \"D:\\Anaconda3\\envs\\tensorflow\\lib\\site-packages\\tensorflow\\contrib\\distribute\\python\\cross_tower_ops.py\", line 177, in batch_reduce\r\n>     return self._batch_reduce(method_string, value_destination_pairs)\r\n>   File \"D:\\Anaconda3\\envs\\tensorflow\\lib\\site-packages\\tensorflow\\contrib\\distribute\\python\\cross_tower_ops.py\", line 475, in _batch_reduce\r\n>     [v[0] for v in value_destination_pairs])\r\n>   File \"D:\\Anaconda3\\envs\\tensorflow\\lib\\site-packages\\tensorflow\\contrib\\distribute\\python\\cross_tower_ops.py\", line 520, in _batch_all_reduce\r\n>     device_grad_packs)\r\n>   File \"D:\\Anaconda3\\envs\\tensorflow\\lib\\site-packages\\tensorflow\\contrib\\distribute\\python\\cross_tower_utils.py\", line 37, in aggregate_gradients_using_nccl\r\n>     agg_grads = nccl.all_sum(single_grads)\r\n>   File \"D:\\Anaconda3\\envs\\tensorflow\\lib\\site-packages\\tensorflow\\contrib\\nccl\\python\\ops\\nccl_ops.py\", line 47, in all_sum\r\n>     return _apply_all_reduce('sum', tensors)\r\n>   File \"D:\\Anaconda3\\envs\\tensorflow\\lib\\site-packages\\tensorflow\\contrib\\nccl\\python\\ops\\nccl_ops.py\", line 228, in _apply_all_reduce\r\n>     shared_name=shared_name))\r\n>   File \"D:\\Anaconda3\\envs\\tensorflow\\lib\\site-packages\\tensorflow\\contrib\\nccl\\ops\\gen_nccl_ops.py\", line 58, in nccl_all_reduce\r\n>     num_devices=num_devices, shared_name=shared_name, name=name)\r\n>   File \"D:\\Anaconda3\\envs\\tensorflow\\lib\\site-packages\\tensorflow\\python\\framework\\op_def_library.py\", line 787, in _apply_op_helper\r\n>     op_def=op_def)\r\n>   File \"D:\\Anaconda3\\envs\\tensorflow\\lib\\site-packages\\tensorflow\\python\\framework\\ops.py\", line 3414, in create_op\r\n>     op_def=op_def)\r\n>   File \"D:\\Anaconda3\\envs\\tensorflow\\lib\\site-packages\\tensorflow\\python\\framework\\ops.py\", line 1756, in __init__\r\n>     control_input_ops)\r\n>   File \"D:\\Anaconda3\\envs\\tensorflow\\lib\\site-packages\\tensorflow\\python\\framework\\ops.py\", line 1592, in _create_c_op\r\n>     raise ValueError(str(e))\r\n> ValueError: Op type not registered 'NcclAllReduce' in binary running on DESKTO Make sure the Op and Kernel are registered in the binary running in this process. Note that if you are loading a saved graph which used ops from tf.contrib, accessing (e.g.) `tf.contrib.resampler` should be done before importing the graph, as contrib ops are lazily registered when the module is first accessed. while building NodeDef 'NcclAllReduce'\r\n\r\n"}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/21459", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/21459/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/21459/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/21459/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/21459", "id": 348503531, "node_id": "MDU6SXNzdWUzNDg1MDM1MzE=", "number": 21459, "title": "Changing optimizer of restored network messes up training output", "user": {"login": "cnsmth", "id": 35533890, "node_id": "MDQ6VXNlcjM1NTMzODkw", "avatar_url": "https://avatars3.githubusercontent.com/u/35533890?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cnsmth", "html_url": "https://github.com/cnsmth", "followers_url": "https://api.github.com/users/cnsmth/followers", "following_url": "https://api.github.com/users/cnsmth/following{/other_user}", "gists_url": "https://api.github.com/users/cnsmth/gists{/gist_id}", "starred_url": "https://api.github.com/users/cnsmth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cnsmth/subscriptions", "organizations_url": "https://api.github.com/users/cnsmth/orgs", "repos_url": "https://api.github.com/users/cnsmth/repos", "events_url": "https://api.github.com/users/cnsmth/events{/privacy}", "received_events_url": "https://api.github.com/users/cnsmth/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 473184161, "node_id": "MDU6TGFiZWw0NzMxODQxNjE=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:support", "name": "type:support", "color": "159b2e", "default": false, "description": ""}], "state": "open", "locked": false, "assignee": {"login": "tatianashp", "id": 986732, "node_id": "MDQ6VXNlcjk4NjczMg==", "avatar_url": "https://avatars2.githubusercontent.com/u/986732?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tatianashp", "html_url": "https://github.com/tatianashp", "followers_url": "https://api.github.com/users/tatianashp/followers", "following_url": "https://api.github.com/users/tatianashp/following{/other_user}", "gists_url": "https://api.github.com/users/tatianashp/gists{/gist_id}", "starred_url": "https://api.github.com/users/tatianashp/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tatianashp/subscriptions", "organizations_url": "https://api.github.com/users/tatianashp/orgs", "repos_url": "https://api.github.com/users/tatianashp/repos", "events_url": "https://api.github.com/users/tatianashp/events{/privacy}", "received_events_url": "https://api.github.com/users/tatianashp/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "tatianashp", "id": 986732, "node_id": "MDQ6VXNlcjk4NjczMg==", "avatar_url": "https://avatars2.githubusercontent.com/u/986732?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tatianashp", "html_url": "https://github.com/tatianashp", "followers_url": "https://api.github.com/users/tatianashp/followers", "following_url": "https://api.github.com/users/tatianashp/following{/other_user}", "gists_url": "https://api.github.com/users/tatianashp/gists{/gist_id}", "starred_url": "https://api.github.com/users/tatianashp/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tatianashp/subscriptions", "organizations_url": "https://api.github.com/users/tatianashp/orgs", "repos_url": "https://api.github.com/users/tatianashp/repos", "events_url": "https://api.github.com/users/tatianashp/events{/privacy}", "received_events_url": "https://api.github.com/users/tatianashp/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 3, "created_at": "2018-08-07T22:02:38Z", "updated_at": "2019-01-25T22:17:42Z", "closed_at": null, "author_association": "NONE", "body": "### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**:\r\nYes\r\n\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**:\r\n Ubuntu 16.04.2 LTS (GNU/Linux 4.4.0-130-generic x86_64)\r\n\r\n- **Mobile device (e.g. iPhone 8, Pixel 2, Samsung Galaxy) if the issue happens on mobile device**:\r\nN/A\r\n\r\n- **TensorFlow installed from (source or binary)**:\r\nbinary\r\n\r\n- **TensorFlow version (use command below)**:\r\nv1.4.0-rc1-11-g130a514 1.4.0\r\n\r\n- **Python version**:\r\nPython 3.5.2\r\n\r\n- **Bazel version (if compiling from source)**:\r\nN/A\r\n\r\n- **GCC/Compiler version (if compiling from source)**:\r\nN/A\r\n\r\n- **CUDA/cuDNN version**:\r\nCuda compilation tools, release 8.0, V8.0.61\r\n\r\n- **GPU model and memory**:\r\nGeForce GTX 1080 Ti (11GB)\r\n\r\n- **Exact command to reproduce**:\r\n\r\n\r\n### Describe the problem\r\nI am trying to train a model to do face detection, using Resnet_v1_50 as a backbone net and restoring it from the checkpoint provided in tf-slim. I am following the paper \"MB-FCN for Face Detection\" in building my network. Initially trained with gradient descent, the model was converging slowly. When the optimizer was changed from Gradient Descent (which ResNet was trained with) to a different optimizer (momentum, adam) there were wildly different outputs, that were nowhere near correct even though the training and validation losses were lower and care was taken to initialize all weights for new variables (from momentum for example). There seems to perhaps be an issue with the tf Saver class (restoring variables goes wrong) or an issue changing the optimizer of a restored network from the one it was originally trained with. I also had this issue when using a different model for text detection (changing optimizer messing with output). Restoring the weights from the fine-tuned model with another optimizer goes wrong.\r\n\r\n### Source code / logs\r\nCode while training from ResNet:\r\n    global_step = tf.train.get_or_create_global_step()\r\n    with slim.arg_scope(resnet_v1.resnet_arg_scope()):\r\n        vars_to_restore = slim.get_variables_to_restore(['resnet_v1_50'])\r\n\r\n    optimizer = tf.train.GradientDescentOptimizer(0.001)\r\n    optimizer = optimizer.minimize(loss, global_step=global_step) \r\n\r\n    config = tf.ConfigProto(allow_soft_placement=True)\r\n    config.graph_options.optimizer_options.global_jit_level = tf.OptimizerOptions.ON_1\r\n    overall_saver = tf.train.Saver(slim.get_variables_to_restore())\r\n\r\n    with tf.Session(config=config) as sess:\r\n        resnet_model_path = 'backbone_net/resnet_v1_50.ckpt'\r\n        vars_to_initialize = []\r\n        all_vars = slim.get_variables_to_restore()\r\n        restored_vars = set(vars_to_restore)\r\n        for var in all_vars:\r\n            if var not in restored_vars:\r\n                vars_to_initialize.append(var)\r\n\r\n        restorer = tf.train.Saver(vars_to_restore)\r\n        restorer.restore(sess, resnet_model_path)\r\n        sess.run(tf.variables_initializer(vars_to_initialize))\r\n\r\nLine to save weights while training:\r\n        overall_saver.save(sess, 'weights/model.ckpt', global_step=global_step)\r\n\r\nCode to restore weights once fine-tuned:\r\n    iterator, init_op = create_dataset('test_imgs.csv', is_training=False)\r\n    b1_cls, b2_cls, b1_reg, b2_reg, ratio_h, ratio_w = mbfcn_model(iterator, is_training=False)\r\n\r\n    config = tf.ConfigProto(allow_soft_placement=True)\r\n    config.graph_options.optimizer_options.global_jit_level = tf.OptimizerOptions.ON_1\r\n\r\n    with tf.Session(config=config) as sess:\r\n        chkpt = 'weights/'\r\n        restorer = tf.train.Saver(slim.get_variables_to_restore())\r\n        restorer.restore(sess, tf.train.latest_checkpoint(chkpt))\r\n"}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/21458", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/21458/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/21458/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/21458/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/21458", "id": 348483890, "node_id": "MDU6SXNzdWUzNDg0ODM4OTA=", "number": 21458, "title": "speech recognition tutorial bug", "user": {"login": "ibeling", "id": 4720367, "node_id": "MDQ6VXNlcjQ3MjAzNjc=", "avatar_url": "https://avatars2.githubusercontent.com/u/4720367?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ibeling", "html_url": "https://github.com/ibeling", "followers_url": "https://api.github.com/users/ibeling/followers", "following_url": "https://api.github.com/users/ibeling/following{/other_user}", "gists_url": "https://api.github.com/users/ibeling/gists{/gist_id}", "starred_url": "https://api.github.com/users/ibeling/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ibeling/subscriptions", "organizations_url": "https://api.github.com/users/ibeling/orgs", "repos_url": "https://api.github.com/users/ibeling/repos", "events_url": "https://api.github.com/users/ibeling/events{/privacy}", "received_events_url": "https://api.github.com/users/ibeling/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 299643928, "node_id": "MDU6TGFiZWwyOTk2NDM5Mjg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:contributions%20welcome", "name": "stat:contributions welcome", "color": "f4b400", "default": false, "description": ""}, {"id": 473172988, "node_id": "MDU6TGFiZWw0NzMxNzI5ODg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:bug", "name": "type:bug", "color": "159b2e", "default": false, "description": ""}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2018-08-07T20:55:38Z", "updated_at": "2019-01-25T22:16:14Z", "closed_at": null, "author_association": "NONE", "body": "Have I written custom code no\r\nOS Platform and Distribution N/A\r\nTensorFlow installed from N/A\r\nTensorFlow version N/A\r\nBazel version N/A\r\nCUDA/cuDNN version N/A\r\nGPU model and memory N/A\r\nExact command to reproduce N/A\r\nMobile device N/A\r\n\r\nI'm doing the Speech Commands tutorial and looking at the low_latency_conv architecture here:\r\nhttps://github.com/tensorflow/tensorflow/blob/23c218785eac5bfe737eec4f8081fd0ef8e0684d/tensorflow/examples/speech_commands/models.py#L283-L302\r\n\r\nThe architecture is supposed to be cnn-one-fstride4 from this paper: https://www.isca-speech.org/archive/interspeech_2015/papers/i15_1478.pdf\r\n\r\nThe paper says \"The baseline DNN architecture consists of 3 hidden layers with 128 hidden units/layer and a softmax layer. Each hidden layer uses a rectified linear unit (ReLU) nonlinearity.\"\r\n\r\nHowever the network generated by the code only contains one ReLU. Subsequently, it just has three stacked MatMul operations with bias, and no interleaved nonlinearities. This is really equivalent to just one MatMul with bias, since you can compose such stacked operations.\r\n\r\nWhy are the additional ReLUs not included in this network?"}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/21454", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/21454/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/21454/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/21454/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/21454", "id": 348446563, "node_id": "MDU6SXNzdWUzNDg0NDY1NjM=", "number": 21454, "title": "Turning off Teacher Forcing in decoders of Seq2Seq models ", "user": {"login": "malsulaimi", "id": 31324944, "node_id": "MDQ6VXNlcjMxMzI0OTQ0", "avatar_url": "https://avatars2.githubusercontent.com/u/31324944?v=4", "gravatar_id": "", "url": "https://api.github.com/users/malsulaimi", "html_url": "https://github.com/malsulaimi", "followers_url": "https://api.github.com/users/malsulaimi/followers", "following_url": "https://api.github.com/users/malsulaimi/following{/other_user}", "gists_url": "https://api.github.com/users/malsulaimi/gists{/gist_id}", "starred_url": "https://api.github.com/users/malsulaimi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/malsulaimi/subscriptions", "organizations_url": "https://api.github.com/users/malsulaimi/orgs", "repos_url": "https://api.github.com/users/malsulaimi/repos", "events_url": "https://api.github.com/users/malsulaimi/events{/privacy}", "received_events_url": "https://api.github.com/users/malsulaimi/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1093464312, "node_id": "MDU6TGFiZWwxMDkzNDY0MzEy", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:others", "name": "type:others", "color": "159b2e", "default": false, "description": ""}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-08-07T18:58:00Z", "updated_at": "2020-02-08T01:12:14Z", "closed_at": null, "author_association": "NONE", "body": "Have I written custom code:N/A\r\nOS Platform and Distribution :macOS Sierra 10.12.6\r\nTensorFlow installed from : tensforflow.org\r\nTensorFlow version: TensorFlow Version: 1.3.0\r\nBazel version: NA\r\nCUDA/cuDNN version:NA\r\nGPU model and memory:NA\r\nExact command to reproduce:NA\r\nMobile device:NA\r\n\r\n\r\nHello , \r\n\r\nI'm posting this request here however I'm not sure if this is a new feature request or it is something already doable in tensorflow but I can not find find an example or any documentation about it  . \r\n\r\nGeting to the Point . I'm experimenting with  seq2seq models . I have followed all the examples available and all is good. Now my model uses Teacher forcing ( passing the true output to the decoder network during training ) and nI  would like to turn it off to see how the model performs without it . unfortunately I do not see any possible way to do it without making my own Helper . I tried to use the inferenceHelper during the Training instead of the TraningHelper. Since the inferenceHelper does not require the true output but the model gives a run time error after some epochs where inferenceHelper is returning predictions with shape other than the expected. my guess is that I inferenceHelper is not meant to be used during training ( as the name suggests) . \r\n\r\nis there a way to turn off the Teacher Forcing , if not are there any plans to incorporate this in Tensorflow ? \r\n\r\nmy original decoder network code : \r\n\r\n```\r\n`def decoding_layer_train(encoder_state, dec_cell, dec_embed_input, \r\n                     target_sequence_length, max_summary_length, \r\n                     output_layer, keep_prob):\r\n\"\"\"\r\nCreate a decoding layer for training\r\n:param encoder_state: Encoder State\r\n:param dec_cell: Decoder RNN Cell\r\n:param dec_embed_input: Decoder embedded input\r\n:param target_sequence_length: The lengths of each sequence in the target batch\r\n:param max_summary_length: The length of the longest sequence in the batch\r\n:param output_layer: Function to apply the output layer\r\n:param keep_prob: Dropout keep probability\r\n:return: BasicDecoderOutput containing training logits and sample_id\r\n\"\"\"\r\n\r\ntraining_helper = tf.contrib.seq2seq.TrainingHelper(inputs=dec_embed_input,\r\n                                                    sequence_length=target_sequence_length,\r\n                                                    time_major=False)\r\n\r\ntraining_decoder = tf.contrib.seq2seq.BasicDecoder(dec_cell, training_helper, encoder_state, output_layer)\r\n\r\ntraining_decoder_output = tf.contrib.seq2seq.dynamic_decode(training_decoder,\r\n                                                            impute_finished=True,\r\n                                                            maximum_iterations=max_summary_length)[0]\r\nreturn training_decoder_output\r\n````\r\n\r\n\r\n\r\nthank you "}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/21439", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/21439/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/21439/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/21439/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/21439", "id": 348250423, "node_id": "MDU6SXNzdWUzNDgyNTA0MjM=", "number": 21439, "title": "Reduce_sum error", "user": {"login": "Lillypucien", "id": 25703961, "node_id": "MDQ6VXNlcjI1NzAzOTYx", "avatar_url": "https://avatars1.githubusercontent.com/u/25703961?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Lillypucien", "html_url": "https://github.com/Lillypucien", "followers_url": "https://api.github.com/users/Lillypucien/followers", "following_url": "https://api.github.com/users/Lillypucien/following{/other_user}", "gists_url": "https://api.github.com/users/Lillypucien/gists{/gist_id}", "starred_url": "https://api.github.com/users/Lillypucien/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Lillypucien/subscriptions", "organizations_url": "https://api.github.com/users/Lillypucien/orgs", "repos_url": "https://api.github.com/users/Lillypucien/repos", "events_url": "https://api.github.com/users/Lillypucien/events{/privacy}", "received_events_url": "https://api.github.com/users/Lillypucien/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1097547147, "node_id": "MDU6TGFiZWwxMDk3NTQ3MTQ3", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/comp:ops", "name": "comp:ops", "color": "0052cc", "default": false, "description": ""}, {"id": 404586594, "node_id": "MDU6TGFiZWw0MDQ1ODY1OTQ=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:awaiting%20tensorflower", "name": "stat:awaiting tensorflower", "color": "f4b400", "default": false, "description": ""}, {"id": 473184161, "node_id": "MDU6TGFiZWw0NzMxODQxNjE=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:support", "name": "type:support", "color": "159b2e", "default": false, "description": ""}], "state": "open", "locked": false, "assignee": {"login": "rmlarsen", "id": 16907534, "node_id": "MDQ6VXNlcjE2OTA3NTM0", "avatar_url": "https://avatars2.githubusercontent.com/u/16907534?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rmlarsen", "html_url": "https://github.com/rmlarsen", "followers_url": "https://api.github.com/users/rmlarsen/followers", "following_url": "https://api.github.com/users/rmlarsen/following{/other_user}", "gists_url": "https://api.github.com/users/rmlarsen/gists{/gist_id}", "starred_url": "https://api.github.com/users/rmlarsen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rmlarsen/subscriptions", "organizations_url": "https://api.github.com/users/rmlarsen/orgs", "repos_url": "https://api.github.com/users/rmlarsen/repos", "events_url": "https://api.github.com/users/rmlarsen/events{/privacy}", "received_events_url": "https://api.github.com/users/rmlarsen/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "rmlarsen", "id": 16907534, "node_id": "MDQ6VXNlcjE2OTA3NTM0", "avatar_url": "https://avatars2.githubusercontent.com/u/16907534?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rmlarsen", "html_url": "https://github.com/rmlarsen", "followers_url": "https://api.github.com/users/rmlarsen/followers", "following_url": "https://api.github.com/users/rmlarsen/following{/other_user}", "gists_url": "https://api.github.com/users/rmlarsen/gists{/gist_id}", "starred_url": "https://api.github.com/users/rmlarsen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rmlarsen/subscriptions", "organizations_url": "https://api.github.com/users/rmlarsen/orgs", "repos_url": "https://api.github.com/users/rmlarsen/repos", "events_url": "https://api.github.com/users/rmlarsen/events{/privacy}", "received_events_url": "https://api.github.com/users/rmlarsen/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 2, "created_at": "2018-08-07T09:57:10Z", "updated_at": "2019-01-25T22:15:24Z", "closed_at": null, "author_association": "NONE", "body": "### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**: YES\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**: Windows 10 64 bits\r\n- **TensorFlow installed from (source or binary)**: binary\r\n- **TensorFlow version (use command below)**: 1.9.0\r\n- **Python version**: 3.5\r\n- **CUDA/cuDNN version**: 9.0 / v7\r\n- **GPU model and memory**: Nvidia GTX TITANX 12GB, driver up to date (398.82)\r\n- **Bazel version**: N/A\r\n- **Mobile device**: N/A\r\n- **Exact command to reproduce**:\r\n\r\n### Describe the problem\r\nHi,\r\n\r\nSee test case below. On this specific setting it happens that tf.reduce_sum returns wrong values, as attested by the loss which should always return 0, but does not in this case (see logs at the end).\r\n\r\nThe bug does not happen when running on CPU, or when batchSize is strictly lesser than 33, or when \"models\" tensor has only 3 dimensions (even if we increase its size), or when \"models\" is smaller, or when the reduce_sum is applied on all axes instead of the last axis.\r\n\r\nThe reduce_sum is also correct for the first 32 elements of its first dimension, and only goes wrong for the 33rd (and next) element(s). \r\n\r\nIf we replace the \"diff = inputTensor - inputTensor\" tensor by a tf.zeros tensor, the bug does not appear.\r\n\r\nThe bug also happens with other reducing tensorflow methods (such as tf.reduce_min, tf.reduce_max and tf.reduce_mean).\r\n\r\nThanks in advance\r\n\r\n### Source code / logs\r\n```\r\nimport tensorflow as tf\r\nimport numpy as np\r\nfrom random import random\r\n\r\nbatchSize = 33\r\n\r\nnp.random.seed(0)\r\nmodels = np.random.rand(batchSize, 2050, 2050, 2)\r\nmodels = np.asarray(models, dtype = \"float32\")\r\n\r\ndataPlaceholder = tf.placeholder(\"float32\", models.shape)\r\ninputTensor = dataPlaceholder\r\n\r\ndiff = inputTensor - inputTensor\r\n# diff = tf.zeros(inputTensor.shape)\r\n\r\nsum = tf.reduce_sum(diff, axis = 3)\r\n\r\nloss = tf.reduce_max(sum)\r\nloss = tf.Print(loss, [diff[batchSize-1,0,0], sum[batchSize-1,0,0]], message=\"diff[batchSize-1,0,0], reduce_sum[batchSize-1,0,0] : \")\r\n\r\nif __name__ == '__main__':\r\n\twith tf.Session() as sess:\r\n\t\tbatchLoss = sess.run(loss, feed_dict = {dataPlaceholder: models[:batchSize]})\r\n\t\tprint(\"batch loss : {}\".format(batchLoss))\r\n\r\n---------------------------------------------------\r\nbatch loss : 0.999999463558197\r\ndiff[batchSize-1,0,0], reduce_sum[batchSize-1,0,0] : [0 0][0.154408231]\r\n```"}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/21432", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/21432/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/21432/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/21432/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/21432", "id": 348209408, "node_id": "MDU6SXNzdWUzNDgyMDk0MDg=", "number": 21432, "title": "BUG: Initial values are still random, even both the graph-level and the operation seed are set", "user": {"login": "EdwardLin2014", "id": 8342812, "node_id": "MDQ6VXNlcjgzNDI4MTI=", "avatar_url": "https://avatars2.githubusercontent.com/u/8342812?v=4", "gravatar_id": "", "url": "https://api.github.com/users/EdwardLin2014", "html_url": "https://github.com/EdwardLin2014", "followers_url": "https://api.github.com/users/EdwardLin2014/followers", "following_url": "https://api.github.com/users/EdwardLin2014/following{/other_user}", "gists_url": "https://api.github.com/users/EdwardLin2014/gists{/gist_id}", "starred_url": "https://api.github.com/users/EdwardLin2014/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/EdwardLin2014/subscriptions", "organizations_url": "https://api.github.com/users/EdwardLin2014/orgs", "repos_url": "https://api.github.com/users/EdwardLin2014/repos", "events_url": "https://api.github.com/users/EdwardLin2014/events{/privacy}", "received_events_url": "https://api.github.com/users/EdwardLin2014/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 473184161, "node_id": "MDU6TGFiZWw0NzMxODQxNjE=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:support", "name": "type:support", "color": "159b2e", "default": false, "description": ""}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-08-07T07:58:58Z", "updated_at": "2020-02-08T01:12:18Z", "closed_at": null, "author_association": "NONE", "body": "### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**: No\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**: Linux Ubuntu Server & Window 10 \r\n- **Mobile device (e.g. iPhone 8, Pixel 2, Samsung Galaxy) if the issue happens on mobile device**:\r\n- **TensorFlow installed from (source or binary)**: binary\r\n- **TensorFlow version (use command below)**: v1.8.0-0-g93bc2e2072 & v1.9.0-0-g25c197e023\r\n- **Python version**: 3.6.2\r\n- **Bazel version (if compiling from source)**:\r\n- **GCC/Compiler version (if compiling from source)**: \r\n- **CUDA/cuDNN version**: V9.0.178\r\n- **GPU model and memory**: NVIDIA Tesla V100-SXM2-16GB & NVIDIA GeForce GTX 1080 Ti 11GB\r\n- **Exact command to reproduce**:\r\n\r\n### Source code / logs\r\n```\r\nimport tensorflow as tf\r\n\r\nseed = 1\r\ntf.set_random_seed(seed)\r\n\r\ninitializer1 = tf.orthogonal_initializer(gain=1.0, seed=seed, dtype=tf.float32)\r\nConv1W = tf.identity(tf.Variable(initializer1.__call__(shape=[3,3,1,64])),name='Conv1')\r\n\r\ninitializer2 = tf.orthogonal_initializer(gain=1.0, seed=seed, dtype=tf.float32)\r\nConv2W = tf.identity(tf.Variable(initializer2.__call__(shape=[3,3,64,64])),name='Conv2')\r\n\r\ninitializer3 = tf.orthogonal_initializer(gain=1.0, seed=seed, dtype=tf.float32)\r\nfc1W = tf.identity(tf.Variable(initializer3.__call__(shape=[39,14,64,372])),name='fc1')\r\n\r\ninitializer4 = tf.orthogonal_initializer(gain=1.0, seed=seed, dtype=tf.float32)\r\nfc2W = tf.identity(tf.Variable(initializer4.__call__(shape=[1,1,372,372])),name='fc2')\r\n\r\ninitializer5 = tf.orthogonal_initializer(gain=1.0, seed=seed, dtype=tf.float32)\r\nfc3W = tf.identity(tf.Variable(initializer5.__call__(shape=[1,1,372,1])),name='fc3')\r\n\r\nprint(\"Session 1\")\r\nwith tf.Session() as sess1:\r\n    tf.global_variables_initializer().run()\r\n    Conv1W_eval1 = sess1.run(Conv1W)\r\n    Conv2W_eval1 = sess1.run(Conv2W)\r\n    fc1W_eval1 = sess1.run(fc1W)\r\n    fc2W_eval1 = sess1.run(fc2W)\r\n    fc3W_eval1 = sess1.run(fc3W)\r\n\r\nprint(\"Session 2\")\r\nwith tf.Session() as sess2:\r\n    tf.global_variables_initializer().run()\r\n    Conv1W_eval2 = sess2.run(Conv1W)\r\n    Conv2W_eval2 = sess2.run(Conv2W)\r\n    fc1W_eval2 = sess2.run(fc1W)\r\n    fc2W_eval2 = sess2.run(fc2W)\r\n    fc3W_eval2 = sess2.run(fc3W)\r\nprint('--------------------------------------------------')\r\nprint('Conv1W? %d' % all(Conv1W_eval1==Conv1W_eval2))\r\nprint('Conv2W? %d' % all(Conv2W_eval1==Conv2W_eval2))\r\nprint('fc1W? %d' % all(fc1W_eval1==fc1W_eval2))\r\nprint('fc2W? %d' % all(fc2W_eval1==fc2W_eval2))\r\nprint('fc3W? %d' % all(fc3W_eval1==fc3W_eval2))\r\n\r\n```\r\n\r\n### Describe the problem\r\n\r\nBy executing the above code (one or two times), we can see that the initial value of the tensors, fc1W & fc2W are NOT always the same in both session, even though the graph-level and the operation seed are set.\r\n\r\nThe randomness seems to be depended on the shape of the tensors. For example, the initial value of the tensors, Conv1W and Conv2W are always the same.\r\n\r\nPutting all tf.Variable into/under each session has the same effect."}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/21417", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/21417/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/21417/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/21417/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/21417", "id": 348055866, "node_id": "MDU6SXNzdWUzNDgwNTU4NjY=", "number": 21417, "title": "Discrepancy between Python and C++ loading of corrupt SavedModels", "user": {"login": "priyankjain", "id": 4019056, "node_id": "MDQ6VXNlcjQwMTkwNTY=", "avatar_url": "https://avatars2.githubusercontent.com/u/4019056?v=4", "gravatar_id": "", "url": "https://api.github.com/users/priyankjain", "html_url": "https://github.com/priyankjain", "followers_url": "https://api.github.com/users/priyankjain/followers", "following_url": "https://api.github.com/users/priyankjain/following{/other_user}", "gists_url": "https://api.github.com/users/priyankjain/gists{/gist_id}", "starred_url": "https://api.github.com/users/priyankjain/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/priyankjain/subscriptions", "organizations_url": "https://api.github.com/users/priyankjain/orgs", "repos_url": "https://api.github.com/users/priyankjain/repos", "events_url": "https://api.github.com/users/priyankjain/events{/privacy}", "received_events_url": "https://api.github.com/users/priyankjain/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1097543484, "node_id": "MDU6TGFiZWwxMDk3NTQzNDg0", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/comp:runtime", "name": "comp:runtime", "color": "0052cc", "default": false, "description": "c++ runtime, performance issues (cpu)"}, {"id": 473172988, "node_id": "MDU6TGFiZWw0NzMxNzI5ODg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:bug", "name": "type:bug", "color": "159b2e", "default": false, "description": ""}], "state": "open", "locked": false, "assignee": {"login": "priyankjain", "id": 4019056, "node_id": "MDQ6VXNlcjQwMTkwNTY=", "avatar_url": "https://avatars2.githubusercontent.com/u/4019056?v=4", "gravatar_id": "", "url": "https://api.github.com/users/priyankjain", "html_url": "https://github.com/priyankjain", "followers_url": "https://api.github.com/users/priyankjain/followers", "following_url": "https://api.github.com/users/priyankjain/following{/other_user}", "gists_url": "https://api.github.com/users/priyankjain/gists{/gist_id}", "starred_url": "https://api.github.com/users/priyankjain/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/priyankjain/subscriptions", "organizations_url": "https://api.github.com/users/priyankjain/orgs", "repos_url": "https://api.github.com/users/priyankjain/repos", "events_url": "https://api.github.com/users/priyankjain/events{/privacy}", "received_events_url": "https://api.github.com/users/priyankjain/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "priyankjain", "id": 4019056, "node_id": "MDQ6VXNlcjQwMTkwNTY=", "avatar_url": "https://avatars2.githubusercontent.com/u/4019056?v=4", "gravatar_id": "", "url": "https://api.github.com/users/priyankjain", "html_url": "https://github.com/priyankjain", "followers_url": "https://api.github.com/users/priyankjain/followers", "following_url": "https://api.github.com/users/priyankjain/following{/other_user}", "gists_url": "https://api.github.com/users/priyankjain/gists{/gist_id}", "starred_url": "https://api.github.com/users/priyankjain/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/priyankjain/subscriptions", "organizations_url": "https://api.github.com/users/priyankjain/orgs", "repos_url": "https://api.github.com/users/priyankjain/repos", "events_url": "https://api.github.com/users/priyankjain/events{/privacy}", "received_events_url": "https://api.github.com/users/priyankjain/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 12, "created_at": "2018-08-06T19:40:03Z", "updated_at": "2019-01-25T22:14:08Z", "closed_at": null, "author_association": "NONE", "body": "\r\n### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**: YES\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**: MacOS High Seirra 10.13.6\r\n- **Mobile device (e.g. iPhone 8, Pixel 2, Samsung Galaxy) if the issue happens on mobile device**: NOT MOBILE\r\n- **TensorFlow installed from (source or binary)**: binary\r\n- **TensorFlow version (use command below)**: ('v1.9.0-0-g25c197e023', '1.9.0')\r\n- **Python version**:Python 2.7.10\r\n- **Bazel version (if compiling from source)**: N/A\r\n- **GCC/Compiler version (if compiling from source)**: N/A\r\n- **CUDA/cuDNN version**: N/A\r\n- **GPU model and memory**: N/A\r\n- **Exact command to reproduce**: \r\n \t- Train and export the MNIST model with `python mnist.py`. This will export a model in tmp directory in the same folder as mnist.py script.\r\n\r\n \t-  Remove the variables.index file from ./tmp/mnist_model/15*/variables/ folder. This is an important step required to reproduce the partial model load issue.\r\n\t- Load the model in python with load.py (might want to change path on line 6) by executing\r\n\t`python load.py`. This should throw an error. Expected behavior.\r\n\t- Load the model in java with Load.java (might want to change path on line 6) by executing\r\n\t`javac -cp libtensorflow-1.9.0.jar Load.java` and\r\n\t`java -cp libtensorflow-1.9.0.jar:. -Djava.library.path=./jni Load`. This does not throw an error. Only when you send some input data to this model does it throw an error. Unexpected behavior.\r\n\r\n### Describe the problem\r\nThis bug is to illustrate the partial model load discrepancy in the Python and Java API.\r\n\r\n- The exported model directory consists of a saved_model.pb file corresponding to the \r\ngraph of the exported model. The directory also consists of a variables directory. This variables\r\ndirectory consists of a variables.index file which list the variables used by the model and a variables.data file. Note that it is possible to have a model with no variables directory for a model with zero variables.\r\n\r\n\r\n- Situation: In cases where model does not have the variables.index file, Python API throws an exception whereas Java API doesn't throw an exception.\r\n\r\nIf you load the partial model in Python with\r\n\r\n`tf.saved_model.loader.load`\r\nthe missing variables.index file issue is caught and it throws an error. This is because, in python when it loads the model, it restores the variables too: https://github.com/tensorflow/tensorflow/blob/master/tensorflow/python/saved_model/loader_impl.py#L349. It sees that some of the variables needed in the graph, are not specified via the variables.index file, hence results in UndefinedError.\r\n\r\nIf you load the partial model in Java with\r\n\r\n`SavedModelBundle.load`\r\nthe missing variables.index file issue is not caught and therefore it does not throw an error. This is because in Java, when it loads the model: https://github.com/tensorflow/tensorflow/blob/master/tensorflow/cc/saved_model/loader.cc#L171, it sees that the variables.index file is missing, hence makes the assumption that the graph does not have any variables.\r\n\r\n\r\n\r\n\r\n\r\n### Source code / logs\r\nmnist.py\r\n```python\r\nimport tensorflow as tf\r\nimport numpy as np\r\n\r\nfrom tensorflow.examples.tutorials.mnist import input_data\r\nmnist = input_data.read_data_sets('MNIST_data')\r\n\r\ndef input(dataset):\r\n    return dataset.images, dataset.labels.astype(np.int32)\r\n\r\n# Specify feature\r\nfeature_columns = [tf.feature_column.numeric_column(\"x\", shape=[28, 28])]\r\n\r\n# Build 2 layer DNN classifier\r\nclassifier = tf.estimator.DNNClassifier(\r\n    feature_columns=feature_columns,\r\n    hidden_units=[256, 32],\r\n    optimizer=tf.train.AdamOptimizer(1e-4),\r\n    n_classes=10,\r\n    dropout=0.1,\r\n    model_dir=\"./tmp/mnist_model\"\r\n)\r\n\r\n# Define the training inputs\r\ntrain_input_fn = tf.estimator.inputs.numpy_input_fn(\r\n    x={\"x\": input(mnist.train)[0]},\r\n    y=input(mnist.train)[1],\r\n    num_epochs=None,\r\n    batch_size=50,\r\n    shuffle=True\r\n)\r\n\r\nclassifier.train(input_fn=train_input_fn, steps=100)\r\n\r\n# Define the test inputs\r\ntest_input_fn = tf.estimator.inputs.numpy_input_fn(\r\n    x={\"x\": input(mnist.test)[0]},\r\n    y=input(mnist.test)[1],\r\n    num_epochs=1,\r\n    shuffle=False\r\n)\r\n\r\n# Evaluate accuracy\r\naccuracy_score = classifier.evaluate(input_fn=test_input_fn)[\"accuracy\"]\r\nprint(\"\\nTest Accuracy: {0:f}%\\n\".format(accuracy_score*100))\r\nimage = tf.placeholder(tf.float32,[None])\r\nclassifier.export_savedmodel(\"./tmp/mnist_model\", \r\n\ttf.estimator.export.build_raw_serving_input_receiver_fn({\"x\":image}))\r\n```\r\n\r\nload.py (might want to change path in line 6)\r\n```python\r\nimport tensorflow as tf \r\n\r\nsess = tf.Session()\r\ntf.saved_model.loader.load(sess, \r\n\t[tf.saved_model.tag_constants.SERVING],\r\n\t'./tmp/mnist_model/1533576273')\r\n```\r\n\r\nLoad.java (might want to change path in line 6)\r\n```java\r\nimport org.tensorflow.SavedModelBundle;\r\n\r\npublic class Load {\r\n  public static void main(String[] args) throws Exception {\r\n  \tSavedModelBundle savedModelBundle = SavedModelBundle.load(\r\n  \t\t\"./tmp/mnist_model/1533576273/\", \"serve\");\r\n  }\r\n}\r\n```\r\n\r\nHere's the output when loading the model in python:\r\n```sh\r\n$ python load.py\r\n/Users/priyankj/lib/python2.7/site-packages/h5py/__init__.py:36: FutureWarning: Conversion of the second argument of issubdtype from `float` to `np.floating` is deprecated. In future, it will be treated as `np.float64 == np.dtype(float).type`.\r\n  from ._conv import register_converters as _register_converters\r\n2018-08-06 15:27:37.363952: I tensorflow/core/platform/cpu_feature_guard.cc:141] Your CPU supports instructions that this TensorFlow binary was not compiled to use: AVX2 FMA\r\n2018-08-06 15:27:37.411644: W tensorflow/core/framework/op_kernel.cc:1318] OP_REQUIRES failed at save_restore_tensor.cc:170 : Not found: Unsuccessful TensorSliceReader constructor: Failed to find any matching files for ./tmp/mnist_model/1533576273/variables/variables\r\nTraceback (most recent call last):\r\n  File \"load.py\", line 6, in <module>\r\n    './tmp/mnist_model/1533576273')\r\n  File \"/Users/priyankj/lib/python2.7/site-packages/tensorflow/python/saved_model/loader_impl.py\", line 229, in load\r\n    saver.restore(sess, variables_path)\r\n  File \"/Users/priyankj/lib/python2.7/site-packages/tensorflow/python/training/saver.py\", line 1768, in restore\r\n    six.reraise(exception_type, exception_value, exception_traceback)\r\n  File \"/Users/priyankj/lib/python2.7/site-packages/tensorflow/python/training/saver.py\", line 1752, in restore\r\n    {self.saver_def.filename_tensor_name: save_path})\r\n  File \"/Users/priyankj/lib/python2.7/site-packages/tensorflow/python/client/session.py\", line 900, in run\r\n    run_metadata_ptr)\r\n  File \"/Users/priyankj/lib/python2.7/site-packages/tensorflow/python/client/session.py\", line 1135, in _run\r\n    feed_dict_tensor, options, run_metadata)\r\n  File \"/Users/priyankj/lib/python2.7/site-packages/tensorflow/python/client/session.py\", line 1316, in _do_run\r\n    run_metadata)\r\n  File \"/Users/priyankj/lib/python2.7/site-packages/tensorflow/python/client/session.py\", line 1335, in _do_call\r\n    raise type(e)(node_def, op, message)\r\ntensorflow.python.framework.errors_impl.NotFoundError: Unsuccessful TensorSliceReader constructor: Failed to find any matching files for ./tmp/mnist_model/1533576273/variables/variables\r\n\t [[Node: save_1/RestoreV2 = RestoreV2[dtypes=[DT_FLOAT, DT_FLOAT, DT_FLOAT, DT_FLOAT, DT_FLOAT, DT_FLOAT, DT_INT64], _device=\"/job:localhost/replica:0/task:0/device:CPU:0\"](_arg_save_1/Const_0_0, save_1/RestoreV2/tensor_names, save_1/RestoreV2/shape_and_slices)]]\r\n\r\nCaused by op u'save_1/RestoreV2', defined at:\r\n  File \"load.py\", line 6, in <module>\r\n    './tmp/mnist_model/1533576273')\r\n  File \"/Users/priyankj/lib/python2.7/site-packages/tensorflow/python/saved_model/loader_impl.py\", line 219, in load\r\n    saver = tf_saver.import_meta_graph(meta_graph_def_to_load, **saver_kwargs)\r\n  File \"/Users/priyankj/lib/python2.7/site-packages/tensorflow/python/training/saver.py\", line 1960, in import_meta_graph\r\n    **kwargs)\r\n  File \"/Users/priyankj/lib/python2.7/site-packages/tensorflow/python/framework/meta_graph.py\", line 744, in import_scoped_meta_graph\r\n    producer_op_list=producer_op_list)\r\n  File \"/Users/priyankj/lib/python2.7/site-packages/tensorflow/python/util/deprecation.py\", line 432, in new_func\r\n    return func(*args, **kwargs)\r\n  File \"/Users/priyankj/lib/python2.7/site-packages/tensorflow/python/framework/importer.py\", line 442, in import_graph_def\r\n    _ProcessNewOps(graph)\r\n  File \"/Users/priyankj/lib/python2.7/site-packages/tensorflow/python/framework/importer.py\", line 234, in _ProcessNewOps\r\n    for new_op in graph._add_new_tf_operations(compute_devices=False):  # pylint: disable=protected-access\r\n  File \"/Users/priyankj/lib/python2.7/site-packages/tensorflow/python/framework/ops.py\", line 3563, in _add_new_tf_operations\r\n    for c_op in c_api_util.new_tf_operations(self)\r\n  File \"/Users/priyankj/lib/python2.7/site-packages/tensorflow/python/framework/ops.py\", line 3450, in _create_op_from_tf_operation\r\n    ret = Operation(c_op, self)\r\n  File \"/Users/priyankj/lib/python2.7/site-packages/tensorflow/python/framework/ops.py\", line 1740, in __init__\r\n    self._traceback = self._graph._extract_stack()  # pylint: disable=protected-access\r\n\r\nNotFoundError (see above for traceback): Unsuccessful TensorSliceReader constructor: Failed to find any matching files for ./tmp/mnist_model/1533576273/variables/variables\r\n\t [[Node: save_1/RestoreV2 = RestoreV2[dtypes=[DT_FLOAT, DT_FLOAT, DT_FLOAT, DT_FLOAT, DT_FLOAT, DT_FLOAT, DT_INT64], _device=\"/job:localhost/replica:0/task:0/device:CPU:0\"](_arg_save_1/Const_0_0, save_1/RestoreV2/tensor_names, save_1/RestoreV2/shape_and_slices)]]\r\n```\r\n\r\nHere's the output of loading the model in Java:\r\n```sh\r\n$ javac -cp libtensorflow-1.9.0.jar Load.java\r\n$ java -cp libtensorflow-1.9.0.jar:. -Djava.library.path=./jni Load\r\n2018-08-06 14:56:48.242783: I tensorflow/cc/saved_model/loader.cc:242] Loading SavedModel with tags: { serve }; from: ./tmp/mnist_model/1533576273/\r\n2018-08-06 14:56:48.244329: I tensorflow/core/platform/cpu_feature_guard.cc:141] Your CPU supports instructions that this TensorFlow binary was not compiled to use: SSE4.2 AVX AVX2 FMA\r\n2018-08-06 14:56:48.246854: I tensorflow/cc/saved_model/loader.cc:161] Restoring SavedModel bundle.\r\n2018-08-06 14:56:48.246888: I tensorflow/cc/saved_model/loader.cc:171] The specified SavedModel has no variables; no checkpoints were restored.\r\n2018-08-06 14:56:48.246894: I tensorflow/cc/saved_model/loader.cc:196] Running LegacyInitOp on SavedModel bundle.\r\n2018-08-06 14:56:48.250752: I tensorflow/cc/saved_model/loader.cc:291] SavedModel load for tags { serve }; Status: success. Took 8012 microseconds.\r\n```"}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/21409", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/21409/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/21409/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/21409/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/21409", "id": 347931733, "node_id": "MDU6SXNzdWUzNDc5MzE3MzM=", "number": 21409, "title": "[Feature Request] Main improvements for the c++-API", "user": {"login": "PinkySan", "id": 25133849, "node_id": "MDQ6VXNlcjI1MTMzODQ5", "avatar_url": "https://avatars1.githubusercontent.com/u/25133849?v=4", "gravatar_id": "", "url": "https://api.github.com/users/PinkySan", "html_url": "https://github.com/PinkySan", "followers_url": "https://api.github.com/users/PinkySan/followers", "following_url": "https://api.github.com/users/PinkySan/following{/other_user}", "gists_url": "https://api.github.com/users/PinkySan/gists{/gist_id}", "starred_url": "https://api.github.com/users/PinkySan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/PinkySan/subscriptions", "organizations_url": "https://api.github.com/users/PinkySan/orgs", "repos_url": "https://api.github.com/users/PinkySan/repos", "events_url": "https://api.github.com/users/PinkySan/events{/privacy}", "received_events_url": "https://api.github.com/users/PinkySan/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1097545817, "node_id": "MDU6TGFiZWwxMDk3NTQ1ODE3", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/comp:apis", "name": "comp:apis", "color": "0052cc", "default": false, "description": ""}, {"id": 299643928, "node_id": "MDU6TGFiZWwyOTk2NDM5Mjg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:contributions%20welcome", "name": "stat:contributions welcome", "color": "f4b400", "default": false, "description": ""}, {"id": 473173272, "node_id": "MDU6TGFiZWw0NzMxNzMyNzI=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:feature", "name": "type:feature", "color": "159b2e", "default": false, "description": ""}], "state": "open", "locked": false, "assignee": {"login": "gunan", "id": 7946809, "node_id": "MDQ6VXNlcjc5NDY4MDk=", "avatar_url": "https://avatars3.githubusercontent.com/u/7946809?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gunan", "html_url": "https://github.com/gunan", "followers_url": "https://api.github.com/users/gunan/followers", "following_url": "https://api.github.com/users/gunan/following{/other_user}", "gists_url": "https://api.github.com/users/gunan/gists{/gist_id}", "starred_url": "https://api.github.com/users/gunan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gunan/subscriptions", "organizations_url": "https://api.github.com/users/gunan/orgs", "repos_url": "https://api.github.com/users/gunan/repos", "events_url": "https://api.github.com/users/gunan/events{/privacy}", "received_events_url": "https://api.github.com/users/gunan/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "gunan", "id": 7946809, "node_id": "MDQ6VXNlcjc5NDY4MDk=", "avatar_url": "https://avatars3.githubusercontent.com/u/7946809?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gunan", "html_url": "https://github.com/gunan", "followers_url": "https://api.github.com/users/gunan/followers", "following_url": "https://api.github.com/users/gunan/following{/other_user}", "gists_url": "https://api.github.com/users/gunan/gists{/gist_id}", "starred_url": "https://api.github.com/users/gunan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gunan/subscriptions", "organizations_url": "https://api.github.com/users/gunan/orgs", "repos_url": "https://api.github.com/users/gunan/repos", "events_url": "https://api.github.com/users/gunan/events{/privacy}", "received_events_url": "https://api.github.com/users/gunan/received_events", "type": "User", "site_admin": false}, {"login": "cy89", "id": 29663194, "node_id": "MDQ6VXNlcjI5NjYzMTk0", "avatar_url": "https://avatars0.githubusercontent.com/u/29663194?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cy89", "html_url": "https://github.com/cy89", "followers_url": "https://api.github.com/users/cy89/followers", "following_url": "https://api.github.com/users/cy89/following{/other_user}", "gists_url": "https://api.github.com/users/cy89/gists{/gist_id}", "starred_url": "https://api.github.com/users/cy89/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cy89/subscriptions", "organizations_url": "https://api.github.com/users/cy89/orgs", "repos_url": "https://api.github.com/users/cy89/repos", "events_url": "https://api.github.com/users/cy89/events{/privacy}", "received_events_url": "https://api.github.com/users/cy89/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 6, "created_at": "2018-08-06T13:48:30Z", "updated_at": "2019-11-23T06:04:02Z", "closed_at": null, "author_association": "CONTRIBUTOR", "body": "### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**: a bit, but this is not the problem\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**: Windows 10 64 Bit\r\n- **Mobile device (e.g. iPhone 8, Pixel 2, Samsung Galaxy) if the issue happens on mobile device**: No\r\n- **TensorFlow installed from (source or binary)**: source\r\n- **TensorFlow version (use command below)**: every version\r\n- **Python version**: no python bindings\r\n- **Bazel version (if compiling from source)**: using cmake\r\n- **GCC/Compiler version (if compiling from source)**: MSVC 1910\r\n- **CUDA/cuDNN version**: no\r\n- **GPU model and memory**: no\r\n- **Exact command to reproduce**: not necessary\r\n\r\n## Main improvements for the c++-API.\r\nI am really having a lot of trouble using the tensorflow api with c++. Building from sources took some time, but i fixed it. At the moment i am able to train a basic model, but not really further. I would really appreciate, if you take a look at these points \r\n\r\n### Very Important\r\n- Official support for c++\r\n- Offer downloading the c++ built binaries for Windows and Linux, CPU and GPU, 64bit\r\n- Way more examples for c++ (tried some [here](https://github.com/PinkySan/TensorflowHandlingTests))\r\n- Exporting the models must be supported (e.g. simple Save) (tried it [here](https://github.com/PinkySan/TensorflowSimpleSaver))\r\n\r\n### Important\r\n- Focussing the error is out of heap space building-problem\r\n- Building the static library without the shared library (both in the same cmake file)\r\n\r\n### Nice to have\r\n- Conanize the build (externals should be conan packages)\r\n- Conanize tensorflow itself\r\n\r\n\r\nIf anyone else got other ideas or problems, feel free to add these"}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/21403", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/21403/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/21403/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/21403/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/21403", "id": 347860589, "node_id": "MDU6SXNzdWUzNDc4NjA1ODk=", "number": 21403, "title": "Crash during folder creation from Estimator exporter.py in Python 3.6", "user": {"login": "apacha", "id": 594497, "node_id": "MDQ6VXNlcjU5NDQ5Nw==", "avatar_url": "https://avatars1.githubusercontent.com/u/594497?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apacha", "html_url": "https://github.com/apacha", "followers_url": "https://api.github.com/users/apacha/followers", "following_url": "https://api.github.com/users/apacha/following{/other_user}", "gists_url": "https://api.github.com/users/apacha/gists{/gist_id}", "starred_url": "https://api.github.com/users/apacha/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apacha/subscriptions", "organizations_url": "https://api.github.com/users/apacha/orgs", "repos_url": "https://api.github.com/users/apacha/repos", "events_url": "https://api.github.com/users/apacha/events{/privacy}", "received_events_url": "https://api.github.com/users/apacha/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1097545817, "node_id": "MDU6TGFiZWwxMDk3NTQ1ODE3", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/comp:apis", "name": "comp:apis", "color": "0052cc", "default": false, "description": ""}, {"id": 473172988, "node_id": "MDU6TGFiZWw0NzMxNzI5ODg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:bug", "name": "type:bug", "color": "159b2e", "default": false, "description": ""}], "state": "open", "locked": false, "assignee": {"login": "rohan100jain", "id": 144114, "node_id": "MDQ6VXNlcjE0NDExNA==", "avatar_url": "https://avatars2.githubusercontent.com/u/144114?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rohan100jain", "html_url": "https://github.com/rohan100jain", "followers_url": "https://api.github.com/users/rohan100jain/followers", "following_url": "https://api.github.com/users/rohan100jain/following{/other_user}", "gists_url": "https://api.github.com/users/rohan100jain/gists{/gist_id}", "starred_url": "https://api.github.com/users/rohan100jain/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rohan100jain/subscriptions", "organizations_url": "https://api.github.com/users/rohan100jain/orgs", "repos_url": "https://api.github.com/users/rohan100jain/repos", "events_url": "https://api.github.com/users/rohan100jain/events{/privacy}", "received_events_url": "https://api.github.com/users/rohan100jain/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "rohan100jain", "id": 144114, "node_id": "MDQ6VXNlcjE0NDExNA==", "avatar_url": "https://avatars2.githubusercontent.com/u/144114?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rohan100jain", "html_url": "https://github.com/rohan100jain", "followers_url": "https://api.github.com/users/rohan100jain/followers", "following_url": "https://api.github.com/users/rohan100jain/following{/other_user}", "gists_url": "https://api.github.com/users/rohan100jain/gists{/gist_id}", "starred_url": "https://api.github.com/users/rohan100jain/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rohan100jain/subscriptions", "organizations_url": "https://api.github.com/users/rohan100jain/orgs", "repos_url": "https://api.github.com/users/rohan100jain/repos", "events_url": "https://api.github.com/users/rohan100jain/events{/privacy}", "received_events_url": "https://api.github.com/users/rohan100jain/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 11, "created_at": "2018-08-06T10:08:45Z", "updated_at": "2019-07-27T08:43:10Z", "closed_at": null, "author_association": "NONE", "body": "### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**: No\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**: Windows 10\r\n- **TensorFlow installed from (source or binary)**: binary\r\n- **TensorFlow version (use command below)**: 1.8.0 and 1.9.0\r\n- **Python version**: 3.6\r\n- **GPU model and memory**: GTX 1080 Ti\r\n- **Exact command to reproduce**: See [here](https://github.com/tensorflow/models/issues/4996#issue-347431961)\r\n\r\n### Describe the problem\r\nWhen exporting of a snapshot during training with Estimator, [`export.py`](https://github.com/tensorflow/tensorflow/blob/e70f94ee089abbb9eb70361b5cdef55aa9beb18b/tensorflow/python/estimator/export/export.py#L600) creates an invalid path with Python 3.6, due to handling of strings as bytes (!!!). \r\n\r\nIn [`estimator.py`](https://github.com/tensorflow/tensorflow/blob/e70f94ee089abbb9eb70361b5cdef55aa9beb18b/tensorflow/python/estimator/estimator.py#L779), the following string is generated for the variable `export_dir`: `b'C:/Users/Alex/pet-train\\\\export\\\\Servo\\\\1533549311'`, which is afterwards corrupted by the `get_temp_export_dir` command, which defaces it into `b\"C:/Users/Alex/pet-train\\\\export\\\\Servo\\\\temp-b'1533549311'\"` which further down the road causes the program to crash with the following exception:\r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \"C:\\Program Files\\JetBrains\\PyCharm 2018.1.2\\helpers\\pydev\\pydevd.py\", line 1664, in <module>\r\n    main()\r\n  File \"C:\\Program Files\\JetBrains\\PyCharm 2018.1.2\\helpers\\pydev\\pydevd.py\", line 1658, in main\r\n    globals = debugger.run(setup['file'], None, None, is_module)\r\n  File \"C:\\Program Files\\JetBrains\\PyCharm 2018.1.2\\helpers\\pydev\\pydevd.py\", line 1068, in run\r\n    pydev_imports.execfile(file, globals, locals)  # execute the script\r\n  File \"C:\\Program Files\\JetBrains\\PyCharm 2018.1.2\\helpers\\pydev\\_pydev_imps\\_pydev_execfile.py\", line 18, in execfile\r\n    exec(compile(contents+\"\\n\", file, 'exec'), glob, loc)\r\n  File \"C:/Users/Alex/Repositories/MusicObjectDetector-TF2/research/object_detection/model_main.py\", line 101, in <module>\r\n    tf.app.run()\r\n  File \"C:\\Programmieren\\Anaconda3\\lib\\site-packages\\tensorflow\\python\\platform\\app.py\", line 126, in run\r\n    _sys.exit(main(argv))\r\n  File \"C:/Users/Alex/Repositories/MusicObjectDetector-TF2/research/object_detection/model_main.py\", line 97, in main\r\n    tf.estimator.train_and_evaluate(estimator, train_spec, eval_specs[0])\r\n  File \"C:\\Programmieren\\Anaconda3\\lib\\site-packages\\tensorflow\\python\\estimator\\training.py\", line 439, in train_and_evaluate\r\n    executor.run()\r\n  File \"C:\\Programmieren\\Anaconda3\\lib\\site-packages\\tensorflow\\python\\estimator\\training.py\", line 518, in run\r\n    self.run_local()\r\n  File \"C:\\Programmieren\\Anaconda3\\lib\\site-packages\\tensorflow\\python\\estimator\\training.py\", line 657, in run_local\r\n    eval_result = evaluator.evaluate_and_export()\r\n  File \"C:\\Programmieren\\Anaconda3\\lib\\site-packages\\tensorflow\\python\\estimator\\training.py\", line 858, in evaluate_and_export\r\n    self._export_eval_result(eval_result, is_the_final_export)\r\n  File \"C:\\Programmieren\\Anaconda3\\lib\\site-packages\\tensorflow\\python\\estimator\\training.py\", line 889, in _export_eval_result\r\n    is_the_final_export=is_the_final_export)\r\n  File \"C:\\Programmieren\\Anaconda3\\lib\\site-packages\\tensorflow\\python\\estimator\\exporter.py\", line 177, in export\r\n    is_the_final_export)\r\n  File \"C:\\Programmieren\\Anaconda3\\lib\\site-packages\\tensorflow\\python\\estimator\\exporter.py\", line 123, in export\r\n    strip_default_attrs=self._strip_default_attrs)\r\n  File \"C:\\Programmieren\\Anaconda3\\lib\\site-packages\\tensorflow\\python\\estimator\\estimator.py\", line 644, in export_savedmodel\r\n    builder = saved_model_builder.SavedModelBuilder(temp_export_dir)\r\n  File \"C:\\Programmieren\\Anaconda3\\lib\\site-packages\\tensorflow\\python\\saved_model\\builder_impl.py\", line 92, in __init__\r\n    file_io.recursive_create_dir(self._export_dir)\r\n  File \"C:\\Programmieren\\Anaconda3\\lib\\site-packages\\tensorflow\\python\\lib\\io\\file_io.py\", line 374, in recursive_create_dir\r\n    pywrap_tensorflow.RecursivelyCreateDir(compat.as_bytes(dirname), status)\r\n  File \"C:\\Programmieren\\Anaconda3\\lib\\site-packages\\tensorflow\\python\\framework\\errors_impl.py\", line 519, in __exit__\r\n    c_api.TF_GetCode(self.status.status))\r\ntensorflow.python.framework.errors_impl.NotFoundError: Failed to create a directory: C:/Users/Alex/pet-train\\export\\Servo\\temp-b'1533549311'; No such file or directory\r\n\r\nProcess finished with exit code -1\r\n```\r\n"}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/21400", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/21400/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/21400/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/21400/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/21400", "id": 347827287, "node_id": "MDU6SXNzdWUzNDc4MjcyODc=", "number": 21400, "title": "contrib.rnn.ConvLSTMCell: zero_state has wrong size if cell has skip connections", "user": {"login": "sunsibar", "id": 9898285, "node_id": "MDQ6VXNlcjk4OTgyODU=", "avatar_url": "https://avatars0.githubusercontent.com/u/9898285?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sunsibar", "html_url": "https://github.com/sunsibar", "followers_url": "https://api.github.com/users/sunsibar/followers", "following_url": "https://api.github.com/users/sunsibar/following{/other_user}", "gists_url": "https://api.github.com/users/sunsibar/gists{/gist_id}", "starred_url": "https://api.github.com/users/sunsibar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sunsibar/subscriptions", "organizations_url": "https://api.github.com/users/sunsibar/orgs", "repos_url": "https://api.github.com/users/sunsibar/repos", "events_url": "https://api.github.com/users/sunsibar/events{/privacy}", "received_events_url": "https://api.github.com/users/sunsibar/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 299643928, "node_id": "MDU6TGFiZWwyOTk2NDM5Mjg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:contributions%20welcome", "name": "stat:contributions welcome", "color": "f4b400", "default": false, "description": ""}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2018-08-06T08:30:45Z", "updated_at": "2018-08-29T09:34:14Z", "closed_at": null, "author_association": "NONE", "body": "There seems to be a bug in how ConvLSTMCell handles its states:\r\n\r\nWhen calculating the output size, ConvLSTMCell has one more channel dimension (in general, as many more channels as there are input channels) than what was given as output_channels. \r\nThis is only if skip_connection was True at initialization, **and makes sense** (the input is concatenated to the output --> n_channels_out = n_channels_in + original_n_channels_out).\r\n\r\nAlso, when creating a cell and applying it to inputs and a state:\r\n### Minimal reproducible example\r\n```\r\ncell = tf.contrib.rnn.ConvLSTMCell(conv_ndims=2, input_shape=[80,80,1], output_channels=2,\r\n                                               kernel_shape=[5,5], skip_connection=True)\r\nstate= cell.zero_state(10, dtype=tf.float32)\r\noutput, next_state = cell(last_outputs, state)\r\n```\r\n\r\n--> next_state is an LSTMStateTuple with shapes (?, 80, 80, 2) and (?, 80, 80, **3**). Still makes sense since it stores its hidden state as well as outputs and re-uses them in the next timestep, and the outputs gained an additional channel. But cell.zero_state() will have other shapes ( (?, 80, 80, 2) and (?, 80, 80, 2).)\r\n\r\n\r\nThe zero_state() calculation seems wrong; the code reads (in contrib/rnn/python/ops/rnn_cell.py):\r\n\r\n```\r\n    self._total_output_channels = output_channels\r\n    if self._skip_connection:\r\n      self._total_output_channels += self._input_shape[-1]\r\n\r\n    state_size = tensor_shape.TensorShape(\r\n        self._input_shape[:-1] + [self._output_channels])\r\n    self._state_size = rnn_cell_impl.LSTMStateTuple(state_size, state_size)\r\n    self._output_size = tensor_shape.TensorShape(\r\n        self._input_shape[:-1] + [self._total_output_channels])\r\n```\r\n\r\nShouldn't it be not` rnn_cell_impl.LSTMStateTuple(state_size, state_size)`, but `rnn_cell_impl.LSTMStateTuple(state_size, self._output_size)` ?\r\n\r\nFunnily, it does not disturb the cell to be called with a state of size (80, 80, **2**)   - but for me it raised an error when called again with its next state which has size (80, 80, 3). For completeness, this error was (and this error is _not my problem_, my problem was inconsistency of shapes of the cell states): \r\n\r\n> Traceback (most recent call last):\r\n  File \"/home/me/programs/pycharm-community-2016.1.1/helpers/pydev/_pydevd_bundle/pydevd_comm.py\", line 1079, in do_it\r\n    result = pydevd_vars.evaluate_expression(self.thread_id, self.frame_id, self.expression, self.doExec)\r\n  File \"/home/me/programs/pycharm-community-2016.1.1/helpers/pydev/_pydevd_bundle/pydevd_vars.py\", line 352, in evaluate_expression\r\n    Exec(expression, updated_globals, frame.f_locals)\r\n  File \"/home/me/programs/pycharm-community-2016.1.1/helpers/pydev/_pydevd_bundle/pydevd_exec2.py\", line 3, in Exec\r\n    exec(exp, global_vars, local_vars)\r\n  File \"<string>\", line 1, in <module>\r\n  File \"/home/me/miniconda3/envs/tf36/lib/python3.6/site-packages/tensorflow/python/ops/rnn_cell_impl.py\", line 232, in __call__\r\n    return super(RNNCell, self).__call__(inputs, state)\r\n  File \"/home/me/miniconda3/envs/tf36/lib/python3.6/site-packages/tensorflow/python/layers/base.py\", line 717, in __call__\r\n    outputs = self.call(inputs, *args, **kwargs)\r\n  File \"/home/me/miniconda3/envs/tf36/lib/python3.6/site-packages/tensorflow/contrib/rnn/python/ops/rnn_cell.py\", line 2113, in call\r\n    4 * self._output_channels, self._use_bias)\r\n  File \"/home/me/miniconda3/envs/tf36/lib/python3.6/site-packages/tensorflow/contrib/rnn/python/ops/rnn_cell.py\", line 2207, in _conv\r\n    \"kernel\", filter_size + [total_arg_size_depth, num_features], dtype=dtype)\r\n  File \"/home/me/miniconda3/envs/tf36/lib/python3.6/site-packages/tensorflow/python/ops/variable_scope.py\", line 1317, in get_variable\r\n    constraint=constraint)\r\n  File \"/home/me/miniconda3/envs/tf36/lib/python3.6/site-packages/tensorflow/python/ops/variable_scope.py\", line 1079, in get_variable\r\n    constraint=constraint)\r\n  File \"/home/me/miniconda3/envs/tf36/lib/python3.6/site-packages/tensorflow/python/ops/variable_scope.py\", line 417, in get_variable\r\n    return custom_getter(**custom_getter_kwargs)\r\n  File \"/home/me/miniconda3/envs/tf36/lib/python3.6/site-packages/tensorflow/python/ops/rnn_cell_impl.py\", line 235, in _rnn_get_variable\r\n    variable = getter(*args, **kwargs)\r\n  File \"/home/me/miniconda3/envs/tf36/lib/python3.6/site-packages/tensorflow/python/ops/variable_scope.py\", line 394, in _true_getter\r\n    use_resource=use_resource, constraint=constraint)\r\n  File \"/home/me/miniconda3/envs/tf36/lib/python3.6/site-packages/tensorflow/python/ops/variable_scope.py\", line 738, in _get_single_variable\r\n    found_var.get_shape()))\r\nValueError: Trying to share variable conv_lstm_cell/kernel, but specified shape (5, 5, 4, 8) and found shape (5, 5, 3, 8).\r\n\r\n\r\n\r\n\r\n------------------------\r\n\r\n### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**:\r\nYes.\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**:\r\nLinux Ubuntu 14.04\r\n- **TensorFlow installed from (source or binary)**: \r\nbinary\r\n- **TensorFlow version (use command below)**:\r\n1.8.0\r\n- **Python version**:\r\n3.6\r\n- **Bazel version (if compiling from source)**: \r\n-\r\n- **GCC/Compiler version (if compiling from source)**:\r\n-\r\n- **CUDA/cuDNN version**:\r\n- (using CPU version)\r\n- **GPU model and memory**:\r\n- (using CPU version)\r\n- **Exact command to reproduce**:\r\nSee description above\r\n- **Mobile device**:\r\nN/A\r\n"}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/21391", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/21391/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/21391/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/21391/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/21391", "id": 347710900, "node_id": "MDU6SXNzdWUzNDc3MTA5MDA=", "number": 21391, "title": "tf.linspace doesn't except integers for start/stop and floats for num", "user": {"login": "RanFeldesh", "id": 8627404, "node_id": "MDQ6VXNlcjg2Mjc0MDQ=", "avatar_url": "https://avatars1.githubusercontent.com/u/8627404?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RanFeldesh", "html_url": "https://github.com/RanFeldesh", "followers_url": "https://api.github.com/users/RanFeldesh/followers", "following_url": "https://api.github.com/users/RanFeldesh/following{/other_user}", "gists_url": "https://api.github.com/users/RanFeldesh/gists{/gist_id}", "starred_url": "https://api.github.com/users/RanFeldesh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RanFeldesh/subscriptions", "organizations_url": "https://api.github.com/users/RanFeldesh/orgs", "repos_url": "https://api.github.com/users/RanFeldesh/repos", "events_url": "https://api.github.com/users/RanFeldesh/events{/privacy}", "received_events_url": "https://api.github.com/users/RanFeldesh/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": {"login": "asimshankar", "id": 16018, "node_id": "MDQ6VXNlcjE2MDE4", "avatar_url": "https://avatars2.githubusercontent.com/u/16018?v=4", "gravatar_id": "", "url": "https://api.github.com/users/asimshankar", "html_url": "https://github.com/asimshankar", "followers_url": "https://api.github.com/users/asimshankar/followers", "following_url": "https://api.github.com/users/asimshankar/following{/other_user}", "gists_url": "https://api.github.com/users/asimshankar/gists{/gist_id}", "starred_url": "https://api.github.com/users/asimshankar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/asimshankar/subscriptions", "organizations_url": "https://api.github.com/users/asimshankar/orgs", "repos_url": "https://api.github.com/users/asimshankar/repos", "events_url": "https://api.github.com/users/asimshankar/events{/privacy}", "received_events_url": "https://api.github.com/users/asimshankar/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "asimshankar", "id": 16018, "node_id": "MDQ6VXNlcjE2MDE4", "avatar_url": "https://avatars2.githubusercontent.com/u/16018?v=4", "gravatar_id": "", "url": "https://api.github.com/users/asimshankar", "html_url": "https://github.com/asimshankar", "followers_url": "https://api.github.com/users/asimshankar/followers", "following_url": "https://api.github.com/users/asimshankar/following{/other_user}", "gists_url": "https://api.github.com/users/asimshankar/gists{/gist_id}", "starred_url": "https://api.github.com/users/asimshankar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/asimshankar/subscriptions", "organizations_url": "https://api.github.com/users/asimshankar/orgs", "repos_url": "https://api.github.com/users/asimshankar/repos", "events_url": "https://api.github.com/users/asimshankar/events{/privacy}", "received_events_url": "https://api.github.com/users/asimshankar/received_events", "type": "User", "site_admin": false}, {"login": "karmel", "id": 667809, "node_id": "MDQ6VXNlcjY2NzgwOQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/667809?v=4", "gravatar_id": "", "url": "https://api.github.com/users/karmel", "html_url": "https://github.com/karmel", "followers_url": "https://api.github.com/users/karmel/followers", "following_url": "https://api.github.com/users/karmel/following{/other_user}", "gists_url": "https://api.github.com/users/karmel/gists{/gist_id}", "starred_url": "https://api.github.com/users/karmel/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/karmel/subscriptions", "organizations_url": "https://api.github.com/users/karmel/orgs", "repos_url": "https://api.github.com/users/karmel/repos", "events_url": "https://api.github.com/users/karmel/events{/privacy}", "received_events_url": "https://api.github.com/users/karmel/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 5, "created_at": "2018-08-05T16:14:34Z", "updated_at": "2018-12-21T18:51:49Z", "closed_at": null, "author_association": "NONE", "body": "tf.linspace(start=1.0, stop=3.0, num=3) - works fine.\r\ntf.linspace(start=1, stop=3, num=3) yields an error (because start and stop are integers)\r\ntf.linspace(start=1.0, stop=3.0, num=3.0) yields an error (because num is float)\r\nIn both cases the error is: \"Could not find valid device for node name: \"LinSpace\" \"\r\n\r\nI would expect the following behavior:\r\n* start and stop can be integers (the op can convert it to float if fractions are produced; but see below)\r\n* num can be float, if its modulo with 1 is zero (the op can convert it to int; but see below)\r\n* the error message should reflect the problem precisely\r\n* the comments and reference page should reflect the expected dtype more clearly (at the top, not just in args)\r\n\r\nThis behavior is how numpy linspace function works (including stating all optional dtype in the autocomplete while typing).\r\n\r\ndtype conversion within a TF op might not follow TF design rules as it might create dtype changes without the user awareness. Yet, I would still be happy to have an error message that explicitly states the problem with the dtypes.\r\n\r\n\r\n### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**: Yes\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**: Windows10\r\n- **Mobile device (e.g. iPhone 8, Pixel 2, Samsung Galaxy) if the issue happens on mobile device**: NA\r\n- **TensorFlow installed from (source or binary)**: binary\r\n- **TensorFlow version (use command below)**: 1.9\r\n- **Python version**: 3.6\r\n- **Bazel version (if compiling from source)**: NA\r\n- **GCC/Compiler version (if compiling from source)**: NA\r\n- **CUDA/cuDNN version**: NA\r\n- **GPU model and memory**: NA\r\n- **Exact command to reproduce**: See above"}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/21366", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/21366/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/21366/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/21366/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/21366", "id": 347514038, "node_id": "MDU6SXNzdWUzNDc1MTQwMzg=", "number": 21366, "title": "Build fails: ERROR: infinite symlink expansion detected", "user": {"login": "yurivict", "id": 271906, "node_id": "MDQ6VXNlcjI3MTkwNg==", "avatar_url": "https://avatars2.githubusercontent.com/u/271906?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yurivict", "html_url": "https://github.com/yurivict", "followers_url": "https://api.github.com/users/yurivict/followers", "following_url": "https://api.github.com/users/yurivict/following{/other_user}", "gists_url": "https://api.github.com/users/yurivict/gists{/gist_id}", "starred_url": "https://api.github.com/users/yurivict/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yurivict/subscriptions", "organizations_url": "https://api.github.com/users/yurivict/orgs", "repos_url": "https://api.github.com/users/yurivict/repos", "events_url": "https://api.github.com/users/yurivict/events{/privacy}", "received_events_url": "https://api.github.com/users/yurivict/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 404586558, "node_id": "MDU6TGFiZWw0MDQ1ODY1NTg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:community%20support", "name": "stat:community support", "color": "f4b400", "default": false, "description": ""}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 10, "created_at": "2018-08-03T19:39:59Z", "updated_at": "2019-05-12T18:00:53Z", "closed_at": null, "author_association": "NONE", "body": "I'm getting this error on FreeBSD, it fails in jemalloc even though I answered \"n\" when it asked if to build it:\r\n```\r\nworkspace: /usr/ports/science/py-tensorflow/work-py27/tensorflow-1.10.0-rc1\r\nWARNING: --batch mode is deprecated. Please instead explicitly shut down your Bazel server using the command \"bazel shutdown\".\r\nERROR: infinite symlink expansion detected\r\n[start of symlink chain]\r\n/usr/ports/science/py-tensorflow/work-py27/tensorflow-1.10.0-rc1/bazel_ot/2cc1156aa366d993caf19cae8ee5ba0d/external/org_tensorflow\r\n/usr/ports/science/py-tensorflow/work-py27/tensorflow-1.10.0-rc1\r\n[end of symlink chain]\r\nERROR: /usr/ports/science/py-tensorflow/work-py27/tensorflow-1.10.0-rc1/tensorflow/tools/pip_package/BUILD:123:1: error loading package '@jemalloc//': Encountered error while reading extension file 'third_party/common.bzl': no such package '@org_tensorflow//third_party': Could not access /usr/ports/science/py-tensorflow/work-py27/tensorflow-1.10.0-rc1/bazel_ot/2cc1156aa366d993caf19cae8ee5ba0d/external/org_tensorflow: Infinite symlink expansion and referenced by '//tensorflow/tools/pip_package:licenses'\r\nERROR: Analysis of target '//tensorflow/tools/pip_package:build_pip_package' failed; build aborted: error loading package '@jemalloc//': Encountered error while reading extension file 'third_party/common.bzl': no such package '@org_tensorflow//third_party': Could not access /usr/ports/science/py-tensorflow/work-py27/tensorflow-1.10.0-rc1/bazel_ot/2cc1156aa366d993caf19cae8ee5ba0d/external/org_tensorflow: Infinite symlink expansion\r\nINFO: Elapsed time: 5.260s\r\nINFO: 0 processes.\r\nFAILED: Build did NOT complete successfully (75 packages loaded)\r\n```"}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/21357", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/21357/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/21357/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/21357/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/21357", "id": 347295984, "node_id": "MDU6SXNzdWUzNDcyOTU5ODQ=", "number": 21357, "title": "dnn_dropout in DNNLinearCombinedClassifier doesn't  work", "user": {"login": "333caowei", "id": 4569055, "node_id": "MDQ6VXNlcjQ1NjkwNTU=", "avatar_url": "https://avatars3.githubusercontent.com/u/4569055?v=4", "gravatar_id": "", "url": "https://api.github.com/users/333caowei", "html_url": "https://github.com/333caowei", "followers_url": "https://api.github.com/users/333caowei/followers", "following_url": "https://api.github.com/users/333caowei/following{/other_user}", "gists_url": "https://api.github.com/users/333caowei/gists{/gist_id}", "starred_url": "https://api.github.com/users/333caowei/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/333caowei/subscriptions", "organizations_url": "https://api.github.com/users/333caowei/orgs", "repos_url": "https://api.github.com/users/333caowei/repos", "events_url": "https://api.github.com/users/333caowei/events{/privacy}", "received_events_url": "https://api.github.com/users/333caowei/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": {"login": "shivaniag", "id": 16565716, "node_id": "MDQ6VXNlcjE2NTY1NzE2", "avatar_url": "https://avatars1.githubusercontent.com/u/16565716?v=4", "gravatar_id": "", "url": "https://api.github.com/users/shivaniag", "html_url": "https://github.com/shivaniag", "followers_url": "https://api.github.com/users/shivaniag/followers", "following_url": "https://api.github.com/users/shivaniag/following{/other_user}", "gists_url": "https://api.github.com/users/shivaniag/gists{/gist_id}", "starred_url": "https://api.github.com/users/shivaniag/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/shivaniag/subscriptions", "organizations_url": "https://api.github.com/users/shivaniag/orgs", "repos_url": "https://api.github.com/users/shivaniag/repos", "events_url": "https://api.github.com/users/shivaniag/events{/privacy}", "received_events_url": "https://api.github.com/users/shivaniag/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "shivaniag", "id": 16565716, "node_id": "MDQ6VXNlcjE2NTY1NzE2", "avatar_url": "https://avatars1.githubusercontent.com/u/16565716?v=4", "gravatar_id": "", "url": "https://api.github.com/users/shivaniag", "html_url": "https://github.com/shivaniag", "followers_url": "https://api.github.com/users/shivaniag/followers", "following_url": "https://api.github.com/users/shivaniag/following{/other_user}", "gists_url": "https://api.github.com/users/shivaniag/gists{/gist_id}", "starred_url": "https://api.github.com/users/shivaniag/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/shivaniag/subscriptions", "organizations_url": "https://api.github.com/users/shivaniag/orgs", "repos_url": "https://api.github.com/users/shivaniag/repos", "events_url": "https://api.github.com/users/shivaniag/events{/privacy}", "received_events_url": "https://api.github.com/users/shivaniag/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 4, "created_at": "2018-08-03T07:53:37Z", "updated_at": "2018-12-21T18:51:44Z", "closed_at": null, "author_association": "NONE", "body": "I use DNNLinearCombinedClassifier to train a wide & deep model with dnn_dropout=0.5\u3002\r\n```\r\nm = tf.estimator.DNNLinearCombinedClassifier(\r\n    model_dir=model_dir,\r\n    linear_feature_columns=crossed_columns,\r\n    dnn_feature_columns=deep_columns,\r\n    dnn_dropout=0.5,\r\n    dnn_hidden_units=[512, 256, 256, 128])\r\n\r\nm.train(\r\n    input_fn=input_fn(train_file_name, num_epochs=None, shuffle=True, \r\n    is_eval=False,steps=train_steps, \r\n    hooks=[logger_hook])\r\n```\r\n\r\n Then I evaluate model as follow: \r\n```\r\nm = tf.estimator.DNNLinearCombinedClassifier(\r\n    model_dir=model_dir,\r\n    linear_feature_columns=crossed_columns,\r\n    dnn_feature_columns=deep_columns,\r\n    dnn_dropout=1.0,\r\n    dnn_hidden_units=[512, 256, 256, 128])\r\n\r\nresults = m.evaluate(\r\n    input_fn=input_fn(test_file_name, num_epochs=1, shuffle=False, is_eval=True),\r\n    steps=None)\r\n```\r\nI find no matter I set dnn_dropout=0.1 or dnn_dropout=1.0, the result are same. It seems that this parameter doesn't work.\r\nMy version is 1.4"}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/21349", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/21349/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/21349/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/21349/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/21349", "id": 347215099, "node_id": "MDU6SXNzdWUzNDcyMTUwOTk=", "number": 21349, "title": "Improve tf.data graph representation in TensorBoard", "user": {"login": "TimZaman", "id": 7721540, "node_id": "MDQ6VXNlcjc3MjE1NDA=", "avatar_url": "https://avatars0.githubusercontent.com/u/7721540?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TimZaman", "html_url": "https://github.com/TimZaman", "followers_url": "https://api.github.com/users/TimZaman/followers", "following_url": "https://api.github.com/users/TimZaman/following{/other_user}", "gists_url": "https://api.github.com/users/TimZaman/gists{/gist_id}", "starred_url": "https://api.github.com/users/TimZaman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TimZaman/subscriptions", "organizations_url": "https://api.github.com/users/TimZaman/orgs", "repos_url": "https://api.github.com/users/TimZaman/repos", "events_url": "https://api.github.com/users/TimZaman/events{/privacy}", "received_events_url": "https://api.github.com/users/TimZaman/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 404586594, "node_id": "MDU6TGFiZWw0MDQ1ODY1OTQ=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:awaiting%20tensorflower", "name": "stat:awaiting tensorflower", "color": "f4b400", "default": false, "description": ""}, {"id": 473173272, "node_id": "MDU6TGFiZWw0NzMxNzMyNzI=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:feature", "name": "type:feature", "color": "159b2e", "default": false, "description": ""}], "state": "open", "locked": false, "assignee": {"login": "rohan100jain", "id": 144114, "node_id": "MDQ6VXNlcjE0NDExNA==", "avatar_url": "https://avatars2.githubusercontent.com/u/144114?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rohan100jain", "html_url": "https://github.com/rohan100jain", "followers_url": "https://api.github.com/users/rohan100jain/followers", "following_url": "https://api.github.com/users/rohan100jain/following{/other_user}", "gists_url": "https://api.github.com/users/rohan100jain/gists{/gist_id}", "starred_url": "https://api.github.com/users/rohan100jain/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rohan100jain/subscriptions", "organizations_url": "https://api.github.com/users/rohan100jain/orgs", "repos_url": "https://api.github.com/users/rohan100jain/repos", "events_url": "https://api.github.com/users/rohan100jain/events{/privacy}", "received_events_url": "https://api.github.com/users/rohan100jain/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "rohan100jain", "id": 144114, "node_id": "MDQ6VXNlcjE0NDExNA==", "avatar_url": "https://avatars2.githubusercontent.com/u/144114?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rohan100jain", "html_url": "https://github.com/rohan100jain", "followers_url": "https://api.github.com/users/rohan100jain/followers", "following_url": "https://api.github.com/users/rohan100jain/following{/other_user}", "gists_url": "https://api.github.com/users/rohan100jain/gists{/gist_id}", "starred_url": "https://api.github.com/users/rohan100jain/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rohan100jain/subscriptions", "organizations_url": "https://api.github.com/users/rohan100jain/orgs", "repos_url": "https://api.github.com/users/rohan100jain/repos", "events_url": "https://api.github.com/users/rohan100jain/events{/privacy}", "received_events_url": "https://api.github.com/users/rohan100jain/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 8, "created_at": "2018-08-03T00:06:03Z", "updated_at": "2019-01-17T19:46:16Z", "closed_at": null, "author_association": "CONTRIBUTOR", "body": "Hello,\r\n\r\nThis is a feature request for making `tf.data` more insightful for TensorBoard. Currently, having a few `.apply` or `.map` and `.filter` calls looks like the image attached.\r\n\r\nAlthough the internals of each `tf.data` inside the box look nice, it's hard to know from TensorBoard how they work together. Moreover, they are not descriptively named, so things get quite confusing.\r\n\r\nTwo suggestions come to mind:\r\n\r\n- Having the ability to add descriptive names (contrasting the current ex: `__function_library__tf_map_func_YdsTEwCNzV0`)\r\n- A graphical representation of how the different `tf.data` calls work together.\r\n\r\n![image](https://user-images.githubusercontent.com/7721540/43617282-fe068ea8-9675-11e8-8e1a-c0f4eacff4b1.png)\r\n"}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/21348", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/21348/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/21348/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/21348/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/21348", "id": 347202723, "node_id": "MDU6SXNzdWUzNDcyMDI3MjM=", "number": 21348, "title": "[Bug] cpu memory leak while using GPU with variable length ops.", "user": {"login": "unrealwill", "id": 11304248, "node_id": "MDQ6VXNlcjExMzA0MjQ4", "avatar_url": "https://avatars0.githubusercontent.com/u/11304248?v=4", "gravatar_id": "", "url": "https://api.github.com/users/unrealwill", "html_url": "https://github.com/unrealwill", "followers_url": "https://api.github.com/users/unrealwill/followers", "following_url": "https://api.github.com/users/unrealwill/following{/other_user}", "gists_url": "https://api.github.com/users/unrealwill/gists{/gist_id}", "starred_url": "https://api.github.com/users/unrealwill/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/unrealwill/subscriptions", "organizations_url": "https://api.github.com/users/unrealwill/orgs", "repos_url": "https://api.github.com/users/unrealwill/repos", "events_url": "https://api.github.com/users/unrealwill/events{/privacy}", "received_events_url": "https://api.github.com/users/unrealwill/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 473172988, "node_id": "MDU6TGFiZWw0NzMxNzI5ODg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:bug", "name": "type:bug", "color": "159b2e", "default": false, "description": ""}], "state": "open", "locked": false, "assignee": {"login": "ebrevdo", "id": 1794715, "node_id": "MDQ6VXNlcjE3OTQ3MTU=", "avatar_url": "https://avatars0.githubusercontent.com/u/1794715?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ebrevdo", "html_url": "https://github.com/ebrevdo", "followers_url": "https://api.github.com/users/ebrevdo/followers", "following_url": "https://api.github.com/users/ebrevdo/following{/other_user}", "gists_url": "https://api.github.com/users/ebrevdo/gists{/gist_id}", "starred_url": "https://api.github.com/users/ebrevdo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ebrevdo/subscriptions", "organizations_url": "https://api.github.com/users/ebrevdo/orgs", "repos_url": "https://api.github.com/users/ebrevdo/repos", "events_url": "https://api.github.com/users/ebrevdo/events{/privacy}", "received_events_url": "https://api.github.com/users/ebrevdo/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "ebrevdo", "id": 1794715, "node_id": "MDQ6VXNlcjE3OTQ3MTU=", "avatar_url": "https://avatars0.githubusercontent.com/u/1794715?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ebrevdo", "html_url": "https://github.com/ebrevdo", "followers_url": "https://api.github.com/users/ebrevdo/followers", "following_url": "https://api.github.com/users/ebrevdo/following{/other_user}", "gists_url": "https://api.github.com/users/ebrevdo/gists{/gist_id}", "starred_url": "https://api.github.com/users/ebrevdo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ebrevdo/subscriptions", "organizations_url": "https://api.github.com/users/ebrevdo/orgs", "repos_url": "https://api.github.com/users/ebrevdo/repos", "events_url": "https://api.github.com/users/ebrevdo/events{/privacy}", "received_events_url": "https://api.github.com/users/ebrevdo/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 8, "created_at": "2018-08-02T22:57:02Z", "updated_at": "2019-05-13T13:38:52Z", "closed_at": null, "author_association": "NONE", "body": "```\r\nimport tensorflow as tf\r\nimport numpy as np\r\nimport gc\r\n\r\ndef NotBuggy():\r\n    with tf.device(\"/gpu:0\"):\r\n        x = tf.placeholder(dtype=tf.float32, shape=(1000,1))\r\n        col = tf.placeholder(dtype=tf.int32, shape=(None,1))\r\n\r\n        p0 = tf.gather_nd( x,col)\r\n        p1 = tf.gather_nd( x,col+1)\r\n        diff = p0 - p1\r\n    sess = tf.Session()\r\n    co = 0\r\n    while (True):\r\n        feed_dict = {x: np.expand_dims(np.arange(1000),1), \r\n                     col: np.random.randint( 0,900, size=( np.random.randint(500,20000),1 ) ) }\r\n        _res = sess.run(diff, feed_dict=feed_dict)\r\n        co = co + 1\r\n        if (co % 1000 == 0):\r\n            gc.collect()\r\n            print(_res.shape)\r\n            print(co)\r\n\r\n\r\ndef Buggy():\r\n    with tf.device(\"/gpu:0\"):\r\n        x = tf.placeholder( dtype=tf.float32 , shape=(1000))\r\n        ind = tf.placeholder( dtype=tf.int32, shape=(None) )\r\n\r\n        p0 = tf.gather_nd(tf.expand_dims(x,1),tf.expand_dims(ind,1))\r\n        p1 = tf.gather_nd(tf.expand_dims(x,1),tf.expand_dims(ind+1,1))\r\n\r\n        diff = p0-p1\r\n\r\n    sess = tf.Session()\r\n    co = 0\r\n    while(True):\r\n        #Note that the length of ind is variable\r\n        feed_dict = {x: np.arange(1000),ind: np.random.randint(0, 900, size=(np.random.randint(500, 20000)))}\r\n        #When sized is fixed : doesn't memory leak\r\n        #feed_dict = {x: np.arange(1000),ind: np.random.randint(0, 900, size=(20000,))}\r\n        _res = sess.run(diff, feed_dict=feed_dict)\r\n        co = co+1\r\n        if( co % 1000 == 0):\r\n            gc.collect()\r\n            print(_res.shape)\r\n            print(co)\r\n\r\n#NotBuggy()\r\nBuggy()\r\n```\r\n\r\nThe code above leaks cpu memory quite rapidly ~10 Mb/s.\r\nI tried some differential analysis, the bug seems weird and related to the graph construction.\r\n\r\nHave Fun :)\r\n\r\n### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**: Yes\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**: Linux Lubuntu 16.04\r\n- **Mobile device (e.g. iPhone 8, Pixel 2, Samsung Galaxy) if the issue happens on mobile device**: No\r\n- **TensorFlow installed from (source or binary)**: binary\r\n- **TensorFlow version (use command below)**: v1.9.0-0-g25c197e023 1.9.0\r\n- **Python version**: Python 3.6.5 (default, May  3 2018, 10:08:28) (also bugs on Python 3.5.2 (default, Nov 17 2016, 17:05:23) )\r\n- **Bazel version (if compiling from source)**: N/A\r\n- **GCC/Compiler version (if compiling from source)**: N/A\r\n- **CUDA/cuDNN version**:   CUDA Driver Version / Runtime Version          9.1 / 8.0 , cuDNN N/A\r\n- **GPU model and memory**: NVidia GTx1080 ti 12Go\r\n- **Exact command to reproduce**: Run code given above (It leaks memory quite rapidly ~10 Mb /s)\r\n"}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/21339", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/21339/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/21339/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/21339/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/21339", "id": 346993305, "node_id": "MDU6SXNzdWUzNDY5OTMzMDU=", "number": 21339, "title": "Error in impoerting tensorflow 1.9", "user": {"login": "VBR1016", "id": 31064870, "node_id": "MDQ6VXNlcjMxMDY0ODcw", "avatar_url": "https://avatars3.githubusercontent.com/u/31064870?v=4", "gravatar_id": "", "url": "https://api.github.com/users/VBR1016", "html_url": "https://github.com/VBR1016", "followers_url": "https://api.github.com/users/VBR1016/followers", "following_url": "https://api.github.com/users/VBR1016/following{/other_user}", "gists_url": "https://api.github.com/users/VBR1016/gists{/gist_id}", "starred_url": "https://api.github.com/users/VBR1016/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/VBR1016/subscriptions", "organizations_url": "https://api.github.com/users/VBR1016/orgs", "repos_url": "https://api.github.com/users/VBR1016/repos", "events_url": "https://api.github.com/users/VBR1016/events{/privacy}", "received_events_url": "https://api.github.com/users/VBR1016/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": {"login": "mrry", "id": 192142, "node_id": "MDQ6VXNlcjE5MjE0Mg==", "avatar_url": "https://avatars1.githubusercontent.com/u/192142?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mrry", "html_url": "https://github.com/mrry", "followers_url": "https://api.github.com/users/mrry/followers", "following_url": "https://api.github.com/users/mrry/following{/other_user}", "gists_url": "https://api.github.com/users/mrry/gists{/gist_id}", "starred_url": "https://api.github.com/users/mrry/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mrry/subscriptions", "organizations_url": "https://api.github.com/users/mrry/orgs", "repos_url": "https://api.github.com/users/mrry/repos", "events_url": "https://api.github.com/users/mrry/events{/privacy}", "received_events_url": "https://api.github.com/users/mrry/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "mrry", "id": 192142, "node_id": "MDQ6VXNlcjE5MjE0Mg==", "avatar_url": "https://avatars1.githubusercontent.com/u/192142?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mrry", "html_url": "https://github.com/mrry", "followers_url": "https://api.github.com/users/mrry/followers", "following_url": "https://api.github.com/users/mrry/following{/other_user}", "gists_url": "https://api.github.com/users/mrry/gists{/gist_id}", "starred_url": "https://api.github.com/users/mrry/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mrry/subscriptions", "organizations_url": "https://api.github.com/users/mrry/orgs", "repos_url": "https://api.github.com/users/mrry/repos", "events_url": "https://api.github.com/users/mrry/events{/privacy}", "received_events_url": "https://api.github.com/users/mrry/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 6, "created_at": "2018-08-02T12:38:27Z", "updated_at": "2019-04-03T08:40:59Z", "closed_at": null, "author_association": "NONE", "body": "Hello!\r\nI had installed tensorflow 1.5 for using g2p_seq2seq. But for some error using this, I decided to upgrade my tensorflow version to 1.9. when I use pip install --upgrade tensorflow everything is ok and I have Successfully installed tensorboard-1.9.0 tensorflow-1.9.0 in my CMD, but when I want to import tensorflow I have below error : \r\n\r\n>>> import tensorflow\r\nTraceback (most recent call last):\r\n  File \"C:\\Users\\ida\\AppData\\Local\\Programs\\Python\\Python36\\lib\\site-packages\\tensorflow\\python\\pywrap_tensorflow_internal.py\", line 14, in swig_import_helper\r\n    return importlib.import_module(mname)\r\n  File \"C:\\Users\\ida\\AppData\\Local\\Programs\\Python\\Python36\\lib\\importlib\\__init__.py\", line 126, in import_module\r\n    return _bootstrap._gcd_import(name[level:], package, level)\r\n  File \"<frozen importlib._bootstrap>\", line 994, in _gcd_import\r\n  File \"<frozen importlib._bootstrap>\", line 971, in _find_and_load\r\n  File \"<frozen importlib._bootstrap>\", line 955, in _find_and_load_unlocked\r\n  File \"<frozen importlib._bootstrap>\", line 658, in _load_unlocked\r\n  File \"<frozen importlib._bootstrap>\", line 571, in module_from_spec\r\n  File \"<frozen importlib._bootstrap_external>\", line 922, in create_module\r\n  File \"<frozen importlib._bootstrap>\", line 219, in _call_with_frames_removed\r\nImportError: DLL load failed: A dynamic link library (DLL) initialization routine failed.\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTraceback (most recent call last):\r\n  File \"C:\\Users\\ida\\AppData\\Local\\Programs\\Python\\Python36\\lib\\site-packages\\tensorflow\\python\\pywrap_tensorflow.py\", line 58, in <module>\r\n    from tensorflow.python.pywrap_tensorflow_internal import *\r\n  File \"C:\\Users\\ida\\AppData\\Local\\Programs\\Python\\Python36\\lib\\site-packages\\tensorflow\\python\\pywrap_tensorflow_internal.py\", line 17, in <module>\r\n    _pywrap_tensorflow_internal = swig_import_helper()\r\n  File \"C:\\Users\\ida\\AppData\\Local\\Programs\\Python\\Python36\\lib\\site-packages\\tensorflow\\python\\pywrap_tensorflow_internal.py\", line 16, in swig_import_helper\r\n    return importlib.import_module('_pywrap_tensorflow_internal')\r\n  File \"C:\\Users\\ida\\AppData\\Local\\Programs\\Python\\Python36\\lib\\importlib\\__init__.py\", line 126, in import_module\r\n    return _bootstrap._gcd_import(name[level:], package, level)\r\nModuleNotFoundError: No module named '_pywrap_tensorflow_internal'\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTraceback (most recent call last):\r\n  File \"<pyshell#0>\", line 1, in <module>\r\n    import tensorflow\r\n  File \"C:\\Users\\ida\\AppData\\Local\\Programs\\Python\\Python36\\lib\\site-packages\\tensorflow\\__init__.py\", line 22, in <module>\r\n    from tensorflow.python import pywrap_tensorflow  # pylint: disable=unused-import\r\n  File \"C:\\Users\\ida\\AppData\\Local\\Programs\\Python\\Python36\\lib\\site-packages\\tensorflow\\python\\__init__.py\", line 49, in <module>\r\n    from tensorflow.python import pywrap_tensorflow\r\n  File \"C:\\Users\\ida\\AppData\\Local\\Programs\\Python\\Python36\\lib\\site-packages\\tensorflow\\python\\pywrap_tensorflow.py\", line 74, in <module>\r\n    raise ImportError(msg)\r\nImportError: Traceback (most recent call last):\r\n  File \"C:\\Users\\ida\\AppData\\Local\\Programs\\Python\\Python36\\lib\\site-packages\\tensorflow\\python\\pywrap_tensorflow_internal.py\", line 14, in swig_import_helper\r\n    return importlib.import_module(mname)\r\n  File \"C:\\Users\\ida\\AppData\\Local\\Programs\\Python\\Python36\\lib\\importlib\\__init__.py\", line 126, in import_module\r\n    return _bootstrap._gcd_import(name[level:], package, level)\r\n  File \"<frozen importlib._bootstrap>\", line 994, in _gcd_import\r\n  File \"<frozen importlib._bootstrap>\", line 971, in _find_and_load\r\n  File \"<frozen importlib._bootstrap>\", line 955, in _find_and_load_unlocked\r\n  File \"<frozen importlib._bootstrap>\", line 658, in _load_unlocked\r\n  File \"<frozen importlib._bootstrap>\", line 571, in module_from_spec\r\n  File \"<frozen importlib._bootstrap_external>\", line 922, in create_module\r\n  File \"<frozen importlib._bootstrap>\", line 219, in _call_with_frames_removed\r\nImportError: DLL load failed: A dynamic link library (DLL) initialization routine failed.\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTraceback (most recent call last):\r\n  File \"C:\\Users\\ida\\AppData\\Local\\Programs\\Python\\Python36\\lib\\site-packages\\tensorflow\\python\\pywrap_tensorflow.py\", line 58, in <module>\r\n    from tensorflow.python.pywrap_tensorflow_internal import *\r\n  File \"C:\\Users\\ida\\AppData\\Local\\Programs\\Python\\Python36\\lib\\site-packages\\tensorflow\\python\\pywrap_tensorflow_internal.py\", line 17, in <module>\r\n    _pywrap_tensorflow_internal = swig_import_helper()\r\n  File \"C:\\Users\\ida\\AppData\\Local\\Programs\\Python\\Python36\\lib\\site-packages\\tensorflow\\python\\pywrap_tensorflow_internal.py\", line 16, in swig_import_helper\r\n    return importlib.import_module('_pywrap_tensorflow_internal')\r\n  File \"C:\\Users\\ida\\AppData\\Local\\Programs\\Python\\Python36\\lib\\importlib\\__init__.py\", line 126, in import_module\r\n    return _bootstrap._gcd_import(name[level:], package, level)\r\nModuleNotFoundError: No module named '_pywrap_tensorflow_internal'\r\n\r\n\r\nFailed to load the native TensorFlow runtime.\r\n\r\nSee https://www.tensorflow.org/install/install_sources#common_installation_problems\r\n\r\nfor some common reasons and solutions.  Include the entire stack trace\r\nabove this error message when asking for help.\r\n\r\nwhat should I do now???\r\nI really need to help.\r\n\r\nmy platform is windows 10, my python version is 3.6.5 and I'm using cpu tensorflow.\r\n\r\nThanks in advance.\r\n"}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/21338", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/21338/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/21338/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/21338/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/21338", "id": 346963930, "node_id": "MDU6SXNzdWUzNDY5NjM5MzA=", "number": 21338, "title": "Max pooling cause error on empty batch", "user": {"login": "wrongtest", "id": 7600935, "node_id": "MDQ6VXNlcjc2MDA5MzU=", "avatar_url": "https://avatars2.githubusercontent.com/u/7600935?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wrongtest", "html_url": "https://github.com/wrongtest", "followers_url": "https://api.github.com/users/wrongtest/followers", "following_url": "https://api.github.com/users/wrongtest/following{/other_user}", "gists_url": "https://api.github.com/users/wrongtest/gists{/gist_id}", "starred_url": "https://api.github.com/users/wrongtest/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wrongtest/subscriptions", "organizations_url": "https://api.github.com/users/wrongtest/orgs", "repos_url": "https://api.github.com/users/wrongtest/repos", "events_url": "https://api.github.com/users/wrongtest/events{/privacy}", "received_events_url": "https://api.github.com/users/wrongtest/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": {"login": "chsigg", "id": 7523982, "node_id": "MDQ6VXNlcjc1MjM5ODI=", "avatar_url": "https://avatars3.githubusercontent.com/u/7523982?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chsigg", "html_url": "https://github.com/chsigg", "followers_url": "https://api.github.com/users/chsigg/followers", "following_url": "https://api.github.com/users/chsigg/following{/other_user}", "gists_url": "https://api.github.com/users/chsigg/gists{/gist_id}", "starred_url": "https://api.github.com/users/chsigg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chsigg/subscriptions", "organizations_url": "https://api.github.com/users/chsigg/orgs", "repos_url": "https://api.github.com/users/chsigg/repos", "events_url": "https://api.github.com/users/chsigg/events{/privacy}", "received_events_url": "https://api.github.com/users/chsigg/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "chsigg", "id": 7523982, "node_id": "MDQ6VXNlcjc1MjM5ODI=", "avatar_url": "https://avatars3.githubusercontent.com/u/7523982?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chsigg", "html_url": "https://github.com/chsigg", "followers_url": "https://api.github.com/users/chsigg/followers", "following_url": "https://api.github.com/users/chsigg/following{/other_user}", "gists_url": "https://api.github.com/users/chsigg/gists{/gist_id}", "starred_url": "https://api.github.com/users/chsigg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chsigg/subscriptions", "organizations_url": "https://api.github.com/users/chsigg/orgs", "repos_url": "https://api.github.com/users/chsigg/repos", "events_url": "https://api.github.com/users/chsigg/events{/privacy}", "received_events_url": "https://api.github.com/users/chsigg/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 15, "created_at": "2018-08-02T11:04:05Z", "updated_at": "2018-12-12T18:47:47Z", "closed_at": null, "author_association": "NONE", "body": "### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**: yes\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**: 3.10.0-693.2.2.el7.x86_64\r\n- **TensorFlow installed from (source or binary)**: binary\r\n- **TensorFlow version (use command below)**: 1.8.0\r\n- **Python version**: Python 2.7.14 :: Anaconda\r\n- **Bazel version (if compiling from source)**: None\r\n- **GCC/Compiler version (if compiling from source)**: None\r\n- **CUDA/cuDNN version**: cuda==9.0, cudnn==7.0.4\r\n- **GPU model and memory**: None\r\n- **Exact command to reproduce**: See below\r\n\r\n### Describe the problem\r\nWhen batch_size is 0, max pooling operation seems to produce an unhandled cudaError_t status. It may cause subsequent operations fail with odd error message. That is extremely difficult to debug.\r\n\r\n(This corner case bothers us, where we first extract some bounding boxes and then run traditional convolution operations on areas specified by them. The above error occurs in case that no bounding boxes are detected thus batch_size becomes 0. However, the python exception will be randomly thrown at following operation or following session run steps)\r\n\r\n```python\r\nimport tensorflow as tf\r\nimport numpy as np\r\n\r\nx = tf.placeholder(dtype=tf.float32, shape=[None, 4, 4, 1])\r\npool_op = tf.nn.pool(x, pooling_type=\"MAX\", window_shape=[2, 2], strides=[1, 1], padding=\"SAME\")\r\n\r\ny = tf.placeholder(dtype=tf.float32, shape=[None])\r\nother_op = tf.where(tf.equal(y, 1.0))\r\n\r\nnormal_data = np.zeros([1, 4, 4, 1], dtype=\"float32\")\r\nempty_data = np.zeros([0, 4, 4, 1], dtype=\"float32\")\r\n\r\n# cudaError is thread local, limit thread pool size to make it easy to reproduce\r\nconfig = tf.ConfigProto()\r\nconfig.inter_op_parallelism_threads = 1\r\nwith tf.Session(config=config) as sess:\r\n    # run other_op success\r\n    print sess.run(other_op, {y: [1.0, 2.0, 3.0, 4.0]})  # [[0]]\r\n\r\n    # run pooling on datas success\r\n    print sess.run(pool_op, {x: normal_data}).shape  # (1, 4, 4, 1)\r\n    print sess.run(pool_op, {x: empty_data}).shape  # (0, 4, 4, 1)\r\n\r\n    # run other_op now failed\r\n    print sess.run(other_op, {y: [1.0, 2.0, 3.0, 4.0]})  # err\r\n``` \r\n\r\nAbove code report error:\r\ntensorflow.python.framework.errors_impl.InternalError: WhereOp: Could not launch cub::DeviceReduce::Sum to count number of true / nonzero indices.  temp_storage_bytes: 1, status: invalid configuration argument\r\n\r\n\"invalid configuration argument\" seems to be message return by cudaGetError, which indicates a failed kernel launch due to zero or too large number of block threads.\r\n\r\n### Source code / logs\r\n![image](https://user-images.githubusercontent.com/7600935/43579974-6dd4967a-9686-11e8-9b22-8288159d155c.png)\r\n\r\n"}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/21337", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/21337/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/21337/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/21337/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/21337", "id": 346934352, "node_id": "MDU6SXNzdWUzNDY5MzQzNTI=", "number": 21337, "title": "Problem with softmax on Windows OS", "user": {"login": "Windaway", "id": 4530735, "node_id": "MDQ6VXNlcjQ1MzA3MzU=", "avatar_url": "https://avatars0.githubusercontent.com/u/4530735?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Windaway", "html_url": "https://github.com/Windaway", "followers_url": "https://api.github.com/users/Windaway/followers", "following_url": "https://api.github.com/users/Windaway/following{/other_user}", "gists_url": "https://api.github.com/users/Windaway/gists{/gist_id}", "starred_url": "https://api.github.com/users/Windaway/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Windaway/subscriptions", "organizations_url": "https://api.github.com/users/Windaway/orgs", "repos_url": "https://api.github.com/users/Windaway/repos", "events_url": "https://api.github.com/users/Windaway/events{/privacy}", "received_events_url": "https://api.github.com/users/Windaway/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": {"login": "asimshankar", "id": 16018, "node_id": "MDQ6VXNlcjE2MDE4", "avatar_url": "https://avatars2.githubusercontent.com/u/16018?v=4", "gravatar_id": "", "url": "https://api.github.com/users/asimshankar", "html_url": "https://github.com/asimshankar", "followers_url": "https://api.github.com/users/asimshankar/followers", "following_url": "https://api.github.com/users/asimshankar/following{/other_user}", "gists_url": "https://api.github.com/users/asimshankar/gists{/gist_id}", "starred_url": "https://api.github.com/users/asimshankar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/asimshankar/subscriptions", "organizations_url": "https://api.github.com/users/asimshankar/orgs", "repos_url": "https://api.github.com/users/asimshankar/repos", "events_url": "https://api.github.com/users/asimshankar/events{/privacy}", "received_events_url": "https://api.github.com/users/asimshankar/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "asimshankar", "id": 16018, "node_id": "MDQ6VXNlcjE2MDE4", "avatar_url": "https://avatars2.githubusercontent.com/u/16018?v=4", "gravatar_id": "", "url": "https://api.github.com/users/asimshankar", "html_url": "https://github.com/asimshankar", "followers_url": "https://api.github.com/users/asimshankar/followers", "following_url": "https://api.github.com/users/asimshankar/following{/other_user}", "gists_url": "https://api.github.com/users/asimshankar/gists{/gist_id}", "starred_url": "https://api.github.com/users/asimshankar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/asimshankar/subscriptions", "organizations_url": "https://api.github.com/users/asimshankar/orgs", "repos_url": "https://api.github.com/users/asimshankar/repos", "events_url": "https://api.github.com/users/asimshankar/events{/privacy}", "received_events_url": "https://api.github.com/users/asimshankar/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 2, "created_at": "2018-08-02T09:36:48Z", "updated_at": "2018-12-20T18:48:40Z", "closed_at": null, "author_association": "NONE", "body": "------------------------\r\n### System information\r\nWindows 10 x64 pro 17314.365, i5 6600k, Z170(clevo), GTX1070(notebook), 16G DDR4 2400 Dual Channel .\r\nTensorflow 1.9.0 with AVX2 simd, CUDA9.2.148, Cudnn7.1.4, py3.6.6 , VS2017 15.7(with cmake), CP/SM6.1\r\nTensorflow 1.9.0 offical, CUDA9.0, Cudnn7.05, py3.6.6\r\n\r\n### Describe the problem\r\nsoftmax_cross_entropy_with_logits or softmax_cross_entropy_with_logits_v2 can not be computed on GPU, but sparse_softmax_cross_entropy_with_logits can be computed on GPU. I could add with device cpu to solve the problem. But it seems simlar to https://github.com/tensorflow/models/issues/2803.\r\nThe problem may be with softmax kernel, and allow_soft_placement will also solve? \r\n\r\n\r\n### Source code / logs\r\nhttps://github.com/golbin/TensorFlow-Multi-GPUs/blob/master/many-GPUs-MNIST.py\r\n`import datetime\r\n\r\nimport tensorflow as tf\r\nfrom tensorflow.examples.tutorials.mnist import input_data\r\nfrom tensorflow.python.client import device_lib\r\n\r\n\r\ndef check_available_gpus():\r\n    local_devices = device_lib.list_local_devices()\r\n    gpu_names = [x.name for x in local_devices if x.device_type == 'GPU']\r\n    gpu_num = len(gpu_names)\r\n\r\n    print('{0} GPUs are detected : {1}'.format(gpu_num, gpu_names))\r\n\r\n    return gpu_num\r\n\r\n\r\ndef model(X, reuse=False):\r\n    with tf.variable_scope('L1', reuse=reuse):\r\n        L1 = tf.layers.conv2d(X, 64, [3, 3], reuse=reuse)\r\n        L1 = tf.layers.max_pooling2d(L1, [2, 2], [2, 2])\r\n        L1 = tf.layers.dropout(L1, 0.7, True)\r\n\r\n    with tf.variable_scope('L2', reuse=reuse):\r\n        L2 = tf.layers.conv2d(L1, 128, [3, 3], reuse=reuse)\r\n        L2 = tf.layers.max_pooling2d(L2, [2, 2], [2, 2])\r\n        L2 = tf.layers.dropout(L2, 0.7, True)\r\n\r\n    with tf.variable_scope('L2-1', reuse=reuse):\r\n        L2_1 = tf.layers.conv2d(L2, 128, [3, 3], reuse=reuse)\r\n        L2_1 = tf.layers.max_pooling2d(L2_1, [2, 2], [2, 2])\r\n        L2_1 = tf.layers.dropout(L2_1, 0.7, True)\r\n\r\n    with tf.variable_scope('L3', reuse=reuse):\r\n        L3 = tf.contrib.layers.flatten(L2_1)\r\n        L3 = tf.layers.dense(L3, 1024, activation=tf.nn.relu)\r\n        L3 = tf.layers.dropout(L3, 0.5, True)\r\n\r\n    with tf.variable_scope('L4', reuse=reuse):\r\n        L4 = tf.layers.dense(L3, 256, activation=tf.nn.relu)\r\n\r\n    with tf.variable_scope('LF', reuse=reuse):\r\n        LF = tf.layers.dense(L4, 10, activation=None)\r\n\r\n    return LF\r\n\r\n\r\nif __name__ == '__main__':\r\n    # need to change learning rates and batch size by number of GPU\r\n    batch_size = 10000\r\n    learning_rate = 0.001\r\n    total_epoch = 10\r\n\r\n    gpu_num = check_available_gpus()\r\n\r\n    X = tf.placeholder(tf.float32, [None, 28, 28, 1])\r\n    Y = tf.placeholder(tf.float32, [None, 10])\r\n\r\n    losses = []\r\n    X_A = tf.split(X, int(gpu_num))\r\n    Y_A = tf.split(Y, int(gpu_num))\r\n\r\n    '''\r\n    Multi GPUs Usage\r\n    Results on P40\r\n     * Single GPU computation time: 0:00:22.252533\r\n     * 2 GPU computation time: 0:00:12.632623\r\n     * 4 GPU computation time: 0:00:11.083071\r\n     * 8 GPU computation time: 0:00:11.990167\r\n     \r\n    Need to change batch size and learning rates\r\n         for training more efficiently\r\n    \r\n    Reference: https://research.fb.com/wp-content/uploads/2017/06/imagenet1kin1h5.pdf\r\n    '''\r\n    for gpu_id in range(int(gpu_num)):\r\n        with tf.device(tf.DeviceSpec(device_type=\"GPU\", device_index=gpu_id)):\r\n            with tf.variable_scope(tf.get_variable_scope(), reuse=(gpu_id > 0)):\r\n                cost = tf.nn.softmax_cross_entropy_with_logits(\r\n                                logits=model(X_A[gpu_id], gpu_id > 0),\r\n                                labels=Y_A[gpu_id])\r\n                losses.append(cost)\r\n\r\n    loss = tf.reduce_mean(tf.concat(losses, axis=0))\r\n\r\n    optimizer = tf.train.AdamOptimizer(learning_rate).minimize(\r\n        loss, colocate_gradients_with_ops=True)  # Important!\r\n\r\n    init = tf.global_variables_initializer()\r\n    sess = tf.Session(config=tf.ConfigProto(log_device_placement=False))\r\n    sess.run(init)\r\n\r\n    mnist = input_data.read_data_sets('/tmp/tensorflow/mnist/input_data', one_hot=True)\r\n    total_batch = int(mnist.train.num_examples/batch_size)\r\n    print(\"total: %s, %s, %s\" % (mnist.train.num_examples, total_batch, batch_size))\r\n\r\n    start_time = datetime.datetime.now()\r\n\r\n    for epoch in range(total_epoch):\r\n        total_cost = 0\r\n\r\n        for i in range(total_batch):\r\n            batch_xs, batch_ys = mnist.train.next_batch(batch_size)\r\n            batch_xs = batch_xs.reshape(-1, 28, 28, 1)\r\n            _, cost_val = sess.run([optimizer, loss],\r\n                                   feed_dict={X: batch_xs,\r\n                                              Y: batch_ys})\r\n            total_cost += cost_val\r\n\r\n        print(\"total cost : %s\" % total_cost)\r\n\r\n    print(\"--- Training time : {0} seconds /w {1} GPUs ---\".format(\r\n        datetime.datetime.now() - start_time, gpu_num))`\r\n\r\nLogs:\r\n\r\n`F:\\Anaconda3\\envs\\tf\\python.exe F:/ODT/Leaf/leafmg.py\r\n1.9.0\r\n2018-08-02 17:25:58.253241: I c:\\users\\user\\source\\repos\\tensorflow\\tensorflow\\core\\common_runtime\\gpu\\gpu_device.cc:1392] Found device 0 with properties: \r\nname: GeForce GTX 1070 major: 6 minor: 1 memoryClockRate(GHz): 1.645\r\npciBusID: 0000:01:00.0\r\ntotalMemory: 8.00GiB freeMemory: 6.62GiB\r\n2018-08-02 17:25:58.253526: I c:\\users\\user\\source\\repos\\tensorflow\\tensorflow\\core\\common_runtime\\gpu\\gpu_device.cc:1471] Adding visible gpu devices: 0\r\n2018-08-02 17:26:43.721732: I c:\\users\\user\\source\\repos\\tensorflow\\tensorflow\\core\\common_runtime\\gpu\\gpu_device.cc:952] Device interconnect StreamExecutor with strength 1 edge matrix:\r\n2018-08-02 17:26:43.721924: I c:\\users\\user\\source\\repos\\tensorflow\\tensorflow\\core\\common_runtime\\gpu\\gpu_device.cc:958]      0 \r\n2018-08-02 17:26:43.722057: I c:\\users\\user\\source\\repos\\tensorflow\\tensorflow\\core\\common_runtime\\gpu\\gpu_device.cc:971] 0:   N \r\n2018-08-02 17:26:43.722281: I c:\\users\\user\\source\\repos\\tensorflow\\tensorflow\\core\\common_runtime\\gpu\\gpu_device.cc:1084] Created TensorFlow device (/device:GPU:0 with 6394 MB memory) -> physical GPU (device: 0, name: GeForce GTX 1070, pci bus id: 0000:01:00.0, compute capability: 6.1)\r\n1 GPUs are detected : ['/device:GPU:0']\r\nWARNING:tensorflow:From F:/ODT/Leaf/leafmg.py:81: softmax_cross_entropy_with_logits (from tensorflow.python.ops.nn_ops) is deprecated and will be removed in a future version.\r\nInstructions for updating:\r\n\r\nFuture major versions of TensorFlow will allow gradients to flow\r\ninto the labels input on backprop by default.\r\n\r\nSee @{tf.nn.softmax_cross_entropy_with_logits_v2}.\r\n\r\n2018-08-02 17:26:44.358873: I c:\\users\\user\\source\\repos\\tensorflow\\tensorflow\\core\\common_runtime\\gpu\\gpu_device.cc:1471] Adding visible gpu devices: 0\r\n2018-08-02 17:26:44.359084: I c:\\users\\user\\source\\repos\\tensorflow\\tensorflow\\core\\common_runtime\\gpu\\gpu_device.cc:952] Device interconnect StreamExecutor with strength 1 edge matrix:\r\n2018-08-02 17:26:44.359266: I c:\\users\\user\\source\\repos\\tensorflow\\tensorflow\\core\\common_runtime\\gpu\\gpu_device.cc:958]      0 \r\n2018-08-02 17:26:44.359392: I c:\\users\\user\\source\\repos\\tensorflow\\tensorflow\\core\\common_runtime\\gpu\\gpu_device.cc:971] 0:   N \r\n2018-08-02 17:26:44.359563: I c:\\users\\user\\source\\repos\\tensorflow\\tensorflow\\core\\common_runtime\\gpu\\gpu_device.cc:1084] Created TensorFlow device (/job:localhost/replica:0/task:0/device:GPU:0 with 6394 MB memory) -> physical GPU (device: 0, name: GeForce GTX 1070, pci bus id: 0000:01:00.0, compute capability: 6.1)\r\nTraceback (most recent call last):\r\n  File \"F:\\Anaconda3\\envs\\tf\\lib\\site-packages\\tensorflow\\python\\client\\session.py\", line 1322, in _do_call\r\n    return fn(*args)\r\n  File \"F:\\Anaconda3\\envs\\tf\\lib\\site-packages\\tensorflow\\python\\client\\session.py\", line 1305, in _run_fn\r\n    self._extend_graph()\r\n  File \"F:\\Anaconda3\\envs\\tf\\lib\\site-packages\\tensorflow\\python\\client\\session.py\", line 1340, in _extend_graph\r\n    tf_session.ExtendSession(self._session)\r\ntensorflow.python.framework.errors_impl.InvalidArgumentError: Cannot assign a device for operation 'softmax_cross_entropy_with_logits_sg': Could not satisfy explicit device specification '/device:GPU:0' because no supported kernel for GPU devices is available.\r\nColocation Debug Info:\r\nColocation group had the following types and devices: \r\nSoftmaxCrossEntropyWithLogits: GPU CPU \r\nIdentity: GPU CPU \r\nZerosLike: CPU \r\nConst: GPU CPU \r\nExpandDims: GPU CPU \r\nNeg: GPU CPU \r\nMul: GPU CPU \r\nLogSoftmax: CPU \r\n\r\nColocation members and user-requested devices:\r\n  softmax_cross_entropy_with_logits_sg (SoftmaxCrossEntropyWithLogits) /device:GPU:0\r\n  gradients/zeros_like (ZerosLike) /device:GPU:0\r\n  gradients/softmax_cross_entropy_with_logits_sg_grad/ExpandDims/dim (Const) /device:GPU:0\r\n  gradients/softmax_cross_entropy_with_logits_sg_grad/ExpandDims (ExpandDims) /device:GPU:0\r\n  gradients/softmax_cross_entropy_with_logits_sg_grad/mul (Mul) /device:GPU:0\r\n  gradients/softmax_cross_entropy_with_logits_sg_grad/LogSoftmax (LogSoftmax) /device:GPU:0\r\n  gradients/softmax_cross_entropy_with_logits_sg_grad/Neg (Neg) /device:GPU:0\r\n  gradients/softmax_cross_entropy_with_logits_sg_grad/ExpandDims_1/dim (Const) /device:GPU:0\r\n  gradients/softmax_cross_entropy_with_logits_sg_grad/ExpandDims_1 (ExpandDims) /device:GPU:0\r\n  gradients/softmax_cross_entropy_with_logits_sg_grad/mul_1 (Mul) /device:GPU:0\r\n  gradients/softmax_cross_entropy_with_logits_sg_grad/tuple/control_dependency (Identity) /device:GPU:0\r\n  gradients/softmax_cross_entropy_with_logits_sg_grad/tuple/control_dependency_1 (Identity) /device:GPU:0\r\n\r\nRegistered kernels:\r\n  device='CPU'; T in [DT_HALF]\r\n  device='CPU'; T in [DT_FLOAT]\r\n  device='CPU'; T in [DT_DOUBLE]\r\n  device='GPU'; T in [DT_HALF]\r\n  device='GPU'; T in [DT_FLOAT]\r\n  device='GPU'; T in [DT_DOUBLE]\r\n\r\n\t [[Node: softmax_cross_entropy_with_logits_sg = SoftmaxCrossEntropyWithLogits[T=DT_FLOAT, _device=\"/device:GPU:0\"](softmax_cross_entropy_with_logits_sg/Reshape, softmax_cross_entropy_with_logits_sg/Reshape_1)]]\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTraceback (most recent call last):\r\n  File \"F:/ODT/Leaf/leafmg.py\", line 91, in <module>\r\n    sess.run(init)\r\n  File \"F:\\Anaconda3\\envs\\tf\\lib\\site-packages\\tensorflow\\python\\client\\session.py\", line 900, in run\r\n    run_metadata_ptr)\r\n  File \"F:\\Anaconda3\\envs\\tf\\lib\\site-packages\\tensorflow\\python\\client\\session.py\", line 1135, in _run\r\n    feed_dict_tensor, options, run_metadata)\r\n  File \"F:\\Anaconda3\\envs\\tf\\lib\\site-packages\\tensorflow\\python\\client\\session.py\", line 1316, in _do_run\r\n    run_metadata)\r\n  File \"F:\\Anaconda3\\envs\\tf\\lib\\site-packages\\tensorflow\\python\\client\\session.py\", line 1335, in _do_call\r\n    raise type(e)(node_def, op, message)\r\ntensorflow.python.framework.errors_impl.InvalidArgumentError: Cannot assign a device for operation 'softmax_cross_entropy_with_logits_sg': Could not satisfy explicit device specification '/device:GPU:0' because no supported kernel for GPU devices is available.\r\nColocation Debug Info:\r\nColocation group had the following types and devices: \r\nSoftmaxCrossEntropyWithLogits: GPU CPU \r\nIdentity: GPU CPU \r\nZerosLike: CPU \r\nConst: GPU CPU \r\nExpandDims: GPU CPU \r\nNeg: GPU CPU \r\nMul: GPU CPU \r\nLogSoftmax: CPU \r\n\r\nColocation members and user-requested devices:\r\n  softmax_cross_entropy_with_logits_sg (SoftmaxCrossEntropyWithLogits) /device:GPU:0\r\n  gradients/zeros_like (ZerosLike) /device:GPU:0\r\n  gradients/softmax_cross_entropy_with_logits_sg_grad/ExpandDims/dim (Const) /device:GPU:0\r\n  gradients/softmax_cross_entropy_with_logits_sg_grad/ExpandDims (ExpandDims) /device:GPU:0\r\n  gradients/softmax_cross_entropy_with_logits_sg_grad/mul (Mul) /device:GPU:0\r\n  gradients/softmax_cross_entropy_with_logits_sg_grad/LogSoftmax (LogSoftmax) /device:GPU:0\r\n  gradients/softmax_cross_entropy_with_logits_sg_grad/Neg (Neg) /device:GPU:0\r\n  gradients/softmax_cross_entropy_with_logits_sg_grad/ExpandDims_1/dim (Const) /device:GPU:0\r\n  gradients/softmax_cross_entropy_with_logits_sg_grad/ExpandDims_1 (ExpandDims) /device:GPU:0\r\n  gradients/softmax_cross_entropy_with_logits_sg_grad/mul_1 (Mul) /device:GPU:0\r\n  gradients/softmax_cross_entropy_with_logits_sg_grad/tuple/control_dependency (Identity) /device:GPU:0\r\n  gradients/softmax_cross_entropy_with_logits_sg_grad/tuple/control_dependency_1 (Identity) /device:GPU:0\r\n\r\nRegistered kernels:\r\n  device='CPU'; T in [DT_HALF]\r\n  device='CPU'; T in [DT_FLOAT]\r\n  device='CPU'; T in [DT_DOUBLE]\r\n  device='GPU'; T in [DT_HALF]\r\n  device='GPU'; T in [DT_FLOAT]\r\n  device='GPU'; T in [DT_DOUBLE]\r\n\r\n\t [[Node: softmax_cross_entropy_with_logits_sg = SoftmaxCrossEntropyWithLogits[T=DT_FLOAT, _device=\"/device:GPU:0\"](softmax_cross_entropy_with_logits_sg/Reshape, softmax_cross_entropy_with_logits_sg/Reshape_1)]]\r\n\r\nCaused by op 'softmax_cross_entropy_with_logits_sg', defined at:\r\n  File \"F:/ODT/Leaf/leafmg.py\", line 81, in <module>\r\n    labels=Y_A[gpu_id])\r\n  File \"F:\\Anaconda3\\envs\\tf\\lib\\site-packages\\tensorflow\\python\\util\\deprecation.py\", line 250, in new_func\r\n    return func(*args, **kwargs)\r\n  File \"F:\\Anaconda3\\envs\\tf\\lib\\site-packages\\tensorflow\\python\\ops\\nn_ops.py\", line 1968, in softmax_cross_entropy_with_logits\r\n    labels=labels, logits=logits, dim=dim, name=name)\r\n  File \"F:\\Anaconda3\\envs\\tf\\lib\\site-packages\\tensorflow\\python\\ops\\nn_ops.py\", line 1879, in softmax_cross_entropy_with_logits_v2\r\n    precise_logits, labels, name=name)\r\n  File \"F:\\Anaconda3\\envs\\tf\\lib\\site-packages\\tensorflow\\python\\ops\\gen_nn_ops.py\", line 7738, in softmax_cross_entropy_with_logits\r\n    name=name)\r\n  File \"F:\\Anaconda3\\envs\\tf\\lib\\site-packages\\tensorflow\\python\\framework\\op_def_library.py\", line 787, in _apply_op_helper\r\n    op_def=op_def)\r\n  File \"F:\\Anaconda3\\envs\\tf\\lib\\site-packages\\tensorflow\\python\\framework\\ops.py\", line 3414, in create_op\r\n    op_def=op_def)\r\n  File \"F:\\Anaconda3\\envs\\tf\\lib\\site-packages\\tensorflow\\python\\framework\\ops.py\", line 1740, in __init__\r\n    self._traceback = self._graph._extract_stack()  # pylint: disable=protected-access\r\n\r\nInvalidArgumentError (see above for traceback): Cannot assign a device for operation 'softmax_cross_entropy_with_logits_sg': Could not satisfy explicit device specification '/device:GPU:0' because no supported kernel for GPU devices is available.\r\nColocation Debug Info:\r\nColocation group had the following types and devices: \r\nSoftmaxCrossEntropyWithLogits: GPU CPU \r\nIdentity: GPU CPU \r\nZerosLike: CPU \r\nConst: GPU CPU \r\nExpandDims: GPU CPU \r\nNeg: GPU CPU \r\nMul: GPU CPU \r\nLogSoftmax: CPU \r\n\r\nColocation members and user-requested devices:\r\n  softmax_cross_entropy_with_logits_sg (SoftmaxCrossEntropyWithLogits) /device:GPU:0\r\n  gradients/zeros_like (ZerosLike) /device:GPU:0\r\n  gradients/softmax_cross_entropy_with_logits_sg_grad/ExpandDims/dim (Const) /device:GPU:0\r\n  gradients/softmax_cross_entropy_with_logits_sg_grad/ExpandDims (ExpandDims) /device:GPU:0\r\n  gradients/softmax_cross_entropy_with_logits_sg_grad/mul (Mul) /device:GPU:0\r\n  gradients/softmax_cross_entropy_with_logits_sg_grad/LogSoftmax (LogSoftmax) /device:GPU:0\r\n  gradients/softmax_cross_entropy_with_logits_sg_grad/Neg (Neg) /device:GPU:0\r\n  gradients/softmax_cross_entropy_with_logits_sg_grad/ExpandDims_1/dim (Const) /device:GPU:0\r\n  gradients/softmax_cross_entropy_with_logits_sg_grad/ExpandDims_1 (ExpandDims) /device:GPU:0\r\n  gradients/softmax_cross_entropy_with_logits_sg_grad/mul_1 (Mul) /device:GPU:0\r\n  gradients/softmax_cross_entropy_with_logits_sg_grad/tuple/control_dependency (Identity) /device:GPU:0\r\n  gradients/softmax_cross_entropy_with_logits_sg_grad/tuple/control_dependency_1 (Identity) /device:GPU:0\r\n\r\nRegistered kernels:\r\n  device='CPU'; T in [DT_HALF]\r\n  device='CPU'; T in [DT_FLOAT]\r\n  device='CPU'; T in [DT_DOUBLE]\r\n  device='GPU'; T in [DT_HALF]\r\n  device='GPU'; T in [DT_FLOAT]\r\n  device='GPU'; T in [DT_DOUBLE]\r\n\r\n\t [[Node: softmax_cross_entropy_with_logits_sg = SoftmaxCrossEntropyWithLogits[T=DT_FLOAT, _device=\"/device:GPU:0\"](softmax_cross_entropy_with_logits_sg/Reshape, softmax_cross_entropy_with_logits_sg/Reshape_1)]]\r\n\r\n\r\nProcess finished with exit code 1\r\n`\r\n"}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/21335", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/21335/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/21335/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/21335/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/21335", "id": 346928909, "node_id": "MDU6SXNzdWUzNDY5Mjg5MDk=", "number": 21335, "title": "Possible bug / Documentation Suggestion - Dataset API + Estimator API does not throw an exception when the input filepath to the dataset is incorrect", "user": {"login": "tejaswid", "id": 11408325, "node_id": "MDQ6VXNlcjExNDA4MzI1", "avatar_url": "https://avatars2.githubusercontent.com/u/11408325?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tejaswid", "html_url": "https://github.com/tejaswid", "followers_url": "https://api.github.com/users/tejaswid/followers", "following_url": "https://api.github.com/users/tejaswid/following{/other_user}", "gists_url": "https://api.github.com/users/tejaswid/gists{/gist_id}", "starred_url": "https://api.github.com/users/tejaswid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tejaswid/subscriptions", "organizations_url": "https://api.github.com/users/tejaswid/orgs", "repos_url": "https://api.github.com/users/tejaswid/repos", "events_url": "https://api.github.com/users/tejaswid/events{/privacy}", "received_events_url": "https://api.github.com/users/tejaswid/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 299643928, "node_id": "MDU6TGFiZWwyOTk2NDM5Mjg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:contributions%20welcome", "name": "stat:contributions welcome", "color": "f4b400", "default": false, "description": ""}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2018-08-02T09:21:28Z", "updated_at": "2018-10-22T16:22:54Z", "closed_at": null, "author_association": "NONE", "body": "### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**: Yes.\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**: Linux Ubuntu 16.04\r\n- **Mobile device (e.g. iPhone 8, Pixel 2, Samsung Galaxy) if the issue happens on mobile device**: No\r\n- **TensorFlow installed from (source or binary)**: Binary\r\n- **TensorFlow version (use command below)**: v1.9.0-0-g25c197e023 1.9.0\r\n- **Python version**: 3.6.6\r\n- **Bazel version (if compiling from source)**: N/A\r\n- **GCC/Compiler version (if compiling from source)**: \r\n- **CUDA/cuDNN version**: CUDA 9.0  / CUDNN 7.1.4.18\r\n- **GPU model and memory**: GTX 1080 Ti - 9710 MB\r\n- **Exact command to reproduce**: See below\r\n\r\n### Describe the problem\r\nWhen using the Dataset API along with the Estimator API, if the input file path to the dataset, while initializing **tf.data.TFRecordDataset** or **tf.data.FixedLengthRecordDataset**, is incorrect/ file does not exist, it does not immediately throw an exception. Instead the entire network graph is constructed, weights are initialized and checkpoints (if present) are loaded.\r\n\r\nThe only indication that something is wrong is when the session.run is called inside the function **_train_with_estimator_spec** in the train loop of the estimator.** The loss remains _None_ and the global_step is not updated**. Moreover, the training runs for as many epochs as requested with nothing being updated. \r\n\r\nHowever, even if one were to use the Dataset API with an incorrect file path but still overwrite the features and labels returned by it with manually set values, the loss is still not computed and remains as _None_ and the same problem as above persists. This is very counter-intuitive and hard to debug.\r\n\r\nIt would be better if the Dataset API somehow threw an exception in the beginning itself. If this is not possible, it would be nice if this was documented somewhere.\r\n\r\n### Source code\r\n\r\n1. Clone the tensorflow models from the official repository.\r\n`git clone https://github.com/tensorflow/models.git tfmodels`\r\n`cd tfmodels`\r\n\r\n2. Run the **cifar10_download_and_extract.py** file to download and extract the cifar10 dataset.\r\n3. Run the **cifar10_main.py** file to check that the original model is running correctly.\r\n\r\n4. Delete the .bin files inside the **cifar-10-batches-bin** folder that was created in step 2. Keep the folder but only delete the contents inside it. By doing so we are passing an empty string to the dataset initializer and hence the dataset iterator is probably returning garbage values.\r\n5. Re-run step 3 and you see the error described.\r\n\r\n6. Make a copy of the file **cifar10_main.py** and edit it by adding the following lines just before the return statement in the function **parse_record**.\r\n`image = tf.constant(value=0.0, shape=[32, 32, 3], dtype=tf.float32)`\r\n`label = tf.constant(value=0, shape=[], dtype=tf.int32)`\r\nBy doing so we are still using an incorrect initializer but are now replacing the garbage values returned by the reader with known constants (zeros in this case).\r\n7. Re-run the modified file and you still see the error described."}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/21334", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/21334/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/21334/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/21334/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/21334", "id": 346928475, "node_id": "MDU6SXNzdWUzNDY5Mjg0NzU=", "number": 21334, "title": "\"could not initialize a memory descriptor\" error using tensorflow on windows using CMake", "user": {"login": "syagev", "id": 5247438, "node_id": "MDQ6VXNlcjUyNDc0Mzg=", "avatar_url": "https://avatars1.githubusercontent.com/u/5247438?v=4", "gravatar_id": "", "url": "https://api.github.com/users/syagev", "html_url": "https://github.com/syagev", "followers_url": "https://api.github.com/users/syagev/followers", "following_url": "https://api.github.com/users/syagev/following{/other_user}", "gists_url": "https://api.github.com/users/syagev/gists{/gist_id}", "starred_url": "https://api.github.com/users/syagev/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/syagev/subscriptions", "organizations_url": "https://api.github.com/users/syagev/orgs", "repos_url": "https://api.github.com/users/syagev/repos", "events_url": "https://api.github.com/users/syagev/events{/privacy}", "received_events_url": "https://api.github.com/users/syagev/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": {"login": "tatatodd", "id": 5453737, "node_id": "MDQ6VXNlcjU0NTM3Mzc=", "avatar_url": "https://avatars3.githubusercontent.com/u/5453737?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tatatodd", "html_url": "https://github.com/tatatodd", "followers_url": "https://api.github.com/users/tatatodd/followers", "following_url": "https://api.github.com/users/tatatodd/following{/other_user}", "gists_url": "https://api.github.com/users/tatatodd/gists{/gist_id}", "starred_url": "https://api.github.com/users/tatatodd/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tatatodd/subscriptions", "organizations_url": "https://api.github.com/users/tatatodd/orgs", "repos_url": "https://api.github.com/users/tatatodd/repos", "events_url": "https://api.github.com/users/tatatodd/events{/privacy}", "received_events_url": "https://api.github.com/users/tatatodd/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "tatatodd", "id": 5453737, "node_id": "MDQ6VXNlcjU0NTM3Mzc=", "avatar_url": "https://avatars3.githubusercontent.com/u/5453737?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tatatodd", "html_url": "https://github.com/tatatodd", "followers_url": "https://api.github.com/users/tatatodd/followers", "following_url": "https://api.github.com/users/tatatodd/following{/other_user}", "gists_url": "https://api.github.com/users/tatatodd/gists{/gist_id}", "starred_url": "https://api.github.com/users/tatatodd/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tatatodd/subscriptions", "organizations_url": "https://api.github.com/users/tatatodd/orgs", "repos_url": "https://api.github.com/users/tatatodd/repos", "events_url": "https://api.github.com/users/tatatodd/events{/privacy}", "received_events_url": "https://api.github.com/users/tatatodd/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 3, "created_at": "2018-08-02T09:20:09Z", "updated_at": "2018-12-21T18:51:40Z", "closed_at": null, "author_association": "NONE", "body": "### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**: NO\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**: Windows 10 (build 17134) \r\n- **Mobile device (e.g. iPhone 8, Pixel 2, Samsung Galaxy) if the issue happens on mobile device**: N/A\r\n- **TensorFlow installed from (source or binary)**: source\r\n- **TensorFlow version (use command below)**: 1.9\r\n- **Python version**: 3.6\r\n- **Bazel version (if compiling from source)**: 0.15\r\n- **GCC/Compiler version (if compiling from source)**: CMake > VS 2017\r\n- **CUDA/cuDNN version**: N/A\r\n- **GPU model and memory**: N/A\r\n- **Exact command to reproduce**: `Session::run()`\r\n\r\n### Describe the problem\r\n\r\nI've built tensorflow (r1.9, using the CMake tools) linked with MKL (v2018 U3) and mkl-dnn (v0.15). I'm running windows 10 (build 17134) on an Intel Core i7-7820HQ CPU. \r\n\r\nI've built mkl-dnn from source and it's test are passing. However, a C++ project that loads a pre-trained tensorflow graph and passes an image for inference gives the following error when calling `Session::run(...)` :\r\n```\r\nW d:\\dev\\tensorflow\\tensorflow\\core\\framework\\op_kernel.cc:1318] OP_REQUIRES failed at mkl_conv_ops.cc:888 : Aborted: Operation received an exception:Status: 3, message: could not initialize a memory descriptor, in file d:\\dev\\tensorflow\\tensorflow\\core\\kernels\\mkl_conv_ops.cc:886\r\nAborted: Operation received an exception:Status: 3, message: could not initialize a memory descriptor, in file d:\\dev\\tensorflow\\tensorflow\\core\\kernels\\mkl_conv_ops.cc:886\r\n         [[Node: conv1/BiasAdd = _MklConv2DWithBias[T=DT_FLOAT, _kernel=\"MklOp\", data_format=\"NHWC\", dilations=[1, 1, 1, 1], padding=\"VALID\", strides=[1, 2, 2, 1], use_cudnn_on_gpu=true, _device=\"/job:localhost/replica:0/task:0/device:CPU:0\"](conv1_pad/Pad, conv1/kernel, conv1/bias, DMT/_0, DMT/_1, DMT/_2)]]\r\n```\r\nThe same code (with the same pre-trained model) does work on a linux machine (Intel(R) Xeon(R) CPU E5-2673 v3, running on Microsoft Azure), also with TF built with mkl-dnn.\r\n\r\n### Source code / logs\r\n\r\nInstall MKL 2018 U3 and build MKL-DNN v0.15 from source.\r\n\r\nBuild TF r1.9 with the following flags:\r\n```\r\ntensorflow_BUILD_ALL_KERNERS=ON\r\ntensorflow_BUILD_CONTRIB_KERNELS=ON\r\ntensorflow_BUILD_SHARED_LIB=ON\r\ntensorflow_ENABLE_GPU=OFF\r\ntensorflow_ENABLE_GRPC_SUPPORT=ON\r\ntensorflow_ENABLE_JEMALLOC_SUPPORT=OFF\r\ntensorflow_ENABLE_MKLDNN_SUPPORT=ON\r\ntensorflow_ENABLE_MKL_SUPPORT=ON\r\ntensorflow_ENABLE_POSITION_INDEPENDENT_CODE=ON\r\ntensorflow_ENABLE_SNAPPY_SUPPORT=ON\r\ntensorflow_OPTIMIZE_FOR_NATIVE_ARCH=ON\r\ntensorflow_WIN_CPU_SIMD_OPTIONS=ON\r\n```\r\n\r\nBuild passes and generates `tensorflow.dll`. Use keras to save a pre-trained Resnet50 model and attempt inference from C++ (linked with `tensorflow.dll`) as follows:\r\n```\r\nSession* session;\r\nStatus status = NewSession(SessionOptions(), &session);\r\n\r\nGraphDef graph_def;\r\nstatus = ReadBinaryProto(Env::Default(), \"../graph/resnet50.pb\", &graph_def);\r\nstatus = session->Create(graph_def);\r\n\r\nMat img = imread(\"../elephant.png\"), imgFloat, imgResized;\r\nimg.convertTo(imgFloat, CV_32FC3);\r\n\r\nTensor tInput(DT_FLOAT, TensorShape({ 1, 224, 224, 3 }));\r\nauto input_tensor_mapped = tInput.tensor<float, 4>();\r\n\r\nMat imgTensor(224, 224, CV_32FC3);\r\nresize(imgFloat, imgTensor, Size(224, 224));\r\nimgTensor -= Scalar(103.939, 116.779, 123.68);\r\n\t\r\nauto source_data = imgTensor.ptr<float>(0);\r\nint width = imgTensor.cols, height = imgTensor.rows, depth=3;\r\nfor (int y = 0; y < height; ++y) {\r\n\tfor (int x = 0; x < width; ++x) {\r\n\t\tfor (int c = 0; c < depth; ++c) {\r\n\t\t\tconst float* source_value = source_data + (3*width*y) + (3*x) + (2-c);\r\n\t\t\tinput_tensor_mapped(0, y, x, c) = *source_value;\r\n\t\t}\r\n\t}\r\n}\r\n\r\nstd::vector<std::pair<string, tensorflow::Tensor>> inputs = {\r\n\t{ \"input_1\", tInput },\r\n};\r\n\r\nstd::vector<tensorflow::Tensor> outputs;\r\nstatus = session->Run(inputs, { \"fc1000/Softmax\" }, {}, &outputs);\r\nif (!status.ok()) {\r\n\tstd::cout << status.ToString() << \"\\n\";\r\n\treturn 1;\r\n}\r\n```"}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/21328", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/21328/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/21328/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/21328/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/21328", "id": 346895915, "node_id": "MDU6SXNzdWUzNDY4OTU5MTU=", "number": 21328, "title": "FusedBatchNorm of TF 1.9 doesn't work fine ", "user": {"login": "haifenghan", "id": 4157827, "node_id": "MDQ6VXNlcjQxNTc4Mjc=", "avatar_url": "https://avatars1.githubusercontent.com/u/4157827?v=4", "gravatar_id": "", "url": "https://api.github.com/users/haifenghan", "html_url": "https://github.com/haifenghan", "followers_url": "https://api.github.com/users/haifenghan/followers", "following_url": "https://api.github.com/users/haifenghan/following{/other_user}", "gists_url": "https://api.github.com/users/haifenghan/gists{/gist_id}", "starred_url": "https://api.github.com/users/haifenghan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/haifenghan/subscriptions", "organizations_url": "https://api.github.com/users/haifenghan/orgs", "repos_url": "https://api.github.com/users/haifenghan/repos", "events_url": "https://api.github.com/users/haifenghan/events{/privacy}", "received_events_url": "https://api.github.com/users/haifenghan/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 404586594, "node_id": "MDU6TGFiZWw0MDQ1ODY1OTQ=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:awaiting%20tensorflower", "name": "stat:awaiting tensorflower", "color": "f4b400", "default": false, "description": ""}, {"id": 473172988, "node_id": "MDU6TGFiZWw0NzMxNzI5ODg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:bug", "name": "type:bug", "color": "159b2e", "default": false, "description": ""}], "state": "open", "locked": false, "assignee": {"login": "rohan100jain", "id": 144114, "node_id": "MDQ6VXNlcjE0NDExNA==", "avatar_url": "https://avatars2.githubusercontent.com/u/144114?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rohan100jain", "html_url": "https://github.com/rohan100jain", "followers_url": "https://api.github.com/users/rohan100jain/followers", "following_url": "https://api.github.com/users/rohan100jain/following{/other_user}", "gists_url": "https://api.github.com/users/rohan100jain/gists{/gist_id}", "starred_url": "https://api.github.com/users/rohan100jain/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rohan100jain/subscriptions", "organizations_url": "https://api.github.com/users/rohan100jain/orgs", "repos_url": "https://api.github.com/users/rohan100jain/repos", "events_url": "https://api.github.com/users/rohan100jain/events{/privacy}", "received_events_url": "https://api.github.com/users/rohan100jain/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "rohan100jain", "id": 144114, "node_id": "MDQ6VXNlcjE0NDExNA==", "avatar_url": "https://avatars2.githubusercontent.com/u/144114?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rohan100jain", "html_url": "https://github.com/rohan100jain", "followers_url": "https://api.github.com/users/rohan100jain/followers", "following_url": "https://api.github.com/users/rohan100jain/following{/other_user}", "gists_url": "https://api.github.com/users/rohan100jain/gists{/gist_id}", "starred_url": "https://api.github.com/users/rohan100jain/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rohan100jain/subscriptions", "organizations_url": "https://api.github.com/users/rohan100jain/orgs", "repos_url": "https://api.github.com/users/rohan100jain/repos", "events_url": "https://api.github.com/users/rohan100jain/events{/privacy}", "received_events_url": "https://api.github.com/users/rohan100jain/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 11, "created_at": "2018-08-02T07:42:34Z", "updated_at": "2018-12-15T18:40:13Z", "closed_at": null, "author_association": "NONE", "body": "After importing the frozen model [mobilenet_v2_1.0_224](https://storage.googleapis.com/mobilenet_v2/checkpoints/mobilenet_v2_1.0_224.tgz), I find there are 4 outputs of FusedBatchNorm operation and I can't eval() other 3 tensors:\r\n\r\n### System information\r\n- **Ubuntu 18.04 desktop\r\n- **TensorFlow installed from (source or binary)**: binary(pip)\r\n- **TensorFlow version (use command below)**: 1.9\r\n- **Python version**: 2.7.15rc1\r\n- **CUDA/cuDNN version**: CPU only\r\n- **Exact command to reproduce**:\r\n```\r\nipdb> batch_norm = tf.get_default_graph().get_operation_by_name('MobilenetV2/expanded_conv/depthwise/BatchNorm/FusedBatchNorm')                  \r\nipdb> batch_norm.outputs\r\n[<tf.Tensor 'MobilenetV2/expanded_conv/depthwise/BatchNorm/FusedBatchNorm:0' shape=(1, 112, 112, 32) dtype=float32>, <tf.Tensor 'MobilenetV2/expan\r\nded_conv/depthwise/BatchNorm/FusedBatchNorm:1' shape=(32,) dtype=float32>, <tf.Tensor 'MobilenetV2/expanded_conv/depthwise/BatchNorm/FusedBatchNor\r\nm:2' shape=(32,) dtype=float32>, <tf.Tensor 'MobilenetV2/expanded_conv/depthwise/BatchNorm/FusedBatchNorm:3' shape=(32,) dtype=float32>, <tf.Tenso\r\nr 'MobilenetV2/expanded_conv/depthwise/BatchNorm/FusedBatchNorm:4' shape=(32,) dtype=float32>]                                                   \r\nipdb> batch_norm.outputs[1].eval()\r\nOptimizing fused batch norm node name: \"MobilenetV2/expanded_conv/depthwise/BatchNorm/FusedBatchNorm\"                                            \r\nop: \"FusedBatchNorm\"\r\ninput: \"MobilenetV2/expanded_conv/depthwise/depthwise\"\r\ninput: \"Const_198\"                                                                                                                               \r\ninput: \"Const_37\"\r\ninput: \"Const_138\"\r\ninput: \"Const_120\"\r\ndevice: \"/job:localhost/replica:0/task:0/device:CPU:0\"\r\nattr {\r\n  key: \"T\"\r\n  value {\r\n    type: DT_FLOAT\r\n  }\r\n}\r\nattr {\r\n  key: \"data_format\"\r\n  value {\r\n    s: \"NHWC\"\r\n  }\r\n}\r\nattr {\r\n  key: \"epsilon\"\r\n  value {\r\n    f: 0.001\r\n  }\r\n}\r\nattr {\r\n  key: \"is_training\"\r\n  value {\r\n    b: false\r\n  }\r\n}\r\n\r\n*** InvalidArgumentError: FetchOutputs MobilenetV2/expanded_conv/depthwise/BatchNorm/FusedBatchNorm:1: output index too large, must be < 1\r\n\r\n```\r\n\r\nBTW, TensorFlow 1.8 works fine."}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/21323", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/21323/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/21323/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/21323/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/21323", "id": 346844177, "node_id": "MDU6SXNzdWUzNDY4NDQxNzc=", "number": 21323, "title": "[TensorFlow Android Camera Demo] add libSVM AAR but \"Native TF methods not found\"", "user": {"login": "why702", "id": 21079425, "node_id": "MDQ6VXNlcjIxMDc5NDI1", "avatar_url": "https://avatars1.githubusercontent.com/u/21079425?v=4", "gravatar_id": "", "url": "https://api.github.com/users/why702", "html_url": "https://github.com/why702", "followers_url": "https://api.github.com/users/why702/followers", "following_url": "https://api.github.com/users/why702/following{/other_user}", "gists_url": "https://api.github.com/users/why702/gists{/gist_id}", "starred_url": "https://api.github.com/users/why702/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/why702/subscriptions", "organizations_url": "https://api.github.com/users/why702/orgs", "repos_url": "https://api.github.com/users/why702/repos", "events_url": "https://api.github.com/users/why702/events{/privacy}", "received_events_url": "https://api.github.com/users/why702/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": {"login": "tatianashp", "id": 986732, "node_id": "MDQ6VXNlcjk4NjczMg==", "avatar_url": "https://avatars2.githubusercontent.com/u/986732?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tatianashp", "html_url": "https://github.com/tatianashp", "followers_url": "https://api.github.com/users/tatianashp/followers", "following_url": "https://api.github.com/users/tatianashp/following{/other_user}", "gists_url": "https://api.github.com/users/tatianashp/gists{/gist_id}", "starred_url": "https://api.github.com/users/tatianashp/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tatianashp/subscriptions", "organizations_url": "https://api.github.com/users/tatianashp/orgs", "repos_url": "https://api.github.com/users/tatianashp/repos", "events_url": "https://api.github.com/users/tatianashp/events{/privacy}", "received_events_url": "https://api.github.com/users/tatianashp/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "tatianashp", "id": 986732, "node_id": "MDQ6VXNlcjk4NjczMg==", "avatar_url": "https://avatars2.githubusercontent.com/u/986732?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tatianashp", "html_url": "https://github.com/tatianashp", "followers_url": "https://api.github.com/users/tatianashp/followers", "following_url": "https://api.github.com/users/tatianashp/following{/other_user}", "gists_url": "https://api.github.com/users/tatianashp/gists{/gist_id}", "starred_url": "https://api.github.com/users/tatianashp/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tatianashp/subscriptions", "organizations_url": "https://api.github.com/users/tatianashp/orgs", "repos_url": "https://api.github.com/users/tatianashp/repos", "events_url": "https://api.github.com/users/tatianashp/events{/privacy}", "received_events_url": "https://api.github.com/users/tatianashp/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 2, "created_at": "2018-08-02T03:18:28Z", "updated_at": "2018-12-19T18:47:39Z", "closed_at": null, "author_association": "NONE", "body": "I use the demo code successfully.\r\nHowever, when I wand to add libSVM AAR to the dependencies. \r\nhttps://github.com/yctung/AndroidLibSVM\r\n\r\nAnd the debug console show:\r\n```\r\nI/TensorFlowInferenceInterface: Checking to see if TensorFlow native methods are already loaded\r\nE/zygote64: No implementation found for long org.tensorflow.contrib.android.RunStats.allocate() (tried Java_org_tensorflow_contrib_android_RunStats_allocate and Java_org_tensorflow_contrib_android_RunStats_allocate__)\r\nI/TensorFlowInferenceInterface: TensorFlow native methods not found, attempting to load via tensorflow_inference\r\nE/MTCNN: [*]load model failedjava.lang.RuntimeException: Native TF methods not found; check that the correct native libraries are present in the APK.\r\nI/TensorFlowInferenceInterface: Checking to see if TensorFlow native methods are already loaded\r\nE/zygote64: No implementation found for long org.tensorflow.contrib.android.RunStats.allocate() (tried Java_org_tensorflow_contrib_android_RunStats_allocate and Java_org_tensorflow_contrib_android_RunStats_allocate__)\r\nI/TensorFlowInferenceInterface: TensorFlow native methods not found, attempting to load via tensorflow_inference\r\n```\r\n\r\nIn build.gradle:\r\n```\r\ndependencies {\r\n    if (nativeBuildSystem == 'cmake' || nativeBuildSystem == 'none') {\r\n        compile 'org.tensorflow:tensorflow-android:+'\r\n    }\r\n    implementation project(':androidlibsvm-release') --> if I remark this, the issue will disappear.\r\n}\r\n```\r\nCould anyone know how to fix this?\r\n\r\nTensorFlow version:\r\nv1.9.0-0-g25c197e023 1.9.0"}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/21315", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/21315/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/21315/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/21315/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/21315", "id": 346730505, "node_id": "MDU6SXNzdWUzNDY3MzA1MDU=", "number": 21315, "title": "building tensorflow shared library in windows debug mode (cmake) /MDd", "user": {"login": "amirhessam", "id": 9620110, "node_id": "MDQ6VXNlcjk2MjAxMTA=", "avatar_url": "https://avatars2.githubusercontent.com/u/9620110?v=4", "gravatar_id": "", "url": "https://api.github.com/users/amirhessam", "html_url": "https://github.com/amirhessam", "followers_url": "https://api.github.com/users/amirhessam/followers", "following_url": "https://api.github.com/users/amirhessam/following{/other_user}", "gists_url": "https://api.github.com/users/amirhessam/gists{/gist_id}", "starred_url": "https://api.github.com/users/amirhessam/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/amirhessam/subscriptions", "organizations_url": "https://api.github.com/users/amirhessam/orgs", "repos_url": "https://api.github.com/users/amirhessam/repos", "events_url": "https://api.github.com/users/amirhessam/events{/privacy}", "received_events_url": "https://api.github.com/users/amirhessam/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 404586558, "node_id": "MDU6TGFiZWw0MDQ1ODY1NTg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:community%20support", "name": "stat:community support", "color": "f4b400", "default": false, "description": ""}, {"id": 473173351, "node_id": "MDU6TGFiZWw0NzMxNzMzNTE=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:build/install", "name": "type:build/install", "color": "159b2e", "default": false, "description": ""}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2018-08-01T19:10:32Z", "updated_at": "2018-10-31T17:13:35Z", "closed_at": null, "author_association": "NONE", "body": "\r\n\r\n### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**: no\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**: windows 10\r\n- **TensorFlow installed from (source or binary)**: source\r\n- **TensorFlow version (use command below)**: r 1.9\r\n### Describe the problem\r\nWe get many linking error for building tensorflow shared library in windows when debug mode is selected\r\n(/MDd switch in VC++). We get many error messages like\r\n\r\n> mismatch detected for 'RuntimeLibrary': value 'MD_DynamicRelease' doesn't match value 'MDd_DynamicDebug' \r\n\r\nAfter digging into the issue, I noticed the linker is using wrong GRPC libs. \r\n\r\n`\r\ndouble_conversion\\src\\double_conversion\\double-conversion\\$(Configuration)\\double-conversion.lib\r\nzlib\\install\\lib\\zlibstaticd.lib\r\ngrpc\\src\\grpc\\Release\\grpc++_unsecure.lib\r\ngrpc\\src\\grpc\\Release\\grpc_unsecure.lib\r\ngrpc\\src\\grpc\\Release\\gpr.lib\r\nsnappy\\src\\snappy\\$(Configuration)\\snappy.lib\r\n`\r\nApparently, the cmake script is using the release version of grpc regardless of the config. I changed it manually and it was fixed. It would be nice if this fix is included in the future patches. \r\n"}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/21305", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/21305/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/21305/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/21305/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/21305", "id": 346566578, "node_id": "MDU6SXNzdWUzNDY1NjY1Nzg=", "number": 21305, "title": "PS/Chief Nodes not terminating & Worker Nodes not accurately terminating with tf.estimator.train_and_evaluate", "user": {"login": "wuciawe", "id": 6767527, "node_id": "MDQ6VXNlcjY3Njc1Mjc=", "avatar_url": "https://avatars2.githubusercontent.com/u/6767527?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wuciawe", "html_url": "https://github.com/wuciawe", "followers_url": "https://api.github.com/users/wuciawe/followers", "following_url": "https://api.github.com/users/wuciawe/following{/other_user}", "gists_url": "https://api.github.com/users/wuciawe/gists{/gist_id}", "starred_url": "https://api.github.com/users/wuciawe/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wuciawe/subscriptions", "organizations_url": "https://api.github.com/users/wuciawe/orgs", "repos_url": "https://api.github.com/users/wuciawe/repos", "events_url": "https://api.github.com/users/wuciawe/events{/privacy}", "received_events_url": "https://api.github.com/users/wuciawe/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1097545817, "node_id": "MDU6TGFiZWwxMDk3NTQ1ODE3", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/comp:apis", "name": "comp:apis", "color": "0052cc", "default": false, "description": ""}, {"id": 404586594, "node_id": "MDU6TGFiZWw0MDQ1ODY1OTQ=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:awaiting%20tensorflower", "name": "stat:awaiting tensorflower", "color": "f4b400", "default": false, "description": ""}, {"id": 473172988, "node_id": "MDU6TGFiZWw0NzMxNzI5ODg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:bug", "name": "type:bug", "color": "159b2e", "default": false, "description": ""}], "state": "open", "locked": false, "assignee": {"login": "rohan100jain", "id": 144114, "node_id": "MDQ6VXNlcjE0NDExNA==", "avatar_url": "https://avatars2.githubusercontent.com/u/144114?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rohan100jain", "html_url": "https://github.com/rohan100jain", "followers_url": "https://api.github.com/users/rohan100jain/followers", "following_url": "https://api.github.com/users/rohan100jain/following{/other_user}", "gists_url": "https://api.github.com/users/rohan100jain/gists{/gist_id}", "starred_url": "https://api.github.com/users/rohan100jain/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rohan100jain/subscriptions", "organizations_url": "https://api.github.com/users/rohan100jain/orgs", "repos_url": "https://api.github.com/users/rohan100jain/repos", "events_url": "https://api.github.com/users/rohan100jain/events{/privacy}", "received_events_url": "https://api.github.com/users/rohan100jain/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "rohan100jain", "id": 144114, "node_id": "MDQ6VXNlcjE0NDExNA==", "avatar_url": "https://avatars2.githubusercontent.com/u/144114?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rohan100jain", "html_url": "https://github.com/rohan100jain", "followers_url": "https://api.github.com/users/rohan100jain/followers", "following_url": "https://api.github.com/users/rohan100jain/following{/other_user}", "gists_url": "https://api.github.com/users/rohan100jain/gists{/gist_id}", "starred_url": "https://api.github.com/users/rohan100jain/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rohan100jain/subscriptions", "organizations_url": "https://api.github.com/users/rohan100jain/orgs", "repos_url": "https://api.github.com/users/rohan100jain/repos", "events_url": "https://api.github.com/users/rohan100jain/events{/privacy}", "received_events_url": "https://api.github.com/users/rohan100jain/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 17, "created_at": "2018-08-01T11:51:04Z", "updated_at": "2019-03-27T11:06:28Z", "closed_at": null, "author_association": "NONE", "body": "I'm using tf.estimator.train_and_evaluate of TF 1.9.\r\n\r\nWhen the training reaches the `max_steps` and `max_steps` is less than the dataset's size, the evaluator and the non-chief workers will terminate as expected. But, the ps nodes and the chief worker do not terminate automatically. They just stuck, and you have to kill them manually.\r\n\r\nWhen the `max_steps` is larger than the dataset's size, only one of the workers will terminate, which I guess is the one that reaches the end of the dataset. The remaining workers and ps nodes stuck.\r\n"}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/21255", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/21255/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/21255/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/21255/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/21255", "id": 345956229, "node_id": "MDU6SXNzdWUzNDU5NTYyMjk=", "number": 21255, "title": "Building TF with custom op support", "user": {"login": "dhingratul", "id": 4759327, "node_id": "MDQ6VXNlcjQ3NTkzMjc=", "avatar_url": "https://avatars2.githubusercontent.com/u/4759327?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dhingratul", "html_url": "https://github.com/dhingratul", "followers_url": "https://api.github.com/users/dhingratul/followers", "following_url": "https://api.github.com/users/dhingratul/following{/other_user}", "gists_url": "https://api.github.com/users/dhingratul/gists{/gist_id}", "starred_url": "https://api.github.com/users/dhingratul/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dhingratul/subscriptions", "organizations_url": "https://api.github.com/users/dhingratul/orgs", "repos_url": "https://api.github.com/users/dhingratul/repos", "events_url": "https://api.github.com/users/dhingratul/events{/privacy}", "received_events_url": "https://api.github.com/users/dhingratul/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1097547147, "node_id": "MDU6TGFiZWwxMDk3NTQ3MTQ3", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/comp:ops", "name": "comp:ops", "color": "0052cc", "default": false, "description": ""}], "state": "open", "locked": false, "assignee": {"login": "gunan", "id": 7946809, "node_id": "MDQ6VXNlcjc5NDY4MDk=", "avatar_url": "https://avatars3.githubusercontent.com/u/7946809?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gunan", "html_url": "https://github.com/gunan", "followers_url": "https://api.github.com/users/gunan/followers", "following_url": "https://api.github.com/users/gunan/following{/other_user}", "gists_url": "https://api.github.com/users/gunan/gists{/gist_id}", "starred_url": "https://api.github.com/users/gunan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gunan/subscriptions", "organizations_url": "https://api.github.com/users/gunan/orgs", "repos_url": "https://api.github.com/users/gunan/repos", "events_url": "https://api.github.com/users/gunan/events{/privacy}", "received_events_url": "https://api.github.com/users/gunan/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "gunan", "id": 7946809, "node_id": "MDQ6VXNlcjc5NDY4MDk=", "avatar_url": "https://avatars3.githubusercontent.com/u/7946809?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gunan", "html_url": "https://github.com/gunan", "followers_url": "https://api.github.com/users/gunan/followers", "following_url": "https://api.github.com/users/gunan/following{/other_user}", "gists_url": "https://api.github.com/users/gunan/gists{/gist_id}", "starred_url": "https://api.github.com/users/gunan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gunan/subscriptions", "organizations_url": "https://api.github.com/users/gunan/orgs", "repos_url": "https://api.github.com/users/gunan/repos", "events_url": "https://api.github.com/users/gunan/events{/privacy}", "received_events_url": "https://api.github.com/users/gunan/received_events", "type": "User", "site_admin": false}, {"login": "cy89", "id": 29663194, "node_id": "MDQ6VXNlcjI5NjYzMTk0", "avatar_url": "https://avatars0.githubusercontent.com/u/29663194?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cy89", "html_url": "https://github.com/cy89", "followers_url": "https://api.github.com/users/cy89/followers", "following_url": "https://api.github.com/users/cy89/following{/other_user}", "gists_url": "https://api.github.com/users/cy89/gists{/gist_id}", "starred_url": "https://api.github.com/users/cy89/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cy89/subscriptions", "organizations_url": "https://api.github.com/users/cy89/orgs", "repos_url": "https://api.github.com/users/cy89/repos", "events_url": "https://api.github.com/users/cy89/events{/privacy}", "received_events_url": "https://api.github.com/users/cy89/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 6, "created_at": "2018-07-30T22:13:09Z", "updated_at": "2019-11-13T00:31:23Z", "closed_at": null, "author_association": "NONE", "body": "Please go to Stack Overflow for help and support:\r\n\r\nhttps://stackoverflow.com/questions/tagged/tensorflow\r\n\r\nIf you open a GitHub issue, here is our policy:\r\n\r\n1. It must be a bug, a feature request, or a significant problem with documentation (for small docs fixes please send a PR instead).\r\n2. The form below must be filled out.\r\n3. It shouldn't be a TensorBoard issue. Those go [here](https://github.com/tensorflow/tensorboard/issues).\r\n\r\n**Here's why we have that policy**: TensorFlow developers respond to issues. We want to focus on work that benefits the whole community, e.g., fixing bugs and adding features. Support only helps individuals. GitHub also notifies thousands of people when issues are filed. We want them to see you communicating an interesting problem, rather than being redirected to Stack Overflow.\r\n\r\n------------------------\r\n\r\n### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**: Yes\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**: Ubuntu 16.04\r\n- **Mobile device (e.g. iPhone 8, Pixel 2, Samsung Galaxy) if the issue happens on mobile device**: n/a\r\n- **TensorFlow installed from (source or binary)**: source\r\n- **TensorFlow version (use command below)**: r1.8\r\n- **Python version**: 3.5\r\n- **Bazel version (if compiling from source)**:  0.14.1\r\n- **GCC/Compiler version (if compiling from source)**:  5.4.0 20160609\r\n- **CUDA/cuDNN version**: 9/7.1\r\n- **GPU model and memory**: 1080ti, 11gb, dual\r\n- **Exact command to reproduce**:\r\n\r\n1. Copied my custom op definitions in tensorflow/user_ops\r\n2. Modified BUILD script as follows:\r\n` tf_custom_op_library(\r\n    name = \"libsbnet.so\",\r\n    srcs = [\"reduce_mask.cu,\"reduce_mask.cu.h\",\"zero_block_counters.cu.h\",\"sparse_gather.cu\", \"sparse_blocks.cu.h\",\"sparse_gather.cc\",\"reduce_mask.cc\"],\r\n)`\r\n3. `bazel build --config=opt --config=cuda --config=monolithic //tensorflow:libtensorflow_cc.so`\r\n\r\nWhen running the graph with the new .so file in Tensorflow C++, i still get an error that the custom op is not found. Is there some documentation that i can follow to see if i am missing anything?\r\n\r\nYou can collect some of this information using our environment capture script:\r\n\r\nhttps://github.com/tensorflow/tensorflow/tree/master/tools/tf_env_collect.sh\r\n\r\nYou can obtain the TensorFlow version with\r\n\r\npython -c \"import tensorflow as tf; print(tf.GIT_VERSION, tf.VERSION)\"\r\n\r\n### Describe the problem\r\nDescribe the problem clearly here. Be sure to convey here why it's a bug in TensorFlow or a feature request.\r\n\r\n### Source code / logs\r\nInclude any logs or source code that would be helpful to diagnose the problem. If including tracebacks, please include the full traceback. Large logs and files should be attached. Try to provide a reproducible test case that is the bare minimum necessary to generate the problem.\r\n"}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/21250", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/21250/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/21250/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/21250/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/21250", "id": 345884966, "node_id": "MDU6SXNzdWUzNDU4ODQ5NjY=", "number": 21250, "title": "tf.Print support of tf.complex types", "user": {"login": "annemenini", "id": 13631130, "node_id": "MDQ6VXNlcjEzNjMxMTMw", "avatar_url": "https://avatars0.githubusercontent.com/u/13631130?v=4", "gravatar_id": "", "url": "https://api.github.com/users/annemenini", "html_url": "https://github.com/annemenini", "followers_url": "https://api.github.com/users/annemenini/followers", "following_url": "https://api.github.com/users/annemenini/following{/other_user}", "gists_url": "https://api.github.com/users/annemenini/gists{/gist_id}", "starred_url": "https://api.github.com/users/annemenini/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/annemenini/subscriptions", "organizations_url": "https://api.github.com/users/annemenini/orgs", "repos_url": "https://api.github.com/users/annemenini/repos", "events_url": "https://api.github.com/users/annemenini/events{/privacy}", "received_events_url": "https://api.github.com/users/annemenini/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1097547147, "node_id": "MDU6TGFiZWwxMDk3NTQ3MTQ3", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/comp:ops", "name": "comp:ops", "color": "0052cc", "default": false, "description": ""}, {"id": 473173272, "node_id": "MDU6TGFiZWw0NzMxNzMyNzI=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:feature", "name": "type:feature", "color": "159b2e", "default": false, "description": ""}], "state": "open", "locked": false, "assignee": {"login": "annemenini", "id": 13631130, "node_id": "MDQ6VXNlcjEzNjMxMTMw", "avatar_url": "https://avatars0.githubusercontent.com/u/13631130?v=4", "gravatar_id": "", "url": "https://api.github.com/users/annemenini", "html_url": "https://github.com/annemenini", "followers_url": "https://api.github.com/users/annemenini/followers", "following_url": "https://api.github.com/users/annemenini/following{/other_user}", "gists_url": "https://api.github.com/users/annemenini/gists{/gist_id}", "starred_url": "https://api.github.com/users/annemenini/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/annemenini/subscriptions", "organizations_url": "https://api.github.com/users/annemenini/orgs", "repos_url": "https://api.github.com/users/annemenini/repos", "events_url": "https://api.github.com/users/annemenini/events{/privacy}", "received_events_url": "https://api.github.com/users/annemenini/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "annemenini", "id": 13631130, "node_id": "MDQ6VXNlcjEzNjMxMTMw", "avatar_url": "https://avatars0.githubusercontent.com/u/13631130?v=4", "gravatar_id": "", "url": "https://api.github.com/users/annemenini", "html_url": "https://github.com/annemenini", "followers_url": "https://api.github.com/users/annemenini/followers", "following_url": "https://api.github.com/users/annemenini/following{/other_user}", "gists_url": "https://api.github.com/users/annemenini/gists{/gist_id}", "starred_url": "https://api.github.com/users/annemenini/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/annemenini/subscriptions", "organizations_url": "https://api.github.com/users/annemenini/orgs", "repos_url": "https://api.github.com/users/annemenini/repos", "events_url": "https://api.github.com/users/annemenini/events{/privacy}", "received_events_url": "https://api.github.com/users/annemenini/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 7, "created_at": "2018-07-30T18:42:15Z", "updated_at": "2020-02-10T17:29:24Z", "closed_at": null, "author_association": "NONE", "body": "### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**: Custom code\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**: macOS 10.12.6\r\n- **Mobile device (e.g. iPhone 8, Pixel 2, Samsung Galaxy) if the issue happens on mobile device**: n/a\r\n- **TensorFlow installed from (source or binary)**: binary\r\n- **TensorFlow version (use command below)**: v1.9.0-0-g25c197e023 1.9.0\r\n- **Python version**: 3.6.3\r\n- **Bazel version (if compiling from source)**: n/a\r\n- **GCC/Compiler version (if compiling from source)**: n/a\r\n- **CUDA/cuDNN version**: n/a (cpu execution)\r\n- **GPU model and memory**: n/a (cpu execution)\r\n- **Exact command to reproduce**: cf test case below\r\n\r\n### Problem description\r\nWhen using the `tf.Print` operation on complex data, the printed output only shows question marks (`?`) in place of the complex values. The documentation does not indicate a limitation on the type of tensors of the data argument. It would be good to add that limitation in the documentation or even better, support tf.complex types. In the meanwhile, one can work around and use tf.real and tf.imag. The test case below shows the problem and the work around.\r\nNote that the problem was already present with Tensorflow 1.7.\r\n\r\n### Source code / logs\r\nSources:\r\n```\r\nimport numpy as np\r\nimport tensorflow as tf\r\n\r\n\r\na = np.array([[1, 2], [3, 4]])\r\n\r\ninput1 = tf.placeholder(tf.complex64, shape=[2,2], name=\"input1\")\r\ninput2 = tf.placeholder(tf.float32, shape=[2, 2], name=\"input2\")\r\n\r\ninput1 = tf.Print(input1, [input1], \"input1: \")\r\ninput1 = tf.Print(input1, [tf.real(input1)], \"input1.real: \")\r\ninput2 = tf.Print(input2, [input2], \"input2: \")\r\n\r\noutput1 = tf.identity(input1, name=\"output1\")\r\noutput2 = tf.identity(input2, name=\"output2\")\r\n\r\nsess = tf.InteractiveSession()\r\n\r\nout1, out2 = sess.run([\"output1:0\", \"output2:0\"], {\"input1:0\": a, \"input2:0\": a})\r\n```\r\nConsole output:\r\n```\r\ninput2: [[1 2][3]...]input1: [? ? ?...]\r\n\r\ninput1.real: [[1 2][3]...]\r\n```\r\nBy the way, the formatting of the printed messages (line returns) looks weird. This appeared when going from TF1.7 to 1.9, but this is not the point of that issue."}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/21243", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/21243/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/21243/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/21243/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/21243", "id": 345742665, "node_id": "MDU6SXNzdWUzNDU3NDI2NjU=", "number": 21243, "title": "aggregation of sparse gradient and dense gradient is unexpected", "user": {"login": "albertz", "id": 59132, "node_id": "MDQ6VXNlcjU5MTMy", "avatar_url": "https://avatars0.githubusercontent.com/u/59132?v=4", "gravatar_id": "", "url": "https://api.github.com/users/albertz", "html_url": "https://github.com/albertz", "followers_url": "https://api.github.com/users/albertz/followers", "following_url": "https://api.github.com/users/albertz/following{/other_user}", "gists_url": "https://api.github.com/users/albertz/gists{/gist_id}", "starred_url": "https://api.github.com/users/albertz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/albertz/subscriptions", "organizations_url": "https://api.github.com/users/albertz/orgs", "repos_url": "https://api.github.com/users/albertz/repos", "events_url": "https://api.github.com/users/albertz/events{/privacy}", "received_events_url": "https://api.github.com/users/albertz/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1097547147, "node_id": "MDU6TGFiZWwxMDk3NTQ3MTQ3", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/comp:ops", "name": "comp:ops", "color": "0052cc", "default": false, "description": ""}, {"id": 404586594, "node_id": "MDU6TGFiZWw0MDQ1ODY1OTQ=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:awaiting%20tensorflower", "name": "stat:awaiting tensorflower", "color": "f4b400", "default": false, "description": ""}], "state": "open", "locked": false, "assignee": {"login": "shivaniag", "id": 16565716, "node_id": "MDQ6VXNlcjE2NTY1NzE2", "avatar_url": "https://avatars1.githubusercontent.com/u/16565716?v=4", "gravatar_id": "", "url": "https://api.github.com/users/shivaniag", "html_url": "https://github.com/shivaniag", "followers_url": "https://api.github.com/users/shivaniag/followers", "following_url": "https://api.github.com/users/shivaniag/following{/other_user}", "gists_url": "https://api.github.com/users/shivaniag/gists{/gist_id}", "starred_url": "https://api.github.com/users/shivaniag/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/shivaniag/subscriptions", "organizations_url": "https://api.github.com/users/shivaniag/orgs", "repos_url": "https://api.github.com/users/shivaniag/repos", "events_url": "https://api.github.com/users/shivaniag/events{/privacy}", "received_events_url": "https://api.github.com/users/shivaniag/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "shivaniag", "id": 16565716, "node_id": "MDQ6VXNlcjE2NTY1NzE2", "avatar_url": "https://avatars1.githubusercontent.com/u/16565716?v=4", "gravatar_id": "", "url": "https://api.github.com/users/shivaniag", "html_url": "https://github.com/shivaniag", "followers_url": "https://api.github.com/users/shivaniag/followers", "following_url": "https://api.github.com/users/shivaniag/following{/other_user}", "gists_url": "https://api.github.com/users/shivaniag/gists{/gist_id}", "starred_url": "https://api.github.com/users/shivaniag/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/shivaniag/subscriptions", "organizations_url": "https://api.github.com/users/shivaniag/orgs", "repos_url": "https://api.github.com/users/shivaniag/repos", "events_url": "https://api.github.com/users/shivaniag/events{/privacy}", "received_events_url": "https://api.github.com/users/shivaniag/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 0, "created_at": "2018-07-30T12:46:55Z", "updated_at": "2019-01-23T22:10:59Z", "closed_at": null, "author_association": "NONE", "body": "### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**: No\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**: MacOSX 10.13.5\r\n- **Mobile device (e.g. iPhone 8, Pixel 2, Samsung Galaxy) if the issue happens on mobile device**: No\r\n- **TensorFlow installed from (source or binary)**: pip binary\r\n- **TensorFlow version (use command below)**: v1.9.0-0-g25c197e023 1.9.0\r\n- **Python version**: 3.6.5\r\n- **Bazel version (if compiling from source)**: -\r\n- **GCC/Compiler version (if compiling from source)**: -\r\n- **CUDA/cuDNN version**: -\r\n- **GPU model and memory**: -\r\n- **Exact command to reproduce**: see below\r\n\r\n### Describe the problem\r\n\r\n\r\n### Source code / logs\r\n\r\nExample code:\r\n\r\n```\r\n    var = tf.get_variable(\"var\", (3, 5), initializer=tf.ones_initializer())\r\n    session.run(var.initializer)\r\n    loss = tf.reduce_sum(tf.nn.embedding_lookup(var, [1]) ** 2) + tf.reduce_sum(var ** 2)\r\n    grad, = tf.gradients(loss, var)\r\n    print(\"grad:\", grad)  # It is an IndexedSlices.\r\n    grad_np = session.run(grad)\r\n    print(\"grad value:\")\r\n    print(grad_np)\r\n```\r\n\r\nOutput:\r\n```\r\n...\r\ngrad value:\r\nIndexedSlicesValue(values=array([[2., 2., 2., 2., 2.],\r\n       [2., 2., 2., 2., 2.],\r\n       [2., 2., 2., 2., 2.],\r\n       [2., 2., 2., 2., 2.]], dtype=float32), indices=array([0, 1, 2, 1], dtype=int32), dense_shape=array([3, 5], dtype=int32))\r\n```\r\n\r\nThe logic in TF is implemented in `_AggregatedGrads` and `_AggregateIndexedSlicesGradients`.\r\nAs there is one dense gradient, I would have expected also a final dense gradient.\r\nI think that the dense var updates of the optimizers (e.g. `ApplyAdam`) also perform more efficient compared to the corresponding sparse updates (implemented in `_apply_sparse`).\r\n\r\nRegarding how to accumulate the dense and sparse gradients: Probably it can stay like it is, via first accumulating them in `IndexedSlices`, and an additional flag whether there was a dense gradient, and if so, then do a final dense conversion, via `tf.convert_to_tensor`.\r\n"}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/21233", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/21233/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/21233/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/21233/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/21233", "id": 345627666, "node_id": "MDU6SXNzdWUzNDU2Mjc2NjY=", "number": 21233, "title": "report the tf.boolean_mask runtime problem", "user": {"login": "yemaosheng-roadstar", "id": 39898274, "node_id": "MDQ6VXNlcjM5ODk4Mjc0", "avatar_url": "https://avatars2.githubusercontent.com/u/39898274?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yemaosheng-roadstar", "html_url": "https://github.com/yemaosheng-roadstar", "followers_url": "https://api.github.com/users/yemaosheng-roadstar/followers", "following_url": "https://api.github.com/users/yemaosheng-roadstar/following{/other_user}", "gists_url": "https://api.github.com/users/yemaosheng-roadstar/gists{/gist_id}", "starred_url": "https://api.github.com/users/yemaosheng-roadstar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yemaosheng-roadstar/subscriptions", "organizations_url": "https://api.github.com/users/yemaosheng-roadstar/orgs", "repos_url": "https://api.github.com/users/yemaosheng-roadstar/repos", "events_url": "https://api.github.com/users/yemaosheng-roadstar/events{/privacy}", "received_events_url": "https://api.github.com/users/yemaosheng-roadstar/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1097545817, "node_id": "MDU6TGFiZWwxMDk3NTQ1ODE3", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/comp:apis", "name": "comp:apis", "color": "0052cc", "default": false, "description": ""}, {"id": 404586594, "node_id": "MDU6TGFiZWw0MDQ1ODY1OTQ=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:awaiting%20tensorflower", "name": "stat:awaiting tensorflower", "color": "f4b400", "default": false, "description": ""}], "state": "open", "locked": false, "assignee": {"login": "tatianashp", "id": 986732, "node_id": "MDQ6VXNlcjk4NjczMg==", "avatar_url": "https://avatars2.githubusercontent.com/u/986732?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tatianashp", "html_url": "https://github.com/tatianashp", "followers_url": "https://api.github.com/users/tatianashp/followers", "following_url": "https://api.github.com/users/tatianashp/following{/other_user}", "gists_url": "https://api.github.com/users/tatianashp/gists{/gist_id}", "starred_url": "https://api.github.com/users/tatianashp/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tatianashp/subscriptions", "organizations_url": "https://api.github.com/users/tatianashp/orgs", "repos_url": "https://api.github.com/users/tatianashp/repos", "events_url": "https://api.github.com/users/tatianashp/events{/privacy}", "received_events_url": "https://api.github.com/users/tatianashp/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "tatianashp", "id": 986732, "node_id": "MDQ6VXNlcjk4NjczMg==", "avatar_url": "https://avatars2.githubusercontent.com/u/986732?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tatianashp", "html_url": "https://github.com/tatianashp", "followers_url": "https://api.github.com/users/tatianashp/followers", "following_url": "https://api.github.com/users/tatianashp/following{/other_user}", "gists_url": "https://api.github.com/users/tatianashp/gists{/gist_id}", "starred_url": "https://api.github.com/users/tatianashp/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tatianashp/subscriptions", "organizations_url": "https://api.github.com/users/tatianashp/orgs", "repos_url": "https://api.github.com/users/tatianashp/repos", "events_url": "https://api.github.com/users/tatianashp/events{/privacy}", "received_events_url": "https://api.github.com/users/tatianashp/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 2, "created_at": "2018-07-30T06:30:41Z", "updated_at": "2019-01-23T22:06:21Z", "closed_at": null, "author_association": "NONE", "body": "System information\r\n\r\n    Have I written custom code (as opposed to using a stock example script provided in TensorFlow): Yes\r\n    OS Platform and Distribution (e.g., Linux Ubuntu 16.04): Linux Ubuntu 16.04.5 LTS (Xenial Xerus)\r\n    Mobile device (e.g. iPhone 8, Pixel 2, Samsung Galaxy) if the issue happens on mobile device: N/A\r\n    TensorFlow installed from (source or binary): pip (binary)\r\n    TensorFlow version (use command below): (tf.GIT_VERSION, tf.VERSION) == ('v1.9.0-0-g25c197e023', '1.9.0')\r\n    Python version: 2.7.12\r\n    Bazel version (if compiling from source): N/A\r\n    GCC/Compiler version (if compiling from source): N/A\r\n    CUDA/cuDNN version: 9.0/6.1\r\n    GPU model and memory: NVIDIA GeForce GTX 1080Ti 11177MiB\r\n    Exact command to reproduce: tf.boolean_mask\r\n\r\nDescribe the problem\r\n    I found the tf.boolean_mask() espect the same dimension of input, but when the shape of data passed to the function is None, the graph will be built successfully. But when shape of input data is different, it runs successfully. I think it may cause some problems.\r\n\r\nCode.\r\n```import tensorflow as tf\r\nimport numpy as np\r\n\r\nx = tf.placeholder(tf.float32, [None, 3])\r\ny = tf.placeholder(tf.float32, [None, 3])\r\n\r\nmask = x[:, 0] > 0.1\r\nx_gather = tf.boolean_mask(x, mask)\r\ny_gather = tf.boolean_mask(y, mask)\r\n\r\ndata_x = np.array([\r\n  [0, 1, 2],\r\n  [1., 2., 3.],\r\n  [4., 2, 3.]])\r\ndata_y = np.array([\r\n  [0, 1, 2],\r\n  [11., 2., 3.] )\r\nwith tf.Session() as sess:\r\n  print(sess.run(y_gather, feed_dict={x: data_x, y: data_y}))\r\n  print(sess.run(x_gather, feed_dict={x: data_x, y: data_y}))\r\n\r\nit outputs\r\n [[11.  2.  3.]\r\n [ 0.  0.  0.]]\r\n[[1. 2. 3.]\r\n [4. 2. 3.]] rather than throw a shape error\r\n    \r\n"}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/21196", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/21196/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/21196/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/21196/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/21196", "id": 345402975, "node_id": "MDU6SXNzdWUzNDU0MDI5NzU=", "number": 21196, "title": "MobileNet v2 slower than v1 when loading from Frozen GraphDef", "user": {"login": "suryaprakaz", "id": 7610546, "node_id": "MDQ6VXNlcjc2MTA1NDY=", "avatar_url": "https://avatars1.githubusercontent.com/u/7610546?v=4", "gravatar_id": "", "url": "https://api.github.com/users/suryaprakaz", "html_url": "https://github.com/suryaprakaz", "followers_url": "https://api.github.com/users/suryaprakaz/followers", "following_url": "https://api.github.com/users/suryaprakaz/following{/other_user}", "gists_url": "https://api.github.com/users/suryaprakaz/gists{/gist_id}", "starred_url": "https://api.github.com/users/suryaprakaz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/suryaprakaz/subscriptions", "organizations_url": "https://api.github.com/users/suryaprakaz/orgs", "repos_url": "https://api.github.com/users/suryaprakaz/repos", "events_url": "https://api.github.com/users/suryaprakaz/events{/privacy}", "received_events_url": "https://api.github.com/users/suryaprakaz/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1097547147, "node_id": "MDU6TGFiZWwxMDk3NTQ3MTQ3", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/comp:ops", "name": "comp:ops", "color": "0052cc", "default": false, "description": ""}, {"id": 404586594, "node_id": "MDU6TGFiZWw0MDQ1ODY1OTQ=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:awaiting%20tensorflower", "name": "stat:awaiting tensorflower", "color": "f4b400", "default": false, "description": ""}], "state": "open", "locked": false, "assignee": {"login": "derekjchow", "id": 1195088, "node_id": "MDQ6VXNlcjExOTUwODg=", "avatar_url": "https://avatars2.githubusercontent.com/u/1195088?v=4", "gravatar_id": "", "url": "https://api.github.com/users/derekjchow", "html_url": "https://github.com/derekjchow", "followers_url": "https://api.github.com/users/derekjchow/followers", "following_url": "https://api.github.com/users/derekjchow/following{/other_user}", "gists_url": "https://api.github.com/users/derekjchow/gists{/gist_id}", "starred_url": "https://api.github.com/users/derekjchow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/derekjchow/subscriptions", "organizations_url": "https://api.github.com/users/derekjchow/orgs", "repos_url": "https://api.github.com/users/derekjchow/repos", "events_url": "https://api.github.com/users/derekjchow/events{/privacy}", "received_events_url": "https://api.github.com/users/derekjchow/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "derekjchow", "id": 1195088, "node_id": "MDQ6VXNlcjExOTUwODg=", "avatar_url": "https://avatars2.githubusercontent.com/u/1195088?v=4", "gravatar_id": "", "url": "https://api.github.com/users/derekjchow", "html_url": "https://github.com/derekjchow", "followers_url": "https://api.github.com/users/derekjchow/followers", "following_url": "https://api.github.com/users/derekjchow/following{/other_user}", "gists_url": "https://api.github.com/users/derekjchow/gists{/gist_id}", "starred_url": "https://api.github.com/users/derekjchow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/derekjchow/subscriptions", "organizations_url": "https://api.github.com/users/derekjchow/orgs", "repos_url": "https://api.github.com/users/derekjchow/repos", "events_url": "https://api.github.com/users/derekjchow/events{/privacy}", "received_events_url": "https://api.github.com/users/derekjchow/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 2, "created_at": "2018-07-28T00:51:55Z", "updated_at": "2019-03-28T10:33:04Z", "closed_at": null, "author_association": "NONE", "body": "### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**:\r\nYes\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**:\r\nUbuntu 16.04.3 LTS\r\n- **Mobile device (e.g. iPhone 8, Pixel 2, Samsung Galaxy) if the issue happens on mobile device**:\r\nDoesn't apply\r\n- **TensorFlow installed from (source or binary)**:\r\nBinary\r\n- **TensorFlow version (use command below)**:\r\nv1.9.0-0-g25c197e023 1.9.0\r\n- **Python version**:\r\nPython3\r\n- **Bazel version (if compiling from source)**:\r\nDoesn't apply\r\n- **GCC/Compiler version (if compiling from source)**:\r\nDoesn't apply\r\n- **CUDA/cuDNN version**:\r\nCUDA: 9.0 ; cuDNN: 7.1.4\r\n- **GPU model and memory**:\r\nGeForce GTX 1080 Ti\r\n- **Exact command to reproduce**:\r\n\r\n### Describe the problem\r\n\r\n### Summary\r\nMobileNet v2 is faster than v1 only when loading from the checkpoint format i.e, Variable Ops (meta, index, data) whereas it is slower than v1 when running in the frozen graph format (Const Ops) (.pb)\r\n\r\n### Description\r\nI have two TensorFlow trained models that are in the checkpoint format (meta, index, data) namely mobilenetv1_0.75.ckpt and mobilenetv2_0.75_6.ckpt. \r\n\r\nThe model definitions are as described in the [MobileNetv1](https://arxiv.org/abs/1704.04861) and [MobileNetv2](https://arxiv.org/pdf/1801.04381.pdf) papers. Both models are trained with a width_multiplier of 0.75. MobileNetv2 has an expansion factor of 6. This means that MAC wise, v2 is better than v1 (v1: 26.5 Mil, v2: 20.6Mil) and is expected to be slightly faster than v1.\r\n\r\nTo compare how the models actually perform, I evaluated them in two ways\r\nMethod 1: After Training - Inference by loading the models from checkpoints\r\nMethod 2: During Deployment - Inference by loading the models from frozen GraphDefs ([freeze_graph](https://github.com/tensorflow/tensorflow/blob/master/tensorflow/python/tools/freeze_graph.py) for converting Variables to Consts)\r\n\r\n**Tools Used for Testing:**\r\n- TF's Timeline Trace Tool\r\n- benchmark_model Tool\r\n- Naive Python time module\r\n\r\n### Timeline Tool\r\nI used the TensorFlow's [timeline](https://github.com/tensorflow/tensorflow/blob/master/tensorflow/python/client/timeline.py) tool to view the execution times in the Chrome Trace format. \r\n\r\n**Method 1:** \r\nMobileNetv1 Trace\r\n\r\n<img width=\"1440\" alt=\"image\" src=\"https://user-images.githubusercontent.com/7610546/43350531-b0ad3f8e-9225-11e8-95da-d21ac7cdc1e6.png\">\r\n\r\nMobileNetv2 Trace\r\n\r\n<img width=\"1440\" alt=\"image\" src=\"https://user-images.githubusercontent.com/7610546/43350534-bc7a644a-9225-11e8-8032-ec10bddf52a9.png\">\r\n\r\nEyeballing it, V2 is only slightly faster than V1; measuring from Conv1 to SoftMax,\r\n\r\nv1: 9.73 ms\r\nv2: 8.153 ms\r\n\r\n**Method 2:**\r\n\r\nMobileNetv1 Trace\r\n\r\n<img width=\"1440\" alt=\"image\" src=\"https://user-images.githubusercontent.com/7610546/43350556-ea35af48-9225-11e8-8f2d-56ccd7e600d3.png\">\r\n\r\nMobileNet v2 Trace\r\n\r\n<img width=\"1437\" alt=\"image\" src=\"https://user-images.githubusercontent.com/7610546/43350562-f60ebda0-9225-11e8-992d-5c7ae66a5eb4.png\">\r\n\r\nAs you can clearly see, when the models are loaded from a frozen format, v2 is slower than v1. This affects the performance timings for v2 especially while deployment since models are usually exported in the frozen format.\r\n\r\n\r\n### Time Measurements with Python's time module\r\n\r\nApart from the time traces above, I calculated the FPS by measuring the time between session.run. Even though the frozen models are faster than the checkpoint format, v2 is slower than v1 in the frozen format. Why is that so?\r\n\r\nModel | Checkpoint - FPS | Frozen (FPS)\r\n-- | -- | --\r\nMobileNetv1 | 97.6 | 254.86\r\nMobileNetv2 | 159.22 | 185.04\r\n\r\n\r\n### Benchmark Model Tool Results\r\n\r\n\r\n**MobileNet_v1_75**\r\n\r\nCommand Used:\r\n`bazel-bin/tensorflow/tools/benchmark/benchmark_model --graph=MobileNet_V1_75.pb --input_layer=\"input/Placeholder\" --input_layer_shape=\"1,64,64,3\" --input_layer_type=\"float\" --output_layer=\"output/Softmax_1\" --show_run_order=false --show_time=false --show_memory=false --show_summary=true --show_flops=true`\r\n\r\n[Node type] | [count] | [avg ms] | [avg %] | [cdf %] | [mem KB] | [times called]\r\n-- | -- | -- | -- | -- | -- | --\r\nConv2D | 15 | 1.044 | 21.20% | 21.20% | 8658.432 | 15\r\ngpu:Conv2D | 15 | 0.571 | 11.60% | 32.80% | 0 | 35\r\nBiasAdd | 28 | 0.557 | 11.31% | 44.11% | 0 | 28\r\nAdd | 27 | 0.493 | 10.01% | 54.12% | 0 | 27\r\nMul | 27 | 0.48 | 9.75% | 63.87% | 0 | 27\r\nRelu6 | 27 | 0.414 | 8.41% | 72.28% | 0 | 27\r\nDepthwiseConv2dNative | 13 | 0.392 | 7.96% | 80.24% | 540.672 | 13\r\nConst | 113 | 0.37 | 7.51% | 87.75% | 0 | 113\r\ngpu:Mul | 27 | 0.082 | 1.67% | 89.42% | 0 | 27\r\ngpu:Add | 27 | 0.081 | 1.65% | 91.06% | 0 | 27\r\ngpu:DepthwiseConv2dNative | 13 | 0.061 | 1.24% | 92.30% | 0 | 13\r\nNoOp | 1 | 0.061 | 1.24% | 93.54% | 0 | 2\r\ngpu:BiasAdd | 28 | 0.059 | 1.20% | 94.74% | 0 | 28\r\nTranspose | 2 | 0.055 | 1.12% | 95.86% | 49.152 | 2\r\ngpu:Relu6 | 27 | 0.054 | 1.10% | 96.95% | 0 | 27\r\ngpu:MEMCPYHtoD | 1 | 0.043 | 0.87% | 97.83% | 0 | 1\r\nSoftmax | 1 | 0.04 | 0.81% | 98.64% | 0.512 | 1\r\nAvgPool | 1 | 0.033 | 0.67% | 99.31% | 3.072 | 1\r\ngpu:Softmax | 1 | 0.009 | 0.18% | 99.49% | 0 | 3\r\ngpu:AvgPool | 1 | 0.006 | 0.12% | 99.61% | 0 | 1\r\n_Arg | 1 | 0.006 | 0.12% | 99.74% | 0 | 1\r\ngpu:Transpose | 1 | 0.005 | 0.10% | 99.84% | 0 | 1\r\n_Retval | 1 | 0.004 | 0.08% | 99.92% | 0 | 1\r\nReshape | 1 | 0.003 | 0.06% | 99.98% | 0 | 1\r\ngpu:MEMCPYDtoH | 1 | 0.001 | 0.02% | 100.00% | 0 | 1\r\nTotal | \u00a0 | 4.924 | \u00a0 | \u00a0 | \u00a0\r\n\r\n**MobileNet_v2_75**\r\n\r\nCommand Used:\r\n`bazel-bin/tensorflow/tools/benchmark/benchmark_model --graph=MobileNet_V2_75.pb --input_layer=\"input/Placeholder\" --input_layer_shape=\"1,64,64,3\" --input_layer_type=\"float\" --output_layer=\"output/Softmax_1\" --show_run_order=false --show_time=false --show_memory=false --show_summary=true --show_flops=true`\r\n\r\n[Node type] | [count] | [avg ms] | [avg %] | [cdf %] | [mem KB] | [times called]\r\n-- | -- | -- | -- | -- | -- | --\r\nConv2D | 39 | 2.967 | 37.97% | 37.97% | 7955.2 | 39\r\nAdd | 53 | 1.217 | 15.58% | 53.55% | 0 | 53\r\ngpu:Conv2D | 39 | 1.036 | 13.26% | 66.80% | 0 | 93\r\nRelu6 | 36 | 0.554 | 7.09% | 73.89% | 0 | 36\r\nDepthwiseConv2dNative | 17 | 0.408 | 5.22% | 79.11% | 959.232 | 17\r\nConst | 129 | 0.403 | 5.16% | 84.27% | 0 | 129\r\nMul | 17 | 0.304 | 3.89% | 88.16% | 0 | 17\r\nAddN | 12 | 0.264 | 3.38% | 91.54% | 0 | 12\r\ngpu:Add | 53 | 0.161 | 2.06% | 93.60% | 0 | 53\r\nNoOp | 1 | 0.076 | 0.97% | 94.57% | 0 | 2\r\ngpu:Relu6 | 36 | 0.073 | 0.93% | 95.51% | 0 | 36\r\ngpu:DepthwiseConv2dNative | 17 | 0.07 | 0.90% | 96.40% | 0 | 17\r\nTranspose | 2 | 0.053 | 0.68% | 97.08% | 49.152 | 2\r\ngpu:Mul | 17 | 0.052 | 0.67% | 97.75% | 0 | 17\r\ngpu:MEMCPYHtoD | 1 | 0.044 | 0.56% | 98.31% | 0 | 1\r\nSoftmax | 1 | 0.041 | 0.53% | 98.84% | 0.512 | 1\r\nAvgPool | 1 | 0.031 | 0.40% | 99.23% | 3.84 | 1\r\ngpu:AddN | 12 | 0.025 | 0.32% | 99.55% | 0 | 12\r\ngpu:Softmax | 1 | 0.009 | 0.12% | 99.67% | 0 | 3\r\ngpu:AvgPool | 1 | 0.007 | 0.09% | 99.76% | 0 | 1\r\n_Arg | 1 | 0.006 | 0.08% | 99.83% | 0 | 1\r\ngpu:Transpose | 1 | 0.005 | 0.06% | 99.90% | 0 | 1\r\n_Retval | 1 | 0.004 | 0.05% | 99.95% | 0 | 1\r\nReshape | 1 | 0.003 | 0.04% | 99.99% | 0 | 1\r\ngpu:MEMCPYDtoH | 1 | 0.001 | 0.01% | 100.00% | 0 | 1\r\nTotal | \u00a0 | 7.814 | \u00a0 | \u00a0 | \u00a0\r\n\r\n\r\n**Avg Time\r\nv1: 4.924 ms\r\nv2: 7.814 ms**\r\n\r\n### Source code / logs\r\n\r\nHow I load the model with method 1:\r\n\r\n```\r\n    def __load_model(self):\r\n        latest_checkpoint = tf.train.latest_checkpoint(self.args.checkpoint_dir)\r\n        if latest_checkpoint:\r\n            print(\"Loading model checkpoint {} ...\\n\".format(latest_checkpoint))\r\n            self.saver.restore(self.sess, latest_checkpoint)\r\n            print(\"Checkpoint loaded\\n\\n\")\r\n        else:\r\n            print(\"No checkpoints available!\\n\\n\")\r\n```\r\n\r\nHow I load the model with method 2:\r\n\r\n```\r\ndef create_graph(checkpoint_path):\r\n   with tf.gfile.FastGFile(checkpoint_path, 'rb') as f:\r\n        graph_def = tf.GraphDef()\r\n        graph_def.ParseFromString(f.read())\r\n        _ = tf.import_graph_def(graph_def, name='')\r\n```\r\n\r\nI'm interested to know the details on why v2's performance is only half as good as v1 when in the paper it is discussed that v2 is supposed to be 35% faster.\r\n\r\nNote:\r\nI've cross checked this with other hardware such as P40, an i5 7th Gen CPU and an alternative TF version (1.5.0) and this pattern is the same."}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/21192", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/21192/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/21192/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/21192/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/21192", "id": 345368742, "node_id": "MDU6SXNzdWUzNDUzNjg3NDI=", "number": 21192, "title": "Unimplemented cast int64 to string is not supported", "user": {"login": "aroraakshit", "id": 30349184, "node_id": "MDQ6VXNlcjMwMzQ5MTg0", "avatar_url": "https://avatars1.githubusercontent.com/u/30349184?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aroraakshit", "html_url": "https://github.com/aroraakshit", "followers_url": "https://api.github.com/users/aroraakshit/followers", "following_url": "https://api.github.com/users/aroraakshit/following{/other_user}", "gists_url": "https://api.github.com/users/aroraakshit/gists{/gist_id}", "starred_url": "https://api.github.com/users/aroraakshit/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aroraakshit/subscriptions", "organizations_url": "https://api.github.com/users/aroraakshit/orgs", "repos_url": "https://api.github.com/users/aroraakshit/repos", "events_url": "https://api.github.com/users/aroraakshit/events{/privacy}", "received_events_url": "https://api.github.com/users/aroraakshit/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1097545817, "node_id": "MDU6TGFiZWwxMDk3NTQ1ODE3", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/comp:apis", "name": "comp:apis", "color": "0052cc", "default": false, "description": ""}, {"id": 404586594, "node_id": "MDU6TGFiZWw0MDQ1ODY1OTQ=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:awaiting%20tensorflower", "name": "stat:awaiting tensorflower", "color": "f4b400", "default": false, "description": ""}], "state": "open", "locked": false, "assignee": {"login": "karmel", "id": 667809, "node_id": "MDQ6VXNlcjY2NzgwOQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/667809?v=4", "gravatar_id": "", "url": "https://api.github.com/users/karmel", "html_url": "https://github.com/karmel", "followers_url": "https://api.github.com/users/karmel/followers", "following_url": "https://api.github.com/users/karmel/following{/other_user}", "gists_url": "https://api.github.com/users/karmel/gists{/gist_id}", "starred_url": "https://api.github.com/users/karmel/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/karmel/subscriptions", "organizations_url": "https://api.github.com/users/karmel/orgs", "repos_url": "https://api.github.com/users/karmel/repos", "events_url": "https://api.github.com/users/karmel/events{/privacy}", "received_events_url": "https://api.github.com/users/karmel/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "karmel", "id": 667809, "node_id": "MDQ6VXNlcjY2NzgwOQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/667809?v=4", "gravatar_id": "", "url": "https://api.github.com/users/karmel", "html_url": "https://github.com/karmel", "followers_url": "https://api.github.com/users/karmel/followers", "following_url": "https://api.github.com/users/karmel/following{/other_user}", "gists_url": "https://api.github.com/users/karmel/gists{/gist_id}", "starred_url": "https://api.github.com/users/karmel/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/karmel/subscriptions", "organizations_url": "https://api.github.com/users/karmel/orgs", "repos_url": "https://api.github.com/users/karmel/repos", "events_url": "https://api.github.com/users/karmel/events{/privacy}", "received_events_url": "https://api.github.com/users/karmel/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 7, "created_at": "2018-07-27T21:16:10Z", "updated_at": "2019-01-23T21:55:23Z", "closed_at": null, "author_association": "NONE", "body": "### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**: Yes\r\n- **OS Platform and Distribution**: Linux Ubuntu 16.04.4\r\n- **TensorFlow installed from (source or binary)**: Binary\r\n- **TensorFlow version (use command below)**: 1.8\r\n- **Python version**: 3.5.2\r\n- Bazel version: N/A\r\n- CUDA/cuDNN version: N/A\r\n- GPU model and memory: N/A\r\n- Exact command to reproduce: described below\r\n- Mobile device: N/A\r\n\r\n### Describe the problem\r\nAfter following the steps in Using SavedModel with Estimators: When sending a classification request from client, the server is not able to cast it into serialized tf example that model is expecting.\r\n\r\nThe same error comes up even when I used ```\r\ntf.contrib.predictor.from_saved_model```\r\n\r\nSo far, I have checked StackOverflow, Tf documentation, issues on Tf and Tf/serving. No one has ever encountered this error. Hence reporting here. This [issue {#1017}](https://github.com/tensorflow/serving/issues/1017) was rejected by @chrisolston in Tf/serving because the error trace indicates it is an issue in one of the core modules on main Tf repo and it had looked like there was no serialization of tf example proto in the client side code: But that task is already accomplished by [prediction_service_pb2.py](https://github.com/tensorflow/serving/blob/master/tensorflow_serving/apis/prediction_service_pb2.py) file. \r\n\r\nThere are no other pointers online to what is going wrong here, please help!\r\n\r\n### Source code / error logs\r\nTensorFlow model server **error** trace:\r\n```\r\n2018-07-27 14:54:49.685755: W external/org_tensorflow/tensorflow/core/framework/op_kernel.cc:1295] OP_REQUIRES failed at cast_op.cc:77 : Unimplemented: Cast int64 to string is not supported\r\n2018-07-27 14:54:49.685822: E external/org_tensorflow/tensorflow/core/common_runtime/executor.cc:696] Executor failed to create kernel. Unimplemented: Cast int64 to string is not supported\r\n         [[Node: Cast = Cast[DstT=DT_STRING, SrcT=DT_INT64, _output_shapes=[[2]], _device=\"/job:localhost/replica:0/task:0/device:CPU:0\"](ArgMax)]]\r\n```\r\n\r\n**Error** on running client side code:\r\n```\r\nTraceback (most recent call last):\r\n  File \"/home/mldev/venv/lib/python3.5/site-packages/grpc/beta/_client_adaptations.py\", line 193, in _blocking_unary_unary\r\n    credentials=_credentials(protocol_options))\r\n  File \"/home/mldev/venv/lib/python3.5/site-packages/grpc/_channel.py\", line 500, in __call__\r\n    return _end_unary_response_blocking(state, call, False, None)\r\n  File \"/home/mldev/venv/lib/python3.5/site-packages/grpc/_channel.py\", line 434, in _end_unary_response_blocking\r\n    raise _Rendezvous(state, None, None, deadline)\r\ngrpc._channel._Rendezvous: <_Rendezvous of RPC that terminated with (StatusCode.UNIMPLEMENTED, Cast int64 to string is notsupported\r\n         [[Node: Cast = Cast[DstT=DT_STRING, SrcT=DT_INT64, _output_shapes=[[2]], _device=\"/job:localhost/replica:0/task:0/device:CPU:0\"](ArgMax)]])>\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTraceback (most recent call last):\r\n  File \"/home/mldev/intelligent_sp/train_scripts/client.py\", line 63, in <module>\r\n    run(args.host, args.port, args.input, args.model, args.signature_name)\r\n  File \"/home/mldev/intelligent_sp/train_scripts/client.py\", line 42, in run\r\n    result = stub.Classify(request, 10.0)\r\n  File \"/home/mldev/venv/lib/python3.5/site-packages/grpc/beta/_client_adaptations.py\", line 309, in __call__\r\n    self._request_serializer, self._response_deserializer)\r\n  File \"/home/mldev/venv/lib/python3.5/site-packages/grpc/beta/_client_adaptations.py\", line 195, in _blocking_unary_unary\r\n    raise _abortion_error(rpc_error_call)\r\ngrpc.framework.interfaces.face.face.LocalError: LocalError(code=StatusCode.UNIMPLEMENTED, details=\"Cast int64 to string isnot supported\r\n         [[Node: Cast = Cast[DstT=DT_STRING, SrcT=DT_INT64, _output_shapes=[[2]], _device=\"/job:localhost/replica:0/task:0/device:CPU:0\"](ArgMax)]]\")\r\n```\r\n\r\n**Relevant Client Code**:\r\n```\r\n    channel = implementations.insecure_channel(host, port)\r\n    stub = prediction_service_pb2.beta_create_PredictionService_stub(channel)\r\n\r\n    # Pre-processing\r\n    prediction_input = [json.dumps(eval(input_str))]\r\n    \r\n    ink, classname = creat.parse_line(prediction_input[0])\r\n\r\n    classnames = ['doodle', 'expression', 'symbols']\r\n    features = {}\r\n    features[\"class_index\"] = tf.train.Feature(int64_list=tf.train.Int64List(value=[classnames.index(\"doodle\")]))\r\n    features[\"ink\"] = tf.train.Feature(float_list=tf.train.FloatList(value=ink.flatten()))\r\n    features[\"shape\"] = tf.train.Feature(int64_list=tf.train.Int64List(value=ink.shape))\r\n    f = tf.train.Features(feature=features)\r\n    example = tf.train.Example(features=f)\r\n    final_req = [example]\r\n    start = time.time()\r\n\r\n    # Call classification model to make prediction\r\n    request = classification_pb2.ClassificationRequest()\r\n    request.model_spec.name = model\r\n    request.model_spec.signature_name = signature_name\r\n    request.input.example_list.examples.extend(final_req)\r\n    \r\n    result = stub.Classify(request, 10.0)\r\n```\r\n\r\nImports used in Client Code:\r\n```\r\nfrom tensorflow_serving.apis import classification_pb2\r\nfrom tensorflow_serving.apis import prediction_service_pb2\r\nfrom tensorflow_serving.apis import input_pb2 as final_inp\r\n```\r\n\r\nCode used to **export saved model** (runs successfully):\r\n```\r\n      feature_spec = {\r\n      \"ink\": tf.VarLenFeature(dtype=tf.float32),\r\n      \"shape\": tf.FixedLenFeature([2], dtype=tf.int64),\r\n      \"class_index\": tf.FixedLenFeature([1], dtype=tf.int64)\r\n      }\r\n      \r\n      # defining serving input receiver function\r\n      def serving_input_receiver_fn():\r\n        \"\"\"An input receiver that expects a serialized tf.Example.\"\"\"\r\n        serialized_tf_example = tf.placeholder(dtype=tf.string, shape=[None], name='input_example_tensor')\r\n        receiver_tensors = {'examples': serialized_tf_example}\r\n        parsed_features = tf.parse_example(serialized_tf_example, feature_spec)\r\n        parsed_features[\"ink\"] = tf.sparse_tensor_to_dense(parsed_features[\"ink\"])\r\n        return tf.estimator.export.ServingInputReceiver(parsed_features, receiver_tensors)\r\n\r\n      # export saved model\r\n      estimator.export_savedmodel(FLAGS.model_dir+\"/serve/\", serving_input_receiver_fn, strip_default_attrs=True)\r\n      print(\"done exporting\")\r\n```\r\n\r\nThe output from **saved_model_cli** (used to inspect saved model) looks like this:\r\n```\r\nMetaGraphDef with tag-set: 'serve' contains the following SignatureDefs:\r\n\r\nsignature_def['output']:\r\n  The given SavedModel SignatureDef contains the following input(s):\r\n    inputs['inputs'] tensor_info:\r\n        dtype: DT_STRING\r\n        shape: (-1)\r\n        name: input_example_tensor:0\r\n  The given SavedModel SignatureDef contains the following output(s):\r\n    outputs['classes'] tensor_info:\r\n        dtype: DT_STRING\r\n        shape: (2)\r\n        name: Cast:0\r\n    outputs['scores'] tensor_info:\r\n        dtype: DT_FLOAT\r\n        shape: (2, 348)\r\n        name: dense/BiasAdd:0\r\n  Method name is: tensorflow/serving/classify\r\n\r\nsignature_def['serving_default']:\r\n  The given SavedModel SignatureDef contains the following input(s):\r\n    inputs['inputs'] tensor_info:\r\n        dtype: DT_STRING\r\n        shape: (-1)\r\n        name: input_example_tensor:0\r\n  The given SavedModel SignatureDef contains the following output(s):\r\n    outputs['classes'] tensor_info:\r\n        dtype: DT_STRING\r\n        shape: (2)\r\n        name: Cast:0\r\n    outputs['scores'] tensor_info:\r\n        dtype: DT_FLOAT\r\n        shape: (2, 348)\r\n        name: dense/BiasAdd:0\r\n  Method name is: tensorflow/serving/classify\r\n```\r\n\r\n"}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/21185", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/21185/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/21185/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/21185/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/21185", "id": 345214742, "node_id": "MDU6SXNzdWUzNDUyMTQ3NDI=", "number": 21185, "title": "tf.shape output is wrong when net input shape is changed during import", "user": {"login": "tazr", "id": 29096027, "node_id": "MDQ6VXNlcjI5MDk2MDI3", "avatar_url": "https://avatars1.githubusercontent.com/u/29096027?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tazr", "html_url": "https://github.com/tazr", "followers_url": "https://api.github.com/users/tazr/followers", "following_url": "https://api.github.com/users/tazr/following{/other_user}", "gists_url": "https://api.github.com/users/tazr/gists{/gist_id}", "starred_url": "https://api.github.com/users/tazr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tazr/subscriptions", "organizations_url": "https://api.github.com/users/tazr/orgs", "repos_url": "https://api.github.com/users/tazr/repos", "events_url": "https://api.github.com/users/tazr/events{/privacy}", "received_events_url": "https://api.github.com/users/tazr/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1097545817, "node_id": "MDU6TGFiZWwxMDk3NTQ1ODE3", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/comp:apis", "name": "comp:apis", "color": "0052cc", "default": false, "description": ""}, {"id": 299643928, "node_id": "MDU6TGFiZWwyOTk2NDM5Mjg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:contributions%20welcome", "name": "stat:contributions welcome", "color": "f4b400", "default": false, "description": ""}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 12, "created_at": "2018-07-27T12:53:06Z", "updated_at": "2019-03-08T21:49:34Z", "closed_at": null, "author_association": "NONE", "body": "### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**: yes\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**: Windows 7\r\n- **TensorFlow installed from (source or binary)**: pip\r\n- **TensorFlow version (use command below)**: 1.8.0\r\n- **Python version**: 3.6.6\r\n- **CUDA/cuDNN version**: N/A\r\n- **GPU model and memory**: N/A\r\n- **Bazel version**: N/A\r\n- **Mobile device**: N/A\r\n- **Exact command to reproduce**: see below\r\n\r\n### Describe the problem\r\n\r\n`tf.shape` returns an inconsistent result when a network is imported from file and its input is changed during the import. Let me create a simple net with a `batch_size` of 128, and save it to disk\r\n\r\n    import tensorflow as tf\r\n\r\n    batch_size = 128\r\n    x = tf.placeholder(tf.float32, shape=(batch_size, 10), name='x')\r\n    b = tf.Variable(tf.zeros((10)))\r\n    y = tf.add(x, b, name='y')\r\n\r\n    saver = tf.train.Saver()\r\n    with tf.Session() as sess:\r\n      tf.global_variables_initializer().run()\r\n      saver.save(sess, './foo')\r\n\r\nLater, I reload this model, and replace the input placeholder with a more flexible one, with an undefined `batch_size`. \r\n\r\n    import numpy as np\r\n    import tensorflow as tf\r\n\r\n    x = tf.placeholder(tf.float32, shape=(None, 10))\r\n    restorer = tf.train.import_meta_graph('./foo.meta', input_map={'x:0': x})\r\n    y = tf.get_default_graph().get_tensor_by_name('y:0')\r\n    y_shape = tf.shape(y)\r\n    sess = tf.Session()\r\n    restorer.restore(sess, './foo')\r\n    [y_, y_shape_] = sess.run(['y:0', y_shape], {x: np.zeros((1, 10), np.float32)})\r\n    assert np.all(y_.shape == y_shape_), 'inconsistent sizes'\r\n\r\nThis results in an `AssertionError: inconsistent sizes`, because `y_shape_` still returns the old batch size of 128, despite the output `y` being computed as expected with a batch size of 1."}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/21174", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/21174/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/21174/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/21174/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/21174", "id": 344981739, "node_id": "MDU6SXNzdWUzNDQ5ODE3Mzk=", "number": 21174, "title": "Allow Keras Callbacks to access predictions on_batch_end, on_epoch_end", "user": {"login": "evictor", "id": 1620156, "node_id": "MDQ6VXNlcjE2MjAxNTY=", "avatar_url": "https://avatars1.githubusercontent.com/u/1620156?v=4", "gravatar_id": "", "url": "https://api.github.com/users/evictor", "html_url": "https://github.com/evictor", "followers_url": "https://api.github.com/users/evictor/followers", "following_url": "https://api.github.com/users/evictor/following{/other_user}", "gists_url": "https://api.github.com/users/evictor/gists{/gist_id}", "starred_url": "https://api.github.com/users/evictor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/evictor/subscriptions", "organizations_url": "https://api.github.com/users/evictor/orgs", "repos_url": "https://api.github.com/users/evictor/repos", "events_url": "https://api.github.com/users/evictor/events{/privacy}", "received_events_url": "https://api.github.com/users/evictor/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1097546578, "node_id": "MDU6TGFiZWwxMDk3NTQ2NTc4", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/comp:keras", "name": "comp:keras", "color": "0052cc", "default": false, "description": ""}, {"id": 404586594, "node_id": "MDU6TGFiZWw0MDQ1ODY1OTQ=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:awaiting%20tensorflower", "name": "stat:awaiting tensorflower", "color": "f4b400", "default": false, "description": ""}], "state": "open", "locked": false, "assignee": {"login": "fchollet", "id": 710255, "node_id": "MDQ6VXNlcjcxMDI1NQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/710255?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fchollet", "html_url": "https://github.com/fchollet", "followers_url": "https://api.github.com/users/fchollet/followers", "following_url": "https://api.github.com/users/fchollet/following{/other_user}", "gists_url": "https://api.github.com/users/fchollet/gists{/gist_id}", "starred_url": "https://api.github.com/users/fchollet/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fchollet/subscriptions", "organizations_url": "https://api.github.com/users/fchollet/orgs", "repos_url": "https://api.github.com/users/fchollet/repos", "events_url": "https://api.github.com/users/fchollet/events{/privacy}", "received_events_url": "https://api.github.com/users/fchollet/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "fchollet", "id": 710255, "node_id": "MDQ6VXNlcjcxMDI1NQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/710255?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fchollet", "html_url": "https://github.com/fchollet", "followers_url": "https://api.github.com/users/fchollet/followers", "following_url": "https://api.github.com/users/fchollet/following{/other_user}", "gists_url": "https://api.github.com/users/fchollet/gists{/gist_id}", "starred_url": "https://api.github.com/users/fchollet/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fchollet/subscriptions", "organizations_url": "https://api.github.com/users/fchollet/orgs", "repos_url": "https://api.github.com/users/fchollet/repos", "events_url": "https://api.github.com/users/fchollet/events{/privacy}", "received_events_url": "https://api.github.com/users/fchollet/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 3, "created_at": "2018-07-26T19:49:30Z", "updated_at": "2019-10-07T16:54:30Z", "closed_at": null, "author_association": "NONE", "body": "### System information\r\n\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**: No\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**: Linux Ubuntu 16.04\r\n- **Mobile device (e.g. iPhone 8, Pixel 2, Samsung Galaxy) if the issue happens on mobile device**: n/a\r\n- **TensorFlow installed from (source or binary)**: binary\r\n- **TensorFlow version (use command below)**: v1.9.0-rc0-35-g17d6639b55 1.9.0-rc1\r\n- **Python version**: 3.5.2\r\n- **Bazel version (if compiling from source)**: n/a\r\n- **GCC/Compiler version (if compiling from source)**: n/a\r\n- **CUDA/cuDNN version**: n/a\r\n- **GPU model and memory**: n/a\r\n- **Exact command to reproduce**: n/a\r\n\r\n### Describe the problem\r\n\r\nI wanted to call attention to an issue and a PR on the keras-team/keras project so that TF could track and integrate with TF-core Keras. I believe these issues are of high importance to the community; for my project at least they are just short of critical. In summary:\r\n\r\n* PR: Keras Callbacks should be able to access predictions made during training in `on_batch_end()` and `on_epoch_end()` to eliminate expensive duplicate calls to `predict()` in Callbacks that require prediction results -- https://github.com/keras-team/keras/pull/10513\r\n* Writing a Keras metric should not require a graph -- https://github.com/keras-team/keras/issues/4506#issuecomment-405452870\r\n\r\nThe reason these are related is because a viable solution to the second issue depends on the first; in particular, if you wanted to write a \"fancy\" metric function that did calcs in Python, for example, you could leverage already-made predictions from the API described in issue 1 and circumvent having to `predict()` all over again, which is prohibitively expensive in all but the simplest models."}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/21156", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/21156/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/21156/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/21156/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/21156", "id": 344760835, "node_id": "MDU6SXNzdWUzNDQ3NjA4MzU=", "number": 21156, "title": "Feature Idea: Checkpoint API \"split\" assert_consumed", "user": {"login": "sleighsoft", "id": 9438971, "node_id": "MDQ6VXNlcjk0Mzg5NzE=", "avatar_url": "https://avatars3.githubusercontent.com/u/9438971?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sleighsoft", "html_url": "https://github.com/sleighsoft", "followers_url": "https://api.github.com/users/sleighsoft/followers", "following_url": "https://api.github.com/users/sleighsoft/following{/other_user}", "gists_url": "https://api.github.com/users/sleighsoft/gists{/gist_id}", "starred_url": "https://api.github.com/users/sleighsoft/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sleighsoft/subscriptions", "organizations_url": "https://api.github.com/users/sleighsoft/orgs", "repos_url": "https://api.github.com/users/sleighsoft/repos", "events_url": "https://api.github.com/users/sleighsoft/events{/privacy}", "received_events_url": "https://api.github.com/users/sleighsoft/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1097545817, "node_id": "MDU6TGFiZWwxMDk3NTQ1ODE3", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/comp:apis", "name": "comp:apis", "color": "0052cc", "default": false, "description": ""}, {"id": 404586594, "node_id": "MDU6TGFiZWw0MDQ1ODY1OTQ=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:awaiting%20tensorflower", "name": "stat:awaiting tensorflower", "color": "f4b400", "default": false, "description": ""}, {"id": 473173272, "node_id": "MDU6TGFiZWw0NzMxNzMyNzI=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:feature", "name": "type:feature", "color": "159b2e", "default": false, "description": ""}], "state": "open", "locked": false, "assignee": {"login": "allenlavoie", "id": 3731025, "node_id": "MDQ6VXNlcjM3MzEwMjU=", "avatar_url": "https://avatars3.githubusercontent.com/u/3731025?v=4", "gravatar_id": "", "url": "https://api.github.com/users/allenlavoie", "html_url": "https://github.com/allenlavoie", "followers_url": "https://api.github.com/users/allenlavoie/followers", "following_url": "https://api.github.com/users/allenlavoie/following{/other_user}", "gists_url": "https://api.github.com/users/allenlavoie/gists{/gist_id}", "starred_url": "https://api.github.com/users/allenlavoie/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/allenlavoie/subscriptions", "organizations_url": "https://api.github.com/users/allenlavoie/orgs", "repos_url": "https://api.github.com/users/allenlavoie/repos", "events_url": "https://api.github.com/users/allenlavoie/events{/privacy}", "received_events_url": "https://api.github.com/users/allenlavoie/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "allenlavoie", "id": 3731025, "node_id": "MDQ6VXNlcjM3MzEwMjU=", "avatar_url": "https://avatars3.githubusercontent.com/u/3731025?v=4", "gravatar_id": "", "url": "https://api.github.com/users/allenlavoie", "html_url": "https://github.com/allenlavoie", "followers_url": "https://api.github.com/users/allenlavoie/followers", "following_url": "https://api.github.com/users/allenlavoie/following{/other_user}", "gists_url": "https://api.github.com/users/allenlavoie/gists{/gist_id}", "starred_url": "https://api.github.com/users/allenlavoie/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/allenlavoie/subscriptions", "organizations_url": "https://api.github.com/users/allenlavoie/orgs", "repos_url": "https://api.github.com/users/allenlavoie/repos", "events_url": "https://api.github.com/users/allenlavoie/events{/privacy}", "received_events_url": "https://api.github.com/users/allenlavoie/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 7, "created_at": "2018-07-26T09:15:38Z", "updated_at": "2019-01-25T22:48:01Z", "closed_at": null, "author_association": "CONTRIBUTOR", "body": "I would like to see a function that is called something like `not_consumed()` for the checkpoint API here (https://www.tensorflow.org/api_docs/python/tf/train/Checkpoint#restore) that returns all objects in the dependency graph that were not found in the checkpoint but without raising a python assertion like `assert_consumed` does.\r\n\r\nI would use it because sometimes I want to make sure that I restored certain variables but about others I do not care if they are restored or not.\r\n\r\nIn general I believe this would be a minor change to the code (e.g. splitting `assert_consumed` into two) that would greatly help to write tests to validate that variables are indeed restored and probably also be helpful in other scenarios as well.\r\n\r\nWhat is your take on this @allenlavoie ?\r\n"}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/21130", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/21130/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/21130/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/21130/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/21130", "id": 344503398, "node_id": "MDU6SXNzdWUzNDQ1MDMzOTg=", "number": 21130, "title": "Unexpected behavior of tf.hessians on graphs with tf.reduce_prod", "user": {"login": "lballes", "id": 8748569, "node_id": "MDQ6VXNlcjg3NDg1Njk=", "avatar_url": "https://avatars1.githubusercontent.com/u/8748569?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lballes", "html_url": "https://github.com/lballes", "followers_url": "https://api.github.com/users/lballes/followers", "following_url": "https://api.github.com/users/lballes/following{/other_user}", "gists_url": "https://api.github.com/users/lballes/gists{/gist_id}", "starred_url": "https://api.github.com/users/lballes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lballes/subscriptions", "organizations_url": "https://api.github.com/users/lballes/orgs", "repos_url": "https://api.github.com/users/lballes/repos", "events_url": "https://api.github.com/users/lballes/events{/privacy}", "received_events_url": "https://api.github.com/users/lballes/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 299643928, "node_id": "MDU6TGFiZWwyOTk2NDM5Mjg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:contributions%20welcome", "name": "stat:contributions welcome", "color": "f4b400", "default": false, "description": ""}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2018-07-25T15:51:13Z", "updated_at": "2018-10-22T19:13:43Z", "closed_at": null, "author_association": "NONE", "body": "### System information\r\n\r\nTensorFlow 1.9 CPU version installed via pip on Linux. Replicated the error on both Python 2.7.13 and 3.5.3 on Linux. Did not try with GPU version.\r\n\r\nDetails:\r\nHave I written custom code: no\r\nOS Platform and Distribution: Ubuntu 18.04\r\nTensorFlow installed from: pip\r\nTensorFlow version: 1.9 CPU version\r\nBazel version: n/a\r\nCUDA/cuDNN version: n/a\r\nGPU model and memory: n/a\r\nExact command to reproduce: see code below\r\nMobile device: no\r\n\r\n### Describe the problem\r\n``tf.hessians`` fails on a very simple function that uses ``tf.reduce_prod``. The error only occurs at the minimum of the function, where the Hessian is zero. Here's a minimal example:\r\n\r\n    import numpy as np\r\n    import tensorflow as tf\r\n    \r\n    x = tf.placeholder(tf.float32, shape=[3,])\r\n    y = tf.reduce_prod(x**2)\r\n    H = tf.hessians(y, x)[0]\r\n    \r\n    with tf.Session() as sess:\r\n      print(sess.run(H, feed_dict={x: np.ones(3)}))\r\n      print(sess.run(H, feed_dict={x: np.zeros(3)}))\r\n      \r\n    # Produces\r\n    # [[2. 4. 4.]\r\n    #  [4. 2. 4.]\r\n    #  [4. 4. 2.]]\r\n    # [[nan nan nan]\r\n    #  [nan nan nan]\r\n    #  [nan nan nan]]\r\n\r\nThe Hessian at ``x=[0, 0, 0]`` is well-defined and should evaluate to a zero-matrix. This behavior is unexpected. If ``tf.hessians`` can't handle ``tf.reduce_prod`` it should raise an exception.\r\n\r\n### Source code / logs\r\nSee above for minimal example.\r\n"}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/21126", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/21126/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/21126/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/21126/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/21126", "id": 344427922, "node_id": "MDU6SXNzdWUzNDQ0Mjc5MjI=", "number": 21126, "title": "Estimator model folder format", "user": {"login": "RomanSteinberg", "id": 11787552, "node_id": "MDQ6VXNlcjExNzg3NTUy", "avatar_url": "https://avatars3.githubusercontent.com/u/11787552?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RomanSteinberg", "html_url": "https://github.com/RomanSteinberg", "followers_url": "https://api.github.com/users/RomanSteinberg/followers", "following_url": "https://api.github.com/users/RomanSteinberg/following{/other_user}", "gists_url": "https://api.github.com/users/RomanSteinberg/gists{/gist_id}", "starred_url": "https://api.github.com/users/RomanSteinberg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RomanSteinberg/subscriptions", "organizations_url": "https://api.github.com/users/RomanSteinberg/orgs", "repos_url": "https://api.github.com/users/RomanSteinberg/repos", "events_url": "https://api.github.com/users/RomanSteinberg/events{/privacy}", "received_events_url": "https://api.github.com/users/RomanSteinberg/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1097545817, "node_id": "MDU6TGFiZWwxMDk3NTQ1ODE3", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/comp:apis", "name": "comp:apis", "color": "0052cc", "default": false, "description": ""}, {"id": 404586594, "node_id": "MDU6TGFiZWw0MDQ1ODY1OTQ=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:awaiting%20tensorflower", "name": "stat:awaiting tensorflower", "color": "f4b400", "default": false, "description": ""}, {"id": 473172988, "node_id": "MDU6TGFiZWw0NzMxNzI5ODg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:bug", "name": "type:bug", "color": "159b2e", "default": false, "description": ""}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-07-25T12:44:49Z", "updated_at": "2020-02-08T01:14:04Z", "closed_at": null, "author_association": "NONE", "body": "### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**: yes\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**: Linux Ubuntu 16.04\r\n- **Mobile device (e.g. iPhone 8, Pixel 2, Samsung Galaxy) if the issue happens on mobile device**: no\r\n- **TensorFlow installed from (source or binary)**: binary\r\n- **TensorFlow version (use command below)**: 1.4.1\r\n- **Python version**: 3.5.2\r\n- **Bazel version (if compiling from source)**: no\r\n- **GCC/Compiler version (if compiling from source)**: gcc (Ubuntu 5.4.0-6ubuntu1~16.04.10) 5.4.0 20160609\r\n- **CUDA/cuDNN version**: 9.2\r\n- **GPU model and memory**: 1080TI 11GB\r\n- **Exact command to reproduce**: python example.py\r\n\r\nYou can collect some of this information using our environment capture script:\r\n\r\nhttps://github.com/tensorflow/tensorflow/tree/master/tools/tf_env_collect.sh\r\n\r\nYou can obtain the TensorFlow version with\r\n\r\npython -c \"import tensorflow as tf; print(tf.GIT_VERSION, tf.VERSION)\"\r\n\r\n### Describe the problem\r\nI tried to make a working code for Estimator and Dataset APIs together. The `Estimator` constructor depends on `model_dir` parameter like this: `tf.estimator.Estimator(model_fn, model_dir, params={})`. I've noticed that `model_dir` string should not be ended with '/'. Step to reproduce:\r\n1. Run `python example.py` -> fail\r\n2. Replace line 11 by\r\n```\r\nexperiment_folder = '/output'\r\n```\r\n3. Run `python example.py` -> success\r\n\r\nI think it is a bug. It is simple and easy to avoid but I investigated not so much time to verify is it a symptom of some bigger problem. Hope someone will pay attention to it. \r\n\r\n### Source code / logs\r\nBoth `example.py` and console output could be found [here](https://gist.github.com/RomanSteinberg/840d58b9333a3359cec43bbf4c464e5a)."}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/21053", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/21053/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/21053/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/21053/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/21053", "id": 343619413, "node_id": "MDU6SXNzdWUzNDM2MTk0MTM=", "number": 21053, "title": "Session.run() on Operation return None. Design question", "user": {"login": "Jylomaki", "id": 16537704, "node_id": "MDQ6VXNlcjE2NTM3NzA0", "avatar_url": "https://avatars2.githubusercontent.com/u/16537704?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Jylomaki", "html_url": "https://github.com/Jylomaki", "followers_url": "https://api.github.com/users/Jylomaki/followers", "following_url": "https://api.github.com/users/Jylomaki/following{/other_user}", "gists_url": "https://api.github.com/users/Jylomaki/gists{/gist_id}", "starred_url": "https://api.github.com/users/Jylomaki/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Jylomaki/subscriptions", "organizations_url": "https://api.github.com/users/Jylomaki/orgs", "repos_url": "https://api.github.com/users/Jylomaki/repos", "events_url": "https://api.github.com/users/Jylomaki/events{/privacy}", "received_events_url": "https://api.github.com/users/Jylomaki/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": {"login": "drpngx", "id": 20959853, "node_id": "MDQ6VXNlcjIwOTU5ODUz", "avatar_url": "https://avatars1.githubusercontent.com/u/20959853?v=4", "gravatar_id": "", "url": "https://api.github.com/users/drpngx", "html_url": "https://github.com/drpngx", "followers_url": "https://api.github.com/users/drpngx/followers", "following_url": "https://api.github.com/users/drpngx/following{/other_user}", "gists_url": "https://api.github.com/users/drpngx/gists{/gist_id}", "starred_url": "https://api.github.com/users/drpngx/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/drpngx/subscriptions", "organizations_url": "https://api.github.com/users/drpngx/orgs", "repos_url": "https://api.github.com/users/drpngx/repos", "events_url": "https://api.github.com/users/drpngx/events{/privacy}", "received_events_url": "https://api.github.com/users/drpngx/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "drpngx", "id": 20959853, "node_id": "MDQ6VXNlcjIwOTU5ODUz", "avatar_url": "https://avatars1.githubusercontent.com/u/20959853?v=4", "gravatar_id": "", "url": "https://api.github.com/users/drpngx", "html_url": "https://github.com/drpngx", "followers_url": "https://api.github.com/users/drpngx/followers", "following_url": "https://api.github.com/users/drpngx/following{/other_user}", "gists_url": "https://api.github.com/users/drpngx/gists{/gist_id}", "starred_url": "https://api.github.com/users/drpngx/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/drpngx/subscriptions", "organizations_url": "https://api.github.com/users/drpngx/orgs", "repos_url": "https://api.github.com/users/drpngx/repos", "events_url": "https://api.github.com/users/drpngx/events{/privacy}", "received_events_url": "https://api.github.com/users/drpngx/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 5, "created_at": "2018-07-23T12:50:32Z", "updated_at": "2018-12-07T18:51:48Z", "closed_at": null, "author_association": "NONE", "body": "- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**:\r\nYes, see this issue. https://github.com/tensorflow/tensorflow/issues/20990\r\n\r\nThe documentation of Session.run from tensorflow:\r\n```\r\nrun(\r\n    fetches,\r\n    feed_dict=None,\r\n    options=None,\r\n    run_metadata=None\r\n)\r\n```\r\n> Runs operations and evaluates tensors in fetches.\r\n> \r\n> This method runs one \"step\" of TensorFlow computation, by running the necessary graph fragment to execute every Operation and evaluate every Tensor in fetches, substituting the values in feed_dict for the corresponding input values.\r\n> \r\n> The fetches argument may be a single graph element, or an arbitrarily nested list, tuple, namedtuple, dict, or OrderedDict containing graph elements at its leaves. A graph element can be one of the following types:\r\n> \r\n>     **An tf.Operation. The corresponding fetched value will be None.**\r\n>     A tf.Tensor. The corresponding fetched value will be a numpy ndarray containing the value of that tensor.\r\n>     A tf.SparseTensor. The corresponding fetched value will be a tf.SparseTensorValue containing the value of that sparse tensor.\r\n>     A get_tensor_handle op. The corresponding fetched value will be a numpy ndarray containing the handle of that tensor.\r\n>     A string which is the name of a tensor or operation in the graph.\r\n\r\nI was stuck for quite a while on this issue, due to a` sess.run() `returning `None` all the time and not raising any exception.\r\nI don't quite get the design intention under such a behaviour:\r\n`Session.run()` is expected to return values. But it return `None` for `tf.operation`\r\nNot raising any exception, nor outputing any information make you think it is okay to call `sess.run()` on your parameter and that the issue is not on this function call.\r\nWhy is it okay to allow user to call this method with parameter that will result in no effect?\r\nAlso, as `tf.Operation` is a tensorflow type, wouldn't it be possible to automatically call for its `.values()` in the `Session.run()` instead of returning a `None`?\r\n"}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/21032", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/21032/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/21032/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/21032/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/21032", "id": 343401998, "node_id": "MDU6SXNzdWUzNDM0MDE5OTg=", "number": 21032, "title": "Got different matrix eigenvalues by tensorflow.self_adjoint_eig(A) than by numpy.linalg.eig(A)", "user": {"login": "chenjin3", "id": 8558291, "node_id": "MDQ6VXNlcjg1NTgyOTE=", "avatar_url": "https://avatars1.githubusercontent.com/u/8558291?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chenjin3", "html_url": "https://github.com/chenjin3", "followers_url": "https://api.github.com/users/chenjin3/followers", "following_url": "https://api.github.com/users/chenjin3/following{/other_user}", "gists_url": "https://api.github.com/users/chenjin3/gists{/gist_id}", "starred_url": "https://api.github.com/users/chenjin3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chenjin3/subscriptions", "organizations_url": "https://api.github.com/users/chenjin3/orgs", "repos_url": "https://api.github.com/users/chenjin3/repos", "events_url": "https://api.github.com/users/chenjin3/events{/privacy}", "received_events_url": "https://api.github.com/users/chenjin3/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": {"login": "rmlarsen", "id": 16907534, "node_id": "MDQ6VXNlcjE2OTA3NTM0", "avatar_url": "https://avatars2.githubusercontent.com/u/16907534?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rmlarsen", "html_url": "https://github.com/rmlarsen", "followers_url": "https://api.github.com/users/rmlarsen/followers", "following_url": "https://api.github.com/users/rmlarsen/following{/other_user}", "gists_url": "https://api.github.com/users/rmlarsen/gists{/gist_id}", "starred_url": "https://api.github.com/users/rmlarsen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rmlarsen/subscriptions", "organizations_url": "https://api.github.com/users/rmlarsen/orgs", "repos_url": "https://api.github.com/users/rmlarsen/repos", "events_url": "https://api.github.com/users/rmlarsen/events{/privacy}", "received_events_url": "https://api.github.com/users/rmlarsen/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "rmlarsen", "id": 16907534, "node_id": "MDQ6VXNlcjE2OTA3NTM0", "avatar_url": "https://avatars2.githubusercontent.com/u/16907534?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rmlarsen", "html_url": "https://github.com/rmlarsen", "followers_url": "https://api.github.com/users/rmlarsen/followers", "following_url": "https://api.github.com/users/rmlarsen/following{/other_user}", "gists_url": "https://api.github.com/users/rmlarsen/gists{/gist_id}", "starred_url": "https://api.github.com/users/rmlarsen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rmlarsen/subscriptions", "organizations_url": "https://api.github.com/users/rmlarsen/orgs", "repos_url": "https://api.github.com/users/rmlarsen/repos", "events_url": "https://api.github.com/users/rmlarsen/events{/privacy}", "received_events_url": "https://api.github.com/users/rmlarsen/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 2, "created_at": "2018-07-22T12:24:51Z", "updated_at": "2018-12-19T18:47:21Z", "closed_at": null, "author_association": "NONE", "body": "### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**: None\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**: Mac OS X 10.13.5\r\n- **TensorFlow installed from (source or binary)**: anaconda\r\n- **TensorFlow version (use command below)**: 1.1.0\r\n- **Python version**: Python 3.6.5 :: Anaconda, Inc.\r\n- **GCC/Compiler version (if compiling from source)**: [GCC 4.2.1 (Apple Inc. build 5666) (dot 3)] on darwin\r\n- **CUDA/cuDNN version**: None \r\n\r\n### Describe the problem\r\nGot different matrix eigenvalues by tensorflow.self_adjoint_eig(A) than by numpy.linalg.eig(A) when A is\r\n[[2., 3.], \r\n[2., 1.]]\r\n\r\n### Source code / logs\r\n```python \r\nimport os\r\nimport tensorflow as tf \r\nimport numpy as np \r\nsess = tf.Session()\r\nA = np.array([[2., 3.],[2., 1.]])\r\ne1,v1=np.linalg.eig(A) \r\nprint(e1)\r\n\r\nB = tf.convert_to_tensor(A, dtype=tf.float64)\r\ne2,v2 = sess.run(tf.self_adjoint_eig(B))\r\nprint(e2)\r\n```\r\n\r\n#### output\r\n```\r\n[ 4. -1.]\r\n[-0.56155281  3.56155281]\r\n```\r\n"}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/21019", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/21019/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/21019/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/21019/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/21019", "id": 343333066, "node_id": "MDU6SXNzdWUzNDMzMzMwNjY=", "number": 21019, "title": "C++: Add gradient for image operators", "user": {"login": "kbsriram", "id": 1495065, "node_id": "MDQ6VXNlcjE0OTUwNjU=", "avatar_url": "https://avatars3.githubusercontent.com/u/1495065?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kbsriram", "html_url": "https://github.com/kbsriram", "followers_url": "https://api.github.com/users/kbsriram/followers", "following_url": "https://api.github.com/users/kbsriram/following{/other_user}", "gists_url": "https://api.github.com/users/kbsriram/gists{/gist_id}", "starred_url": "https://api.github.com/users/kbsriram/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kbsriram/subscriptions", "organizations_url": "https://api.github.com/users/kbsriram/orgs", "repos_url": "https://api.github.com/users/kbsriram/repos", "events_url": "https://api.github.com/users/kbsriram/events{/privacy}", "received_events_url": "https://api.github.com/users/kbsriram/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1097547147, "node_id": "MDU6TGFiZWwxMDk3NTQ3MTQ3", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/comp:ops", "name": "comp:ops", "color": "0052cc", "default": false, "description": ""}, {"id": 299643928, "node_id": "MDU6TGFiZWwyOTk2NDM5Mjg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:contributions%20welcome", "name": "stat:contributions welcome", "color": "f4b400", "default": false, "description": ""}, {"id": 473173272, "node_id": "MDU6TGFiZWw0NzMxNzMyNzI=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:feature", "name": "type:feature", "color": "159b2e", "default": false, "description": ""}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2018-07-21T15:08:26Z", "updated_at": "2019-02-02T13:33:33Z", "closed_at": null, "author_association": "CONTRIBUTOR", "body": "### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**:\r\nNo\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**:\r\nLinux Ubuntu 16.04\r\n- **Mobile device (e.g. iPhone 8, Pixel 2, Samsung Galaxy) if the issue happens on mobile device**:\r\nN/A\r\n- **TensorFlow installed from (source or binary)**:\r\nbinary\r\n- **TensorFlow version (use command below)**:\r\nv1.4.0-19-ga52c8d9 1.4.1\r\n- **Python version**:\r\n3.5.2 (default, Nov 23 2017, 16:37:01) \r\n- **Bazel version (if compiling from source)**:\r\n- **GCC/Compiler version (if compiling from source)**:\r\n- **CUDA/cuDNN version**:\r\n- **GPU model and memory**:\r\n- **Exact command to reproduce**:\r\n\r\n### Describe the problem\r\nFeature request: Add gradient support for the image operators in the C++ API.\r\n"}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/21018", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/21018/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/21018/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/21018/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/21018", "id": 343331610, "node_id": "MDU6SXNzdWUzNDMzMzE2MTA=", "number": 21018, "title": "Waste lots of time to redownload grpc when building with CMake", "user": {"login": "imistyrain", "id": 3972356, "node_id": "MDQ6VXNlcjM5NzIzNTY=", "avatar_url": "https://avatars2.githubusercontent.com/u/3972356?v=4", "gravatar_id": "", "url": "https://api.github.com/users/imistyrain", "html_url": "https://github.com/imistyrain", "followers_url": "https://api.github.com/users/imistyrain/followers", "following_url": "https://api.github.com/users/imistyrain/following{/other_user}", "gists_url": "https://api.github.com/users/imistyrain/gists{/gist_id}", "starred_url": "https://api.github.com/users/imistyrain/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/imistyrain/subscriptions", "organizations_url": "https://api.github.com/users/imistyrain/orgs", "repos_url": "https://api.github.com/users/imistyrain/repos", "events_url": "https://api.github.com/users/imistyrain/events{/privacy}", "received_events_url": "https://api.github.com/users/imistyrain/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1104829434, "node_id": "MDU6TGFiZWwxMTA0ODI5NDM0", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/comp:mkl", "name": "comp:mkl", "color": "0052cc", "default": false, "description": ""}, {"id": 299643928, "node_id": "MDU6TGFiZWwyOTk2NDM5Mjg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:contributions%20welcome", "name": "stat:contributions welcome", "color": "f4b400", "default": false, "description": ""}, {"id": 473173351, "node_id": "MDU6TGFiZWw0NzMxNzMzNTE=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:build/install", "name": "type:build/install", "color": "159b2e", "default": false, "description": ""}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2018-07-21T14:46:39Z", "updated_at": "2019-01-25T22:16:14Z", "closed_at": null, "author_association": "NONE", "body": "### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**:No.\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**:Windows 7 64 bit.\r\n- **Mobile device (e.g. iPhone 8, Pixel 2, Samsung Galaxy) if the issue happens on mobile device**:No.\r\n- **TensorFlow installed from (source or binary)**:source\r\n- **TensorFlow version (use command below)**:1.9\r\n- **Python version**:3.5\r\n- **Bazel version (if compiling from source)**:No.\r\n- **GCC/Compiler version (if compiling from source)**:VS2015\r\n- **CUDA/cuDNN version**:CUDA 8.0 and cuDnn 7.0.\r\n- **GPU model and memory**:No.\r\n- **Exact command to reproduce**:\r\n```\r\ncd $TENDORFLOW_DIR/tensorflow/contrib/cmake\r\ncmake .\r\nmake -j20\r\n```\r\n\r\n### Describe the problem\r\nDescribe the problem clearly here. Be sure to convey here why it's a bug in TensorFlow or a feature request.\r\n\r\nI want to build tensorflow from source with CMake in Windows, but it fails with the error caused by the fail of gprc. I wonder if there is a way to avoid the redownload gprc when rebuilding form source.\r\n\r\n### Source code / logs\r\nInclude any logs or source code that would be helpful to diagnose the problem. If including tracebacks, please include the full traceback. Large logs and files should be attached. Try to provide a reproducible test case that is the bare minimum necessary to generate the problem.\r\n\r\n29>  Creating directories for 'grpc'\r\n29>  Cloning into 'grpc'...\r\n29>  Performing download step (git clone) for 'grpc'\r\n29>  fatal: unable to access 'https://boringssl.googlesource.com/boringssl/': Failed to connect to boringssl.googlesource.com port 443: Timed out\r\n29>  fatal: clone of 'https://boringssl.googlesource.com/boringssl' into submodule path 'D:/CNN/tensorflow/BUILD/grpc/src/grpc/third_party/boringssl-with-bazel' failed\r\n29>  Failed to clone 'third_party/boringssl-with-bazel'. Retry scheduled\r\n29>  Failed to clone 'third_party/boringssl-with-bazel' a second time, aborting\r\n29>  CMake Error at D:/CNN/tensorflow/BUILD/grpc/tmp/grpc-gitclone.cmake:93 (message):\r\n29>  Failed to update submodules in: 'D:/CNN/tensorflow/build/grpc/src/grpc'\r\n"}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20998", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20998/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20998/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20998/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/20998", "id": 343200431, "node_id": "MDU6SXNzdWUzNDMyMDA0MzE=", "number": 20998, "title": "10 minutes to recover from ResourceExhaustedError", "user": {"login": "ahundt", "id": 55744, "node_id": "MDQ6VXNlcjU1NzQ0", "avatar_url": "https://avatars1.githubusercontent.com/u/55744?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ahundt", "html_url": "https://github.com/ahundt", "followers_url": "https://api.github.com/users/ahundt/followers", "following_url": "https://api.github.com/users/ahundt/following{/other_user}", "gists_url": "https://api.github.com/users/ahundt/gists{/gist_id}", "starred_url": "https://api.github.com/users/ahundt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ahundt/subscriptions", "organizations_url": "https://api.github.com/users/ahundt/orgs", "repos_url": "https://api.github.com/users/ahundt/repos", "events_url": "https://api.github.com/users/ahundt/events{/privacy}", "received_events_url": "https://api.github.com/users/ahundt/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": {"login": "poxvoculi", "id": 15676913, "node_id": "MDQ6VXNlcjE1Njc2OTEz", "avatar_url": "https://avatars2.githubusercontent.com/u/15676913?v=4", "gravatar_id": "", "url": "https://api.github.com/users/poxvoculi", "html_url": "https://github.com/poxvoculi", "followers_url": "https://api.github.com/users/poxvoculi/followers", "following_url": "https://api.github.com/users/poxvoculi/following{/other_user}", "gists_url": "https://api.github.com/users/poxvoculi/gists{/gist_id}", "starred_url": "https://api.github.com/users/poxvoculi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/poxvoculi/subscriptions", "organizations_url": "https://api.github.com/users/poxvoculi/orgs", "repos_url": "https://api.github.com/users/poxvoculi/repos", "events_url": "https://api.github.com/users/poxvoculi/events{/privacy}", "received_events_url": "https://api.github.com/users/poxvoculi/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "poxvoculi", "id": 15676913, "node_id": "MDQ6VXNlcjE1Njc2OTEz", "avatar_url": "https://avatars2.githubusercontent.com/u/15676913?v=4", "gravatar_id": "", "url": "https://api.github.com/users/poxvoculi", "html_url": "https://github.com/poxvoculi", "followers_url": "https://api.github.com/users/poxvoculi/followers", "following_url": "https://api.github.com/users/poxvoculi/following{/other_user}", "gists_url": "https://api.github.com/users/poxvoculi/gists{/gist_id}", "starred_url": "https://api.github.com/users/poxvoculi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/poxvoculi/subscriptions", "organizations_url": "https://api.github.com/users/poxvoculi/orgs", "repos_url": "https://api.github.com/users/poxvoculi/repos", "events_url": "https://api.github.com/users/poxvoculi/events{/privacy}", "received_events_url": "https://api.github.com/users/poxvoculi/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 9, "created_at": "2018-07-20T18:11:17Z", "updated_at": "2018-12-19T18:47:12Z", "closed_at": null, "author_association": "NONE", "body": "While it is possible to create a model which is too large for GPU memory, catch the resulting `ResourceExhaustedError` exception, clear the session, and then change the configuration so it fits in memory (such as reducing batch size). However, the time from the initial allocation attempt to catching the exception can take as long as 10 minutes, when I would expect these steps should complete in milliseconds. \r\n\r\nThis problem has remained unchanged since tf 1.0, I'm currently on tf 1.8, linux ubuntu 16.04 with an nvidia geforce titan x."}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20972", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20972/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20972/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20972/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/20972", "id": 342777840, "node_id": "MDU6SXNzdWUzNDI3Nzc4NDA=", "number": 20972, "title": "Estimator does not work with tf.contrib.cudnn_rnn.CudnnGRU", "user": {"login": "matthew-z", "id": 5741303, "node_id": "MDQ6VXNlcjU3NDEzMDM=", "avatar_url": "https://avatars3.githubusercontent.com/u/5741303?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthew-z", "html_url": "https://github.com/matthew-z", "followers_url": "https://api.github.com/users/matthew-z/followers", "following_url": "https://api.github.com/users/matthew-z/following{/other_user}", "gists_url": "https://api.github.com/users/matthew-z/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthew-z/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthew-z/subscriptions", "organizations_url": "https://api.github.com/users/matthew-z/orgs", "repos_url": "https://api.github.com/users/matthew-z/repos", "events_url": "https://api.github.com/users/matthew-z/events{/privacy}", "received_events_url": "https://api.github.com/users/matthew-z/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1097545817, "node_id": "MDU6TGFiZWwxMDk3NTQ1ODE3", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/comp:apis", "name": "comp:apis", "color": "0052cc", "default": false, "description": ""}, {"id": 404586594, "node_id": "MDU6TGFiZWw0MDQ1ODY1OTQ=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:awaiting%20tensorflower", "name": "stat:awaiting tensorflower", "color": "f4b400", "default": false, "description": ""}], "state": "open", "locked": false, "assignee": {"login": "fchollet", "id": 710255, "node_id": "MDQ6VXNlcjcxMDI1NQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/710255?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fchollet", "html_url": "https://github.com/fchollet", "followers_url": "https://api.github.com/users/fchollet/followers", "following_url": "https://api.github.com/users/fchollet/following{/other_user}", "gists_url": "https://api.github.com/users/fchollet/gists{/gist_id}", "starred_url": "https://api.github.com/users/fchollet/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fchollet/subscriptions", "organizations_url": "https://api.github.com/users/fchollet/orgs", "repos_url": "https://api.github.com/users/fchollet/repos", "events_url": "https://api.github.com/users/fchollet/events{/privacy}", "received_events_url": "https://api.github.com/users/fchollet/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "fchollet", "id": 710255, "node_id": "MDQ6VXNlcjcxMDI1NQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/710255?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fchollet", "html_url": "https://github.com/fchollet", "followers_url": "https://api.github.com/users/fchollet/followers", "following_url": "https://api.github.com/users/fchollet/following{/other_user}", "gists_url": "https://api.github.com/users/fchollet/gists{/gist_id}", "starred_url": "https://api.github.com/users/fchollet/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fchollet/subscriptions", "organizations_url": "https://api.github.com/users/fchollet/orgs", "repos_url": "https://api.github.com/users/fchollet/repos", "events_url": "https://api.github.com/users/fchollet/events{/privacy}", "received_events_url": "https://api.github.com/users/fchollet/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 7, "created_at": "2018-07-19T15:25:47Z", "updated_at": "2019-07-25T14:09:48Z", "closed_at": null, "author_association": "NONE", "body": "### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**: Yes\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**: Ubuntu 16.04\r\n- **Mobile device (e.g. iPhone 8, Pixel 2, Samsung Galaxy) if the issue happens on mobile device**:\r\n- **TensorFlow installed from (source or binary)**: binary\r\n- **TensorFlow version (use command below)**:  v1.9.0-0-g25c197e023 1.9.0\r\n- **Python version**: 3.6.3\r\n- **Bazel version (if compiling from source)**:\r\n- **GCC/Compiler version (if compiling from source)**:\r\n- **CUDA/cuDNN version**: 9.0, 7.0.5\r\n- **GPU model and memory**: GTX 1070 8G\r\n- **Exact command to reproduce**: https://gist.github.com/matthew-z/57d531fa8ca5616b59afb75c1fd9d9f7\r\n \r\n### Describe the problem\r\n\r\nIt raises `ValueError: All tensors of a saveable object must be on the same device: cudnn_gru/opaque_kernel_saveable` if `CudnnGRU` is used in `model_fn` of a customized estimator. However,`CudnnLSTM` `CudnnRNNTanh`, and `CudnnRNNRelu` work well\r\n\r\n  \r\n### Source code / logs\r\n\r\nSource Code:\r\nhttps://gist.github.com/matthew-z/57d531fa8ca5616b59afb75c1fd9d9f7\r\n\r\nLogs:\r\nhttps://gist.github.com/matthew-z/f43c2188aba7c62c971cf0127fe5b80d\r\n"}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20964", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20964/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20964/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20964/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/20964", "id": 342687968, "node_id": "MDU6SXNzdWUzNDI2ODc5Njg=", "number": 20964, "title": "Using tf.contrib.training.batch_sequences_with_states with tf.data.Dataset", "user": {"login": "npuichigo", "id": 11533479, "node_id": "MDQ6VXNlcjExNTMzNDc5", "avatar_url": "https://avatars3.githubusercontent.com/u/11533479?v=4", "gravatar_id": "", "url": "https://api.github.com/users/npuichigo", "html_url": "https://github.com/npuichigo", "followers_url": "https://api.github.com/users/npuichigo/followers", "following_url": "https://api.github.com/users/npuichigo/following{/other_user}", "gists_url": "https://api.github.com/users/npuichigo/gists{/gist_id}", "starred_url": "https://api.github.com/users/npuichigo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/npuichigo/subscriptions", "organizations_url": "https://api.github.com/users/npuichigo/orgs", "repos_url": "https://api.github.com/users/npuichigo/repos", "events_url": "https://api.github.com/users/npuichigo/events{/privacy}", "received_events_url": "https://api.github.com/users/npuichigo/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1114343535, "node_id": "MDU6TGFiZWwxMTE0MzQzNTM1", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/comp:data", "name": "comp:data", "color": "0052cc", "default": false, "description": "tf.data related issues"}, {"id": 404586594, "node_id": "MDU6TGFiZWw0MDQ1ODY1OTQ=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:awaiting%20tensorflower", "name": "stat:awaiting tensorflower", "color": "f4b400", "default": false, "description": ""}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-07-19T11:24:16Z", "updated_at": "2020-02-08T01:14:09Z", "closed_at": null, "author_association": "NONE", "body": "As far as I know, tf.contrib.training.SequenceQueuingStateSaver relies on queues and queue-runners, so we'll still need to call tf.train.start_queue_runners() when used with the new tf.data.Dataset API.\r\n\r\nHowever, when I use tf.data.Iterator.from_structure to construct the input that is reusable with many different datasets, error occurs unless I initialize the Iterator before calling tf.train.start_queue_runners(). So I need to switch to a certain dataset first, and it's a quite strange usage.\r\n\r\n```python\r\niterator = Iterator.from_structure(tf.int64, tf.TensorShape([]))\r\n\r\ndataset_range = Dataset.range(10)\r\nrange_initializer = iterator.make_initializer(dataset_range)\r\n\r\ndataset_evens = dataset_range.filter(lambda x: x % 2 == 0)\r\nevens_initializer = iterator.make_initializer(dataset_evens)\r\n\r\n# Define a model based on the iterator; in this example, the model_fn\r\n# is expected to take scalar tf.int64 Tensors as input (see\r\n# the definition of 'iterator' above).\r\nprediction, loss = model_fn(iterator.get_next())\r\n\r\n# I need to pick a certain dataset, and run the initializer first.\r\nsess.run(range_initializer)\r\ntf.train.start_queue_runners(sess=sess, coord=coord)\r\n\r\n# Train for `num_epochs`, where for each epoch, we first iterate over\r\n# dataset_range, and then iterate over dataset_evens.\r\nfor _ in range(num_epochs):\r\n  # Initialize the iterator to `dataset_range`\r\n  sess.run(range_initializer)\r\n  while True:\r\n    try:\r\n      pred, loss_val = sess.run([prediction, loss])\r\n    except tf.errors.OutOfRangeError:\r\n      break\r\n\r\n  # Initialize the iterator to `dataset_evens`\r\n  sess.run(evens_initializer)\r\n  while True:\r\n    try:\r\n      pred, loss_val = sess.run([prediction, loss])\r\n    except tf.errors.OutOfRangeError:\r\n      break\r\n```\r\n\r\nBy doing so, it seems that the queue will be closed when I switch to another dataset next time.\r\n\r\nSo will tensorflow add batch_sequences_with_states like support to tf.data.Dataset without relying on the old queue mechanisms and calling tf.train.start_queue_runners explicitly."}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20960", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20960/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20960/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20960/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/20960", "id": 342624558, "node_id": "MDU6SXNzdWUzNDI2MjQ1NTg=", "number": 20960, "title": "Placeholder will cause incompelet shape bug in tf.profiler.profile", "user": {"login": "caffett", "id": 11462215, "node_id": "MDQ6VXNlcjExNDYyMjE1", "avatar_url": "https://avatars2.githubusercontent.com/u/11462215?v=4", "gravatar_id": "", "url": "https://api.github.com/users/caffett", "html_url": "https://github.com/caffett", "followers_url": "https://api.github.com/users/caffett/followers", "following_url": "https://api.github.com/users/caffett/following{/other_user}", "gists_url": "https://api.github.com/users/caffett/gists{/gist_id}", "starred_url": "https://api.github.com/users/caffett/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/caffett/subscriptions", "organizations_url": "https://api.github.com/users/caffett/orgs", "repos_url": "https://api.github.com/users/caffett/repos", "events_url": "https://api.github.com/users/caffett/events{/privacy}", "received_events_url": "https://api.github.com/users/caffett/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1097547147, "node_id": "MDU6TGFiZWwxMDk3NTQ3MTQ3", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/comp:ops", "name": "comp:ops", "color": "0052cc", "default": false, "description": ""}, {"id": 299643928, "node_id": "MDU6TGFiZWwyOTk2NDM5Mjg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:contributions%20welcome", "name": "stat:contributions welcome", "color": "f4b400", "default": false, "description": ""}, {"id": 473173272, "node_id": "MDU6TGFiZWw0NzMxNzMyNzI=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:feature", "name": "type:feature", "color": "159b2e", "default": false, "description": ""}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 12, "created_at": "2018-07-19T08:15:33Z", "updated_at": "2019-06-16T20:18:48Z", "closed_at": null, "author_association": "NONE", "body": "### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**: Yes\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**: Linux Ubuntu 18.04\r\n- **Mobile device (e.g. iPhone 8, Pixel 2, Samsung Galaxy) if the issue happens on mobile device**: N/A\r\n- **TensorFlow installed from (source or binary)**: pip\r\n- **TensorFlow version (use command below)**: v1.8.0-0-g93bc2e2072 1.8.0\r\n- **Python version**: Python 3.6.5 (default, Apr  1 2018, 05:46:30)\r\n- **Bazel version (if compiling from source)**: N/A\r\n- **GCC/Compiler version (if compiling from source)**: N/A\r\n- **CUDA/cuDNN version**: N/A\r\n- **GPU model and memory**: N/A\r\n- **Exact command to reproduce**: Please run the code in Source code / logs section.\r\n\r\n\r\n### Describe the problem\r\nThe [documentation](https://github.com/tensorflow/tensorflow/blob/master/tensorflow/core/profiler/g3doc/profile_model_architecture.md#profile-model-float-operations) tells us that\r\n> It is suggested to pass in -run_meta_path if shape is only known during runtime. tfprof can fill in the missing shape with the runtime shape information from RunMetadata. \r\n\r\nIt cannot work when the graphs contain `placeholder`.  \r\nThe reason is that the node name of placeholder in RunMetadata is different from its name in graph_def.  \r\nThe bug will be reproduced in the next section.\r\n\r\n### Source code / logs\r\nThe code reproduce the bug  \r\n```python   \r\n# The code reproduce the bug\r\nimport tensorflow as tf\r\nimport numpy as np\r\n\r\nX = tf.placeholder(tf.float32, shape=(None, 3), name='X')\r\ny = tf.constant([[1, 2, 3, 4],\r\n                 [1, 2, 3, 4],\r\n                 [1, 2, 3, 4]], dtype=tf.float32)\r\nmul_op = tf.matmul(X, y)\r\n\r\nif __name__ == \"__main__\":\r\n    x = np.random.random([2, 3])\r\n\r\n    tf.profiler.profile(\r\n        tf.get_default_graph(),\r\n        cmd='op',\r\n        options=tf.profiler.ProfileOptionBuilder.float_operation())\r\n\r\n    run_metadata = tf.RunMetadata()\r\n    with tf.Session() as sess:\r\n        print(sess.run(mul_op, feed_dict={X: x},\r\n                       options=tf.RunOptions(\r\n                           trace_level=tf.RunOptions.FULL_TRACE),\r\n                       run_metadata=run_metadata))\r\n\r\n    tf.profiler.profile(\r\n        tf.get_default_graph(),\r\n        cmd='op', run_meta=run_metadata,\r\n        options=tf.profiler.ProfileOptionBuilder.float_operation())\r\n\r\n```\r\nThe output is  \r\n```\r\n1 ops no flops stats due to incomplete shapes.\r\nParsing Inputs...\r\nIncomplete shape.\r\nIncomplete shape.\r\nIncomplete shape.\r\n\r\n=========================Options=============================\r\n-max_depth                  10000\r\n-min_bytes                  0\r\n-min_peak_bytes             0\r\n-min_residual_bytes         0\r\n-min_output_bytes           0\r\n-min_micros                 0\r\n-min_accelerator_micros     0\r\n-min_cpu_micros             0\r\n-min_params                 0\r\n-min_float_ops              1\r\n-min_occurrence             0\r\n-step                       -1\r\n-order_by                   float_ops\r\n-account_type_regexes       .*\r\n-start_name_regexes         .*\r\n-trim_name_regexes          \r\n-show_name_regexes          .*\r\n-hide_name_regexes          \r\n-account_displayed_op_only  true\r\n-select                     float_ops\r\n-output                     stdout:\r\n\r\n==================Model Analysis Report======================\r\n\r\nDoc:\r\nop: The nodes are operation kernel type, such as MatMul, Conv2D. Graph nodes belonging to the same type are aggregated together.\r\nflops: Number of float operations. Note: Please read the implementation for the math behind it.\r\n\r\nProfile:\r\nnode name | # float_ops\r\n\r\n======================End of Report==========================\r\nIncomplete shape.\r\nIncomplete shape.\r\nIncomplete shape.\r\n2018-07-19 03:34:30.726274: I tensorflow/core/platform/cpu_feature_guard.cc:140] Your CPU supports instructions that this TensorFlow binary was not compiled to use: AVX2 FMA\r\n[[1.4957699 2.9915397 4.48731   5.9830794]\r\n [2.083395  4.16679   6.2501845 8.33358  ]]\r\nParsing Inputs...\r\nIncomplete shape.\r\nIncomplete shape.\r\nIncomplete shape.\r\n\r\n=========================Options=============================\r\n-max_depth                  10000\r\n-min_bytes                  0\r\n-min_peak_bytes             0\r\n-min_residual_bytes         0\r\n-min_output_bytes           0\r\n-min_micros                 0\r\n-min_accelerator_micros     0\r\n-min_cpu_micros             0\r\n-min_params                 0\r\n-min_float_ops              1\r\n-min_occurrence             0\r\n-step                       -1\r\n-order_by                   float_ops\r\n-account_type_regexes       .*\r\n-start_name_regexes         .*\r\n-trim_name_regexes          \r\n-show_name_regexes          .*\r\n-hide_name_regexes          \r\n-account_displayed_op_only  true\r\n-select                     float_ops\r\n-output                     stdout:\r\n\r\n==================Model Analysis Report======================\r\nIncomplete shape.\r\nIncomplete shape.\r\nIncomplete shape.\r\n\r\nDoc:\r\nop: The nodes are operation kernel type, such as MatMul, Conv2D. Graph nodes belonging to the same type are aggregated together.\r\nflops: Number of float operations. Note: Please read the implementation for the math behind it.\r\n\r\nProfile:\r\nnode name | # float_ops\r\n\r\n======================End of Report==========================\r\n```\r\nWhen I first call the tf.profiler.profile, I do not pass run_metadata to it. Therefore, here should be the `incomplete shape`. However, it does not make sense that it still reports the `Incomplete shape` even if I pass the run_matadata to call the tf.profiler.profile again. \r\n\r\nI think the problem is that the node name of placeholder in RunMetadata is different with its name in graph_def.  I traced the code until [here](https://github.com/tensorflow/tensorflow/blob/master/tensorflow/python/profiler/tfprof_logger.py#L46), and printed the 'run_meta' and 'graph_def'.  \r\nThe output is  \r\n```pdb  \r\n(Pdb) p run_meta\r\nstep_stats {\r\n  dev_stats {\r\n    device: \"/job:localhost/replica:0/task:0/device:CPU:0\"\r\n    node_stats {\r\n      node_name: \"_SOURCE\"\r\n      all_start_micros: 1531987298848369\r\n      op_start_rel_micros: 2\r\n      op_end_rel_micros: 3\r\n      all_end_rel_micros: 9\r\n      memory {\r\n        allocator_name: \"cpu\"\r\n      }\r\n      timeline_label: \"_SOURCE = NoOp()\"\r\n      scheduled_micros: 1531987298848358\r\n      memory_stats {\r\n      }\r\n    }\r\n    node_stats {\r\n      node_name: \"_arg_X_0_0\"\r\n      all_start_micros: 1531987298848383\r\n      op_end_rel_micros: 2\r\n      all_end_rel_micros: 7\r\n      memory {\r\n        allocator_name: \"cpu\"\r\n      }\r\n      output {\r\n        tensor_description {\r\n          dtype: DT_FLOAT\r\n          shape {\r\n            dim {\r\n              size: 2\r\n            }\r\n            dim {\r\n              size: 3\r\n            }\r\n          }\r\n          allocation_description {\r\n            requested_bytes: 24\r\n            allocator_name: \"cpu\"\r\n          }\r\n        }\r\n      }\r\n      timeline_label: \"_arg_X_0_0 = _Arg()\"\r\n      scheduled_micros: 1531987298848378\r\n      memory_stats {\r\n      }\r\n    }\r\n    node_stats {\r\n      node_name: \"Const\"\r\n      all_start_micros: 1531987298848391\r\n      op_end_rel_micros: 3\r\n      all_end_rel_micros: 4\r\n      memory {\r\n        allocator_name: \"cpu\"\r\n      }\r\n      output {\r\n        tensor_description {\r\n          dtype: DT_FLOAT\r\n          shape {\r\n            dim {\r\n              size: 3\r\n            }\r\n            dim {\r\n              size: 4\r\n            }\r\n          }\r\n          allocation_description {\r\n            requested_bytes: 48\r\n            allocator_name: \"cpu\"\r\n            ptr: 140275567738880\r\n          }\r\n        }\r\n      }\r\n      timeline_label: \"Const = Const()\"\r\n      scheduled_micros: 1531987298848390\r\n      memory_stats {\r\n        persistent_memory_size: 48\r\n      }\r\n    }\r\n    node_stats {\r\n      node_name: \"MatMul\"\r\n      all_start_micros: 1531987298848396\r\n      op_end_rel_micros: 69\r\n      all_end_rel_micros: 72\r\n      memory {\r\n        allocator_name: \"cpu\"\r\n        total_bytes: 32\r\n        peak_bytes: 32\r\n        live_bytes: 32\r\n        allocation_records {\r\n          alloc_micros: 1531987298848437\r\n          alloc_bytes: 32\r\n        }\r\n      }\r\n      output {\r\n        tensor_description {\r\n          dtype: DT_FLOAT\r\n          shape {\r\n            dim {\r\n              size: 2\r\n            }\r\n            dim {\r\n              size: 4\r\n            }\r\n          }\r\n          allocation_description {\r\n            requested_bytes: 32\r\n            allocated_bytes: 32\r\n            allocator_name: \"cpu\"\r\n            allocation_id: 1\r\n            has_single_reference: true\r\n            ptr: 140275513085952\r\n          }\r\n        }\r\n      }\r\n      timeline_label: \"MatMul = MatMul(_arg_X_0_0, Const)\"\r\n      scheduled_micros: 1531987298848395\r\n      memory_stats {\r\n      }\r\n    }\r\n    node_stats {\r\n      node_name: \"_retval_MatMul_0_0\"\r\n      all_start_micros: 1531987298848470\r\n      op_start_rel_micros: 1\r\n      op_end_rel_micros: 1\r\n      all_end_rel_micros: 3\r\n      memory {\r\n        allocator_name: \"cpu\"\r\n      }\r\n      timeline_label: \"_retval_MatMul_0_0 = _Retval(MatMul)\"\r\n      scheduled_micros: 1531987298848468\r\n      memory_stats {\r\n      }\r\n    }\r\n  }\r\n}\r\n```\r\n\r\n```pdb    \r\n(Pdb) p graph.as_graph_def()\r\nnode {\r\n  name: \"X\"\r\n  op: \"Placeholder\"\r\n  attr {\r\n    key: \"dtype\"\r\n    value {\r\n      type: DT_FLOAT\r\n    }\r\n  }\r\n  attr {\r\n    key: \"shape\"\r\n    value {\r\n      shape {\r\n        dim {\r\n          size: -1\r\n        }\r\n        dim {\r\n          size: 3\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\nnode {\r\n  name: \"Const\"\r\n  op: \"Const\"\r\n  attr {\r\n    key: \"dtype\"\r\n    value {\r\n      type: DT_FLOAT\r\n    }\r\n  }\r\n  attr {\r\n    key: \"value\"\r\n    value {\r\n      tensor {\r\n        dtype: DT_FLOAT\r\n        tensor_shape {\r\n          dim {\r\n            size: 3\r\n          }\r\n          dim {\r\n            size: 4\r\n          }\r\n        }\r\n        tensor_content: \"\\000\\000\\200?\\000\\000\\000@\\000\\000@@\\000\\000\\200@\\000\\000\\200?\\000\\000\\000@\\000\\000@@\\000\\000\\200@\\000\\000\\200?\\000\\000\\000@\\000\\000@@\\000\\000\\200@\"\r\n      }\r\n    }\r\n  }\r\n}\r\nnode {\r\n  name: \"MatMul\"\r\n  op: \"MatMul\"\r\n  input: \"X\"\r\n  input: \"Const\"\r\n  attr {\r\n    key: \"T\"\r\n    value {\r\n      type: DT_FLOAT\r\n    }\r\n  }\r\n  attr {\r\n    key: \"transpose_a\"\r\n    value {\r\n      b: false\r\n    }\r\n  }\r\n  attr {\r\n    key: \"transpose_b\"\r\n    value {\r\n      b: false\r\n    }\r\n  }\r\n}\r\nversions {\r\n  producer: 26\r\n}\r\n\r\n```\r\n\r\nWe can find the node name of placeholder is different in the two output, in the run_meatdata, the node name is `_arg_X_0_0`, however, it is `X` in the graph_def. \r\nAs a result, code [here](https://github.com/tensorflow/tensorflow/blob/master/tensorflow/python/profiler/tfprof_logger.py#L46) will not work properly."}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20955", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20955/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20955/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20955/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/20955", "id": 342588803, "node_id": "MDU6SXNzdWUzNDI1ODg4MDM=", "number": 20955, "title": " the quantized form of Shape operation is not yet implemented", "user": {"login": "raninbowlalala", "id": 21166976, "node_id": "MDQ6VXNlcjIxMTY2OTc2", "avatar_url": "https://avatars3.githubusercontent.com/u/21166976?v=4", "gravatar_id": "", "url": "https://api.github.com/users/raninbowlalala", "html_url": "https://github.com/raninbowlalala", "followers_url": "https://api.github.com/users/raninbowlalala/followers", "following_url": "https://api.github.com/users/raninbowlalala/following{/other_user}", "gists_url": "https://api.github.com/users/raninbowlalala/gists{/gist_id}", "starred_url": "https://api.github.com/users/raninbowlalala/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/raninbowlalala/subscriptions", "organizations_url": "https://api.github.com/users/raninbowlalala/orgs", "repos_url": "https://api.github.com/users/raninbowlalala/repos", "events_url": "https://api.github.com/users/raninbowlalala/events{/privacy}", "received_events_url": "https://api.github.com/users/raninbowlalala/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 750616506, "node_id": "MDU6TGFiZWw3NTA2MTY1MDY=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/comp:lite", "name": "comp:lite", "color": "0052cc", "default": false, "description": ""}, {"id": 473173272, "node_id": "MDU6TGFiZWw0NzMxNzMyNzI=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:feature", "name": "type:feature", "color": "159b2e", "default": false, "description": ""}], "state": "open", "locked": false, "assignee": {"login": "suharshs", "id": 1450614, "node_id": "MDQ6VXNlcjE0NTA2MTQ=", "avatar_url": "https://avatars1.githubusercontent.com/u/1450614?v=4", "gravatar_id": "", "url": "https://api.github.com/users/suharshs", "html_url": "https://github.com/suharshs", "followers_url": "https://api.github.com/users/suharshs/followers", "following_url": "https://api.github.com/users/suharshs/following{/other_user}", "gists_url": "https://api.github.com/users/suharshs/gists{/gist_id}", "starred_url": "https://api.github.com/users/suharshs/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/suharshs/subscriptions", "organizations_url": "https://api.github.com/users/suharshs/orgs", "repos_url": "https://api.github.com/users/suharshs/repos", "events_url": "https://api.github.com/users/suharshs/events{/privacy}", "received_events_url": "https://api.github.com/users/suharshs/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "suharshs", "id": 1450614, "node_id": "MDQ6VXNlcjE0NTA2MTQ=", "avatar_url": "https://avatars1.githubusercontent.com/u/1450614?v=4", "gravatar_id": "", "url": "https://api.github.com/users/suharshs", "html_url": "https://github.com/suharshs", "followers_url": "https://api.github.com/users/suharshs/followers", "following_url": "https://api.github.com/users/suharshs/following{/other_user}", "gists_url": "https://api.github.com/users/suharshs/gists{/gist_id}", "starred_url": "https://api.github.com/users/suharshs/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/suharshs/subscriptions", "organizations_url": "https://api.github.com/users/suharshs/orgs", "repos_url": "https://api.github.com/users/suharshs/repos", "events_url": "https://api.github.com/users/suharshs/events{/privacy}", "received_events_url": "https://api.github.com/users/suharshs/received_events", "type": "User", "site_admin": false}, {"login": "achowdhery", "id": 4723042, "node_id": "MDQ6VXNlcjQ3MjMwNDI=", "avatar_url": "https://avatars3.githubusercontent.com/u/4723042?v=4", "gravatar_id": "", "url": "https://api.github.com/users/achowdhery", "html_url": "https://github.com/achowdhery", "followers_url": "https://api.github.com/users/achowdhery/followers", "following_url": "https://api.github.com/users/achowdhery/following{/other_user}", "gists_url": "https://api.github.com/users/achowdhery/gists{/gist_id}", "starred_url": "https://api.github.com/users/achowdhery/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/achowdhery/subscriptions", "organizations_url": "https://api.github.com/users/achowdhery/orgs", "repos_url": "https://api.github.com/users/achowdhery/repos", "events_url": "https://api.github.com/users/achowdhery/events{/privacy}", "received_events_url": "https://api.github.com/users/achowdhery/received_events", "type": "User", "site_admin": false}, {"login": "liyunlu0618", "id": 9705880, "node_id": "MDQ6VXNlcjk3MDU4ODA=", "avatar_url": "https://avatars1.githubusercontent.com/u/9705880?v=4", "gravatar_id": "", "url": "https://api.github.com/users/liyunlu0618", "html_url": "https://github.com/liyunlu0618", "followers_url": "https://api.github.com/users/liyunlu0618/followers", "following_url": "https://api.github.com/users/liyunlu0618/following{/other_user}", "gists_url": "https://api.github.com/users/liyunlu0618/gists{/gist_id}", "starred_url": "https://api.github.com/users/liyunlu0618/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/liyunlu0618/subscriptions", "organizations_url": "https://api.github.com/users/liyunlu0618/orgs", "repos_url": "https://api.github.com/users/liyunlu0618/repos", "events_url": "https://api.github.com/users/liyunlu0618/events{/privacy}", "received_events_url": "https://api.github.com/users/liyunlu0618/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 14, "created_at": "2018-07-19T05:58:20Z", "updated_at": "2019-10-11T06:12:47Z", "closed_at": null, "author_association": "NONE", "body": "\r\n### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**:no\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**:Linux Ubuntu 16.04\r\n- **Mobile device (e.g. iPhone 8, Pixel 2, Samsung Galaxy) if the issue happens on mobile device**:N/A\r\n- **TensorFlow installed from (source or binary)**:source\r\n- **TensorFlow version (use command below)**:1.9.0\r\n- **Python version**:2.7.3\r\n- **Bazel version (if compiling from source)**:0.12.0\r\n- **GCC/Compiler version (if compiling from source)**:c++11\r\n- **CUDA/cuDNN version**:7.5.18\r\n- **GPU model and memory**:TITAN,12GB\r\n- **Exact command to reproduce**:\r\n ./bazel-bin/tensorflow/contrib/lite/toco/toco --input_file=~/deeplabv3_mobinetv2/frozen_inference_graph.pb   --output_file=~/deeplabv3_mobinetv2/foo.cc   --input_format=TENSORFLOW_GRAPHDEF   --output_format=TFLITE   --inference_type=QUANTIZED_UINT8   --input_shape=1,513,513,3   --input_array=ImageTensor   --output_array=logits/semantic/BiasAdd   --default_ranges_min=0   --default_ranges_max=6   --mean_value=127.5   --std_value=127.5\r\n\r\n### Describe the problem\r\nI want to use dummy quantization to quantize deeplabv3_mobilenetv2 model \"mobilenetv2_coco_voc_trainaug\" from https://github.com/tensorflow/models/blob/master/research/deeplab/g3doc/model_zoo.md.\r\nBut I got the shape operation is not yet implemented.\r\nDo you have plan to implement it?\r\n\r\n### Source code / logs\r\n2018-07-19 13:49:26.114180: F tensorflow/contrib/lite/toco/graph_transformations/quantize.cc:459] Unimplemented: this graph contains an operator of type Shape for which the quantized form is not yet implemented. Sorry, and patches welcome (that's a relatively fun patch to write, mostly providing the actual quantized arithmetic code for this op).\r\nAborted (core dumped)\r\n"}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20919", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20919/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20919/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20919/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/20919", "id": 342276461, "node_id": "MDU6SXNzdWUzNDIyNzY0NjE=", "number": 20919, "title": "bazel build failure, error occur no such package @androidndk", "user": {"login": "hephaex", "id": 3781966, "node_id": "MDQ6VXNlcjM3ODE5NjY=", "avatar_url": "https://avatars3.githubusercontent.com/u/3781966?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hephaex", "html_url": "https://github.com/hephaex", "followers_url": "https://api.github.com/users/hephaex/followers", "following_url": "https://api.github.com/users/hephaex/following{/other_user}", "gists_url": "https://api.github.com/users/hephaex/gists{/gist_id}", "starred_url": "https://api.github.com/users/hephaex/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hephaex/subscriptions", "organizations_url": "https://api.github.com/users/hephaex/orgs", "repos_url": "https://api.github.com/users/hephaex/repos", "events_url": "https://api.github.com/users/hephaex/events{/privacy}", "received_events_url": "https://api.github.com/users/hephaex/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 750616506, "node_id": "MDU6TGFiZWw3NTA2MTY1MDY=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/comp:lite", "name": "comp:lite", "color": "0052cc", "default": false, "description": ""}, {"id": 1222092379, "node_id": "MDU6TGFiZWwxMjIyMDkyMzc5", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/subtype:bazel", "name": "subtype:bazel", "color": "b619ea", "default": false, "description": "Bazel related Build_Installation issues"}, {"id": 473173351, "node_id": "MDU6TGFiZWw0NzMxNzMzNTE=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:build/install", "name": "type:build/install", "color": "159b2e", "default": false, "description": ""}], "state": "open", "locked": false, "assignee": {"login": "case540", "id": 1299636, "node_id": "MDQ6VXNlcjEyOTk2MzY=", "avatar_url": "https://avatars2.githubusercontent.com/u/1299636?v=4", "gravatar_id": "", "url": "https://api.github.com/users/case540", "html_url": "https://github.com/case540", "followers_url": "https://api.github.com/users/case540/followers", "following_url": "https://api.github.com/users/case540/following{/other_user}", "gists_url": "https://api.github.com/users/case540/gists{/gist_id}", "starred_url": "https://api.github.com/users/case540/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/case540/subscriptions", "organizations_url": "https://api.github.com/users/case540/orgs", "repos_url": "https://api.github.com/users/case540/repos", "events_url": "https://api.github.com/users/case540/events{/privacy}", "received_events_url": "https://api.github.com/users/case540/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "case540", "id": 1299636, "node_id": "MDQ6VXNlcjEyOTk2MzY=", "avatar_url": "https://avatars2.githubusercontent.com/u/1299636?v=4", "gravatar_id": "", "url": "https://api.github.com/users/case540", "html_url": "https://github.com/case540", "followers_url": "https://api.github.com/users/case540/followers", "following_url": "https://api.github.com/users/case540/following{/other_user}", "gists_url": "https://api.github.com/users/case540/gists{/gist_id}", "starred_url": "https://api.github.com/users/case540/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/case540/subscriptions", "organizations_url": "https://api.github.com/users/case540/orgs", "repos_url": "https://api.github.com/users/case540/repos", "events_url": "https://api.github.com/users/case540/events{/privacy}", "received_events_url": "https://api.github.com/users/case540/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 25, "created_at": "2018-07-18T10:50:15Z", "updated_at": "2019-07-25T12:47:44Z", "closed_at": null, "author_association": "CONTRIBUTOR", "body": "### System information\r\n- **OS Platform and Distribution **: Ubuntu 16.04\r\n- **TensorFlow install **: installed from source\r\n- **TensorFlow version **: r1.9\r\n- **Python version **: pyenv + virtualenv to support python 3.6.6\r\n- **Bazel version **: 0.14.1 compiling from source\r\n- **GCC/Compiler version  **: gcc 4.9\r\n- **CUDA, cuDNN version**: CUDA 9.0, cuDNN 7.1\r\n- **GPU  **: NVIDIA Titan X 12GB\r\n- ** no custom code **: source compile from released r1.9 source\r\n\r\n### Describe the problem\r\nWhen compile tensor flow r1.9 from released source code, Bazel occur error message.\r\nI try to compile r1.8 as same build env. there is no error occurred. \r\n \r\n### Source code / logs\r\n- build env. setting \r\n\r\n```\r\ncd /tmp/tensorflow-r${TF_VERSION} \\\r\n    && PYTHON_BIN_PATH=/usr/local/bin/python \\\r\n        PYTHON_LIB_PATH=/usr/local/lib/python3.6/site-packages \\\r\n        GCC_HOST_COMPILER_PATH=/usr/bin/gcc \\\r\n        CC_OPT_FLAGS=\"-march=x86-64 -mavx -mavx2 -mfma -mfpmath=both -msse4.1 -msse4.2\" \\\r\n        TF_NEED_JEMALLOC=1 \\\r\n        TF_NEED_GCP=1 \\\r\n        TF_NEED_HDFS=1 \\\r\n        TF_ENABLE_XLA=1 \\\r\n        TF_NEED_VERBS=0 \\\r\n        TF_NEED_OPENCL=0 \\\r\n        TF_NEED_OPENCL_SYCL=0 \\\r\n        TF_NEED_CUDA=1 \\\r\n        TF_CUDA_CLANG=0 \\\r\n        TF_DOWNLOAD_CLANG=0 \\\r\n        TF_NEED_TENSORRT=0 \\\r\n        TF_NEED_MPI=0 \\\r\n        TF_NEED_GDR=0 \\\r\n        TF_NEED_S3=1 \\\r\n        TF_NEED_KAFKA=0 \\\r\n        TF_SET_ANDROID_WORKSPACE=0 \\\r\n        TF_CUDA_VERSION=9.0 \\\r\n        TF_CUDNN_VERSION=7 \\\r\n        TF_NCCL_VERSION=2 \\\r\n        TF_CUDA_COMPUTE_CAPABILITIES=3.5,3.7,5.2,6.0,6.1,7.0 \\\r\n        CUDA_TOOLKIT_PATH=/usr/local/cuda \\\r\n        CUDNN_INSTALL_PATH=/usr/local/cuda \\\r\n        NCCL_INSTALL_PATH=/usr \\\r\n        bash configure \\\r\n   && bazel build \\\r\n        --config=opt --config=cuda \\\r\n        --cxxopt=\"-D_GLIBCXX_USE_CXX11_ABI=0\" \\\r\n        //tensorflow/tools/pip_package:build_pip_package \\\r\n     && ./bazel-bin/tensorflow/tools/pip_package/build_pip_package /tmp/tensorflow_pkg\r\n\r\n```\r\n\r\n```\r\nStarting local Bazel server and connecting to it...\r\n...............\r\nBuilding: no action\r\nBuilding: no action\r\nBuilding: no action\r\nERROR: /tmp/tensorflow-r1.9/tensorflow/contrib/lite/kernels/internal/BUILD:529:1: no such package '@androidndk//': The repository could not be resolved and referenced by '//tensorflow/contrib/lite/kernels/internal:cpu_check'\r\nERROR: Evaluation of query \"deps(//tensorflow/tools/pip_package:build_pip_package)\" failed: errors were encountered while computing transitive closure\r\n```"}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20916", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20916/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20916/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20916/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/20916", "id": 342266540, "node_id": "MDU6SXNzdWUzNDIyNjY1NDA=", "number": 20916, "title": "tf.contrib.graph_editor.graph_replace is broken for while loops", "user": {"login": "gonnet", "id": 10587723, "node_id": "MDQ6VXNlcjEwNTg3NzIz", "avatar_url": "https://avatars3.githubusercontent.com/u/10587723?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gonnet", "html_url": "https://github.com/gonnet", "followers_url": "https://api.github.com/users/gonnet/followers", "following_url": "https://api.github.com/users/gonnet/following{/other_user}", "gists_url": "https://api.github.com/users/gonnet/gists{/gist_id}", "starred_url": "https://api.github.com/users/gonnet/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gonnet/subscriptions", "organizations_url": "https://api.github.com/users/gonnet/orgs", "repos_url": "https://api.github.com/users/gonnet/repos", "events_url": "https://api.github.com/users/gonnet/events{/privacy}", "received_events_url": "https://api.github.com/users/gonnet/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1166103538, "node_id": "MDU6TGFiZWwxMTY2MTAzNTM4", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/contrib", "name": "contrib", "color": "5319e7", "default": false, "description": "Anything that comes under contrib directory"}], "state": "open", "locked": false, "assignee": {"login": "bignamehyp", "id": 3474655, "node_id": "MDQ6VXNlcjM0NzQ2NTU=", "avatar_url": "https://avatars2.githubusercontent.com/u/3474655?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bignamehyp", "html_url": "https://github.com/bignamehyp", "followers_url": "https://api.github.com/users/bignamehyp/followers", "following_url": "https://api.github.com/users/bignamehyp/following{/other_user}", "gists_url": "https://api.github.com/users/bignamehyp/gists{/gist_id}", "starred_url": "https://api.github.com/users/bignamehyp/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bignamehyp/subscriptions", "organizations_url": "https://api.github.com/users/bignamehyp/orgs", "repos_url": "https://api.github.com/users/bignamehyp/repos", "events_url": "https://api.github.com/users/bignamehyp/events{/privacy}", "received_events_url": "https://api.github.com/users/bignamehyp/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "bignamehyp", "id": 3474655, "node_id": "MDQ6VXNlcjM0NzQ2NTU=", "avatar_url": "https://avatars2.githubusercontent.com/u/3474655?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bignamehyp", "html_url": "https://github.com/bignamehyp", "followers_url": "https://api.github.com/users/bignamehyp/followers", "following_url": "https://api.github.com/users/bignamehyp/following{/other_user}", "gists_url": "https://api.github.com/users/bignamehyp/gists{/gist_id}", "starred_url": "https://api.github.com/users/bignamehyp/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bignamehyp/subscriptions", "organizations_url": "https://api.github.com/users/bignamehyp/orgs", "repos_url": "https://api.github.com/users/bignamehyp/repos", "events_url": "https://api.github.com/users/bignamehyp/events{/privacy}", "received_events_url": "https://api.github.com/users/bignamehyp/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 3, "created_at": "2018-07-18T10:19:37Z", "updated_at": "2019-01-23T22:17:59Z", "closed_at": null, "author_association": "NONE", "body": "### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**: yes\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**: \r\n- **TensorFlow installed from (source or binary)**: source\r\n- **TensorFlow version (use command below)**: 1.9\r\n- **Python version**: 2.7.13\r\n\r\n### Describe the problem\r\ntf.contrib.graph_editor.graph_replace is broken for Graphs containing while-loops.\r\n\r\n### Source code / logs\r\nI've created a commit (1b9f2a5) which adds a simple test in tensorflow/contrib/graph_editor/tests/transform_test.py, which creates a graph with a while loop and replaces one of the variables therein:\r\n\r\n```python\r\n  def test_graph_replace_while_loop(self):\r\n    ops.reset_default_graph()\r\n    a = constant_op.constant(1, name=\"a\")\r\n    max_index = constant_op.constant(10)\r\n    index_start = constant_op.constant(1)\r\n    sum_start = constant_op.constant(0)\r\n    _, result = control_flow_ops.while_loop(\r\n        cond=lambda i, unused_s: i <= max_index,\r\n        body=lambda i, s: (i + 1, s + a),\r\n        loop_vars=[index_start, sum_start])\r\n    a_new = constant_op.constant(2, name=\"a_new\")\r\n    result_new = ge.graph_replace(result, {a: a_new})\r\n    with session.Session() as sess:\r\n      sess.run(variables.global_variables_initializer())\r\n      result_val, result_new_val = sess.run([result, result_new])\r\n    self.assertEqual(result_val, 10, ERROR_TOLERANCE)\r\n    self.assertEqual(result_new_val, 20, ERROR_TOLERANCE)\r\n```\r\n\r\nThe test fails as follows:\r\n\r\n```python\r\n........I0718 03:06:24.128054    6838 control_flow_util.py:313] Cannot use 'while/LessEqual/Enter' as input to 'while/LessEqual_1' because 'while/LessEqual/Enter' is in a while loop.\r\n\r\nwhile/LessEqual_1 while context: None\r\nwhile/LessEqual/Enter while context: while/while_context\r\n```\r\n\r\n"}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20915", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20915/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20915/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20915/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/20915", "id": 342257922, "node_id": "MDU6SXNzdWUzNDIyNTc5MjI=", "number": 20915, "title": "Heavily increased memory consumption for optimizing batch_norm in tf versions > 1.3.0 ", "user": {"login": "moboehle", "id": 26657721, "node_id": "MDQ6VXNlcjI2NjU3NzIx", "avatar_url": "https://avatars0.githubusercontent.com/u/26657721?v=4", "gravatar_id": "", "url": "https://api.github.com/users/moboehle", "html_url": "https://github.com/moboehle", "followers_url": "https://api.github.com/users/moboehle/followers", "following_url": "https://api.github.com/users/moboehle/following{/other_user}", "gists_url": "https://api.github.com/users/moboehle/gists{/gist_id}", "starred_url": "https://api.github.com/users/moboehle/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/moboehle/subscriptions", "organizations_url": "https://api.github.com/users/moboehle/orgs", "repos_url": "https://api.github.com/users/moboehle/repos", "events_url": "https://api.github.com/users/moboehle/events{/privacy}", "received_events_url": "https://api.github.com/users/moboehle/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 473172988, "node_id": "MDU6TGFiZWw0NzMxNzI5ODg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:bug", "name": "type:bug", "color": "159b2e", "default": false, "description": ""}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 19, "created_at": "2018-07-18T09:54:42Z", "updated_at": "2020-01-13T21:32:09Z", "closed_at": null, "author_association": "NONE", "body": "- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**:\r\n\r\n    I attach a code example that is intended to profile memory consumption for different layers of a network under different tensorflow versions. This should in principle work out of the box.\r\n\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**:\r\n\r\n    VERSION=\"16.04.3 LTS (Xenial Xerus)\"\r\n    VERSION_ID=\"16.04\"\r\n    VERSION_CODENAME=xenial\r\n\r\n\r\n- **TensorFlow installed from (source or binary)**:\r\n\r\n    pip install tensorflow-gpu==1.3.0\r\n    and\r\n    pip install tensorflow-gpu==1.5.0\r\n    and\r\n    pip install tensorflow-gpu==1.8.0\r\n    and\r\n    pip install tensorflow-gpu==1.9.0\r\n\r\n- **TensorFlow version (use command below)**:\r\nThe following tf versions were used to recreate the issue\r\n    tf.GIT_VERSION = b'unknown' \r\n    tf.VERSION = 1.3.0\r\n    and\r\n    tf.GIT_VERSION = v1.5.0-0-g37aa430d84\r\n    tf.VERSION = 1.5.0\r\n    and\r\n    tf.GIT_VERSION = v1.8.0-0-g93bc2e2072 \r\n    tf.VERSION = 1.8.0\r\n    and\r\n    tf.GIT_VERSION = v1.9.0-0-g25c197e023\r\n    tf.VERSION = 1.9.0\r\n  \r\n- **Python version**:\r\nPython 3.5.5 :: Anaconda, Inc.\r\n- **CUDA/cuDNN version**:\r\n    For tf 1.3.0:\r\n    nvcc: NVIDIA (R) Cuda compiler driver\r\n    Copyright (c) 2005-2016 NVIDIA Corporation\r\n    Built on Tue_Jan_10_13:22:03_CST_2017\r\n    Cuda compilation tools, release 8.0, V8.0.61\r\n    \r\n    For tf 1.5.0, 1.8.0, 1.9.0\r\n    nvcc: NVIDIA (R) Cuda compiler driver\r\n    Copyright (c) 2005-2017 NVIDIA Corporation\r\n    Built on Fri_Sep__1_21:08:03_CDT_2017\r\n    Cuda compilation tools, release 9.0, V9.0.176\r\n- **Bazel version (if compiling from source)**:\r\n    N/A\r\n- **GPU model and memory**:\r\n    GeForce GTX 1080 Ti\r\n    total memory shown as 10.91GiB\r\n- **Exact command to reproduce**:\r\n    python 'script shown below'\r\n\r\n### Describe the problem\r\nWhen trying to update from tensorflow 1.3.0 to a newer version, we noticed that memory consumption increased significantly for our networks.  \r\nWe tried to find out what was causing this issue and realized that there is a large discrepancy for memory consumption in our batch normalization layers when optimizing the network in training.\r\nI attach the code necessary to reproduce the results. \r\nIn the code the following happens:\r\n   First, a rather useless network of 10 batch normalization layers is created. In the examples shown below, this network expects 1D input of width 500 with 32 channels and a batch size of 16. \r\n   Second, a GPU profiler is started, repeatedly calling nvidia-smi to check the current memory consumption. While the memory usage is measured, the network is evaluated 2500 times, under many different conditions. Lastly, the timings and the memory consumption over time are saved and plotted for comparison of the tf versions. \r\n\r\n### What is the problem? \r\n\r\nThe results from running the code under 4 different conditions is shown in the plots below.\r\n1. Fused batch norm is used if possible, *with gradient update*, version specific batch norm\r\n2. Fused batch norm is used if possible, *without gradient update*, version specific batch norm\r\n3. No fused batch norm, *without gradient update*, all use batch normalization as in \r\nhttps://raw.githubusercontent.com/tensorflow/tensorflow/r1.3/tensorflow/python/layers/normalization.py\r\n4. No fused batch norm,*with gradient update*, all use batch normalization as in \r\nhttps://raw.githubusercontent.com/tensorflow/tensorflow/r1.3/tensorflow/python/layers/normalization.py\r\n\r\nFor 3 and 4, we still run the different tf versions, but we copied the mentioned file directly to our repo and call the batch_normalization from that file.\r\n\r\nFurthermore, currently the layout optimizer in the session config is turned off, but we also tried this with the layout optimizer turned on and this has no effect on this issue.\r\n\r\n#### 1.\r\n[batch_norm_fused_optimizing_step.pdf](https://github.com/tensorflow/tensorflow/files/2205279/batch_norm_fused_optimizing_step.pdf)\r\n#### 2.\r\n[batch_norm_fused_without_optimizing_step.pdf](https://github.com/tensorflow/tensorflow/files/2205281/batch_norm_fused_without_optimizing_step.pdf)\r\n#### 3.\r\n[batch_norm_unfused_1.3_implementaion.pdf](https://github.com/tensorflow/tensorflow/files/2205284/batch_norm_unfused_1.3_implementaion.pdf)\r\n#### 4.\r\n[batch_norm_unfused_1.3_implementaion_with_update.pdf](https://github.com/tensorflow/tensorflow/files/2205285/batch_norm_unfused_1.3_implementaion_with_update.pdf)\r\n\r\nFrom these plots, it seems that versions > 1.3.0 need a significant amount of extra memory when doing a gradient update step. For example, memory requirements for Batch norm in 1.9 increased by 50% compared to 1.3. Why is that?\r\n\r\n### Request\r\nIs there a way to circumvent the increased memory consumption? I assume some optimizing is happening in the background in newer versions, which leads to an increase in memory requirements. Can this be turned off?\r\n\r\n\r\n### Source code / logs\r\nSource code necessary to reproduce the problem is attached below.\r\n\r\nIn principle, however, I repeatedly run nvidia-smi for memory profiling and measure timing and memory for the following \r\n```\r\nfor i in range(self.steps):\r\n    start = time.time()\r\n    sess.run([net, train_op])\r\n    durations[i] = time.time() - start\r\n```\r\n[code.zip](https://github.com/tensorflow/tensorflow/files/2205292/code.zip)\r\n"}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20870", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20870/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20870/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20870/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/20870", "id": 341781991, "node_id": "MDU6SXNzdWUzNDE3ODE5OTE=", "number": 20870, "title": "[Question/Feature request] How to stack variable length tensors in a TensorArray?", "user": {"login": "nxphi47", "id": 19323568, "node_id": "MDQ6VXNlcjE5MzIzNTY4", "avatar_url": "https://avatars3.githubusercontent.com/u/19323568?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nxphi47", "html_url": "https://github.com/nxphi47", "followers_url": "https://api.github.com/users/nxphi47/followers", "following_url": "https://api.github.com/users/nxphi47/following{/other_user}", "gists_url": "https://api.github.com/users/nxphi47/gists{/gist_id}", "starred_url": "https://api.github.com/users/nxphi47/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nxphi47/subscriptions", "organizations_url": "https://api.github.com/users/nxphi47/orgs", "repos_url": "https://api.github.com/users/nxphi47/repos", "events_url": "https://api.github.com/users/nxphi47/events{/privacy}", "received_events_url": "https://api.github.com/users/nxphi47/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1097545817, "node_id": "MDU6TGFiZWwxMDk3NTQ1ODE3", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/comp:apis", "name": "comp:apis", "color": "0052cc", "default": false, "description": ""}, {"id": 473184161, "node_id": "MDU6TGFiZWw0NzMxODQxNjE=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:support", "name": "type:support", "color": "159b2e", "default": false, "description": ""}], "state": "open", "locked": false, "assignee": {"login": "tatatodd", "id": 5453737, "node_id": "MDQ6VXNlcjU0NTM3Mzc=", "avatar_url": "https://avatars3.githubusercontent.com/u/5453737?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tatatodd", "html_url": "https://github.com/tatatodd", "followers_url": "https://api.github.com/users/tatatodd/followers", "following_url": "https://api.github.com/users/tatatodd/following{/other_user}", "gists_url": "https://api.github.com/users/tatatodd/gists{/gist_id}", "starred_url": "https://api.github.com/users/tatatodd/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tatatodd/subscriptions", "organizations_url": "https://api.github.com/users/tatatodd/orgs", "repos_url": "https://api.github.com/users/tatatodd/repos", "events_url": "https://api.github.com/users/tatatodd/events{/privacy}", "received_events_url": "https://api.github.com/users/tatatodd/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "tatatodd", "id": 5453737, "node_id": "MDQ6VXNlcjU0NTM3Mzc=", "avatar_url": "https://avatars3.githubusercontent.com/u/5453737?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tatatodd", "html_url": "https://github.com/tatatodd", "followers_url": "https://api.github.com/users/tatatodd/followers", "following_url": "https://api.github.com/users/tatatodd/following{/other_user}", "gists_url": "https://api.github.com/users/tatatodd/gists{/gist_id}", "starred_url": "https://api.github.com/users/tatatodd/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tatatodd/subscriptions", "organizations_url": "https://api.github.com/users/tatatodd/orgs", "repos_url": "https://api.github.com/users/tatatodd/repos", "events_url": "https://api.github.com/users/tatatodd/events{/privacy}", "received_events_url": "https://api.github.com/users/tatatodd/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 0, "created_at": "2018-07-17T06:26:02Z", "updated_at": "2019-01-23T22:19:16Z", "closed_at": null, "author_association": "NONE", "body": "### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**:No\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**: MacOs Sierra\r\n- **TensorFlow installed from (source or binary)**:binary\r\n- **TensorFlow version (use command below)**:v1.8.0-0-g93bc2e2072 1.8.0\r\n- **Python version**: 3.6\r\n- **Bazel version (if compiling from source)**:\r\n- **GCC/Compiler version (if compiling from source)**:\r\n- **CUDA/cuDNN version**:no\r\n- **GPU model and memory**:\r\n- **Exact command to reproduce**:\r\n\r\n### Describe the problem\r\nHow to stack variable length tensors in a TensorArray cleanly and efficiently?\r\n\r\nI am implementing a form of RNN that produce variable length (time step dimension) tensors using tf.while_loop and tf.TensorArray to store the tensors. I need when `tf.while_loop` is done, all tensors are stacked into 1 tensor and the length dimension for each individual tensor is padded with 0 (or any constant) to the maximum length of the array.\r\n\r\nNote that the time dimension is unknown at compile time\r\n\r\n### Source code / logs\r\nIt would be something like this.\r\n\r\n```python\r\nimport numpy as np\r\nimport tensorflow as tf\r\n\r\nBATCH = 2\r\nDIM = 4\r\n\r\nTIME_X = 2 # unknown at compile time\r\nTIME_Y = 4 # unknown at compile time\r\n\r\ntensor_array = tf.TensorArray(size=2, infer_shape=False, dtype=x.dtype)\r\nx = tf.random_uniform(shape=[BATCH, TIME_X, DIM], name='x')\r\n# at this point, x is created but y is not created yet\r\noutput_ta = tensor_array.write(0, x)\r\n\r\n# at this point, y is created\r\ny = tf.random_uniform(shape=[BATCH, TIME_Y, DIM], name='y')\r\noutput_ta = output_ta.write(1, y)\r\n\r\n# the maximum time dimension shape is unknown when the tensor is written to the TensorArray\r\n# meaning that we can't pad each individual tensor beforehand.\r\n\r\noutput = output_ta.stack()\r\n\r\nwith tf.Session() as sess:\r\n    print(sess.run(output)) # this will raise exception as shape is not compatible\r\n\r\n# expected output shape: [2, BATCH, max(TIME_X, TIME_Y), DIM] = [2, 2, 4, 4]\r\n```\r\n\r\nThank you"}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20868", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20868/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20868/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20868/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/20868", "id": 341770369, "node_id": "MDU6SXNzdWUzNDE3NzAzNjk=", "number": 20868, "title": "Will cycle-gan have a Estimator implementation like tf.contrib.gan.estimator.GANEstimator?", "user": {"login": "joneepenk", "id": 3234542, "node_id": "MDQ6VXNlcjMyMzQ1NDI=", "avatar_url": "https://avatars1.githubusercontent.com/u/3234542?v=4", "gravatar_id": "", "url": "https://api.github.com/users/joneepenk", "html_url": "https://github.com/joneepenk", "followers_url": "https://api.github.com/users/joneepenk/followers", "following_url": "https://api.github.com/users/joneepenk/following{/other_user}", "gists_url": "https://api.github.com/users/joneepenk/gists{/gist_id}", "starred_url": "https://api.github.com/users/joneepenk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/joneepenk/subscriptions", "organizations_url": "https://api.github.com/users/joneepenk/orgs", "repos_url": "https://api.github.com/users/joneepenk/repos", "events_url": "https://api.github.com/users/joneepenk/events{/privacy}", "received_events_url": "https://api.github.com/users/joneepenk/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 299643928, "node_id": "MDU6TGFiZWwyOTk2NDM5Mjg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:contributions%20welcome", "name": "stat:contributions welcome", "color": "f4b400", "default": false, "description": ""}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2018-07-17T05:25:00Z", "updated_at": "2018-08-27T09:08:45Z", "closed_at": null, "author_association": "NONE", "body": "or can GanEstimator be used on cycle-gan for training/predicting?\r\n\r\nThanks."}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20867", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20867/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20867/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20867/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/20867", "id": 341770125, "node_id": "MDU6SXNzdWUzNDE3NzAxMjU=", "number": 20867, "title": "quantization deeplabv3(mobielentv2) error", "user": {"login": "raninbowlalala", "id": 21166976, "node_id": "MDQ6VXNlcjIxMTY2OTc2", "avatar_url": "https://avatars3.githubusercontent.com/u/21166976?v=4", "gravatar_id": "", "url": "https://api.github.com/users/raninbowlalala", "html_url": "https://github.com/raninbowlalala", "followers_url": "https://api.github.com/users/raninbowlalala/followers", "following_url": "https://api.github.com/users/raninbowlalala/following{/other_user}", "gists_url": "https://api.github.com/users/raninbowlalala/gists{/gist_id}", "starred_url": "https://api.github.com/users/raninbowlalala/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/raninbowlalala/subscriptions", "organizations_url": "https://api.github.com/users/raninbowlalala/orgs", "repos_url": "https://api.github.com/users/raninbowlalala/repos", "events_url": "https://api.github.com/users/raninbowlalala/events{/privacy}", "received_events_url": "https://api.github.com/users/raninbowlalala/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1105108936, "node_id": "MDU6TGFiZWwxMTA1MTA4OTM2", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/comp:model", "name": "comp:model", "color": "0052cc", "default": false, "description": ""}], "state": "open", "locked": false, "assignee": {"login": "suharshs", "id": 1450614, "node_id": "MDQ6VXNlcjE0NTA2MTQ=", "avatar_url": "https://avatars1.githubusercontent.com/u/1450614?v=4", "gravatar_id": "", "url": "https://api.github.com/users/suharshs", "html_url": "https://github.com/suharshs", "followers_url": "https://api.github.com/users/suharshs/followers", "following_url": "https://api.github.com/users/suharshs/following{/other_user}", "gists_url": "https://api.github.com/users/suharshs/gists{/gist_id}", "starred_url": "https://api.github.com/users/suharshs/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/suharshs/subscriptions", "organizations_url": "https://api.github.com/users/suharshs/orgs", "repos_url": "https://api.github.com/users/suharshs/repos", "events_url": "https://api.github.com/users/suharshs/events{/privacy}", "received_events_url": "https://api.github.com/users/suharshs/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "suharshs", "id": 1450614, "node_id": "MDQ6VXNlcjE0NTA2MTQ=", "avatar_url": "https://avatars1.githubusercontent.com/u/1450614?v=4", "gravatar_id": "", "url": "https://api.github.com/users/suharshs", "html_url": "https://github.com/suharshs", "followers_url": "https://api.github.com/users/suharshs/followers", "following_url": "https://api.github.com/users/suharshs/following{/other_user}", "gists_url": "https://api.github.com/users/suharshs/gists{/gist_id}", "starred_url": "https://api.github.com/users/suharshs/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/suharshs/subscriptions", "organizations_url": "https://api.github.com/users/suharshs/orgs", "repos_url": "https://api.github.com/users/suharshs/repos", "events_url": "https://api.github.com/users/suharshs/events{/privacy}", "received_events_url": "https://api.github.com/users/suharshs/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 25, "created_at": "2018-07-17T05:23:38Z", "updated_at": "2019-07-25T07:31:21Z", "closed_at": null, "author_association": "NONE", "body": "### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**: No\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**: Linux Ubuntu 16.04\r\n- **TensorFlow installed from (source or binary)**:source\r\n- **TensorFlow version (use command below)**:1.9.0\r\n- **Python version**: 2.7.3\r\n- **Bazel version (if compiling from source)**:0.12.0\r\n- **GCC/Compiler version (if compiling from source)**:c++11\r\n- **CUDA/cuDNN version**:7.5.18\r\n- **GPU model and memory**:TITAN,12GB\r\n- **Exact command to reproduce**:N/A\r\n\r\n\r\n### Describe the problem\r\nI want to train a quantization deeplabv3+(mobienetv2) model, use \"mobilenetv2_coco_voc_trainaug\" from https://github.com/tensorflow/models/blob/master/research/deeplab/g3doc/model_zoo.md.\r\n\r\n\r\n### Source code / logs\r\n I add `tf.contrib.quantize.create_training_graph(quant_delay=0)` in line 315 https://github.com/tensorflow/models/blob/master/research/deeplab/train.py\r\nbut I got the error like below:\r\n```\r\nINFO:tensorflow:Training on train set\r\nTraceback (most recent call last):\r\n  File \"deeplab/train.py\", line 359, in <module>\r\n    tf.app.run()\r\n  File \"/home/liufang/deeplab_venv/local/lib/python2.7/site-packages/tensorflow/python/platform/app.py\", line 125, in run\r\n    _sys.exit(main(argv))\r\n  File \"deeplab/train.py\", line 281, in main\r\n    tf.contrib.quantize.create_training_graph(quant_delay=0)\r\n  File \"/home/liufang/deeplab_venv/local/lib/python2.7/site-packages/tensorflow/contrib/quantize/python/quantize_graph.py\", line 112, in create_training_graph\r\n    freeze_bn_delay=freeze_bn_delay)\r\n  File \"/home/liufang/deeplab_venv/local/lib/python2.7/site-packages/tensorflow/contrib/quantize/python/quantize_graph.py\", line 66, in _create_graph\r\n    is_training=is_training)\r\n  File \"/home/liufang/deeplab_venv/local/lib/python2.7/site-packages/tensorflow/contrib/quantize/python/fold_batch_norms.py\", line 54, in FoldBatchNorms\r\n    graph, is_training, freeze_batch_norm_delay=freeze_batch_norm_delay)\r\n  File \"/home/liufang/deeplab_venv/local/lib/python2.7/site-packages/tensorflow/contrib/quantize/python/fold_batch_norms.py\", line 100, in _FoldFusedBatchNorms\r\n    fused_batch_norm=True))\r\n  File \"/home/liufang/deeplab_venv/local/lib/python2.7/site-packages/tensorflow/contrib/quantize/python/fold_batch_norms.py\", line 323, in _ComputeBatchNormCorrections\r\n    match.moving_variance_tensor + match.batch_epsilon)\r\nTypeError: unsupported operand type(s) for +: 'NoneType' and 'float'\r\n```\r\n\r\n\r\n"}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20866", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20866/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20866/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20866/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/20866", "id": 341745941, "node_id": "MDU6SXNzdWUzNDE3NDU5NDE=", "number": 20866, "title": "Why tf.losses.softmax_cross_entropy doesn't have \"dim\" (axis) argument?", "user": {"login": "iteal", "id": 28520418, "node_id": "MDQ6VXNlcjI4NTIwNDE4", "avatar_url": "https://avatars3.githubusercontent.com/u/28520418?v=4", "gravatar_id": "", "url": "https://api.github.com/users/iteal", "html_url": "https://github.com/iteal", "followers_url": "https://api.github.com/users/iteal/followers", "following_url": "https://api.github.com/users/iteal/following{/other_user}", "gists_url": "https://api.github.com/users/iteal/gists{/gist_id}", "starred_url": "https://api.github.com/users/iteal/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/iteal/subscriptions", "organizations_url": "https://api.github.com/users/iteal/orgs", "repos_url": "https://api.github.com/users/iteal/repos", "events_url": "https://api.github.com/users/iteal/events{/privacy}", "received_events_url": "https://api.github.com/users/iteal/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 299643928, "node_id": "MDU6TGFiZWwyOTk2NDM5Mjg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:contributions%20welcome", "name": "stat:contributions welcome", "color": "f4b400", "default": false, "description": ""}, {"id": 473173272, "node_id": "MDU6TGFiZWw0NzMxNzMyNzI=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:feature", "name": "type:feature", "color": "159b2e", "default": false, "description": ""}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2018-07-17T02:46:52Z", "updated_at": "2020-02-26T22:42:33Z", "closed_at": null, "author_association": "NONE", "body": "Hi!\r\nThe function \"tf.losses.softmax_cross_entropy\" calls \"nn.softmax_cross_entropy_with_logits_v2\" which has a dim argument with a default value of -1.\r\nCan we add the same \"dim\" or \"axis\" parameter to the calling function \" tf.losses.softmax_cross_entropy\", so that we can choose which axis to apply the softmax  ?\r\nThanks!"}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20857", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20857/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20857/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20857/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/20857", "id": 341695014, "node_id": "MDU6SXNzdWUzNDE2OTUwMTQ=", "number": 20857, "title": "Issue with tf.gradients() taking too long", "user": {"login": "felsabbagh3", "id": 30584044, "node_id": "MDQ6VXNlcjMwNTg0MDQ0", "avatar_url": "https://avatars0.githubusercontent.com/u/30584044?v=4", "gravatar_id": "", "url": "https://api.github.com/users/felsabbagh3", "html_url": "https://github.com/felsabbagh3", "followers_url": "https://api.github.com/users/felsabbagh3/followers", "following_url": "https://api.github.com/users/felsabbagh3/following{/other_user}", "gists_url": "https://api.github.com/users/felsabbagh3/gists{/gist_id}", "starred_url": "https://api.github.com/users/felsabbagh3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/felsabbagh3/subscriptions", "organizations_url": "https://api.github.com/users/felsabbagh3/orgs", "repos_url": "https://api.github.com/users/felsabbagh3/repos", "events_url": "https://api.github.com/users/felsabbagh3/events{/privacy}", "received_events_url": "https://api.github.com/users/felsabbagh3/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1097547147, "node_id": "MDU6TGFiZWwxMDk3NTQ3MTQ3", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/comp:ops", "name": "comp:ops", "color": "0052cc", "default": false, "description": ""}], "state": "open", "locked": false, "assignee": {"login": "tatatodd", "id": 5453737, "node_id": "MDQ6VXNlcjU0NTM3Mzc=", "avatar_url": "https://avatars3.githubusercontent.com/u/5453737?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tatatodd", "html_url": "https://github.com/tatatodd", "followers_url": "https://api.github.com/users/tatatodd/followers", "following_url": "https://api.github.com/users/tatatodd/following{/other_user}", "gists_url": "https://api.github.com/users/tatatodd/gists{/gist_id}", "starred_url": "https://api.github.com/users/tatatodd/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tatatodd/subscriptions", "organizations_url": "https://api.github.com/users/tatatodd/orgs", "repos_url": "https://api.github.com/users/tatatodd/repos", "events_url": "https://api.github.com/users/tatatodd/events{/privacy}", "received_events_url": "https://api.github.com/users/tatatodd/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "tatatodd", "id": 5453737, "node_id": "MDQ6VXNlcjU0NTM3Mzc=", "avatar_url": "https://avatars3.githubusercontent.com/u/5453737?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tatatodd", "html_url": "https://github.com/tatatodd", "followers_url": "https://api.github.com/users/tatatodd/followers", "following_url": "https://api.github.com/users/tatatodd/following{/other_user}", "gists_url": "https://api.github.com/users/tatatodd/gists{/gist_id}", "starred_url": "https://api.github.com/users/tatatodd/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tatatodd/subscriptions", "organizations_url": "https://api.github.com/users/tatatodd/orgs", "repos_url": "https://api.github.com/users/tatatodd/repos", "events_url": "https://api.github.com/users/tatatodd/events{/privacy}", "received_events_url": "https://api.github.com/users/tatatodd/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 2, "created_at": "2018-07-16T22:04:53Z", "updated_at": "2019-01-23T22:13:48Z", "closed_at": null, "author_association": "NONE", "body": "### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**: Yes\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**: Ubuntu 16.04 LTS\r\n- **TensorFlow version (use command below)**: 1.8.0\r\n- **Python version**: 2.7.12\r\n- **CUDA/cuDNN version**: 7.5.17\r\n- **GPU model and memory**: GeForce GTX 1080 Ti\r\n- **Bazel version**: N/A\r\n- **Exact command to reproduce**: tf.gradients()\r\n\r\n### Describe the problem\r\n\r\nSo I am using tensorflow/models/object_detection with different networks (Currently using a SSD MobileNet network). I am trying to prune the network and I am using tf.gradients(total_loss, activation_tensor) on the activation tensors to see which filters need to be pruned. However, the issue I am currently facing is that each call to tf.gradients is costing me at least 3 seconds regardless if I am doing this on the GPU or CPU. Is this a known issue and is there a fix or a replacement for tf.gradients? \r\n"}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20817", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20817/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20817/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20817/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/20817", "id": 341313783, "node_id": "MDU6SXNzdWUzNDEzMTM3ODM=", "number": 20817, "title": "Java SavedModelBundle.load do not support long path in windows", "user": {"login": "iron9light", "id": 64274, "node_id": "MDQ6VXNlcjY0Mjc0", "avatar_url": "https://avatars3.githubusercontent.com/u/64274?v=4", "gravatar_id": "", "url": "https://api.github.com/users/iron9light", "html_url": "https://github.com/iron9light", "followers_url": "https://api.github.com/users/iron9light/followers", "following_url": "https://api.github.com/users/iron9light/following{/other_user}", "gists_url": "https://api.github.com/users/iron9light/gists{/gist_id}", "starred_url": "https://api.github.com/users/iron9light/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/iron9light/subscriptions", "organizations_url": "https://api.github.com/users/iron9light/orgs", "repos_url": "https://api.github.com/users/iron9light/repos", "events_url": "https://api.github.com/users/iron9light/events{/privacy}", "received_events_url": "https://api.github.com/users/iron9light/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 299643928, "node_id": "MDU6TGFiZWwyOTk2NDM5Mjg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:contributions%20welcome", "name": "stat:contributions welcome", "color": "f4b400", "default": false, "description": ""}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-07-15T11:27:58Z", "updated_at": "2018-07-18T06:42:41Z", "closed_at": null, "author_association": "NONE", "body": "### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**:\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**:\r\nWindows 10 64bit.\r\n- **TensorFlow installed from (source or binary)**:\r\nbinary\r\n- **TensorFlow version (use command below)**: 1.8.0\r\n- **Python version**: 3.6\r\n- **Bazel version (if compiling from source)**:\r\n- **GCC/Compiler version (if compiling from source)**:\r\n- **CUDA/cuDNN version**:\r\n- **GPU model and memory**:\r\n- **Exact command to reproduce**:\r\n### Describe the problem\r\nJava SavedModelBundle.load do not support long path in windows.\r\nIt will throw something like:\r\n```\r\norg.tensorflow.TensorFlowException: NewRandomAccessFile failed to Create/Open: C:\\Projects\\veryveryveryveryveryveryveryveryveryveryveryveryveryveryveryveryveryveryveryveryveryveryveryveryveryveryveryveryveryveryveryveryveryveryveryveryveryveryveryveryveryveryveryveryveryveryveryveryveryveryveryveryveryveryveryveryveryveryveryveryveryveryveryveryveryveryveryveryveryveryveryveryveryveryveryveryveryveryveryveryveryveryveryveryveryveryveryveryveryveryveryveryveryveryveryveryveryveryveryveryveryveryveryverylongpath/variables/variables.data-00000-of-00001 : The system cannot find the path specified.\r\n; No such process\r\n\t [[Node: save_1/RestoreV2 = RestoreV2[_output_shapes=[<unknown>, <unknown>, <unknown>, <unknown>, <unknown>, ..., <unknown>, <unknown>, <unknown>, <unknown>, <unknown>], dtypes=[DT_FLOAT, DT_FLOAT, DT_FLOAT, DT_FLOAT, DT_FLOAT, ..., DT_FLOAT, DT_FLOAT, DT_FLOAT, DT_FLOAT, DT_FLOAT], _device=\"/job:localhost/replica:0/task:0/device:CPU:0\"](_arg_save_1/Const_0_0, save_1/RestoreV2/tensor_names, save_1/RestoreV2/shape_and_slices)]]\r\n\tat org.tensorflow.SavedModelBundle.load(Native Method)\r\n```\r\nI shorten the model path, everything works fine.\r\nI enabled long path based on this [doc](https://docs.microsoft.com/en-us/windows/desktop/fileio/naming-a-file). It still has this issue.\r\n\r\nI know it's a limit of Windows OS. I just wandering is there any way to let the C++ part bypass this limit?\r\n"}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20781", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20781/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20781/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20781/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/20781", "id": 341051939, "node_id": "MDU6SXNzdWUzNDEwNTE5Mzk=", "number": 20781, "title": "Feature request: preserve cycle order of open iterators in tf.data.Dataset.interleave", "user": {"login": "carlthome", "id": 1595907, "node_id": "MDQ6VXNlcjE1OTU5MDc=", "avatar_url": "https://avatars3.githubusercontent.com/u/1595907?v=4", "gravatar_id": "", "url": "https://api.github.com/users/carlthome", "html_url": "https://github.com/carlthome", "followers_url": "https://api.github.com/users/carlthome/followers", "following_url": "https://api.github.com/users/carlthome/following{/other_user}", "gists_url": "https://api.github.com/users/carlthome/gists{/gist_id}", "starred_url": "https://api.github.com/users/carlthome/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/carlthome/subscriptions", "organizations_url": "https://api.github.com/users/carlthome/orgs", "repos_url": "https://api.github.com/users/carlthome/repos", "events_url": "https://api.github.com/users/carlthome/events{/privacy}", "received_events_url": "https://api.github.com/users/carlthome/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1114343535, "node_id": "MDU6TGFiZWwxMTE0MzQzNTM1", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/comp:data", "name": "comp:data", "color": "0052cc", "default": false, "description": "tf.data related issues"}, {"id": 473173272, "node_id": "MDU6TGFiZWw0NzMxNzMyNzI=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:feature", "name": "type:feature", "color": "159b2e", "default": false, "description": ""}], "state": "open", "locked": false, "assignee": {"login": "tatatodd", "id": 5453737, "node_id": "MDQ6VXNlcjU0NTM3Mzc=", "avatar_url": "https://avatars3.githubusercontent.com/u/5453737?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tatatodd", "html_url": "https://github.com/tatatodd", "followers_url": "https://api.github.com/users/tatatodd/followers", "following_url": "https://api.github.com/users/tatatodd/following{/other_user}", "gists_url": "https://api.github.com/users/tatatodd/gists{/gist_id}", "starred_url": "https://api.github.com/users/tatatodd/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tatatodd/subscriptions", "organizations_url": "https://api.github.com/users/tatatodd/orgs", "repos_url": "https://api.github.com/users/tatatodd/repos", "events_url": "https://api.github.com/users/tatatodd/events{/privacy}", "received_events_url": "https://api.github.com/users/tatatodd/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "tatatodd", "id": 5453737, "node_id": "MDQ6VXNlcjU0NTM3Mzc=", "avatar_url": "https://avatars3.githubusercontent.com/u/5453737?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tatatodd", "html_url": "https://github.com/tatatodd", "followers_url": "https://api.github.com/users/tatatodd/followers", "following_url": "https://api.github.com/users/tatatodd/following{/other_user}", "gists_url": "https://api.github.com/users/tatatodd/gists{/gist_id}", "starred_url": "https://api.github.com/users/tatatodd/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tatatodd/subscriptions", "organizations_url": "https://api.github.com/users/tatatodd/orgs", "repos_url": "https://api.github.com/users/tatatodd/repos", "events_url": "https://api.github.com/users/tatatodd/events{/privacy}", "received_events_url": "https://api.github.com/users/tatatodd/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 3, "created_at": "2018-07-13T14:59:26Z", "updated_at": "2019-01-23T22:04:40Z", "closed_at": null, "author_association": "CONTRIBUTOR", "body": "I'm trying to train RNNs with truncated BPTT with `tf.data` (a great API by the way!) but got tripped up by [these lines](https://github.com/tensorflow/tensorflow/blob/744cf3d3e06fb63ffa40086766137daedc01a5ba/tensorflow/core/kernels/data/interleave_dataset_op.cc#L190-L195) as I've assumed an exhausted iterator would result in a new element being opened directly at the same position in the cycle (in order to pass around RNN states reliably).\r\n\r\nInstead what seems to be happening is that my sequences are accidentally shifted in in the subsequent `.batch()` call whenever a sequence is done. Could the default be changed so that a new element is consumed directly as long as there are any left, such that consecutive dataset elements can be batched in a more straightforward way for RNN training.\r\n\r\nOr could we have a `tf.contrib.data.batched_interleave` or similar?"}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20773", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20773/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20773/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20773/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/20773", "id": 340919929, "node_id": "MDU6SXNzdWUzNDA5MTk5Mjk=", "number": 20773, "title": "tf.Print related wired bug", "user": {"login": "NaxAlpha", "id": 11090613, "node_id": "MDQ6VXNlcjExMDkwNjEz", "avatar_url": "https://avatars3.githubusercontent.com/u/11090613?v=4", "gravatar_id": "", "url": "https://api.github.com/users/NaxAlpha", "html_url": "https://github.com/NaxAlpha", "followers_url": "https://api.github.com/users/NaxAlpha/followers", "following_url": "https://api.github.com/users/NaxAlpha/following{/other_user}", "gists_url": "https://api.github.com/users/NaxAlpha/gists{/gist_id}", "starred_url": "https://api.github.com/users/NaxAlpha/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/NaxAlpha/subscriptions", "organizations_url": "https://api.github.com/users/NaxAlpha/orgs", "repos_url": "https://api.github.com/users/NaxAlpha/repos", "events_url": "https://api.github.com/users/NaxAlpha/events{/privacy}", "received_events_url": "https://api.github.com/users/NaxAlpha/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": {"login": "poxvoculi", "id": 15676913, "node_id": "MDQ6VXNlcjE1Njc2OTEz", "avatar_url": "https://avatars2.githubusercontent.com/u/15676913?v=4", "gravatar_id": "", "url": "https://api.github.com/users/poxvoculi", "html_url": "https://github.com/poxvoculi", "followers_url": "https://api.github.com/users/poxvoculi/followers", "following_url": "https://api.github.com/users/poxvoculi/following{/other_user}", "gists_url": "https://api.github.com/users/poxvoculi/gists{/gist_id}", "starred_url": "https://api.github.com/users/poxvoculi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/poxvoculi/subscriptions", "organizations_url": "https://api.github.com/users/poxvoculi/orgs", "repos_url": "https://api.github.com/users/poxvoculi/repos", "events_url": "https://api.github.com/users/poxvoculi/events{/privacy}", "received_events_url": "https://api.github.com/users/poxvoculi/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "poxvoculi", "id": 15676913, "node_id": "MDQ6VXNlcjE1Njc2OTEz", "avatar_url": "https://avatars2.githubusercontent.com/u/15676913?v=4", "gravatar_id": "", "url": "https://api.github.com/users/poxvoculi", "html_url": "https://github.com/poxvoculi", "followers_url": "https://api.github.com/users/poxvoculi/followers", "following_url": "https://api.github.com/users/poxvoculi/following{/other_user}", "gists_url": "https://api.github.com/users/poxvoculi/gists{/gist_id}", "starred_url": "https://api.github.com/users/poxvoculi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/poxvoculi/subscriptions", "organizations_url": "https://api.github.com/users/poxvoculi/orgs", "repos_url": "https://api.github.com/users/poxvoculi/repos", "events_url": "https://api.github.com/users/poxvoculi/events{/privacy}", "received_events_url": "https://api.github.com/users/poxvoculi/received_events", "type": "User", "site_admin": false}, {"login": "aaroey", "id": 31743510, "node_id": "MDQ6VXNlcjMxNzQzNTEw", "avatar_url": "https://avatars0.githubusercontent.com/u/31743510?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aaroey", "html_url": "https://github.com/aaroey", "followers_url": "https://api.github.com/users/aaroey/followers", "following_url": "https://api.github.com/users/aaroey/following{/other_user}", "gists_url": "https://api.github.com/users/aaroey/gists{/gist_id}", "starred_url": "https://api.github.com/users/aaroey/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aaroey/subscriptions", "organizations_url": "https://api.github.com/users/aaroey/orgs", "repos_url": "https://api.github.com/users/aaroey/repos", "events_url": "https://api.github.com/users/aaroey/events{/privacy}", "received_events_url": "https://api.github.com/users/aaroey/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 5, "created_at": "2018-07-13T07:59:07Z", "updated_at": "2018-12-10T18:56:23Z", "closed_at": null, "author_association": "NONE", "body": "### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**: Yes\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**: Windows 10 (latest)\r\n- **TensorFlow installed from (source or binary)**: binary\r\n- **TensorFlow version (use command below)**: r1.9 (v1.9.0-0-g25c197e023)\r\n- **Python version**: Python 3.6.5 |Anaconda, Inc.| [MSC v.1900 64 bit (AMD64)] on win32\r\n- **Bazel version (if compiling from source)**: N/A\r\n- **GCC/Compiler version (if compiling from source)**: N/A\r\n- **CUDA/cuDNN version**: CUDA 9.0, cuDNN 64_7\r\n- **GPU model and memory**: GTX 1060-6GB(Laptop)\r\n- **Exact command to reproduce**: N/A\r\n\r\n### Describe the problem\r\nWhile developing a prime number generator using `tensorflow-gpu`, I came across a wired bug. Given the source code, if you use `tf.Print` result is correct and run-time is less than without using `tf.Print`. \r\n\r\n### Source code / logs\r\n``` python\r\n# check first 'n' numbers for primity using tensorflow\r\n\r\nimport warnings\r\nwith warnings.catch_warnings():\r\n    warnings.filterwarnings(\"ignore\",category=FutureWarning)\r\n    import h5py\r\nimport os\r\nos.environ['TF_CPP_MIN_LOG_LEVEL'] = '3' \r\nimport tensorflow as tf\r\nimport numpy as np\r\nimport time\r\n\r\ndef prime_tf_graf(max_count,dump):\r\n\tttyp = tf.int32\r\n\tdata = tf.range(2, max_count, dtype=ttyp)\r\n\tif dump:\r\n\t\tdata = tf.Print(data, [data], 'Data Loaded!')\r\n\tX, Y = tf.meshgrid(data, data); \r\n\ttemp = Y%X\r\n\tmask = tf.cast(tf.equal(temp, Y), dtype=ttyp)\r\n\ttemp = temp - Y * mask\r\n\ttemp = tf.cast(tf.not_equal(temp, 0), dtype=ttyp)\r\n\tsumr = tf.reduce_sum(temp, axis=1)\r\n\tnums = data - 2\r\n\trato = tf.cast(sumr/nums, ttyp)\r\n\tindx =  tf.cast(tf.not_equal(rato, 0), ttyp)\r\n\tshap =  tf.reshape(tf.where(indx), [-1]) + 2\r\n\treturn shap\r\n\r\ndef prime_tf(max_count,dump):\r\n\twith tf.device('/gpu:0'):\r\n\t\tgraf = prime_tf_graf(max_count, dump)\r\n\tsess = tf.Session(config=tf.ConfigProto(allow_soft_placement=True))\r\n\tsess.run(tf.global_variables_initializer())\r\n\tprim = sess.run(graf)\r\n\treturn prim\r\n\r\ndef bench(task):\r\n\tnow = time.time()\r\n\tres = task()\r\n\treturn res, time.time() - now\r\n\r\np, t = bench(lambda: prime_tf(10000, True))\r\nprint('With Dump: found %d primes in %f time'%(len(p), t))\r\np, t = bench(lambda: prime_tf(10000, False))\r\nprint('Without Dump: found %d primes in %f time'%(len(p), t))\r\n```\r\nand here is output on my system:\r\n\r\n```\r\nPS E:\\Research\\TFLearn> python .\\bug.py\r\nData Loaded![2 3 4...]\r\nWith Dump: found 1229 primes in 12.599950 time\r\nWithout Dump: found 1085 primes in 25.162465 time\r\n```\r\n"}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20761", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20761/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20761/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20761/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/20761", "id": 340850617, "node_id": "MDU6SXNzdWUzNDA4NTA2MTc=", "number": 20761, "title": "Error occurs when I create subprocess after creating tf.train.Server with RDMA.", "user": {"login": "sleepfin", "id": 7370869, "node_id": "MDQ6VXNlcjczNzA4Njk=", "avatar_url": "https://avatars1.githubusercontent.com/u/7370869?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sleepfin", "html_url": "https://github.com/sleepfin", "followers_url": "https://api.github.com/users/sleepfin/followers", "following_url": "https://api.github.com/users/sleepfin/following{/other_user}", "gists_url": "https://api.github.com/users/sleepfin/gists{/gist_id}", "starred_url": "https://api.github.com/users/sleepfin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sleepfin/subscriptions", "organizations_url": "https://api.github.com/users/sleepfin/orgs", "repos_url": "https://api.github.com/users/sleepfin/repos", "events_url": "https://api.github.com/users/sleepfin/events{/privacy}", "received_events_url": "https://api.github.com/users/sleepfin/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": {"login": "bignamehyp", "id": 3474655, "node_id": "MDQ6VXNlcjM0NzQ2NTU=", "avatar_url": "https://avatars2.githubusercontent.com/u/3474655?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bignamehyp", "html_url": "https://github.com/bignamehyp", "followers_url": "https://api.github.com/users/bignamehyp/followers", "following_url": "https://api.github.com/users/bignamehyp/following{/other_user}", "gists_url": "https://api.github.com/users/bignamehyp/gists{/gist_id}", "starred_url": "https://api.github.com/users/bignamehyp/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bignamehyp/subscriptions", "organizations_url": "https://api.github.com/users/bignamehyp/orgs", "repos_url": "https://api.github.com/users/bignamehyp/repos", "events_url": "https://api.github.com/users/bignamehyp/events{/privacy}", "received_events_url": "https://api.github.com/users/bignamehyp/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "bignamehyp", "id": 3474655, "node_id": "MDQ6VXNlcjM0NzQ2NTU=", "avatar_url": "https://avatars2.githubusercontent.com/u/3474655?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bignamehyp", "html_url": "https://github.com/bignamehyp", "followers_url": "https://api.github.com/users/bignamehyp/followers", "following_url": "https://api.github.com/users/bignamehyp/following{/other_user}", "gists_url": "https://api.github.com/users/bignamehyp/gists{/gist_id}", "starred_url": "https://api.github.com/users/bignamehyp/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bignamehyp/subscriptions", "organizations_url": "https://api.github.com/users/bignamehyp/orgs", "repos_url": "https://api.github.com/users/bignamehyp/repos", "events_url": "https://api.github.com/users/bignamehyp/events{/privacy}", "received_events_url": "https://api.github.com/users/bignamehyp/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 4, "created_at": "2018-07-13T01:29:32Z", "updated_at": "2018-12-20T18:48:14Z", "closed_at": null, "author_association": "NONE", "body": "### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**: Yes\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**: Redhat 7.2\r\n- **TensorFlow installed from (source or binary)**: source\r\n- **TensorFlow version (use command below)**: v1.8.0\r\n- **Python version**: 2.7\r\n- **Bazel version (if compiling from source)**: 0.11.0\r\n- **GCC/Compiler version (if compiling from source)**: 4.8.5\r\n- **CUDA/cuDNN version**: CUDA-9.0/cuDNN-7.0.5\r\n- **GPU model and memory**: Tesla-P100\r\n- **Exact command to reproduce**:\r\n\r\nYou can collect some of this information using our environment capture script:\r\n\r\nhttps://github.com/tensorflow/tensorflow/tree/master/tools/tf_env_collect.sh\r\n\r\nYou can obtain the TensorFlow version with\r\n\r\npython -c \"import tensorflow as tf; print(tf.GIT_VERSION, tf.VERSION)\"\r\n\r\n### Describe the problem\r\nDescribe the problem clearly here. Be sure to convey here why it's a bug in TensorFlow or a feature request.\r\n\r\nI compile the TensorFlow-v1.8.0 with RDMA support and modify the mnist_replicas.py based on: \r\nhttps://github.com/tensorflow/tensorflow/blob/master/tensorflow/tools/dist_test/python/mnist_replica.py\r\n\r\n```\r\n...\r\n  if not FLAGS.existing_servers:\r\n    # Not using existing servers. Create an in-process server.\r\n    server = tf.train.Server(\r\n        cluster, job_name=FLAGS.job_name, task_index=FLAGS.task_index, protocol='grpc+verbs')\r\n    if FLAGS.job_name == \"ps\":\r\n      server.join()\r\n...\r\n```\r\n\r\nIt works just fine.\r\nThen I try to create a subprocess after `tf.train.Server` is created which leads to an error:\r\n\r\n```\r\n...\r\n  if not FLAGS.existing_servers:\r\n    # Not using existing servers. Create an in-process server.\r\n    server = tf.train.Server(\r\n        cluster, job_name=FLAGS.job_name, task_index=FLAGS.task_index, protocol='grpc+verbs')\r\n\r\n    import multiprocessing; multiprocessing.Process(target=time.sleep, args=(100,)).start()\r\n\r\n    if FLAGS.job_name == \"ps\":\r\n      server.join()\r\n...\r\n```\r\n\r\n Here is the log:\r\n\r\nworker:\r\n```\r\n...\r\njob name = worker\r\ntask index = 0\r\n2018-07-13 09:22:57.115547: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1356] Found device 0 with properties:\r\nname: Tesla P100-PCIE-16GB major: 6 minor: 0 memoryClockRate(GHz): 1.3285\r\npciBusID: 0000:b5:00.0\r\ntotalMemory: 15.90GiB freeMemory: 15.27GiB\r\n2018-07-13 09:22:57.115607: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1406] Ignoring visible gpu device (device: 0, name: Tesla P100-PCIE-16GB, pci bus id: 0000:b5:00.0, compute capability: 6.0) with Cuda compute capability 6.0. The minimum required Cuda capability is 7.0.\r\n2018-07-13 09:22:57.115628: I tensorflow/core/common_runtime/gpu/gpu_device.cc:923] Device interconnect StreamExecutor with strength 1 edge matrix:\r\n2018-07-13 09:22:57.115636: I tensorflow/core/common_runtime/gpu/gpu_device.cc:929]      0\r\n2018-07-13 09:22:57.115644: I tensorflow/core/common_runtime/gpu/gpu_device.cc:942] 0:   N\r\n2018-07-13 09:22:57.116866: I tensorflow/core/distributed_runtime/rpc/grpc_channel.cc:215] Initialize GrpcChannelCache for job ps -> {0 -> 172.30.96.109:49998}\r\n2018-07-13 09:22:57.116883: I tensorflow/core/distributed_runtime/rpc/grpc_channel.cc:215] Initialize GrpcChannelCache for job worker -> {0 -> localhost:49999}\r\n2018-07-13 09:22:57.118450: I tensorflow/core/distributed_runtime/rpc/grpc_channel.cc:215] Initialize GrpcChannelCache for job ps -> {0 -> 172.30.96.109:49998}\r\n2018-07-13 09:22:57.118468: I tensorflow/core/distributed_runtime/rpc/grpc_channel.cc:215] Initialize GrpcChannelCache for job worker -> {0 -> localhost:49999}\r\n2018-07-13 09:22:57.125228: I tensorflow/contrib/verbs/rdma.cc:315] RoCE v2 is not configured for GID_INDEX 0\r\n2018-07-13 09:22:57.127868: I tensorflow/core/distributed_runtime/rpc/grpc_server_lib.cc:332] Started server with target: grpc://localhost:49999\r\n2018-07-13 09:22:57.134897: I tensorflow/contrib/verbs/rdma_mgr.cc:128] Connected to remote node /job:ps/replica:0/task:0\r\n2018-07-13 09:22:57.770456: I tensorflow/contrib/verbs/rdma_mgr.cc:311] Instrumenting CPU allocator cpu_rdma_bfc\r\n2018-07-13 09:22:57.770480: I tensorflow/contrib/verbs/rdma_mgr.cc:311] Instrumenting CPU allocator cpu_pool\r\nWARNING:tensorflow:From mnist_replica_ib.py:217: __init__ (from tensorflow.python.training.supervisor) is deprecated and will be removed in a future version.\r\nInstructions for updating:\r\nPlease switch to tf.train.MonitoredTrainingSession\r\nWorker 0: Initializing session...\r\n2018-07-13 09:22:58.064007: I tensorflow/core/distributed_runtime/master_session.cc:1136] Start master session 6cb605bf203f3160 with config: device_filters: \"/job:ps\" device_filters: \"/job:worker/task:0\" allow_soft_placement: true\r\n2018-07-13 09:22:58.090607: F tensorflow/contrib/verbs/rdma.cc:691] Check failed: iter != request_table_.end()\r\nAborted\r\n```\r\n\r\nps\r\n```\r\n...\r\njob name = ps\r\ntask index = 0\r\n2018-07-13 09:22:54.747787: E tensorflow/stream_executor/cuda/cuda_driver.cc:406] failed call to cuInit: CUDA_ERROR_NO_DEVICE\r\n2018-07-13 09:22:54.747853: I tensorflow/stream_executor/cuda/cuda_diagnostics.cc:158] retrieving CUDA diagnostic information for host: bms-60c5\r\n2018-07-13 09:22:54.747865: I tensorflow/stream_executor/cuda/cuda_diagnostics.cc:165] hostname: bms-60c5\r\n2018-07-13 09:22:54.747923: I tensorflow/stream_executor/cuda/cuda_diagnostics.cc:189] libcuda reported version is: 390.67.0\r\n2018-07-13 09:22:54.747988: I tensorflow/stream_executor/cuda/cuda_diagnostics.cc:193] kernel reported version is: 390.67.0\r\n2018-07-13 09:22:54.748000: I tensorflow/stream_executor/cuda/cuda_diagnostics.cc:300] kernel version seems to match DSO: 390.67.0\r\n2018-07-13 09:22:54.750241: I tensorflow/core/distributed_runtime/rpc/grpc_channel.cc:215] Initialize GrpcChannelCache for job ps -> {0 -> localhost:49998}\r\n2018-07-13 09:22:54.750261: I tensorflow/core/distributed_runtime/rpc/grpc_channel.cc:215] Initialize GrpcChannelCache for job worker -> {0 -> 172.30.96.109:49999}\r\n2018-07-13 09:22:54.751826: I tensorflow/core/distributed_runtime/rpc/grpc_channel.cc:215] Initialize GrpcChannelCache for job ps -> {0 -> localhost:49998}\r\n2018-07-13 09:22:54.751843: I tensorflow/core/distributed_runtime/rpc/grpc_channel.cc:215] Initialize GrpcChannelCache for job worker -> {0 -> 172.30.96.109:49999}\r\n2018-07-13 09:22:54.759391: I tensorflow/contrib/verbs/rdma.cc:315] RoCE v2 is not configured for GID_INDEX 0\r\n2018-07-13 09:22:54.762222: I tensorflow/core/distributed_runtime/rpc/grpc_server_lib.cc:332] Started server with target: grpc://localhost:49998\r\n2018-07-13 09:22:57.770347: I tensorflow/contrib/verbs/rdma_mgr.cc:128] Connected to remote node /job:worker/replica:0/task:0\r\n2018-07-13 09:22:57.770929: I tensorflow/contrib/verbs/rdma_mgr.cc:311] Instrumenting CPU allocator cpu_rdma_bfc\r\n2018-07-13 09:22:57.770944: I tensorflow/contrib/verbs/rdma_mgr.cc:311] Instrumenting CPU allocator cpu_pool\r\n```\r\n\r\nThen I  try creating subprocess before `tf.train.Server` is created, it works without any error. (worker will stuck after finish training because subprocess is still sleeping.)\r\nCode:\r\n```\r\n...\r\n  if not FLAGS.existing_servers:\r\n    # Not using existing servers. Create an in-process server.\r\n    import multiprocessing; multiprocessing.Process(target=time.sleep, args=(100,)).start()\r\n    server = tf.train.Server(\r\n        cluster, job_name=FLAGS.job_name, task_index=FLAGS.task_index, protocol='grpc+verbs')\r\n    if FLAGS.job_name == \"ps\":\r\n      server.join()\r\n...\r\n```\r\n\r\nAny idea?"}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20737", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20737/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20737/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20737/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/20737", "id": 340633801, "node_id": "MDU6SXNzdWUzNDA2MzM4MDE=", "number": 20737, "title": "Extend the support of the exponential distribution to include 0", "user": {"login": "aboettcher", "id": 8246089, "node_id": "MDQ6VXNlcjgyNDYwODk=", "avatar_url": "https://avatars0.githubusercontent.com/u/8246089?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aboettcher", "html_url": "https://github.com/aboettcher", "followers_url": "https://api.github.com/users/aboettcher/followers", "following_url": "https://api.github.com/users/aboettcher/following{/other_user}", "gists_url": "https://api.github.com/users/aboettcher/gists{/gist_id}", "starred_url": "https://api.github.com/users/aboettcher/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aboettcher/subscriptions", "organizations_url": "https://api.github.com/users/aboettcher/orgs", "repos_url": "https://api.github.com/users/aboettcher/repos", "events_url": "https://api.github.com/users/aboettcher/events{/privacy}", "received_events_url": "https://api.github.com/users/aboettcher/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1105108936, "node_id": "MDU6TGFiZWwxMTA1MTA4OTM2", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/comp:model", "name": "comp:model", "color": "0052cc", "default": false, "description": ""}, {"id": 473173272, "node_id": "MDU6TGFiZWw0NzMxNzMyNzI=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:feature", "name": "type:feature", "color": "159b2e", "default": false, "description": ""}], "state": "open", "locked": false, "assignee": {"login": "jvdillon", "id": 1137078, "node_id": "MDQ6VXNlcjExMzcwNzg=", "avatar_url": "https://avatars0.githubusercontent.com/u/1137078?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jvdillon", "html_url": "https://github.com/jvdillon", "followers_url": "https://api.github.com/users/jvdillon/followers", "following_url": "https://api.github.com/users/jvdillon/following{/other_user}", "gists_url": "https://api.github.com/users/jvdillon/gists{/gist_id}", "starred_url": "https://api.github.com/users/jvdillon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jvdillon/subscriptions", "organizations_url": "https://api.github.com/users/jvdillon/orgs", "repos_url": "https://api.github.com/users/jvdillon/repos", "events_url": "https://api.github.com/users/jvdillon/events{/privacy}", "received_events_url": "https://api.github.com/users/jvdillon/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "jvdillon", "id": 1137078, "node_id": "MDQ6VXNlcjExMzcwNzg=", "avatar_url": "https://avatars0.githubusercontent.com/u/1137078?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jvdillon", "html_url": "https://github.com/jvdillon", "followers_url": "https://api.github.com/users/jvdillon/followers", "following_url": "https://api.github.com/users/jvdillon/following{/other_user}", "gists_url": "https://api.github.com/users/jvdillon/gists{/gist_id}", "starred_url": "https://api.github.com/users/jvdillon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jvdillon/subscriptions", "organizations_url": "https://api.github.com/users/jvdillon/orgs", "repos_url": "https://api.github.com/users/jvdillon/repos", "events_url": "https://api.github.com/users/jvdillon/events{/privacy}", "received_events_url": "https://api.github.com/users/jvdillon/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 2, "created_at": "2018-07-12T13:17:10Z", "updated_at": "2019-01-23T22:11:40Z", "closed_at": null, "author_association": "NONE", "body": "The support of the [Exponential Distribution](https://en.wikipedia.org/wiki/Exponential_distribution) includes 0. However in tensorflow (v1.8 compiled from source on ubuntu 16.04 using the cpu) it does not. Example:\r\n```\r\nimport tensorflow as tf\r\nexp = tf.distributions.Exponential(rate=1./2.)\r\nllh = exp.log_prob(value=0.) \r\n\r\nwith tf.Session() as sess:\r\n    print(sess.run(llh))\r\n```\r\nResult:\r\n`nan`\r\n\r\nIn that case Tensorflow differs to scipy's behaviour:\r\n```\r\nimport scipy as sp\r\nsp.stats.expon(scale=2.).logpdf(0.)\r\n```\r\nResult:\r\n`-0.6931471805599453`\r\n\r\nWould be great to adopt scipy's behaviour. Thank you\r\n\r\nEDIT:\r\nHave I written custom code: No\r\nOS Platform and Distribution: Ubuntu 16.04\r\nTensorFlow installed from: source\r\nTensorFlow version: 1.8.0\r\nBazel version: Build label: 0.11.1\r\nCUDA/cuDNN version: -/- (using CPU)\r\nGPU model and memory: - (using CPU)\r\nExact command to reproduce: see above\r\nPython:  3.6.3"}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20702", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20702/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20702/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20702/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/20702", "id": 340336579, "node_id": "MDU6SXNzdWUzNDAzMzY1Nzk=", "number": 20702, "title": "[Improvement] Make tf.contrib.model_pruning.masked_conv2d API compatible with tf.layers.conv2d", "user": {"login": "jsiloto", "id": 4967065, "node_id": "MDQ6VXNlcjQ5NjcwNjU=", "avatar_url": "https://avatars1.githubusercontent.com/u/4967065?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsiloto", "html_url": "https://github.com/jsiloto", "followers_url": "https://api.github.com/users/jsiloto/followers", "following_url": "https://api.github.com/users/jsiloto/following{/other_user}", "gists_url": "https://api.github.com/users/jsiloto/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsiloto/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsiloto/subscriptions", "organizations_url": "https://api.github.com/users/jsiloto/orgs", "repos_url": "https://api.github.com/users/jsiloto/repos", "events_url": "https://api.github.com/users/jsiloto/events{/privacy}", "received_events_url": "https://api.github.com/users/jsiloto/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1166103538, "node_id": "MDU6TGFiZWwxMTY2MTAzNTM4", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/contrib", "name": "contrib", "color": "5319e7", "default": false, "description": "Anything that comes under contrib directory"}], "state": "open", "locked": false, "assignee": {"login": "suyoggupta", "id": 41447211, "node_id": "MDQ6VXNlcjQxNDQ3MjEx", "avatar_url": "https://avatars0.githubusercontent.com/u/41447211?v=4", "gravatar_id": "", "url": "https://api.github.com/users/suyoggupta", "html_url": "https://github.com/suyoggupta", "followers_url": "https://api.github.com/users/suyoggupta/followers", "following_url": "https://api.github.com/users/suyoggupta/following{/other_user}", "gists_url": "https://api.github.com/users/suyoggupta/gists{/gist_id}", "starred_url": "https://api.github.com/users/suyoggupta/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/suyoggupta/subscriptions", "organizations_url": "https://api.github.com/users/suyoggupta/orgs", "repos_url": "https://api.github.com/users/suyoggupta/repos", "events_url": "https://api.github.com/users/suyoggupta/events{/privacy}", "received_events_url": "https://api.github.com/users/suyoggupta/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "suyoggupta", "id": 41447211, "node_id": "MDQ6VXNlcjQxNDQ3MjEx", "avatar_url": "https://avatars0.githubusercontent.com/u/41447211?v=4", "gravatar_id": "", "url": "https://api.github.com/users/suyoggupta", "html_url": "https://github.com/suyoggupta", "followers_url": "https://api.github.com/users/suyoggupta/followers", "following_url": "https://api.github.com/users/suyoggupta/following{/other_user}", "gists_url": "https://api.github.com/users/suyoggupta/gists{/gist_id}", "starred_url": "https://api.github.com/users/suyoggupta/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/suyoggupta/subscriptions", "organizations_url": "https://api.github.com/users/suyoggupta/orgs", "repos_url": "https://api.github.com/users/suyoggupta/repos", "events_url": "https://api.github.com/users/suyoggupta/events{/privacy}", "received_events_url": "https://api.github.com/users/suyoggupta/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 3, "created_at": "2018-07-11T17:28:15Z", "updated_at": "2019-01-23T21:59:59Z", "closed_at": null, "author_association": "NONE", "body": "TensorFlow version: v1.8.0-0-g93bc2e2072 1.8.0\r\n\r\n### Describe the problem\r\nI know contrib isn't officially supported, but I don't know who I should request this to:\r\nmasked_conv2d is intended to be a plug-in replacement of conv2d, but argument names are different. Some simples changes such as: num_outputs->filters, scope->name etc should be enough to make it compatible"}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20692", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20692/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20692/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20692/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/20692", "id": 340187476, "node_id": "MDU6SXNzdWUzNDAxODc0NzY=", "number": 20692, "title": "ImportError: cannot import name 'build_info' when using command import tensorflow as tf", "user": {"login": "polariskying", "id": 41112671, "node_id": "MDQ6VXNlcjQxMTEyNjcx", "avatar_url": "https://avatars1.githubusercontent.com/u/41112671?v=4", "gravatar_id": "", "url": "https://api.github.com/users/polariskying", "html_url": "https://github.com/polariskying", "followers_url": "https://api.github.com/users/polariskying/followers", "following_url": "https://api.github.com/users/polariskying/following{/other_user}", "gists_url": "https://api.github.com/users/polariskying/gists{/gist_id}", "starred_url": "https://api.github.com/users/polariskying/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/polariskying/subscriptions", "organizations_url": "https://api.github.com/users/polariskying/orgs", "repos_url": "https://api.github.com/users/polariskying/repos", "events_url": "https://api.github.com/users/polariskying/events{/privacy}", "received_events_url": "https://api.github.com/users/polariskying/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 404586558, "node_id": "MDU6TGFiZWw0MDQ1ODY1NTg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:community%20support", "name": "stat:community support", "color": "f4b400", "default": false, "description": ""}, {"id": 1188421838, "node_id": "MDU6TGFiZWwxMTg4NDIxODM4", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/subtype:windows", "name": "subtype:windows", "color": "b619ea", "default": false, "description": "Windows Build/Installation Issues"}, {"id": 473173351, "node_id": "MDU6TGFiZWw0NzMxNzMzNTE=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:build/install", "name": "type:build/install", "color": "159b2e", "default": false, "description": ""}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-07-11T10:41:48Z", "updated_at": "2019-01-23T21:59:07Z", "closed_at": null, "author_association": "NONE", "body": "I can successfully follow the tutorial of installing tensorflow (CPU version) with Anaconda yesterday. However, after trying to apply the GPU version and download CUDA9.0, CuDNN v7.1.4 for CUDA9.0, suddenly everything gets wrong,,,\r\n\r\n![default](https://user-images.githubusercontent.com/41112671/42566657-d220b842-8539-11e8-8ad1-c475621cee5c.PNG)\r\n\r\n\r\nPLEASE CAN ANYONE HELP ME...T_T  I am new to it as I work for it new because of my final year project.\r\n"}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20689", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20689/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20689/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20689/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/20689", "id": 340174956, "node_id": "MDU6SXNzdWUzNDAxNzQ5NTY=", "number": 20689, "title": "Trying to open a non-existing file in tf.data.Dataset on Windows crashes Python instance", "user": {"login": "PiotrDabrowskey", "id": 9080823, "node_id": "MDQ6VXNlcjkwODA4MjM=", "avatar_url": "https://avatars2.githubusercontent.com/u/9080823?v=4", "gravatar_id": "", "url": "https://api.github.com/users/PiotrDabrowskey", "html_url": "https://github.com/PiotrDabrowskey", "followers_url": "https://api.github.com/users/PiotrDabrowskey/followers", "following_url": "https://api.github.com/users/PiotrDabrowskey/following{/other_user}", "gists_url": "https://api.github.com/users/PiotrDabrowskey/gists{/gist_id}", "starred_url": "https://api.github.com/users/PiotrDabrowskey/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/PiotrDabrowskey/subscriptions", "organizations_url": "https://api.github.com/users/PiotrDabrowskey/orgs", "repos_url": "https://api.github.com/users/PiotrDabrowskey/repos", "events_url": "https://api.github.com/users/PiotrDabrowskey/events{/privacy}", "received_events_url": "https://api.github.com/users/PiotrDabrowskey/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1114343535, "node_id": "MDU6TGFiZWwxMTE0MzQzNTM1", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/comp:data", "name": "comp:data", "color": "0052cc", "default": false, "description": "tf.data related issues"}, {"id": 473184161, "node_id": "MDU6TGFiZWw0NzMxODQxNjE=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:support", "name": "type:support", "color": "159b2e", "default": false, "description": ""}], "state": "open", "locked": false, "assignee": {"login": "tatatodd", "id": 5453737, "node_id": "MDQ6VXNlcjU0NTM3Mzc=", "avatar_url": "https://avatars3.githubusercontent.com/u/5453737?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tatatodd", "html_url": "https://github.com/tatatodd", "followers_url": "https://api.github.com/users/tatatodd/followers", "following_url": "https://api.github.com/users/tatatodd/following{/other_user}", "gists_url": "https://api.github.com/users/tatatodd/gists{/gist_id}", "starred_url": "https://api.github.com/users/tatatodd/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tatatodd/subscriptions", "organizations_url": "https://api.github.com/users/tatatodd/orgs", "repos_url": "https://api.github.com/users/tatatodd/repos", "events_url": "https://api.github.com/users/tatatodd/events{/privacy}", "received_events_url": "https://api.github.com/users/tatatodd/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "tatatodd", "id": 5453737, "node_id": "MDQ6VXNlcjU0NTM3Mzc=", "avatar_url": "https://avatars3.githubusercontent.com/u/5453737?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tatatodd", "html_url": "https://github.com/tatatodd", "followers_url": "https://api.github.com/users/tatatodd/followers", "following_url": "https://api.github.com/users/tatatodd/following{/other_user}", "gists_url": "https://api.github.com/users/tatatodd/gists{/gist_id}", "starred_url": "https://api.github.com/users/tatatodd/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tatatodd/subscriptions", "organizations_url": "https://api.github.com/users/tatatodd/orgs", "repos_url": "https://api.github.com/users/tatatodd/repos", "events_url": "https://api.github.com/users/tatatodd/events{/privacy}", "received_events_url": "https://api.github.com/users/tatatodd/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 0, "created_at": "2018-07-11T10:03:12Z", "updated_at": "2019-01-23T21:57:00Z", "closed_at": null, "author_association": "NONE", "body": "## System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**: no\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**: Windows 7 Enterprise\r\n- **TensorFlow installed from (source or binary)**: binary (compiled by conda-forge)\r\n- **TensorFlow version (use command below)**: v1.8.0-0-g93bc2e2072, 1.8.0\r\n- **Python version**: Python 3.6.5\r\n- **Bazel version (if compiling from source)**: n/a\r\n- **GCC/Compiler version (if compiling from source)**: n/a\r\n- **CUDA/cuDNN version**: none (CPU only)\r\n- **GPU model and memory**: none (CPU only)\r\n- **Exact command to reproduce**:\r\n```python\r\nimport tensorflow as tf\r\n\r\nsess = tf.Session()\r\n\r\nfilenames = [r'C:\\nonexistent.tfrecords']\r\ndataset = tf.data.TFRecordDataset(filenames)\r\niterator = dataset.make_one_shot_iterator()\r\nnext_element = iterator.get_next()\r\n\r\nprint(sess.run(next_element))\r\n```\r\n\r\n### Describe the problem\r\nTrying to open a non-existing tfrecords dataset using `tf.data.Dataset` on Windows crashes Python instance. On Linux the same code properly raises a `NotFoundError`.\r\n\r\n### Source code / logs\r\nError on Windows:\r\n![image](https://user-images.githubusercontent.com/9080823/42564829-1d66b532-8502-11e8-9fd9-a9a235ad6523.png)\r\nError details (in Polish):\r\n```\r\nPodpis problemu:\r\n  Nazwa zdarzenia problemu:\tAPPCRASH\r\n  Nazwa aplikacji:\tpython.exe\r\n  Wersja aplikacji:\t3.6.5150.1013\r\n  Sygnatura czasowa aplikacji:\t5ac79d8c\r\n  Nazwa modu\u0142u z b\u0142\u0119dem:\t_pywrap_tensorflow_internal.pyd\r\n  Wersja modu\u0142u z b\u0142\u0119dem:\t0.0.0.0\r\n  Sygnatura czasowa modu\u0142u z b\u0142\u0119dem:\t5ae380ee\r\n  Kod wyj\u0105tku:\tc0000005\r\n  Przesuni\u0119cie wyj\u0105tku:\t0000000000236acf\r\n  Wersja systemu operacyjnego:\t6.1.7601.2.1.0.256.4\r\n  Identyfikator ustawie\u0144 regionalnych:\t1045\r\n  Dodatkowe informacje 1:\t2583\r\n  Dodatkowe informacje 2:\t258324ee3ae15385fdd62136546133f9\r\n  Dodatkowe informacje 3:\t1bc4\r\n  Dodatkowe informacje 4:\t1bc4034f8418cb6d1dc9351873ca4aa5\r\n```\r\nResult:\r\n```\r\nProcess finished with exit code -1073741819 (0xC0000005)\r\n```\r\n\r\nProper error on Linux (part of, full stacktrace removed):\r\n```\r\nNotFoundError (see above for traceback): C:\\nonexistent.tfrecords; No such file or directory\r\n         [[Node: IteratorGetNext = IteratorGetNext[output_shapes=[[]], output_types=[DT_STRING], _device=\"/job:localhost/replica:0/task:0/device:CPU:0\"](OneShotIterator)]]\r\n```\r\n\r\n"}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20687", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20687/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20687/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20687/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/20687", "id": 340127010, "node_id": "MDU6SXNzdWUzNDAxMjcwMTA=", "number": 20687, "title": "Speeding up TF custom ops on GPU", "user": {"login": "badreddineGC", "id": 32060704, "node_id": "MDQ6VXNlcjMyMDYwNzA0", "avatar_url": "https://avatars1.githubusercontent.com/u/32060704?v=4", "gravatar_id": "", "url": "https://api.github.com/users/badreddineGC", "html_url": "https://github.com/badreddineGC", "followers_url": "https://api.github.com/users/badreddineGC/followers", "following_url": "https://api.github.com/users/badreddineGC/following{/other_user}", "gists_url": "https://api.github.com/users/badreddineGC/gists{/gist_id}", "starred_url": "https://api.github.com/users/badreddineGC/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/badreddineGC/subscriptions", "organizations_url": "https://api.github.com/users/badreddineGC/orgs", "repos_url": "https://api.github.com/users/badreddineGC/repos", "events_url": "https://api.github.com/users/badreddineGC/events{/privacy}", "received_events_url": "https://api.github.com/users/badreddineGC/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1097547147, "node_id": "MDU6TGFiZWwxMDk3NTQ3MTQ3", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/comp:ops", "name": "comp:ops", "color": "0052cc", "default": false, "description": ""}, {"id": 473184161, "node_id": "MDU6TGFiZWw0NzMxODQxNjE=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:support", "name": "type:support", "color": "159b2e", "default": false, "description": ""}], "state": "open", "locked": false, "assignee": {"login": "skye", "id": 88808, "node_id": "MDQ6VXNlcjg4ODA4", "avatar_url": "https://avatars1.githubusercontent.com/u/88808?v=4", "gravatar_id": "", "url": "https://api.github.com/users/skye", "html_url": "https://github.com/skye", "followers_url": "https://api.github.com/users/skye/followers", "following_url": "https://api.github.com/users/skye/following{/other_user}", "gists_url": "https://api.github.com/users/skye/gists{/gist_id}", "starred_url": "https://api.github.com/users/skye/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/skye/subscriptions", "organizations_url": "https://api.github.com/users/skye/orgs", "repos_url": "https://api.github.com/users/skye/repos", "events_url": "https://api.github.com/users/skye/events{/privacy}", "received_events_url": "https://api.github.com/users/skye/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "skye", "id": 88808, "node_id": "MDQ6VXNlcjg4ODA4", "avatar_url": "https://avatars1.githubusercontent.com/u/88808?v=4", "gravatar_id": "", "url": "https://api.github.com/users/skye", "html_url": "https://github.com/skye", "followers_url": "https://api.github.com/users/skye/followers", "following_url": "https://api.github.com/users/skye/following{/other_user}", "gists_url": "https://api.github.com/users/skye/gists{/gist_id}", "starred_url": "https://api.github.com/users/skye/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/skye/subscriptions", "organizations_url": "https://api.github.com/users/skye/orgs", "repos_url": "https://api.github.com/users/skye/repos", "events_url": "https://api.github.com/users/skye/events{/privacy}", "received_events_url": "https://api.github.com/users/skye/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 7, "created_at": "2018-07-11T07:41:46Z", "updated_at": "2019-01-23T21:56:42Z", "closed_at": null, "author_association": "NONE", "body": "I have created some TF custom Ops [which you can think of as matmul or conv operations], as per TF's [tutorial](https://www.tensorflow.org/extend/adding_an_op), and would like to speed them up. I have used AWS' P3 instances (NVIDIA V100 GPU) to run my Ops. Depending on the size of the model, my GPU ops are between 1.5x and 5x slower than TF functions.\r\n\r\nI have seen that TF's implementation of various operations (such as Con2D, MatMul, Pooling etc) use DeviceMemory objects to encapsulate tensor data to be passed to the target device (GPU), then call different wrappers that end up launching Kernels using \"[Stream::ThenLaunch](https://github.com/petewarden/tensorflow_makefile/blob/master/tensorflow/stream_executor/stream_executor_pimpl.h#L729)\".\r\n\r\nA different type of implementation [(OpenAI's block sparse conv2d)](https://github.com/openai/blocksparse), choses to launch the Kernel using cuLaunchKernel after they allocate CUdeviceptr to the different Kernel arguments.\r\n\r\nIn my implementation, when I register my TF Ops, the Input/Output tensors are presumably on the device, as I do not set them to be located on the Host(is this correct?). Is TF copying tensors back and forth, between host and GPU after each OP?\r\n\r\nWould it make any difference, in terms of speed, if the Input/Output tensors are set on the Host then copied to the device (cudaMalloc/cudaMemCpy) used by GPU Kernels then copy the results to the Host?\r\n\r\nWould my Kernels run any faster if I were to use TF's approach, to use the DeviceMemory class for my arguments and the Stream::ThenLaunch method to launch the Kernel, or OpenAI's CUdeviceptr and cuLaunchKernel approach?\r\n\r\nThanks"}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20680", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20680/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20680/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20680/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/20680", "id": 340069266, "node_id": "MDU6SXNzdWUzNDAwNjkyNjY=", "number": 20680, "title": "The default values of tf.app.flags are printed event though passed parameters at the first time", "user": {"login": "tobegit3hub", "id": 2715000, "node_id": "MDQ6VXNlcjI3MTUwMDA=", "avatar_url": "https://avatars0.githubusercontent.com/u/2715000?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tobegit3hub", "html_url": "https://github.com/tobegit3hub", "followers_url": "https://api.github.com/users/tobegit3hub/followers", "following_url": "https://api.github.com/users/tobegit3hub/following{/other_user}", "gists_url": "https://api.github.com/users/tobegit3hub/gists{/gist_id}", "starred_url": "https://api.github.com/users/tobegit3hub/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tobegit3hub/subscriptions", "organizations_url": "https://api.github.com/users/tobegit3hub/orgs", "repos_url": "https://api.github.com/users/tobegit3hub/repos", "events_url": "https://api.github.com/users/tobegit3hub/events{/privacy}", "received_events_url": "https://api.github.com/users/tobegit3hub/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1097545817, "node_id": "MDU6TGFiZWwxMDk3NTQ1ODE3", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/comp:apis", "name": "comp:apis", "color": "0052cc", "default": false, "description": ""}, {"id": 473184161, "node_id": "MDU6TGFiZWw0NzMxODQxNjE=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:support", "name": "type:support", "color": "159b2e", "default": false, "description": ""}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-07-11T02:29:18Z", "updated_at": "2020-02-08T01:14:13Z", "closed_at": null, "author_association": "CONTRIBUTOR", "body": "\r\n### System information\r\n\r\n== cat /etc/issue ===============================================\r\nDarwin mbp-2.local 17.5.0 Darwin Kernel Version 17.5.0: Fri Apr 13 19:32:32 PDT 2018; root:xnu-4570.51.2~1/RELEASE_X86_64 x86_64\r\nMac OS X 10.13.4\r\n\r\n== are we in docker =============================================\r\nNo\r\n\r\n== compiler =====================================================\r\nApple LLVM version 9.1.0 (clang-902.0.39.1)\r\nTarget: x86_64-apple-darwin17.5.0\r\nThread model: posix\r\nInstalledDir: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin\r\n\r\n== uname -a =====================================================\r\nDarwin mbp-2.local 17.5.0 Darwin Kernel Version 17.5.0: Fri Apr 13 19:32:32 PDT 2018; root:xnu-4570.51.2~1/RELEASE_X86_64 x86_64\r\n\r\n== check pips ===================================================\r\nnumpy                              1.14.2\r\nprotobuf                           3.5.2.post1\r\ntensorflow                         1.8.0\r\ntensorflow-hub                     0.1.0\r\ntensorflow-model-analysis          0.6.0\r\ntensorflow-serving-api             1.8.0\r\ntensorflow-tensorboard             1.5.0\r\ntensorflow-transform               0.6.0\r\ntensorflowjs                       0.1.0\r\ntensorflowonspark                  1.0.0\r\n\r\n== check for virtualenv =========================================\r\nFalse\r\n\r\n== tensorflow import ============================================\r\ntf.VERSION = 1.8.0\r\ntf.GIT_VERSION = v1.8.0-0-g93bc2e2072\r\ntf.COMPILER_VERSION = v1.8.0-0-g93bc2e2072\r\nSanity check: array([1], dtype=int32)\r\n/usr/local/lib/python2.7/site-packages/h5py/__init__.py:36: FutureWarning: Conversion of the second argument of issubdtype from `float` to `np.floating` is deprecated. In future, it will be treated as `np\r\n.float64 == np.dtype(float).type`.\r\n  from ._conv import register_converters as _register_converters\r\n\r\n== env ==========================================================\r\nLD_LIBRARY_PATH is unset\r\nDYLD_LIBRARY_PATH is unset\r\n\r\n== nvidia-smi ===================================================\r\ntf_env_collect.sh: line 106: nvidia-smi: command not found\r\n\r\n== cuda libs  ===================================================\r\n\r\n### Describe the problem\r\n\r\nWe usually use `tf.app.flags` to declare the command-line parameters for TensorFlow scripts. But If we try to print the values of these parameters, it prints the default values at the first time even though we have passed the values.\r\n\r\nAnd if we actually \"get\" the values equal or more than one times, we can print the parameter values as expected.\r\n\r\n### Source code / logs\r\n\r\nHere is the example code to re-produce the issue.\r\n\r\n```\r\nimport tensorflow as tf\r\n\r\nflags = tf.app.flags\r\nflags.DEFINE_integer(\"image_width\", 224, \"Width of the image\")\r\nflags.DEFINE_integer(\"image_height\", 224, \"Height of the image\")\r\nflags.DEFINE_integer(\"channels\", 3, \"Channel of the image\")\r\n\r\nFLAGS = flags.FLAGS\r\nparameter_value_map = {}\r\nfor key in FLAGS.__flags.keys():\r\n  parameter_value_map[key] = FLAGS.__flags[key].value\r\nprint(\"Parameters: {}\".format(parameter_value_map))\r\n# Parameters: {'channels': 3, 'image_height': 224, 'image_width': 224}\r\n\r\nFLAGS.channels\r\nfor key in FLAGS.__flags.keys():\r\n    parameter_value_map[key] = FLAGS.__flags[key].value\r\nprint(\"Parameters: {}\".format(parameter_value_map))\r\n# Parameters: {'channels': 1, 'image_height': 1, 'image_width': 1}\r\n```\r\n\r\nWe can run the script with parameter `--image_width=1 --image_height=1 --channels=1`. And the results to print are different.\r\n"}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20662", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20662/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20662/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20662/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/20662", "id": 339732113, "node_id": "MDU6SXNzdWUzMzk3MzIxMTM=", "number": 20662, "title": "Compilation with Cuda 9.1 Cudnn 7.0.5, In python3, \"help(tensorflow)\" caused core dump", "user": {"login": "Heermosi", "id": 21236293, "node_id": "MDQ6VXNlcjIxMjM2Mjkz", "avatar_url": "https://avatars1.githubusercontent.com/u/21236293?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Heermosi", "html_url": "https://github.com/Heermosi", "followers_url": "https://api.github.com/users/Heermosi/followers", "following_url": "https://api.github.com/users/Heermosi/following{/other_user}", "gists_url": "https://api.github.com/users/Heermosi/gists{/gist_id}", "starred_url": "https://api.github.com/users/Heermosi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Heermosi/subscriptions", "organizations_url": "https://api.github.com/users/Heermosi/orgs", "repos_url": "https://api.github.com/users/Heermosi/repos", "events_url": "https://api.github.com/users/Heermosi/events{/privacy}", "received_events_url": "https://api.github.com/users/Heermosi/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": {"login": "asimshankar", "id": 16018, "node_id": "MDQ6VXNlcjE2MDE4", "avatar_url": "https://avatars2.githubusercontent.com/u/16018?v=4", "gravatar_id": "", "url": "https://api.github.com/users/asimshankar", "html_url": "https://github.com/asimshankar", "followers_url": "https://api.github.com/users/asimshankar/followers", "following_url": "https://api.github.com/users/asimshankar/following{/other_user}", "gists_url": "https://api.github.com/users/asimshankar/gists{/gist_id}", "starred_url": "https://api.github.com/users/asimshankar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/asimshankar/subscriptions", "organizations_url": "https://api.github.com/users/asimshankar/orgs", "repos_url": "https://api.github.com/users/asimshankar/repos", "events_url": "https://api.github.com/users/asimshankar/events{/privacy}", "received_events_url": "https://api.github.com/users/asimshankar/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "asimshankar", "id": 16018, "node_id": "MDQ6VXNlcjE2MDE4", "avatar_url": "https://avatars2.githubusercontent.com/u/16018?v=4", "gravatar_id": "", "url": "https://api.github.com/users/asimshankar", "html_url": "https://github.com/asimshankar", "followers_url": "https://api.github.com/users/asimshankar/followers", "following_url": "https://api.github.com/users/asimshankar/following{/other_user}", "gists_url": "https://api.github.com/users/asimshankar/gists{/gist_id}", "starred_url": "https://api.github.com/users/asimshankar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/asimshankar/subscriptions", "organizations_url": "https://api.github.com/users/asimshankar/orgs", "repos_url": "https://api.github.com/users/asimshankar/repos", "events_url": "https://api.github.com/users/asimshankar/events{/privacy}", "received_events_url": "https://api.github.com/users/asimshankar/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 2, "created_at": "2018-07-10T07:57:45Z", "updated_at": "2018-12-14T18:56:43Z", "closed_at": null, "author_association": "NONE", "body": "Have I written custom code: No\r\nOS Platform and Distribution: Ubuntu 16.04 Server\r\nTensorFlow installed from: source cloned from current branch\r\nTensorFlow version: 1.9.0-rc2 the active version from the master branch\r\nBazel version: 1.5.0, a most recent release\r\nCUDA/cuDNN version: 9.1/7.0.5\r\nGPU model and memory: NVIDIA GTX 1080Ti 11GB\r\nTest Environment: Python 3.5\r\nExact command to reproduce: python3 -c \"import tensorflow; help(tensorflow)\"\r\n\r\n\r\nIf this could help....\r\nCode Version: v1.9.0-rc2-205-g216887d 1.9.0-rc0\r\n\r\n\r\n\r\nHello guys, \r\nI recently cloned the bench and compiled with all (Y/n) set to y and (y/N) set to n. while the Cuda is set to yes.\r\nThe cuda environment is 9.1 and cudnn is 7.0.5.\r\nThe compilation succeeded, and I tried some subtle code to run tensorflow on gpu, it also returns.\r\nThen I tried to read some help, but when I typed \"help(tensorflow)\" python halted and crushed.\r\n\r\n> Segmentation fault (core dumped)\r\n\r\nI'm wondering why this happened? Could you lend some help?\r\n\r\n\r\nThe template data is filled up, If you require a snapshot of installed python packages, I would make a list.\r\nCurrently I have no idea what's happening, There is no error report, only a core dump....\r\n\r\nFine, after all I'll try an earlier version of tensorflow.\r\n\r\nToday I rebuilt with tensorflow 1.8.0 release source code, it works. It might imply there was something wrong with the 1.9.0 source\r\n"}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20644", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20644/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20644/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20644/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/20644", "id": 339403858, "node_id": "MDU6SXNzdWUzMzk0MDM4NTg=", "number": 20644, "title": "feature request: Robbins-Monro type learning rate decay", "user": {"login": "jeffpollock9", "id": 5081168, "node_id": "MDQ6VXNlcjUwODExNjg=", "avatar_url": "https://avatars3.githubusercontent.com/u/5081168?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jeffpollock9", "html_url": "https://github.com/jeffpollock9", "followers_url": "https://api.github.com/users/jeffpollock9/followers", "following_url": "https://api.github.com/users/jeffpollock9/following{/other_user}", "gists_url": "https://api.github.com/users/jeffpollock9/gists{/gist_id}", "starred_url": "https://api.github.com/users/jeffpollock9/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jeffpollock9/subscriptions", "organizations_url": "https://api.github.com/users/jeffpollock9/orgs", "repos_url": "https://api.github.com/users/jeffpollock9/repos", "events_url": "https://api.github.com/users/jeffpollock9/events{/privacy}", "received_events_url": "https://api.github.com/users/jeffpollock9/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 404586594, "node_id": "MDU6TGFiZWw0MDQ1ODY1OTQ=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:awaiting%20tensorflower", "name": "stat:awaiting tensorflower", "color": "f4b400", "default": false, "description": ""}, {"id": 473173272, "node_id": "MDU6TGFiZWw0NzMxNzMyNzI=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:feature", "name": "type:feature", "color": "159b2e", "default": false, "description": ""}], "state": "open", "locked": false, "assignee": {"login": "rmlarsen", "id": 16907534, "node_id": "MDQ6VXNlcjE2OTA3NTM0", "avatar_url": "https://avatars2.githubusercontent.com/u/16907534?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rmlarsen", "html_url": "https://github.com/rmlarsen", "followers_url": "https://api.github.com/users/rmlarsen/followers", "following_url": "https://api.github.com/users/rmlarsen/following{/other_user}", "gists_url": "https://api.github.com/users/rmlarsen/gists{/gist_id}", "starred_url": "https://api.github.com/users/rmlarsen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rmlarsen/subscriptions", "organizations_url": "https://api.github.com/users/rmlarsen/orgs", "repos_url": "https://api.github.com/users/rmlarsen/repos", "events_url": "https://api.github.com/users/rmlarsen/events{/privacy}", "received_events_url": "https://api.github.com/users/rmlarsen/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "rmlarsen", "id": 16907534, "node_id": "MDQ6VXNlcjE2OTA3NTM0", "avatar_url": "https://avatars2.githubusercontent.com/u/16907534?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rmlarsen", "html_url": "https://github.com/rmlarsen", "followers_url": "https://api.github.com/users/rmlarsen/followers", "following_url": "https://api.github.com/users/rmlarsen/following{/other_user}", "gists_url": "https://api.github.com/users/rmlarsen/gists{/gist_id}", "starred_url": "https://api.github.com/users/rmlarsen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rmlarsen/subscriptions", "organizations_url": "https://api.github.com/users/rmlarsen/orgs", "repos_url": "https://api.github.com/users/rmlarsen/repos", "events_url": "https://api.github.com/users/rmlarsen/events{/privacy}", "received_events_url": "https://api.github.com/users/rmlarsen/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 3, "created_at": "2018-07-09T11:04:47Z", "updated_at": "2019-01-10T00:10:44Z", "closed_at": null, "author_association": "NONE", "body": "- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**: Yes\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**: N/A\r\n- **TensorFlow installed from (source or binary)**: N/A\r\n- **TensorFlow version (use command below)**: 1.8\r\n- **Python version**: N/A\r\n- **Bazel version (if compiling from source)**: N/A\r\n- **GCC/Compiler version (if compiling from source)**: N/A\r\n- **CUDA/cuDNN version**: N/A\r\n- **GPU model and memory**: N/A\r\n- **Exact command to reproduce**: N/A\r\n\r\nI was wondering if there is any appetite for a [Robbins-Monro](https://en.wikipedia.org/wiki/Stochastic_approximation#Robbins%E2%80%93Monro_algorithm) type learning rate decay in tensorflow? The decay would be roughly (a more general solution is implemented at the bottom):\r\n\r\n```python\r\ndecayed_learning_rate = learning_rate * (global_step + 1) ^ (-decay_rate) \r\n```\r\n\r\nAs far as I can tell it is not already implemented in tensorflow, which surprised me since I think this is the learning rate decay rate required for theoretical convergence using the Adam optimizer in Section 4 of [the paper](https://arxiv.org/pdf/1412.6980.pdf), which has:\r\n\r\n```python\r\nalpha_t = alpha / sqrt(t)\r\n```\r\n\r\nwhich is the same as the first equation with `decay_rate = 0.5`, and I assume they start at `t = 1` while tensorflow starts with `global_step = 0`.\r\n\r\nI have an implementation I have been using (mostly copied from the [already implemented ones](https://github.com/tensorflow/tensorflow/blob/master/tensorflow/python/training/learning_rate_decay.py)):\r\n\r\n```python\r\ndef robbins_monro_decay(learning_rate,\r\n                        global_step,\r\n                        decay_steps,\r\n                        decay_rate,\r\n                        staircase=False,\r\n                        name=None):\r\n    \"\"\"A Robbins-Monro type decay\"\"\"\r\n\r\n    if global_step is None:\r\n        raise ValueError(\"global_step is required for robbins_monro_decay.\")\r\n\r\n    with tf.name_scope(\r\n            name,\r\n            \"RobbinsMonroDecay\",\r\n            [learning_rate, global_step, decay_steps, decay_rate]) as name:\r\n\r\n        learning_rate = tf.convert_to_tensor(\r\n            learning_rate, name=\"learning_rate\")\r\n        dtype = learning_rate.dtype\r\n        decay_steps = tf.cast(decay_steps, dtype)\r\n        decay_rate = tf.cast(decay_rate, dtype)\r\n        global_step = tf.cast(global_step, dtype)\r\n        p = global_step / decay_steps\r\n\r\n        if staircase:\r\n            p = tf.floor(p)\r\n\r\n        return tf.multiply(\r\n            learning_rate, tf.pow(p + 1, -decay_rate), name=name)\r\n```\r\n\r\nI can make a full pull request if that would be useful? I would be more than happy to add some additional documentation/code or change any of the code/naming/whatever.\r\n\r\nThanks!"}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20628", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20628/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20628/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20628/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/20628", "id": 339236392, "node_id": "MDU6SXNzdWUzMzkyMzYzOTI=", "number": 20628, "title": "prefetch_to_device doesn't overlap copy(HtoD) with computation and also may fail", "user": {"login": "sh1ng", "id": 2821871, "node_id": "MDQ6VXNlcjI4MjE4NzE=", "avatar_url": "https://avatars1.githubusercontent.com/u/2821871?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sh1ng", "html_url": "https://github.com/sh1ng", "followers_url": "https://api.github.com/users/sh1ng/followers", "following_url": "https://api.github.com/users/sh1ng/following{/other_user}", "gists_url": "https://api.github.com/users/sh1ng/gists{/gist_id}", "starred_url": "https://api.github.com/users/sh1ng/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sh1ng/subscriptions", "organizations_url": "https://api.github.com/users/sh1ng/orgs", "repos_url": "https://api.github.com/users/sh1ng/repos", "events_url": "https://api.github.com/users/sh1ng/events{/privacy}", "received_events_url": "https://api.github.com/users/sh1ng/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 473184161, "node_id": "MDU6TGFiZWw0NzMxODQxNjE=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:support", "name": "type:support", "color": "159b2e", "default": false, "description": ""}], "state": "open", "locked": false, "assignee": {"login": "rohan100jain", "id": 144114, "node_id": "MDQ6VXNlcjE0NDExNA==", "avatar_url": "https://avatars2.githubusercontent.com/u/144114?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rohan100jain", "html_url": "https://github.com/rohan100jain", "followers_url": "https://api.github.com/users/rohan100jain/followers", "following_url": "https://api.github.com/users/rohan100jain/following{/other_user}", "gists_url": "https://api.github.com/users/rohan100jain/gists{/gist_id}", "starred_url": "https://api.github.com/users/rohan100jain/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rohan100jain/subscriptions", "organizations_url": "https://api.github.com/users/rohan100jain/orgs", "repos_url": "https://api.github.com/users/rohan100jain/repos", "events_url": "https://api.github.com/users/rohan100jain/events{/privacy}", "received_events_url": "https://api.github.com/users/rohan100jain/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "rohan100jain", "id": 144114, "node_id": "MDQ6VXNlcjE0NDExNA==", "avatar_url": "https://avatars2.githubusercontent.com/u/144114?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rohan100jain", "html_url": "https://github.com/rohan100jain", "followers_url": "https://api.github.com/users/rohan100jain/followers", "following_url": "https://api.github.com/users/rohan100jain/following{/other_user}", "gists_url": "https://api.github.com/users/rohan100jain/gists{/gist_id}", "starred_url": "https://api.github.com/users/rohan100jain/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rohan100jain/subscriptions", "organizations_url": "https://api.github.com/users/rohan100jain/orgs", "repos_url": "https://api.github.com/users/rohan100jain/repos", "events_url": "https://api.github.com/users/rohan100jain/events{/privacy}", "received_events_url": "https://api.github.com/users/rohan100jain/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 7, "created_at": "2018-07-08T15:54:17Z", "updated_at": "2020-02-23T09:33:04Z", "closed_at": null, "author_association": "NONE", "body": "\r\n\r\n### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**:yes\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**:Ubuntu 16.04.4 LTS\r\n- **TensorFlow installed from (source or binary)**: pip3\r\n- **TensorFlow version (use command below)**:1.8.0\r\n- **Python version**: 3\r\n- **Bazel version (if compiling from source)**:\r\n- **GCC/Compiler version (if compiling from source)**:\r\n- **CUDA/cuDNN version**:9.0\r\n- **GPU model and memory**:GTX 1070\r\n- **Exact command to reproduce**:\r\n```\r\nimport tensorflow as tf\r\nimport numpy as np\r\n\r\nx = tf.placeholder(shape=[None, 128], dtype=np.float32)\r\ny = tf.placeholder(shape=[None], dtype=np.float32)\r\n\r\nds = tf.data.Dataset.from_tensor_slices((x, y))\r\nds = ds.repeat()\r\nds = ds.batch(1024)\r\n############################################\r\nprefetch = 1024 # if it's bigger than 512 it results in an error\r\n############################################\r\nds = ds.apply(tf.contrib.data.prefetch_to_device(\"/gpu:0\", prefetch))\r\nit = ds.make_initializable_iterator()\r\n\r\nw = tf.get_variable(\r\n                    name='w',\r\n                    initializer=tf.contrib.layers.xavier_initializer(),\r\n                    shape=[128, 1],\r\n                    dtype=tf.float32)\r\nb = tf.get_variable(\r\n                    name='b',\r\n                    initializer=tf.contrib.layers.xavier_initializer(),\r\n                    shape=[1],\r\n                    dtype=tf.float32)\r\n\r\noptimizer = tf.train.AdamOptimizer(1e-3)\r\n\r\nnext_x, next_y = it.get_next()\r\nprediction = tf.matmul(next_x, w) + b\r\ntrain = optimizer.minimize((prediction - next_y)**2)\r\n\r\nwith tf.Session() as session:\r\n    x_val = np.random.normal(size=(1024*1024, 128)).astype(np.float32)\r\n    y_val = np.random.normal(size=(1024 * 1024)).astype(np.float32)\r\n    session.run(tf.global_variables_initializer())\r\n    session.run(it.initializer, feed_dict={x: x_val, y: y_val})\r\n    for _ in range(1024):\r\n        session.run(train)\r\n```\r\n\r\n\r\nYou can collect some of this information using our environment capture script:\r\n\r\nhttps://github.com/tensorflow/tensorflow/tree/master/tools/tf_env_collect.sh\r\n\r\nYou can obtain the TensorFlow version with\r\n\r\npython -c \"import tensorflow as tf; print(tf.GIT_VERSION, tf.VERSION)\"\r\nv1.8.0-0-g93bc2e2072 1.8.0\r\n\r\n### Describe the problem\r\n\r\nIf I specify `prefetch` size to 128 I don't see any parallel data copy(HtoD) overlapping gpu computation(check screenshot and nvidia profiler report).\r\n<img width=\"1072\" alt=\"screen shot 2018-07-08 at 17 36 25\" src=\"https://user-images.githubusercontent.com/2821871/42421527-412a3124-82d7-11e8-94e7-1f9114d88cec.png\">\r\n\r\n\r\nAnd If I increase it it fails\r\n```\r\n$ python3 test.py \r\n2018-07-08 17:32:18.472300: I tensorflow/core/platform/cpu_feature_guard.cc:140] Your CPU supports instructions that this TensorFlow binary was not compiled to use: AVX2 FMA\r\n2018-07-08 17:32:18.550265: I tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:898] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero\r\n2018-07-08 17:32:18.550841: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1356] Found device 0 with properties: \r\nname: GeForce GTX 1070 major: 6 minor: 1 memoryClockRate(GHz): 1.683\r\npciBusID: 0000:01:00.0\r\ntotalMemory: 7.93GiB freeMemory: 7.83GiB\r\n2018-07-08 17:32:18.550852: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1435] Adding visible gpu devices: 0\r\n2018-07-08 17:32:18.711860: I tensorflow/core/common_runtime/gpu/gpu_device.cc:923] Device interconnect StreamExecutor with strength 1 edge matrix:\r\n2018-07-08 17:32:18.711888: I tensorflow/core/common_runtime/gpu/gpu_device.cc:929]      0 \r\n2018-07-08 17:32:18.711907: I tensorflow/core/common_runtime/gpu/gpu_device.cc:942] 0:   N \r\n2018-07-08 17:32:18.712052: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1053] Created TensorFlow device (/job:localhost/replica:0/task:0/device:GPU:0 with 7568 MB memory) -> physical GPU (device: 0, name: GeForce GTX 1070, pci bus id: 0000:01:00.0, compute capability: 6.1)\r\n2018-07-08 17:32:25.310286: E tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:650] failed to record completion event; therefore, failed to create inter-stream dependency\r\n2018-07-08 17:32:25.310311: I tensorflow/stream_executor/stream.cc:4737] stream 0x1448efe0 did not memcpy host-to-device; source: 0x7f8feae97000\r\n2018-07-08 17:32:25.310316: E tensorflow/stream_executor/stream.cc:309] Error recording event in stream: error recording CUDA event on stream 0x1448f080: CUDA_ERROR_DEINITIALIZED; not marking stream as bad, as the Event object may be at fault. Monitor for further errors.\r\n2018-07-08 17:32:25.310323: E tensorflow/stream_executor/cuda/cuda_event.cc:49] Error polling for event status: failed to query event: CUDA_ERROR_DEINITIALIZED\r\n2018-07-08 17:32:25.310328: F tensorflow/core/common_runtime/gpu/gpu_event_mgr.cc:208] Unexpected Event status: 1\r\nAborted (core dumped)\r\n```\r\n\r\nIt'd be nice to have some canonical examples how to use it.\r\n\r\n\r\n[prefetch_on_device.nvvp.zip](https://github.com/tensorflow/tensorflow/files/2173870/prefetch_on_device.nvvp.zip)\r\n"}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20624", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20624/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20624/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20624/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/20624", "id": 339224159, "node_id": "MDU6SXNzdWUzMzkyMjQxNTk=", "number": 20624, "title": "Makefile: build_all_ios.sh - No rule to make target 'distclean'.  Stop.", "user": {"login": "JaviBonilla", "id": 20316179, "node_id": "MDQ6VXNlcjIwMzE2MTc5", "avatar_url": "https://avatars1.githubusercontent.com/u/20316179?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JaviBonilla", "html_url": "https://github.com/JaviBonilla", "followers_url": "https://api.github.com/users/JaviBonilla/followers", "following_url": "https://api.github.com/users/JaviBonilla/following{/other_user}", "gists_url": "https://api.github.com/users/JaviBonilla/gists{/gist_id}", "starred_url": "https://api.github.com/users/JaviBonilla/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JaviBonilla/subscriptions", "organizations_url": "https://api.github.com/users/JaviBonilla/orgs", "repos_url": "https://api.github.com/users/JaviBonilla/repos", "events_url": "https://api.github.com/users/JaviBonilla/events{/privacy}", "received_events_url": "https://api.github.com/users/JaviBonilla/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": {"login": "bignamehyp", "id": 3474655, "node_id": "MDQ6VXNlcjM0NzQ2NTU=", "avatar_url": "https://avatars2.githubusercontent.com/u/3474655?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bignamehyp", "html_url": "https://github.com/bignamehyp", "followers_url": "https://api.github.com/users/bignamehyp/followers", "following_url": "https://api.github.com/users/bignamehyp/following{/other_user}", "gists_url": "https://api.github.com/users/bignamehyp/gists{/gist_id}", "starred_url": "https://api.github.com/users/bignamehyp/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bignamehyp/subscriptions", "organizations_url": "https://api.github.com/users/bignamehyp/orgs", "repos_url": "https://api.github.com/users/bignamehyp/repos", "events_url": "https://api.github.com/users/bignamehyp/events{/privacy}", "received_events_url": "https://api.github.com/users/bignamehyp/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "bignamehyp", "id": 3474655, "node_id": "MDQ6VXNlcjM0NzQ2NTU=", "avatar_url": "https://avatars2.githubusercontent.com/u/3474655?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bignamehyp", "html_url": "https://github.com/bignamehyp", "followers_url": "https://api.github.com/users/bignamehyp/followers", "following_url": "https://api.github.com/users/bignamehyp/following{/other_user}", "gists_url": "https://api.github.com/users/bignamehyp/gists{/gist_id}", "starred_url": "https://api.github.com/users/bignamehyp/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bignamehyp/subscriptions", "organizations_url": "https://api.github.com/users/bignamehyp/orgs", "repos_url": "https://api.github.com/users/bignamehyp/repos", "events_url": "https://api.github.com/users/bignamehyp/events{/privacy}", "received_events_url": "https://api.github.com/users/bignamehyp/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 17, "created_at": "2018-07-08T13:01:27Z", "updated_at": "2018-12-18T18:49:14Z", "closed_at": null, "author_association": "NONE", "body": "### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**: No\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**: macOS High Sierra 10.13.5\r\n- **TensorFlow installed from (source or binary)**: source\r\n- **TensorFlow version (use command below)**: master\r\n- **Python version**:  -\r\n- **Bazel version (if compiling from source)**: -\r\n- **GCC/Compiler version (if compiling from source)**: -\r\n- **CUDA/cuDNN version**: -\r\n- **GPU model and memory**: -\r\n- **Exact command to reproduce**:  just execute ./build_all_ios.sh\r\n\r\nHello, \r\n\r\nwhen building TensorFlow for iOS using the Makefile (./build_all_ios.sh), I am getting the following error:\r\n\r\n................\r\nrm -f gogo/cpp_no_group/datasets/google_message1/proto2/.deps/cpp_no_group_benchmark-benchmark_message1_proto2.pb.Po\r\nrm -f gogo/cpp_no_group/datasets/google_message1/proto3/.deps/cpp_no_group_benchmark-benchmark_message1_proto3.pb.Po\r\nrm -f gogo/cpp_no_group/datasets/google_message2/.deps/cpp_no_group_benchmark-benchmark_message2.pb.Po\r\nrm -f gogo/cpp_no_group/datasets/google_message3/.deps/cpp_no_group_benchmark-benchmark_message3.pb.Po\r\nrm -f gogo/cpp_no_group/datasets/google_message3/.deps/cpp_no_group_benchmark-benchmark_message3_1.pb.Po\r\nrm -f gogo/cpp_no_group/datasets/google_message3/.deps/cpp_no_group_benchmark-benchmark_message3_2.pb.Po\r\nrm -f gogo/cpp_no_group/datasets/google_message3/.deps/cpp_no_group_benchmark-benchmark_message3_3.pb.Po\r\nrm -f gogo/cpp_no_group/datasets/google_message3/.deps/cpp_no_group_benchmark-benchmark_message3_4.pb.Po\r\nrm -f gogo/cpp_no_group/datasets/google_message3/.deps/cpp_no_group_benchmark-benchmark_message3_5.pb.Po\r\nrm -f gogo/cpp_no_group/datasets/google_message3/.deps/cpp_no_group_benchmark-benchmark_message3_6.pb.Po\r\nrm -f gogo/cpp_no_group/datasets/google_message3/.deps/cpp_no_group_benchmark-benchmark_message3_7.pb.Po\r\nrm -f gogo/cpp_no_group/datasets/google_message3/.deps/cpp_no_group_benchmark-benchmark_message3_8.pb.Po\r\nrm -f gogo/cpp_no_group/datasets/google_message4/.deps/cpp_no_group_benchmark-benchmark_message4.pb.Po\r\nrm -f gogo/cpp_no_group/datasets/google_message4/.deps/cpp_no_group_benchmark-benchmark_message4_1.pb.Po\r\nrm -f gogo/cpp_no_group/datasets/google_message4/.deps/cpp_no_group_benchmark-benchmark_message4_2.pb.Po\r\nrm -f gogo/cpp_no_group/datasets/google_message4/.deps/cpp_no_group_benchmark-benchmark_message4_3.pb.Po\r\nrm -f python/.deps/libbenchmark_messages_la-python_benchmark_messages.Plo\r\nrm -f util/.deps/gogo_data_scrubber-gogo_data_scrubber.Po\r\nrm -f util/.deps/protoc_gen_gogoproto-protoc-gen-gogoproto.Po\r\nrm -f Makefile\r\nMaking distclean in third_party/googletest\r\nmake[1]: *** No rule to make target `distclean'.  Stop.\r\nmake: *** [distclean-recursive] Error 1"}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20608", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20608/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20608/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20608/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/20608", "id": 339110160, "node_id": "MDU6SXNzdWUzMzkxMTAxNjA=", "number": 20608, "title": "Allow restoring subgraph from checkpoint for weight sharing between different models", "user": {"login": "tremblerz", "id": 10557215, "node_id": "MDQ6VXNlcjEwNTU3MjE1", "avatar_url": "https://avatars1.githubusercontent.com/u/10557215?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tremblerz", "html_url": "https://github.com/tremblerz", "followers_url": "https://api.github.com/users/tremblerz/followers", "following_url": "https://api.github.com/users/tremblerz/following{/other_user}", "gists_url": "https://api.github.com/users/tremblerz/gists{/gist_id}", "starred_url": "https://api.github.com/users/tremblerz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tremblerz/subscriptions", "organizations_url": "https://api.github.com/users/tremblerz/orgs", "repos_url": "https://api.github.com/users/tremblerz/repos", "events_url": "https://api.github.com/users/tremblerz/events{/privacy}", "received_events_url": "https://api.github.com/users/tremblerz/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 473173272, "node_id": "MDU6TGFiZWw0NzMxNzMyNzI=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:feature", "name": "type:feature", "color": "159b2e", "default": false, "description": ""}], "state": "open", "locked": false, "assignee": {"login": "allenlavoie", "id": 3731025, "node_id": "MDQ6VXNlcjM3MzEwMjU=", "avatar_url": "https://avatars3.githubusercontent.com/u/3731025?v=4", "gravatar_id": "", "url": "https://api.github.com/users/allenlavoie", "html_url": "https://github.com/allenlavoie", "followers_url": "https://api.github.com/users/allenlavoie/followers", "following_url": "https://api.github.com/users/allenlavoie/following{/other_user}", "gists_url": "https://api.github.com/users/allenlavoie/gists{/gist_id}", "starred_url": "https://api.github.com/users/allenlavoie/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/allenlavoie/subscriptions", "organizations_url": "https://api.github.com/users/allenlavoie/orgs", "repos_url": "https://api.github.com/users/allenlavoie/repos", "events_url": "https://api.github.com/users/allenlavoie/events{/privacy}", "received_events_url": "https://api.github.com/users/allenlavoie/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "allenlavoie", "id": 3731025, "node_id": "MDQ6VXNlcjM3MzEwMjU=", "avatar_url": "https://avatars3.githubusercontent.com/u/3731025?v=4", "gravatar_id": "", "url": "https://api.github.com/users/allenlavoie", "html_url": "https://github.com/allenlavoie", "followers_url": "https://api.github.com/users/allenlavoie/followers", "following_url": "https://api.github.com/users/allenlavoie/following{/other_user}", "gists_url": "https://api.github.com/users/allenlavoie/gists{/gist_id}", "starred_url": "https://api.github.com/users/allenlavoie/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/allenlavoie/subscriptions", "organizations_url": "https://api.github.com/users/allenlavoie/orgs", "repos_url": "https://api.github.com/users/allenlavoie/repos", "events_url": "https://api.github.com/users/allenlavoie/events{/privacy}", "received_events_url": "https://api.github.com/users/allenlavoie/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2018-07-07T02:26:56Z", "updated_at": "2018-12-07T18:51:34Z", "closed_at": null, "author_association": "NONE", "body": "------------------------\r\n\r\n### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**: No\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**: MacOS Sierra\r\n- **TensorFlow installed from (source or binary)**: binary\r\n- **TensorFlow version (use command below)**: v1.7.0-3-g024aecf414 1.7.0\r\n- **Python version**: 3\r\n- **Bazel version (if compiling from source)**: NA\r\n- **GCC/Compiler version (if compiling from source)**: NA\r\n- **CUDA/cuDNN version**: NA\r\n- **GPU model and memory**: NA\r\n- **Exact command to reproduce**: Read the summary below\r\n\r\n### Describe the problem\r\nThere are many scenarios where we want to do parameter sharing between two different models (let's call `A` and `B`). If `A` is trained and checkpointed, we can either load all of the variables of `A` or selectively load variables from A's checkpoint by passing a list `L` containing all shared params. But the second way is not helpful if we don't know `L` beforehand. Can we have a way by which we can share variables just based on the common subset between two graphs.\r\nPS - I am assuming that parameters of `A` and `B` follow same naming convention in scopes.\r\n\r\n### Source code / logs\r\nHere is what I was trying to do using metagraph but this also doesn't seem to work. Please note that I deliberately do `tf.reset_default_graph()` as objective is to share parameter with a checkpointed model. Sorry lots of redundant lines in the code.\r\n```\r\nimport tensorflow as tf\r\nmnist = tf.contrib.learn.datasets.load_dataset(\"mnist\")\r\n\r\ndef model_1(features, labels):\r\n    with tf.variable_scope(\"input\", reuse=tf.AUTO_REUSE):\r\n        out = tf.reshape(features, [-1, 28, 28, 1])\r\n    with tf.variable_scope(\"conv_1_5x5\", reuse=tf.AUTO_REUSE):\r\n        out = tf.layers.conv2d(\r\n           inputs=out,\r\n           filters=32,\r\n           kernel_size=[5, 5],\r\n           padding=\"same\",\r\n           activation=tf.nn.relu)\r\n    with tf.variable_scope(\"conv_2_3x3\", reuse=tf.AUTO_REUSE):\r\n        out = tf.layers.conv2d(\r\n           inputs=out,\r\n           filters=32,\r\n           kernel_size=[3, 3],\r\n           padding=\"same\",\r\n           activation=tf.nn.relu)\r\n    with tf.variable_scope(\"pool_3_2x2\", reuse=tf.AUTO_REUSE):\r\n        out = tf.layers.max_pooling2d(inputs=out, pool_size=[2, 2], strides=2)\r\n    with tf.variable_scope(\"conv_4_3x3\", reuse=tf.AUTO_REUSE):\r\n        out = tf.layers.conv2d(\r\n           inputs=out,\r\n           filters=64,\r\n           kernel_size=[3, 3],\r\n           padding=\"same\",\r\n           activation=tf.nn.relu)\r\n    with tf.variable_scope(\"dense\", reuse=tf.AUTO_REUSE):\r\n        flattened = tf.reshape(out, [-1, 14 * 14 * 64])\r\n        logits = tf.layers.dense(flattened, units=10, activation=tf.nn.relu)\r\n    softmax = tf.nn.softmax(logits, name=\"softmax\")\r\n\r\n    loss = tf.losses.sparse_softmax_cross_entropy(labels=labels, logits=logits)\r\n    optimizer = tf.train.GradientDescentOptimizer(learning_rate=0.001)\r\n    train_op = optimizer.minimize(loss=loss, global_step=tf.train.get_or_create_global_step())\r\n    return loss, train_op\r\n\r\ndef model_2(features, labels, old_graph):\r\n    with old_graph.as_default():\r\n        with tf.variable_scope(\"input\", reuse=tf.AUTO_REUSE):\r\n            out = tf.reshape(features, [-1, 28, 28, 1])\r\n        with tf.variable_scope(\"conv_1_5x5\", reuse=tf.AUTO_REUSE):\r\n            out = tf.layers.conv2d(\r\n               inputs=out,\r\n               filters=32,\r\n               kernel_size=[5, 5],\r\n               padding=\"same\",\r\n               activation=tf.nn.relu)\r\n        with tf.variable_scope(\"conv_2_3x3\", reuse=tf.AUTO_REUSE):\r\n            out = tf.layers.conv2d(\r\n               inputs=out,\r\n               filters=32,\r\n               kernel_size=[3, 3],\r\n               padding=\"same\",\r\n               activation=tf.nn.relu)\r\n        with tf.variable_scope(\"pool_3_2x2\", reuse=tf.AUTO_REUSE):\r\n            out = tf.layers.max_pooling2d(inputs=out, pool_size=[2, 2], strides=2)\r\n        # This is the place where model 1 and 2 are actually different\r\n        with tf.variable_scope(\"conv_4_5x5\", reuse=tf.AUTO_REUSE):\r\n            out = tf.layers.conv2d(\r\n               inputs=out,\r\n               filters=64,\r\n               kernel_size=[5, 5],\r\n               padding=\"same\",\r\n               activation=tf.nn.relu)\r\n        with tf.variable_scope(\"dense\", reuse=tf.AUTO_REUSE):\r\n            flattened = tf.reshape(out, [-1, 14 * 14 * 64])\r\n            logits = tf.layers.dense(flattened, units=10, activation=tf.nn.relu)\r\n        softmax = tf.nn.softmax(logits, name=\"softmax\")\r\n\r\n    loss = tf.losses.sparse_softmax_cross_entropy(labels=labels, logits=logits)\r\n    optimizer = tf.train.GradientDescentOptimizer(learning_rate=0.001)\r\n    train_op = optimizer.minimize(loss=loss, global_step=tf.train.get_or_create_global_step())\r\n    return loss, train_op\r\n\r\nfeatures = tf.placeholder(shape=[None, 784], dtype=tf.float32, name=\"features\")\r\nlabels = tf.placeholder(shape=[None], dtype=tf.int32, name=\"labels\")\r\n\r\nsteps = 0\r\nloss_op, train_op = model_1(features, labels)\r\n\r\nwith tf.train.MonitoredTrainingSession(checkpoint_dir=\"./model_1\") as sess:\r\n    while steps <= 20:\r\n        features_, labels_ = mnist.train.next_batch(100)\r\n        loss, _ = sess.run([loss_op, train_op], feed_dict={\r\n            \"features:0\": features_, \"labels:0\": labels_})\r\n        if steps % 5 == 0:\r\n            print(\"loss at step {} = {}\".format(steps, loss))\r\n        steps += 1\r\n\r\ntf.reset_default_graph()\r\ntf.train.import_meta_graph(\"./model_1/model.ckpt-\"+str(steps)+\".meta\")\r\nold_graph = tf.get_default_graph()\r\n\r\nsteps = 0\r\nloss_op, train_op = model_2(features, labels, old_graph)\r\n\r\nwith tf.train.MonitoredTrainingSession(checkpoint_dir=\"./model_2\") as sess:\r\n    while steps <= 20:\r\n        features_, labels_ = mnist.train.next_batch(100)\r\n        loss, _ = sess.run([loss_op, train_op], feed_dict={\r\n            \"features:0\": features_, \"labels:0\": labels_})\r\n        if steps % 5 == 0:\r\n            print(\"loss at step {} = {}\".format(steps, loss))\r\n        steps += 1\r\n\r\n"}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20606", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20606/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20606/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20606/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/20606", "id": 339106614, "node_id": "MDU6SXNzdWUzMzkxMDY2MTQ=", "number": 20606, "title": "[bug] events.out.tfevents files do not get closed.", "user": {"login": "renxida", "id": 10362952, "node_id": "MDQ6VXNlcjEwMzYyOTUy", "avatar_url": "https://avatars3.githubusercontent.com/u/10362952?v=4", "gravatar_id": "", "url": "https://api.github.com/users/renxida", "html_url": "https://github.com/renxida", "followers_url": "https://api.github.com/users/renxida/followers", "following_url": "https://api.github.com/users/renxida/following{/other_user}", "gists_url": "https://api.github.com/users/renxida/gists{/gist_id}", "starred_url": "https://api.github.com/users/renxida/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/renxida/subscriptions", "organizations_url": "https://api.github.com/users/renxida/orgs", "repos_url": "https://api.github.com/users/renxida/repos", "events_url": "https://api.github.com/users/renxida/events{/privacy}", "received_events_url": "https://api.github.com/users/renxida/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1097545817, "node_id": "MDU6TGFiZWwxMDk3NTQ1ODE3", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/comp:apis", "name": "comp:apis", "color": "0052cc", "default": false, "description": ""}, {"id": 473184161, "node_id": "MDU6TGFiZWw0NzMxODQxNjE=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:support", "name": "type:support", "color": "159b2e", "default": false, "description": ""}], "state": "open", "locked": false, "assignee": {"login": "nfelt", "id": 710113, "node_id": "MDQ6VXNlcjcxMDExMw==", "avatar_url": "https://avatars0.githubusercontent.com/u/710113?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nfelt", "html_url": "https://github.com/nfelt", "followers_url": "https://api.github.com/users/nfelt/followers", "following_url": "https://api.github.com/users/nfelt/following{/other_user}", "gists_url": "https://api.github.com/users/nfelt/gists{/gist_id}", "starred_url": "https://api.github.com/users/nfelt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nfelt/subscriptions", "organizations_url": "https://api.github.com/users/nfelt/orgs", "repos_url": "https://api.github.com/users/nfelt/repos", "events_url": "https://api.github.com/users/nfelt/events{/privacy}", "received_events_url": "https://api.github.com/users/nfelt/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "nfelt", "id": 710113, "node_id": "MDQ6VXNlcjcxMDExMw==", "avatar_url": "https://avatars0.githubusercontent.com/u/710113?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nfelt", "html_url": "https://github.com/nfelt", "followers_url": "https://api.github.com/users/nfelt/followers", "following_url": "https://api.github.com/users/nfelt/following{/other_user}", "gists_url": "https://api.github.com/users/nfelt/gists{/gist_id}", "starred_url": "https://api.github.com/users/nfelt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nfelt/subscriptions", "organizations_url": "https://api.github.com/users/nfelt/orgs", "repos_url": "https://api.github.com/users/nfelt/repos", "events_url": "https://api.github.com/users/nfelt/events{/privacy}", "received_events_url": "https://api.github.com/users/nfelt/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 4, "created_at": "2018-07-07T01:25:31Z", "updated_at": "2019-01-23T22:27:48Z", "closed_at": null, "author_association": "NONE", "body": "Running a python script that trains and tests MANY models (tf.Estimator) failes with\r\n```\r\ntf.estimator Error: ResourceExhausted: too many open files (TF keeps events.out.tfevents files open)\r\n```\r\n\r\nStackoverflow question & proposed solution (by another person): https://stackoverflow.com/questions/50956551/tf-estimator-error-resourceexhausted-too-many-open-files-tf-keeps-events-out\r\n\r\n### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**: No\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**: Ubuntu 1604\r\n- **TensorFlow installed from (source or binary)**: Source\r\n- **TensorFlow version (use command below)**: \r\n== cat /etc/issue ===============================================\r\nLinux gpubox1 4.4.0-128-generic #154-Ubuntu SMP Fri May 25 14:15:18 UTC 2018 x86_64 x86_64 x86_64 GNU/Linux\r\nVERSION=\"16.04.4 LTS (Xenial Xerus)\"\r\nVERSION_ID=\"16.04\"\r\nVERSION_CODENAME=xenial\r\n\r\n== are we in docker =============================================\r\nNo\r\n\r\n== compiler =====================================================\r\nc++ (Ubuntu 5.4.0-6ubuntu1~16.04.9) 5.4.0 20160609\r\nCopyright (C) 2015 Free Software Foundation, Inc.\r\nThis is free software; see the source for copying conditions.  There is NO\r\nwarranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\r\n\r\n\r\n== uname -a =====================================================\r\nLinux gpubox1 4.4.0-128-generic #154-Ubuntu SMP Fri May 25 14:15:18 UTC 2018 x86_64 x86_64 x86_64 GNU/Linux\r\n\r\n== check pips ===================================================\r\nnumpy                              1.14.3   \r\nnumpydoc                           0.8.0    \r\nprotobuf                           3.6.0    \r\ntensorflow                         1.9.0rc0 \r\n\r\n== check for virtualenv =========================================\r\nFalse\r\n\r\n== tensorflow import ============================================\r\ntf.VERSION = 1.9.0-rc0\r\ntf.GIT_VERSION = b'v1.8.0-3463-g39ea5a7'\r\ntf.COMPILER_VERSION = b'v1.8.0-3463-g39ea5a7'\r\nSanity check: array([1], dtype=int32)\r\n\r\n== env ==========================================================\r\nLD_LIBRARY_PATH is unset\r\nDYLD_LIBRARY_PATH is unset\r\n\r\n== nvidia-smi ===================================================\r\nFri Jul  6 21:20:55 2018       \r\n+-----------------------------------------------------------------------------+\r\n| NVIDIA-SMI 396.26                 Driver Version: 396.26                    |\r\n|-------------------------------+----------------------+----------------------+\r\n| GPU  Name        Persistence-M| Bus-Id        Disp.A | Volatile Uncorr. ECC |\r\n| Fan  Temp  Perf  Pwr:Usage/Cap|         Memory-Usage | GPU-Util  Compute M. |\r\n|===============================+======================+======================|\r\n|   0  GeForce GTX 108...  Off  | 00000000:01:00.0  On |                  N/A |\r\n| 42%   61C    P2    63W / 250W |  10664MiB / 11175MiB |     24%      Default |\r\n+-------------------------------+----------------------+----------------------+\r\n|   1  GeForce GTX 108...  Off  | 00000000:02:00.0 Off |                  N/A |\r\n| 29%   44C    P2    56W / 250W |  10631MiB / 11178MiB |      0%      Default |\r\n+-------------------------------+----------------------+----------------------+\r\n                                                                               \r\n+-----------------------------------------------------------------------------+\r\n| Processes:                                                       GPU Memory |\r\n|  GPU       PID   Type   Process name                             Usage      |\r\n|=============================================================================|\r\n|    0      1092      G   /usr/lib/xorg/Xorg                            89MiB |\r\n|    0     19389      C   python                                     10563MiB |\r\n|    1     19389      C   python                                     10619MiB |\r\n+-----------------------------------------------------------------------------+\r\n\r\n== cuda libs  ===================================================\r\n/usr/local/cuda-9.0/doc/man/man7/libcudart.7\r\n/usr/local/cuda-9.0/doc/man/man7/libcudart.so.7\r\n/usr/local/cuda-9.0/targets/x86_64-linux/lib/libcudart.so.9.0.176\r\n/usr/local/cuda-9.0/targets/x86_64-linux/lib/libcudart_static.a\r\n- **Bazel ver:** NA\r\n- **CUDA/cuDNN**: 9.0 / 7.1\r\n- **GPU**: NVIDIA 1080 Ti\r\n\r\n- **Exact command to reproduce**: N/A; Running  `tf.Estimator.train ` for some 1000 different estimators reproduces the problem.\r\n\r\n### Describe the problem\r\nEach tensorflow run does not close events.out.tfevent. Instead, they remain open, and eventually stops the process because there are too many open file handles.\r\n\r\n### Source code / logs\r\nI'll do that on request\r\n\r\n"}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20600", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20600/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20600/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20600/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/20600", "id": 339067305, "node_id": "MDU6SXNzdWUzMzkwNjczMDU=", "number": 20600, "title": "Tensorflow 1.8 graph destructor hanging indefinitely", "user": {"login": "alanhdu", "id": 1914111, "node_id": "MDQ6VXNlcjE5MTQxMTE=", "avatar_url": "https://avatars1.githubusercontent.com/u/1914111?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alanhdu", "html_url": "https://github.com/alanhdu", "followers_url": "https://api.github.com/users/alanhdu/followers", "following_url": "https://api.github.com/users/alanhdu/following{/other_user}", "gists_url": "https://api.github.com/users/alanhdu/gists{/gist_id}", "starred_url": "https://api.github.com/users/alanhdu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alanhdu/subscriptions", "organizations_url": "https://api.github.com/users/alanhdu/orgs", "repos_url": "https://api.github.com/users/alanhdu/repos", "events_url": "https://api.github.com/users/alanhdu/events{/privacy}", "received_events_url": "https://api.github.com/users/alanhdu/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1097543484, "node_id": "MDU6TGFiZWwxMDk3NTQzNDg0", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/comp:runtime", "name": "comp:runtime", "color": "0052cc", "default": false, "description": "c++ runtime, performance issues (cpu)"}, {"id": 473184161, "node_id": "MDU6TGFiZWw0NzMxODQxNjE=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:support", "name": "type:support", "color": "159b2e", "default": false, "description": ""}], "state": "open", "locked": false, "assignee": {"login": "tatatodd", "id": 5453737, "node_id": "MDQ6VXNlcjU0NTM3Mzc=", "avatar_url": "https://avatars3.githubusercontent.com/u/5453737?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tatatodd", "html_url": "https://github.com/tatatodd", "followers_url": "https://api.github.com/users/tatatodd/followers", "following_url": "https://api.github.com/users/tatatodd/following{/other_user}", "gists_url": "https://api.github.com/users/tatatodd/gists{/gist_id}", "starred_url": "https://api.github.com/users/tatatodd/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tatatodd/subscriptions", "organizations_url": "https://api.github.com/users/tatatodd/orgs", "repos_url": "https://api.github.com/users/tatatodd/repos", "events_url": "https://api.github.com/users/tatatodd/events{/privacy}", "received_events_url": "https://api.github.com/users/tatatodd/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "tatatodd", "id": 5453737, "node_id": "MDQ6VXNlcjU0NTM3Mzc=", "avatar_url": "https://avatars3.githubusercontent.com/u/5453737?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tatatodd", "html_url": "https://github.com/tatatodd", "followers_url": "https://api.github.com/users/tatatodd/followers", "following_url": "https://api.github.com/users/tatatodd/following{/other_user}", "gists_url": "https://api.github.com/users/tatatodd/gists{/gist_id}", "starred_url": "https://api.github.com/users/tatatodd/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tatatodd/subscriptions", "organizations_url": "https://api.github.com/users/tatatodd/orgs", "repos_url": "https://api.github.com/users/tatatodd/repos", "events_url": "https://api.github.com/users/tatatodd/events{/privacy}", "received_events_url": "https://api.github.com/users/tatatodd/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 5, "created_at": "2018-07-06T20:48:23Z", "updated_at": "2019-01-23T22:26:23Z", "closed_at": null, "author_association": "CONTRIBUTOR", "body": "I'm sorry to dump this on y'all on a weekend, but we're having strange problems with our CI when trying to upgrade to Tensorflow 1.8.\r\n\r\n### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**:\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**: Debian Stretch\r\n- **TensorFlow installed from (source or binary)**: Binary (CPU wheel)\r\n- **TensorFlow version (use command below)**: `v1.8.0-0-g93bc2e2072`\r\n- **Python version**: `3.6.6`\r\n- **Bazel version**: n/a\r\n- **CUDA/cuDNN version**: n/a\r\n- **GPU model and memory** n/a\r\n\r\n**Exact command to reproduce**: ... it's complicated\r\n\r\n### Describe the problem\r\nWhen we run our test suite, it will intermittently hang (we've let it run overnight without any progress). We've traced this problem to TensorFlow 1.8 -- when we set `TF_C_API_GRAPH_CONSTRUCTION=0`, our test suite passes without problems and when we use Tensorflow 1.6 and 1.7, we don't seem to have any problems.\r\n\r\nUnfortunately, I have not been able to create a minified, reproducible test case (it's also frustrating because I can't replicate this locally, despite using the same Docker image that our CI build is using). I have, however, been able to use [Pyflame](https://github.com/uber/pyflame) and gdb to grab stack traces (see https://gist.github.com/alanhdu/9ce45f9061a8e48ba2b0728489cb4ee7).\r\n\r\nI think the relevant lines are:\r\n```\r\n/usr/local/lib/python3.6/site-packages/tensorflow/python/framework/c_api_util.py:__del__:50\r\n/usr/local/lib/python3.6/inspect.py:getmodule:732\r\n/usr/local/lib/python3.6/inspect.py:findsource:780\r\n/usr/local/lib/python3.6/inspect.py:getframeinfo:1445\r\n/usr/local/lib/python3.6/inspect.py:getouterframes:1471\r\n/usr/local/lib/python3.6/inspect.py:stack:1494\r\n/usr/local/lib/python3.6/site-packages/coverage/debug.py:short_stack:143\r\n/usr/local/lib/python3.6/site-packages/coverage/collector.py:__init__:107\r\n/usr/local/lib/python3.6/site-packages/coverage/control.py:_init:266\r\n/usr/local/lib/python3.6/site-packages/coverage/control.py:load:675\r\n/usr/local/lib/python3.6/site-packages/pytest_cov/embed.py:init:67\r\n/usr/local/lib/python3.6/site-packages/pytest_cov/embed.py:multiprocessing_start:23\r\n/usr/local/lib/python3.6/multiprocessing/util.py:_run_after_forkers:132\r\n/usr/local/lib/python3.6/multiprocessing/process.py:_bootstrap:251\r\n/usr/local/lib/python3.6/multiprocessing/popen_fork.py:_launch:73\r\n/usr/local/lib/python3.6/multiprocessing/popen_fork.py:__init__:19\r\n/usr/local/lib/python3.6/multiprocessing/context.py:_Popen:277\r\n/usr/local/lib/python3.6/multiprocessing/process.py:start:105\r\n/usr/local/lib/python3.6/multiprocessing/pool.py:_repopulate_pool:239\r\n/usr/local/lib/python3.6/multiprocessing/pool.py:__init__:174\r\n/usr/local/lib/python3.6/multiprocessing/context.py:Pool:119\r\n```\r\n\r\nwhich seems to be hanging at\r\n\r\n```\r\n#0  __pthread_cond_destroy (cond=0x56312aa153d0) at pthread_cond_destroy.c:76\r\n#1  0x00007f6eef4deebb in tensorflow::thread::ThreadPool::Impl::~Impl() () from /usr/local/lib/python3.6/site-packages/tensorflow/python/../libtensorflow_framework.so\r\n#2  0x00007f6eef4df89a in tensorflow::thread::ThreadPool::~ThreadPool() () from /usr/local/lib/python3.6/site-packages/tensorflow/python/../libtensorflow_framework.so\r\n#3  0x00007f6eef87d665 in tensorflow::SingleThreadedCpuDevice::~SingleThreadedCpuDevice() ()\r\n   from /usr/local/lib/python3.6/site-packages/tensorflow/python/../libtensorflow_framework.so\r\n#4  0x00007f6eef87d85a in tensorflow::GraphRunner::~GraphRunner() () from /usr/local/lib/python3.6/site-packages/tensorflow/python/../libtensorflow_framework.so\r\n#5  0x00007f6ef13e3aef in TF_DeleteGraph () from /usr/local/lib/python3.6/site-packages/tensorflow/python/_pywrap_tensorflow_internal.so\r\n#6  0x00007f6ef1038784 in _wrap_TF_DeleteGraph () from /usr/local/lib/python3.6/site-packages/tensorflow/python/_pywrap_tensorflow_internal.so\r\n#7  0x00007f6f4a6c78e9 in _PyCFunction_FastCallDict (func_obj=0x7f6ef4de69d8, args=0x7f6e84006730, nargs=<optimized out>, kwargs=kwargs@entry=0x0)\r\nat Objects/methodobject.c:234\r\n```\r\n\r\nDo y'all happen to know what could have caused this error? Even tips on how to debug this would be super helpful.\r\n"}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20585", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20585/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20585/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20585/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/20585", "id": 338804398, "node_id": "MDU6SXNzdWUzMzg4MDQzOTg=", "number": 20585, "title": "non-chief workers hang in training distributed seq2seq model when time-major is true", "user": {"login": "junshi15", "id": 12075848, "node_id": "MDQ6VXNlcjEyMDc1ODQ4", "avatar_url": "https://avatars3.githubusercontent.com/u/12075848?v=4", "gravatar_id": "", "url": "https://api.github.com/users/junshi15", "html_url": "https://github.com/junshi15", "followers_url": "https://api.github.com/users/junshi15/followers", "following_url": "https://api.github.com/users/junshi15/following{/other_user}", "gists_url": "https://api.github.com/users/junshi15/gists{/gist_id}", "starred_url": "https://api.github.com/users/junshi15/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/junshi15/subscriptions", "organizations_url": "https://api.github.com/users/junshi15/orgs", "repos_url": "https://api.github.com/users/junshi15/repos", "events_url": "https://api.github.com/users/junshi15/events{/privacy}", "received_events_url": "https://api.github.com/users/junshi15/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1097543484, "node_id": "MDU6TGFiZWwxMDk3NTQzNDg0", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/comp:runtime", "name": "comp:runtime", "color": "0052cc", "default": false, "description": "c++ runtime, performance issues (cpu)"}, {"id": 473172988, "node_id": "MDU6TGFiZWw0NzMxNzI5ODg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:bug", "name": "type:bug", "color": "159b2e", "default": false, "description": ""}], "state": "open", "locked": false, "assignee": {"login": "ebrevdo", "id": 1794715, "node_id": "MDQ6VXNlcjE3OTQ3MTU=", "avatar_url": "https://avatars0.githubusercontent.com/u/1794715?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ebrevdo", "html_url": "https://github.com/ebrevdo", "followers_url": "https://api.github.com/users/ebrevdo/followers", "following_url": "https://api.github.com/users/ebrevdo/following{/other_user}", "gists_url": "https://api.github.com/users/ebrevdo/gists{/gist_id}", "starred_url": "https://api.github.com/users/ebrevdo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ebrevdo/subscriptions", "organizations_url": "https://api.github.com/users/ebrevdo/orgs", "repos_url": "https://api.github.com/users/ebrevdo/repos", "events_url": "https://api.github.com/users/ebrevdo/events{/privacy}", "received_events_url": "https://api.github.com/users/ebrevdo/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "ebrevdo", "id": 1794715, "node_id": "MDQ6VXNlcjE3OTQ3MTU=", "avatar_url": "https://avatars0.githubusercontent.com/u/1794715?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ebrevdo", "html_url": "https://github.com/ebrevdo", "followers_url": "https://api.github.com/users/ebrevdo/followers", "following_url": "https://api.github.com/users/ebrevdo/following{/other_user}", "gists_url": "https://api.github.com/users/ebrevdo/gists{/gist_id}", "starred_url": "https://api.github.com/users/ebrevdo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ebrevdo/subscriptions", "organizations_url": "https://api.github.com/users/ebrevdo/orgs", "repos_url": "https://api.github.com/users/ebrevdo/repos", "events_url": "https://api.github.com/users/ebrevdo/events{/privacy}", "received_events_url": "https://api.github.com/users/ebrevdo/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 10, "created_at": "2018-07-06T04:51:35Z", "updated_at": "2019-01-23T22:24:34Z", "closed_at": null, "author_association": "CONTRIBUTOR", "body": "Please go to Stack Overflow for help and support:\r\n\r\nhttps://stackoverflow.com/questions/tagged/tensorflow\r\n\r\nIf you open a GitHub issue, here is our policy:\r\n\r\n1. It must be a bug, a feature request, or a significant problem with documentation (for small docs fixes please send a PR instead).\r\n2. The form below must be filled out.\r\n3. It shouldn't be a TensorBoard issue. Those go [here](https://github.com/tensorflow/tensorboard/issues).\r\n\r\n**Here's why we have that policy**: TensorFlow developers respond to issues. We want to focus on work that benefits the whole community, e.g., fixing bugs and adding features. Support only helps individuals. GitHub also notifies thousands of people when issues are filed. We want them to see you communicating an interesting problem, rather than being redirected to Stack Overflow.\r\n\r\n------------------------\r\n\r\n### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**:\r\nYes.\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**: MacOs High Sierra version 10.13.3 (also found in Linux RHEL 6.5)\r\n- **TensorFlow installed from (source or binary)**: binary\r\n- **TensorFlow version (use command below)**: 1.7.0 (also found in 1.8.0)\r\n- **Python version**: 2.7.10\r\n- **Bazel version (if compiling from source)**:N/A\r\n- **GCC/Compiler version (if compiling from source)**:N/A\r\n- **CUDA/cuDNN version**:N/A CPU version\r\n- **GPU model and memory**:N/A\r\n- **Exact command to reproduce**:\r\npython nonchief_hang.py --out_dir=/tmp/rnn/work0 --ps_hosts=localhost:2222  --worker_hosts=localhost:1111,localhost:3333 --task_index=0 --job_name=worker --time_major\r\npython nonchief_hang.py --out_dir=/tmp/rnn/work1 --ps_hosts=localhost:2222  --worker_hosts=localhost:1111,localhost:3333 --task_index=1 --job_name=worker --time_major\r\npython nonchief_hang.py --out_dir=/tmp/rnn/ps0 --ps_hosts=localhost:2222  --worker_hosts=localhost:1111,localhost:3333 --task_index=0 --job_name=ps --time_major\r\n\r\nYou can collect some of this information using our environment capture script:\r\n\r\nhttps://github.com/tensorflow/tensorflow/tree/master/tools/tf_env_collect.sh\r\n\r\nYou can obtain the TensorFlow version with\r\n\r\npython -c \"import tensorflow as tf; print(tf.GIT_VERSION, tf.VERSION)\"\r\n\r\n### Describe the problem\r\nDescribe the problem clearly here. Be sure to convey here why it's a bug in TensorFlow or a feature request.\r\nIn a distributed seq2seq model (see a short example below), when time-major is set to true, the non-chief workers hang, further debugging showed that the non-chief workers were waiting for embedding matrices to be initialized. The chief worker trains without issues.\r\n\r\nIf we remove (\"--time_major\") from the command line, then non-chief workers run fine.\r\n\r\n### Source code / logs\r\nInclude any logs or source code that would be helpful to diagnose the problem. If including tracebacks, please include the full traceback. Large logs and files should be attached. Try to provide a reproducible test case that is the bare minimum necessary to generate the problem.\r\nThis is a simple seq2seq model following the implementation of [tensorflow/nmt](https://github.com/tensorflow/nmt), with optimizer removed.\r\n\r\n```python\r\nimport argparse\r\nimport sys\r\n\r\nimport tensorflow as tf\r\nimport numpy as np\r\nimport time\r\nFLAGS = None\r\n\r\n\r\ndef main(_):\r\n  ps_hosts = FLAGS.ps_hosts.split(\",\")\r\n  worker_hosts = FLAGS.worker_hosts.split(\",\")\r\n\r\n  # Create a cluster from the parameter server and worker hosts.\r\n  cluster = tf.train.ClusterSpec({\"ps\": ps_hosts, \"worker\": worker_hosts})\r\n\r\n  # Create and start a server for the local task.\r\n  server = tf.train.Server(cluster,\r\n                           job_name=FLAGS.job_name,\r\n                           task_index=FLAGS.task_index)\r\n  if FLAGS.job_name == \"ps\":\r\n    server.join()\r\n  elif FLAGS.job_name == \"worker\":\r\n\r\n    # Assigns ops to the local worker by default.\r\n    with tf.device(tf.train.replica_device_setter(\r\n        worker_device=\"/job:worker/task:%d\" % FLAGS.task_index,\r\n        cluster=cluster)):\r\n\r\n      # Build model...\r\n      batch_size = 24\r\n      src_len = 25\r\n      source = np.ones((batch_size, src_len), dtype=int)\r\n\r\n      embedding_encoder = tf.get_variable(\r\n          \"embedding_encoder\", (99, 128), tf.float32)\r\n\r\n      embedding_decoder = tf.get_variable(\r\n          \"embedding_decoder\", (99, 128), tf.float32)\r\n\r\n      with tf.variable_scope(\"encoder\") as decoder_scope:\r\n        encoder_emb_inp = tf.nn.embedding_lookup(\r\n           embedding_encoder, source)\r\n\r\n        encoder_cell = tf.contrib.rnn.BasicLSTMCell(\r\n          num_units=256,\r\n          forget_bias=1.0)\r\n\r\n        if FLAGS.time_major:\r\n            sequence_length=np.ones(src_len, dtype=int)*batch_size\r\n        else:\r\n            sequence_length=np.ones(batch_size, dtype=int)*src_len\r\n \r\n        encoder_outputs, encoder_state = tf.nn.dynamic_rnn(\r\n            encoder_cell,\r\n            encoder_emb_inp,\r\n            dtype=tf.float32,\r\n            sequence_length=sequence_length,\r\n            time_major=FLAGS.time_major,\r\n            swap_memory=True)\r\n\r\n      with tf.variable_scope(\"decoder\") as decoder_scope:\r\n        target_input = np.ones((batch_size, src_len), dtype=int)\r\n        decoder_emb_inp = tf.nn.embedding_lookup(\r\n            embedding_decoder, target_input) \r\n\r\n        # Helper\r\n        if FLAGS.time_major:\r\n           dummy = tf.fill([src_len], batch_size)\r\n        else:\r\n           dummy = tf.fill([batch_size], src_len)\r\n\r\n        helper = tf.contrib.seq2seq.TrainingHelper(\r\n            decoder_emb_inp, dummy,\r\n            time_major=FLAGS.time_major)\r\n\r\n        decoder_cell = tf.contrib.rnn.BasicLSTMCell(\r\n            num_units=256,\r\n            forget_bias=1.0)\r\n        decoder_initial_state = encoder_state\r\n\r\n        # Decoder\r\n        my_decoder = tf.contrib.seq2seq.BasicDecoder(\r\n            decoder_cell,\r\n            helper,\r\n            decoder_initial_state)\r\n\r\n        # Dynamic decoding\r\n        decoder_outputs, final_context_state, _ = tf.contrib.seq2seq.dynamic_decode(\r\n            my_decoder,\r\n            output_time_major=FLAGS.time_major,\r\n            swap_memory=True,\r\n            scope=decoder_scope)\r\n\r\n      global_step = tf.train.get_or_create_global_step()\r\n      \r\n      train_op = decoder_outputs\r\n\r\n    # The StopAtStepHook handles stopping after running given steps.\r\n    hooks=[tf.train.StopAtStepHook(last_step=100)]\r\n\r\n    # The MonitoredTrainingSession takes care of session initialization,\r\n    # restoring from a checkpoint, saving to a checkpoint, and closing when done\r\n    # or an error occurs.\r\n    with tf.train.MonitoredTrainingSession(master=server.target,\r\n                                           is_chief=(FLAGS.task_index == 0),\r\n                                           checkpoint_dir=FLAGS.out_dir,\r\n                                           hooks=hooks) as mon_sess:\r\n      # This is an infinite while loop since global_step does not increment at all.\r\n      # In a real training, global_step is passed to an optimizer, then increments\r\n      # after each step.\r\n      while not mon_sess.should_stop():\r\n        x = mon_sess.run(train_op)\r\n        global_step_val = global_step.eval(session=mon_sess)\r\n        print('global_step = {0}, time_major is {1}'.format(global_step_val, FLAGS.time_major))\r\n\r\nif __name__ == \"__main__\":\r\n  parser = argparse.ArgumentParser()\r\n  parser.register(\"type\", \"bool\", lambda v: v.lower() == \"true\")\r\n  # Flags for defining the tf.train.ClusterSpec\r\n  parser.add_argument(\r\n      \"--ps_hosts\",\r\n      type=str,\r\n      default=\"\",\r\n      help=\"Comma-separated list of hostname:port pairs\"\r\n  )\r\n  parser.add_argument(\r\n      \"--worker_hosts\",\r\n      type=str,\r\n      default=\"\",\r\n      help=\"Comma-separated list of hostname:port pairs\"\r\n  )\r\n  parser.add_argument(\r\n      \"--job_name\",\r\n      type=str,\r\n      default=\"\",\r\n      help=\"One of 'ps', 'worker'\"\r\n  )\r\n  # Flags for defining the tf.train.Server\r\n  parser.add_argument(\r\n      \"--task_index\",\r\n      type=int,\r\n      default=0,\r\n      help=\"Index of task within the job\"\r\n  )\r\n  parser.add_argument(\r\n      \"--out_dir\",\r\n      type=str,\r\n      default=\"\",\r\n      help=\"output dir\"\r\n  )\r\n\r\n  parser.add_argument(\r\n      \"--time_major\",\r\n      action='store_true',\r\n      help=\"time major\"\r\n  )\r\n  FLAGS, unparsed = parser.parse_known_args()\r\n  tf.app.run(main=main, argv=[sys.argv[0]] + unparsed)\r\n```\r\n"}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20579", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20579/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20579/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20579/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/20579", "id": 338770277, "node_id": "MDU6SXNzdWUzMzg3NzAyNzc=", "number": 20579, "title": "[Feature Request] Support S3 KMS client-side decryption when loading data", "user": {"login": "erikreppel", "id": 7102968, "node_id": "MDQ6VXNlcjcxMDI5Njg=", "avatar_url": "https://avatars0.githubusercontent.com/u/7102968?v=4", "gravatar_id": "", "url": "https://api.github.com/users/erikreppel", "html_url": "https://github.com/erikreppel", "followers_url": "https://api.github.com/users/erikreppel/followers", "following_url": "https://api.github.com/users/erikreppel/following{/other_user}", "gists_url": "https://api.github.com/users/erikreppel/gists{/gist_id}", "starred_url": "https://api.github.com/users/erikreppel/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/erikreppel/subscriptions", "organizations_url": "https://api.github.com/users/erikreppel/orgs", "repos_url": "https://api.github.com/users/erikreppel/repos", "events_url": "https://api.github.com/users/erikreppel/events{/privacy}", "received_events_url": "https://api.github.com/users/erikreppel/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 299643928, "node_id": "MDU6TGFiZWwyOTk2NDM5Mjg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:contributions%20welcome", "name": "stat:contributions welcome", "color": "f4b400", "default": false, "description": ""}, {"id": 473173272, "node_id": "MDU6TGFiZWw0NzMxNzMyNzI=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:feature", "name": "type:feature", "color": "159b2e", "default": false, "description": ""}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2018-07-06T00:52:59Z", "updated_at": "2019-01-23T22:22:27Z", "closed_at": null, "author_association": "NONE", "body": "### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**: No\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**: Linux Ubuntu 16.04\r\n- **TensorFlow installed from (source or binary)**: binary\r\n- **TensorFlow version (use command below)**: 1.8\r\n- **Python version**: 3.6\r\n- **Bazel version (if compiling from source)**: N/A\r\n- **GCC/Compiler version (if compiling from source)**: N/A\r\n- **CUDA/cuDNN version**: 9.0\r\n- **GPU model and memory**: V100\r\n\r\n### Describe the problem\r\nIt would be great to support S3 KMS client side decryption within TensorFlow, ideally transparently.\r\n\r\nWe use S3 with KMS to store sensitive data and decrypting it before loading it into a `tf.Dataset` can get really gross/be a major bottle neck, in part because AWS's boto3 [client library does not support client side KMS encryption](https://docs.aws.amazon.com/general/latest/gr/aws_sdk_cryptography.html) so decrypting data needs to be done manually ([example here](https://github.com/tedder/s3-client-side-encryption/blob/master/get.py)).\r\n\r\nHowever the AWS C++ client does support KMS client-side decryption.\r\n\r\nI'm not super familiar with TensorFlow's codebase but seems like there could be a couple of ways this could be added:\r\n\r\n1) Another contrib `tf.Dataset` implementation ([example here of an existing Dataset contrib](https://github.com/tensorflow/tensorflow/pull/19712/files))\r\nIn which case an extra method would likely need to be added to [`s3_file_system.h`](https://github.com/tensorflow/tensorflow/blob/935d5d8550ad06bc77e41e9a3d987658d3731be9/tensorflow/core/platform/s3/s3_file_system.h) that uses the C++ client for decryption, or handle the envelope encryption as part of how the Python Dataset class loads data\r\n\r\nor\r\n\r\n2) From what I can tell `tf.python.lib.io.file_io` uses [`NewRandomAccessFile`](https://github.com/tensorflow/tensorflow/blob/935d5d8550ad06bc77e41e9a3d987658d3731be9/tensorflow/core/platform/s3/s3_file_system.h#L30) from `s3_file_system.h` when loading datasets from S3 (as shown in the [s3 deploy docs](https://www.tensorflow.org/versions/r1.9/deploy/s3), correct me if I am wrong). \r\nAnother envar could be added (`S3_KMS_ARN`) and if set the C++ S3 client would decrypt client side. To me this would seem like the better solution since no new datasets would need to be worried about, encrypted files in S3 would behave like regular files.\r\n\r\nAn example of the C++ S3 encryption client can be found [here](https://aws.amazon.com/blogs/developer/amazon-s3-encryption-client-is-now-available-for-c/).\r\n\r\n### Exact command to reproduce\r\nN/A"}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20570", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20570/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20570/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20570/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/20570", "id": 338630321, "node_id": "MDU6SXNzdWUzMzg2MzAzMjE=", "number": 20570, "title": "Slow tf.hessians slicing", "user": {"login": "Hoeze", "id": 1200058, "node_id": "MDQ6VXNlcjEyMDAwNTg=", "avatar_url": "https://avatars0.githubusercontent.com/u/1200058?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Hoeze", "html_url": "https://github.com/Hoeze", "followers_url": "https://api.github.com/users/Hoeze/followers", "following_url": "https://api.github.com/users/Hoeze/following{/other_user}", "gists_url": "https://api.github.com/users/Hoeze/gists{/gist_id}", "starred_url": "https://api.github.com/users/Hoeze/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Hoeze/subscriptions", "organizations_url": "https://api.github.com/users/Hoeze/orgs", "repos_url": "https://api.github.com/users/Hoeze/repos", "events_url": "https://api.github.com/users/Hoeze/events{/privacy}", "received_events_url": "https://api.github.com/users/Hoeze/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 404586594, "node_id": "MDU6TGFiZWw0MDQ1ODY1OTQ=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:awaiting%20tensorflower", "name": "stat:awaiting tensorflower", "color": "f4b400", "default": false, "description": ""}, {"id": 473172988, "node_id": "MDU6TGFiZWw0NzMxNzI5ODg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:bug", "name": "type:bug", "color": "159b2e", "default": false, "description": ""}, {"id": 473173272, "node_id": "MDU6TGFiZWw0NzMxNzMyNzI=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:feature", "name": "type:feature", "color": "159b2e", "default": false, "description": ""}], "state": "open", "locked": false, "assignee": {"login": "tatianashp", "id": 986732, "node_id": "MDQ6VXNlcjk4NjczMg==", "avatar_url": "https://avatars2.githubusercontent.com/u/986732?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tatianashp", "html_url": "https://github.com/tatianashp", "followers_url": "https://api.github.com/users/tatianashp/followers", "following_url": "https://api.github.com/users/tatianashp/following{/other_user}", "gists_url": "https://api.github.com/users/tatianashp/gists{/gist_id}", "starred_url": "https://api.github.com/users/tatianashp/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tatianashp/subscriptions", "organizations_url": "https://api.github.com/users/tatianashp/orgs", "repos_url": "https://api.github.com/users/tatianashp/repos", "events_url": "https://api.github.com/users/tatianashp/events{/privacy}", "received_events_url": "https://api.github.com/users/tatianashp/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "tatianashp", "id": 986732, "node_id": "MDQ6VXNlcjk4NjczMg==", "avatar_url": "https://avatars2.githubusercontent.com/u/986732?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tatianashp", "html_url": "https://github.com/tatianashp", "followers_url": "https://api.github.com/users/tatianashp/followers", "following_url": "https://api.github.com/users/tatianashp/following{/other_user}", "gists_url": "https://api.github.com/users/tatianashp/gists{/gist_id}", "starred_url": "https://api.github.com/users/tatianashp/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tatianashp/subscriptions", "organizations_url": "https://api.github.com/users/tatianashp/orgs", "repos_url": "https://api.github.com/users/tatianashp/repos", "events_url": "https://api.github.com/users/tatianashp/events{/privacy}", "received_events_url": "https://api.github.com/users/tatianashp/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 0, "created_at": "2018-07-05T15:47:42Z", "updated_at": "2018-12-19T18:46:45Z", "closed_at": null, "author_association": "NONE", "body": "Hi, I'd like to calculate the diagonal matrix of some hessian:\r\n\r\nI've got some variables `a, b` of shape `(5, <num_features>)` and I'd need for each feature the hessian's diagonal:\r\n\r\n```python3\r\n>>> [self.a, self.b]\r\n[<tf.Tensor 'Linear_Batch_Model/a/concat:0' shape=(5, 10000) dtype=float32>,\r\n <tf.Tensor 'Linear_Batch_Model/b/concat:0' shape=(5, 10000) dtype=float32>]\r\n\r\n>>> tf.hessians(self.full_loss, [self.a, self.b])\r\n[<tf.Tensor 'Reshape_1:0' shape=(5, 10000, 5, 10000) dtype=float32>,\r\n <tf.Tensor 'Reshape_3:0' shape=(5, 10000, 5, 10000) dtype=float32>]\r\n\r\n>>> [tf.diag_part(t) for t in tf.hessians(self.full_loss, [self.a, self.b])]\r\n[<tf.Tensor 'DiagPart_3:0' shape=(5, 10000) dtype=float32>,\r\n <tf.Tensor 'DiagPart_4:0' shape=(5, 10000) dtype=float32>]\r\n```\r\n\r\n**However, this calculation seems to run infinitely:**\r\nThe full hessian matrices are huge, but since I only take the diagonal elements, they should never be calculated explicitly.\r\n\r\n- I can calculate the diagonal by hand (`gradient(gradient(loss, [a,b]), [a,b])`), but I always expected tensorflow to optimize such operations implicitely...\r\n- Also, this trick does not work if I'd need other parts of the Hessian matrix, e.g. if I need for each independent gene the `parm x parm`-shaped hessian:\r\nTF does not allow to differentiate only slices of a and b (e.g. `tf.hessians(loss, [a[:, 0], b[:,0]])`)\r\n\r\n.\r\n\r\n### The problem\r\nTensorflow seems to explicitly calculate the full hessian matrix\r\n\r\n### What I'd expect\r\nFast calculation since I only request the diagonal\r\n\r\n------------------------\r\n\r\n### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**: No\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**: Linux Ubuntu 18.04\r\n- **TensorFlow installed from (source or binary)**: binary\r\n- **TensorFlow version (use command below)**: 1.9.0\r\n- **Python version**: 3.6.5\r\n- **Bazel version (if compiling from source)**: none\r\n- **GCC/Compiler version (if compiling from source)**: none\r\n- **CUDA/cuDNN version**: none\r\n- **GPU model and memory**: none\r\n- **Exact command to reproduce**: none"}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20567", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20567/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20567/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20567/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/20567", "id": 338585670, "node_id": "MDU6SXNzdWUzMzg1ODU2NzA=", "number": 20567, "title": "Feature request: verify py_func tensor's shape when evaluating", "user": {"login": "kolmodin", "id": 157261, "node_id": "MDQ6VXNlcjE1NzI2MQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/157261?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kolmodin", "html_url": "https://github.com/kolmodin", "followers_url": "https://api.github.com/users/kolmodin/followers", "following_url": "https://api.github.com/users/kolmodin/following{/other_user}", "gists_url": "https://api.github.com/users/kolmodin/gists{/gist_id}", "starred_url": "https://api.github.com/users/kolmodin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kolmodin/subscriptions", "organizations_url": "https://api.github.com/users/kolmodin/orgs", "repos_url": "https://api.github.com/users/kolmodin/repos", "events_url": "https://api.github.com/users/kolmodin/events{/privacy}", "received_events_url": "https://api.github.com/users/kolmodin/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1097547147, "node_id": "MDU6TGFiZWwxMDk3NTQ3MTQ3", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/comp:ops", "name": "comp:ops", "color": "0052cc", "default": false, "description": ""}, {"id": 299643928, "node_id": "MDU6TGFiZWwyOTk2NDM5Mjg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:contributions%20welcome", "name": "stat:contributions welcome", "color": "f4b400", "default": false, "description": ""}, {"id": 473173272, "node_id": "MDU6TGFiZWw0NzMxNzMyNzI=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:feature", "name": "type:feature", "color": "159b2e", "default": false, "description": ""}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2018-07-05T13:55:50Z", "updated_at": "2019-01-23T22:21:21Z", "closed_at": null, "author_association": "NONE", "body": "`tf.py_func(my_py_func, args, dype)` returns a tensor of known type but unknown shape.\r\nWhen my_py_func runs, py_func will check that the type is what's expected and fail otherwise.\r\n\r\nBut, if you set an incorrect shape with .set_shape there's no warning. Having a loud warning would have saved me a few hours yesterday.\r\n\r\nMinimal example;\r\n\r\n```python\r\nfrom __future__ import absolute_import\r\nfrom __future__ import division\r\nfrom __future__ import print_function\r\n\r\nimport tensorflow as tf\r\nimport numpy as np\r\n\r\ndef my_py_func(x):\r\n  return x\r\n\r\ndef main(argv):\r\n  del argv\r\n\r\n  print(tf.GIT_VERSION, tf.VERSION)\r\n\r\n  t = tf.constant(0, dtype=tf.int64)\r\n  print('tf.constant(0):', t)\r\n  t = tf.py_func(my_py_func, [t], tf.int64)\r\n  print('tf.py_func:', t)\r\n  t.set_shape([100,100])\r\n  print('t.set_shape:', t)\r\n\r\n  with tf.Session() as sess:\r\n    t = sess.run(t)\r\n    print('sess.run(t)', t)\r\n\r\nif __name__ == '__main__':\r\n  tf.app.run()\r\n```\r\n\r\nOutput;\r\n```\r\n$ python using_py_func.py\r\nv1.8.0-0-g93bc2e2072 1.8.0\r\ntf.constant(0): Tensor(\"Const:0\", shape=(), dtype=int64)\r\ntf.py_func: Tensor(\"PyFunc:0\", dtype=int64)\r\nt.set_shape: Tensor(\"PyFunc:0\", shape=(100, 100), dtype=int64)\r\nsess.run(t) 0\r\n```\r\n"}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20563", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20563/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20563/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20563/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/20563", "id": 338476424, "node_id": "MDU6SXNzdWUzMzg0NzY0MjQ=", "number": 20563, "title": "Exception in thread \"main\" java.lang.UnsatisfiedLinkError: Cannot find TensorFlow native library for OS", "user": {"login": "8502596", "id": 15864647, "node_id": "MDQ6VXNlcjE1ODY0NjQ3", "avatar_url": "https://avatars1.githubusercontent.com/u/15864647?v=4", "gravatar_id": "", "url": "https://api.github.com/users/8502596", "html_url": "https://github.com/8502596", "followers_url": "https://api.github.com/users/8502596/followers", "following_url": "https://api.github.com/users/8502596/following{/other_user}", "gists_url": "https://api.github.com/users/8502596/gists{/gist_id}", "starred_url": "https://api.github.com/users/8502596/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/8502596/subscriptions", "organizations_url": "https://api.github.com/users/8502596/orgs", "repos_url": "https://api.github.com/users/8502596/repos", "events_url": "https://api.github.com/users/8502596/events{/privacy}", "received_events_url": "https://api.github.com/users/8502596/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 404586594, "node_id": "MDU6TGFiZWw0MDQ1ODY1OTQ=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:awaiting%20tensorflower", "name": "stat:awaiting tensorflower", "color": "f4b400", "default": false, "description": ""}, {"id": 1093464312, "node_id": "MDU6TGFiZWwxMDkzNDY0MzEy", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:others", "name": "type:others", "color": "159b2e", "default": false, "description": ""}], "state": "open", "locked": false, "assignee": {"login": "bignamehyp", "id": 3474655, "node_id": "MDQ6VXNlcjM0NzQ2NTU=", "avatar_url": "https://avatars2.githubusercontent.com/u/3474655?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bignamehyp", "html_url": "https://github.com/bignamehyp", "followers_url": "https://api.github.com/users/bignamehyp/followers", "following_url": "https://api.github.com/users/bignamehyp/following{/other_user}", "gists_url": "https://api.github.com/users/bignamehyp/gists{/gist_id}", "starred_url": "https://api.github.com/users/bignamehyp/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bignamehyp/subscriptions", "organizations_url": "https://api.github.com/users/bignamehyp/orgs", "repos_url": "https://api.github.com/users/bignamehyp/repos", "events_url": "https://api.github.com/users/bignamehyp/events{/privacy}", "received_events_url": "https://api.github.com/users/bignamehyp/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "bignamehyp", "id": 3474655, "node_id": "MDQ6VXNlcjM0NzQ2NTU=", "avatar_url": "https://avatars2.githubusercontent.com/u/3474655?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bignamehyp", "html_url": "https://github.com/bignamehyp", "followers_url": "https://api.github.com/users/bignamehyp/followers", "following_url": "https://api.github.com/users/bignamehyp/following{/other_user}", "gists_url": "https://api.github.com/users/bignamehyp/gists{/gist_id}", "starred_url": "https://api.github.com/users/bignamehyp/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bignamehyp/subscriptions", "organizations_url": "https://api.github.com/users/bignamehyp/orgs", "repos_url": "https://api.github.com/users/bignamehyp/repos", "events_url": "https://api.github.com/users/bignamehyp/events{/privacy}", "received_events_url": "https://api.github.com/users/bignamehyp/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 2, "created_at": "2018-07-05T08:34:01Z", "updated_at": "2019-01-23T22:20:36Z", "closed_at": null, "author_association": "NONE", "body": "Have I written custom code (as opposed to using a stock example script provided in TensorFlow)\r\nOS Platform and Distribution (window 7 64b):\r\nTensorFlow installed from (binary) 1.6 later:\r\nTensorFlow version NA:\r\nPython version NA: \r\nBazel version NA:\r\nGCC/Compiler version NA:\r\nCUDA/cuDNN version NA:\r\nGPU model and memory NA:\r\nExact command to reproduce NA:\r\n\r\n### Describe the problem\r\nwhen i  get start  with [https://www.tensorflow.org/install/install_java](https://www.tensorflow.org/install/install_java]) I found a problem.\r\nif the tensorflow_jni.dll version Higher than 1.5.1 then  will receive the error\uff1a\r\n\r\n`Exception in thread \"main\" java.lang.UnsatisfiedLinkError: Cannot find TensorFlow native library for OS: windows, architecture: x86_64. See https://github.com/tensorflow/tensorflow/tree/master/tensorflow/java/README.md for possible solutions (such as building the library from source). Additional information on attempts to find the native library can be obtained by adding org.tensorflow.NativeLibrary.DEBUG=1 to the system properties of the JVM.\r\n\tat org.tensorflow.NativeLibrary.load(NativeLibrary.java:78)\r\n\tat org.tensorflow.TensorFlow.init(TensorFlow.java:66)\r\n\tat org.tensorflow.TensorFlow.<clinit>(TensorFlow.java:70)\r\n\tat org.tensorflow.Graph.<clinit>(Graph.java:258)\r\n\tat HelloTF.main(HelloTF.java:25)`\r\n\r\n1. 1.3.0  \r\n2. 1.4.1\r\n3. 1.5.1\r\n\r\nthese versions lower than **1.6.0** is good.\r\n\r\n1.  1.6.0\r\n2.  1.7.0\r\n3.  1.8.0\r\n4.  1.9.0.rc2\r\n\r\nthese versions receive this error.\r\n\r\n\r\n\r\n### Source code / logs\r\n[https://www.tensorflow.org/install/install_java](https://www.tensorflow.org/install/install_java)   HelloTF.java\r\n"}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20561", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20561/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20561/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20561/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/20561", "id": 338448450, "node_id": "MDU6SXNzdWUzMzg0NDg0NTA=", "number": 20561, "title": "failed to embed python code that import tensorflow in c++ ", "user": {"login": "Ceveloper", "id": 38587456, "node_id": "MDQ6VXNlcjM4NTg3NDU2", "avatar_url": "https://avatars0.githubusercontent.com/u/38587456?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Ceveloper", "html_url": "https://github.com/Ceveloper", "followers_url": "https://api.github.com/users/Ceveloper/followers", "following_url": "https://api.github.com/users/Ceveloper/following{/other_user}", "gists_url": "https://api.github.com/users/Ceveloper/gists{/gist_id}", "starred_url": "https://api.github.com/users/Ceveloper/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Ceveloper/subscriptions", "organizations_url": "https://api.github.com/users/Ceveloper/orgs", "repos_url": "https://api.github.com/users/Ceveloper/repos", "events_url": "https://api.github.com/users/Ceveloper/events{/privacy}", "received_events_url": "https://api.github.com/users/Ceveloper/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1097543484, "node_id": "MDU6TGFiZWwxMDk3NTQzNDg0", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/comp:runtime", "name": "comp:runtime", "color": "0052cc", "default": false, "description": "c++ runtime, performance issues (cpu)"}, {"id": 473184161, "node_id": "MDU6TGFiZWw0NzMxODQxNjE=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:support", "name": "type:support", "color": "159b2e", "default": false, "description": ""}], "state": "open", "locked": false, "assignee": {"login": "allenlavoie", "id": 3731025, "node_id": "MDQ6VXNlcjM3MzEwMjU=", "avatar_url": "https://avatars3.githubusercontent.com/u/3731025?v=4", "gravatar_id": "", "url": "https://api.github.com/users/allenlavoie", "html_url": "https://github.com/allenlavoie", "followers_url": "https://api.github.com/users/allenlavoie/followers", "following_url": "https://api.github.com/users/allenlavoie/following{/other_user}", "gists_url": "https://api.github.com/users/allenlavoie/gists{/gist_id}", "starred_url": "https://api.github.com/users/allenlavoie/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/allenlavoie/subscriptions", "organizations_url": "https://api.github.com/users/allenlavoie/orgs", "repos_url": "https://api.github.com/users/allenlavoie/repos", "events_url": "https://api.github.com/users/allenlavoie/events{/privacy}", "received_events_url": "https://api.github.com/users/allenlavoie/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "allenlavoie", "id": 3731025, "node_id": "MDQ6VXNlcjM3MzEwMjU=", "avatar_url": "https://avatars3.githubusercontent.com/u/3731025?v=4", "gravatar_id": "", "url": "https://api.github.com/users/allenlavoie", "html_url": "https://github.com/allenlavoie", "followers_url": "https://api.github.com/users/allenlavoie/followers", "following_url": "https://api.github.com/users/allenlavoie/following{/other_user}", "gists_url": "https://api.github.com/users/allenlavoie/gists{/gist_id}", "starred_url": "https://api.github.com/users/allenlavoie/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/allenlavoie/subscriptions", "organizations_url": "https://api.github.com/users/allenlavoie/orgs", "repos_url": "https://api.github.com/users/allenlavoie/repos", "events_url": "https://api.github.com/users/allenlavoie/events{/privacy}", "received_events_url": "https://api.github.com/users/allenlavoie/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 17, "created_at": "2018-07-05T06:59:49Z", "updated_at": "2019-09-25T07:54:41Z", "closed_at": null, "author_association": "NONE", "body": "### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**: yes\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**: Linux Ubuntu 16.04\r\n- **TensorFlow installed from (source or binary)**: source\r\n- **TensorFlow version (use command below)**: 1.8.0\r\n- **Python version**: 3.5\r\n- **Bazel version (if compiling from source)**: 0.14.1\r\n- **GCC/Compiler version (if compiling from source)**: 5.4.0\r\n- **CUDA/cuDNN version**: 9.0\r\n- **GPU model and memory**: Tesla K40c,  11440 MBytes\r\n- **Exact command to reproduce**: see below\r\n\r\n### Describe the problem\r\nI want the embedded python in my C++ code to import tensorflow, but the line \"import tensorflow\" gives an error at run time. That's no happening while importing other python modules. There is no problem with using tensorflow from my python shell/scripts, I can also compile and use custom ops written in C++, so that proofs that the installation worked without problems. I don't know if it's relevant, but my C++ library already uses tensorflow as third part shared library.\r\n\r\nHere my very easy C++ code that calls python:\r\n\r\n            PyObject* pInt;\r\n\r\n            Py_Initialize();\r\n\r\n            PyRun_SimpleString(\"import tensorflow \\n\"\r\n                               \"print('Hello TF!!!')\");\r\n\r\n            Py_Finalize();\r\n\r\n\r\nHere is the error I get at runtime:\r\n\r\nTraceback (most recent call last):\r\n  File \"/usr/local/lib/python3.5/dist-packages/tensorflow/python/pywrap_tensorflow.py\", line 58, in <module>\r\n    from tensorflow.python.pywrap_tensorflow_internal import *\r\n  File \"/usr/local/lib/python3.5/dist-packages/tensorflow/python/pywrap_tensorflow_internal.py\", line 28, in <module>\r\n    _pywrap_tensorflow_internal = swig_import_helper()\r\n  File \"/usr/local/lib/python3.5/dist-packages/tensorflow/python/pywrap_tensorflow_internal.py\", line 24, in swig_import_helper\r\n    _mod = imp.load_module('_pywrap_tensorflow_internal', fp, pathname, description)\r\n  File \"/usr/lib/python3.5/imp.py\", line 242, in load_module\r\n    return load_dynamic(name, filename, file)\r\n  File \"/usr/lib/python3.5/imp.py\", line 342, in load_dynamic\r\n    return _load(spec)\r\nImportError: /usr/local/lib/python3.5/dist-packages/tensorflow/python/_pywrap_tensorflow_internal.so: undefined symbol: _ZNK6google8protobuf7Message11GetTypeNameEv\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTraceback (most recent call last):\r\n  File \"<string>\", line 1, in <module>\r\n  File \"/usr/local/lib/python3.5/dist-packages/tensorflow/__init__.py\", line 24, in <module>\r\n    from tensorflow.python import pywrap_tensorflow  # pylint: disable=unused-import\r\n  File \"/usr/local/lib/python3.5/dist-packages/tensorflow/python/__init__.py\", line 49, in <module>\r\n    from tensorflow.python import pywrap_tensorflow\r\n  File \"/usr/local/lib/python3.5/dist-packages/tensorflow/python/pywrap_tensorflow.py\", line 74, in <module>\r\n    raise ImportError(msg)\r\nImportError: Traceback (most recent call last):\r\n  File \"/usr/local/lib/python3.5/dist-packages/tensorflow/python/pywrap_tensorflow.py\", line 58, in <module>\r\n    from tensorflow.python.pywrap_tensorflow_internal import *\r\n  File \"/usr/local/lib/python3.5/dist-packages/tensorflow/python/pywrap_tensorflow_internal.py\", line 28, in <module>\r\n    _pywrap_tensorflow_internal = swig_import_helper()\r\n  File \"/usr/local/lib/python3.5/dist-packages/tensorflow/python/pywrap_tensorflow_internal.py\", line 24, in swig_import_helper\r\n    _mod = imp.load_module('_pywrap_tensorflow_internal', fp, pathname, description)\r\n  File \"/usr/lib/python3.5/imp.py\", line 242, in load_module\r\n    return load_dynamic(name, filename, file)\r\n  File \"/usr/lib/python3.5/imp.py\", line 342, in load_dynamic\r\n    return _load(spec)\r\nImportError: /usr/local/lib/python3.5/dist-packages/tensorflow/python/_pywrap_tensorflow_internal.so: undefined symbol: _ZNK6google8protobuf7Message11GetTypeNameEv\r\n\r\n\r\nFailed to load the native TensorFlow runtime.\r\n\r\nSee https://www.tensorflow.org/install/install_sources#common_installation_problems\r\n\r\nfor some common reasons and solutions.  Include the entire stack trace\r\nabove this error message when asking for help.\r\n\r\n"}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20559", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20559/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20559/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20559/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/20559", "id": 338419749, "node_id": "MDU6SXNzdWUzMzg0MTk3NDk=", "number": 20559, "title": "gfile.Glob is Case Sensitive for file extensions in Unix but not in Windows", "user": {"login": "danielaRiesgo", "id": 12351004, "node_id": "MDQ6VXNlcjEyMzUxMDA0", "avatar_url": "https://avatars0.githubusercontent.com/u/12351004?v=4", "gravatar_id": "", "url": "https://api.github.com/users/danielaRiesgo", "html_url": "https://github.com/danielaRiesgo", "followers_url": "https://api.github.com/users/danielaRiesgo/followers", "following_url": "https://api.github.com/users/danielaRiesgo/following{/other_user}", "gists_url": "https://api.github.com/users/danielaRiesgo/gists{/gist_id}", "starred_url": "https://api.github.com/users/danielaRiesgo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/danielaRiesgo/subscriptions", "organizations_url": "https://api.github.com/users/danielaRiesgo/orgs", "repos_url": "https://api.github.com/users/danielaRiesgo/repos", "events_url": "https://api.github.com/users/danielaRiesgo/events{/privacy}", "received_events_url": "https://api.github.com/users/danielaRiesgo/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 299643928, "node_id": "MDU6TGFiZWwyOTk2NDM5Mjg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:contributions%20welcome", "name": "stat:contributions welcome", "color": "f4b400", "default": false, "description": ""}, {"id": 1093464312, "node_id": "MDU6TGFiZWwxMDkzNDY0MzEy", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:others", "name": "type:others", "color": "159b2e", "default": false, "description": ""}], "state": "open", "locked": false, "assignee": {"login": "mihaimaruseac", "id": 323199, "node_id": "MDQ6VXNlcjMyMzE5OQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/323199?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mihaimaruseac", "html_url": "https://github.com/mihaimaruseac", "followers_url": "https://api.github.com/users/mihaimaruseac/followers", "following_url": "https://api.github.com/users/mihaimaruseac/following{/other_user}", "gists_url": "https://api.github.com/users/mihaimaruseac/gists{/gist_id}", "starred_url": "https://api.github.com/users/mihaimaruseac/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mihaimaruseac/subscriptions", "organizations_url": "https://api.github.com/users/mihaimaruseac/orgs", "repos_url": "https://api.github.com/users/mihaimaruseac/repos", "events_url": "https://api.github.com/users/mihaimaruseac/events{/privacy}", "received_events_url": "https://api.github.com/users/mihaimaruseac/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "mihaimaruseac", "id": 323199, "node_id": "MDQ6VXNlcjMyMzE5OQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/323199?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mihaimaruseac", "html_url": "https://github.com/mihaimaruseac", "followers_url": "https://api.github.com/users/mihaimaruseac/followers", "following_url": "https://api.github.com/users/mihaimaruseac/following{/other_user}", "gists_url": "https://api.github.com/users/mihaimaruseac/gists{/gist_id}", "starred_url": "https://api.github.com/users/mihaimaruseac/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mihaimaruseac/subscriptions", "organizations_url": "https://api.github.com/users/mihaimaruseac/orgs", "repos_url": "https://api.github.com/users/mihaimaruseac/repos", "events_url": "https://api.github.com/users/mihaimaruseac/events{/privacy}", "received_events_url": "https://api.github.com/users/mihaimaruseac/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 9, "created_at": "2018-07-05T03:55:29Z", "updated_at": "2020-03-12T16:02:58Z", "closed_at": null, "author_association": "NONE", "body": "### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**: Yes.\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**: Windows 10 and macOS High Sierra 10.13.4\r\n- **TensorFlow installed from (source or binary)**: `pip3 install --upgrade tensorflow`\r\n- **TensorFlow version (use command below)**: 1.8.0\r\n- **Python version**: 3.6.5\r\n- **Bazel version**: N/A\r\n- **CUDA/cuDNN version**: N/A\r\n- **GPU model and memory**: N/A\r\n- **Exact command to reproduce**: In source code\r\n\r\n### Describe the problem\r\ngfile.Glob() distinguishes between \".case\" and \".CASE\" in file extension in Unix-based systems, but not in Windows.\r\nIdeally, they should work the same way.\r\n\r\n### Source code\r\nStand in a root folder, add a image.jpg in the folder.\r\nThen start python and run:\r\n```\r\nfrom tensorflow.python.platform import gfile\r\nprint(gfile.Glob(\"./*.jpg\"))\r\nprint(gfile.Glob(\"./*.JPG\"))\r\n```\r\nIn Windows, you will get:\r\n```\r\n[\".\\\\image.jpg\"\"]\r\n[\".\\\\image.jpg\"\"]\r\n```\r\nIn Unix, you will get:\r\n```\r\n[\"./image.jpg\"]\r\n[]\r\n```"}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20557", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20557/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20557/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20557/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/20557", "id": 338419272, "node_id": "MDU6SXNzdWUzMzg0MTkyNzI=", "number": 20557, "title": "gfile.Glob - Recursive in Windows, not in Unix", "user": {"login": "danielaRiesgo", "id": 12351004, "node_id": "MDQ6VXNlcjEyMzUxMDA0", "avatar_url": "https://avatars0.githubusercontent.com/u/12351004?v=4", "gravatar_id": "", "url": "https://api.github.com/users/danielaRiesgo", "html_url": "https://github.com/danielaRiesgo", "followers_url": "https://api.github.com/users/danielaRiesgo/followers", "following_url": "https://api.github.com/users/danielaRiesgo/following{/other_user}", "gists_url": "https://api.github.com/users/danielaRiesgo/gists{/gist_id}", "starred_url": "https://api.github.com/users/danielaRiesgo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/danielaRiesgo/subscriptions", "organizations_url": "https://api.github.com/users/danielaRiesgo/orgs", "repos_url": "https://api.github.com/users/danielaRiesgo/repos", "events_url": "https://api.github.com/users/danielaRiesgo/events{/privacy}", "received_events_url": "https://api.github.com/users/danielaRiesgo/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1093464312, "node_id": "MDU6TGFiZWwxMDkzNDY0MzEy", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:others", "name": "type:others", "color": "159b2e", "default": false, "description": ""}], "state": "open", "locked": false, "assignee": {"login": "tatatodd", "id": 5453737, "node_id": "MDQ6VXNlcjU0NTM3Mzc=", "avatar_url": "https://avatars3.githubusercontent.com/u/5453737?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tatatodd", "html_url": "https://github.com/tatatodd", "followers_url": "https://api.github.com/users/tatatodd/followers", "following_url": "https://api.github.com/users/tatatodd/following{/other_user}", "gists_url": "https://api.github.com/users/tatatodd/gists{/gist_id}", "starred_url": "https://api.github.com/users/tatatodd/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tatatodd/subscriptions", "organizations_url": "https://api.github.com/users/tatatodd/orgs", "repos_url": "https://api.github.com/users/tatatodd/repos", "events_url": "https://api.github.com/users/tatatodd/events{/privacy}", "received_events_url": "https://api.github.com/users/tatatodd/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "tatatodd", "id": 5453737, "node_id": "MDQ6VXNlcjU0NTM3Mzc=", "avatar_url": "https://avatars3.githubusercontent.com/u/5453737?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tatatodd", "html_url": "https://github.com/tatatodd", "followers_url": "https://api.github.com/users/tatatodd/followers", "following_url": "https://api.github.com/users/tatatodd/following{/other_user}", "gists_url": "https://api.github.com/users/tatatodd/gists{/gist_id}", "starred_url": "https://api.github.com/users/tatatodd/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tatatodd/subscriptions", "organizations_url": "https://api.github.com/users/tatatodd/orgs", "repos_url": "https://api.github.com/users/tatatodd/repos", "events_url": "https://api.github.com/users/tatatodd/events{/privacy}", "received_events_url": "https://api.github.com/users/tatatodd/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 2, "created_at": "2018-07-05T03:51:34Z", "updated_at": "2019-01-23T22:16:57Z", "closed_at": null, "author_association": "NONE", "body": "### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**: Yes.\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**: Windows 10 and macOS High Sierra 10.13.4\r\n- **TensorFlow installed from (source or binary)**: `pip3 install --upgrade tensorflow`\r\n- **TensorFlow version (use command below)**: 1.8.0\r\n- **Python version**: 3.6.5\r\n- **Bazel version**: N/A\r\n- **CUDA/cuDNN version**: N/A\r\n- **GPU model and memory**: N/A\r\n- **Exact command to reproduce**: In source code\r\n\r\n### Describe the problem\r\ngfile.Glob() works recursively in Windows, but not in Unix-based systems.\r\nIdeally, they should work the same way.\r\n\r\n### Source code\r\nStand in a root folder, create subfolder and add a image.jpg in the subfolder.\r\nThen start python and run:\r\n```\r\nfrom tensorflow.python.platform import gfile\r\nprint(gfile.Glob(\"./*.jpg\"))\r\n```\r\nIn Windows, you will get `[\".\\\\subfolder\\\\image.jpg\"]`.\r\nIn Unix, you will get `[]`."}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20532", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20532/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20532/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20532/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/20532", "id": 338057336, "node_id": "MDU6SXNzdWUzMzgwNTczMzY=", "number": 20532, "title": "freeze_graph doesn't work", "user": {"login": "dhingratul", "id": 4759327, "node_id": "MDQ6VXNlcjQ3NTkzMjc=", "avatar_url": "https://avatars2.githubusercontent.com/u/4759327?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dhingratul", "html_url": "https://github.com/dhingratul", "followers_url": "https://api.github.com/users/dhingratul/followers", "following_url": "https://api.github.com/users/dhingratul/following{/other_user}", "gists_url": "https://api.github.com/users/dhingratul/gists{/gist_id}", "starred_url": "https://api.github.com/users/dhingratul/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dhingratul/subscriptions", "organizations_url": "https://api.github.com/users/dhingratul/orgs", "repos_url": "https://api.github.com/users/dhingratul/repos", "events_url": "https://api.github.com/users/dhingratul/events{/privacy}", "received_events_url": "https://api.github.com/users/dhingratul/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1097547147, "node_id": "MDU6TGFiZWwxMDk3NTQ3MTQ3", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/comp:ops", "name": "comp:ops", "color": "0052cc", "default": false, "description": ""}, {"id": 473184161, "node_id": "MDU6TGFiZWw0NzMxODQxNjE=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:support", "name": "type:support", "color": "159b2e", "default": false, "description": ""}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 12, "created_at": "2018-07-03T21:16:47Z", "updated_at": "2019-08-12T16:23:20Z", "closed_at": null, "author_association": "NONE", "body": "Please go to Stack Overflow for help and support:\r\n\r\nhttps://stackoverflow.com/questions/tagged/tensorflow\r\n\r\nIf you open a GitHub issue, here is our policy:\r\n\r\n1. It must be a bug, a feature request, or a significant problem with documentation (for small docs fixes please send a PR instead).\r\n2. The form below must be filled out.\r\n3. It shouldn't be a TensorBoard issue. Those go [here](https://github.com/tensorflow/tensorboard/issues).\r\n\r\n**Here's why we have that policy**: TensorFlow developers respond to issues. We want to focus on work that benefits the whole community, e.g., fixing bugs and adding features. Support only helps individuals. GitHub also notifies thousands of people when issues are filed. We want them to see you communicating an interesting problem, rather than being redirected to Stack Overflow.\r\n\r\n------------------------\r\n\r\n### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**: no\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**: ubuntu 16.04\r\n- **TensorFlow installed from (source or binary)**: pip install tensorflow-gpu \r\n- **TensorFlow version (use command below)**: 1.8\r\n- **Python version**:  3\r\n- **Bazel version (if compiling from source)**:\r\n- **GCC/Compiler version (if compiling from source)**:\r\n- **CUDA/cuDNN version**: 9/7.1\r\n- **GPU model and memory**: dual gtx 1080ti , 11gb\r\n- **Exact command to reproduce**: \r\n\r\n`python freeze_graph.py \\\r\n    --input_checkpoint=full-path-to-logs/mnist-9999 \\\r\n    --output_graph=model.pb \\\r\n    --output_node_names=fc2/Relu`\r\n\r\nYou can collect some of this information using our environment capture script:\r\n\r\nhttps://github.com/tensorflow/tensorflow/tree/master/tools/tf_env_collect.sh\r\n\r\nYou can obtain the TensorFlow version with\r\n\r\npython -c \"import tensorflow as tf; print(tf.GIT_VERSION, tf.VERSION)\"\r\n\r\n### Describe the problem\r\nDescribe the problem clearly here. Be sure to convey here why it's a bug in TensorFlow or a feature request.\r\nTraceback (most recent call last):\r\n  File \"freeze_graph.py\", line 382, in <module>\r\n    run_main()\r\n  File \"freeze_graph.py\", line 379, in run_main\r\n    app.run(main=my_main, argv=[sys.argv[0]] + unparsed)\r\n  File \"/home/dhingratul/.virtualenvs/venv/lib/python3.5/site-packages/tensorflow/python/platform/app.py\", line 126, in run\r\n    _sys.exit(main(argv))\r\n  File \"freeze_graph.py\", line 378, in <lambda>\r\n    my_main = lambda unused_args: main(unused_args, flags)\r\n  File \"freeze_graph.py\", line 272, in main\r\n    flags.saved_model_tags, checkpoint_version)\r\n  File \"freeze_graph.py\", line 254, in freeze_graph\r\n    checkpoint_version=checkpoint_version)\r\n  File \"freeze_graph.py\", line 128, in freeze_graph_with_def_protos\r\n    var_list=var_list, write_version=checkpoint_version)\r\n  File \"/home/dhingratul/.virtualenvs/venv/lib/python3.5/site-packages/tensorflow/python/training/saver.py\", line 1338, in __init__\r\n    self.build()\r\n  File \"/home/dhingratul/.virtualenvs/venv/lib/python3.5/site-packages/tensorflow/python/training/saver.py\", line 1347, in build\r\n    self._build(self._filename, build_save=True, build_restore=True)\r\n  File \"/home/dhingratul/.virtualenvs/venv/lib/python3.5/site-packages/tensorflow/python/training/saver.py\", line 1372, in _build\r\n    raise ValueError(\"No variables to save\")\r\nValueError: No variables to save\r\n\r\n### Source code / logs\r\nInclude any logs or source code that would be helpful to diagnose the problem. If including tracebacks, please include the full traceback. Large logs and files should be attached. Try to provide a reproducible test case that is the bare minimum necessary to generate the problem.\r\n"}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20529", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20529/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20529/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20529/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/20529", "id": 338014892, "node_id": "MDU6SXNzdWUzMzgwMTQ4OTI=", "number": 20529, "title": "[tf.keras] Stateful Metrics assorted errors.", "user": {"login": "brge17", "id": 33430930, "node_id": "MDQ6VXNlcjMzNDMwOTMw", "avatar_url": "https://avatars3.githubusercontent.com/u/33430930?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brge17", "html_url": "https://github.com/brge17", "followers_url": "https://api.github.com/users/brge17/followers", "following_url": "https://api.github.com/users/brge17/following{/other_user}", "gists_url": "https://api.github.com/users/brge17/gists{/gist_id}", "starred_url": "https://api.github.com/users/brge17/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brge17/subscriptions", "organizations_url": "https://api.github.com/users/brge17/orgs", "repos_url": "https://api.github.com/users/brge17/repos", "events_url": "https://api.github.com/users/brge17/events{/privacy}", "received_events_url": "https://api.github.com/users/brge17/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1097546578, "node_id": "MDU6TGFiZWwxMDk3NTQ2NTc4", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/comp:keras", "name": "comp:keras", "color": "0052cc", "default": false, "description": ""}, {"id": 473172988, "node_id": "MDU6TGFiZWw0NzMxNzI5ODg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:bug", "name": "type:bug", "color": "159b2e", "default": false, "description": ""}], "state": "open", "locked": false, "assignee": {"login": "pavithrasv", "id": 13326758, "node_id": "MDQ6VXNlcjEzMzI2NzU4", "avatar_url": "https://avatars0.githubusercontent.com/u/13326758?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pavithrasv", "html_url": "https://github.com/pavithrasv", "followers_url": "https://api.github.com/users/pavithrasv/followers", "following_url": "https://api.github.com/users/pavithrasv/following{/other_user}", "gists_url": "https://api.github.com/users/pavithrasv/gists{/gist_id}", "starred_url": "https://api.github.com/users/pavithrasv/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pavithrasv/subscriptions", "organizations_url": "https://api.github.com/users/pavithrasv/orgs", "repos_url": "https://api.github.com/users/pavithrasv/repos", "events_url": "https://api.github.com/users/pavithrasv/events{/privacy}", "received_events_url": "https://api.github.com/users/pavithrasv/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "pavithrasv", "id": 13326758, "node_id": "MDQ6VXNlcjEzMzI2NzU4", "avatar_url": "https://avatars0.githubusercontent.com/u/13326758?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pavithrasv", "html_url": "https://github.com/pavithrasv", "followers_url": "https://api.github.com/users/pavithrasv/followers", "following_url": "https://api.github.com/users/pavithrasv/following{/other_user}", "gists_url": "https://api.github.com/users/pavithrasv/gists{/gist_id}", "starred_url": "https://api.github.com/users/pavithrasv/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pavithrasv/subscriptions", "organizations_url": "https://api.github.com/users/pavithrasv/orgs", "repos_url": "https://api.github.com/users/pavithrasv/repos", "events_url": "https://api.github.com/users/pavithrasv/events{/privacy}", "received_events_url": "https://api.github.com/users/pavithrasv/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 15, "created_at": "2018-07-03T18:46:52Z", "updated_at": "2019-01-23T22:14:28Z", "closed_at": null, "author_association": "NONE", "body": "I will break this issue down into several code snippets each displaying a different error. @fchollet. In total 3 issues. All of these issues are only relevant to ``tf.keras`` implementation. The ``keras`` implementation works as intended.\r\n\r\n### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**: Yes\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**: Ubuntu 16.04\r\n- **TensorFlow installed from (source or binary)**: binary.\r\n- **TensorFlow version (use command below)**: 1.9.0\r\n- **Python version**: 3.6.5\r\n- **Bazel version (if compiling from source)**: n/a\r\n- **GCC/Compiler version (if compiling from source)**: n/a\r\n- **CUDA/cuDNN version**: n/a\r\n- **GPU model and memory**: n/a\r\n- **Exact command to reproduce**: n/a\r\n\r\n### Problem 1\r\nIssues with multi-input/multi-output and batch averaging. This happens for both train and validation metrics.\r\n\r\n\r\n### Source code/logs\r\n\r\n```python\r\nimport tensorflow as tf\r\n\r\nfrom tensorflow.python.keras.datasets import mnist\r\nfrom tensorflow.python.keras.models import Model\r\nfrom tensorflow.python.keras.layers import Input, Conv2D, MaxPooling2D, Flatten, Dense, UpSampling2D\r\n\r\n\r\nclass BatchCounter(tf.keras.layers.Layer):\r\n\r\n        def __init__(self, name='batch_counter', **kwargs):\r\n            super(BatchCounter, self).__init__(name=name, **kwargs)\r\n            self.stateful = True\r\n            self.batches = tf.keras.backend.variable(value=0, dtype='int32')\r\n\r\n        def reset_states(self):\r\n            tf.keras.backend.set_value(self.batches, 0)\r\n\r\n        def __call__(self, y_true, y_pred):\r\n            updates = [tf.keras.backend.update_add(self.batches, tf.keras.backend.variable(value=1, dtype='int32'))]\r\n            self.add_update(updates)\r\n            return self.batches\r\n\r\n\r\nbatch_size = 100\r\nnum_classes = 10\r\nepochs = 1\r\n\r\n# input image dimensions\r\nimg_rows, img_cols = 28, 28\r\n\r\n# Data\r\n(x_train, y_train), (x_test, y_test) = mnist.load_data()\r\nx_train = x_train.reshape(x_train.shape[0], img_rows, img_cols, 1).astype('float32') / 255\r\nx_test = x_test.reshape(x_test.shape[0], img_rows, img_cols, 1).astype('float32') / 255\r\ny_train = tf.keras.utils.to_categorical(y_train, num_classes)\r\ny_test = tf.keras.utils.to_categorical(y_test, num_classes)\r\n\r\n# Convolutional Encoder\r\ninput_img = Input(shape=(img_rows, img_cols, 1))\r\nconv_1 = Conv2D(16, (3, 3), activation='relu', padding='same')(input_img)\r\npool_1 = MaxPooling2D((2, 2), padding='same')(conv_1)\r\nconv_2 = Conv2D(8, (3, 3), activation='relu', padding='same')(pool_1)\r\npool_2 = MaxPooling2D((2, 2), padding='same')(conv_2)\r\nconv_3 = Conv2D(8, (3, 3), activation='relu', padding='same')(pool_2)\r\nencoded= MaxPooling2D((2, 2), padding='same')(conv_3)\r\n\r\n# Classification\r\nflatten = Flatten()(encoded)\r\nfc = Dense(128, activation='relu')(flatten)\r\nsoftmax = Dense(num_classes, activation='softmax', name='classification')(fc)\r\n\r\n# Decoder\r\nconv_4 = Conv2D(8, (3, 3), activation='relu', padding='same')(encoded)\r\nup_1 = UpSampling2D((2, 2))(conv_4)\r\nconv_5 = Conv2D(8, (3, 3), activation='relu', padding='same')(up_1)\r\nup_2 = UpSampling2D((2, 2))(conv_5)\r\nconv_6 = Conv2D(16, (3, 3), activation='relu')(up_2)\r\nup_3 = UpSampling2D((2, 2))(conv_6)\r\ndecoded = Conv2D(1, (3, 3), activation='sigmoid', padding='same', name='autoencoder')(up_3)\r\n\r\nmodel = Model(inputs=input_img, outputs=[softmax, decoded])\r\n\r\nmodel.compile(loss={'classification': 'categorical_crossentropy',\r\n                    'autoencoder': 'binary_crossentropy'},\r\n              loss_weights={'classification': 1.0,\r\n                            'autoencoder': 0.5},\r\n              optimizer='adam',\r\n              metrics={'classification': 'accuracy', 'autoencoder': BatchCounter()})\r\n\r\nhistory = model.fit(x_train,\r\n          {'classification': y_train, 'autoencoder': x_train},\r\n          batch_size=batch_size,\r\n          epochs=epochs,\r\n          validation_data= (x_test, {'classification': y_test, 'autoencoder': x_test}),\r\n          verbose=1)\r\n```\r\n\r\n```\r\nEpoch 1/1\r\n60000/60000 [==============================] - 41s 677us/step - loss: 0.5086 - classification_loss: 0.4051 - autoencoder_loss: 0.2069 - classification_acc: 0.8755 - autoencoder_batch_counter: 299.7983 - val_loss: 0.2001 - val_classification_loss: 0.1242 - val_autoencoder_loss: 0.1518 - val_classification_acc: 0.9596 - val_autoencoder_batch_counter: 50.1000\r\n```\r\n\r\n``autoencoder_batch_counter`` & ``val_autoencoder_batch_counter`` should always be (600, 100) respectively.  These metrics are batch averaged. This does not happen in the Keras implementation."}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20528", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20528/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20528/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20528/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/20528", "id": 338009710, "node_id": "MDU6SXNzdWUzMzgwMDk3MTA=", "number": 20528, "title": "[Feature Request] random_poisson GPU Kernel", "user": {"login": "eanschuetz", "id": 6767657, "node_id": "MDQ6VXNlcjY3Njc2NTc=", "avatar_url": "https://avatars3.githubusercontent.com/u/6767657?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eanschuetz", "html_url": "https://github.com/eanschuetz", "followers_url": "https://api.github.com/users/eanschuetz/followers", "following_url": "https://api.github.com/users/eanschuetz/following{/other_user}", "gists_url": "https://api.github.com/users/eanschuetz/gists{/gist_id}", "starred_url": "https://api.github.com/users/eanschuetz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eanschuetz/subscriptions", "organizations_url": "https://api.github.com/users/eanschuetz/orgs", "repos_url": "https://api.github.com/users/eanschuetz/repos", "events_url": "https://api.github.com/users/eanschuetz/events{/privacy}", "received_events_url": "https://api.github.com/users/eanschuetz/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1097547147, "node_id": "MDU6TGFiZWwxMDk3NTQ3MTQ3", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/comp:ops", "name": "comp:ops", "color": "0052cc", "default": false, "description": ""}, {"id": 473173272, "node_id": "MDU6TGFiZWw0NzMxNzMyNzI=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:feature", "name": "type:feature", "color": "159b2e", "default": false, "description": ""}], "state": "open", "locked": false, "assignee": {"login": "shivaniag", "id": 16565716, "node_id": "MDQ6VXNlcjE2NTY1NzE2", "avatar_url": "https://avatars1.githubusercontent.com/u/16565716?v=4", "gravatar_id": "", "url": "https://api.github.com/users/shivaniag", "html_url": "https://github.com/shivaniag", "followers_url": "https://api.github.com/users/shivaniag/followers", "following_url": "https://api.github.com/users/shivaniag/following{/other_user}", "gists_url": "https://api.github.com/users/shivaniag/gists{/gist_id}", "starred_url": "https://api.github.com/users/shivaniag/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/shivaniag/subscriptions", "organizations_url": "https://api.github.com/users/shivaniag/orgs", "repos_url": "https://api.github.com/users/shivaniag/repos", "events_url": "https://api.github.com/users/shivaniag/events{/privacy}", "received_events_url": "https://api.github.com/users/shivaniag/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "shivaniag", "id": 16565716, "node_id": "MDQ6VXNlcjE2NTY1NzE2", "avatar_url": "https://avatars1.githubusercontent.com/u/16565716?v=4", "gravatar_id": "", "url": "https://api.github.com/users/shivaniag", "html_url": "https://github.com/shivaniag", "followers_url": "https://api.github.com/users/shivaniag/followers", "following_url": "https://api.github.com/users/shivaniag/following{/other_user}", "gists_url": "https://api.github.com/users/shivaniag/gists{/gist_id}", "starred_url": "https://api.github.com/users/shivaniag/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/shivaniag/subscriptions", "organizations_url": "https://api.github.com/users/shivaniag/orgs", "repos_url": "https://api.github.com/users/shivaniag/repos", "events_url": "https://api.github.com/users/shivaniag/events{/privacy}", "received_events_url": "https://api.github.com/users/shivaniag/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 0, "created_at": "2018-07-03T18:30:06Z", "updated_at": "2019-01-23T22:13:47Z", "closed_at": null, "author_association": "NONE", "body": "### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**: N/A\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**: Arch Linux\r\n- **TensorFlow installed from (source or binary)**: Binary\r\n- **TensorFlow version (use command below)**: 1.8.0\r\n- **Python version**: 3.8\r\n- **Bazel version (if compiling from source)**: N/A\r\n- **GCC/Compiler version (if compiling from source)**: N/A\r\n- **CUDA/cuDNN version**: 9.0/7.0\r\n- **GPU model and memory**: GTX 1050 4GB\r\n- **Exact command to reproduce**: random_poisson\r\n\r\n### Describe the problem\r\n[`random_poisson` currently only has a CPU kernel and not a GPU kernel.](https://github.com/tensorflow/tensorflow/blob/master/tensorflow/core/kernels/random_poisson_op.cc#L322) [See also this Stack Overflow post for a specific manifestation of the issue.](https://stackoverflow.com/questions/50858572/tensorflows-random-poisson-only-runs-on-cpu/51159962)\r\n"}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20519", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20519/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20519/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20519/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/20519", "id": 337892399, "node_id": "MDU6SXNzdWUzMzc4OTIzOTk=", "number": 20519, "title": "[Feature Request] Graph Transform Tool support SavedModel as Input", "user": {"login": "tianyapiaozi", "id": 637568, "node_id": "MDQ6VXNlcjYzNzU2OA==", "avatar_url": "https://avatars3.githubusercontent.com/u/637568?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tianyapiaozi", "html_url": "https://github.com/tianyapiaozi", "followers_url": "https://api.github.com/users/tianyapiaozi/followers", "following_url": "https://api.github.com/users/tianyapiaozi/following{/other_user}", "gists_url": "https://api.github.com/users/tianyapiaozi/gists{/gist_id}", "starred_url": "https://api.github.com/users/tianyapiaozi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tianyapiaozi/subscriptions", "organizations_url": "https://api.github.com/users/tianyapiaozi/orgs", "repos_url": "https://api.github.com/users/tianyapiaozi/repos", "events_url": "https://api.github.com/users/tianyapiaozi/events{/privacy}", "received_events_url": "https://api.github.com/users/tianyapiaozi/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 299643928, "node_id": "MDU6TGFiZWwyOTk2NDM5Mjg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:contributions%20welcome", "name": "stat:contributions welcome", "color": "f4b400", "default": false, "description": ""}, {"id": 473173272, "node_id": "MDU6TGFiZWw0NzMxNzMyNzI=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:feature", "name": "type:feature", "color": "159b2e", "default": false, "description": ""}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2018-07-03T13:10:22Z", "updated_at": "2019-04-28T06:32:54Z", "closed_at": null, "author_association": "CONTRIBUTOR", "body": "### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**:n/a\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**: Linux CentOS 7\r\n- **TensorFlow installed from (source or binary)**: binary\r\n- **TensorFlow version (use command below)**: 1.8\r\n- **Python version**: 2.7\r\n- **Bazel version (if compiling from source)**: n/a\r\n- **GCC/Compiler version (if compiling from source)**: n/a\r\n- **CUDA/cuDNN version**: n/a\r\n- **GPU model and memory**: n/a\r\n- **Exact command to reproduce**: n/a\r\n\r\n### Describe the problem\r\nCurrently [Graph Transform Tool](https://github.com/tensorflow/tensorflow/blob/master/tensorflow/tools/graph_transforms/README.md) only support GraphDef as input. People normally save model using SavedModel or ckpt file. Maybe it would be better to support SavedModel as input.\r\n"}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20505", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20505/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20505/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20505/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/20505", "id": 337804937, "node_id": "MDU6SXNzdWUzMzc4MDQ5Mzc=", "number": 20505, "title": "[feature request] allclose", "user": {"login": "mrader1248", "id": 32457308, "node_id": "MDQ6VXNlcjMyNDU3MzA4", "avatar_url": "https://avatars1.githubusercontent.com/u/32457308?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mrader1248", "html_url": "https://github.com/mrader1248", "followers_url": "https://api.github.com/users/mrader1248/followers", "following_url": "https://api.github.com/users/mrader1248/following{/other_user}", "gists_url": "https://api.github.com/users/mrader1248/gists{/gist_id}", "starred_url": "https://api.github.com/users/mrader1248/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mrader1248/subscriptions", "organizations_url": "https://api.github.com/users/mrader1248/orgs", "repos_url": "https://api.github.com/users/mrader1248/repos", "events_url": "https://api.github.com/users/mrader1248/events{/privacy}", "received_events_url": "https://api.github.com/users/mrader1248/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1097547147, "node_id": "MDU6TGFiZWwxMDk3NTQ3MTQ3", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/comp:ops", "name": "comp:ops", "color": "0052cc", "default": false, "description": ""}, {"id": 473173272, "node_id": "MDU6TGFiZWw0NzMxNzMyNzI=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:feature", "name": "type:feature", "color": "159b2e", "default": false, "description": ""}], "state": "open", "locked": false, "assignee": {"login": "shivaniag", "id": 16565716, "node_id": "MDQ6VXNlcjE2NTY1NzE2", "avatar_url": "https://avatars1.githubusercontent.com/u/16565716?v=4", "gravatar_id": "", "url": "https://api.github.com/users/shivaniag", "html_url": "https://github.com/shivaniag", "followers_url": "https://api.github.com/users/shivaniag/followers", "following_url": "https://api.github.com/users/shivaniag/following{/other_user}", "gists_url": "https://api.github.com/users/shivaniag/gists{/gist_id}", "starred_url": "https://api.github.com/users/shivaniag/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/shivaniag/subscriptions", "organizations_url": "https://api.github.com/users/shivaniag/orgs", "repos_url": "https://api.github.com/users/shivaniag/repos", "events_url": "https://api.github.com/users/shivaniag/events{/privacy}", "received_events_url": "https://api.github.com/users/shivaniag/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "shivaniag", "id": 16565716, "node_id": "MDQ6VXNlcjE2NTY1NzE2", "avatar_url": "https://avatars1.githubusercontent.com/u/16565716?v=4", "gravatar_id": "", "url": "https://api.github.com/users/shivaniag", "html_url": "https://github.com/shivaniag", "followers_url": "https://api.github.com/users/shivaniag/followers", "following_url": "https://api.github.com/users/shivaniag/following{/other_user}", "gists_url": "https://api.github.com/users/shivaniag/gists{/gist_id}", "starred_url": "https://api.github.com/users/shivaniag/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/shivaniag/subscriptions", "organizations_url": "https://api.github.com/users/shivaniag/orgs", "repos_url": "https://api.github.com/users/shivaniag/repos", "events_url": "https://api.github.com/users/shivaniag/events{/privacy}", "received_events_url": "https://api.github.com/users/shivaniag/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 0, "created_at": "2018-07-03T08:58:01Z", "updated_at": "2019-01-23T21:46:27Z", "closed_at": null, "author_association": "NONE", "body": "### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**: no\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**: Ubuntu 14.04\r\n- **TensorFlow installed from (source or binary)**: binary\r\n- **TensorFlow version (use command below)**: 1.4\r\n- **Python version**: 2.7\r\n- **Bazel version (if compiling from source)**: N/A\r\n- **GCC/Compiler version (if compiling from source)**: N/A\r\n- **CUDA/cuDNN version**: 8.0\r\n- **GPU model and memory**: GTX 1070\r\n- **Exact command to reproduce**: N/A\r\n\r\n### Describe the problem\r\nAs far as I can see, tensorflow does not have a function like `allclose` in numpy [1]. It's not something very tricky to implement, but it would be very convenient if it's already included in tensorflow. See the code below for a possible implementation. The default values for `rtol` and `atol` are chosen as they are for the numpy function.\r\n\r\n[1] https://docs.scipy.org/doc/numpy/reference/generated/numpy.allclose.html\r\n\r\n### Source code / logs\r\n```\r\ndef allclose(x, y, rtol=1e-5, atol=1e-8):\r\n    return tf.reduce_all(tf.abs(x - y) <= tf.abs(y) * rtol + atol)\r\n```\r\n"}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20475", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20475/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20475/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20475/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/20475", "id": 337500449, "node_id": "MDU6SXNzdWUzMzc1MDA0NDk=", "number": 20475, "title": "Add a dictionary to a collection", "user": {"login": "FrancescoSaverioZuppichini", "id": 15908060, "node_id": "MDQ6VXNlcjE1OTA4MDYw", "avatar_url": "https://avatars3.githubusercontent.com/u/15908060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/FrancescoSaverioZuppichini", "html_url": "https://github.com/FrancescoSaverioZuppichini", "followers_url": "https://api.github.com/users/FrancescoSaverioZuppichini/followers", "following_url": "https://api.github.com/users/FrancescoSaverioZuppichini/following{/other_user}", "gists_url": "https://api.github.com/users/FrancescoSaverioZuppichini/gists{/gist_id}", "starred_url": "https://api.github.com/users/FrancescoSaverioZuppichini/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/FrancescoSaverioZuppichini/subscriptions", "organizations_url": "https://api.github.com/users/FrancescoSaverioZuppichini/orgs", "repos_url": "https://api.github.com/users/FrancescoSaverioZuppichini/repos", "events_url": "https://api.github.com/users/FrancescoSaverioZuppichini/events{/privacy}", "received_events_url": "https://api.github.com/users/FrancescoSaverioZuppichini/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1097547147, "node_id": "MDU6TGFiZWwxMDk3NTQ3MTQ3", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/comp:ops", "name": "comp:ops", "color": "0052cc", "default": false, "description": ""}, {"id": 473184161, "node_id": "MDU6TGFiZWw0NzMxODQxNjE=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:support", "name": "type:support", "color": "159b2e", "default": false, "description": ""}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-07-02T12:36:53Z", "updated_at": "2020-02-08T01:14:17Z", "closed_at": null, "author_association": "NONE", "body": "### System information\r\nOS Platform and Distribution Mac OS X latest\r\nTensorFlow installed from pip\r\nTensorFlow version 1.8\r\nBazel version N/A\r\nCUDA/cuDNN version N/A\r\nGPU model and memory N/A\r\nExact command to reproduce see code below\r\n\r\n### Describe the problem\r\nDear All,\r\n\r\nI am looking for a way to store and retrieve a dictionary of tensors. If I try to pass a dict to `ft.add_to_collection` I get a warning and when I load the graph again the collection does not exist. This is a simple example:\r\n\r\n```\r\nimport tensorflow as tf\r\ntf.reset_default_graph()\r\n\r\nfoo  = tf.Variable([1,2,3], dtype=tf.float32)\r\nboo  = tf.Variable([1,2,3], dtype=tf.float32)\r\n\r\ntf.add_to_collection('test', {'foo' : foo, 'boo': [boo] })\r\ntf.add_to_collection('test2', foo)\r\n\r\nwith tf.Session() as sess:\r\n    saver = tf.train.Saver()\r\n    sess.run(tf.global_variables_initializer())\r\n    saver.save(sess,'save/model.ckpt')\r\n\r\ntf.reset_default_graph() # reset so we are sure to load a new graph\r\n\r\nwith tf.Session() as sess:\r\n    saver = tf.train.import_meta_graph(\"save/model.ckpt.meta\")\r\n    saver.restore(sess,'save/model.ckpt')\r\n    graph = tf.get_default_graph()\r\n    print(graph.get_collection('test'))\r\n    print(graph.get_collection('test2'))\r\n```\r\n\r\nOutput:\r\n\r\n```\r\nWARNING:tensorflow:Error encountered when serializing test.\r\nType is unsupported, or the types of the items don't match field type in CollectionDef.\r\n'dict' object has no attribute 'name'\r\nINFO:tensorflow:Restoring parameters from save/model.ckpt\r\n[]\r\n[<tf.Tensor 'Variable:0' shape=(3,) dtype=float32_ref>]\r\n```\r\n\r\nAs you can see, after loading the graph, the `test` collection is empty.\r\n\r\nIs there any way to properly store/retrieve a dictionary that maps tensors? \r\n"}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20464", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20464/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20464/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20464/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/20464", "id": 337336768, "node_id": "MDU6SXNzdWUzMzczMzY3Njg=", "number": 20464, "title": "[Feature request] Allow `tf.estimator.train_and_evaluate` to evaluate on multiple datasets", "user": {"login": "joe-antognini", "id": 7061933, "node_id": "MDQ6VXNlcjcwNjE5MzM=", "avatar_url": "https://avatars1.githubusercontent.com/u/7061933?v=4", "gravatar_id": "", "url": "https://api.github.com/users/joe-antognini", "html_url": "https://github.com/joe-antognini", "followers_url": "https://api.github.com/users/joe-antognini/followers", "following_url": "https://api.github.com/users/joe-antognini/following{/other_user}", "gists_url": "https://api.github.com/users/joe-antognini/gists{/gist_id}", "starred_url": "https://api.github.com/users/joe-antognini/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/joe-antognini/subscriptions", "organizations_url": "https://api.github.com/users/joe-antognini/orgs", "repos_url": "https://api.github.com/users/joe-antognini/repos", "events_url": "https://api.github.com/users/joe-antognini/events{/privacy}", "received_events_url": "https://api.github.com/users/joe-antognini/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1097545817, "node_id": "MDU6TGFiZWwxMDk3NTQ1ODE3", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/comp:apis", "name": "comp:apis", "color": "0052cc", "default": false, "description": ""}, {"id": 404586594, "node_id": "MDU6TGFiZWw0MDQ1ODY1OTQ=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:awaiting%20tensorflower", "name": "stat:awaiting tensorflower", "color": "f4b400", "default": false, "description": ""}, {"id": 473173272, "node_id": "MDU6TGFiZWw0NzMxNzMyNzI=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:feature", "name": "type:feature", "color": "159b2e", "default": false, "description": ""}], "state": "open", "locked": false, "assignee": {"login": "karmel", "id": 667809, "node_id": "MDQ6VXNlcjY2NzgwOQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/667809?v=4", "gravatar_id": "", "url": "https://api.github.com/users/karmel", "html_url": "https://github.com/karmel", "followers_url": "https://api.github.com/users/karmel/followers", "following_url": "https://api.github.com/users/karmel/following{/other_user}", "gists_url": "https://api.github.com/users/karmel/gists{/gist_id}", "starred_url": "https://api.github.com/users/karmel/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/karmel/subscriptions", "organizations_url": "https://api.github.com/users/karmel/orgs", "repos_url": "https://api.github.com/users/karmel/repos", "events_url": "https://api.github.com/users/karmel/events{/privacy}", "received_events_url": "https://api.github.com/users/karmel/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "karmel", "id": 667809, "node_id": "MDQ6VXNlcjY2NzgwOQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/667809?v=4", "gravatar_id": "", "url": "https://api.github.com/users/karmel", "html_url": "https://github.com/karmel", "followers_url": "https://api.github.com/users/karmel/followers", "following_url": "https://api.github.com/users/karmel/following{/other_user}", "gists_url": "https://api.github.com/users/karmel/gists{/gist_id}", "starred_url": "https://api.github.com/users/karmel/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/karmel/subscriptions", "organizations_url": "https://api.github.com/users/karmel/orgs", "repos_url": "https://api.github.com/users/karmel/repos", "events_url": "https://api.github.com/users/karmel/events{/privacy}", "received_events_url": "https://api.github.com/users/karmel/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 5, "created_at": "2018-07-02T00:33:19Z", "updated_at": "2019-02-23T20:39:56Z", "closed_at": null, "author_association": "NONE", "body": "### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**: No.\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**: Ubuntu 16.04\r\n- **TensorFlow installed from (source or binary)**: Binary\r\n- **TensorFlow version (use command below)**: 1.8.0\r\n- **Python version**: 2.7.12\r\n- **Bazel version (if compiling from source)**: n/a\r\n- **GCC/Compiler version (if compiling from source)**: n/a\r\n- **CUDA/cuDNN version**: n/a\r\n- **GPU model and memory**: n/a\r\n- **Exact command to reproduce**: n/a\r\n\r\n### Describe the problem\r\n\r\nCurrently `tf.estimator.train_and_evaluate` makes it easy to use an `Estimator` to perform both training and evaluation, possibly in a distributed environment.  However, this function only supports a single evaluation dataset.  This makes the function suboptimal because we oftentimes want to evaluate on both the training and the validation set in order to get a sense for the amount of overfitting that is happening.  It would be ideal if we could perhaps pass a list of `EvalSpec` objects to `train_and_evaluate`."}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20462", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20462/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20462/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20462/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/20462", "id": 337335494, "node_id": "MDU6SXNzdWUzMzczMzU0OTQ=", "number": 20462, "title": "[Feature Request] Exponential Integral function Ei", "user": {"login": "robertmaxton42", "id": 13130661, "node_id": "MDQ6VXNlcjEzMTMwNjYx", "avatar_url": "https://avatars2.githubusercontent.com/u/13130661?v=4", "gravatar_id": "", "url": "https://api.github.com/users/robertmaxton42", "html_url": "https://github.com/robertmaxton42", "followers_url": "https://api.github.com/users/robertmaxton42/followers", "following_url": "https://api.github.com/users/robertmaxton42/following{/other_user}", "gists_url": "https://api.github.com/users/robertmaxton42/gists{/gist_id}", "starred_url": "https://api.github.com/users/robertmaxton42/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/robertmaxton42/subscriptions", "organizations_url": "https://api.github.com/users/robertmaxton42/orgs", "repos_url": "https://api.github.com/users/robertmaxton42/repos", "events_url": "https://api.github.com/users/robertmaxton42/events{/privacy}", "received_events_url": "https://api.github.com/users/robertmaxton42/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 299643928, "node_id": "MDU6TGFiZWwyOTk2NDM5Mjg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:contributions%20welcome", "name": "stat:contributions welcome", "color": "f4b400", "default": false, "description": ""}, {"id": 473173272, "node_id": "MDU6TGFiZWw0NzMxNzMyNzI=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:feature", "name": "type:feature", "color": "159b2e", "default": false, "description": ""}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2018-07-02T00:17:38Z", "updated_at": "2019-01-23T21:49:32Z", "closed_at": null, "author_association": "NONE", "body": "No form because it's not a bug. -- Well, I assume it isn't a bug. As it happens, while Tensorflow does implement the log-gamma and regularized incomplete gamma functions, as far as I know no combination of provided functions can be used to obtain the exponential integral function Ei (it's a 0/0 problem for the most part). As far as I know, my only recourse at this point is writing a custom op and gradient with SciPy's expi function. It'd be cool if that were addressed in the next version.\r\n\r\nThanks!"}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20461", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20461/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20461/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20461/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/20461", "id": 337333917, "node_id": "MDU6SXNzdWUzMzczMzM5MTc=", "number": 20461, "title": "[Feature Request] Inverse Wishart Distribution", "user": {"login": "chengyu2", "id": 3723492, "node_id": "MDQ6VXNlcjM3MjM0OTI=", "avatar_url": "https://avatars1.githubusercontent.com/u/3723492?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chengyu2", "html_url": "https://github.com/chengyu2", "followers_url": "https://api.github.com/users/chengyu2/followers", "following_url": "https://api.github.com/users/chengyu2/following{/other_user}", "gists_url": "https://api.github.com/users/chengyu2/gists{/gist_id}", "starred_url": "https://api.github.com/users/chengyu2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chengyu2/subscriptions", "organizations_url": "https://api.github.com/users/chengyu2/orgs", "repos_url": "https://api.github.com/users/chengyu2/repos", "events_url": "https://api.github.com/users/chengyu2/events{/privacy}", "received_events_url": "https://api.github.com/users/chengyu2/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1097547147, "node_id": "MDU6TGFiZWwxMDk3NTQ3MTQ3", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/comp:ops", "name": "comp:ops", "color": "0052cc", "default": false, "description": ""}, {"id": 299643928, "node_id": "MDU6TGFiZWwyOTk2NDM5Mjg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:contributions%20welcome", "name": "stat:contributions welcome", "color": "f4b400", "default": false, "description": ""}, {"id": 473173272, "node_id": "MDU6TGFiZWw0NzMxNzMyNzI=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:feature", "name": "type:feature", "color": "159b2e", "default": false, "description": ""}], "state": "open", "locked": false, "assignee": {"login": "bignamehyp", "id": 3474655, "node_id": "MDQ6VXNlcjM0NzQ2NTU=", "avatar_url": "https://avatars2.githubusercontent.com/u/3474655?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bignamehyp", "html_url": "https://github.com/bignamehyp", "followers_url": "https://api.github.com/users/bignamehyp/followers", "following_url": "https://api.github.com/users/bignamehyp/following{/other_user}", "gists_url": "https://api.github.com/users/bignamehyp/gists{/gist_id}", "starred_url": "https://api.github.com/users/bignamehyp/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bignamehyp/subscriptions", "organizations_url": "https://api.github.com/users/bignamehyp/orgs", "repos_url": "https://api.github.com/users/bignamehyp/repos", "events_url": "https://api.github.com/users/bignamehyp/events{/privacy}", "received_events_url": "https://api.github.com/users/bignamehyp/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "bignamehyp", "id": 3474655, "node_id": "MDQ6VXNlcjM0NzQ2NTU=", "avatar_url": "https://avatars2.githubusercontent.com/u/3474655?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bignamehyp", "html_url": "https://github.com/bignamehyp", "followers_url": "https://api.github.com/users/bignamehyp/followers", "following_url": "https://api.github.com/users/bignamehyp/following{/other_user}", "gists_url": "https://api.github.com/users/bignamehyp/gists{/gist_id}", "starred_url": "https://api.github.com/users/bignamehyp/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bignamehyp/subscriptions", "organizations_url": "https://api.github.com/users/bignamehyp/orgs", "repos_url": "https://api.github.com/users/bignamehyp/repos", "events_url": "https://api.github.com/users/bignamehyp/events{/privacy}", "received_events_url": "https://api.github.com/users/bignamehyp/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 3, "created_at": "2018-07-01T23:56:37Z", "updated_at": "2019-03-02T11:00:08Z", "closed_at": null, "author_association": "NONE", "body": "Mathematically, the InvWishart(X) = Wishart(X^-1)\r\n\r\nSince there is already InverseGamma in tf.contrib.distributions, it should be straightforward to implement InverseWishart. \r\n\r\n"}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20421", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20421/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20421/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20421/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/20421", "id": 337071183, "node_id": "MDU6SXNzdWUzMzcwNzExODM=", "number": 20421, "title": "Guidelines to have a working C API (libtensorflow.so) on FreeBSD 11.1", "user": {"login": "jjourdin", "id": 7642198, "node_id": "MDQ6VXNlcjc2NDIxOTg=", "avatar_url": "https://avatars3.githubusercontent.com/u/7642198?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jjourdin", "html_url": "https://github.com/jjourdin", "followers_url": "https://api.github.com/users/jjourdin/followers", "following_url": "https://api.github.com/users/jjourdin/following{/other_user}", "gists_url": "https://api.github.com/users/jjourdin/gists{/gist_id}", "starred_url": "https://api.github.com/users/jjourdin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jjourdin/subscriptions", "organizations_url": "https://api.github.com/users/jjourdin/orgs", "repos_url": "https://api.github.com/users/jjourdin/repos", "events_url": "https://api.github.com/users/jjourdin/events{/privacy}", "received_events_url": "https://api.github.com/users/jjourdin/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 299643928, "node_id": "MDU6TGFiZWwyOTk2NDM5Mjg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:contributions%20welcome", "name": "stat:contributions welcome", "color": "f4b400", "default": false, "description": ""}, {"id": 473173351, "node_id": "MDU6TGFiZWw0NzMxNzMzNTE=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:build/install", "name": "type:build/install", "color": "159b2e", "default": false, "description": ""}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-06-29T17:02:43Z", "updated_at": "2019-03-01T16:08:28Z", "closed_at": null, "author_association": "NONE", "body": "### System information\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**: FreeBSD-11.1\r\n- **TensorFlow installed from (source or binary)**: source\r\n- **TensorFlow version (use command below)**: github branch r1.9\r\n- **Bazel version (if compiling from source)**: 0.15.0\r\n- **GCC/Compiler version (if compiling from source)**: clang (llvm40)\r\n- **Exact command to reproduce**: bazel build //tensorflow:libtensorflow.so\r\n\r\n### Describe the problem\r\nTensorflow does not compile out of the box on FreeBSD-11.1 systems. I provide here the workarounds and adjustements i've done for compiling it. This is not perfect but I can run TensorFlow C programs on FreeBSD without problem. \r\n\r\nI hope it can be useful for someone.\r\n\r\n### Source code / logs\r\n\r\nThe following `static_cast<int64>` generates an error at compile time in tensorflow/core/platform/env.cc, line 350: `int32 tid = static_cast<int32>(static_cast<int64>(pthread_self()));`\r\n\r\nstatic_cast from 'pthread_t' (aka 'pthread *') to 'int64' (aka 'long long') is not allowed\r\n\r\nAs a workaround I used:\r\n`int32 tid = (int32)((int64)(pthread_self()));` \r\n\r\nA non-existing header file on FreeBSD is included in tensorflow/core/platform/posix/posix_file_system.cc, line 22:\r\n```\r\n#if !defined(__APPLE__)\r\n#include <sys/sendfile.h>\r\n#endif\r\n```\r\nI replaced this code with:\r\n```\r\n#if defined(__linux__) && !defined(__ANDROID__)\r\n#include <sys/sendfile.h>\r\n#endif\r\n```\r\n\r\nAt link time there are undefined references to backtrace() and backtrace_symbols_fd() functions in tensorflow/core/platform/*. This is because the **LD flag `-lexecinfo` is missing in linker options**\r\n\r\nAt last, under FreeBSD, the \"libdl\" library does not exists. So the **LD flag `-ldl` should be removed from linker options**.\r\n\r\n"}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20407", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20407/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20407/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20407/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/20407", "id": 336932810, "node_id": "MDU6SXNzdWUzMzY5MzI4MTA=", "number": 20407, "title": "fused_batch_norm's gradient implementation is incomplete", "user": {"login": "ppwwyyxx", "id": 1381301, "node_id": "MDQ6VXNlcjEzODEzMDE=", "avatar_url": "https://avatars3.githubusercontent.com/u/1381301?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ppwwyyxx", "html_url": "https://github.com/ppwwyyxx", "followers_url": "https://api.github.com/users/ppwwyyxx/followers", "following_url": "https://api.github.com/users/ppwwyyxx/following{/other_user}", "gists_url": "https://api.github.com/users/ppwwyyxx/gists{/gist_id}", "starred_url": "https://api.github.com/users/ppwwyyxx/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ppwwyyxx/subscriptions", "organizations_url": "https://api.github.com/users/ppwwyyxx/orgs", "repos_url": "https://api.github.com/users/ppwwyyxx/repos", "events_url": "https://api.github.com/users/ppwwyyxx/events{/privacy}", "received_events_url": "https://api.github.com/users/ppwwyyxx/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1097547147, "node_id": "MDU6TGFiZWwxMDk3NTQ3MTQ3", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/comp:ops", "name": "comp:ops", "color": "0052cc", "default": false, "description": ""}, {"id": 404586594, "node_id": "MDU6TGFiZWw0MDQ1ODY1OTQ=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:awaiting%20tensorflower", "name": "stat:awaiting tensorflower", "color": "f4b400", "default": false, "description": ""}, {"id": 473172988, "node_id": "MDU6TGFiZWw0NzMxNzI5ODg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:bug", "name": "type:bug", "color": "159b2e", "default": false, "description": ""}], "state": "open", "locked": false, "assignee": {"login": "rmlarsen", "id": 16907534, "node_id": "MDQ6VXNlcjE2OTA3NTM0", "avatar_url": "https://avatars2.githubusercontent.com/u/16907534?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rmlarsen", "html_url": "https://github.com/rmlarsen", "followers_url": "https://api.github.com/users/rmlarsen/followers", "following_url": "https://api.github.com/users/rmlarsen/following{/other_user}", "gists_url": "https://api.github.com/users/rmlarsen/gists{/gist_id}", "starred_url": "https://api.github.com/users/rmlarsen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rmlarsen/subscriptions", "organizations_url": "https://api.github.com/users/rmlarsen/orgs", "repos_url": "https://api.github.com/users/rmlarsen/repos", "events_url": "https://api.github.com/users/rmlarsen/events{/privacy}", "received_events_url": "https://api.github.com/users/rmlarsen/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "rmlarsen", "id": 16907534, "node_id": "MDQ6VXNlcjE2OTA3NTM0", "avatar_url": "https://avatars2.githubusercontent.com/u/16907534?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rmlarsen", "html_url": "https://github.com/rmlarsen", "followers_url": "https://api.github.com/users/rmlarsen/followers", "following_url": "https://api.github.com/users/rmlarsen/following{/other_user}", "gists_url": "https://api.github.com/users/rmlarsen/gists{/gist_id}", "starred_url": "https://api.github.com/users/rmlarsen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rmlarsen/subscriptions", "organizations_url": "https://api.github.com/users/rmlarsen/orgs", "repos_url": "https://api.github.com/users/rmlarsen/repos", "events_url": "https://api.github.com/users/rmlarsen/events{/privacy}", "received_events_url": "https://api.github.com/users/rmlarsen/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 2, "created_at": "2018-06-29T09:41:39Z", "updated_at": "2019-01-23T21:57:14Z", "closed_at": null, "author_association": "CONTRIBUTOR", "body": "### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**:N/A\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**:N/A\r\n- **TensorFlow installed from (source or binary)**:N/A\r\n- **TensorFlow version (use command below)**:N/A\r\n- **Python version**: N/A\r\n- **Bazel version (if compiling from source)**:N/A\r\n- **GCC/Compiler version (if compiling from source)**:N/A\r\n- **CUDA/cuDNN version**:N/A\r\n- **GPU model and memory**:N/A\r\n- **Exact command to reproduce**:N/A\r\n\r\nWhen `is_training=True`, the op looks like:\r\n```python\r\ny, batch_mean, batch_var = tf.nn.fused_batch_norm(x, scale, offset)\r\n```\r\nwhere `y`, `batch_mean` , and `batch_var` all depend on `x`. However the gradients of `batch_mean` and `batch_var` on `x` are currently None.\r\n\r\nWhen `is_training=False`, the op looks like:\r\n```python\r\ny, _, _ = tf.nn.fused_batch_norm(x, scale, offset, mean, variance)\r\n```\r\nwhere `y` depend on all the inputs. However currently the gradients of `y` on `mean` and `variance` is None.\r\n\r\nBoth cases are not commonly used in practice, but mathematically there should be gradients."}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20405", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20405/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20405/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20405/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/20405", "id": 336912390, "node_id": "MDU6SXNzdWUzMzY5MTIzOTA=", "number": 20405, "title": " only supports 'NHWC' format under the GPU mode ", "user": {"login": "v-yunbin", "id": 38179632, "node_id": "MDQ6VXNlcjM4MTc5NjMy", "avatar_url": "https://avatars1.githubusercontent.com/u/38179632?v=4", "gravatar_id": "", "url": "https://api.github.com/users/v-yunbin", "html_url": "https://github.com/v-yunbin", "followers_url": "https://api.github.com/users/v-yunbin/followers", "following_url": "https://api.github.com/users/v-yunbin/following{/other_user}", "gists_url": "https://api.github.com/users/v-yunbin/gists{/gist_id}", "starred_url": "https://api.github.com/users/v-yunbin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/v-yunbin/subscriptions", "organizations_url": "https://api.github.com/users/v-yunbin/orgs", "repos_url": "https://api.github.com/users/v-yunbin/repos", "events_url": "https://api.github.com/users/v-yunbin/events{/privacy}", "received_events_url": "https://api.github.com/users/v-yunbin/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 299643928, "node_id": "MDU6TGFiZWwyOTk2NDM5Mjg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:contributions%20welcome", "name": "stat:contributions welcome", "color": "f4b400", "default": false, "description": ""}, {"id": 473173272, "node_id": "MDU6TGFiZWw0NzMxNzMyNzI=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:feature", "name": "type:feature", "color": "159b2e", "default": false, "description": ""}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-06-29T08:38:00Z", "updated_at": "2018-07-02T01:58:27Z", "closed_at": null, "author_association": "NONE", "body": "I use tensorflow 1.8 version.\r\nwe konw the gpu should support both 'NHWC' and 'NCHW' but i get bellow errors under GPU mode:\r\n\r\nConv2DCustomBackpropInputOp only supports NHWC.\r\n\t [[Node: model_1/inference/conv2d_transpose/conv2d_transpose = Conv2DBackpropInput[T=DT_FLOAT, data_format=\"NCHW\", dilations=[1, 1, 1, 1], padding=\"SAME\", strides=[1, 1, 1, 16], **use_cudnn_on_gpu=true**, _device=\"/job:localhost/replica:0/task:0/device:CPU:0\"](model_1/inference/conv2d_transpose/stack, model/inference/conv2d_transpose/kernel/read, model_1/inference/ExpandDims_1)]]"}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20402", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20402/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20402/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20402/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/20402", "id": 336880937, "node_id": "MDU6SXNzdWUzMzY4ODA5Mzc=", "number": 20402, "title": "Feature request: non-stateful scatter_nd_min and scatter_nd_max", "user": {"login": "x10000year", "id": 22427780, "node_id": "MDQ6VXNlcjIyNDI3Nzgw", "avatar_url": "https://avatars0.githubusercontent.com/u/22427780?v=4", "gravatar_id": "", "url": "https://api.github.com/users/x10000year", "html_url": "https://github.com/x10000year", "followers_url": "https://api.github.com/users/x10000year/followers", "following_url": "https://api.github.com/users/x10000year/following{/other_user}", "gists_url": "https://api.github.com/users/x10000year/gists{/gist_id}", "starred_url": "https://api.github.com/users/x10000year/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/x10000year/subscriptions", "organizations_url": "https://api.github.com/users/x10000year/orgs", "repos_url": "https://api.github.com/users/x10000year/repos", "events_url": "https://api.github.com/users/x10000year/events{/privacy}", "received_events_url": "https://api.github.com/users/x10000year/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1256103877, "node_id": "MDU6TGFiZWwxMjU2MTAzODc3", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/good%20first%20issue", "name": "good first issue", "color": "c4ef8b", "default": true, "description": "Good first issue for newcomers."}, {"id": 299643928, "node_id": "MDU6TGFiZWwyOTk2NDM5Mjg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:contributions%20welcome", "name": "stat:contributions welcome", "color": "f4b400", "default": false, "description": ""}, {"id": 473173272, "node_id": "MDU6TGFiZWw0NzMxNzMyNzI=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:feature", "name": "type:feature", "color": "159b2e", "default": false, "description": ""}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2018-06-29T06:39:42Z", "updated_at": "2019-03-20T07:27:16Z", "closed_at": null, "author_association": "NONE", "body": "Currently tf.scatter_min and tf.scatter_max, unlike tf.scatter_nd, accept a variable ref input and are stateful op. It would be great if there are a non-stateful version of tf.scatter_min and tf.scatter_max that can back-propagate gradients to their inputs.\r\n\r\n@facaiy @drpngx"}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20399", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20399/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20399/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20399/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/20399", "id": 336849635, "node_id": "MDU6SXNzdWUzMzY4NDk2MzU=", "number": 20399, "title": "Feature request: A Layer object wrapping multiple Layer objects", "user": {"login": "varshiths", "id": 16670632, "node_id": "MDQ6VXNlcjE2NjcwNjMy", "avatar_url": "https://avatars2.githubusercontent.com/u/16670632?v=4", "gravatar_id": "", "url": "https://api.github.com/users/varshiths", "html_url": "https://github.com/varshiths", "followers_url": "https://api.github.com/users/varshiths/followers", "following_url": "https://api.github.com/users/varshiths/following{/other_user}", "gists_url": "https://api.github.com/users/varshiths/gists{/gist_id}", "starred_url": "https://api.github.com/users/varshiths/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/varshiths/subscriptions", "organizations_url": "https://api.github.com/users/varshiths/orgs", "repos_url": "https://api.github.com/users/varshiths/repos", "events_url": "https://api.github.com/users/varshiths/events{/privacy}", "received_events_url": "https://api.github.com/users/varshiths/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 404586594, "node_id": "MDU6TGFiZWw0MDQ1ODY1OTQ=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:awaiting%20tensorflower", "name": "stat:awaiting tensorflower", "color": "f4b400", "default": false, "description": ""}, {"id": 473173272, "node_id": "MDU6TGFiZWw0NzMxNzMyNzI=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:feature", "name": "type:feature", "color": "159b2e", "default": false, "description": ""}], "state": "open", "locked": false, "assignee": {"login": "bignamehyp", "id": 3474655, "node_id": "MDQ6VXNlcjM0NzQ2NTU=", "avatar_url": "https://avatars2.githubusercontent.com/u/3474655?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bignamehyp", "html_url": "https://github.com/bignamehyp", "followers_url": "https://api.github.com/users/bignamehyp/followers", "following_url": "https://api.github.com/users/bignamehyp/following{/other_user}", "gists_url": "https://api.github.com/users/bignamehyp/gists{/gist_id}", "starred_url": "https://api.github.com/users/bignamehyp/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bignamehyp/subscriptions", "organizations_url": "https://api.github.com/users/bignamehyp/orgs", "repos_url": "https://api.github.com/users/bignamehyp/repos", "events_url": "https://api.github.com/users/bignamehyp/events{/privacy}", "received_events_url": "https://api.github.com/users/bignamehyp/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "bignamehyp", "id": 3474655, "node_id": "MDQ6VXNlcjM0NzQ2NTU=", "avatar_url": "https://avatars2.githubusercontent.com/u/3474655?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bignamehyp", "html_url": "https://github.com/bignamehyp", "followers_url": "https://api.github.com/users/bignamehyp/followers", "following_url": "https://api.github.com/users/bignamehyp/following{/other_user}", "gists_url": "https://api.github.com/users/bignamehyp/gists{/gist_id}", "starred_url": "https://api.github.com/users/bignamehyp/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bignamehyp/subscriptions", "organizations_url": "https://api.github.com/users/bignamehyp/orgs", "repos_url": "https://api.github.com/users/bignamehyp/repos", "events_url": "https://api.github.com/users/bignamehyp/events{/privacy}", "received_events_url": "https://api.github.com/users/bignamehyp/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 3, "created_at": "2018-06-29T03:21:31Z", "updated_at": "2018-12-07T18:51:30Z", "closed_at": null, "author_association": "NONE", "body": "`tf.contrib.seq2seq.BasicDecoder` module allows provision for a single output layer, to modify the output of the RNN before proceeding to further sample.\r\n\r\nIn my particular application, I require application of multiple layers.\r\nThis is not possible as far as I have checked.\r\n\r\nA `MultiLayer` class could be implemented, similar to the `tf.contrib.rnn.MultiRNNCell`.\r\nThis class could wrap multiple `Layer` objects and apply them on `call`."}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20382", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20382/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20382/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20382/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/20382", "id": 336724761, "node_id": "MDU6SXNzdWUzMzY3MjQ3NjE=", "number": 20382, "title": "TypeError: 'InvalidArgumentError' object is not iterable", "user": {"login": "whatdhack", "id": 12969966, "node_id": "MDQ6VXNlcjEyOTY5OTY2", "avatar_url": "https://avatars3.githubusercontent.com/u/12969966?v=4", "gravatar_id": "", "url": "https://api.github.com/users/whatdhack", "html_url": "https://github.com/whatdhack", "followers_url": "https://api.github.com/users/whatdhack/followers", "following_url": "https://api.github.com/users/whatdhack/following{/other_user}", "gists_url": "https://api.github.com/users/whatdhack/gists{/gist_id}", "starred_url": "https://api.github.com/users/whatdhack/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/whatdhack/subscriptions", "organizations_url": "https://api.github.com/users/whatdhack/orgs", "repos_url": "https://api.github.com/users/whatdhack/repos", "events_url": "https://api.github.com/users/whatdhack/events{/privacy}", "received_events_url": "https://api.github.com/users/whatdhack/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 473184161, "node_id": "MDU6TGFiZWw0NzMxODQxNjE=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:support", "name": "type:support", "color": "159b2e", "default": false, "description": ""}], "state": "open", "locked": false, "assignee": {"login": "shivaniag", "id": 16565716, "node_id": "MDQ6VXNlcjE2NTY1NzE2", "avatar_url": "https://avatars1.githubusercontent.com/u/16565716?v=4", "gravatar_id": "", "url": "https://api.github.com/users/shivaniag", "html_url": "https://github.com/shivaniag", "followers_url": "https://api.github.com/users/shivaniag/followers", "following_url": "https://api.github.com/users/shivaniag/following{/other_user}", "gists_url": "https://api.github.com/users/shivaniag/gists{/gist_id}", "starred_url": "https://api.github.com/users/shivaniag/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/shivaniag/subscriptions", "organizations_url": "https://api.github.com/users/shivaniag/orgs", "repos_url": "https://api.github.com/users/shivaniag/repos", "events_url": "https://api.github.com/users/shivaniag/events{/privacy}", "received_events_url": "https://api.github.com/users/shivaniag/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "shivaniag", "id": 16565716, "node_id": "MDQ6VXNlcjE2NTY1NzE2", "avatar_url": "https://avatars1.githubusercontent.com/u/16565716?v=4", "gravatar_id": "", "url": "https://api.github.com/users/shivaniag", "html_url": "https://github.com/shivaniag", "followers_url": "https://api.github.com/users/shivaniag/followers", "following_url": "https://api.github.com/users/shivaniag/following{/other_user}", "gists_url": "https://api.github.com/users/shivaniag/gists{/gist_id}", "starred_url": "https://api.github.com/users/shivaniag/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/shivaniag/subscriptions", "organizations_url": "https://api.github.com/users/shivaniag/orgs", "repos_url": "https://api.github.com/users/shivaniag/repos", "events_url": "https://api.github.com/users/shivaniag/events{/privacy}", "received_events_url": "https://api.github.com/users/shivaniag/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 3, "created_at": "2018-06-28T18:09:19Z", "updated_at": "2019-01-23T21:58:46Z", "closed_at": null, "author_association": "NONE", "body": "Occasionally encounter   issues like the above during training.  Tensorflow does not provide any information about  where is it is happening. For example  take a look at the following ?  \r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \"networks.py\", line 586, in <module>\r\n    main()\r\n  File \"networks.py\", line 572, in main\r\n    x, y, z = train_dataset_batch ()\r\n  File \"networks.py\", line 505, in train_dataset_batch\r\n    loss_f, train_op_f, summary_str = sess.run([ loss, train_op, summaries_op], feed_dict=fd)\r\nTypeError: 'InvalidArgumentError' object is not iterable\r\n```\r\n\r\n How can anyone debug this ?\r\n"}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20369", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20369/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20369/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20369/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/20369", "id": 336504633, "node_id": "MDU6SXNzdWUzMzY1MDQ2MzM=", "number": 20369, "title": "No registered 'NotEqual' OpKernel for GPU for INT32 type (but other types are fine).", "user": {"login": "David-Mao", "id": 12476624, "node_id": "MDQ6VXNlcjEyNDc2NjI0", "avatar_url": "https://avatars3.githubusercontent.com/u/12476624?v=4", "gravatar_id": "", "url": "https://api.github.com/users/David-Mao", "html_url": "https://github.com/David-Mao", "followers_url": "https://api.github.com/users/David-Mao/followers", "following_url": "https://api.github.com/users/David-Mao/following{/other_user}", "gists_url": "https://api.github.com/users/David-Mao/gists{/gist_id}", "starred_url": "https://api.github.com/users/David-Mao/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/David-Mao/subscriptions", "organizations_url": "https://api.github.com/users/David-Mao/orgs", "repos_url": "https://api.github.com/users/David-Mao/repos", "events_url": "https://api.github.com/users/David-Mao/events{/privacy}", "received_events_url": "https://api.github.com/users/David-Mao/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1097547147, "node_id": "MDU6TGFiZWwxMDk3NTQ3MTQ3", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/comp:ops", "name": "comp:ops", "color": "0052cc", "default": false, "description": ""}, {"id": 473184161, "node_id": "MDU6TGFiZWw0NzMxODQxNjE=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:support", "name": "type:support", "color": "159b2e", "default": false, "description": ""}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2018-06-28T07:28:35Z", "updated_at": "2020-02-08T01:14:20Z", "closed_at": null, "author_association": "NONE", "body": "### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**:\r\nYes\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**:\r\nLinux 4.13.0-45-generic #50-Ubuntu SMP Wed May 30 08:23:18 UTC 2018 x86_64 x86_64 x86_64 GNU/Linux\r\nVERSION=\"17.10 (Artful Aardvark)\"\r\nVERSION_ID=\"17.10\"\r\nVERSION_CODENAME=artful\r\n\r\n- **TensorFlow installed from (source or binary)**:\r\nbinary\r\n- **TensorFlow version (use command below)**:\r\n1.8\r\n- **Python version**: \r\n2.7\r\n- **Bazel version (if compiling from source)**:\r\nN/A\r\n- **GCC/Compiler version (if compiling from source)**:\r\nN/A\r\n- **CUDA/cuDNN version**:\r\nCUDA8.0 cuDNN9.0\r\n- **GPU model and memory**:\r\nTesla K80 10762 MB\r\n- **Exact command to reproduce**:\r\nSee below\r\n\r\n\r\n### Describe the problem\r\n------------------------\r\n\r\nWhen I run tf.not_equal under GPU, I got this error msg:\r\n\r\n> tensorflow.python.framework.errors_impl.NotFoundError: No registered 'NotEqual' OpKernel for GPU devices compatible with node NotEqual = NotEqual[T=DT_INT32](dummy_input, dummy_input)\r\n> \t (OpKernel was found, but attributes didn't match)\r\n> \t.  Registered:  device='CPU'; T in [DT_BOOL]\r\n>   device='CPU'; T in [DT_STRING]\r\n>   device='CPU'; T in [DT_COMPLEX128]\r\n>   device='CPU'; T in [DT_COMPLEX64]\r\n>   device='CPU'; T in [DT_INT64]\r\n>   device='CPU'; T in [DT_INT32]\r\n>   device='CPU'; T in [DT_INT16]\r\n>   device='CPU'; T in [DT_INT8]\r\n>   device='CPU'; T in [DT_UINT8]\r\n>   device='CPU'; T in [DT_DOUBLE]\r\n>   device='CPU'; T in [DT_HALF]\r\n>   device='CPU'; T in [DT_FLOAT]\r\n>   device='GPU'; T in [DT_BOOL]\r\n>   device='GPU'; T in [DT_COMPLEX128]\r\n>   device='GPU'; T in [DT_COMPLEX64]\r\n>   device='GPU'; T in [DT_INT64]\r\n>   device='GPU'; T in [DT_INT16]\r\n>   device='GPU'; T in [DT_INT8]\r\n>   device='GPU'; T in [DT_UINT8]\r\n>   device='GPU'; T in [DT_DOUBLE]\r\n>   device='GPU'; T in [DT_HALF]\r\n>   device='GPU'; T in [DT_FLOAT]\r\n>  [Op:NotEqual]\r\n>\r\nIt seems that INT32 is omitted forgetfully (jump from INT16 to INT64 directly)?"}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20368", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20368/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20368/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20368/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/20368", "id": 336459957, "node_id": "MDU6SXNzdWUzMzY0NTk5NTc=", "number": 20368, "title": "Using new tensorflow op for matrix exponential in a c++ library that already uses tensorflow as third party", "user": {"login": "Ceveloper", "id": 38587456, "node_id": "MDQ6VXNlcjM4NTg3NDU2", "avatar_url": "https://avatars0.githubusercontent.com/u/38587456?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Ceveloper", "html_url": "https://github.com/Ceveloper", "followers_url": "https://api.github.com/users/Ceveloper/followers", "following_url": "https://api.github.com/users/Ceveloper/following{/other_user}", "gists_url": "https://api.github.com/users/Ceveloper/gists{/gist_id}", "starred_url": "https://api.github.com/users/Ceveloper/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Ceveloper/subscriptions", "organizations_url": "https://api.github.com/users/Ceveloper/orgs", "repos_url": "https://api.github.com/users/Ceveloper/repos", "events_url": "https://api.github.com/users/Ceveloper/events{/privacy}", "received_events_url": "https://api.github.com/users/Ceveloper/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1097547147, "node_id": "MDU6TGFiZWwxMDk3NTQ3MTQ3", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/comp:ops", "name": "comp:ops", "color": "0052cc", "default": false, "description": ""}, {"id": 473184161, "node_id": "MDU6TGFiZWw0NzMxODQxNjE=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:support", "name": "type:support", "color": "159b2e", "default": false, "description": ""}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-06-28T03:27:51Z", "updated_at": "2020-02-08T01:14:24Z", "closed_at": null, "author_association": "NONE", "body": "### System information\r\n- **Have I written custom code**: I'm using ZeroOut CPU versionfrom https://github.com/MatteoRagni/tf.ZeroOut.gpu\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**: Linux Ubuntu 16.04 LTS\r\n- **TensorFlow installed from**: source\r\n- **TensorFlow version** : 1.8.0\r\n- **Python version**: Python 3.5.2\r\n- **Bazel version (if compiling from source)**: 0.14.1\r\n- **GCC/Compiler version (if compiling from source)**: gcc 5.4.0,  cmake 3.5.1\r\n- **CUDA/cuDNN version**: release 9.0, V9.0.176\r\n- **GPU model and memory**: GeForce GT 730/PCIe/SSE2\r\n- **Exact command to reproduce**: N/A\r\n\r\n\r\nHallo to everyone! That's my first time asking a question in tensorflow. I will try my best to formulate my question properly.\r\n\r\nMy plan is: \r\n\r\n - implement a new tensorflow GPU op for the matrix exponential,using Eigen unsupported MatrixFunctions or the already existing tensorflow matrix exponential op\r\n - add the gradient\r\n - use the new op in a c++ library, which already uses tensorflow as third party.\r\n\r\nI have started from the basics, and I realized that I don't know how to use my custom operation in c++. I registered the ZeroOut op for cpu from tensorflow c++ tutorial as in https://github.com/MatteoRagni/tf.ZeroOut.gpu but now I don't know how to use that in my c++ code. \r\n\r\nI tried to add the ZeroOut.so file to my lib as shared library, but it didn't work. Maybe I'm doing something wrong? My CMakeList.txt is attached. And including  ZeroOut.cpp in my c++ files hasn't make any difference until now.\r\nI looked in tensorflow documentation, stackoverflow and the internet but I couln't find an answer to my questions. Hopefully I didn't miss anything.\r\n\r\nCan you help me? Maybe giving an example of the required CMakeList.txt, even if not related to mine?\r\n\r\nSpeaking about my general plan, I would also like to have some advices from more experienced programmers. I know tensorflow has a matrix exponential op, but as far as I know it doesn't work for GPU (see #15465) and has no gradient implementation. Should I add this features to the existing op rather than registering a new one? And what about using Eigen unsupported MatrixFunctions in a new user op?\r\n\r\n### Source code / logs\r\nHere is my CMakeList.txt, which also creates the whole library I'm working with:\r\n\r\n    cmake_minimum_required(VERSION 2.8)\r\n    project(Project1)\r\n\r\n    set(CMAKE_BUILD_TYPE \"Release\") # Debug Release\r\n    set(CMAKE_CXX_FLAGS_RELEASE \"$ENV{CXXFLAGS} -std=c++14 -O3 -Wall                 -fopenmp\")\r\n    SET(CMAKE_MODULE_PATH ${PROJECT_SOURCE_DIR}/cmake)\r\n\r\n    #-------------path of 3rd party libraries-------------\r\n    # special libs.\r\n    find_package(Boost COMPONENTS filesystem iostreams regex)\r\n    find_package(FFTW)\r\n    find_package(NLopt)\r\n    find_package(HDF5 COMPONENTS CXX)\r\n\r\n    set(EXTERN_LIB_ROOT ${PROJECT_SOURCE_DIR}/3rd-party)\r\n\r\n    set(TENSORFLOW_ROOT /.../tensorflow)\r\n    set(TF_INCLUDE_DIRS \"${TENSORFLOW_ROOT}\" \"${TENSORFLOW_ROOT}/bazel-  genfiles\" \"${TENSORFLOW_ROOT}/bazel-tensorflow/external/protobuf_archive/src\")\r\n\r\n    # lib dirs.\r\n    set(LUA_LIBRARIES \"${EXTERN_LIB_ROOT}/lua/liblua53.so\") #5.3.4\r\n    set(LINENOISE_LIBRARIES \"${EXTERN_LIB_ROOT}/linenoise-ng/build/liblinenoise.so\")\r\n    set(YACAS_LIBRARIES \"${EXTERN_LIB_ROOT}/yacas/cyacas/libyacas/build/libyacas.so\")\r\n\r\n\r\n    set(TF_LIBRARIES ${TENSORFLOW_ROOT}/bazel-bin/tensorflow/libtensorflow_cc.so\r\n        ${TENSORFLOW_ROOT}/tensorflow/core/user_ops/tf.ZeroOut.gpu-master/zero_out.so) \r\n    #-------------ssl headers-------------\r\n    include_directories(${PROJECT_SOURCE_DIR}/src\r\n        ${EXTERN_LIB_ROOT}/eigen\r\n        ${EXTERN_LIB_ROOT}/gnuplot-iostream\r\n        ${EXTERN_LIB_ROOT}/\r\n        ${EXTERN_LIB_ROOT}/linenoise-ng/include\r\n        ${EXTERN_LIB_ROOT}/yacas/cyacas/libyacas/include\r\n        ${EXTERN_LIB_ROOT}/lua/src\r\n        ${NLOPT_INCLUDE_DIRS}\r\n        ${FFTW_INCLUDES}\r\n        ${TF_INCLUDE_DIRS}\r\n        ${Boost_INCLUDE_DIRS}\r\n        ${HDF5_INCLUDE_DIRS}\r\n        ${TENSORFLOW_ROOT}) \r\n\r\n    option(BUILD_SHARED_LIBS \"build shared library\" ON)\r\n    set(LIBRARY_OUTPUT_PATH ${PROJECT_BINARY_DIR}/lib)\r\n\r\n    #-------------ssl kernel lib-------------\r\n    file(GLOB_RECURSE _src_list\r\n        LIST_DIRECTORIES false\r\n        RELATIVE \"${CMAKE_CURRENT_SOURCE_DIR}\" \"${PROJECT_SOURCE_DIR}/src/*.h\" \"${PROJECT_SOURCE_DIR}/src/*.cpp\" \"\")\r\n\r\n    add_library(ssl SHARED ${_src_list})\r\n\r\n    set(SSL_LIBRARIES ${TF_LIBRARIES} ${LUA_LIBRARIES} ${Boost_LIBRARIES}     ${NLOPT_LIBRARIES} ${FFTW_LIBRARIES} ${LINENOISE_LIBRARIES} ${YACAS_LIBRARIES} ${HDF5_CXX_LIBRARIES}) #${TF_LIBRARIES}\r\n\r\n    target_link_libraries(ssl ${SSL_LIBRARIES} dl)\r\n\r\n    add_executable(Project1 main.cpp)\r\n    target_link_libraries(Project1 ssl)\r\n"}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20363", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20363/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20363/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20363/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/20363", "id": 336420173, "node_id": "MDU6SXNzdWUzMzY0MjAxNzM=", "number": 20363, "title": "'DNNBoostedTreeCombinedClassifier' default argument setting would lead to error", "user": {"login": "Haoychen", "id": 11404152, "node_id": "MDQ6VXNlcjExNDA0MTUy", "avatar_url": "https://avatars0.githubusercontent.com/u/11404152?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Haoychen", "html_url": "https://github.com/Haoychen", "followers_url": "https://api.github.com/users/Haoychen/followers", "following_url": "https://api.github.com/users/Haoychen/following{/other_user}", "gists_url": "https://api.github.com/users/Haoychen/gists{/gist_id}", "starred_url": "https://api.github.com/users/Haoychen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Haoychen/subscriptions", "organizations_url": "https://api.github.com/users/Haoychen/orgs", "repos_url": "https://api.github.com/users/Haoychen/repos", "events_url": "https://api.github.com/users/Haoychen/events{/privacy}", "received_events_url": "https://api.github.com/users/Haoychen/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 404586558, "node_id": "MDU6TGFiZWw0MDQ1ODY1NTg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:community%20support", "name": "stat:community support", "color": "f4b400", "default": false, "description": ""}, {"id": 473172988, "node_id": "MDU6TGFiZWw0NzMxNzI5ODg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:bug", "name": "type:bug", "color": "159b2e", "default": false, "description": ""}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-06-27T23:18:06Z", "updated_at": "2018-07-16T16:57:46Z", "closed_at": null, "author_association": "NONE", "body": "Please go to Stack Overflow for help and support:\r\n\r\nhttps://stackoverflow.com/questions/tagged/tensorflow\r\n\r\nIf you open a GitHub issue, here is our policy:\r\n\r\n1. It must be a bug, a feature request, or a significant problem with documentation (for small docs fixes please send a PR instead).\r\n2. The form below must be filled out.\r\n3. It shouldn't be a TensorBoard issue. Those go [here](https://github.com/tensorflow/tensorboard/issues).\r\n\r\n**Here's why we have that policy**: TensorFlow developers respond to issues. We want to focus on work that benefits the whole community, e.g., fixing bugs and adding features. Support only helps individuals. GitHub also notifies thousands of people when issues are filed. We want them to see you communicating an interesting problem, rather than being redirected to Stack Overflow.\r\n\r\n------------------------\r\n\r\n### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**: No\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**: Linux Ubuntu 16.04\r\n- **TensorFlow installed from (source or binary)**: binary\r\n- **TensorFlow version (use command below)**: 1.8.0\r\n- **Python version**: 2.7.14\r\n- **Bazel version (if compiling from source)**: N/A\r\n- **GCC/Compiler version (if compiling from source)**: N/A\r\n- **CUDA/cuDNN version**: N/A\r\n- **GPU model and memory**: N/A\r\n- **Exact command to reproduce**: N/A\r\n\r\nYou can collect some of this information using our environment capture script:\r\n\r\nhttps://github.com/tensorflow/tensorflow/tree/master/tools/tf_env_collect.sh\r\n\r\nYou can obtain the TensorFlow version with\r\n\r\npython -c \"import tensorflow as tf; print(tf.GIT_VERSION, tf.VERSION)\"\r\n\r\n### Describe the problem\r\nDescribe the problem clearly here. Be sure to convey here why it's a bug in TensorFlow or a feature request.\r\n\r\nIn `DNNBoostedTreeCombinedClassifier`, the default setting for `tree_feature_columns` is None and the default setting for `dnn_input_layer_to_tree` is True. In `dnn_tree_combined_estimator.py`:  https://github.com/tensorflow/tensorflow/blob/master/tensorflow/contrib/boosted_trees/estimator_batch/dnn_tree_combined_estimator.py#L228 there is an append operation for `tree_feature_columns` which would lead to a `AttributeError: 'NoneType' object has no attribute 'append'`. Current boston_combined example for `DNNBoostedTreeCombinedClassifier` also failed due to the same reason.\r\n\r\n\r\n### Source code / logs\r\nInclude any logs or source code that would be helpful to diagnose the problem. If including tracebacks, please include the full traceback. Large logs and files should be attached. Try to provide a reproducible test case that is the bare minimum necessary to generate the problem.\r\n"}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20358", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20358/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20358/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20358/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/20358", "id": 336368182, "node_id": "MDU6SXNzdWUzMzYzNjgxODI=", "number": 20358, "title": "Highlevel API do not well support float64 due to tf.feature_column.input_layer", "user": {"login": "bewantbe", "id": 4962979, "node_id": "MDQ6VXNlcjQ5NjI5Nzk=", "avatar_url": "https://avatars2.githubusercontent.com/u/4962979?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bewantbe", "html_url": "https://github.com/bewantbe", "followers_url": "https://api.github.com/users/bewantbe/followers", "following_url": "https://api.github.com/users/bewantbe/following{/other_user}", "gists_url": "https://api.github.com/users/bewantbe/gists{/gist_id}", "starred_url": "https://api.github.com/users/bewantbe/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bewantbe/subscriptions", "organizations_url": "https://api.github.com/users/bewantbe/orgs", "repos_url": "https://api.github.com/users/bewantbe/repos", "events_url": "https://api.github.com/users/bewantbe/events{/privacy}", "received_events_url": "https://api.github.com/users/bewantbe/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1097547147, "node_id": "MDU6TGFiZWwxMDk3NTQ3MTQ3", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/comp:ops", "name": "comp:ops", "color": "0052cc", "default": false, "description": ""}, {"id": 473172988, "node_id": "MDU6TGFiZWw0NzMxNzI5ODg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:bug", "name": "type:bug", "color": "159b2e", "default": false, "description": ""}], "state": "open", "locked": false, "assignee": {"login": "bignamehyp", "id": 3474655, "node_id": "MDQ6VXNlcjM0NzQ2NTU=", "avatar_url": "https://avatars2.githubusercontent.com/u/3474655?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bignamehyp", "html_url": "https://github.com/bignamehyp", "followers_url": "https://api.github.com/users/bignamehyp/followers", "following_url": "https://api.github.com/users/bignamehyp/following{/other_user}", "gists_url": "https://api.github.com/users/bignamehyp/gists{/gist_id}", "starred_url": "https://api.github.com/users/bignamehyp/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bignamehyp/subscriptions", "organizations_url": "https://api.github.com/users/bignamehyp/orgs", "repos_url": "https://api.github.com/users/bignamehyp/repos", "events_url": "https://api.github.com/users/bignamehyp/events{/privacy}", "received_events_url": "https://api.github.com/users/bignamehyp/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "bignamehyp", "id": 3474655, "node_id": "MDQ6VXNlcjM0NzQ2NTU=", "avatar_url": "https://avatars2.githubusercontent.com/u/3474655?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bignamehyp", "html_url": "https://github.com/bignamehyp", "followers_url": "https://api.github.com/users/bignamehyp/followers", "following_url": "https://api.github.com/users/bignamehyp/following{/other_user}", "gists_url": "https://api.github.com/users/bignamehyp/gists{/gist_id}", "starred_url": "https://api.github.com/users/bignamehyp/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bignamehyp/subscriptions", "organizations_url": "https://api.github.com/users/bignamehyp/orgs", "repos_url": "https://api.github.com/users/bignamehyp/repos", "events_url": "https://api.github.com/users/bignamehyp/events{/privacy}", "received_events_url": "https://api.github.com/users/bignamehyp/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2018-06-27T20:04:07Z", "updated_at": "2020-01-31T20:49:37Z", "closed_at": null, "author_association": "NONE", "body": "### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**:\r\nYes. See the end.\r\n\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**:\r\nLinux Debian 9.4.\r\n\r\n- **TensorFlow installed from (source or binary)**:\r\nsource.\r\n\r\n- **TensorFlow version (use command below)**:\r\n1.9.0-rc1\r\n\r\n- **Python version**: \r\n3.5.3\r\n\r\n- **Bazel version (if compiling from source)**:\r\n0.11.1\r\n\r\n- **GCC/Compiler version (if compiling from source)**:\r\n6.3.0\r\n\r\n- **CUDA/cuDNN version**:\r\nNA (cpu only build)\r\n\r\n- **GPU model and memory**:\r\nNA (cpu only build)\r\n\r\n- **Exact command to reproduce**:\r\nSee the python script in the end. Just run it like:\r\n`python3 test_tf_float64.py`\r\n\r\n### The problem\r\nThe function `tf.feature_column.input_layer` return tensor in dtype=float32 for input dtype=float64.\r\n\r\nI know this is a [documented](https://github.com/tensorflow/tensorflow/blob/v1.9.0-rc1/tensorflow/python/feature_column/feature_column.py#L270) behavior, but this breaks things:\r\n\r\n1. When the training data is in float64 precision, the user is (I am) expecting a float64 output, especially when the DNN written in high level API is used as a regressor. However, it returns float32, see the script in the end.\r\n\r\n2. When building a custom estimator using high level API, seems that the input layer has to be created by `tf.feature_column.input_layer`. See the guide [here](https://www.tensorflow.org/get_started/custom_estimators#define_the_input_layer). This forbid the user from creating a network with dtype=float64 precision.\r\n\r\nOne may argue that dtype=float32 is already more than enough for DNN. But e.g. when doing theoretical work, the extra precision is desired.\r\n\r\nA possible fix is:\r\n\r\nChange line [2347](https://github.com/tensorflow/tensorflow/blob/v1.9.0-rc1/tensorflow/python/feature_column/feature_column.py#L2347) of function `_transform_feature` in file `tensorflow/python/feature_column/feature_column.py`, from\r\n\r\n```python3\r\n return math_ops.to_float(input_tensor)\r\n```\r\n\r\nto\r\n\r\n```python3\r\n    if not input_tensor.dtype.is_floating:\r\n      return math_ops.to_float(input_tensor)\r\n    return input_tensor\r\n```\r\n\r\nNote: this fix could breaks old code that has float32 assumption...\r\n\r\nIf this is considered as non-bug, then consider this as a feature request that make it possible to pass dtype=float64 through.\r\n\r\n### Source code\r\n```python3\r\n# Test tensorflow high level API.\r\n# dtype=float64 will be silently transformed to float32.\r\n\r\nimport sys\r\nimport numpy as np\r\nimport tensorflow as tf\r\n\r\ndef load_data(dtype):\r\n    l = 7\r\n    x1 = np.linspace(-1.0, 1.0, l, dtype=dtype)\r\n    z1 = np.sin(x1)\r\n    return ({'x':x1}, {'z':z1})\r\n\r\ndef train_input_fn(features, labels, batch_size):\r\n    dataset = tf.data.Dataset.from_tensor_slices((features, labels['z']))\r\n    dataset = dataset.repeat().batch(batch_size)\r\n    return dataset\r\n\r\ndef eval_input_fn(features):\r\n    dataset = tf.data.Dataset.from_tensor_slices(features)\r\n    dataset = dataset.batch(1)\r\n    return dataset\r\n\r\ndef main(argv):\r\n    dtype = np.float64   # specifies the data type\r\n\r\n    batch_size = 7\r\n    n_steps = 1\r\n\r\n    (train_x, train_y) = load_data(dtype)\r\n    my_feature_columns = [\r\n        tf.feature_column.numeric_column(\r\n            key   = 'x',\r\n            shape = (1,),\r\n            dtype = tf.as_dtype(train_x['x'].dtype))\r\n    ]\r\n\r\n    regressor = tf.estimator.DNNRegressor(   # or any other regressors\r\n        hidden_units    = [3],\r\n        feature_columns = my_feature_columns)\r\n\r\n    regressor.train(\r\n        input_fn = lambda:train_input_fn(train_x, train_y, batch_size),\r\n        steps    = n_steps)\r\n\r\n    predict_x = {'x': np.array([0.1, 0.2])}\r\n\r\n    predictions = regressor.predict(\r\n        input_fn=lambda:eval_input_fn(predict_x))\r\n\r\n    print([i for i in predictions]) # outputs are float32 instead of float64\r\n\r\nif __name__ == '__main__':\r\n    tf.app.run(main)\r\n```"}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20348", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20348/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20348/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20348/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/20348", "id": 336298529, "node_id": "MDU6SXNzdWUzMzYyOTg1Mjk=", "number": 20348, "title": "tf.contrib.ffmpeg.decode_video error", "user": {"login": "rongou", "id": 497101, "node_id": "MDQ6VXNlcjQ5NzEwMQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/497101?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rongou", "html_url": "https://github.com/rongou", "followers_url": "https://api.github.com/users/rongou/followers", "following_url": "https://api.github.com/users/rongou/following{/other_user}", "gists_url": "https://api.github.com/users/rongou/gists{/gist_id}", "starred_url": "https://api.github.com/users/rongou/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rongou/subscriptions", "organizations_url": "https://api.github.com/users/rongou/orgs", "repos_url": "https://api.github.com/users/rongou/repos", "events_url": "https://api.github.com/users/rongou/events{/privacy}", "received_events_url": "https://api.github.com/users/rongou/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1166103538, "node_id": "MDU6TGFiZWwxMTY2MTAzNTM4", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/contrib", "name": "contrib", "color": "5319e7", "default": false, "description": "Anything that comes under contrib directory"}, {"id": 473172988, "node_id": "MDU6TGFiZWw0NzMxNzI5ODg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:bug", "name": "type:bug", "color": "159b2e", "default": false, "description": ""}], "state": "open", "locked": false, "assignee": {"login": "rongou", "id": 497101, "node_id": "MDQ6VXNlcjQ5NzEwMQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/497101?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rongou", "html_url": "https://github.com/rongou", "followers_url": "https://api.github.com/users/rongou/followers", "following_url": "https://api.github.com/users/rongou/following{/other_user}", "gists_url": "https://api.github.com/users/rongou/gists{/gist_id}", "starred_url": "https://api.github.com/users/rongou/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rongou/subscriptions", "organizations_url": "https://api.github.com/users/rongou/orgs", "repos_url": "https://api.github.com/users/rongou/repos", "events_url": "https://api.github.com/users/rongou/events{/privacy}", "received_events_url": "https://api.github.com/users/rongou/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "rongou", "id": 497101, "node_id": "MDQ6VXNlcjQ5NzEwMQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/497101?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rongou", "html_url": "https://github.com/rongou", "followers_url": "https://api.github.com/users/rongou/followers", "following_url": "https://api.github.com/users/rongou/following{/other_user}", "gists_url": "https://api.github.com/users/rongou/gists{/gist_id}", "starred_url": "https://api.github.com/users/rongou/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rongou/subscriptions", "organizations_url": "https://api.github.com/users/rongou/orgs", "repos_url": "https://api.github.com/users/rongou/repos", "events_url": "https://api.github.com/users/rongou/events{/privacy}", "received_events_url": "https://api.github.com/users/rongou/received_events", "type": "User", "site_admin": false}, {"login": "yifeif", "id": 1192265, "node_id": "MDQ6VXNlcjExOTIyNjU=", "avatar_url": "https://avatars3.githubusercontent.com/u/1192265?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yifeif", "html_url": "https://github.com/yifeif", "followers_url": "https://api.github.com/users/yifeif/followers", "following_url": "https://api.github.com/users/yifeif/following{/other_user}", "gists_url": "https://api.github.com/users/yifeif/gists{/gist_id}", "starred_url": "https://api.github.com/users/yifeif/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yifeif/subscriptions", "organizations_url": "https://api.github.com/users/yifeif/orgs", "repos_url": "https://api.github.com/users/yifeif/repos", "events_url": "https://api.github.com/users/yifeif/events{/privacy}", "received_events_url": "https://api.github.com/users/yifeif/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 7, "created_at": "2018-06-27T16:19:50Z", "updated_at": "2019-01-23T22:07:13Z", "closed_at": null, "author_association": "NONE", "body": "### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**: Y\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**: Linux Ubuntu 18.04\r\n- **TensorFlow installed from (source or binary)**: source\r\n- **TensorFlow version (use command below)**: ('v1.8.0-4015-g44a1f241bc', '1.9.0-rc0')\r\n- **Python version**: 2.7.15rc1\r\n- **Bazel version (if compiling from source)**: 0.15.0\r\n- **GCC/Compiler version (if compiling from source)**: 6.4.0\r\n- **CUDA/cuDNN version**: 9.0.176/7.0.5\r\n- **GPU model and memory**: GeForce GTX 1080 Ti (11GB)\r\n- **Exact command to reproduce**:\r\n```python\r\nimport tensorflow as tf\r\nwith tf.Session() as sess:\r\n    movie_bin = tf.read_file('5205acf1-3d30b48d.mov')\r\n    movie = tf.contrib.ffmpeg.decode_video(movie_bin)\r\n    movie_ev = movie.eval()\r\n    print(\"****\", len(movie_ev))\r\n```\r\n### Describe the problem\r\n\r\nThe `tf.contrib.ffmpeg.decode_video` op throws an error and causes a core dump.\r\n\r\nMy ffmpeg version (`apt get install ffmpeg` on ubuntu 18.04):\r\n```shell\r\nffmpeg version 3.4.2-2 Copyright (c) 2000-2018 the FFmpeg developers\r\n  built with gcc 7 (Ubuntu 7.3.0-16ubuntu2)\r\n  configuration: --prefix=/usr --extra-version=2 --toolchain=hardened --libdir=/usr/lib/x86_64-linux-gnu --incdir=/usr/include/x86_64-linux-gnu --enable-gpl --disable-stripping --enable-avresample --enable-avisynth --enable-gnutls --enable-ladspa --enable-libass --enable-libbluray --enable-libbs2b --enable-libcaca --enable-libcdio --enable-libflite --enable-libfontconfig --enable-libfreetype --enable-libfribidi --enable-libgme --enable-libgsm --enable-libmp3lame --enable-libmysofa --enable-libopenjpeg --enable-libopenmpt --enable-libopus --enable-libpulse --enable-librubberband --enable-librsvg --enable-libshine --enable-libsnappy --enable-libsoxr --enable-libspeex --enable-libssh --enable-libtheora --enable-libtwolame --enable-libvorbis --enable-libvpx --enable-libwavpack --enable-libwebp --enable-libx265 --enable-libxml2 --enable-libxvid --enable-libzmq --enable-libzvbi --enable-omx --enable-openal --enable-opengl --enable-sdl2 --enable-libdc1394 --enable-libdrm --enable-libiec61883 --enable-chromaprint --enable-frei0r --enable-libopencv --enable-libx264 --enable-shared\r\n  libavutil      55. 78.100 / 55. 78.100\r\n  libavcodec     57.107.100 / 57.107.100\r\n  libavformat    57. 83.100 / 57. 83.100\r\n  libavdevice    57. 10.100 / 57. 10.100\r\n  libavfilter     6.107.100 /  6.107.100\r\n  libavresample   3.  7.  0 /  3.  7.  0\r\n  libswscale      4.  8.100 /  4.  8.100\r\n  libswresample   2.  9.100 /  2.  9.100\r\n  libpostproc    54.  7.100 / 54.  7.100\r\n```\r\n### Source code / logs\r\n```shell\r\n2018-06-27 09:15:22.489692: F tensorflow/contrib/ffmpeg/default/ffmpeg_lib.cc:405] Non-OK-status: ReadInfoFile(stderr_filename, width, height, frames) status: Unknown: Not enough video info returned by FFmpeg [0, 720, 1280, 3]Could not read FFmpeg stderr file: /tmp/tmp_file_tensorflow_3_ILW8Ht.err\r\nAborted (core dumped)\r\n```"}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20342", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20342/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20342/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20342/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/20342", "id": 336195230, "node_id": "MDU6SXNzdWUzMzYxOTUyMzA=", "number": 20342, "title": "distributed training with SyncReplicasOptimizer got stuck after a number of iterations", "user": {"login": "codescv", "id": 124190, "node_id": "MDQ6VXNlcjEyNDE5MA==", "avatar_url": "https://avatars1.githubusercontent.com/u/124190?v=4", "gravatar_id": "", "url": "https://api.github.com/users/codescv", "html_url": "https://github.com/codescv", "followers_url": "https://api.github.com/users/codescv/followers", "following_url": "https://api.github.com/users/codescv/following{/other_user}", "gists_url": "https://api.github.com/users/codescv/gists{/gist_id}", "starred_url": "https://api.github.com/users/codescv/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/codescv/subscriptions", "organizations_url": "https://api.github.com/users/codescv/orgs", "repos_url": "https://api.github.com/users/codescv/repos", "events_url": "https://api.github.com/users/codescv/events{/privacy}", "received_events_url": "https://api.github.com/users/codescv/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1097547147, "node_id": "MDU6TGFiZWwxMDk3NTQ3MTQ3", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/comp:ops", "name": "comp:ops", "color": "0052cc", "default": false, "description": ""}, {"id": 473172988, "node_id": "MDU6TGFiZWw0NzMxNzI5ODg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:bug", "name": "type:bug", "color": "159b2e", "default": false, "description": ""}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-06-27T11:48:30Z", "updated_at": "2019-06-24T22:31:21Z", "closed_at": null, "author_association": "NONE", "body": "### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**: Yes\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**: Linux Ubuntu 16.04\r\n- **TensorFlow installed from (source or binary)**: binary\r\n- **TensorFlow version (use command below)**: 1.8.0\r\n- **Python version**: 3.6.5\r\n- **Bazel version (if compiling from source)**: NA\r\n- **GCC/Compiler version (if compiling from source)**: NA\r\n- **CUDA/cuDNN version**: NA\r\n- **GPU model and memory**: NA\r\n- **Exact command to reproduce**: NA\r\n\r\n### Describe the problem\r\nI am running distributed training using SyncReplicasOptimizer, after about 10k iterations, the workers got stuck. CPU usage drops to 0 percent. \r\n\r\nThe arguments for SyncReplicasOptimizer:\r\nreplicas_to_aggregate = 60, total_num_replicas = 64 (I have 64 workers)\r\n\r\nIt might also be worth noting that this happens after 27 workers finish their training data.\r\n\r\nConnecting to one of the stuck worker processes using gdb I get the following backtraces:\r\n\r\n#0  syscall () at ../sysdeps/unix/sysv/linux/x86_64/syscall.S:38\r\n#1  0x00007f5813609de4 in nsync::nsync_mu_semaphore_p_with_deadline(nsync::nsync_semaphore_s_*, timespec) ()\r\n   from /usr/local/lib/python3.6/dist-packages/tensorflow/python/_pywrap_tensorflow_internal.so\r\n#2  0x00007f58136095b1 in nsync::nsync_sem_wait_with_cancel_(nsync::waiter*, timespec, nsync::nsync_note_s_*) ()\r\n   from /usr/local/lib/python3.6/dist-packages/tensorflow/python/_pywrap_tensorflow_internal.so\r\n#3  0x00007f5813606af4 in nsync::nsync_cv_wait_with_deadline_generic(nsync::nsync_cv_s_*, void*, void (*)(void*), void (*)(void*), timespec, nsync::nsync_note_s_*) () from /usr/local/lib/python3.6/dist-packages/tensorflow/python/_pywrap_tensorflow_internal.so\r\n#4  0x00007f5813607015 in nsync::nsync_cv_wait_with_deadline(nsync::nsync_cv_s_*, nsync::nsync_mu_s_*, timespec, nsync::nsync_note_s_*) ()\r\n   from /usr/local/lib/python3.6/dist-packages/tensorflow/python/_pywrap_tensorflow_internal.so\r\n#5  0x00007f58111a4b23 in tensorflow::(anonymous namespace)::WaitForNotification(tensorflow::CallOptions*, long long, tensorflow::Notification*) ()\r\n   from /usr/local/lib/python3.6/dist-packages/tensorflow/python/_pywrap_tensorflow_internal.so\r\n#6  0x00007f58111a54ab in tensorflow::LocalMaster::RunStep(tensorflow::CallOptions*, tensorflow::RunStepRequestWrapper*, tensorflow::MutableRunStepResponseWrapper*) () from /usr/local/lib/python3.6/dist-packages/tensorflow/python/_pywrap_tensorflow_internal.so\r\n#7  0x00007f5811187256 in tensorflow::GrpcSession::RunProto(tensorflow::CallOptions*, tensorflow::MutableRunStepRequestWrapper*, tensorflow::MutableRunStepResponseWrapper*) () from /usr/local/lib/python3.6/dist-packages/tensorflow/python/_pywrap_tensorflow_internal.so\r\n#8  0x00007f581118767d in tensorflow::GrpcSession::RunHelper(tensorflow::RunOptions const&, std::vector<std::pair<std::string, tensorflow::Tensor>, std::allocator<std::pair<std::string, tensorflow::Tensor> > > const&, std::vector<std::string, std::allocator<std::string> > const&, std::vector<std::string, std::allocator<std::string> > const&, std::vector<tensorflow::Tensor, std::allocator<tensorflow::Tensor> >*, tensorflow::RunMetadata*, std::string const&) ()\r\n   from /usr/local/lib/python3.6/dist-packages/tensorflow/python/_pywrap_tensorflow_internal.so\r\n#9  0x00007f5811187ceb in tensorflow::GrpcSession::Run(tensorflow::RunOptions const&, std::vector<std::pair<std::string, tensorflow::Tensor>, std::allocator<std::pair<std::string, tensorflow::Tensor> > > const&, std::vector<std::string, std::allocator<std::string> > const&, std::vector<std::string, std::allocator<std::string> > const&, std::vector<tensorflow::Tensor, std::allocator<tensorflow::Tensor> >*, tensorflow::RunMetadata*) ()\r\n   from /usr/local/lib/python3.6/dist-packages/tensorflow/python/_pywrap_tensorflow_internal.so\r\n#10 0x00007f5811468dba in TF_Run_Helper(tensorflow::Session*, char const*, TF_Buffer const*, std::vector<std::pair<std::string, tensorflow::Tensor>, std::allocator<std::pair<std::string, tensorflow::Tensor> > > const&, std::vector<std::string, std::allocator<std::string> > const&, TF_Tensor**, std::vector<std::string, std::allocator<std::string> > const&, TF_Buffer*, TF_Status*) () from /usr/local/lib/python3.6/dist-packages/tensorflow/python/_pywrap_tensorflow_internal.so\r\n#11 0x00007f58114699b6 in TF_SessionRun () from /usr/local/lib/python3.6/dist-packages/tensorflow/python/_pywrap_tensorflow_internal.so\r\n#12 0x00007f5811119256 in tensorflow::TF_SessionRun_wrapper_helper(TF_Session*, char const*, TF_Buffer const*, std::vector<TF_Output, std::allocator<TF_Output> > const&, std::vector<_object*, std::allocator<_object*> > const&, std::vector<TF_Output, std::allocator<TF_Output> > const&, std::vector<TF_Operation*, std::allocator<TF_Operation*> > const&, TF_Buffer*, TF_Status*, std::vector<_object*, std::allocator<_object*> >*) ()\r\n   from /usr/local/lib/python3.6/dist-packages/tensorflow/python/_pywrap_tensorflow_internal.so\r\n#13 0x00007f581111939a in tensorflow::TF_SessionRun_wrapper(TF_Session*, TF_Buffer const*, std::vector<TF_Output, std::allocator<TF_Output> > const&, std::vector<_object*, std::allocator<_object*> > const&, std::vector<TF_Output, std::allocator<TF_Output> > const&, std::vector<TF_Operation*, std::allocator<TF_Operation*> > const&, TF_Buffer*, TF_Status*, std::vector<_object*, std::allocator<_object*> >*) ()\r\n   from /usr/local/lib/python3.6/dist-packages/tensorflow/python/_pywrap_tensorflow_internal.so\r\n#14 0x00007f58110d5b3e in _wrap_TF_SessionRun_wrapper () from /usr/local/lib/python3.6/dist-packages/tensorflow/python/_pywrap_tensorflow_internal.so\r\n\r\nAny ideas ? Thanks!\r\n"}]