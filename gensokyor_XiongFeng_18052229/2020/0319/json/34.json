[{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/10804", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/10804/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/10804/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/10804/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/10804", "id": 236696186, "node_id": "MDU6SXNzdWUyMzY2OTYxODY=", "number": 10804, "title": "Not possible to use tf.contrib.training.stratified_sample with a SparseTensor", "user": {"login": "MtDersvan", "id": 7069222, "node_id": "MDQ6VXNlcjcwNjkyMjI=", "avatar_url": "https://avatars3.githubusercontent.com/u/7069222?v=4", "gravatar_id": "", "url": "https://api.github.com/users/MtDersvan", "html_url": "https://github.com/MtDersvan", "followers_url": "https://api.github.com/users/MtDersvan/followers", "following_url": "https://api.github.com/users/MtDersvan/following{/other_user}", "gists_url": "https://api.github.com/users/MtDersvan/gists{/gist_id}", "starred_url": "https://api.github.com/users/MtDersvan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/MtDersvan/subscriptions", "organizations_url": "https://api.github.com/users/MtDersvan/orgs", "repos_url": "https://api.github.com/users/MtDersvan/repos", "events_url": "https://api.github.com/users/MtDersvan/events{/privacy}", "received_events_url": "https://api.github.com/users/MtDersvan/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 299643928, "node_id": "MDU6TGFiZWwyOTk2NDM5Mjg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:contributions%20welcome", "name": "stat:contributions welcome", "color": "f4b400", "default": false, "description": ""}, {"id": 473173272, "node_id": "MDU6TGFiZWw0NzMxNzMyNzI=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:feature", "name": "type:feature", "color": "159b2e", "default": false, "description": ""}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 10, "created_at": "2017-06-18T02:37:58Z", "updated_at": "2018-07-04T03:47:19Z", "closed_at": null, "author_association": "CONTRIBUTOR", "body": "### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**: No\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**: macOS\r\n- **TensorFlow installed from (source or binary)**: binary\r\n- **TensorFlow version (use command below)**: v1.2.0-rc2-21-g12f033d 1.2.0\r\n- **Bazel version (if compiling from source)**: -\r\n- **CUDA/cuDNN version**: - \r\n- **GPU model and memory**: -\r\n- **Exact command to reproduce**: -\r\n\r\n### Describe the problem\r\n**Context**:\r\nI set up an input pipeline that reads `tf.train.SequenceExample`. My dataset is quite unbalanced, so I used `tf.contrib.training.stratified_sample` to resample examples. \r\n\r\n**Problem**:\r\n`tf.contrib.training.stratified_sample` works well with `tf.FixedLenFeature` (context_features) but it raises a `TypeError: Failed to convert object of type <class 'tensorflow.python.framework.sparse_tensor.SparseTensor'> to Tensor. ...` when applied to `tf.VarLenFeature` of sequence_features. \r\nUsing `tf.sparse_tensor_to_dense()` is not applicable either, as it raises `ValueError: All shapes must be fully defined: ...`\r\n\r\n**Statement**:\r\nIf it is not an intended behaviour, then I'd like to report a bug, as I don't see why `tf.SparseTensor` shouldn't be supported.\r\nIf `tf.contrib.training.stratified_sample` works as intended, then I'd like to request a feature of `tf.SparseTensor` support in online data resampling ops.\r\n"}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/10785", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/10785/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/10785/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/10785/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/10785", "id": 236621359, "node_id": "MDU6SXNzdWUyMzY2MjEzNTk=", "number": 10785, "title": "Feature Request-Randomized Hashing", "user": {"login": "Erstwild", "id": 5403348, "node_id": "MDQ6VXNlcjU0MDMzNDg=", "avatar_url": "https://avatars2.githubusercontent.com/u/5403348?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Erstwild", "html_url": "https://github.com/Erstwild", "followers_url": "https://api.github.com/users/Erstwild/followers", "following_url": "https://api.github.com/users/Erstwild/following{/other_user}", "gists_url": "https://api.github.com/users/Erstwild/gists{/gist_id}", "starred_url": "https://api.github.com/users/Erstwild/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Erstwild/subscriptions", "organizations_url": "https://api.github.com/users/Erstwild/orgs", "repos_url": "https://api.github.com/users/Erstwild/repos", "events_url": "https://api.github.com/users/Erstwild/events{/privacy}", "received_events_url": "https://api.github.com/users/Erstwild/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 404586558, "node_id": "MDU6TGFiZWw0MDQ1ODY1NTg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:community%20support", "name": "stat:community support", "color": "f4b400", "default": false, "description": ""}, {"id": 473173272, "node_id": "MDU6TGFiZWw0NzMxNzMyNzI=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:feature", "name": "type:feature", "color": "159b2e", "default": false, "description": ""}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2017-06-16T23:31:45Z", "updated_at": "2017-07-10T10:51:07Z", "closed_at": null, "author_association": "NONE", "body": "This is feature request to see if randomized hashing can be implemented to relevant part of the library to allow the option to be utilized for better computational resource utilization:\r\n\r\nhttps://arxiv.org/abs/1602.08194"}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/10767", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/10767/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/10767/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/10767/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/10767", "id": 236500703, "node_id": "MDU6SXNzdWUyMzY1MDA3MDM=", "number": 10767, "title": "[Feature Request] Exclude ties in function in_top_k", "user": {"login": "gfolego", "id": 8110317, "node_id": "MDQ6VXNlcjgxMTAzMTc=", "avatar_url": "https://avatars3.githubusercontent.com/u/8110317?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gfolego", "html_url": "https://github.com/gfolego", "followers_url": "https://api.github.com/users/gfolego/followers", "following_url": "https://api.github.com/users/gfolego/following{/other_user}", "gists_url": "https://api.github.com/users/gfolego/gists{/gist_id}", "starred_url": "https://api.github.com/users/gfolego/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gfolego/subscriptions", "organizations_url": "https://api.github.com/users/gfolego/orgs", "repos_url": "https://api.github.com/users/gfolego/repos", "events_url": "https://api.github.com/users/gfolego/events{/privacy}", "received_events_url": "https://api.github.com/users/gfolego/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 299643928, "node_id": "MDU6TGFiZWwyOTk2NDM5Mjg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:contributions%20welcome", "name": "stat:contributions welcome", "color": "f4b400", "default": false, "description": ""}, {"id": 473173272, "node_id": "MDU6TGFiZWw0NzMxNzMyNzI=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:feature", "name": "type:feature", "color": "159b2e", "default": false, "description": ""}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2017-06-16T14:33:15Z", "updated_at": "2018-02-26T18:55:11Z", "closed_at": null, "author_association": "NONE", "body": "This is a feature request related to #10489 (tie handling in function in_top_k)\r\n\r\nWould it be possible to add an option/argument specifying whether ties should be included or excluded?\r\nIn other words, make it possible for ties to return False instead of True.\r\n\r\nThanks!"}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/10679", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/10679/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/10679/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/10679/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/10679", "id": 235543859, "node_id": "MDU6SXNzdWUyMzU1NDM4NTk=", "number": 10679, "title": "recovery_wait_secs feature for tf.train.MonitoredTrainingSession() similar to the one present in tf.train.SessionManager()", "user": {"login": "abishgj-rzt", "id": 15866928, "node_id": "MDQ6VXNlcjE1ODY2OTI4", "avatar_url": "https://avatars1.githubusercontent.com/u/15866928?v=4", "gravatar_id": "", "url": "https://api.github.com/users/abishgj-rzt", "html_url": "https://github.com/abishgj-rzt", "followers_url": "https://api.github.com/users/abishgj-rzt/followers", "following_url": "https://api.github.com/users/abishgj-rzt/following{/other_user}", "gists_url": "https://api.github.com/users/abishgj-rzt/gists{/gist_id}", "starred_url": "https://api.github.com/users/abishgj-rzt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/abishgj-rzt/subscriptions", "organizations_url": "https://api.github.com/users/abishgj-rzt/orgs", "repos_url": "https://api.github.com/users/abishgj-rzt/repos", "events_url": "https://api.github.com/users/abishgj-rzt/events{/privacy}", "received_events_url": "https://api.github.com/users/abishgj-rzt/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 299643928, "node_id": "MDU6TGFiZWwyOTk2NDM5Mjg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:contributions%20welcome", "name": "stat:contributions welcome", "color": "f4b400", "default": false, "description": ""}, {"id": 473173272, "node_id": "MDU6TGFiZWw0NzMxNzMyNzI=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:feature", "name": "type:feature", "color": "159b2e", "default": false, "description": ""}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2017-06-13T12:53:52Z", "updated_at": "2018-09-26T03:02:39Z", "closed_at": null, "author_association": "NONE", "body": "I ran the distributed model for a small data set and for very few epochs for some test run.\r\n\r\nThe chief worker started normally and finished training (training time was less than 30 seconds) but the other workers did not start.\r\n\r\nBelow log message has been displayed in all the workers other than chief:\r\n`Waiting for model to be ready.  Ready_for_local_init_op:  Variables not initialized: <list_of_variables >`\r\n\r\nThen I found the reason behind this in [this](https://stackoverflow.com/questions/42986653/distributed-tensorflow-not-running-some-workers/43007657#43007657) Stackoverflow answer.\r\n\r\nA `recover_wait_secs` feature would make it easier rather handling that timeout period manually."}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/10631", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/10631/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/10631/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/10631/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/10631", "id": 235063324, "node_id": "MDU6SXNzdWUyMzUwNjMzMjQ=", "number": 10631, "title": "i get an error when i build tensorflow by bazel on windows", "user": {"login": "mmdlearn", "id": 20852028, "node_id": "MDQ6VXNlcjIwODUyMDI4", "avatar_url": "https://avatars3.githubusercontent.com/u/20852028?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mmdlearn", "html_url": "https://github.com/mmdlearn", "followers_url": "https://api.github.com/users/mmdlearn/followers", "following_url": "https://api.github.com/users/mmdlearn/following{/other_user}", "gists_url": "https://api.github.com/users/mmdlearn/gists{/gist_id}", "starred_url": "https://api.github.com/users/mmdlearn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mmdlearn/subscriptions", "organizations_url": "https://api.github.com/users/mmdlearn/orgs", "repos_url": "https://api.github.com/users/mmdlearn/repos", "events_url": "https://api.github.com/users/mmdlearn/events{/privacy}", "received_events_url": "https://api.github.com/users/mmdlearn/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 404586558, "node_id": "MDU6TGFiZWw0MDQ1ODY1NTg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:community%20support", "name": "stat:community support", "color": "f4b400", "default": false, "description": ""}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2017-06-11T12:46:03Z", "updated_at": "2018-11-25T15:53:27Z", "closed_at": null, "author_association": "NONE", "body": "PS C:\\WINDOWS\\system32> cd tensorflow\r\nPS C:\\WINDOWS\\system32\\tensorflow> bazel build -c opt --copt=-mavx --copt=-mavx2 --copt=-mfma --copt=-mfpmath=both --cop\r\nt=-msse4.2 --copt=-msse --copt=-msse2 --copt=-msse3 --copt=-msse4.1 //tensorflow/tools/pip_package:build_pip_package\r\n>>\r\n.....................\r\nERROR: C:/windows/system32/tensorflow/tensorflow/tools/pip_package/BUILD:27:1: error loading package 'tensorflow/core':\r\nEncountered error while reading extension file 'protobuf.bzl': no such package '@protobuf//': Traceback (most recent cal\r\nl last):\r\n        File \"C:/windows/system32/tensorflow/tensorflow/workspace.bzl\", line 117\r\n                _apply_patch(repo_ctx, repo_ctx.attr.patch_file)\r\n        File \"C:/windows/system32/tensorflow/tensorflow/workspace.bzl\", line 108, in _apply_patch\r\n                _execute_and_check_ret_code(repo_ctx, cmd)\r\n        File \"C:/windows/system32/tensorflow/tensorflow/workspace.bzl\", line 92, in _execute_and_check_ret_code\r\n                fail(\"Non-zero return code({1}) when ..., <2 more arguments>))\r\nNon-zero return code(127) when executing 'C:\\tools\\msys64\\usr\\bin\\bash.exe -c patch -p1 -d C:/users/godw/appdata/local/t\r\nemp/_bazel_godw/nseddbsr/external/protobuf -i C:/windows/system32/tensorflow/third_party/protobuf/add_noinlines.patch':\r\nStdout:\r\nStderr: /usr/bin/bash: patch: command not found\r\n and referenced by '//tensorflow/tools/pip_package:included_headers_gather'."}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/10597", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/10597/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/10597/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/10597/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/10597", "id": 234836679, "node_id": "MDU6SXNzdWUyMzQ4MzY2Nzk=", "number": 10597, "title": "tf.estimator generator_input_fn multi thread bug ", "user": {"login": "Scitator", "id": 7606451, "node_id": "MDQ6VXNlcjc2MDY0NTE=", "avatar_url": "https://avatars0.githubusercontent.com/u/7606451?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Scitator", "html_url": "https://github.com/Scitator", "followers_url": "https://api.github.com/users/Scitator/followers", "following_url": "https://api.github.com/users/Scitator/following{/other_user}", "gists_url": "https://api.github.com/users/Scitator/gists{/gist_id}", "starred_url": "https://api.github.com/users/Scitator/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Scitator/subscriptions", "organizations_url": "https://api.github.com/users/Scitator/orgs", "repos_url": "https://api.github.com/users/Scitator/repos", "events_url": "https://api.github.com/users/Scitator/events{/privacy}", "received_events_url": "https://api.github.com/users/Scitator/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 299643928, "node_id": "MDU6TGFiZWwyOTk2NDM5Mjg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:contributions%20welcome", "name": "stat:contributions welcome", "color": "f4b400", "default": false, "description": ""}, {"id": 473172988, "node_id": "MDU6TGFiZWw0NzMxNzI5ODg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:bug", "name": "type:bug", "color": "159b2e", "default": false, "description": ""}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2017-06-09T14:03:15Z", "updated_at": "2017-06-13T07:26:28Z", "closed_at": null, "author_association": "CONTRIBUTOR", "body": "I would like to use python generators as input pipeline for tf.estimator's. Finally I found generator_input_fn (announced [here](https://youtu.be/5DknTFbcGVM?t=12m30s)).\r\n\r\nNevertheless, when I start first experiments, I found I bug with learning curve. After some experiments I found the purpose of it - all blows up if you set `num_threads` > 1 in generator_input_fn.\r\n\r\nFor example, here is loss plot with python generator and `num_threads=1`:\r\n![tf_py_generator_1_thread](https://user-images.githubusercontent.com/7606451/26978620-d58faec2-4d34-11e7-8f8b-14e4e50f6844.png)\r\n\r\nAnd with `num_threads=2`:\r\n![tf_py_generator_2_threads](https://user-images.githubusercontent.com/7606451/26978619-d58a9e3c-4d34-11e7-8f1b-8bab67a957aa.png)\r\n\r\n**But** if I use `tf.estimator.inputs.numpy_input_fn` with 4 thread all work pretty well:\r\n![tf_numpy_generator_4_threads](https://user-images.githubusercontent.com/7606451/26978621-d591c11c-4d34-11e7-85ce-2340bd2ed01c.png)\r\nExcept the fact, that I cannot save all my data in one numpy array (GBs of data).\r\n\r\nAny suggestions why so? Or I need just wait for TF 1.2 with working `tf.estimators.inputs.generator_input_fn`?\r\n\r\nJupyter notebook with my experiments [here](https://gist.github.com/Scitator/184c8d676f36a9b7c04fb504d9088590)."}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/10479", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/10479/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/10479/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/10479/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/10479", "id": 234081951, "node_id": "MDU6SXNzdWUyMzQwODE5NTE=", "number": 10479, "title": "Possible bug: LSTMCell with use_peephole=True breaks when using initializer=tf.orthogonal_initializer", "user": {"login": "Sycor4x", "id": 17602932, "node_id": "MDQ6VXNlcjE3NjAyOTMy", "avatar_url": "https://avatars3.githubusercontent.com/u/17602932?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Sycor4x", "html_url": "https://github.com/Sycor4x", "followers_url": "https://api.github.com/users/Sycor4x/followers", "following_url": "https://api.github.com/users/Sycor4x/following{/other_user}", "gists_url": "https://api.github.com/users/Sycor4x/gists{/gist_id}", "starred_url": "https://api.github.com/users/Sycor4x/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Sycor4x/subscriptions", "organizations_url": "https://api.github.com/users/Sycor4x/orgs", "repos_url": "https://api.github.com/users/Sycor4x/repos", "events_url": "https://api.github.com/users/Sycor4x/events{/privacy}", "received_events_url": "https://api.github.com/users/Sycor4x/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 299643928, "node_id": "MDU6TGFiZWwyOTk2NDM5Mjg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:contributions%20welcome", "name": "stat:contributions welcome", "color": "f4b400", "default": false, "description": ""}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 17, "created_at": "2017-06-07T03:23:42Z", "updated_at": "2018-04-13T18:44:41Z", "closed_at": null, "author_association": "NONE", "body": "- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**: Yes, below.\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**: OSX Sierra\r\n- **TensorFlow installed from (source or binary)**: binary - pip\r\n- **TensorFlow version (use command below)**: 1.2rc0\r\n- **Bazel version (if compiling from source)**: NA\r\n- **CUDA/cuDNN version**: NA\r\n- **GPU model and memory**: NA\r\n- **Exact command to reproduce**:\r\n```\r\n\r\nclass ToyModel(object):\r\n\tdef __init__(self):\r\n\t\tx = tf.get_variable(\"x\", shape=[5, 3, 7],\r\n\t\t\t\t\t\t\tinitializer=tf.random_normal_initializer(),\r\n\t\t\t\t\t\t\ttrainable=False)\r\n\t\tcell = tf.contrib.rnn.LSTMCell(7, use_peepholes=True, initializer=tf.orthogonal_initializer)\r\n\t\tself.rnn_out, self.final_state = tf.nn.dynamic_rnn(cell=cell,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t   inputs=x,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t   parallel_iterations=8,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t   time_major=True,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t   dtype=tf.float32)\r\n\r\n\r\ngraph_context = tf.Graph()\r\nwith graph_context.as_default():\r\n\tm1 = ToyModel()\r\n\r\n\ttf_init = tf.global_variables_initializer()\r\n\tsave_dir = \"/Users/delkind/Desktop/whd/tf_checkpoints/unit_test\"\r\n\r\n\tsv = tf.train.Supervisor(logdir=save_dir)\r\n\twith sv.managed_session() as sess:\r\n\t\ty1 = m1.rnn_out.eval(session=sess)\r\n\r\n\t\tprint(y1)\r\n```\r\n### Describe the problem\r\nI believe this is a bug. When using this code, the following error is raised.\r\n```\r\n\r\nTraceback (most recent call last):\r\n  File \"src/tensorflow_unit_tests.py\", line 84, in <module>\r\n    m1 = ToyModel()\r\n  File \"src/tensorflow_unit_tests.py\", line 79, in __init__\r\n    dtype=tf.float32)\r\n  File \"/Users/delkind/Desktop/whd/venv_tf_1.2rc0/lib/python2.7/site-packages/tensorflow/python/ops/rnn.py\", line 566, in dynamic_rnn\r\n    dtype=dtype)\r\n  File \"/Users/delkind/Desktop/whd/venv_tf_1.2rc0/lib/python2.7/site-packages/tensorflow/python/ops/rnn.py\", line 729, in _dynamic_rnn_loop\r\n    swap_memory=swap_memory)\r\n  File \"/Users/delkind/Desktop/whd/venv_tf_1.2rc0/lib/python2.7/site-packages/tensorflow/python/ops/control_flow_ops.py\", line 2766, in while_loop\r\n    result = context.BuildLoop(cond, body, loop_vars, shape_invariants)\r\n  File \"/Users/delkind/Desktop/whd/venv_tf_1.2rc0/lib/python2.7/site-packages/tensorflow/python/ops/control_flow_ops.py\", line 2595, in BuildLoop\r\n    pred, body, original_loop_vars, loop_vars, shape_invariants)\r\n  File \"/Users/delkind/Desktop/whd/venv_tf_1.2rc0/lib/python2.7/site-packages/tensorflow/python/ops/control_flow_ops.py\", line 2545, in _BuildLoop\r\n    body_result = body(*packed_vars_for_body)\r\n  File \"/Users/delkind/Desktop/whd/venv_tf_1.2rc0/lib/python2.7/site-packages/tensorflow/python/ops/rnn.py\", line 712, in _time_step\r\n    skip_conditionals=True)\r\n  File \"/Users/delkind/Desktop/whd/venv_tf_1.2rc0/lib/python2.7/site-packages/tensorflow/python/ops/rnn.py\", line 198, in _rnn_step\r\n    new_output, new_state = call_cell()\r\n  File \"/Users/delkind/Desktop/whd/venv_tf_1.2rc0/lib/python2.7/site-packages/tensorflow/python/ops/rnn.py\", line 700, in <lambda>\r\n    call_cell = lambda: cell(input_t, state)\r\n  File \"/Users/delkind/Desktop/whd/venv_tf_1.2rc0/lib/python2.7/site-packages/tensorflow/contrib/rnn/python/ops/core_rnn_cell_impl.py\", line 685, in __call__\r\n    output, new_state = self._cell(inputs, state, scope)\r\n  File \"/Users/delkind/Desktop/whd/venv_tf_1.2rc0/lib/python2.7/site-packages/tensorflow/python/ops/rnn_cell_impl.py\", line 165, in __call__\r\n    return super(_RNNCell, self).__call__(inputs, state)\r\n  File \"/Users/delkind/Desktop/whd/venv_tf_1.2rc0/lib/python2.7/site-packages/tensorflow/python/layers/base.py\", line 439, in __call__\r\n    outputs = self.call(inputs, *args, **kwargs)\r\n  File \"/Users/delkind/Desktop/whd/venv_tf_1.2rc0/lib/python2.7/site-packages/tensorflow/contrib/rnn/python/ops/core_rnn_cell_impl.py\", line 376, in call\r\n    \"w_f_diag\", shape=[self._num_units], dtype=dtype)\r\n  File \"/Users/delkind/Desktop/whd/venv_tf_1.2rc0/lib/python2.7/site-packages/tensorflow/python/ops/variable_scope.py\", line 1065, in get_variable\r\n    use_resource=use_resource, custom_getter=custom_getter)\r\n  File \"/Users/delkind/Desktop/whd/venv_tf_1.2rc0/lib/python2.7/site-packages/tensorflow/python/ops/variable_scope.py\", line 962, in get_variable\r\n    use_resource=use_resource, custom_getter=custom_getter)\r\n  File \"/Users/delkind/Desktop/whd/venv_tf_1.2rc0/lib/python2.7/site-packages/tensorflow/python/ops/variable_scope.py\", line 360, in get_variable\r\n    validate_shape=validate_shape, use_resource=use_resource)\r\n  File \"/Users/delkind/Desktop/whd/venv_tf_1.2rc0/lib/python2.7/site-packages/tensorflow/python/ops/rnn_cell_impl.py\", line 168, in _rnn_get_variable\r\n    variable = getter(*args, **kwargs)\r\n  File \"/Users/delkind/Desktop/whd/venv_tf_1.2rc0/lib/python2.7/site-packages/tensorflow/python/ops/variable_scope.py\", line 352, in _true_getter\r\n    use_resource=use_resource)\r\n  File \"/Users/delkind/Desktop/whd/venv_tf_1.2rc0/lib/python2.7/site-packages/tensorflow/python/ops/variable_scope.py\", line 725, in _get_single_variable\r\n    validate_shape=validate_shape)\r\n  File \"/Users/delkind/Desktop/whd/venv_tf_1.2rc0/lib/python2.7/site-packages/tensorflow/python/ops/variables.py\", line 200, in __init__\r\n    expected_shape=expected_shape)\r\n  File \"/Users/delkind/Desktop/whd/venv_tf_1.2rc0/lib/python2.7/site-packages/tensorflow/python/ops/variables.py\", line 278, in _init_from_args\r\n    initial_value(), name=\"initial_value\", dtype=dtype)\r\n  File \"/Users/delkind/Desktop/whd/venv_tf_1.2rc0/lib/python2.7/site-packages/tensorflow/python/ops/variable_scope.py\", line 701, in <lambda>\r\n    shape.as_list(), dtype=dtype, partition_info=partition_info)\r\n  File \"/Users/delkind/Desktop/whd/venv_tf_1.2rc0/lib/python2.7/site-packages/tensorflow/python/ops/init_ops.py\", line 481, in __call__\r\n    raise ValueError(\"The tensor to initialize must be \"\r\nValueError: The tensor to initialize must be at least two-dimensional\r\n\r\n```\r\nThis is unexpected behavior. If you omit either of ```initializer=tf.orthogonal_initializer``` or ```use_peephole=True```, the graph can be built and evaluated as expected. I'm not aware of a mathematical reason the weights in this model cannot be orthogonal.\r\n\r\n"}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/10352", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/10352/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/10352/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/10352/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/10352", "id": 232662925, "node_id": "MDU6SXNzdWUyMzI2NjI5MjU=", "number": 10352, "title": "Feature request: Update OpDef proto to ease 1-based indexing", "user": {"login": "malmaud", "id": 987837, "node_id": "MDQ6VXNlcjk4NzgzNw==", "avatar_url": "https://avatars1.githubusercontent.com/u/987837?v=4", "gravatar_id": "", "url": "https://api.github.com/users/malmaud", "html_url": "https://github.com/malmaud", "followers_url": "https://api.github.com/users/malmaud/followers", "following_url": "https://api.github.com/users/malmaud/following{/other_user}", "gists_url": "https://api.github.com/users/malmaud/gists{/gist_id}", "starred_url": "https://api.github.com/users/malmaud/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/malmaud/subscriptions", "organizations_url": "https://api.github.com/users/malmaud/orgs", "repos_url": "https://api.github.com/users/malmaud/repos", "events_url": "https://api.github.com/users/malmaud/events{/privacy}", "received_events_url": "https://api.github.com/users/malmaud/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 299643928, "node_id": "MDU6TGFiZWwyOTk2NDM5Mjg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:contributions%20welcome", "name": "stat:contributions welcome", "color": "f4b400", "default": false, "description": ""}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 11, "created_at": "2017-05-31T18:59:52Z", "updated_at": "2018-03-25T18:24:58Z", "closed_at": null, "author_association": "CONTRIBUTOR", "body": "It would be nice if the `OpDef` proto included information on which inputs and attributes are indices, so that TensorFlow bindings for index-from-1 languages (like Julia) could automatically subtract 1 from the parameters of client calls that refer to those parameters. \r\n\r\nCurrently, the Julia binding has to rely on [rough heuristics](https://github.com/malmaud/TensorFlow.jl/blob/40d963f010bd394258d4a950069db85401430050/src/ops.jl#L232), like checking if the operation's input's type attribute is called \"Tidx\", to provide the conversion. "}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/10270", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/10270/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/10270/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/10270/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/10270", "id": 231964443, "node_id": "MDU6SXNzdWUyMzE5NjQ0NDM=", "number": 10270, "title": "Performance degradation with large lookup tables - optimizer._apply_sparse_duplicate_indices  (TF V1.0.1)", "user": {"login": "KashiErez", "id": 8734262, "node_id": "MDQ6VXNlcjg3MzQyNjI=", "avatar_url": "https://avatars0.githubusercontent.com/u/8734262?v=4", "gravatar_id": "", "url": "https://api.github.com/users/KashiErez", "html_url": "https://github.com/KashiErez", "followers_url": "https://api.github.com/users/KashiErez/followers", "following_url": "https://api.github.com/users/KashiErez/following{/other_user}", "gists_url": "https://api.github.com/users/KashiErez/gists{/gist_id}", "starred_url": "https://api.github.com/users/KashiErez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/KashiErez/subscriptions", "organizations_url": "https://api.github.com/users/KashiErez/orgs", "repos_url": "https://api.github.com/users/KashiErez/repos", "events_url": "https://api.github.com/users/KashiErez/events{/privacy}", "received_events_url": "https://api.github.com/users/KashiErez/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": {"login": "allenlavoie", "id": 3731025, "node_id": "MDQ6VXNlcjM3MzEwMjU=", "avatar_url": "https://avatars3.githubusercontent.com/u/3731025?v=4", "gravatar_id": "", "url": "https://api.github.com/users/allenlavoie", "html_url": "https://github.com/allenlavoie", "followers_url": "https://api.github.com/users/allenlavoie/followers", "following_url": "https://api.github.com/users/allenlavoie/following{/other_user}", "gists_url": "https://api.github.com/users/allenlavoie/gists{/gist_id}", "starred_url": "https://api.github.com/users/allenlavoie/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/allenlavoie/subscriptions", "organizations_url": "https://api.github.com/users/allenlavoie/orgs", "repos_url": "https://api.github.com/users/allenlavoie/repos", "events_url": "https://api.github.com/users/allenlavoie/events{/privacy}", "received_events_url": "https://api.github.com/users/allenlavoie/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "allenlavoie", "id": 3731025, "node_id": "MDQ6VXNlcjM3MzEwMjU=", "avatar_url": "https://avatars3.githubusercontent.com/u/3731025?v=4", "gravatar_id": "", "url": "https://api.github.com/users/allenlavoie", "html_url": "https://github.com/allenlavoie", "followers_url": "https://api.github.com/users/allenlavoie/followers", "following_url": "https://api.github.com/users/allenlavoie/following{/other_user}", "gists_url": "https://api.github.com/users/allenlavoie/gists{/gist_id}", "starred_url": "https://api.github.com/users/allenlavoie/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/allenlavoie/subscriptions", "organizations_url": "https://api.github.com/users/allenlavoie/orgs", "repos_url": "https://api.github.com/users/allenlavoie/repos", "events_url": "https://api.github.com/users/allenlavoie/events{/privacy}", "received_events_url": "https://api.github.com/users/allenlavoie/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 14, "created_at": "2017-05-29T08:56:55Z", "updated_at": "2018-12-14T18:48:45Z", "closed_at": null, "author_association": "NONE", "body": "Hi,\r\n\r\nI ran into this performance issue while trying to upgrade tensorflow from version 0.12.1  to 1.X.\r\n\r\nWe ran a network with large embedding lookup tables:\r\n- 100K X 32 (for example, word embedding -  with 100K unique words)\r\n- 300K X 128 (for example, categorical feature with cardinality of 300K unique items)\r\n\r\n After upgrading TF version to 1.0.1,  GPU usage dropped in from 60% to 30%.\r\nTraining time went up in 50%-200% (depends on how big is the embedding lookup table). \r\n\r\n\r\nThis is the commit that caused the performance degradation:\r\nhttps://github.com/tensorflow/tensorflow/commit/f9f56f9dc7fe41ef1128290a77ac88e889ea5229\r\n\r\nThe handling of unique indexes is very slow and does not run in parallel with others operations. \r\nPlease note the big unique blocks in the middle.\r\n![trace_unique](https://cloud.githubusercontent.com/assets/8734262/26542969/ab0f3740-4464-11e7-9dcb-f3ccd58dfc8a.png)\r\n\r\nHere is a work around (not handling unique indexes ):\r\n```\r\nclass MyOptimizer(tf.train.AdamOptimizer):\r\n        def __init__(self, learning_rate=0.001, beta1=0.9, beta2=0.999, epsilon=1e-8,\r\n               use_locking=False, name=\"Adam\"):\r\n                super(MyOptimizer,self).__init__(learning_rate,beta1, beta2, epsilon, use_locking,name)\r\n\r\n        def _apply_sparse_duplicate_indices(self, grad, var):\r\n                return self._apply_sparse(grad, var)\r\n```\r\n\r\n\r\nThanks,\r\nErez\r\n"}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/10250", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/10250/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/10250/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/10250/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/10250", "id": 231803906, "node_id": "MDU6SXNzdWUyMzE4MDM5MDY=", "number": 10250, "title": "Error on importing metagraph that uses unbound input multiple times", "user": {"login": "freitmi", "id": 25958780, "node_id": "MDQ6VXNlcjI1OTU4Nzgw", "avatar_url": "https://avatars2.githubusercontent.com/u/25958780?v=4", "gravatar_id": "", "url": "https://api.github.com/users/freitmi", "html_url": "https://github.com/freitmi", "followers_url": "https://api.github.com/users/freitmi/followers", "following_url": "https://api.github.com/users/freitmi/following{/other_user}", "gists_url": "https://api.github.com/users/freitmi/gists{/gist_id}", "starred_url": "https://api.github.com/users/freitmi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/freitmi/subscriptions", "organizations_url": "https://api.github.com/users/freitmi/orgs", "repos_url": "https://api.github.com/users/freitmi/repos", "events_url": "https://api.github.com/users/freitmi/events{/privacy}", "received_events_url": "https://api.github.com/users/freitmi/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 299643928, "node_id": "MDU6TGFiZWwyOTk2NDM5Mjg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:contributions%20welcome", "name": "stat:contributions welcome", "color": "f4b400", "default": false, "description": ""}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2017-05-27T14:14:45Z", "updated_at": "2019-03-08T03:15:06Z", "closed_at": null, "author_association": "NONE", "body": "If I export a scoped metagraph which has multiple references to a tensor which will be unbound after exporting, I cannot re-import the metagraph. This problem can be reproduced with the following MWE.\r\n\r\n```python\r\nimport tensorflow as tf\r\n\r\ngraph = tf.Graph()\r\n\r\nwith graph.as_default():\r\n    inputs = tf.placeholder(shape=[], dtype=tf.float32, name=\"inputs\")\r\n\r\n    with tf.name_scope(\"scope\"):\r\n        output = inputs + inputs\r\n\r\n    tf.train.export_meta_graph(\"./mwe.meta\",\r\n                               export_scope=\"scope\",\r\n                               as_text=True)\r\n\r\ngraph = tf.Graph()\r\n\r\nwith graph.as_default():\r\n    inputs = tf.constant(shape=[], value=1.0)\r\n\r\n    tf.train.import_meta_graph(\"./mwe.meta\",\r\n                               import_scope=\"scope\",\r\n                               input_map={\r\n                                   \"$unbound_inputs_inputs\": inputs\r\n                               })\r\n\r\n```\r\nRunning this code results in the following error.\r\n```\r\nTraceback (most recent call last):\r\n  File \"<snip>\\metagraph_bug_mwe.py\", line 23, in <module>\r\n    \"$unbound_inputs_inputs\": inputs\r\n  File \"<snip>\\Python35\\lib\\site-packages\\tensorflow\\python\\training\\saver.py\", line 1595, in import_meta_graph\r\n    **kwargs)\r\n  File \"<snip>\\Python35\\lib\\site-packages\\tensorflow\\python\\framework\\meta_graph.py\", line 479, in import_scoped_meta_graph\r\n    \",\".join([compat.as_str(v) for v in field.value\r\nValueError: Graph contains unbound inputs: $unbound_inputs_inputs,$unbound_inputs_inputs. Must provide these inputs through input_map.\r\n```\r\nUpon inspection of the generated metagraph file (see [mwe.meta](https://github.com/tensorflow/tensorflow/files/1033570/mwe.meta.txt), lines 67 - 75), I noticed that the `inputs` tensor actually has two entries in the `unbound_inputs` collection. Since the `import_scoped_meta_graph` function compares the full collection read from the proto to the `input_map` parameter, they do not match and the error is raised.\r\n\r\n### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**: Yes, see above\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**: Windows 10\r\n- **TensorFlow installed from (source or binary)**: binary\r\n- **TensorFlow version (use command below)**: 1.1.0\r\n- **Bazel version (if compiling from source)**: N/A\r\n- **CUDA/cuDNN version**: 8.0/5.1.10\r\n- **GPU model and memory**: Nvidia GeForce GTX 860M with 2GB VRAM + 4GB shared\r\n- **Exact command to reproduce**: See MWE above\r\n\r\n"}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/10195", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/10195/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/10195/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/10195/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/10195", "id": 231370622, "node_id": "MDU6SXNzdWUyMzEzNzA2MjI=", "number": 10195, "title": "Use freeze_graph only with an input checkpoint", "user": {"login": "bryant1410", "id": 3905501, "node_id": "MDQ6VXNlcjM5MDU1MDE=", "avatar_url": "https://avatars3.githubusercontent.com/u/3905501?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bryant1410", "html_url": "https://github.com/bryant1410", "followers_url": "https://api.github.com/users/bryant1410/followers", "following_url": "https://api.github.com/users/bryant1410/following{/other_user}", "gists_url": "https://api.github.com/users/bryant1410/gists{/gist_id}", "starred_url": "https://api.github.com/users/bryant1410/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bryant1410/subscriptions", "organizations_url": "https://api.github.com/users/bryant1410/orgs", "repos_url": "https://api.github.com/users/bryant1410/repos", "events_url": "https://api.github.com/users/bryant1410/events{/privacy}", "received_events_url": "https://api.github.com/users/bryant1410/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 299643928, "node_id": "MDU6TGFiZWwyOTk2NDM5Mjg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:contributions%20welcome", "name": "stat:contributions welcome", "color": "f4b400", "default": false, "description": ""}, {"id": 473173272, "node_id": "MDU6TGFiZWw0NzMxNzMyNzI=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:feature", "name": "type:feature", "color": "159b2e", "default": false, "description": ""}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2017-05-25T15:20:44Z", "updated_at": "2018-01-11T05:02:48Z", "closed_at": null, "author_association": "CONTRIBUTOR", "body": "### System information\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**: Linux Ubuntu 17.04\r\n- **TensorFlow installed from (source or binary)**: binary\r\n- **TensorFlow version (use command below)**: 1.2.0-rc0\r\n\r\n`freeze_graph` method from `tensorflow.python.tools` should be able to work just with an input checkpoint, it needn't a graph definition from a protobuf file. Just restoring the metagraph and using the graph from the session lets you get rid of the graph def file.\r\n\r\nAlso, as you have provided from 1.2.0-rc0 a method to freeze from code without loading the files ([`freeze_graph_with_def_protos`](https://github.com/tensorflow/tensorflow/blob/v1.2.0-rc0/tensorflow/python/tools/freeze_graph.py#L58)), it should be able to work without a checkpoint but just with a session.\r\n\r\nThese will make freezing way simpler."}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/10080", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/10080/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/10080/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/10080/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/10080", "id": 230230469, "node_id": "MDU6SXNzdWUyMzAyMzA0Njk=", "number": 10080, "title": "compilation errors due to missing op classes when using selective registration (cmake windows build)", "user": {"login": "adennie", "id": 1521215, "node_id": "MDQ6VXNlcjE1MjEyMTU=", "avatar_url": "https://avatars3.githubusercontent.com/u/1521215?v=4", "gravatar_id": "", "url": "https://api.github.com/users/adennie", "html_url": "https://github.com/adennie", "followers_url": "https://api.github.com/users/adennie/followers", "following_url": "https://api.github.com/users/adennie/following{/other_user}", "gists_url": "https://api.github.com/users/adennie/gists{/gist_id}", "starred_url": "https://api.github.com/users/adennie/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/adennie/subscriptions", "organizations_url": "https://api.github.com/users/adennie/orgs", "repos_url": "https://api.github.com/users/adennie/repos", "events_url": "https://api.github.com/users/adennie/events{/privacy}", "received_events_url": "https://api.github.com/users/adennie/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 299643928, "node_id": "MDU6TGFiZWwyOTk2NDM5Mjg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:contributions%20welcome", "name": "stat:contributions welcome", "color": "f4b400", "default": false, "description": ""}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-05-21T16:07:19Z", "updated_at": "2017-05-21T16:26:08Z", "closed_at": null, "author_association": "NONE", "body": "### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**:\r\nNO.\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**:\r\nWindows 7\r\n- **TensorFlow installed from (source or binary)**:\r\nFrom source\r\n- **TensorFlow version (use command below)**:\r\ncommit 280374\r\n- **Bazel version (if compiling from source)**:\r\nn/a, using cmake build\r\n- **CUDA/cuDNN version**:\r\nn/a\r\n- **GPU model and memory**:\r\nn/a\r\n- **Exact command to reproduce**:\r\n\r\ncmake .. -A x64 -DCMAKE_BUILD_TYPE=Release -DCMAKE_INCLUDE_CURRENT_DIR:BOOL=ON -DCMAKE_CXX_FLAGS=-DSELECTIVE_REGISTRATION -Dtensorflow_WIN_CPU_SIMD_OPTIONS=/arch:AVX -Dtensorflow_BUILD_PYTHON_BINDINGS:BOOL=OFF -Dtensorflow_BUILD_CONTRIB_KERNELS:BOOL=OFF -Dtensorflow_BUILD_SHARED_LIB:BOOL=ON \r\n\r\nMSBuild /p:Configuration=Release tensorflow.vcxproj\r\n\r\n### Describe the problem\r\n\r\nI'm building with cmake on Windows, using selective registration.  I've put ops_to_register.h in my build dir and specified -DCMAKE_INCLUDE_CURRENT_DIR=ON in my cmake command so that it would be added to the include path.\r\n\r\nDue (I'm assuming) to selective registration, the generated code omits many classes which would otherwise be generated in a full build.\r\n\r\nWhen compiling non-generated code, e.g. tensorflow\\cc\\gradients\\array_grad.cc, there are compile errors wherever it references the classes that were not generated due to selective registration, for example:\r\n\r\narray_grad.cc(51): error C2653: 'Unstack': is not a class or namespace name [...omitted...\\tensorflow\\tensorflow\\contrib\\cmake\\build\\tf_cc.vcxproj]\r\n\r\nThere are many of these errors for various referenced classes, in various other source files such as:\r\ntensorflow\\cc\\gradients\\math_grad.cc\r\ntensorflow\\cc\\gradients\\nn_grad.cc\r\ntensorflow\\cc\\framework\\gradients.cc\r\n\r\nWhen using selective registration, what's the right approach to avoid these errors?\r\n"}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/10071", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/10071/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/10071/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/10071/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/10071", "id": 230196450, "node_id": "MDU6SXNzdWUyMzAxOTY0NTA=", "number": 10071, "title": "Cannot build jemalloc support using CMake on Linux (fails trying to include <windows.h>)", "user": {"login": "HFTrader", "id": 11621271, "node_id": "MDQ6VXNlcjExNjIxMjcx", "avatar_url": "https://avatars1.githubusercontent.com/u/11621271?v=4", "gravatar_id": "", "url": "https://api.github.com/users/HFTrader", "html_url": "https://github.com/HFTrader", "followers_url": "https://api.github.com/users/HFTrader/followers", "following_url": "https://api.github.com/users/HFTrader/following{/other_user}", "gists_url": "https://api.github.com/users/HFTrader/gists{/gist_id}", "starred_url": "https://api.github.com/users/HFTrader/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/HFTrader/subscriptions", "organizations_url": "https://api.github.com/users/HFTrader/orgs", "repos_url": "https://api.github.com/users/HFTrader/repos", "events_url": "https://api.github.com/users/HFTrader/events{/privacy}", "received_events_url": "https://api.github.com/users/HFTrader/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 299643928, "node_id": "MDU6TGFiZWwyOTk2NDM5Mjg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:contributions%20welcome", "name": "stat:contributions welcome", "color": "f4b400", "default": false, "description": ""}, {"id": 473173351, "node_id": "MDU6TGFiZWw0NzMxNzMzNTE=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:build/install", "name": "type:build/install", "color": "159b2e", "default": false, "description": ""}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2017-05-21T04:38:28Z", "updated_at": "2017-06-10T08:00:48Z", "closed_at": null, "author_association": "NONE", "body": "I am using the provided cmake build project files to compile tensorflow because I have a custom clang binary built with additional optimization passes of my own.\r\n\r\nThe build works fine without Jemalloc\r\n\r\n    cmake -DCMAKE_BUILD_TYPE=Release ../tensorflow/contrib/cmake/  \r\n    make -j4   # compiles O.K.\r\n\r\nbut when I add the jemalloc option it fails. \r\n\r\n    cmake -Dtensorflow_ENABLE_JEMALLOC_SUPPORT=ON -DCMAKE_BUILD_TYPE=Release ../tensorflow/contrib/cmake/  \r\n    make \r\n\r\n    [  5%] Performing configure step for 'jemalloc'\r\n    -- CMAKE_C_COMPILER_ID: Clang\r\n    -- void* size is 8\r\n    -- int size is 4\r\n    -- long size is 8\r\n    -- long long size is 8\r\n    -- intmax_t size is 8\r\n    -- CMAKE_SYSTEM_NAME: Linux\r\n    -- whether pause instruction is compilable ... yes\r\n    CMake Error at Utilities.cmake:755 (message):\r\n      GetSystemPageSize failed compilation see\r\n      cmake/jemalloc/src/jemalloc/GetPageSize/getpagesize.log\r\n    Call Stack (most recent call first):\r\n      CMakeLists.txt:464 (GetSystemPageSize)\r\n\r\n\r\nLooking at cmake/jemalloc/src/jemalloc/GetPageSize/getpagesize.log there is\r\n\r\n    Building C object CMakeFiles/cmTC_129ba.dir/getpagesize.c.o\r\n    clang     -o CMakeFiles/cmTC_129ba.dir/getpagesize.c.o   -c  tensorflow-github/build-cmake/jemalloc/src/jemalloc/GetPageSize/getpagesize.c\r\n    tensorflow-github/build-cmake/jemalloc/src/jemalloc/GetPageSize/getpagesize.c:1:10: fatal error: 'windows.h' file not found\r\n    #include <windows.h>\r\n                 ^~~~~~~~~~~\r\n    1 error generated.\r\n\r\nBy looking at getpagesize.c it is clear it is a windows-only source file that should not have been compiled on Linux.\r\n\r\nI went further investigating why jemalloc is trying to compile a windows source under Linux but I got nowhere after an hour or so. I lack understanding of the jemalloc build and I will continue to look into this but if you have someone on your side with a more prompt answer, that would save me time, thank you. \r\n"}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/10004", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/10004/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/10004/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/10004/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/10004", "id": 229653238, "node_id": "MDU6SXNzdWUyMjk2NTMyMzg=", "number": 10004, "title": "In reader.py, line 17 throws error on python 3.5. The decode phrase should be removed, and then it works", "user": {"login": "ndvbd", "id": 845175, "node_id": "MDQ6VXNlcjg0NTE3NQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/845175?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ndvbd", "html_url": "https://github.com/ndvbd", "followers_url": "https://api.github.com/users/ndvbd/followers", "following_url": "https://api.github.com/users/ndvbd/following{/other_user}", "gists_url": "https://api.github.com/users/ndvbd/gists{/gist_id}", "starred_url": "https://api.github.com/users/ndvbd/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ndvbd/subscriptions", "organizations_url": "https://api.github.com/users/ndvbd/orgs", "repos_url": "https://api.github.com/users/ndvbd/repos", "events_url": "https://api.github.com/users/ndvbd/events{/privacy}", "received_events_url": "https://api.github.com/users/ndvbd/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 299643928, "node_id": "MDU6TGFiZWwyOTk2NDM5Mjg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:contributions%20welcome", "name": "stat:contributions welcome", "color": "f4b400", "default": false, "description": ""}, {"id": 473172988, "node_id": "MDU6TGFiZWw0NzMxNzI5ODg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:bug", "name": "type:bug", "color": "159b2e", "default": false, "description": ""}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2017-05-18T12:27:28Z", "updated_at": "2017-06-05T17:35:54Z", "closed_at": null, "author_association": "NONE", "body": "In reader.py, line 17 throws error on python 3.5. The decode phrase should be removed, and then it works"}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/9996", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/9996/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/9996/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/9996/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/9996", "id": 229607812, "node_id": "MDU6SXNzdWUyMjk2MDc4MTI=", "number": 9996, "title": "Convolution_transpose layer now gives an error (Tensorflow 1.0.0). ", "user": {"login": "mparaschiv", "id": 25149393, "node_id": "MDQ6VXNlcjI1MTQ5Mzkz", "avatar_url": "https://avatars1.githubusercontent.com/u/25149393?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mparaschiv", "html_url": "https://github.com/mparaschiv", "followers_url": "https://api.github.com/users/mparaschiv/followers", "following_url": "https://api.github.com/users/mparaschiv/following{/other_user}", "gists_url": "https://api.github.com/users/mparaschiv/gists{/gist_id}", "starred_url": "https://api.github.com/users/mparaschiv/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mparaschiv/subscriptions", "organizations_url": "https://api.github.com/users/mparaschiv/orgs", "repos_url": "https://api.github.com/users/mparaschiv/repos", "events_url": "https://api.github.com/users/mparaschiv/events{/privacy}", "received_events_url": "https://api.github.com/users/mparaschiv/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 299643928, "node_id": "MDU6TGFiZWwyOTk2NDM5Mjg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:contributions%20welcome", "name": "stat:contributions welcome", "color": "f4b400", "default": false, "description": ""}, {"id": 473172988, "node_id": "MDU6TGFiZWw0NzMxNzI5ODg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:bug", "name": "type:bug", "color": "159b2e", "default": false, "description": ""}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2017-05-18T09:27:51Z", "updated_at": "2017-06-29T08:49:37Z", "closed_at": null, "author_association": "NONE", "body": "I am implementing an architecture with conv and conv_transpose layers and this is what I am giving the convolution transpose layer: \r\n```\r\n    ('convolution_transpose', dict(num_outputs=96, kernel_size=[41, 11],\r\n                                     stride=[2, 1], padding=\"SAME\", scope='dec_block_1'))\r\n```\r\n\r\nand this is what I get \r\n\r\n\r\n```\r\n/usr/local/lib/python3.5/dist-packages/tensorflow/contrib/framework/python/ops/arg_scope.py in func_with_args(*args, **kwargs)\r\n    175       current_args = current_scope[key_func].copy()\r\n    176       current_args.update(kwargs)\r\n--> 177     return func(*args, **current_args)\r\n    178   _add_op(func)\r\n    179   setattr(func_with_args, '_key_op', _key_op(func))\r\n\r\n/usr/local/lib/python3.5/dist-packages/tensorflow/contrib/layers/python/layers/layers.py in convolution2d_transpose(inputs, num_outputs, kernel_size, stride, padding, data_format, activation_fn, normalizer_fn, normalizer_params, weights_initializer, weights_regularizer, biases_initializer, biases_regularizer, reuse, variables_collections, outputs_collections, trainable, scope)\r\n   1123         _scope=sc,\r\n   1124         _reuse=reuse)\r\n-> 1125     outputs = layer.apply(inputs)\r\n   1126 \r\n   1127     # Add variables to collections.\r\n\r\n/usr/local/lib/python3.5/dist-packages/tensorflow/python/layers/base.py in apply(self, inputs, **kwargs)\r\n    301       Output tensor(s).\r\n    302     \"\"\"\r\n--> 303     return self.__call__(inputs, **kwargs)\r\n    304 \r\n    305 \r\n\r\n/usr/local/lib/python3.5/dist-packages/tensorflow/python/layers/base.py in __call__(self, inputs, **kwargs)\r\n    267           input_shapes = [x.get_shape() for x in input_list]\r\n    268           if len(input_shapes) == 1:\r\n--> 269             self.build(input_shapes[0])\r\n    270           else:\r\n    271             self.build(input_shapes)\r\n\r\n/usr/local/lib/python3.5/dist-packages/tensorflow/python/layers/convolutional.py in build(self, input_shape)\r\n   1048                                   regularizer=self.bias_regularizer,\r\n   1049                                   trainable=True,\r\n-> 1050                                   dtype=self.dtype)\r\n   1051     else:\r\n   1052       self.bias = None\r\n\r\n/usr/local/lib/python3.5/dist-packages/tensorflow/python/ops/variable_scope.py in get_variable(name, shape, dtype, initializer, regularizer, trainable, collections, caching_device, partitioner, validate_shape, custom_getter)\r\n    986       collections=collections, caching_device=caching_device,\r\n    987       partitioner=partitioner, validate_shape=validate_shape,\r\n--> 988       custom_getter=custom_getter)\r\n    989 get_variable_or_local_docstring = (\r\n    990     \"\"\"%s\r\n\r\n/usr/local/lib/python3.5/dist-packages/tensorflow/python/ops/variable_scope.py in get_variable(self, var_store, name, shape, dtype, initializer, regularizer, trainable, collections, caching_device, partitioner, validate_shape, custom_getter)\r\n    888           collections=collections, caching_device=caching_device,\r\n    889           partitioner=partitioner, validate_shape=validate_shape,\r\n--> 890           custom_getter=custom_getter)\r\n    891 \r\n    892   def _get_partitioned_variable(self,\r\n\r\n/usr/local/lib/python3.5/dist-packages/tensorflow/python/ops/variable_scope.py in get_variable(self, name, shape, dtype, initializer, regularizer, reuse, trainable, collections, caching_device, partitioner, validate_shape, custom_getter)\r\n    339           reuse=reuse, trainable=trainable, collections=collections,\r\n    340           caching_device=caching_device, partitioner=partitioner,\r\n--> 341           validate_shape=validate_shape)\r\n    342     else:\r\n    343       return _true_getter(\r\n\r\n/usr/local/lib/python3.5/dist-packages/tensorflow/python/layers/base.py in variable_getter(getter, name, shape, dtype, initializer, regularizer, trainable, **kwargs)\r\n    256           name, shape, initializer=initializer, regularizer=regularizer,\r\n    257           dtype=dtype, trainable=trainable,\r\n--> 258           variable_getter=functools.partial(getter, **kwargs))\r\n    259 \r\n    260     # Build (if necessary) and call the layer, inside a variable scope.\r\n\r\n/usr/local/lib/python3.5/dist-packages/tensorflow/python/layers/base.py in _add_variable(self, name, shape, dtype, initializer, regularizer, trainable, variable_getter)\r\n    206                                initializer=initializer,\r\n    207                                dtype=dtype,\r\n--> 208                                trainable=trainable and self.trainable)\r\n    209     # TODO(sguada) fix name = variable.op.name\r\n    210     if variable in existing_variables:\r\n\r\n/usr/local/lib/python3.5/dist-packages/tensorflow/contrib/layers/python/layers/layers.py in layer_variable_getter(getter, *args, **kwargs)\r\n   1308       getter = functools.partial(current_custom_getter, getter)\r\n   1309     kwargs['rename'] = rename\r\n-> 1310     return _model_variable_getter(getter, *args, **kwargs)\r\n   1311   return layer_variable_getter\r\n   1312 \r\n\r\n/usr/local/lib/python3.5/dist-packages/tensorflow/contrib/layers/python/layers/layers.py in _model_variable_getter(getter, name, shape, dtype, initializer, regularizer, trainable, collections, caching_device, partitioner, rename, **_)\r\n   1297       regularizer=regularizer, collections=collections, trainable=trainable,\r\n   1298       caching_device=caching_device, partitioner=partitioner,\r\n-> 1299       custom_getter=getter)\r\n   1300 \r\n   1301 \r\n\r\n/usr/local/lib/python3.5/dist-packages/tensorflow/contrib/framework/python/ops/arg_scope.py in func_with_args(*args, **kwargs)\r\n    175       current_args = current_scope[key_func].copy()\r\n    176       current_args.update(kwargs)\r\n--> 177     return func(*args, **current_args)\r\n    178   _add_op(func)\r\n    179   setattr(func_with_args, '_key_op', _key_op(func))\r\n\r\n/usr/local/lib/python3.5/dist-packages/tensorflow/contrib/framework/python/ops/variables.py in model_variable(name, shape, dtype, initializer, regularizer, trainable, collections, caching_device, device, partitioner, custom_getter)\r\n    266                  trainable=trainable, collections=collections,\r\n    267                  caching_device=caching_device, device=device,\r\n--> 268                  partitioner=partitioner, custom_getter=custom_getter)\r\n    269   return var\r\n    270 \r\n\r\n/usr/local/lib/python3.5/dist-packages/tensorflow/contrib/framework/python/ops/arg_scope.py in func_with_args(*args, **kwargs)\r\n    175       current_args = current_scope[key_func].copy()\r\n    176       current_args.update(kwargs)\r\n--> 177     return func(*args, **current_args)\r\n    178   _add_op(func)\r\n    179   setattr(func_with_args, '_key_op', _key_op(func))\r\n\r\n/usr/local/lib/python3.5/dist-packages/tensorflow/contrib/framework/python/ops/variables.py in variable(name, shape, dtype, initializer, regularizer, trainable, collections, caching_device, device, partitioner, custom_getter)\r\n    223                   collections=collections,\r\n    224                   caching_device=caching_device,\r\n--> 225                   partitioner=partitioner)\r\n    226 \r\n    227 \r\n\r\n/usr/local/lib/python3.5/dist-packages/tensorflow/python/ops/variable_scope.py in _true_getter(name, shape, dtype, initializer, regularizer, reuse, trainable, collections, caching_device, partitioner, validate_shape)\r\n    331           initializer=initializer, regularizer=regularizer, reuse=reuse,\r\n    332           trainable=trainable, collections=collections,\r\n--> 333           caching_device=caching_device, validate_shape=validate_shape)\r\n    334 \r\n    335     if custom_getter is not None:\r\n\r\n/usr/local/lib/python3.5/dist-packages/tensorflow/python/ops/variable_scope.py in _get_single_variable(self, name, shape, dtype, initializer, regularizer, partition_info, reuse, trainable, collections, caching_device, validate_shape)\r\n    682         caching_device=caching_device,\r\n    683         dtype=variable_dtype,\r\n--> 684         validate_shape=validate_shape)\r\n    685     self._vars[name] = v\r\n    686     logging.vlog(1, \"Created variable %s with shape %s and init %s\", v.name,\r\n\r\n/usr/local/lib/python3.5/dist-packages/tensorflow/python/ops/variables.py in __init__(self, initial_value, trainable, collections, validate_shape, caching_device, name, variable_def, dtype, expected_shape, import_scope)\r\n    224           name=name,\r\n    225           dtype=dtype,\r\n--> 226           expected_shape=expected_shape)\r\n    227 \r\n    228   def __str__(self):\r\n\r\n/usr/local/lib/python3.5/dist-packages/tensorflow/python/ops/variables.py in _init_from_args(self, initial_value, trainable, collections, validate_shape, caching_device, name, dtype, expected_shape)\r\n    301             with ops.name_scope(\"Initializer\"),  ops.device(None):\r\n    302               self._initial_value = ops.convert_to_tensor(\r\n--> 303                   initial_value(), name=\"initial_value\", dtype=dtype)\r\n    304               shape = (self._initial_value.get_shape()\r\n    305                        if validate_shape else tensor_shape.unknown_shape())\r\n\r\n/usr/local/lib/python3.5/dist-packages/tensorflow/python/ops/variable_scope.py in <lambda>()\r\n    671       else:\r\n    672         init_val = lambda: initializer(\r\n--> 673             shape.as_list(), dtype=dtype, partition_info=partition_info)\r\n    674         variable_dtype = dtype.base_dtype\r\n    675 \r\n\r\nTypeError: __init__() got multiple values for argument 'dtype'\r\n\r\n```\r\n\r\nThe same code worked on Tensorflow 0.12. "}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/9978", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/9978/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/9978/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/9978/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/9978", "id": 229441689, "node_id": "MDU6SXNzdWUyMjk0NDE2ODk=", "number": 9978, "title": "graph_editor.copy_with_input_replacements crashes for some orderings of inputs", "user": {"login": "yaroslavvb", "id": 23068, "node_id": "MDQ6VXNlcjIzMDY4", "avatar_url": "https://avatars3.githubusercontent.com/u/23068?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yaroslavvb", "html_url": "https://github.com/yaroslavvb", "followers_url": "https://api.github.com/users/yaroslavvb/followers", "following_url": "https://api.github.com/users/yaroslavvb/following{/other_user}", "gists_url": "https://api.github.com/users/yaroslavvb/gists{/gist_id}", "starred_url": "https://api.github.com/users/yaroslavvb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yaroslavvb/subscriptions", "organizations_url": "https://api.github.com/users/yaroslavvb/orgs", "repos_url": "https://api.github.com/users/yaroslavvb/repos", "events_url": "https://api.github.com/users/yaroslavvb/events{/privacy}", "received_events_url": "https://api.github.com/users/yaroslavvb/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 299643928, "node_id": "MDU6TGFiZWwyOTk2NDM5Mjg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:contributions%20welcome", "name": "stat:contributions welcome", "color": "f4b400", "default": false, "description": ""}, {"id": 473172988, "node_id": "MDU6TGFiZWw0NzMxNzI5ODg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:bug", "name": "type:bug", "color": "159b2e", "default": false, "description": ""}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2017-05-17T18:07:30Z", "updated_at": "2018-01-24T13:36:09Z", "closed_at": null, "author_association": "CONTRIBUTOR", "body": "Graph editor copy_with_input_replacements  visits nodes in order provided, and assumes that op referenced by \"op._original_op\" has already already been visited. When this assumption is false, it fails with KeyError inside transform.py\r\n\r\nReproducible case\r\n\r\n```\r\nimport tensorflow as tf\r\nimport numpy as np\r\nimport tensorflow.contrib.graph_editor as ge\r\n\r\nif __name__=='__main__':\r\n  params = tf.Variable(1, dtype=np.float32, name=\"params\")\r\n  temp = tf.reduce_sum(params, name=\"sum_temp\")\r\n  cost1 = tf.square(temp, name=\"cost1\")\r\n  gradients1 = tf.gradients([cost1], [params])\r\n  ops = tf.get_default_graph().get_operations()\r\n  ops = list(sorted(ops, key=lambda op: op.name))\r\n  copied_sgv, info = ge.copy_with_input_replacements(ge.sgv(ops), {})\r\n```\r\nIt fails with following error\r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \"graph_editor_test.py\", line 13, in <module>\r\n    copied_sgv, info = ge.copy_with_input_replacements(ge.sgv(ops), {})\r\n  File \"/Users/yaroslav/anaconda/envs/memory/lib/python3.5/site-packages/tensorflow/contrib/graph_editor/transform.py\", line 620, in copy_with_input_replacements\r\n    sgv, dst_graph, dst_scope, src_scope, reuse_dst_scope=reuse_dst_scope)\r\n  File \"/Users/yaroslav/anaconda/envs/memory/lib/python3.5/site-packages/tensorflow/contrib/graph_editor/transform.py\", line 436, in __call__\r\n    self._copy_ops(info)\r\n  File \"/Users/yaroslav/anaconda/envs/memory/lib/python3.5/site-packages/tensorflow/contrib/graph_editor/transform.py\", line 450, in _copy_ops\r\n    op_, op_outputs_ = self.transform_op_handler(info, op)\r\n  File \"/Users/yaroslav/anaconda/envs/memory/lib/python3.5/site-packages/tensorflow/contrib/graph_editor/transform.py\", line 173, in copy_op_handler\r\n    original_op = info.transform_original_op_handler(info, op._original_op)\r\n  File \"/Users/yaroslav/anaconda/envs/memory/lib/python3.5/site-packages/tensorflow/contrib/graph_editor/transform.py\", line 125, in transform_op_if_inside_handler\r\n    return info.transformed_ops[op]\r\nKeyError: <tf.Operation 'sum_temp' type=Sum>\r\n```\r\n\r\nA work-around is to clear `_original_op` entries for all ops\r\n\r\n```\r\ndef clear_original_ops(ops):\r\n  for op in ops:\r\n    op._original_op = None\r\n```\r\n\r\n@purpledog "}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/9968", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/9968/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/9968/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/9968/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/9968", "id": 229337914, "node_id": "MDU6SXNzdWUyMjkzMzc5MTQ=", "number": 9968, "title": "ValueError: Refusing to perform an overparameterized separable convolution", "user": {"login": "singlasahil14", "id": 6660192, "node_id": "MDQ6VXNlcjY2NjAxOTI=", "avatar_url": "https://avatars1.githubusercontent.com/u/6660192?v=4", "gravatar_id": "", "url": "https://api.github.com/users/singlasahil14", "html_url": "https://github.com/singlasahil14", "followers_url": "https://api.github.com/users/singlasahil14/followers", "following_url": "https://api.github.com/users/singlasahil14/following{/other_user}", "gists_url": "https://api.github.com/users/singlasahil14/gists{/gist_id}", "starred_url": "https://api.github.com/users/singlasahil14/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/singlasahil14/subscriptions", "organizations_url": "https://api.github.com/users/singlasahil14/orgs", "repos_url": "https://api.github.com/users/singlasahil14/repos", "events_url": "https://api.github.com/users/singlasahil14/events{/privacy}", "received_events_url": "https://api.github.com/users/singlasahil14/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 299643928, "node_id": "MDU6TGFiZWwyOTk2NDM5Mjg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:contributions%20welcome", "name": "stat:contributions welcome", "color": "f4b400", "default": false, "description": ""}, {"id": 284443156, "node_id": "MDU6TGFiZWwyODQ0NDMxNTY=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:docs", "name": "type:docs", "color": "159b2e", "default": false, "description": ""}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-05-17T12:38:44Z", "updated_at": "2017-05-22T14:42:34Z", "closed_at": null, "author_association": "NONE", "body": "Please go to Stack Overflow for help and support:\r\n\r\nhttp://stackoverflow.com/questions/tagged/tensorflow\r\n\r\nIf you open a GitHub issue, here is our policy:\r\n\r\n1. It must be a bug or a feature request.\r\n2. The form below must be filled out.\r\n\r\n**Here's why we have that policy**: TensorFlow developers respond to issues. We want to focus on work that benefits the whole community, e.g., fixing bugs and adding features. Support only helps individuals. GitHub also notifies thousands of people when issues are filed. We want them to see you communicating an interesting problem, rather than being redirected to Stack Overflow.\r\n\r\n------------------------\r\n\r\n### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**: Yes\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**: Ubuntu 16.04\r\n- **TensorFlow installed from (source or binary)**: binary\r\n- **TensorFlow version (use command below)**: 1.1rc\r\n- **Bazel version (if compiling from source)**: \r\n- **CUDA/cuDNN version**: No CUDA\r\n- **GPU model and memory**:\r\n- **Exact command to reproduce**:\r\n\r\nYou can collect some of this information using our environment capture script:\r\n\r\nhttps://github.com/tensorflow/tensorflow/tree/master/tools/tf_env_collect.sh\r\n\r\nYou can obtain the TensorFlow version with\r\n\r\npython -c \"import tensorflow as tf; print(tf.GIT_VERSION, tf.VERSION)\"\r\n\r\n### Describe the problem\r\n\r\nI am using tensorflow function tf.nn.separable_conv2d. I want to understand why  channel_multiplier * in_channels > out_channels is not allowed. It was not clear anywhere from the documentation.\r\n\r\n### Source code / logs\r\nInclude any logs or source code that would be helpful to diagnose the problem. If including tracebacks, please include the full traceback. Large logs and files should be attached. Try to provide a reproducible test case that is the bare minimum necessary to generate the problem.\r\n"}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/9951", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/9951/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/9951/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/9951/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/9951", "id": 229217255, "node_id": "MDU6SXNzdWUyMjkyMTcyNTU=", "number": 9951, "title": "Would you please accomodate for building tensorflow with a custom clang (4.0.0) and libc++ instead of stdlibc++? ", "user": {"login": "HFTrader", "id": 11621271, "node_id": "MDQ6VXNlcjExNjIxMjcx", "avatar_url": "https://avatars1.githubusercontent.com/u/11621271?v=4", "gravatar_id": "", "url": "https://api.github.com/users/HFTrader", "html_url": "https://github.com/HFTrader", "followers_url": "https://api.github.com/users/HFTrader/followers", "following_url": "https://api.github.com/users/HFTrader/following{/other_user}", "gists_url": "https://api.github.com/users/HFTrader/gists{/gist_id}", "starred_url": "https://api.github.com/users/HFTrader/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/HFTrader/subscriptions", "organizations_url": "https://api.github.com/users/HFTrader/orgs", "repos_url": "https://api.github.com/users/HFTrader/repos", "events_url": "https://api.github.com/users/HFTrader/events{/privacy}", "received_events_url": "https://api.github.com/users/HFTrader/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 299643928, "node_id": "MDU6TGFiZWwyOTk2NDM5Mjg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:contributions%20welcome", "name": "stat:contributions welcome", "color": "f4b400", "default": false, "description": ""}, {"id": 473173351, "node_id": "MDU6TGFiZWw0NzMxNzMzNTE=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:build/install", "name": "type:build/install", "color": "159b2e", "default": false, "description": ""}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-05-17T02:02:35Z", "updated_at": "2017-06-05T02:08:27Z", "closed_at": null, "author_association": "NONE", "body": "I have a custom clang with additional optimization passes but I cant get TS compiled with it. \r\n\r\n$ bazel build --cxxopt=-std=c++11 --cxxopt=-stdlib=libc++ tensorflow:libtensorflow.so\r\nINFO: Found 1 target...\r\nINFO: From Compiling external/protobuf/src/google/protobuf/compiler/js/embed.cc [for host]:\r\nexternal/protobuf/src/google/protobuf/compiler/js/embed.cc:37:12: warning: unused variable 'output_file' [-Wunused-const-variable]\r\nconst char output_file[] = \"well_known_types_embed.cc\";\r\n           ^\r\n1 warning generated.\r\nERROR: /home/hbucher/.cache/bazel/_bazel_hbucher/ad427c7fddd5b68de5e1cfaa7cd8c8cc/external/com_googlesource_code_re2/BUILD:11:1: undeclared inclusion(s) in rule '@com_googlesource_code_re2//:re2':\r\nthis rule is missing dependency declarations for the following files included by 'external/com_googlesource_code_re2/re2/bitstate.cc':\r\n  '/home/hbucher/install/include/c++/v1/stddef.h'\r\n  '/home/hbucher/install/include/c++/v1/__config'"}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/9925", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/9925/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/9925/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/9925/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/9925", "id": 228892895, "node_id": "MDU6SXNzdWUyMjg4OTI4OTU=", "number": 9925, "title": "graph_editor copy_with_input_replacements doesn't update colocation constraints", "user": {"login": "yaroslavvb", "id": 23068, "node_id": "MDQ6VXNlcjIzMDY4", "avatar_url": "https://avatars3.githubusercontent.com/u/23068?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yaroslavvb", "html_url": "https://github.com/yaroslavvb", "followers_url": "https://api.github.com/users/yaroslavvb/followers", "following_url": "https://api.github.com/users/yaroslavvb/following{/other_user}", "gists_url": "https://api.github.com/users/yaroslavvb/gists{/gist_id}", "starred_url": "https://api.github.com/users/yaroslavvb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yaroslavvb/subscriptions", "organizations_url": "https://api.github.com/users/yaroslavvb/orgs", "repos_url": "https://api.github.com/users/yaroslavvb/repos", "events_url": "https://api.github.com/users/yaroslavvb/events{/privacy}", "received_events_url": "https://api.github.com/users/yaroslavvb/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 299643928, "node_id": "MDU6TGFiZWwyOTk2NDM5Mjg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:contributions%20welcome", "name": "stat:contributions welcome", "color": "f4b400", "default": false, "description": ""}, {"id": 473172988, "node_id": "MDU6TGFiZWw0NzMxNzI5ODg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:bug", "name": "type:bug", "color": "159b2e", "default": false, "description": ""}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2017-05-16T01:49:41Z", "updated_at": "2018-01-04T13:29:23Z", "closed_at": null, "author_association": "CONTRIBUTOR", "body": "It seems if you try to use graph_editor to make copy of a model to place on another device, the new graph will still refer to old version inside colocation constraints. \r\n\r\nThis causes errors like below when trying to run resulting graph.\r\n`tensorflow.python.framework.errors_impl.InvalidArgumentError: Cannot colocate nodes 'gradients/Max_1_1_grad/mul' and 'gradients/AddN_13: Cannot merge devices with incompatible ids: '/GPU:0' and '/GPU:1'\r\n`\r\n\r\nMore natural might be to update colocation constraints to point to newly created copies of ops.\r\n\r\nTest case\r\n```\r\n  import tensorflow.contrib.graph_editor as ge\r\n  tf.reset_default_graph()\r\n  with tf.device('/cpu:0'):\r\n    a = tf.ones((), name='a')\r\n    with tf.get_default_graph().colocate_with(a):\r\n      b = tf.add(a, 1, name='b')\r\n  g = tf.get_default_graph()\r\n  ops = g.get_operations()\r\n  copied_sgv, info = ge.copy_with_input_replacements(ge.sgv(ops),\r\n                                                       {})\r\n  print(tf.get_default_graph().as_graph_def())\r\n```\r\n\r\nYou will see that newly created `b_1` op will refer to old op `a`\r\n\r\n```\r\nnode {\r\n  name: \"b/y_1\"\r\n  op: \"Const\"\r\n  device: \"/device:CPU:0\"\r\n  attr {\r\n    key: \"_class\"\r\n    value {\r\n      list {\r\n        s: \"loc:@a\"\r\n      }\r\n    }\r\n  }\r\n```\r\n\r\n@purpledog "}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/9918", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/9918/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/9918/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/9918/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/9918", "id": 228790793, "node_id": "MDU6SXNzdWUyMjg3OTA3OTM=", "number": 9918, "title": "preserving specific checkpoints", "user": {"login": "starcrest", "id": 28581427, "node_id": "MDQ6VXNlcjI4NTgxNDI3", "avatar_url": "https://avatars0.githubusercontent.com/u/28581427?v=4", "gravatar_id": "", "url": "https://api.github.com/users/starcrest", "html_url": "https://github.com/starcrest", "followers_url": "https://api.github.com/users/starcrest/followers", "following_url": "https://api.github.com/users/starcrest/following{/other_user}", "gists_url": "https://api.github.com/users/starcrest/gists{/gist_id}", "starred_url": "https://api.github.com/users/starcrest/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/starcrest/subscriptions", "organizations_url": "https://api.github.com/users/starcrest/orgs", "repos_url": "https://api.github.com/users/starcrest/repos", "events_url": "https://api.github.com/users/starcrest/events{/privacy}", "received_events_url": "https://api.github.com/users/starcrest/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 299643928, "node_id": "MDU6TGFiZWwyOTk2NDM5Mjg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:contributions%20welcome", "name": "stat:contributions welcome", "color": "f4b400", "default": false, "description": ""}, {"id": 473173272, "node_id": "MDU6TGFiZWw0NzMxNzMyNzI=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:feature", "name": "type:feature", "color": "159b2e", "default": false, "description": ""}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-05-15T17:43:28Z", "updated_at": "2017-05-19T10:01:02Z", "closed_at": null, "author_association": "NONE", "body": "Savers automatically clean up checkpoints and that's lovely.  But there are special points during training that I want to be sure to save (e.g. transitioning from a pre-training phrase to full training), which I can't ensure with the current options (unless I just keep everything, by making ```max_to_keep``` & ```keep_checkpoint_every_n_hours``` huge).\r\n\r\nTwo possible approaches:\r\n\r\n1)  ```saver.save(..., preserve=True)```\r\nNever clean up this checkpoint.\r\n\r\n2)  ```max_to_keep``` is defined **per** ```save_path```\r\ni.e. Whenever I change the ```save_path``` argument to ```save()``` in the middle of the session, don't clean up the checkpoints with the previous ```save_path```.\r\n\r\nThis is related to #8658 (with a little book-keeping on the client, you could do #8658 yourself)."}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/9917", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/9917/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/9917/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/9917/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/9917", "id": 228779127, "node_id": "MDU6SXNzdWUyMjg3NzkxMjc=", "number": 9917, "title": "Feature request: tf.nn.depthwise_conv2d_transpose", "user": {"login": "jvlmdr", "id": 224198, "node_id": "MDQ6VXNlcjIyNDE5OA==", "avatar_url": "https://avatars3.githubusercontent.com/u/224198?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jvlmdr", "html_url": "https://github.com/jvlmdr", "followers_url": "https://api.github.com/users/jvlmdr/followers", "following_url": "https://api.github.com/users/jvlmdr/following{/other_user}", "gists_url": "https://api.github.com/users/jvlmdr/gists{/gist_id}", "starred_url": "https://api.github.com/users/jvlmdr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jvlmdr/subscriptions", "organizations_url": "https://api.github.com/users/jvlmdr/orgs", "repos_url": "https://api.github.com/users/jvlmdr/repos", "events_url": "https://api.github.com/users/jvlmdr/events{/privacy}", "received_events_url": "https://api.github.com/users/jvlmdr/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 299643928, "node_id": "MDU6TGFiZWwyOTk2NDM5Mjg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:contributions%20welcome", "name": "stat:contributions welcome", "color": "f4b400", "default": false, "description": ""}, {"id": 473173272, "node_id": "MDU6TGFiZWw0NzMxNzMyNzI=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:feature", "name": "type:feature", "color": "159b2e", "default": false, "description": ""}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2017-05-15T16:59:18Z", "updated_at": "2019-05-20T08:14:31Z", "closed_at": null, "author_association": "NONE", "body": "### System information\r\n- **TensorFlow installed from (source or binary)**: source\r\n- **TensorFlow version (use command below)**: ('v1.1.0-0-g1ec6ed5', '1.1.0')\r\n- **Bazel version (if compiling from source)**: 0.4.5- (@non-git)\r\n- **CUDA/cuDNN version**: 7.5/5.1\r\n- **GPU model and memory**: NVIDIA M40, 12GB\r\n\r\n### Describe the problem\r\nI would like to apply a `tf.nn.conv2d_transpose` operation to each channel of a feature image independently. There is no `tf.nn.depthwise_conv2d_transpose` operation.\r\n\r\nI tried using `tf.nn.depthwise_conv2d_native_backprop_input` however, when I try to optimize a function that involves one of these operations, it results in an error because there is no gradient operation defined:\r\n\r\n```\r\nLookupError: No gradient defined for operation 'DepthwiseConv2dNativeBackpropInput_1' (op type: DepthwiseConv2dNativeBackpropInput)\r\n```\r\n\r\nThis is related to https://github.com/tensorflow/tensorflow/issues/7934\r\n\r\nIt is possible to achieve this functionality using `conv2d_transpose` by constructing a large filter with many coefficients set to zero. However, it is relatively inefficient, especially for a large number of channels."}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/9916", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/9916/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/9916/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/9916/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/9916", "id": 228772125, "node_id": "MDU6SXNzdWUyMjg3NzIxMjU=", "number": 9916, "title": "tf.self_adjoint_eig doesn't behave the same way with float32 and float64", "user": {"login": "jrabary", "id": 1025387, "node_id": "MDQ6VXNlcjEwMjUzODc=", "avatar_url": "https://avatars1.githubusercontent.com/u/1025387?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jrabary", "html_url": "https://github.com/jrabary", "followers_url": "https://api.github.com/users/jrabary/followers", "following_url": "https://api.github.com/users/jrabary/following{/other_user}", "gists_url": "https://api.github.com/users/jrabary/gists{/gist_id}", "starred_url": "https://api.github.com/users/jrabary/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jrabary/subscriptions", "organizations_url": "https://api.github.com/users/jrabary/orgs", "repos_url": "https://api.github.com/users/jrabary/repos", "events_url": "https://api.github.com/users/jrabary/events{/privacy}", "received_events_url": "https://api.github.com/users/jrabary/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 299643928, "node_id": "MDU6TGFiZWwyOTk2NDM5Mjg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:contributions%20welcome", "name": "stat:contributions welcome", "color": "f4b400", "default": false, "description": ""}, {"id": 473173272, "node_id": "MDU6TGFiZWw0NzMxNzMyNzI=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:feature", "name": "type:feature", "color": "159b2e", "default": false, "description": ""}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2017-05-15T16:31:50Z", "updated_at": "2017-05-16T16:57:17Z", "closed_at": null, "author_association": "NONE", "body": "Here is an example to reproduce the problem\r\n\r\n```\r\nl = tf.constant([[10., -4., -4., -2.],\r\n                  [-4., 10., -2., -4.],\r\n                  [-4., -2., 6., 0.],\r\n                  [-2., -4., 0., 6.]], dtype=tf.float64)\r\ne, v = tf.self_adjoint_eig(tf.expand_dims(l, 0))\r\n```\r\n\r\nWhen I set `dtype=tf.float64` the output is\r\n\r\n```\r\n// Eigen values\r\n[[ -2.31986627e-15   5.52786405e+00   1.20000000e+01   1.44721360e+01]]\r\n\r\n// Eigen vectors\r\n[[-0.5        -0.16245985  0.5        -0.68819096]\r\n [-0.5         0.16245985  0.5         0.68819096]\r\n [-0.5        -0.68819096 -0.5         0.16245985]\r\n [-0.5         0.68819096 -0.5        -0.16245985]]\r\n```\r\n\r\nWhen `dtype=tf.float32` the output is\r\n\r\n```\r\n// Eigen values\r\n[[ -1.02379988e-06   5.52786446e+00   1.20000019e+01   1.44721375e+01]]\r\n\r\n// Eigen vectors\r\n[[ 0.49999985  0.16245979  0.49999985 -0.68819106]\r\n [ 0.5        -0.16246006  0.50000018  0.68819082]\r\n [ 0.5         0.68819106 -0.49999988  0.16246004]\r\n [ 0.49999991 -0.68819088 -0.50000012 -0.16245979]]\r\n```\r\nIn this case the sign of the second eigen vector changed.\r\n\r\nThe numpy equivalent of this code always give the same result (in float or float32) and is similar to the result I got with the tf.float64 version\r\n\r\n```\r\nL = np.array([[10., -4., -4., -2.],\r\n                  [-4., 10., -2., -4.],\r\n                  [-4., -2., 6., 0.],\r\n                  [-2., -4., 0., 6.]])\r\nD, V =np.linalg.eigh(L)\r\n```\r\n\r\n\r\n```\r\n// numpy eigen values\r\n[  1.11716192e-15   5.52786405e+00   1.20000000e+01   1.44721360e+01]\r\n\r\n// numpy eigen vectors\r\n[[ 0.5        -0.16245985  0.5        -0.68819096]\r\n [ 0.5         0.16245985  0.5         0.68819096]\r\n [ 0.5        -0.68819096 -0.5         0.16245985]\r\n [ 0.5         0.68819096 -0.5        -0.16245985]]\r\n```\r\n\r\n"}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/9901", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/9901/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/9901/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/9901/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/9901", "id": 228575222, "node_id": "MDU6SXNzdWUyMjg1NzUyMjI=", "number": 9901, "title": "tf.gradients runtime scales suboptimally with size of the graph", "user": {"login": "yaroslavvb", "id": 23068, "node_id": "MDQ6VXNlcjIzMDY4", "avatar_url": "https://avatars3.githubusercontent.com/u/23068?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yaroslavvb", "html_url": "https://github.com/yaroslavvb", "followers_url": "https://api.github.com/users/yaroslavvb/followers", "following_url": "https://api.github.com/users/yaroslavvb/following{/other_user}", "gists_url": "https://api.github.com/users/yaroslavvb/gists{/gist_id}", "starred_url": "https://api.github.com/users/yaroslavvb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yaroslavvb/subscriptions", "organizations_url": "https://api.github.com/users/yaroslavvb/orgs", "repos_url": "https://api.github.com/users/yaroslavvb/repos", "events_url": "https://api.github.com/users/yaroslavvb/events{/privacy}", "received_events_url": "https://api.github.com/users/yaroslavvb/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 299643928, "node_id": "MDU6TGFiZWwyOTk2NDM5Mjg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:contributions%20welcome", "name": "stat:contributions welcome", "color": "f4b400", "default": false, "description": ""}, {"id": 473172988, "node_id": "MDU6TGFiZWw0NzMxNzI5ODg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:bug", "name": "type:bug", "color": "159b2e", "default": false, "description": ""}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 16, "created_at": "2017-05-14T22:37:07Z", "updated_at": "2019-06-07T17:34:01Z", "closed_at": null, "author_association": "CONTRIBUTOR", "body": "`tf.gradients` can be inefficient on large graphs and it runtime increases with size of the graph, even when the amount of work it needs to do is constant. This inefficiency is apparent when trying to differentiate small parts of large graph many times.\r\n\r\nDiscovered when trying to scale to 8 GPUs using data parallelism using 8 identical copies of model -- time spent inside gradients grows for each new replica even though replicas are identical and independent. We are calling `tf.gradients` many times (calling tf.gradients on parts of model in order to do memory saving gradients [trick](https://arxiv.org/abs/1604.06174)), our largest models spend >2 hours inside `tf.gradients`.\r\n\r\nI've profiled the runs and saw that most of the time is spent inside\r\n\r\n`_MarkReachedOps(from_ops, reached_ops)` inside `gradients_impl.py`\r\n\r\nIt's called as follows\r\n\r\n```\r\n  reached_ops = [False] * (graph._last_id + 1)\r\n  for op in to_ops:\r\n    reached_ops[op._id] = True\r\n```\r\nYou can see that it's using Python list initialized with the size of the entire graph so this initialization step would grow with size of the graph.\r\n\r\n![screenshot 2017-05-14 15 35 58](https://cloud.githubusercontent.com/assets/23068/26038340/102545da-38bb-11e7-873b-b57bc628ae7c.png)\r\n\r\n\r\nProfile of the `_MarkReachedOps` when calling when calling tf gradients 560 times, with each gradient call adding 35 nodes on average, and total size of the graph being 200k nodes\r\n\r\n```\r\nLine #      Hits         Time  Per Hit   % Time  Line Contents\r\n==============================================================\r\n   101                                           @profile\r\n   102                                           def _MarkReachedOps(from_ops, reached_ops):\r\n   103                                             \"\"\"Mark all ops reached from \"from_ops\".\r\n   104                                           \r\n   105                                             Args:\r\n   106                                               from_ops: list of Operations.\r\n   107                                               reached_ops: list of booleans, indexed by operation id.\r\n   108                                             \"\"\"\r\n   109       568         1967      3.5      0.0    queue = collections.deque()\r\n   110       568         4835      8.5      0.0    queue.extend(from_ops)\r\n   111  39912648     14661885      0.4      8.4    while queue:\r\n   112  39912080     17079278      0.4      9.8      op = queue.popleft()\r\n   113  39912080     41203709      1.0     23.7      if not reached_ops[op._id]:\r\n   114  28997056     21267924      0.7     12.2        reached_ops[op._id] = True\r\n   115  58483932     42196549      0.7     24.2        for output in op.outputs:\r\n   116  29486876     37595214      1.3     21.6          queue.extend(output.consumers())\r\n```\r\n\r\nPossible solutions could be a more efficient implementation of `_PendingCount`, or a different algorithm for `tf.gradients` which is more efficient for large graphs"}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/9868", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/9868/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/9868/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/9868/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/9868", "id": 228374432, "node_id": "MDU6SXNzdWUyMjgzNzQ0MzI=", "number": 9868, "title": "Chrome timeline for Keras?", "user": {"login": "stalagmite7", "id": 12752337, "node_id": "MDQ6VXNlcjEyNzUyMzM3", "avatar_url": "https://avatars2.githubusercontent.com/u/12752337?v=4", "gravatar_id": "", "url": "https://api.github.com/users/stalagmite7", "html_url": "https://github.com/stalagmite7", "followers_url": "https://api.github.com/users/stalagmite7/followers", "following_url": "https://api.github.com/users/stalagmite7/following{/other_user}", "gists_url": "https://api.github.com/users/stalagmite7/gists{/gist_id}", "starred_url": "https://api.github.com/users/stalagmite7/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/stalagmite7/subscriptions", "organizations_url": "https://api.github.com/users/stalagmite7/orgs", "repos_url": "https://api.github.com/users/stalagmite7/repos", "events_url": "https://api.github.com/users/stalagmite7/events{/privacy}", "received_events_url": "https://api.github.com/users/stalagmite7/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 299643928, "node_id": "MDU6TGFiZWwyOTk2NDM5Mjg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:contributions%20welcome", "name": "stat:contributions welcome", "color": "f4b400", "default": false, "description": ""}, {"id": 473173272, "node_id": "MDU6TGFiZWw0NzMxNzMyNzI=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:feature", "name": "type:feature", "color": "159b2e", "default": false, "description": ""}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 23, "created_at": "2017-05-12T18:39:06Z", "updated_at": "2019-06-06T22:47:23Z", "closed_at": null, "author_association": "NONE", "body": "I've been looking at the chrome timeline to profile my Keras models, but have been unable to find any documentation on how I could use it with my Keras models.\r\nI am running keras with a tf backend, and my sequential models are all built in keras. For instance, this is how my model is being built:\r\n\r\n\r\n    'model.fit_generator( \\\r\n\t\t\t\tgenerator= data_gen(args, 1), \\\r\n\t\t\t \tsteps_per_epoch=tr_steps, \\\r\n\t\t\t \tepochs=args.epochs, \\\r\n\t\t\t \tvalidation_data=data_gen(args, 2), \\\r\n\t\t\t \tvalidation_steps=val_steps, \\\r\n\t\t\t \tverbose=1, \\\r\n\t\t\t \tcallbacks=[checkpointer])`\r\n\r\n\r\n \r\n\r\n\r\nI am at a loss for how I would try to generate a timeline trace for this model, and wanted to know if there is any related documentation for how I can do this?"}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/9837", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/9837/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/9837/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/9837/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/9837", "id": 227968926, "node_id": "MDU6SXNzdWUyMjc5Njg5MjY=", "number": 9837, "title": "Optimizers in the C++ API", "user": {"login": "theflofly", "id": 3902382, "node_id": "MDQ6VXNlcjM5MDIzODI=", "avatar_url": "https://avatars1.githubusercontent.com/u/3902382?v=4", "gravatar_id": "", "url": "https://api.github.com/users/theflofly", "html_url": "https://github.com/theflofly", "followers_url": "https://api.github.com/users/theflofly/followers", "following_url": "https://api.github.com/users/theflofly/following{/other_user}", "gists_url": "https://api.github.com/users/theflofly/gists{/gist_id}", "starred_url": "https://api.github.com/users/theflofly/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/theflofly/subscriptions", "organizations_url": "https://api.github.com/users/theflofly/orgs", "repos_url": "https://api.github.com/users/theflofly/repos", "events_url": "https://api.github.com/users/theflofly/events{/privacy}", "received_events_url": "https://api.github.com/users/theflofly/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 299643928, "node_id": "MDU6TGFiZWwyOTk2NDM5Mjg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:contributions%20welcome", "name": "stat:contributions welcome", "color": "f4b400", "default": false, "description": ""}, {"id": 473173272, "node_id": "MDU6TGFiZWw0NzMxNzMyNzI=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:feature", "name": "type:feature", "color": "159b2e", "default": false, "description": ""}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 34, "created_at": "2017-05-11T12:06:08Z", "updated_at": "2019-12-04T01:58:42Z", "closed_at": null, "author_association": "CONTRIBUTOR", "body": "There is currently no Optimizer in the [C++ API](https://www.tensorflow.org/api_docs/cc/) compared as the ones that we can find in the [Python API](https://www.tensorflow.org/api_docs/python/).\r\n\r\nIt means, when using only the C++ API that we have to manually collect the gradients and apply them.\r\n\r\nDon't you think it should be a convenient add? Retrieving the gradients and applying them is kind of hard and error prone. If yes, I could work on it and create an Optimizer + GradientDescentOptimizer in the C++ API.\r\n\r\nI maybe missed something."}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/9705", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/9705/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/9705/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/9705/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/9705", "id": 226704268, "node_id": "MDU6SXNzdWUyMjY3MDQyNjg=", "number": 9705, "title": "atrous_conv2d does not support NCHW format", "user": {"login": "agupta74", "id": 21690396, "node_id": "MDQ6VXNlcjIxNjkwMzk2", "avatar_url": "https://avatars2.githubusercontent.com/u/21690396?v=4", "gravatar_id": "", "url": "https://api.github.com/users/agupta74", "html_url": "https://github.com/agupta74", "followers_url": "https://api.github.com/users/agupta74/followers", "following_url": "https://api.github.com/users/agupta74/following{/other_user}", "gists_url": "https://api.github.com/users/agupta74/gists{/gist_id}", "starred_url": "https://api.github.com/users/agupta74/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/agupta74/subscriptions", "organizations_url": "https://api.github.com/users/agupta74/orgs", "repos_url": "https://api.github.com/users/agupta74/repos", "events_url": "https://api.github.com/users/agupta74/events{/privacy}", "received_events_url": "https://api.github.com/users/agupta74/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 299643928, "node_id": "MDU6TGFiZWwyOTk2NDM5Mjg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:contributions%20welcome", "name": "stat:contributions welcome", "color": "f4b400", "default": false, "description": ""}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-05-05T22:07:31Z", "updated_at": "2017-09-23T03:13:39Z", "closed_at": null, "author_association": "NONE", "body": "Any plans to support NCHW format for atrous_conv2d?  As per the performance guidelines on TensorFlow website,  ops using NCHW format is faster than NHWC format for GPUs."}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/9664", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/9664/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/9664/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/9664/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/9664", "id": 226301921, "node_id": "MDU6SXNzdWUyMjYzMDE5MjE=", "number": 9664, "title": "Run half-precision models on Android", "user": {"login": "hicham-eyeem", "id": 24877550, "node_id": "MDQ6VXNlcjI0ODc3NTUw", "avatar_url": "https://avatars1.githubusercontent.com/u/24877550?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hicham-eyeem", "html_url": "https://github.com/hicham-eyeem", "followers_url": "https://api.github.com/users/hicham-eyeem/followers", "following_url": "https://api.github.com/users/hicham-eyeem/following{/other_user}", "gists_url": "https://api.github.com/users/hicham-eyeem/gists{/gist_id}", "starred_url": "https://api.github.com/users/hicham-eyeem/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hicham-eyeem/subscriptions", "organizations_url": "https://api.github.com/users/hicham-eyeem/orgs", "repos_url": "https://api.github.com/users/hicham-eyeem/repos", "events_url": "https://api.github.com/users/hicham-eyeem/events{/privacy}", "received_events_url": "https://api.github.com/users/hicham-eyeem/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 299643928, "node_id": "MDU6TGFiZWwyOTk2NDM5Mjg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:contributions%20welcome", "name": "stat:contributions welcome", "color": "f4b400", "default": false, "description": ""}, {"id": 473173272, "node_id": "MDU6TGFiZWw0NzMxNzMyNzI=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:feature", "name": "type:feature", "color": "159b2e", "default": false, "description": ""}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2017-05-04T14:35:42Z", "updated_at": "2017-09-15T07:41:57Z", "closed_at": null, "author_association": "NONE", "body": "Is it possible to run half-precision (float16) graphs on Android (arm64-v8a/AArch64 supports half-precision)? If so, what would be the approach to do that? Trying to run a float16 graph gives an exception saying that only INT32 and Float32 ops are supported.\r\n\r\nThank you in advance,"}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/9661", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/9661/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/9661/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/9661/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/9661", "id": 226290528, "node_id": "MDU6SXNzdWUyMjYyOTA1Mjg=", "number": 9661, "title": "[feature] Support Cross Compiling with tfcompile", "user": {"login": "cancan101", "id": 51059, "node_id": "MDQ6VXNlcjUxMDU5", "avatar_url": "https://avatars1.githubusercontent.com/u/51059?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cancan101", "html_url": "https://github.com/cancan101", "followers_url": "https://api.github.com/users/cancan101/followers", "following_url": "https://api.github.com/users/cancan101/following{/other_user}", "gists_url": "https://api.github.com/users/cancan101/gists{/gist_id}", "starred_url": "https://api.github.com/users/cancan101/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cancan101/subscriptions", "organizations_url": "https://api.github.com/users/cancan101/orgs", "repos_url": "https://api.github.com/users/cancan101/repos", "events_url": "https://api.github.com/users/cancan101/events{/privacy}", "received_events_url": "https://api.github.com/users/cancan101/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 299643928, "node_id": "MDU6TGFiZWwyOTk2NDM5Mjg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:contributions%20welcome", "name": "stat:contributions welcome", "color": "f4b400", "default": false, "description": ""}, {"id": 473173272, "node_id": "MDU6TGFiZWw0NzMxNzMyNzI=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:feature", "name": "type:feature", "color": "159b2e", "default": false, "description": ""}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 19, "created_at": "2017-05-04T14:00:42Z", "updated_at": "2019-02-03T16:05:59Z", "closed_at": null, "author_association": "CONTRIBUTOR", "body": "Tensorflow (using XLA) is able to AOT compile a graph using `tfcompile`. There does not seem to be a way to, or it it not documented, cross compile the graph (ie compile on OS X for deployment on iOS). (Related [SO](http://stackoverflow.com/questions/43508105/using-tfcompile-to-aot-compile-tensorflow-graph-for-ios) question).\r\n\r\nI suggest adding a means of performing this cross compilation."}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/9645", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/9645/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/9645/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/9645/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/9645", "id": 226144821, "node_id": "MDU6SXNzdWUyMjYxNDQ4MjE=", "number": 9645, "title": "Gather/Slice/StridedSlice Gradients Support in the C++ API", "user": {"login": "eaplatanios", "id": 1294940, "node_id": "MDQ6VXNlcjEyOTQ5NDA=", "avatar_url": "https://avatars2.githubusercontent.com/u/1294940?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eaplatanios", "html_url": "https://github.com/eaplatanios", "followers_url": "https://api.github.com/users/eaplatanios/followers", "following_url": "https://api.github.com/users/eaplatanios/following{/other_user}", "gists_url": "https://api.github.com/users/eaplatanios/gists{/gist_id}", "starred_url": "https://api.github.com/users/eaplatanios/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eaplatanios/subscriptions", "organizations_url": "https://api.github.com/users/eaplatanios/orgs", "repos_url": "https://api.github.com/users/eaplatanios/repos", "events_url": "https://api.github.com/users/eaplatanios/events{/privacy}", "received_events_url": "https://api.github.com/users/eaplatanios/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 299643928, "node_id": "MDU6TGFiZWwyOTk2NDM5Mjg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:contributions%20welcome", "name": "stat:contributions welcome", "color": "f4b400", "default": false, "description": ""}, {"id": 473173272, "node_id": "MDU6TGFiZWw0NzMxNzMyNzI=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:feature", "name": "type:feature", "color": "159b2e", "default": false, "description": ""}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2017-05-03T23:43:20Z", "updated_at": "2019-11-07T01:10:09Z", "closed_at": null, "author_association": "CONTRIBUTOR", "body": "Hi,\r\n\r\nI noticed that there is currently no gradient support in the C++ API for the gather, slice, and strided slice ops. Would it be too difficult to add support for those gradient ops? I am asking because they are ops very frequently used in the context of machine learning models and without them building ML models can be unnecessarily complicated.\r\n\r\nThank you!\r\n\r\nP.S. I have noticed that the Python API implementation of the gather op gradient uses indexed slices, but I am not sure if that is entirely necessary and can thus probably also be supported in the C++ API."}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/9503", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/9503/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/9503/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/9503/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/9503", "id": 224928534, "node_id": "MDU6SXNzdWUyMjQ5Mjg1MzQ=", "number": 9503, "title": "Ops for Reading from Cloud Spanner", "user": {"login": "aidan-plenert-macdonald", "id": 6690599, "node_id": "MDQ6VXNlcjY2OTA1OTk=", "avatar_url": "https://avatars2.githubusercontent.com/u/6690599?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aidan-plenert-macdonald", "html_url": "https://github.com/aidan-plenert-macdonald", "followers_url": "https://api.github.com/users/aidan-plenert-macdonald/followers", "following_url": "https://api.github.com/users/aidan-plenert-macdonald/following{/other_user}", "gists_url": "https://api.github.com/users/aidan-plenert-macdonald/gists{/gist_id}", "starred_url": "https://api.github.com/users/aidan-plenert-macdonald/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aidan-plenert-macdonald/subscriptions", "organizations_url": "https://api.github.com/users/aidan-plenert-macdonald/orgs", "repos_url": "https://api.github.com/users/aidan-plenert-macdonald/repos", "events_url": "https://api.github.com/users/aidan-plenert-macdonald/events{/privacy}", "received_events_url": "https://api.github.com/users/aidan-plenert-macdonald/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 299643928, "node_id": "MDU6TGFiZWwyOTk2NDM5Mjg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:contributions%20welcome", "name": "stat:contributions welcome", "color": "f4b400", "default": false, "description": ""}, {"id": 473173272, "node_id": "MDU6TGFiZWw0NzMxNzMyNzI=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:feature", "name": "type:feature", "color": "159b2e", "default": false, "description": ""}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 10, "created_at": "2017-04-27T22:16:06Z", "updated_at": "2019-10-27T00:24:37Z", "closed_at": null, "author_association": "NONE", "body": "Is there any plan to make F1 public (be it a service in Google Cloud or just open source) and make it possible to store TensorFlow tensors in F1? I ask because as far as I can tell (might be wrong), there isn't a \"native\" database for TensorFlow (meaning a C++ reader with direct connection to the DB), and F1 supports Protobuf columns which would seem like a natural fit for Tensorflow data.\r\n\r\nFrom [here](https://static.googleusercontent.com/media/research.google.com/en//pubs/archive/41344.pdf)\r\n> The F1 data model is very similar to the Spanner data\r\n> model. In fact, Spanner\u2019s original data model was more like\r\n> Bigtable, but Spanner later adopted F1\u2019s data model. At\r\n> the logical level, F1 has a relational schema similar to that\r\n> of a traditional RDBMS, with some extensions including\r\n> explicit table hierarchy and columns with Protocol Buffer\r\n> data types.\r\n"}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/9489", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/9489/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/9489/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/9489/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/9489", "id": 224823993, "node_id": "MDU6SXNzdWUyMjQ4MjM5OTM=", "number": 9489, "title": "failed to create cublas handle: CUBLAS_STATUS_NOT_INITIALIZED", "user": {"login": "chuchuhao", "id": 13161274, "node_id": "MDQ6VXNlcjEzMTYxMjc0", "avatar_url": "https://avatars1.githubusercontent.com/u/13161274?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chuchuhao", "html_url": "https://github.com/chuchuhao", "followers_url": "https://api.github.com/users/chuchuhao/followers", "following_url": "https://api.github.com/users/chuchuhao/following{/other_user}", "gists_url": "https://api.github.com/users/chuchuhao/gists{/gist_id}", "starred_url": "https://api.github.com/users/chuchuhao/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chuchuhao/subscriptions", "organizations_url": "https://api.github.com/users/chuchuhao/orgs", "repos_url": "https://api.github.com/users/chuchuhao/repos", "events_url": "https://api.github.com/users/chuchuhao/events{/privacy}", "received_events_url": "https://api.github.com/users/chuchuhao/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1605791310, "node_id": "MDU6TGFiZWwxNjA1NzkxMzEw", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/TF%202.1", "name": "TF 2.1", "color": "c2e0c6", "default": false, "description": "for tracking issues in 2.1 release"}, {"id": 386191887, "node_id": "MDU6TGFiZWwzODYxOTE4ODc=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:awaiting%20response", "name": "stat:awaiting response", "color": "f4b400", "default": false, "description": ""}, {"id": 473173351, "node_id": "MDU6TGFiZWw0NzMxNzMzNTE=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:build/install", "name": "type:build/install", "color": "159b2e", "default": false, "description": ""}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 36, "created_at": "2017-04-27T15:33:41Z", "updated_at": "2020-03-12T04:19:30Z", "closed_at": null, "author_association": "NONE", "body": "### System information\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**:\r\n```\r\nLinux 4.4.0-75-generic #96-Ubuntu SMP Thu Apr 20 09:56:33 UTC 2017 x86_64 x86_64 x86_64 GNU/Linux\r\n```\r\n- **TensorFlow version (use command below)**:\r\n```\r\nI tensorflow/stream_executor/dso_loader.cc:135] successfully opened CUDA library libcublas.so.8.0 locally\r\nI tensorflow/stream_executor/dso_loader.cc:135] successfully opened CUDA library libcudnn.so.5 locally\r\nI tensorflow/stream_executor/dso_loader.cc:135] successfully opened CUDA library libcufft.so.8.0 locally\r\nI tensorflow/stream_executor/dso_loader.cc:135] successfully opened CUDA library libcuda.so.1 locally\r\nI tensorflow/stream_executor/dso_loader.cc:135] successfully opened CUDA library libcurand.so.8.0 locally\r\nv1.0.0-65-g4763edf-dirty 1.0.1\r\n```\r\n- **CUDA/cuDNN version**:  8.0\r\n\r\n- **GPU model and memory**:\r\n```\r\nname: GeForce GTX 980\r\nmajor: 5 minor: 2 memoryClockRate (GHz) 1.2785\r\npciBusID 0000:01:00.0\r\nTotal memory: 3.94GiB\r\nFree memory: 145.50MiB\r\n```\r\n\r\n### Describe the problem\r\nIf I change the order of device usage, it would report error \r\n\r\n### Source code / logs\r\n- If I use GPU first then CPU, it would be fine\r\n```\r\nwith tf.device('/gpu:0'):\r\n    a = tf.constant([1.0, 2.0, 3.0, 4.0, 5.0, 6.0], shape=[2, 3], name='a')\r\n    b = tf.constant([1.0, 2.0, 3.0, 4.0, 5.0, 6.0], shape=[3, 2], name='b')\r\n    c = tf.matmul(a, b)\r\nwith tf.device('/cpu:0'):\r\n    e = tf.constant([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18], shape=[2, 9],dtype=tf.float32, name='e')\r\n    f = tf.matmul(c,e)\r\nsess = tf.Session(config=tf.ConfigProto(log_device_placement=True))\r\nprint(sess.run(f))\r\n```\r\n- But if I use CPU first then GPU, it return error\r\n```\r\nwith tf.device('/cpu:0'):\r\n    a = tf.constant([1.0, 2.0, 3.0, 4.0, 5.0, 6.0], shape=[2, 3], name='a')\r\n    b = tf.constant([1.0, 2.0, 3.0, 4.0, 5.0, 6.0], shape=[3, 2], name='b')\r\n    c = tf.matmul(a, b)\r\nwith tf.device('/gpu:0'):\r\n    e = tf.constant([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18], shape=[2, 9],dtype=tf.float32, name='e')\r\n    f = tf.matmul(c,e)\r\nsess = tf.Session(config=tf.ConfigProto(log_device_placement=True))\r\nprint(sess.run(f))\r\n```\r\n- the error dump below\r\n```\r\n    print(sess.run(f))\r\n  File \"/home/pika/.local/lib/python3.5/site-packages/tensorflow/python/client/session.py\", line 767, in run\r\n    run_metadata_ptr)\r\n  File \"/home/pika/.local/lib/python3.5/site-packages/tensorflow/python/client/session.py\", line 965, in _run\r\n    feed_dict_string, options, run_metadata)\r\n  File \"/home/pika/.local/lib/python3.5/site-packages/tensorflow/python/client/session.py\", line 1015, in _do_run\r\n    target_list, options, run_metadata)\r\n  File \"/home/pika/.local/lib/python3.5/site-packages/tensorflow/python/client/session.py\", line 1035, in _do_call\r\n    raise type(e)(node_def, op, message)\r\ntensorflow.python.framework.errors_impl.InternalError: Blas SGEMM launch failed : a.shape=(2, 2), b.shape=(2, 9), m=2, n=9, k=2\r\n         [[Node: MatMul_1 = MatMul[T=DT_FLOAT, transpose_a=false, transpose_b=false, _device=\"/job:localhost/replica:0/task:0/gpu:0\"](MatMul/_1, e)]]\r\n\r\nCaused by op 'MatMul_1', defined at:\r\n  File \"m1_n0teb00k/tensorflow_palyground.py\", line 13, in <module>\r\n    f = tf.matmul(c,e)\r\n  File \"/home/pika/.local/lib/python3.5/site-packages/tensorflow/python/ops/math_ops.py\", line 1765, in matmul\r\n    a, b, transpose_a=transpose_a, transpose_b=transpose_b, name=name)\r\n  File \"/home/pika/.local/lib/python3.5/site-packages/tensorflow/python/ops/gen_math_ops.py\", line 1454, in _mat_mul\r\n    transpose_b=transpose_b, name=name)\r\n  File \"/home/pika/.local/lib/python3.5/site-packages/tensorflow/python/framework/op_def_library.py\", line 763, in apply_op\r\n    op_def=op_def)\r\n  File \"/home/pika/.local/lib/python3.5/site-packages/tensorflow/python/framework/ops.py\", line 2327, in create_op\r\n    original_op=self._default_original_op, op_def=op_def)\r\n  File \"/home/pika/.local/lib/python3.5/site-packages/tensorflow/python/framework/ops.py\", line 1226, in __init__\r\n    self._traceback = _extract_stack()\r\n\r\nInternalError (see above for traceback): Blas SGEMM launch failed : a.shape=(2, 2), b.shape=(2, 9), m=2, n=9, k=2\r\n         [[Node: MatMul_1 = MatMul[T=DT_FLOAT, transpose_a=false, transpose_b=false, _device=\"/job:localhost/replica:0/task:0/gpu:0\"](MatMul/_1, e)]]\r\n```"}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/9434", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/9434/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/9434/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/9434/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/9434", "id": 224097674, "node_id": "MDU6SXNzdWUyMjQwOTc2NzQ=", "number": 9434, "title": "Using replace to evaluate multiple gradients during training in Keras", "user": {"login": "slavakung", "id": 4301275, "node_id": "MDQ6VXNlcjQzMDEyNzU=", "avatar_url": "https://avatars1.githubusercontent.com/u/4301275?v=4", "gravatar_id": "", "url": "https://api.github.com/users/slavakung", "html_url": "https://github.com/slavakung", "followers_url": "https://api.github.com/users/slavakung/followers", "following_url": "https://api.github.com/users/slavakung/following{/other_user}", "gists_url": "https://api.github.com/users/slavakung/gists{/gist_id}", "starred_url": "https://api.github.com/users/slavakung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/slavakung/subscriptions", "organizations_url": "https://api.github.com/users/slavakung/orgs", "repos_url": "https://api.github.com/users/slavakung/repos", "events_url": "https://api.github.com/users/slavakung/events{/privacy}", "received_events_url": "https://api.github.com/users/slavakung/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 299643928, "node_id": "MDU6TGFiZWwyOTk2NDM5Mjg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:contributions%20welcome", "name": "stat:contributions welcome", "color": "f4b400", "default": false, "description": ""}, {"id": 473172988, "node_id": "MDU6TGFiZWw0NzMxNzI5ODg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:bug", "name": "type:bug", "color": "159b2e", "default": false, "description": ""}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2017-04-25T10:53:13Z", "updated_at": "2019-04-11T04:20:48Z", "closed_at": null, "author_association": "NONE", "body": "I am a researcher in optimization and I am interested in testing algorithms for training DNNs using keras, and am now using tensorflow backend.\r\n\r\nIn practice, I would like to do something a bit different from the other optimizers, I would like to compute the gradient at a slightly different value of the tensor of parameters than the current one, and the update I will make to the parameters will depend on both the current gradient and this other gradient.  \r\n\r\nIn practice this has proven more difficult than anticipated.\r\nSee https://github.com/fchollet/keras/issues/6175\r\nit was suggested I come to here for further suggestions.\r\n\r\nMy code is a standard keras python code, the body does\r\n\r\nmodel = Sequential()\r\nmodel.add(Dense(512, input_shape=(784,)))\r\n...\r\nmodel.compile(loss='categorical_crossentropy',\r\n              optimizer = myopt,\r\n              metrics=['accuracy'])\r\nhistory = model.fit(X_train, Y_train,\r\n                    batch_size=batch_size, nb_epoch=nb_epoch, \r\n                    verbose=1, validation_data=(X_test, Y_test))\r\n\r\n\r\nIn the get_updates call function of my custom optimizer, it begins as usual\r\n\r\n    def get_updates(self, params, constraints, loss):\r\n        grads = self.get_gradients(loss, params)\r\n\r\nNow, I want to now get the gradients at a different value of grads. First I tried just defining another tensor of the same structure but different values and take the get_gradients, but of course the loss is a graph depending on params already. Then I tried changing params itself (then copying the old values of the tensor to another one, to replace params after the evaluation) but apparently as the forward pass was not made this was ineffective. As per the advice in the above github conversation in keras, I tried,\r\n\r\n        tempparams = [a+1. for a in params]\r\n        replace = {p:npm for p, npm in zip(params, tempparams)}\r\n        gradsn = [tf.contrib.graph_editor.graph_replace(g.op, replace) for g in grads]\r\n\r\n\r\nbut this is still not OK, as I get the error\r\n\r\nTypeError: Expected a type in (<class 'tensorflow.python.framework.ops.Operation'>), got: <class 'tensorflow.python.ops.variables.Variable'\r\n\r\n\r\nThank you\r\n\r\n\r\n\r\n"}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/9420", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/9420/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/9420/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/9420/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/9420", "id": 223897530, "node_id": "MDU6SXNzdWUyMjM4OTc1MzA=", "number": 9420, "title": "[Java] Distributed mode support", "user": {"login": "mdymczyk", "id": 1208615, "node_id": "MDQ6VXNlcjEyMDg2MTU=", "avatar_url": "https://avatars0.githubusercontent.com/u/1208615?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mdymczyk", "html_url": "https://github.com/mdymczyk", "followers_url": "https://api.github.com/users/mdymczyk/followers", "following_url": "https://api.github.com/users/mdymczyk/following{/other_user}", "gists_url": "https://api.github.com/users/mdymczyk/gists{/gist_id}", "starred_url": "https://api.github.com/users/mdymczyk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mdymczyk/subscriptions", "organizations_url": "https://api.github.com/users/mdymczyk/orgs", "repos_url": "https://api.github.com/users/mdymczyk/repos", "events_url": "https://api.github.com/users/mdymczyk/events{/privacy}", "received_events_url": "https://api.github.com/users/mdymczyk/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 299643928, "node_id": "MDU6TGFiZWwyOTk2NDM5Mjg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:contributions%20welcome", "name": "stat:contributions welcome", "color": "f4b400", "default": false, "description": ""}, {"id": 473173272, "node_id": "MDU6TGFiZWw0NzMxNzMyNzI=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:feature", "name": "type:feature", "color": "159b2e", "default": false, "description": ""}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2017-04-24T17:38:27Z", "updated_at": "2019-03-19T17:17:38Z", "closed_at": null, "author_association": "CONTRIBUTOR", "body": "### Describe the problem\r\n\r\nIs there any plan to add distributed mode to the Java API? I checked the code and it seems to be doable (unless I missed something) so I was wondering if anyone is already working on it? I went through the issue tracker and PRs but couldn't find anything related."}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/9368", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/9368/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/9368/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/9368/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/9368", "id": 223419703, "node_id": "MDU6SXNzdWUyMjM0MTk3MDM=", "number": 9368, "title": "PreventGradients in SoftmaxCrossEntropyWithLogit ops", "user": {"login": "renmengye", "id": 1137173, "node_id": "MDQ6VXNlcjExMzcxNzM=", "avatar_url": "https://avatars1.githubusercontent.com/u/1137173?v=4", "gravatar_id": "", "url": "https://api.github.com/users/renmengye", "html_url": "https://github.com/renmengye", "followers_url": "https://api.github.com/users/renmengye/followers", "following_url": "https://api.github.com/users/renmengye/following{/other_user}", "gists_url": "https://api.github.com/users/renmengye/gists{/gist_id}", "starred_url": "https://api.github.com/users/renmengye/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/renmengye/subscriptions", "organizations_url": "https://api.github.com/users/renmengye/orgs", "repos_url": "https://api.github.com/users/renmengye/repos", "events_url": "https://api.github.com/users/renmengye/events{/privacy}", "received_events_url": "https://api.github.com/users/renmengye/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 299643928, "node_id": "MDU6TGFiZWwyOTk2NDM5Mjg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:contributions%20welcome", "name": "stat:contributions welcome", "color": "f4b400", "default": false, "description": ""}, {"id": 473173272, "node_id": "MDU6TGFiZWw0NzMxNzMyNzI=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:feature", "name": "type:feature", "color": "159b2e", "default": false, "description": ""}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2017-04-21T15:34:28Z", "updated_at": "2019-10-28T01:27:06Z", "closed_at": null, "author_association": "NONE", "body": "SparseSoftmaxCrossEntropyWithLogits cannot take second order gradients (It's not a beautiful hack, and I am not sure how much computational speed up it will bring). \r\nAdding PreventGradient node in the gradient graph seems to contaminate the computation graph structure, e.g. I am doing custom forward-mode automatic differentiation.\r\nReference: https://github.com/tensorflow/tensorflow/blob/r1.0/tensorflow/python/ops/nn_grad.py#L334"}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/9319", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/9319/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/9319/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/9319/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/9319", "id": 222908250, "node_id": "MDU6SXNzdWUyMjI5MDgyNTA=", "number": 9319, "title": "[feature] Mobile Integration with NNPACK", "user": {"login": "cancan101", "id": 51059, "node_id": "MDQ6VXNlcjUxMDU5", "avatar_url": "https://avatars1.githubusercontent.com/u/51059?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cancan101", "html_url": "https://github.com/cancan101", "followers_url": "https://api.github.com/users/cancan101/followers", "following_url": "https://api.github.com/users/cancan101/following{/other_user}", "gists_url": "https://api.github.com/users/cancan101/gists{/gist_id}", "starred_url": "https://api.github.com/users/cancan101/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cancan101/subscriptions", "organizations_url": "https://api.github.com/users/cancan101/orgs", "repos_url": "https://api.github.com/users/cancan101/repos", "events_url": "https://api.github.com/users/cancan101/events{/privacy}", "received_events_url": "https://api.github.com/users/cancan101/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 299643928, "node_id": "MDU6TGFiZWwyOTk2NDM5Mjg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:contributions%20welcome", "name": "stat:contributions welcome", "color": "f4b400", "default": false, "description": ""}, {"id": 473173272, "node_id": "MDU6TGFiZWw0NzMxNzMyNzI=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:feature", "name": "type:feature", "color": "159b2e", "default": false, "description": ""}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 22, "created_at": "2017-04-20T00:09:19Z", "updated_at": "2018-07-28T19:53:19Z", "closed_at": null, "author_association": "CONTRIBUTOR", "body": "Caffe2 use can use [NNPACK](https://github.com/Maratyszcza/NNPACK) for [which it says](http://caffe2.ai/docs/mobile-integration.html#null__performance-considerations):\r\n>NNPACK, which specifically optimizes convolutions on ARM\r\n\r\n>Currently Caffe2 is optimized for ARM CPUs with NEON (basically any ARM CPU since 2012). Perhaps surprisingly, ARM CPUs outperform the on-board GPUs (our NNPACK ARM CPU implementation outperforms Apple\u2019s MPSCNNConvolution for all devices except the iPhone 7). \r\n\r\n>For a convolutional implementation, it is recommended to use NNPACK since that\u2019s substantially faster (~2x-3x) than the standard im2col/sgemm implementation used in most frameworks. \r\n\r\nThe readme for NNPACK lists Tensorflow as a framework that could potentially use it, though [that has not yet happened](https://github.com/Maratyszcza/NNPACK/issues/1).\r\n\r\nI believe that TF also avoids using the im2col/sgemm approach on mobile and instead uses the Eigen TensorConvolution. It would be good to benchmark these two options against each other and see if TF performance can be improved by using the `NNPACK` conv instead of the eigen conv. There is an open ticket to do this benchmarking: https://github.com/Maratyszcza/NNPACK/issues/30.\r\n\r\nAs a feature I suggest offering an `NNPACK` backed kernel to allow comparing vs Eigen."}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/9292", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/9292/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/9292/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/9292/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/9292", "id": 222504069, "node_id": "MDU6SXNzdWUyMjI1MDQwNjk=", "number": 9292, "title": "xorshift128+ version of (stateless) random ops", "user": {"login": "girving", "id": 70511, "node_id": "MDQ6VXNlcjcwNTEx", "avatar_url": "https://avatars1.githubusercontent.com/u/70511?v=4", "gravatar_id": "", "url": "https://api.github.com/users/girving", "html_url": "https://github.com/girving", "followers_url": "https://api.github.com/users/girving/followers", "following_url": "https://api.github.com/users/girving/following{/other_user}", "gists_url": "https://api.github.com/users/girving/gists{/gist_id}", "starred_url": "https://api.github.com/users/girving/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/girving/subscriptions", "organizations_url": "https://api.github.com/users/girving/orgs", "repos_url": "https://api.github.com/users/girving/repos", "events_url": "https://api.github.com/users/girving/events{/privacy}", "received_events_url": "https://api.github.com/users/girving/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 299643928, "node_id": "MDU6TGFiZWwyOTk2NDM5Mjg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:contributions%20welcome", "name": "stat:contributions welcome", "color": "f4b400", "default": false, "description": ""}, {"id": 473173272, "node_id": "MDU6TGFiZWw0NzMxNzMyNzI=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:feature", "name": "type:feature", "color": "159b2e", "default": false, "description": ""}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2017-04-18T18:25:35Z", "updated_at": "2017-04-18T18:31:03Z", "closed_at": null, "author_association": "CONTRIBUTOR", "body": "Currently, TensorFlow's random numbers use the Philox counter mode generator, which is extremely easy to parallelize on both CPU and GPU.  This applies to both the normal stateful ops and the new [`tf.contrib.stateless`](https://github.com/tensorflow/tensorflow/commit/cc45456e4ad0eff16127d1727d0cf48afb71ca0e) versions with custom seeding.\r\n\r\nxorshift128+ is a simpler generator that could conceivably speed up random number generation.  Unfortunately, it is not a counter mode generator, and is thus difficult to parallelize or use safely in a random access setting.\r\n\r\nUntil now!  Commit https://github.com/girving/tensorflow/commit/60abb26f528f53e7692edb3e89489a69b59ae83e on branch https://github.com/girving/tensorflow/tree/xorshift implements random access into the xorshift128+ generator in a reasonably efficient manner, using some finite field machinery.  Specifically, jumps in xorshift128+ are represented as elements of the finite field GF(2^128), composed to produce other jumps, then mapped through linear maps to produce xorshift128+ values.\r\n\r\nHowever, the code is a proof of concept.  A decent amount of further work would have to be done to get committed to TensorFlow.  In particular, the parallelism code on both CPU and GPU would have to be written, by computing one jump per thread of execution (many jumps can be computed more cheaply vs. one at a time).  The current code is also nonportable: it assumes special  instructions for carryless multiplication of polynomials over GF(2).  These instructions are available on recent Intel and AMD CPUs, but a slow path would need to be written to handle everything else.\r\n\r\nAlso, whether the result would actually be faster is an open question.\r\n\r\nI don't have time to do the remaining work, so I am leaving this here as a project in case someone wants to take it on with my help."}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/9260", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/9260/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/9260/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/9260/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/9260", "id": 222076137, "node_id": "MDU6SXNzdWUyMjIwNzYxMzc=", "number": 9260, "title": "Sampling from a categorical distribution without replacement", "user": {"login": "danijar", "id": 2111293, "node_id": "MDQ6VXNlcjIxMTEyOTM=", "avatar_url": "https://avatars0.githubusercontent.com/u/2111293?v=4", "gravatar_id": "", "url": "https://api.github.com/users/danijar", "html_url": "https://github.com/danijar", "followers_url": "https://api.github.com/users/danijar/followers", "following_url": "https://api.github.com/users/danijar/following{/other_user}", "gists_url": "https://api.github.com/users/danijar/gists{/gist_id}", "starred_url": "https://api.github.com/users/danijar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/danijar/subscriptions", "organizations_url": "https://api.github.com/users/danijar/orgs", "repos_url": "https://api.github.com/users/danijar/repos", "events_url": "https://api.github.com/users/danijar/events{/privacy}", "received_events_url": "https://api.github.com/users/danijar/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 299643928, "node_id": "MDU6TGFiZWwyOTk2NDM5Mjg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:contributions%20welcome", "name": "stat:contributions welcome", "color": "f4b400", "default": false, "description": ""}, {"id": 473173272, "node_id": "MDU6TGFiZWw0NzMxNzMyNzI=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:feature", "name": "type:feature", "color": "159b2e", "default": false, "description": ""}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 21, "created_at": "2017-04-17T06:36:27Z", "updated_at": "2019-10-30T16:50:06Z", "closed_at": null, "author_association": "MEMBER", "body": "Both `tf.multinomial()` and `tf.contrib.distributions.Categorical.sample()` allow to sample from a multinomial distribution. However, they only allow sampling with replacement.\r\n\r\nIn constrast, Numpy's `numpy.random.choice()` has a `replace` parameter that allows sampling without replacement. Would it be possible to add a similar functionality to TensorFlow?\r\n\r\nOne use case is sampling examples from the dataset proportional to the model's last loss on them. When an example generates a very large loss, the next batch will mainly consist of that example. Using sampling without replacement, we can avoid this problem.\r\n\r\nI see that sampling with replacement can be parallelized and implemented in a vectorized way, but I don't think sampling speed is a bottleneck in most people's programs."}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/9258", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/9258/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/9258/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/9258/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/9258", "id": 222069607, "node_id": "MDU6SXNzdWUyMjIwNjk2MDc=", "number": 9258, "title": "Create support for a score threshold in NonMaxSuppression to skip over boxes with low score", "user": {"login": "sheide", "id": 14067614, "node_id": "MDQ6VXNlcjE0MDY3NjE0", "avatar_url": "https://avatars1.githubusercontent.com/u/14067614?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sheide", "html_url": "https://github.com/sheide", "followers_url": "https://api.github.com/users/sheide/followers", "following_url": "https://api.github.com/users/sheide/following{/other_user}", "gists_url": "https://api.github.com/users/sheide/gists{/gist_id}", "starred_url": "https://api.github.com/users/sheide/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sheide/subscriptions", "organizations_url": "https://api.github.com/users/sheide/orgs", "repos_url": "https://api.github.com/users/sheide/repos", "events_url": "https://api.github.com/users/sheide/events{/privacy}", "received_events_url": "https://api.github.com/users/sheide/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 299643928, "node_id": "MDU6TGFiZWwyOTk2NDM5Mjg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:contributions%20welcome", "name": "stat:contributions welcome", "color": "f4b400", "default": false, "description": ""}, {"id": 473173272, "node_id": "MDU6TGFiZWw0NzMxNzMyNzI=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:feature", "name": "type:feature", "color": "159b2e", "default": false, "description": ""}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-04-17T05:37:41Z", "updated_at": "2017-08-24T20:45:38Z", "closed_at": null, "author_association": "NONE", "body": "Right now tensorflow::ops::NonMaxSuppression only prunes away boxes that have a high IOU overlap with previously selected boxes. It would be nice to also support a threshold on score so that the algorithm can skip over boxes that have a score below that threshold. We strongly believe this feature will speed up nms. Is there a plan to add this score threshold as a parameter?"}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/9210", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/9210/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/9210/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/9210/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/9210", "id": 221742880, "node_id": "MDU6SXNzdWUyMjE3NDI4ODA=", "number": 9210, "title": "Feature: Sparse matrix multiplications for Tensors with rank > 2", "user": {"login": "supercoderhawk", "id": 10846896, "node_id": "MDQ6VXNlcjEwODQ2ODk2", "avatar_url": "https://avatars3.githubusercontent.com/u/10846896?v=4", "gravatar_id": "", "url": "https://api.github.com/users/supercoderhawk", "html_url": "https://github.com/supercoderhawk", "followers_url": "https://api.github.com/users/supercoderhawk/followers", "following_url": "https://api.github.com/users/supercoderhawk/following{/other_user}", "gists_url": "https://api.github.com/users/supercoderhawk/gists{/gist_id}", "starred_url": "https://api.github.com/users/supercoderhawk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/supercoderhawk/subscriptions", "organizations_url": "https://api.github.com/users/supercoderhawk/orgs", "repos_url": "https://api.github.com/users/supercoderhawk/repos", "events_url": "https://api.github.com/users/supercoderhawk/events{/privacy}", "received_events_url": "https://api.github.com/users/supercoderhawk/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 299643928, "node_id": "MDU6TGFiZWwyOTk2NDM5Mjg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:contributions%20welcome", "name": "stat:contributions welcome", "color": "f4b400", "default": false, "description": ""}, {"id": 473173272, "node_id": "MDU6TGFiZWw0NzMxNzMyNzI=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:feature", "name": "type:feature", "color": "159b2e", "default": false, "description": ""}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 10, "created_at": "2017-04-14T05:08:38Z", "updated_at": "2019-12-13T08:29:50Z", "closed_at": null, "author_association": "NONE", "body": "## System Information:\r\nWindows 10, x64, Tensorflow 1.1.0.rc1\r\n\r\n## Description:\r\nThe 3-D sparse tensor (placeholder) multiply with 3-D dense tensor has bug, the operation will failed.\r\n\r\n```python\r\nx = tf.sparse_placeholder(tf.float32, shape=[None, 2, 2])\r\ny = tf.constant(np.ones([3, 2, 1]), dtype=tf.float32)\r\nz = tf.matmul(x, y, a_is_sparse=True)\r\n\r\nindices = [[1, 1, 1], [2, 0, 0], [3, 0, 1]]\r\nvalues = [1.0, 2.0, 3.0]\r\ndense_shape = [3, 2, 2]\r\nx_val = tf.SparseTensorValue(indices, values, dense_shape)\r\n\r\nwith tf.Session() as sess:\r\n  res = sess.run(z, feed_dict={x: x_val})\r\n  print(res)\r\n```\r\nexpected result(3x2x1):\r\n```\r\n[[[ 0.][ 1.]]\r\n [[ 1.][ 0.]]\r\n [[ 1.][ 0.]]]\r\n```\r\nbut output some errors actually :\r\n\r\n```python\r\nTraceback (most recent call last):\r\n  File \"D:/Learning/master_project/clinicalText/SourceCode/Python/DNN_CWS/seg_dnn.py\", line 369, in <module>\r\n    cws = SegDNN(constant.VOCAB_SIZE, embed_size, constant.DNN_SKIP_WINDOW)\r\n  File \"D:/Learning/master_project/clinicalText/SourceCode/Python/DNN_CWS/seg_dnn.py\", line 76, in __init__\r\n    self.loss = tf.reduce_sum(tf.matmul(self.slim_map_matrix,tf.expand_dims(tf.transpose(self.word_score),2),a_is_sparse=True))\r\n  File \"E:\\IntelPython35\\envs\\tensorflow-intel\\lib\\site-packages\\tensorflow\\python\\ops\\math_ops.py\", line 1755, in matmul\r\n    a = ops.convert_to_tensor(a, name=\"a\")\r\n  File \"E:\\IntelPython35\\envs\\tensorflow-intel\\lib\\site-packages\\tensorflow\\python\\framework\\ops.py\", line 639, in convert_to_tensor\r\n    as_ref=False)\r\n  File \"E:\\IntelPython35\\envs\\tensorflow-intel\\lib\\site-packages\\tensorflow\\python\\framework\\ops.py\", line 704, in internal_convert_to_tensor\r\n    ret = conversion_func(value, dtype=dtype, name=name, as_ref=as_ref)\r\n  File \"E:\\IntelPython35\\envs\\tensorflow-intel\\lib\\site-packages\\tensorflow\\python\\framework\\constant_op.py\", line 113, in _constant_tensor_conversion_function\r\n    return constant(v, dtype=dtype, name=name)\r\n  File \"E:\\IntelPython35\\envs\\tensorflow-intel\\lib\\site-packages\\tensorflow\\python\\framework\\constant_op.py\", line 102, in constant\r\n    tensor_util.make_tensor_proto(value, dtype=dtype, shape=shape, verify_shape=verify_shape))\r\n  File \"E:\\IntelPython35\\envs\\tensorflow-intel\\lib\\site-packages\\tensorflow\\python\\framework\\tensor_util.py\", line 444, in make_tensor_proto\r\n    tensor_proto.string_val.extend([compat.as_bytes(x) for x in proto_values])\r\n  File \"E:\\IntelPython35\\envs\\tensorflow-intel\\lib\\site-packages\\tensorflow\\python\\framework\\tensor_util.py\", line 444, in <listcomp>\r\n    tensor_proto.string_val.extend([compat.as_bytes(x) for x in proto_values])\r\n  File \"E:\\IntelPython35\\envs\\tensorflow-intel\\lib\\site-packages\\tensorflow\\python\\util\\compat.py\", line 65, in as_bytes\r\n    (bytes_or_text,))\r\nTypeError: Expected binary or unicode string, got <tensorflow.python.framework.sparse_tensor.SparseTensor object at 0x00000195FA86B1D0>\r\n\r\n```\r\n\r\nchange the `z` to \r\n```python\r\nz = tf.sparse_tensor_dense_matmul(x,y)\r\n```\r\nalso failed because the shape of sparse must 2-D,but `x`and`b`has 3-D"}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/9201", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/9201/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/9201/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/9201/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/9201", "id": 221681884, "node_id": "MDU6SXNzdWUyMjE2ODE4ODQ=", "number": 9201, "title": "Tensorflow Still Trying to use CUDA even when Session Created with device_count={'GPU': 0}", "user": {"login": "cancan101", "id": 51059, "node_id": "MDQ6VXNlcjUxMDU5", "avatar_url": "https://avatars1.githubusercontent.com/u/51059?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cancan101", "html_url": "https://github.com/cancan101", "followers_url": "https://api.github.com/users/cancan101/followers", "following_url": "https://api.github.com/users/cancan101/following{/other_user}", "gists_url": "https://api.github.com/users/cancan101/gists{/gist_id}", "starred_url": "https://api.github.com/users/cancan101/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cancan101/subscriptions", "organizations_url": "https://api.github.com/users/cancan101/orgs", "repos_url": "https://api.github.com/users/cancan101/repos", "events_url": "https://api.github.com/users/cancan101/events{/privacy}", "received_events_url": "https://api.github.com/users/cancan101/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 299643928, "node_id": "MDU6TGFiZWwyOTk2NDM5Mjg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:contributions%20welcome", "name": "stat:contributions welcome", "color": "f4b400", "default": false, "description": ""}, {"id": 473173272, "node_id": "MDU6TGFiZWw0NzMxNzMyNzI=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:feature", "name": "type:feature", "color": "159b2e", "default": false, "description": ""}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2017-04-13T21:04:36Z", "updated_at": "2017-12-20T13:14:30Z", "closed_at": null, "author_association": "CONTRIBUTOR", "body": "### System Information\r\nUsing the `tensorflow/tensorflow:1.0.1-devel-gpu` Docker image.\r\n`('v1.0.0-65-g4763edf-dirty', '1.0.1')`\r\nHost: `Driver Version: 367.57`, `3.13.0-57-generic`\r\n\r\n### Issue\r\nIf I `Set compute mode to EXCLUSIVE_PROCESS` on the Nvidia device (`sudo nvidia-smi -c 1`), then even though I tell the `Session` not to use GPUs (`config=tf.ConfigProto(device_count={'GPU': 0})`), Tensorflow attempts to use the GPU resulting in an inability to create session:\r\n```\r\nInternalErrorTraceback (most recent call last)\r\n<ipython-input-1-cabf26c1451a> in <module>()\r\n      1 import tensorflow as tf\r\n      2 from tensorflow.python.framework import ops\r\n----> 3 with tf.Session(config=tf.ConfigProto(device_count={'GPU': 0})) as sess:\r\n      4     pass\r\n\r\n/usr/local/lib/python2.7/dist-packages/tensorflow/python/client/session.pyc in __init__(self, target, graph, config)\r\n   1174 \r\n   1175     \"\"\"\r\n-> 1176     super(Session, self).__init__(target, graph, config=config)\r\n   1177     # NOTE(mrry): Create these on first `__enter__` to avoid a reference cycle.\r\n   1178     self._default_graph_context_manager = None\r\n\r\n/usr/local/lib/python2.7/dist-packages/tensorflow/python/client/session.pyc in __init__(self, target, graph, config)\r\n    550     try:\r\n    551       with errors.raise_exception_on_not_ok_status() as status:\r\n--> 552         self._session = tf_session.TF_NewDeprecatedSession(opts, status)\r\n    553     finally:\r\n    554       tf_session.TF_DeleteSessionOptions(opts)\r\n\r\n/usr/lib/python2.7/contextlib.pyc in __exit__(self, type, value, traceback)\r\n     22         if type is None:\r\n     23             try:\r\n---> 24                 self.gen.next()\r\n     25             except StopIteration:\r\n     26                 return\r\n\r\n/usr/local/lib/python2.7/dist-packages/tensorflow/python/framework/errors_impl.pyc in raise_exception_on_not_ok_status()\r\n    464           None, None,\r\n    465           compat.as_text(pywrap_tensorflow.TF_Message(status)),\r\n--> 466           pywrap_tensorflow.TF_GetCode(status))\r\n    467   finally:\r\n    468     pywrap_tensorflow.TF_DeleteStatus(status)\r\n\r\nInternalError: Failed to create session.\r\n```\r\nThis can be demonstrated by running:\r\n```\r\nimport tensorflow as tf\r\nfrom tensorflow.python.framework import ops\r\nwith tf.Session(config=tf.ConfigProto(device_count={'GPU': 0})) as sess:\r\n    pass\r\n```\r\nwhen another process is using CUDA and the exclusive process mode is set.\r\n\r\nIf exclusive process mode is _not_ set, then the session is created but using `nvidia-smi`, I see that the process is using GPU ram (and CUDA):\r\n```\r\n+-----------------------------------------------------------------------------+\r\n| Processes:                                                       GPU Memory |\r\n|  GPU       PID  Type  Process name                               Usage      |\r\n|=============================================================================|\r\n|    0      2237    C   /usr/bin/python                                 61MiB |\r\n```\r\n\r\nThe issue seems limited to TF trying to lock the CUDA device (an allocate ~61MB memory). Subsequent computations do happen correctly on the CPU."}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/9180", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/9180/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/9180/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/9180/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/9180", "id": 221485802, "node_id": "MDU6SXNzdWUyMjE0ODU4MDI=", "number": 9180, "title": "Make `py_func` accept `SparseTensor`", "user": {"login": "jingjingwang", "id": 2280236, "node_id": "MDQ6VXNlcjIyODAyMzY=", "avatar_url": "https://avatars0.githubusercontent.com/u/2280236?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jingjingwang", "html_url": "https://github.com/jingjingwang", "followers_url": "https://api.github.com/users/jingjingwang/followers", "following_url": "https://api.github.com/users/jingjingwang/following{/other_user}", "gists_url": "https://api.github.com/users/jingjingwang/gists{/gist_id}", "starred_url": "https://api.github.com/users/jingjingwang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jingjingwang/subscriptions", "organizations_url": "https://api.github.com/users/jingjingwang/orgs", "repos_url": "https://api.github.com/users/jingjingwang/repos", "events_url": "https://api.github.com/users/jingjingwang/events{/privacy}", "received_events_url": "https://api.github.com/users/jingjingwang/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 299643928, "node_id": "MDU6TGFiZWwyOTk2NDM5Mjg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:contributions%20welcome", "name": "stat:contributions welcome", "color": "f4b400", "default": false, "description": ""}, {"id": 473173272, "node_id": "MDU6TGFiZWw0NzMxNzMyNzI=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:feature", "name": "type:feature", "color": "159b2e", "default": false, "description": ""}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2017-04-13T07:54:14Z", "updated_at": "2018-08-15T01:23:00Z", "closed_at": null, "author_association": "NONE", "body": "### Describe the problem clearly\r\nAccording to the [doc](https://www.tensorflow.org/api_docs/python/tf/py_func), `py_func` accepts `inp` as a list of tensors (or convertible to tensor). However `SparseTensor` is not one of them. Could we support `SparseTensor` as well? Semantically there is no reason to treat `SparseTensor` differently.\r\n\r\n### Source Code / Logs\r\n```\r\nmy_sparse_tensor = tf.SparseTensor(...)\r\ntf.py_func(my_py_func, [my_sparse_tensor, ...], [tf.float32])\r\n```\r\nWhat I got:\r\n\r\n`TypeError: Tensors in list passed to 'input' of 'PyFunc' Op have types [<NOT CONVERTIBLE TO TENSOR>, ...] that are invalid`.\r\n"}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/9150", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/9150/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/9150/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/9150/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/9150", "id": 221112357, "node_id": "MDU6SXNzdWUyMjExMTIzNTc=", "number": 9150, "title": "C API Tensors", "user": {"login": "eaplatanios", "id": 1294940, "node_id": "MDQ6VXNlcjEyOTQ5NDA=", "avatar_url": "https://avatars2.githubusercontent.com/u/1294940?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eaplatanios", "html_url": "https://github.com/eaplatanios", "followers_url": "https://api.github.com/users/eaplatanios/followers", "following_url": "https://api.github.com/users/eaplatanios/following{/other_user}", "gists_url": "https://api.github.com/users/eaplatanios/gists{/gist_id}", "starred_url": "https://api.github.com/users/eaplatanios/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eaplatanios/subscriptions", "organizations_url": "https://api.github.com/users/eaplatanios/orgs", "repos_url": "https://api.github.com/users/eaplatanios/repos", "events_url": "https://api.github.com/users/eaplatanios/events{/privacy}", "received_events_url": "https://api.github.com/users/eaplatanios/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 299643928, "node_id": "MDU6TGFiZWwyOTk2NDM5Mjg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:contributions%20welcome", "name": "stat:contributions welcome", "color": "f4b400", "default": false, "description": ""}, {"id": 473173272, "node_id": "MDU6TGFiZWw0NzMxNzMyNzI=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:feature", "name": "type:feature", "color": "159b2e", "default": false, "description": ""}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 60, "created_at": "2017-04-11T23:49:14Z", "updated_at": "2017-08-15T19:34:51Z", "closed_at": null, "author_association": "CONTRIBUTOR", "body": "I am currently using the C API and building a Scala API on top of it. It seems that what is done in the Python API and the Java API is that the tensors fed into sessions are being copied to buffers internal to the native library. I am also currently doing that in the Scala library but I was wondering if we can do the following:\r\n\r\nLet's assume we can share a pointer to the underlying data structure between C and Scala (through a Java NIO DirectMemoryBuffer for example). Then, is there any functionality to obtain a tensor \"view\" that is a slice of that tensor, directly using that buffer? I imagine that since the TF op kernels are implemented in C++, it should be possible to use the StridedSlice op directly on a tensor data structure (without needing to use a session). The same idea can be extended to other ops. So, first of all, is that true?\r\n\r\nSecondly, if it is, where is that functionality available in the C API (or exposed elsewhere) so that I can use it from within my Scala library? I currently do the indexing on the byte buffer myself, but that can be painful for arbitrary slices.\r\n\r\nOne main issue with sharing a pointer is how to deal with the Java garbage collector. I haven't figured that out yet, but even if I can't do that, the above comment still applies. How can I use op kernels directly in order to manipulate tensors outside of the symbolic graph? That is useful for languages other than Python, where a library as powerful as numpy is not available.\r\n\r\nThank you!"}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/9142", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/9142/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/9142/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/9142/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/9142", "id": 221053917, "node_id": "MDU6SXNzdWUyMjEwNTM5MTc=", "number": 9142, "title": "Make bounding box operators consistent", "user": {"login": "Panaetius", "id": 664486, "node_id": "MDQ6VXNlcjY2NDQ4Ng==", "avatar_url": "https://avatars2.githubusercontent.com/u/664486?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Panaetius", "html_url": "https://github.com/Panaetius", "followers_url": "https://api.github.com/users/Panaetius/followers", "following_url": "https://api.github.com/users/Panaetius/following{/other_user}", "gists_url": "https://api.github.com/users/Panaetius/gists{/gist_id}", "starred_url": "https://api.github.com/users/Panaetius/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Panaetius/subscriptions", "organizations_url": "https://api.github.com/users/Panaetius/orgs", "repos_url": "https://api.github.com/users/Panaetius/repos", "events_url": "https://api.github.com/users/Panaetius/events{/privacy}", "received_events_url": "https://api.github.com/users/Panaetius/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 299643928, "node_id": "MDU6TGFiZWwyOTk2NDM5Mjg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:contributions%20welcome", "name": "stat:contributions welcome", "color": "f4b400", "default": false, "description": ""}, {"id": 473172988, "node_id": "MDU6TGFiZWw0NzMxNzI5ODg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:bug", "name": "type:bug", "color": "159b2e", "default": false, "description": ""}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2017-04-11T19:21:40Z", "updated_at": "2018-01-08T23:56:03Z", "closed_at": null, "author_association": "NONE", "body": "Right now, the bounding box operators (tf.image.draw_bounding_boxes, tf.image.non_max_suppression and tf.image.sample_distorted_bounding_box) expect bounding boxes in the form of [ymin, xmin, ymax, xmax], with the origin (0,0) being the lower left corner of the image. But images themselves are tensors, and the pixel with index [0,0] in the tensor is in the top left, so bounding box coordinates are the opposite in the y direction to tensor indices.\r\n\r\nAdditionally, the operations tf.image.pad_to_bounding_box and tf.image.crop_to_bounding_box take coordinates in the form of [ymin, xmin, height, width], with the origin being the top-left corner, so the coordinates are inconsistent even within the image ops themselves (plus the parametrization of the bounding boxes is different, too).\r\n\r\nAnd the tf.image.crop_and_resize op doesn't specify what origin it uses (though I think it's bottom left too)\r\n\r\nI feel like this sort of inconsistency is unnecessarily confusing and a high risk for introducing errors.\r\n\r\nIt's especially bad since, if you supply bounding boxes the wrong way around to draw_bounding_boxes, it'll still draw them correctly (\r\n\r\nAll bounding box operators should use the same coordinate system and preferably the same parametrization, and preferably the coordinates should be consistent with image tensor indexing."}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/8926", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/8926/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/8926/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/8926/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/8926", "id": 218958852, "node_id": "MDU6SXNzdWUyMTg5NTg4NTI=", "number": 8926, "title": "Image Distortions should be able to be applied to batches. [Feature Request?]", "user": {"login": "jubjamie", "id": 25011496, "node_id": "MDQ6VXNlcjI1MDExNDk2", "avatar_url": "https://avatars3.githubusercontent.com/u/25011496?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jubjamie", "html_url": "https://github.com/jubjamie", "followers_url": "https://api.github.com/users/jubjamie/followers", "following_url": "https://api.github.com/users/jubjamie/following{/other_user}", "gists_url": "https://api.github.com/users/jubjamie/gists{/gist_id}", "starred_url": "https://api.github.com/users/jubjamie/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jubjamie/subscriptions", "organizations_url": "https://api.github.com/users/jubjamie/orgs", "repos_url": "https://api.github.com/users/jubjamie/repos", "events_url": "https://api.github.com/users/jubjamie/events{/privacy}", "received_events_url": "https://api.github.com/users/jubjamie/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 299643928, "node_id": "MDU6TGFiZWwyOTk2NDM5Mjg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:contributions%20welcome", "name": "stat:contributions welcome", "color": "f4b400", "default": false, "description": ""}, {"id": 473173272, "node_id": "MDU6TGFiZWw0NzMxNzMyNzI=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:feature", "name": "type:feature", "color": "159b2e", "default": false, "description": ""}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 26, "created_at": "2017-04-03T14:50:47Z", "updated_at": "2018-03-19T10:22:43Z", "closed_at": null, "author_association": "CONTRIBUTOR", "body": "The tf.image distortion functions only accept a single image as an input whereas it would be much more useful to be able to place the distortion within your graph flow so any batches of images that pass through it get distorted too. I believe a current solution is as suggeested by @mrry [here on Stack Overflow](http://stackoverflow.com/questions/38920240/tensorflow-image-operations-for-batches) however it feels like, much like the other ops for images work, being able to take batches would be much more useful.\r\n\r\nIs the solution proposed by @mrry the accepted method or should the distortion functions be taking batches?"}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/8884", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/8884/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/8884/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/8884/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/8884", "id": 218633809, "node_id": "MDU6SXNzdWUyMTg2MzM4MDk=", "number": 8884, "title": "8-bit quantized atrous conv2d op not supported", "user": {"login": "agupta74", "id": 21690396, "node_id": "MDQ6VXNlcjIxNjkwMzk2", "avatar_url": "https://avatars2.githubusercontent.com/u/21690396?v=4", "gravatar_id": "", "url": "https://api.github.com/users/agupta74", "html_url": "https://github.com/agupta74", "followers_url": "https://api.github.com/users/agupta74/followers", "following_url": "https://api.github.com/users/agupta74/following{/other_user}", "gists_url": "https://api.github.com/users/agupta74/gists{/gist_id}", "starred_url": "https://api.github.com/users/agupta74/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/agupta74/subscriptions", "organizations_url": "https://api.github.com/users/agupta74/orgs", "repos_url": "https://api.github.com/users/agupta74/repos", "events_url": "https://api.github.com/users/agupta74/events{/privacy}", "received_events_url": "https://api.github.com/users/agupta74/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 299643928, "node_id": "MDU6TGFiZWwyOTk2NDM5Mjg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:contributions%20welcome", "name": "stat:contributions welcome", "color": "f4b400", "default": false, "description": ""}, {"id": 473173272, "node_id": "MDU6TGFiZWw0NzMxNzMyNzI=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:feature", "name": "type:feature", "color": "159b2e", "default": false, "description": ""}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-03-31T22:37:22Z", "updated_at": "2017-06-16T20:50:53Z", "closed_at": null, "author_association": "NONE", "body": "It looks like that 8-bit quantized atrous conv2d op is not supported. As per the latest API,  there are only 4 quantized ops supported namely quantized_conv2d, quantized_relu_x, quantized_max_pool and quantized_avg_pool.  Any target date by which 8-bit atrous conv2d op will be available?\r\n\r\n\r\n"}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/8820", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/8820/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/8820/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/8820/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/8820", "id": 218032322, "node_id": "MDU6SXNzdWUyMTgwMzIzMjI=", "number": 8820, "title": "Feature Request: Accelerate TensorFlow core on FPGA - How?", "user": {"login": "wilderfield", "id": 15713959, "node_id": "MDQ6VXNlcjE1NzEzOTU5", "avatar_url": "https://avatars1.githubusercontent.com/u/15713959?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wilderfield", "html_url": "https://github.com/wilderfield", "followers_url": "https://api.github.com/users/wilderfield/followers", "following_url": "https://api.github.com/users/wilderfield/following{/other_user}", "gists_url": "https://api.github.com/users/wilderfield/gists{/gist_id}", "starred_url": "https://api.github.com/users/wilderfield/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wilderfield/subscriptions", "organizations_url": "https://api.github.com/users/wilderfield/orgs", "repos_url": "https://api.github.com/users/wilderfield/repos", "events_url": "https://api.github.com/users/wilderfield/events{/privacy}", "received_events_url": "https://api.github.com/users/wilderfield/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 299643928, "node_id": "MDU6TGFiZWwyOTk2NDM5Mjg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:contributions%20welcome", "name": "stat:contributions welcome", "color": "f4b400", "default": false, "description": ""}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 14, "created_at": "2017-03-29T22:49:54Z", "updated_at": "2019-03-22T03:22:21Z", "closed_at": null, "author_association": "NONE", "body": "Consider the two following hardware scenarios:\r\n1) Linux running on x86 w/ FPGA fabric connected via PCIe\r\n2) Linux running on Arm A53 with AXI i/f to FPGA fabric (Think Xilinx Zynq)\r\n\r\nHow could the tensorflow core be accelerated for these scenarios? \r\nFPGA vendors do offer OpenCL binaries for running OpenCL APIs to parallelize computations.\r\n\r\nForgive me, I am a bit ignorant, still learning in this area, but I am intrigued by the future possibility of this, and would love to help in anyway I can."}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/8773", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/8773/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/8773/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/8773/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/8773", "id": 217517126, "node_id": "MDU6SXNzdWUyMTc1MTcxMjY=", "number": 8773, "title": "Can I use tensorflow on Windows10 with c++ and gpu support", "user": {"login": "xiaoguai0992", "id": 8860527, "node_id": "MDQ6VXNlcjg4NjA1Mjc=", "avatar_url": "https://avatars0.githubusercontent.com/u/8860527?v=4", "gravatar_id": "", "url": "https://api.github.com/users/xiaoguai0992", "html_url": "https://github.com/xiaoguai0992", "followers_url": "https://api.github.com/users/xiaoguai0992/followers", "following_url": "https://api.github.com/users/xiaoguai0992/following{/other_user}", "gists_url": "https://api.github.com/users/xiaoguai0992/gists{/gist_id}", "starred_url": "https://api.github.com/users/xiaoguai0992/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/xiaoguai0992/subscriptions", "organizations_url": "https://api.github.com/users/xiaoguai0992/orgs", "repos_url": "https://api.github.com/users/xiaoguai0992/repos", "events_url": "https://api.github.com/users/xiaoguai0992/events{/privacy}", "received_events_url": "https://api.github.com/users/xiaoguai0992/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 299643928, "node_id": "MDU6TGFiZWwyOTk2NDM5Mjg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:contributions%20welcome", "name": "stat:contributions welcome", "color": "f4b400", "default": false, "description": ""}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 36, "created_at": "2017-03-28T10:37:49Z", "updated_at": "2019-09-30T08:39:36Z", "closed_at": null, "author_association": "NONE", "body": "I wish to use tensorflow on windows10 with c++ and gpu support. Is there any pre build SDK for windows? Or I need to compile from sources?\r\n\r\nwhen I tried to compile on windows with cmake and MSVC, smaple trainer cannot build correctly because of some header files missing, such as \"graph.pb.h\". Is there any solutions?\r\n\r\nENV:\r\nwindows10 vs2015 cmake3.6.2"}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/8661", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/8661/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/8661/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/8661/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/8661", "id": 216441090, "node_id": "MDU6SXNzdWUyMTY0NDEwOTA=", "number": 8661, "title": "graph_editor.graph_replace produces WARNING", "user": {"login": "lucfra", "id": 24814823, "node_id": "MDQ6VXNlcjI0ODE0ODIz", "avatar_url": "https://avatars0.githubusercontent.com/u/24814823?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lucfra", "html_url": "https://github.com/lucfra", "followers_url": "https://api.github.com/users/lucfra/followers", "following_url": "https://api.github.com/users/lucfra/following{/other_user}", "gists_url": "https://api.github.com/users/lucfra/gists{/gist_id}", "starred_url": "https://api.github.com/users/lucfra/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lucfra/subscriptions", "organizations_url": "https://api.github.com/users/lucfra/orgs", "repos_url": "https://api.github.com/users/lucfra/repos", "events_url": "https://api.github.com/users/lucfra/events{/privacy}", "received_events_url": "https://api.github.com/users/lucfra/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 299643928, "node_id": "MDU6TGFiZWwyOTk2NDM5Mjg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:contributions%20welcome", "name": "stat:contributions welcome", "color": "f4b400", "default": false, "description": ""}, {"id": 473172988, "node_id": "MDU6TGFiZWw0NzMxNzI5ODg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:bug", "name": "type:bug", "color": "159b2e", "default": false, "description": ""}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-03-23T14:13:21Z", "updated_at": "2017-03-28T18:29:45Z", "closed_at": null, "author_association": "NONE", "body": "Since version 1.0.0 the method `tensorflow.contrib.graph_editor.graph_replace` raises the following warning:\r\n\r\nWARNING:tensorflow:VARIABLES collection name is deprecated, please use GLOBAL_VARIABLES instead; VARIABLES will be removed after 2017-03-02.\r\n\r\n \r\n\r\n### Minimal reproducible example \r\n```python \r\nimport tensorflow as tf\r\nimport tensorflow.contrib.graph_editor as ge\r\na = tf.constant(1)\r\nb = tf.constant(2)\r\nc = tf.constant(3)\r\nd = a +  b\r\ne = ge.graph_replace([d], {a: c})\r\n```\r\n\r\n### Output log\r\nINFO:tensorflow:Copying op: add\r\nWARNING:tensorflow:VARIABLES collection name is deprecated, please use GLOBAL_VARIABLES instead; VARIABLES will be removed after 2017-03-02.\r\nWARNING:tensorflow:VARIABLES collection name is deprecated, please use GLOBAL_VARIABLES instead; VARIABLES will be removed after 2017-03-02.\r\nINFO:tensorflow:Finalizing op: add\r\n\r\n"}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/8584", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/8584/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/8584/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/8584/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/8584", "id": 215748991, "node_id": "MDU6SXNzdWUyMTU3NDg5OTE=", "number": 8584, "title": "TF for Xeon Phi", "user": {"login": "oroojlooy", "id": 20797260, "node_id": "MDQ6VXNlcjIwNzk3MjYw", "avatar_url": "https://avatars0.githubusercontent.com/u/20797260?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oroojlooy", "html_url": "https://github.com/oroojlooy", "followers_url": "https://api.github.com/users/oroojlooy/followers", "following_url": "https://api.github.com/users/oroojlooy/following{/other_user}", "gists_url": "https://api.github.com/users/oroojlooy/gists{/gist_id}", "starred_url": "https://api.github.com/users/oroojlooy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oroojlooy/subscriptions", "organizations_url": "https://api.github.com/users/oroojlooy/orgs", "repos_url": "https://api.github.com/users/oroojlooy/repos", "events_url": "https://api.github.com/users/oroojlooy/events{/privacy}", "received_events_url": "https://api.github.com/users/oroojlooy/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 299643928, "node_id": "MDU6TGFiZWwyOTk2NDM5Mjg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:contributions%20welcome", "name": "stat:contributions welcome", "color": "f4b400", "default": false, "description": ""}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 20, "created_at": "2017-03-21T14:00:15Z", "updated_at": "2018-07-06T18:54:05Z", "closed_at": null, "author_association": "NONE", "body": "Hi,\r\n\r\nDoes tensorflow support xeon phi? \r\n\r\nThanks !\r\nAfshin"}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/8467", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/8467/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/8467/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/8467/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/8467", "id": 214690523, "node_id": "MDU6SXNzdWUyMTQ2OTA1MjM=", "number": 8467, "title": "Better control of logging verbosity", "user": {"login": "3h4", "id": 23310996, "node_id": "MDQ6VXNlcjIzMzEwOTk2", "avatar_url": "https://avatars1.githubusercontent.com/u/23310996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/3h4", "html_url": "https://github.com/3h4", "followers_url": "https://api.github.com/users/3h4/followers", "following_url": "https://api.github.com/users/3h4/following{/other_user}", "gists_url": "https://api.github.com/users/3h4/gists{/gist_id}", "starred_url": "https://api.github.com/users/3h4/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/3h4/subscriptions", "organizations_url": "https://api.github.com/users/3h4/orgs", "repos_url": "https://api.github.com/users/3h4/repos", "events_url": "https://api.github.com/users/3h4/events{/privacy}", "received_events_url": "https://api.github.com/users/3h4/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 299643928, "node_id": "MDU6TGFiZWwyOTk2NDM5Mjg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:contributions%20welcome", "name": "stat:contributions welcome", "color": "f4b400", "default": false, "description": ""}, {"id": 473173272, "node_id": "MDU6TGFiZWw0NzMxNzMyNzI=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:feature", "name": "type:feature", "color": "159b2e", "default": false, "description": ""}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-03-16T12:37:02Z", "updated_at": "2017-03-21T20:38:37Z", "closed_at": null, "author_association": "NONE", "body": "I'm creating a simple LSTM in Keras, and during training I get these warnings:\r\n\r\n![screenshot from 2017-03-16 13-25-23](https://cloud.githubusercontent.com/assets/23310996/23995972/170f3a10-0a4c-11e7-92f6-f7ee865e65e6.png)\r\n\r\nI know I can set the `TF_CPP_MIN_LOG_LEVEL` according to this question: http://stackoverflow.com/questions/35869137/avoid-tensorflow-print-on-standard-error\r\n\r\nor use the `tf.logging.set_verbosity(verbosity)` to control this, but for my example I would like to \r\n\r\n1. Hide the warnings that Tensorflow wasn't compiled to use ... instructions.\r\n2. Show the logging of device when starting a new session, that is very useful to confirm that the GPU support is working.\r\n3. Hide the Pool allocator warnings since they clutter the console output from Keras during training.\r\n\r\nI haven't found a way to do this, perhaps it could be added as a feature?\r\n\r\n\r\n\r\n\r\n\r\n"}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/8465", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/8465/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/8465/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/8465/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/8465", "id": 214674992, "node_id": "MDU6SXNzdWUyMTQ2NzQ5OTI=", "number": 8465, "title": "non_max_suppression should support batches", "user": {"login": "Panaetius", "id": 664486, "node_id": "MDQ6VXNlcjY2NDQ4Ng==", "avatar_url": "https://avatars2.githubusercontent.com/u/664486?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Panaetius", "html_url": "https://github.com/Panaetius", "followers_url": "https://api.github.com/users/Panaetius/followers", "following_url": "https://api.github.com/users/Panaetius/following{/other_user}", "gists_url": "https://api.github.com/users/Panaetius/gists{/gist_id}", "starred_url": "https://api.github.com/users/Panaetius/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Panaetius/subscriptions", "organizations_url": "https://api.github.com/users/Panaetius/orgs", "repos_url": "https://api.github.com/users/Panaetius/repos", "events_url": "https://api.github.com/users/Panaetius/events{/privacy}", "received_events_url": "https://api.github.com/users/Panaetius/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 299643928, "node_id": "MDU6TGFiZWwyOTk2NDM5Mjg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:contributions%20welcome", "name": "stat:contributions welcome", "color": "f4b400", "default": false, "description": ""}, {"id": 473173272, "node_id": "MDU6TGFiZWw0NzMxNzMyNzI=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:feature", "name": "type:feature", "color": "159b2e", "default": false, "description": ""}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2017-03-16T11:33:05Z", "updated_at": "2020-01-02T06:38:57Z", "closed_at": null, "author_association": "NONE", "body": "\r\n\r\n### What related GitHub issues or StackOverflow threads have you found by searching the web for your problem?\r\n\r\nMight be related/nice to do when overworking non_max_suppression for #7511\r\n\r\nRelated SO: http://stackoverflow.com/questions/39456554/tensorflow-tensor-with-inconsistent-dimension-size\r\n\r\n\r\n### Description\r\n\r\nMost image ops work on batches of images, so it'd make sense if tf.image.non_max_suppression worked on batches of bounding-boxes , returning batches of selected indices.\r\n\r\nAlthough I'm not completely sure how it'd work with the variable result lengths that are likely to happen in this case, perhaps masking or padding them? There's already the max_output_size parameter.\r\n\r\nAnd I'm not entirely sure how well it'd work with gather (gather_nd?), since if it doesn't work well with those, this change wouldn't be as useful\r\n"}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/8451", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/8451/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/8451/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/8451/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/8451", "id": 214557456, "node_id": "MDU6SXNzdWUyMTQ1NTc0NTY=", "number": 8451, "title": "XLA segfaults with large graphs", "user": {"login": "yaroslavvb", "id": 23068, "node_id": "MDQ6VXNlcjIzMDY4", "avatar_url": "https://avatars3.githubusercontent.com/u/23068?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yaroslavvb", "html_url": "https://github.com/yaroslavvb", "followers_url": "https://api.github.com/users/yaroslavvb/followers", "following_url": "https://api.github.com/users/yaroslavvb/following{/other_user}", "gists_url": "https://api.github.com/users/yaroslavvb/gists{/gist_id}", "starred_url": "https://api.github.com/users/yaroslavvb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yaroslavvb/subscriptions", "organizations_url": "https://api.github.com/users/yaroslavvb/orgs", "repos_url": "https://api.github.com/users/yaroslavvb/repos", "events_url": "https://api.github.com/users/yaroslavvb/events{/privacy}", "received_events_url": "https://api.github.com/users/yaroslavvb/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 299643928, "node_id": "MDU6TGFiZWwyOTk2NDM5Mjg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:contributions%20welcome", "name": "stat:contributions welcome", "color": "f4b400", "default": false, "description": ""}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2017-03-15T23:35:16Z", "updated_at": "2017-12-14T15:28:42Z", "closed_at": null, "author_association": "CONTRIBUTOR", "body": "TensorFlow allows graphs to be larger than 2GB, however those graphs can't be serialized.\r\n\r\nI suspect this is the cause of segfaults we've been seeing because of following line in dump_graph.cc\r\n\r\n`65    TF_CHECK_OK(WriteTextProto(Env::Default(), path, graph_def));\r\n`\r\n\r\nIt would be useful to provide an informative error message because troubleshooting this requires looking at core file:\r\n\r\n```\r\nulimit -Sc unlimited\r\ngdb python\r\ncore core\r\nbt\r\n```\r\n\r\nHere's the backtrace\r\n\r\n```\r\n#0  0x00007fc6dcdae428 in __GI_raise (sig=sig@entry=6) at ../sysdeps/unix/sysv/linux/raise.c:54\r\n#1  0x00007fc6dcdb002a in __GI_abort () at abort.c:89\r\n#2  0x00007fc6c04b8417 in tensorflow::internal::LogMessageFatal::~LogMessageFatal() () from /my_code/tensorflow_ops/tensorflow/_python_build/tensorflow/python/_pywrap_tensorflow.so\r\n#3  0x00007fc6bd05cb1e in tensorflow::dump_graph::DumpGraphDefToFile(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::GraphDef const&) ()\r\n   from /my_code/tensorflow_ops/tensorflow/_python_build/tensorflow/python/_pywrap_tensorflow.so\r\n#4  0x00007fc6bd05ce88 in tensorflow::dump_graph::DumpGraphToFile(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::Graph const&, tensorflow::FunctionLibraryDefinition const*) () from /my_code/tensorflow_ops/tensorflow/_python_build/tensorflow/python/_pywrap_tensorflow.so\r\n#5  0x00007fc6bcffd6c2 in tensorflow::EncapsulateSubgraphsPass::Run(tensorflow::GraphOptimizationPassOptions const&) ()\r\n   from /my_code/tensorflow_ops/tensorflow/_python_build/tensorflow/python/_pywrap_tensorflow.so\r\n#6  0x00007fc6bec68e00 in tensorflow::OptimizationPassRegistry::RunGrouping(tensorflow::OptimizationPassRegistry::Grouping, tensorflow::GraphOptimizationPassOptions const&) ()\r\n   from /my_code/tensorflow_ops/tensorflow/_python_build/tensorflow/python/_pywrap_tensorflow.so\r\n#7  0x00007fc6bec768a3 in tensorflow::SimpleGraphExecutionState::BuildGraph(tensorflow::BuildGraphOptions const&, std::unique_ptr<tensorflow::SimpleClientGraph, std::default_delete<tensorflow::SimpleClientGraph> >*) () from /my_code/tensorflow_ops/tensorflow/_python_build/tensorflow/python/_pywrap_tensorflow.so\r\n#8  0x00007fc6be43d293 in tensorflow::DirectSession::CreateGraphs(tensorflow::BuildGraphOptions const&, std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::unique_ptr<tensorflow::Graph, std::default_delete<tensorflow::Graph> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::unique_ptr<tensorflow::Graph, std::default_delete<tensorflow::Graph> > > > >*, std::unique_ptr<tensorflow::FunctionLibraryDefinition, std::default_delete<tensorflow::FunctionLibraryDefinition> >*, tensorflow::DirectSession::RunStateArgs*) () from /my_code/tensorflow_ops/tensorflow/_python_build/tensorflow/python/_pywrap_tensorflow.so\r\n#9  0x00007fc6be43f4cf in tensorflow::DirectSession::GetOrCreateExecutors(tensorflow::thread::ThreadPool*, tensorflow::gtl::ArraySlice<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, tensorflow::gtl::ArraySlice<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, tensorflow::gtl::ArraySlice<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, tensorflow::DirectSession::ExecutorsAndKeys**, tensorflow::DirectSession::RunStateArgs*) ()\r\n   from /my_code/tensorflow_ops/tensorflow/_python_build/tensorflow/python/_pywrap_tensorflow.so\r\n#10 0x00007fc6be44085e in tensorflow::DirectSession::Run(tensorflow::RunOptions const&, std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tensorflow::Tensor>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tensorflow::Tensor> > > const&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, std::vector<tensorflow::Tensor, std::allocator<tensorflow::Tensor> >*, tensorflow::RunMetadata*) () from /my_code/tensorflow_ops/tensorflow/_python_build/tensorflow/python/_pywrap_tensorflow.so\r\n#11 0x00007fc6bcfd4641 in TF_Run_Helper(tensorflow::Session*, char const*, TF_Buffer const*, std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tensorflow::Tensor>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tensorflow::Tensor> > > const&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, TF_Tensor**, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, TF_Buffer*, TF_Status*) [clone .constprop.498] ()\r\n   from /my_code/tensorflow_ops/tensorflow/_python_build/tensorflow/python/_pywrap_tensorflow.so\r\n#12 0x00007fc6bcfd4e58 in TF_Run () from /my_code/tensorflow_ops/tensorflow/_python_build/tensorflow/python/_pywrap_tensorflow.so\r\n#13 0x00007fc6bcf0b15d in tensorflow::TF_Run_wrapper_helper(TF_DeprecatedSession*, char const*, TF_Buffer const*, _object*, tensorflow::gtl::InlinedVector<char const*, 8> const&, tensorflow::gtl::InlinedVector<char const*, 8> const&, TF_Status*, tensorflow::gtl::InlinedVector<_object*, 8>*, TF_Buffer*) ()\r\n   from /my_code/tensorflow_ops/tensorflow/_python_build/tensorflow/python/_pywrap_tensorflow.so\r\n#14 0x00007fc6bcf0b2a3 in tensorflow::TF_Run_wrapper(TF_DeprecatedSession*, TF_Buffer const*, _object*, tensorflow::gtl::InlinedVector<char const*, 8> const&, tensorflow::gtl::InlinedVector<char const*, 8> const&, TF_Status*, tensorflow::gtl::InlinedVector<_object*, 8>*, TF_Buffer*) () from /my_code/tensorflow_ops/tensorflow/_python_build/tensorflow/python/_pywrap_tensorflow.so\r\n#15 0x00007fc6bceed225 in _wrap_TF_Run () from /my_code/tensorflow_ops/tensorflow/_python_build/tensorflow/python/_pywrap_tensorflow.so\r\n#16 0x00007fc6ddd335e9 in PyCFunction_Call (func=0x7fc6c5120828, args=0x7fc68c1765f8, kwds=<optimized out>) at Objects/methodobject.c:109\r\n#17 0x00007fc6dddbabd5 in call_function (oparg=<optimized out>, pp_stack=0x7ffc0d0dfa78) at Python/ceval.c:4705\r\n#18 PyEval_EvalFrameEx (f=<optimized out>, throwflag=<optimized out>) at Python/ceval.c:3236\r\n#19 0x00007fc6dddbbb49 in _PyEval_EvalCodeWithName (_co=<optimized out>, globals=<optimized out>, locals=<optimized out>, args=<optimized out>, argcount=6, kws=0x0, kwcount=0, defs=0x0, defcount=0, \r\n    kwdefs=0x0, closure=0x7fc6d70ac780, name=0x0, qualname=0x0) at Python/ceval.c:4018\r\n#20 0x00007fc6dddbbcd8 in PyEval_EvalCodeEx (_co=<optimized out>, globals=<optimized out>, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kws=<optimized out>, kwcount=0, defs=0x0, \r\n    defcount=0, kwdefs=0x0, closure=0x7fc6d70ac780) at Python/ceval.c:4039\r\n#21 0x00007fc6ddd11542 in function_call (func=0x7fc68feb3268, arg=0x7fc68c3903a8, kw=0x0) at Objects/funcobject.c:627\r\n#22 0x00007fc6ddcde236 in PyObject_Call (func=0x7fc68feb3268, arg=<optimized out>, kw=<optimized out>) at Objects/abstract.c:2165\r\n#23 0x00007fc6dddb8234 in ext_do_call (nk=-1942420568, na=0, flags=<optimized out>, pp_stack=0x7ffc0d0dfdc8, func=0x7fc68feb3268) at Python/ceval.c:5034\r\n#24 PyEval_EvalFrameEx (f=<optimized out>, throwflag=<optimized out>) at Python/ceval.c:3275\r\n#25 0x00007fc6dddbbb49 in _PyEval_EvalCodeWithName (_co=<optimized out>, globals=<optimized out>, locals=<optimized out>, args=<optimized out>, argcount=8, kws=0x7fd5098, kwcount=0, defs=0x0, defcount=0, \r\n    kwdefs=0x0, closure=0x0, name=0x7fc6d74eafb0, qualname=0x7fc6d74f07c8) at Python/ceval.c:4018\r\n#26 0x00007fc6dddbadf5 in fast_function (nk=<optimized out>, na=8, n=<optimized out>, pp_stack=0x7ffc0d0dffe8, func=0x7fc6d74add90) at Python/ceval.c:4813\r\n#27 call_function (oparg=<optimized out>, pp_stack=0x7ffc0d0dffe8) at Python/ceval.c:4730\r\n#28 PyEval_EvalFrameEx (f=<optimized out>, throwflag=<optimized out>) at Python/ceval.c:3236\r\n#29 0x00007fc6dddbbb49 in _PyEval_EvalCodeWithName (_co=<optimized out>, globals=<optimized out>, locals=<optimized out>, args=<optimized out>, argcount=7, kws=0x7fd7640, kwcount=0, defs=0x0, defcount=0, \r\n    kwdefs=0x0, closure=0x0, name=0x7fc6d74f13e8, qualname=0x7fc6d74f0738) at Python/ceval.c:4018\r\n#30 0x00007fc6dddbadf5 in fast_function (nk=<optimized out>, na=7, n=<optimized out>, pp_stack=0x7ffc0d0e0208, func=0x7fc6d74add08) at Python/ceval.c:4813\r\n#31 call_function (oparg=<optimized out>, pp_stack=0x7ffc0d0e0208) at Python/ceval.c:4730\r\n#32 PyEval_EvalFrameEx (f=<optimized out>, throwflag=<optimized out>) at Python/ceval.c:3236\r\n#33 0x00007fc6dddbb166 in fast_function (nk=<optimized out>, na=6, n=<optimized out>, pp_stack=0x7ffc0d0e0388, func=0x7fc6d74adc80) at Python/ceval.c:4803\r\n#34 call_function (oparg=<optimized out>, pp_stack=0x7ffc0d0e0388) at Python/ceval.c:4730\r\n#35 PyEval_EvalFrameEx (f=<optimized out>, throwflag=<optimized out>) at Python/ceval.c:3236\r\n#36 0x00007fc6dddbbb49 in _PyEval_EvalCodeWithName (_co=<optimized out>, globals=<optimized out>, locals=<optimized out>, args=<optimized out>, argcount=3, kws=0x40e5488, kwcount=0, defs=0x7fc6d74a7060, \r\n    defcount=3, kwdefs=0x0, closure=0x0, name=0x7fc6dc762458, qualname=0x7fc6d74ead30) at Python/ceval.c:4018\r\n#37 0x00007fc6dddbadf5 in fast_function (nk=<optimized out>, na=3, n=<optimized out>, pp_stack=0x7ffc0d0e05a8, func=0x7fc6d74adae8) at Python/ceval.c:4813\r\n#38 call_function (oparg=<optimized out>, pp_stack=0x7ffc0d0e05a8) at Python/ceval.c:4730\r\n#39 PyEval_EvalFrameEx (f=<optimized out>, throwflag=<optimized out>) at Python/ceval.c:3236\r\n#40 0x00007fc6dddbbb49 in _PyEval_EvalCodeWithName (_co=<optimized out>, globals=<optimized out>, locals=<optimized out>, args=<optimized out>, argcount=4, kws=0x41f8440, kwcount=0, defs=0x7fc6d7761df0, \r\n    defcount=1, kwdefs=0x0, closure=0x0, name=0x7fc6d77a1ee0, qualname=0x7fc6d77a1ee0) at Python/ceval.c:4018\r\n#41 0x00007fc6dddbadf5 in fast_function (nk=<optimized out>, na=4, n=<optimized out>, pp_stack=0x7ffc0d0e07c8, func=0x7fc6d76ecd90) at Python/ceval.c:4813\r\n#42 call_function (oparg=<optimized out>, pp_stack=0x7ffc0d0e07c8) at Python/ceval.c:4730\r\n#43 PyEval_EvalFrameEx (f=<optimized out>, throwflag=<optimized out>) at Python/ceval.c:3236\r\n#44 0x00007fc6dddbbb49 in _PyEval_EvalCodeWithName (_co=<optimized out>, globals=<optimized out>, locals=<optimized out>, args=<optimized out>, argcount=1, kws=0x1c06428, kwcount=0, defs=0x7fc6d76f1320, \r\n    defcount=2, kwdefs=0x0, closure=0x0, name=0x7fc6dc762458, qualname=0x7fc6d772a170) at Python/ceval.c:4018\r\n#45 0x00007fc6dddbadf5 in fast_function (nk=<optimized out>, na=1, n=<optimized out>, pp_stack=0x7ffc0d0e09e8, func=0x7fc6d76e7730) at Python/ceval.c:4813\r\n#46 call_function (oparg=<optimized out>, pp_stack=0x7ffc0d0e09e8) at Python/ceval.c:4730\r\n#47 PyEval_EvalFrameEx (f=<optimized out>, throwflag=<optimized out>) at Python/ceval.c:3236\r\n```"}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/8348", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/8348/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/8348/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/8348/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/8348", "id": 213723772, "node_id": "MDU6SXNzdWUyMTM3MjM3NzI=", "number": 8348, "title": "Taking gradients after using SparseTensor in while_loop leads to TypeError", "user": {"login": "hhultin", "id": 21335863, "node_id": "MDQ6VXNlcjIxMzM1ODYz", "avatar_url": "https://avatars3.githubusercontent.com/u/21335863?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hhultin", "html_url": "https://github.com/hhultin", "followers_url": "https://api.github.com/users/hhultin/followers", "following_url": "https://api.github.com/users/hhultin/following{/other_user}", "gists_url": "https://api.github.com/users/hhultin/gists{/gist_id}", "starred_url": "https://api.github.com/users/hhultin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hhultin/subscriptions", "organizations_url": "https://api.github.com/users/hhultin/orgs", "repos_url": "https://api.github.com/users/hhultin/repos", "events_url": "https://api.github.com/users/hhultin/events{/privacy}", "received_events_url": "https://api.github.com/users/hhultin/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 299643928, "node_id": "MDU6TGFiZWwyOTk2NDM5Mjg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:contributions%20welcome", "name": "stat:contributions welcome", "color": "f4b400", "default": false, "description": ""}, {"id": 473172988, "node_id": "MDU6TGFiZWw0NzMxNzI5ODg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:bug", "name": "type:bug", "color": "159b2e", "default": false, "description": ""}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-03-13T10:17:28Z", "updated_at": "2019-06-13T20:29:25Z", "closed_at": null, "author_association": "NONE", "body": "### What related GitHub issues or StackOverflow threads have you found by searching the web for your problem?\r\n\r\nFound various issues on SparseTensors, but nothing about while loops and gradients.\r\n\r\n\r\n### Environment info\r\nOperating System:\r\nUbuntu 14.04\r\n\r\nInstalled version of CUDA and cuDNN: \r\nNone\r\n\r\nIf installed from binary pip package, provide:\r\n\r\n1. A link to the pip package you installed: https://storage.googleapis.com/tensorflow/linux/cpu/tensorflow-0.12.1-cp35-cp35m-linux_x86_64.whl\r\n\r\n2. The output from `python -c \"import tensorflow; print(tensorflow.__version__)\"`: \r\n0.12.1\r\n\r\n### If possible, provide a minimal reproducible example (We usually don't have time to read hundreds of lines of your code)\r\n\r\nThis code leads to the error (when trying to compute the gradients) `TypeError: Expected binary or unicode string, got <tensorflow.python.framework.sparse_tensor.SparseTensor object at 0x7fb966845f98>`\r\n```\r\nimport tensorflow as tf\r\n\r\n\r\ndef body(A, b, x, i):\r\n    i += 1\r\n    b = b + tf.sparse_tensor_dense_matmul(A, x)\r\n    return A, b, x, i\r\n\r\n\r\ndef cond(A, b, x, i):\r\n    return i < 5\r\n\r\n\r\nsess = tf.InteractiveSession()\r\nindices = [[0, 0], [1, 1]]\r\nvalues = [1., 1.]\r\nA = tf.SparseTensor(indices, values, (100, 100))\r\nx = tf.ones((100, 1))\r\nb = tf.zeros_like(x)\r\n[_, b, _, _] = tf.while_loop(cond, body, [A, b, x, tf.constant(0)])\r\ngrad = tf.gradients(b, x)\r\nprint(sess.run([grad]))\r\nsess.close()\r\n```\r\n\r\n### What other attempted solutions have you tried?\r\n\r\nIf `A` is removed as a loop variable everything works as expected:\r\n\r\n```\r\nimport tensorflow as tf\r\n\r\n\r\ndef body(b, x, i):\r\n    i += 1\r\n    b = b + tf.sparse_tensor_dense_matmul(A, x)\r\n    return b, x, i\r\n\r\n\r\ndef cond(b, x, i):\r\n    return i < 5\r\n\r\n\r\nsess = tf.InteractiveSession()\r\nindices = [[0, 0], [1, 1]]\r\nvalues = [1., 1.]\r\nA = tf.SparseTensor(indices, values, (100, 100))\r\nx = tf.ones((100, 1))\r\nb = tf.zeros_like(x)\r\n[b, _, _] = tf.while_loop(cond, body, [b, x, tf.constant(0)])\r\ngrad = tf.gradients(b, x)\r\nprint(sess.run([grad]))\r\nsess.close()\r\n```\r\n\r\n\r\n### Logs or other output that would be helpful\r\n(If logs are large, please upload as attachment or provide link).\r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \"sparse_tensor_gradient_error.py\", line 21, in <module>\r\n    grad = tf.gradients(b, x)\r\n  File \"/home/y/anaconda3/lib/python3.5/site-packages/tensorflow/python/ops/gradients_impl.py\", line 427, in gradients\r\n    _SetGrad(grads, y, loop_state.ZerosLikeForExit(y))\r\n  File \"/home/y/anaconda3/lib/python3.5/site-packages/tensorflow/python/ops/control_flow_ops.py\", line 1165, in ZerosLikeForExit\r\n    result = array_ops.zeros_like(val, optimize=False)\r\n  File \"/home/y/anaconda3/lib/python3.5/site-packages/tensorflow/python/ops/array_ops.py\", line 1471, in zeros_like\r\n    tensor = ops.convert_to_tensor(tensor, name=\"tensor\")\r\n  File \"/home/y/anaconda3/lib/python3.5/site-packages/tensorflow/python/framework/ops.py\", line 669, in convert_to_tensor\r\n    ret = conversion_func(value, dtype=dtype, name=name, as_ref=as_ref)\r\n  File \"/home/y/anaconda3/lib/python3.5/site-packages/tensorflow/python/framework/constant_op.py\", line 176, in _constant_tensor_conversion_function\r\n    return constant(v, dtype=dtype, name=name)\r\n  File \"/home/y/anaconda3/lib/python3.5/site-packages/tensorflow/python/framework/constant_op.py\", line 165, in constant\r\n    tensor_util.make_tensor_proto(value, dtype=dtype, shape=shape, verify_shape=verify_shape))\r\n  File \"/home/y/anaconda3/lib/python3.5/site-packages/tensorflow/python/framework/tensor_util.py\", line 441, in make_tensor_proto\r\n    tensor_proto.string_val.extend([compat.as_bytes(x) for x in proto_values])\r\n  File \"/home/y/anaconda3/lib/python3.5/site-packages/tensorflow/python/framework/tensor_util.py\", line 441, in <listcomp>\r\n    tensor_proto.string_val.extend([compat.as_bytes(x) for x in proto_values])\r\n  File \"/home/y/anaconda3/lib/python3.5/site-packages/tensorflow/python/util/compat.py\", line 65, in as_bytes\r\n    (bytes_or_text,))\r\nTypeError: Expected binary or unicode string, got <tensorflow.python.framework.sparse_tensor.SparseTensor object at 0x7fb966845f98>\r\n```\r\n"}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/8246", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/8246/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/8246/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/8246/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/8246", "id": 213119932, "node_id": "MDU6SXNzdWUyMTMxMTk5MzI=", "number": 8246, "title": "TensorFlow equivalent to numpy.repeat", "user": {"login": "shoyer", "id": 1217238, "node_id": "MDQ6VXNlcjEyMTcyMzg=", "avatar_url": "https://avatars2.githubusercontent.com/u/1217238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/shoyer", "html_url": "https://github.com/shoyer", "followers_url": "https://api.github.com/users/shoyer/followers", "following_url": "https://api.github.com/users/shoyer/following{/other_user}", "gists_url": "https://api.github.com/users/shoyer/gists{/gist_id}", "starred_url": "https://api.github.com/users/shoyer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/shoyer/subscriptions", "organizations_url": "https://api.github.com/users/shoyer/orgs", "repos_url": "https://api.github.com/users/shoyer/repos", "events_url": "https://api.github.com/users/shoyer/events{/privacy}", "received_events_url": "https://api.github.com/users/shoyer/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 299643928, "node_id": "MDU6TGFiZWwyOTk2NDM5Mjg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:contributions%20welcome", "name": "stat:contributions welcome", "color": "f4b400", "default": false, "description": ""}, {"id": 473173272, "node_id": "MDU6TGFiZWw0NzMxNzMyNzI=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:feature", "name": "type:feature", "color": "159b2e", "default": false, "description": ""}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 21, "created_at": "2017-03-09T18:09:38Z", "updated_at": "2019-10-02T19:25:22Z", "closed_at": null, "author_association": "MEMBER", "body": "This is a popular question on StackOverflow:\r\nhttp://stackoverflow.com/questions/35361467/tensorflow-numpy-repeat-alternative\r\n\r\nBut note that the answer so far only works for some use cases (the one presented in the question).\r\n\r\nThe best I could come up with for a general solution uses `tf.while_loop`, which is pretty verbose (and maybe slower than necessary). I'll add a link to the implementation I wrote for `tf.contrib.training.resample_at_rate` after the next internal/github sync."}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/8227", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/8227/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/8227/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/8227/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/8227", "id": 212916412, "node_id": "MDU6SXNzdWUyMTI5MTY0MTI=", "number": 8227, "title": "[feature] Smarter Handling of Image Data Format", "user": {"login": "cancan101", "id": 51059, "node_id": "MDQ6VXNlcjUxMDU5", "avatar_url": "https://avatars1.githubusercontent.com/u/51059?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cancan101", "html_url": "https://github.com/cancan101", "followers_url": "https://api.github.com/users/cancan101/followers", "following_url": "https://api.github.com/users/cancan101/following{/other_user}", "gists_url": "https://api.github.com/users/cancan101/gists{/gist_id}", "starred_url": "https://api.github.com/users/cancan101/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cancan101/subscriptions", "organizations_url": "https://api.github.com/users/cancan101/orgs", "repos_url": "https://api.github.com/users/cancan101/repos", "events_url": "https://api.github.com/users/cancan101/events{/privacy}", "received_events_url": "https://api.github.com/users/cancan101/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 299643928, "node_id": "MDU6TGFiZWwyOTk2NDM5Mjg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:contributions%20welcome", "name": "stat:contributions welcome", "color": "f4b400", "default": false, "description": ""}, {"id": 473173272, "node_id": "MDU6TGFiZWw0NzMxNzMyNzI=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:feature", "name": "type:feature", "color": "159b2e", "default": false, "description": ""}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2017-03-09T02:19:59Z", "updated_at": "2017-09-19T07:09:36Z", "closed_at": null, "author_association": "CONTRIBUTOR", "body": "Right now the responsibility of choosing image data format (i.e. the representation of batches of image) is that of the data scientist (ie model writer). I suggest there should a solution in TF to move this to the optimizer (XLA perhaps?) or worst cast Op writer.\r\n\r\nFor some background:\r\n\r\nCurrently Tensorflow supports `NCHW` and `NHWC` (though other formats like [CHWN](https://github.com/soumith/convnet-benchmarks/issues/66#issuecomment-155944875) might be possible down the road). Many of the Ops support both formats. That being said, the docs say:\r\n>The best practice is to build models that work with both NCHW and NHWC as it is common to train using NCHW on GPU, and then do inference with NHWC on CPU.\r\n\r\nThis requires the user to have to do some \"wrangling\" (e.g. loading the checkpoint of weights and re-buidling graph in Python) to map from one image format to another. Further this must be done with some knowledge of the platform on which the graph will be executed (ie which ops are defined, and if both, which is faster)?\r\n\r\nRight now model builder must [build the model to take in channel order and pass that around](https://github.com/tensorflow/tensorflow/issues/8137). Ideally the model could be written once with enough meta information attached to the graph to allow optimizers after the fact (ie at inference time on other platforms) to choose the best representation. Further even at training time, it would be great if the data scientist didn't need to be concerned with image data format (ie dimension ordering) and could use abstractions for accessing results that took care of data access.\r\n\r\nI don't have a clear proposal of how to clean this up, but this seems like a potential pain point, or a the very least results in people leaving performance on the table both when training and at inference. \r\n\r\n**TL; DR** Many data scientists just want to write CNNs without thinking about tensor layouts."}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/8137", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/8137/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/8137/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/8137/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/8137", "id": 212218618, "node_id": "MDU6SXNzdWUyMTIyMTg2MTg=", "number": 8137, "title": "Support consistent data_format between tf.layers and everything else", "user": {"login": "taion", "id": 3112159, "node_id": "MDQ6VXNlcjMxMTIxNTk=", "avatar_url": "https://avatars0.githubusercontent.com/u/3112159?v=4", "gravatar_id": "", "url": "https://api.github.com/users/taion", "html_url": "https://github.com/taion", "followers_url": "https://api.github.com/users/taion/followers", "following_url": "https://api.github.com/users/taion/following{/other_user}", "gists_url": "https://api.github.com/users/taion/gists{/gist_id}", "starred_url": "https://api.github.com/users/taion/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/taion/subscriptions", "organizations_url": "https://api.github.com/users/taion/orgs", "repos_url": "https://api.github.com/users/taion/repos", "events_url": "https://api.github.com/users/taion/events{/privacy}", "received_events_url": "https://api.github.com/users/taion/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 299643928, "node_id": "MDU6TGFiZWwyOTk2NDM5Mjg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:contributions%20welcome", "name": "stat:contributions welcome", "color": "f4b400", "default": false, "description": ""}, {"id": 473173272, "node_id": "MDU6TGFiZWw0NzMxNzMyNzI=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:feature", "name": "type:feature", "color": "159b2e", "default": false, "description": ""}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 14, "created_at": "2017-03-06T19:06:22Z", "updated_at": "2019-10-23T02:43:21Z", "closed_at": null, "author_association": "CONTRIBUTOR", "body": "The functions in `tf.layers` take a `data_format` parameter. However, this parameter has different semantics from the identically named `data_format` parameter everywhere else in TensorFlow. It's expected to be `channels_first` or `channels_last`, versus `NHWC`, `NCHW`, or `NDHWC` everywhere else. As such, it's inconvenient from a DX perspective to intersperse `tf.layers` code with other TensorFlow code, as it requires passing different values for the identically-named `data_format` parameter.\r\n\r\nIdeally, the functions in `tf.layers` should support the more explicit `data_format` strings. While `channels_first` and `channels_last` are easier to understand, they're less explicit, as there do exist cases outside of TensorFlow where the tensor layout is CHWN, given which `channels_first` meaning `NCHW` is not optimally clear.\r\n\r\nOn the same note, it's a bit inconvenient that `tf.layers.batch_normalization` takes `axis` instead of `data_format`; while this is more correct, it makes it annoying to switch back and forth, especially that the fused batch norm implementation only supports NHWC and NCHW anyway, rather than batch norm on an arbitrary axis."}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/7958", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/7958/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/7958/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/7958/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/7958", "id": 210971437, "node_id": "MDU6SXNzdWUyMTA5NzE0Mzc=", "number": 7958, "title": "Support MPSCNN (MetalPerformanceShaders) on iOS", "user": {"login": "cancan101", "id": 51059, "node_id": "MDQ6VXNlcjUxMDU5", "avatar_url": "https://avatars1.githubusercontent.com/u/51059?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cancan101", "html_url": "https://github.com/cancan101", "followers_url": "https://api.github.com/users/cancan101/followers", "following_url": "https://api.github.com/users/cancan101/following{/other_user}", "gists_url": "https://api.github.com/users/cancan101/gists{/gist_id}", "starred_url": "https://api.github.com/users/cancan101/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cancan101/subscriptions", "organizations_url": "https://api.github.com/users/cancan101/orgs", "repos_url": "https://api.github.com/users/cancan101/repos", "events_url": "https://api.github.com/users/cancan101/events{/privacy}", "received_events_url": "https://api.github.com/users/cancan101/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 299643928, "node_id": "MDU6TGFiZWwyOTk2NDM5Mjg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:contributions%20welcome", "name": "stat:contributions welcome", "color": "f4b400", "default": false, "description": ""}, {"id": 473173272, "node_id": "MDU6TGFiZWw0NzMxNzMyNzI=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:feature", "name": "type:feature", "color": "159b2e", "default": false, "description": ""}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 30, "created_at": "2017-03-01T03:42:08Z", "updated_at": "2018-03-16T07:35:45Z", "closed_at": null, "author_association": "CONTRIBUTOR", "body": "Related to: https://github.com/tensorflow/tensorflow/issues/3001\r\n\r\nTake advantage of the [MPSCNN (Metal Performance Shaders) framework from Apple](https://developer.apple.com/reference/metalperformanceshaders).\r\n\r\nSee [blog post](http://machinethink.net/blog/apple-deep-learning-bnns-versus-metal-cnn/) for a comparison of BNSS to MPSCNN (and [associated code](https://github.com/hollance/BNNS-vs-MPSCNN)).\r\n\r\n**TL; DR** BNNS is faster for smaller networks but slower for bigger networks.\r\n\r\nRelated: https://github.com/tensorflow/tensorflow/issues/4846"}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/7956", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/7956/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/7956/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/7956/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/7956", "id": 210952601, "node_id": "MDU6SXNzdWUyMTA5NTI2MDE=", "number": 7956, "title": "Method log_prob_with_logits() for Dirichlet", "user": {"login": "akuz", "id": 2409854, "node_id": "MDQ6VXNlcjI0MDk4NTQ=", "avatar_url": "https://avatars3.githubusercontent.com/u/2409854?v=4", "gravatar_id": "", "url": "https://api.github.com/users/akuz", "html_url": "https://github.com/akuz", "followers_url": "https://api.github.com/users/akuz/followers", "following_url": "https://api.github.com/users/akuz/following{/other_user}", "gists_url": "https://api.github.com/users/akuz/gists{/gist_id}", "starred_url": "https://api.github.com/users/akuz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/akuz/subscriptions", "organizations_url": "https://api.github.com/users/akuz/orgs", "repos_url": "https://api.github.com/users/akuz/repos", "events_url": "https://api.github.com/users/akuz/events{/privacy}", "received_events_url": "https://api.github.com/users/akuz/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 299643928, "node_id": "MDU6TGFiZWwyOTk2NDM5Mjg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:contributions%20welcome", "name": "stat:contributions welcome", "color": "f4b400", "default": false, "description": ""}, {"id": 473173272, "node_id": "MDU6TGFiZWw0NzMxNzMyNzI=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:feature", "name": "type:feature", "color": "159b2e", "default": false, "description": ""}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 26, "created_at": "2017-03-01T01:22:41Z", "updated_at": "2019-10-27T23:44:05Z", "closed_at": null, "author_association": "NONE", "body": "It would be useful to have a log_prob_with_logits() method for the Dirichlet distribution.\r\n\r\nThe reason being is that it is often useful to model the discrete posterior distribution in log space, which doesn't let all probabilities to go exactly to zero. Then the Dirichlet prior can be applied to the data in log space. Note, that if the posterior is converted to the normalised distribution, then some of the discrete probabilities may actually go to zero due to the rounding errors. Then the Dirichlet prior cannot be applied to this distribution because it doesn't allow zero probabilities.\r\n\r\nThe log_prob_with_logits() calculation would be very simple to implement. The log(x_i) would need to be replaced with just x_i, and an additional term with LogSumExp(x) added.\r\n\r\nThis would actually enable the possibility to use the Dirichlet prior on the discrete viariables in log space (can also be part of a neural network)."}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/7848", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/7848/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/7848/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/7848/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/7848", "id": 210047894, "node_id": "MDU6SXNzdWUyMTAwNDc4OTQ=", "number": 7848, "title": "[Feature Request] Predict posterior probability of data per each component in GMM ", "user": {"login": "mahatosourav91", "id": 25343161, "node_id": "MDQ6VXNlcjI1MzQzMTYx", "avatar_url": "https://avatars0.githubusercontent.com/u/25343161?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mahatosourav91", "html_url": "https://github.com/mahatosourav91", "followers_url": "https://api.github.com/users/mahatosourav91/followers", "following_url": "https://api.github.com/users/mahatosourav91/following{/other_user}", "gists_url": "https://api.github.com/users/mahatosourav91/gists{/gist_id}", "starred_url": "https://api.github.com/users/mahatosourav91/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mahatosourav91/subscriptions", "organizations_url": "https://api.github.com/users/mahatosourav91/orgs", "repos_url": "https://api.github.com/users/mahatosourav91/repos", "events_url": "https://api.github.com/users/mahatosourav91/events{/privacy}", "received_events_url": "https://api.github.com/users/mahatosourav91/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 299643928, "node_id": "MDU6TGFiZWwyOTk2NDM5Mjg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:contributions%20welcome", "name": "stat:contributions welcome", "color": "f4b400", "default": false, "description": ""}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2017-02-24T13:27:26Z", "updated_at": "2018-01-06T23:43:26Z", "closed_at": null, "author_association": "NONE", "body": "It would be very helpful  if  method is provided to predict posterior probability of data per each component in GMM.\r\n\r\nA stackoverflow [question ](http://stackoverflow.com/questions/42357268/looking-for-a-method-to-replace-sklearn-mixture-gaussianmixture-predict-probax) has already been raised by longwoo.\r\n\r\n"}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/7822", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/7822/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/7822/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/7822/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/7822", "id": 209840083, "node_id": "MDU6SXNzdWUyMDk4NDAwODM=", "number": 7822, "title": "Returning argmax with tf.nn.pool", "user": {"login": "vdorbs", "id": 2124664, "node_id": "MDQ6VXNlcjIxMjQ2NjQ=", "avatar_url": "https://avatars3.githubusercontent.com/u/2124664?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vdorbs", "html_url": "https://github.com/vdorbs", "followers_url": "https://api.github.com/users/vdorbs/followers", "following_url": "https://api.github.com/users/vdorbs/following{/other_user}", "gists_url": "https://api.github.com/users/vdorbs/gists{/gist_id}", "starred_url": "https://api.github.com/users/vdorbs/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vdorbs/subscriptions", "organizations_url": "https://api.github.com/users/vdorbs/orgs", "repos_url": "https://api.github.com/users/vdorbs/repos", "events_url": "https://api.github.com/users/vdorbs/events{/privacy}", "received_events_url": "https://api.github.com/users/vdorbs/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 299643928, "node_id": "MDU6TGFiZWwyOTk2NDM5Mjg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:contributions%20welcome", "name": "stat:contributions welcome", "color": "f4b400", "default": false, "description": ""}, {"id": 473173272, "node_id": "MDU6TGFiZWw0NzMxNzMyNzI=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:feature", "name": "type:feature", "color": "159b2e", "default": false, "description": ""}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-02-23T18:09:38Z", "updated_at": "2017-07-19T22:51:40Z", "closed_at": null, "author_association": "NONE", "body": "Feature request for returning argmax for N-D pooling with `tf.nn.pool`, as in `tf.nn.max_pool_with_argmax`."}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/7808", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/7808/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/7808/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/7808/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/7808", "id": 209665505, "node_id": "MDU6SXNzdWUyMDk2NjU1MDU=", "number": 7808, "title": "TensorFlow builds LLVM even if ./configured without XLA", "user": {"login": "girving", "id": 70511, "node_id": "MDQ6VXNlcjcwNTEx", "avatar_url": "https://avatars1.githubusercontent.com/u/70511?v=4", "gravatar_id": "", "url": "https://api.github.com/users/girving", "html_url": "https://github.com/girving", "followers_url": "https://api.github.com/users/girving/followers", "following_url": "https://api.github.com/users/girving/following{/other_user}", "gists_url": "https://api.github.com/users/girving/gists{/gist_id}", "starred_url": "https://api.github.com/users/girving/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/girving/subscriptions", "organizations_url": "https://api.github.com/users/girving/orgs", "repos_url": "https://api.github.com/users/girving/repos", "events_url": "https://api.github.com/users/girving/events{/privacy}", "received_events_url": "https://api.github.com/users/girving/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 299643928, "node_id": "MDU6TGFiZWwyOTk2NDM5Mjg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:contributions%20welcome", "name": "stat:contributions welcome", "color": "f4b400", "default": false, "description": ""}, {"id": 473173351, "node_id": "MDU6TGFiZWw0NzMxNzMzNTE=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:build/install", "name": "type:build/install", "color": "159b2e", "default": false, "description": ""}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 18, "created_at": "2017-02-23T05:08:15Z", "updated_at": "2018-04-26T17:50:48Z", "closed_at": null, "author_association": "CONTRIBUTOR", "body": "At HEAD (4ac9c09d5ca57a03b8daa5fb9e295947b1619854), if I configure TensorFlow without XLA support and run\r\n\r\n    blaze build //tensorflow/...\r\n\r\nit still builds both XLA and LLVM (or at least parts, since I haven't waited for it to finish).  Needless to say, it also downloads LLVM, which ideally would not be necessary without XLA support.\r\n\r\nIs it possible to skip building a compiler if I don't want XLA?"}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/7702", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/7702/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/7702/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/7702/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/7702", "id": 208907463, "node_id": "MDU6SXNzdWUyMDg5MDc0NjM=", "number": 7702, "title": "dynamic_rnn_decoder returns shape [?, batch_size, cell.output_size]", "user": {"login": "jbingel", "id": 10550688, "node_id": "MDQ6VXNlcjEwNTUwNjg4", "avatar_url": "https://avatars2.githubusercontent.com/u/10550688?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jbingel", "html_url": "https://github.com/jbingel", "followers_url": "https://api.github.com/users/jbingel/followers", "following_url": "https://api.github.com/users/jbingel/following{/other_user}", "gists_url": "https://api.github.com/users/jbingel/gists{/gist_id}", "starred_url": "https://api.github.com/users/jbingel/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jbingel/subscriptions", "organizations_url": "https://api.github.com/users/jbingel/orgs", "repos_url": "https://api.github.com/users/jbingel/repos", "events_url": "https://api.github.com/users/jbingel/events{/privacy}", "received_events_url": "https://api.github.com/users/jbingel/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 299643928, "node_id": "MDU6TGFiZWwyOTk2NDM5Mjg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:contributions%20welcome", "name": "stat:contributions welcome", "color": "f4b400", "default": false, "description": ""}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2017-02-20T15:12:53Z", "updated_at": "2018-09-09T16:37:53Z", "closed_at": null, "author_association": "NONE", "body": "According to [the docs](https://www.tensorflow.org/api_docs/python/tf/contrib/seq2seq/dynamic_rnn_decoder),  the dynamic_rnn_decoder returns a tuple contaning `outputs`, which is a Tensor of shape `[max_time, batch_size, cell.output_size]`(provided `time_major==True`).\r\n\r\nIn my case, however, the first dimension of that Tensor is returned as underspecified (Dimension `?`), and in fact depending on the provided batch when running the RNN. \r\n\r\nIf this is the intended behaviour, it should probably be highlighted in the documentation that `max_time` is variable.\r\n\r\nReproduce with:\r\n\r\n```import tensorflow as tf\r\nimport numpy as np\r\n\r\n# toy data, timesteps between 1 and 10\r\ntimesteps = np.random.randint(1, 11, [10])\r\nX=np.random.randint(0, 20, [10,10,1])\r\n\r\nbatch_size = 2\r\nmax_ts = 10\r\ninputs = tf.placeholder(tf.float32, \r\n                        (max_ts, batch_size, 1), name=\"X_in\")\r\n\r\ncell_fw = tf.contrib.rnn.LSTMCell(50)\r\ncell_bw = tf.contrib.rnn.LSTMCell(50)\r\ncell_dec = tf.contrib.rnn.LSTMCell(50)\r\n\r\nseq_lens = tf.placeholder(tf.int32, batch_size, name=\"seq_lens\")\r\n\r\nenc_outputs, states = tf.nn.bidirectional_dynamic_rnn(\r\n    cell_fw, cell_bw, inputs, time_major=True, sequence_length=seq_lens, dtype=tf.float32)\r\n\r\ndecoder_inp = tf.concat(enc_outputs, axis=2) \r\n\r\nattention_states = tf.zeros([batch_size, 1, cell_dec.output_size],\r\n                                    name=\"attention_states\")\r\n\r\natt_keys, att_vals, att_score_fn, att_construct_fn = \\\r\n            tf.contrib.seq2seq.prepare_attention(attention_states,\r\n                                                 attention_option=\"luong\",\r\n                                                 num_units=50)\r\n\r\ndynamic_fn_train = tf.contrib.seq2seq.attention_decoder_fn_train(\r\n            states[0], att_keys, att_vals, att_score_fn, att_construct_fn)\r\n\r\noutputs, _, _ = tf.contrib.seq2seq.dynamic_rnn_decoder(\r\n            cell_dec, dynamic_fn_train, decoder_inp, time_major=True,\r\n            sequence_length=seq_lens)\r\n\r\nwith tf.Session() as sess:\r\n    feed_dict = {inputs: X[:,:2,:], seq_lens: ts[:2]}\r\n    sess.run(tf.global_variables_initializer())\r\n    out = sess.run(outputs, feed_dict=feed_dict)\r\n    print(out.shape[0])\r\n```\r\n\r\nThe very last print statement will show that the first output dimension is not max_ts, but the max timestep of the batch (<= 10)"}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/7662", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/7662/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/7662/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/7662/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/7662", "id": 208700740, "node_id": "MDU6SXNzdWUyMDg3MDA3NDA=", "number": 7662, "title": "Add a dynamic_partial_sum operator to tensorflow?", "user": {"login": "zasdfgbnm", "id": 1032377, "node_id": "MDQ6VXNlcjEwMzIzNzc=", "avatar_url": "https://avatars2.githubusercontent.com/u/1032377?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zasdfgbnm", "html_url": "https://github.com/zasdfgbnm", "followers_url": "https://api.github.com/users/zasdfgbnm/followers", "following_url": "https://api.github.com/users/zasdfgbnm/following{/other_user}", "gists_url": "https://api.github.com/users/zasdfgbnm/gists{/gist_id}", "starred_url": "https://api.github.com/users/zasdfgbnm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zasdfgbnm/subscriptions", "organizations_url": "https://api.github.com/users/zasdfgbnm/orgs", "repos_url": "https://api.github.com/users/zasdfgbnm/repos", "events_url": "https://api.github.com/users/zasdfgbnm/events{/privacy}", "received_events_url": "https://api.github.com/users/zasdfgbnm/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 299643928, "node_id": "MDU6TGFiZWwyOTk2NDM5Mjg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:contributions%20welcome", "name": "stat:contributions welcome", "color": "f4b400", "default": false, "description": ""}, {"id": 473173272, "node_id": "MDU6TGFiZWw0NzMxNzMyNzI=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:feature", "name": "type:feature", "color": "159b2e", "default": false, "description": ""}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2017-02-19T07:30:10Z", "updated_at": "2017-04-22T07:34:00Z", "closed_at": null, "author_association": "CONTRIBUTOR", "body": "Hi,\r\n\r\nIn my application I need to do operations that dynamically sum some rows of a matrix to get a new matrix.  There will be an input tensor named \"index\" that guides which part of the tensor to be summed. \r\n\r\nAn example is, if the input matrix is\r\n```python\r\n[ [   1,   1,   1],\r\n  [  10,  10,  10],\r\n  [ 100, 100, 100] ]\r\n```\r\nAnd the index is\r\n```python\r\n[ [ 0, 2 ],\r\n  [ 2, 3 ]]\r\n```\r\nwhich simply says the output tensor will have two rows (because the \"index\" have two rows), the first row is the sum of rows with row number i that satisfies `0 <= i < 2` in the input, and the second row is the sum of rows with row number 2. So the result should be\r\n```python\r\n[ [  11,  11,  11],\r\n  [ 100, 100, 100] ]\r\n```\r\n\r\nI don't find any existing operation that does this job, so I implement it (support only 2d matrix and GPU) by myself.  Since I already have an implementation, I'm not requesting a new feature here. But I do want to know that if the tensorflow team is interested in adding this operation as part of tensorflow. If the answer is yes, I will add CPU support (maybe also xla? I have no idea on how to add xla support yet), and then create a pull request for that."}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/7641", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/7641/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/7641/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/7641/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/7641", "id": 208611300, "node_id": "MDU6SXNzdWUyMDg2MTEzMDA=", "number": 7641, "title": "'LookupError: No gradient defined for operation '...' (op type: ResizeBicubic)' is raised", "user": {"login": "mikigom", "id": 15151242, "node_id": "MDQ6VXNlcjE1MTUxMjQy", "avatar_url": "https://avatars1.githubusercontent.com/u/15151242?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mikigom", "html_url": "https://github.com/mikigom", "followers_url": "https://api.github.com/users/mikigom/followers", "following_url": "https://api.github.com/users/mikigom/following{/other_user}", "gists_url": "https://api.github.com/users/mikigom/gists{/gist_id}", "starred_url": "https://api.github.com/users/mikigom/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mikigom/subscriptions", "organizations_url": "https://api.github.com/users/mikigom/orgs", "repos_url": "https://api.github.com/users/mikigom/repos", "events_url": "https://api.github.com/users/mikigom/events{/privacy}", "received_events_url": "https://api.github.com/users/mikigom/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 299643928, "node_id": "MDU6TGFiZWwyOTk2NDM5Mjg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:contributions%20welcome", "name": "stat:contributions welcome", "color": "f4b400", "default": false, "description": ""}, {"id": 473173272, "node_id": "MDU6TGFiZWw0NzMxNzMyNzI=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:feature", "name": "type:feature", "color": "159b2e", "default": false, "description": ""}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2017-02-18T04:18:42Z", "updated_at": "2019-12-05T16:54:50Z", "closed_at": null, "author_association": "NONE", "body": "I tried to use [tf.image.resize_images](https://www.tensorflow.org/api_docs/python/tf/image/resize_images) with ```method=ResizeMethod.BICUBIC```.\r\n\r\nThe shorten version of my code is the following:\r\n```python\r\n# module import is omitted\r\n# config setting is omitted\r\n# global variable declaration is omitted\r\n\r\ndef train():\r\n    # file queuing and reading are omitted.\r\n    magnification = tf.random_uniform([1], minval = 0, maxval = 4, dtype = tf.float32)\r\n\r\n    image_patches_blurred = tf.image.resize_images(image_patches, [tf.to_int32(64/magnification[0]), tf.to_int32(64/magnification[0])], \\\r\n                                                    method = tf.image.ResizeMethod.BICUBIC)\r\n    image_patches_blurred = tf.image.resize_images(image_patches_blurred, [64, 64], method = tf.image.ResizeMethod.BICUBIC)\r\n\r\n    with tf.variable_scope('generator'):\r\n        G = Stage_Unet_model.generator(image_patches_blurred, batch_size = 16, image_size = 64, input_channels = 3, gf_dim = 32)\r\n\r\n    # Model Loss definition is omitted\r\n\r\n    # Summary Operation is omitted\r\n\r\n    # tf variables loading\r\n    all_vars = tf.global_variables()\r\n    model_generator_vars = [k for k in all_vars if k.name.startswith(\"generator\")]\r\n\r\n    # Gradient Clipping\r\n    generator_grads = tf.gradients(G_loss, model_generator_vars)\r\n    generator_grads, _ = tf.clip_by_global_norm(generator_grads, clip_norm = 1.0)\r\n    generator_var_pairs = zip(generator_grads, model_generator_vars)\r\n\r\n    # tf.train.Saver and global_step declaration is omitted\r\n\r\n    # tf.train.AdamOptimizer\r\n    Adam = tf.train.AdamOptimizer(config.learning_rate)\r\n    G_optim = Adam.apply_gradients(generator_var_pairs, global_step = G_global_step)\r\n\r\n    # merge summary operation is omitted\r\n\r\n    with tf.Session() as sess:\r\n        #...\r\n        for epoch in range(config.epoch):\r\n            for idx in range(config.train_data_number):\r\n                # Note that graph operations related with model D are omitted\r\n                train_D_l, train_G_l, train_D_t_s, train_G_t_s, D_step, G_step, _, __ = sess.run([D_loss, G_loss, \\\r\n                                                                D_tot_summary, G_tot_summary, \\\r\n                                                                D_global_step, G_global_step, D_optim, G_optim])\r\n        #...\r\n\r\nif __name__ == '__main__':\r\n    if not tf.gfile.Exists(log_dir):\r\n        tf.gfile.MakeDirs(log_dir)\r\n    train()\r\n```\r\n\r\nRunning the above code will result in the following error:\r\n```\r\n$ python train_stage1.py \r\nI tensorflow/stream_executor/dso_loader.cc:135] successfully opened CUDA library libcublas.so.8.0 locally\r\nI tensorflow/stream_executor/dso_loader.cc:135] successfully opened CUDA library libcudnn.so.5 locally\r\nI tensorflow/stream_executor/dso_loader.cc:135] successfully opened CUDA library libcufft.so.8.0 locally\r\nI tensorflow/stream_executor/dso_loader.cc:135] successfully opened CUDA library libcuda.so.1 locally\r\nI tensorflow/stream_executor/dso_loader.cc:135] successfully opened CUDA library libcurand.so.8.0 locally\r\nTraceback (most recent call last):\r\n  File \"train_stage1.py\", line 216, in <module>\r\n    train()\r\n  File \"train_stage1.py\", line 150, in train\r\n    generator_grads = tf.gradients(G_loss, model_generator_vars)\r\n  File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/ops/gradients_impl.py\", line 459, in gradients\r\n    (op.name, op.type))\r\nLookupError: No gradient defined for operation 'ResizeBicubic_3' (op type: ResizeBicubic)\r\n```\r\n\r\nThank you for any help.\r\n\r\n### Environment info\r\nOperating System:\r\n\r\nInstalled version of CUDA and cuDNN: \r\n```\r\n$ ls -l /usr/local/cuda-8.0/lib64/libcud*\r\n-rw-r--r-- 1 root root   558720 11\uc6d4  4 05:18 /usr/local/cuda-8.0/lib64/libcudadevrt.a\r\nlrwxrwxrwx 1 root root       16 11\uc6d4  4 05:18 /usr/local/cuda-8.0/lib64/libcudart.so -> libcudart.so.8.0\r\nlrwxrwxrwx 1 root root       19 11\uc6d4  4 05:18 /usr/local/cuda-8.0/lib64/libcudart.so.8.0 -> libcudart.so.8.0.44\r\n-rwxr-xr-x 1 root root   415432 11\uc6d4  4 05:18 /usr/local/cuda-8.0/lib64/libcudart.so.8.0.44\r\n-rw-r--r-- 1 root root   775162 11\uc6d4  4 05:18 /usr/local/cuda-8.0/lib64/libcudart_static.a\r\n-rwxr-xr-x 1 root root 79337624 11\uc6d4  4 05:20 /usr/local/cuda-8.0/lib64/libcudnn.so\r\n-rwxr-xr-x 1 root root 79337624 11\uc6d4  4 05:20 /usr/local/cuda-8.0/lib64/libcudnn.so.5\r\n-rwxr-xr-x 1 root root 79337624 11\uc6d4  4 05:20 /usr/local/cuda-8.0/lib64/libcudnn.so.5.1.5\r\n-rw-r--r-- 1 root root 69756172 11\uc6d4  4 05:20 /usr/local/cuda-8.0/lib64/libcudnn_static.a\r\n```\r\n\r\nIf installed from binary pip package, provide:\r\n```\r\n$ python -c \"import tensorflow; print(tensorflow.__version__)\"\r\nI tensorflow/stream_executor/dso_loader.cc:135] successfully opened CUDA library libcublas.so.8.0 locally\r\nI tensorflow/stream_executor/dso_loader.cc:135] successfully opened CUDA library libcudnn.so.5 locally\r\nI tensorflow/stream_executor/dso_loader.cc:135] successfully opened CUDA library libcufft.so.8.0 locally\r\nI tensorflow/stream_executor/dso_loader.cc:135] successfully opened CUDA library libcuda.so.1 locally\r\nI tensorflow/stream_executor/dso_loader.cc:135] successfully opened CUDA library libcurand.so.8.0 locally\r\n1.0.0\r\n```"}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/7515", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/7515/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/7515/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/7515/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/7515", "id": 207700838, "node_id": "MDU6SXNzdWUyMDc3MDA4Mzg=", "number": 7515, "title": "[feature requests] DecodeCSVOP to parse only the first len(record_defaults) columns of a csv", "user": {"login": "cherishlc", "id": 13269703, "node_id": "MDQ6VXNlcjEzMjY5NzAz", "avatar_url": "https://avatars0.githubusercontent.com/u/13269703?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cherishlc", "html_url": "https://github.com/cherishlc", "followers_url": "https://api.github.com/users/cherishlc/followers", "following_url": "https://api.github.com/users/cherishlc/following{/other_user}", "gists_url": "https://api.github.com/users/cherishlc/gists{/gist_id}", "starred_url": "https://api.github.com/users/cherishlc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cherishlc/subscriptions", "organizations_url": "https://api.github.com/users/cherishlc/orgs", "repos_url": "https://api.github.com/users/cherishlc/repos", "events_url": "https://api.github.com/users/cherishlc/events{/privacy}", "received_events_url": "https://api.github.com/users/cherishlc/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 299643928, "node_id": "MDU6TGFiZWwyOTk2NDM5Mjg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:contributions%20welcome", "name": "stat:contributions welcome", "color": "f4b400", "default": false, "description": ""}, {"id": 473173272, "node_id": "MDU6TGFiZWw0NzMxNzMyNzI=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:feature", "name": "type:feature", "color": "159b2e", "default": false, "description": ""}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2017-02-15T03:40:31Z", "updated_at": "2018-01-25T01:06:44Z", "closed_at": null, "author_association": "NONE", "body": "Suppose that my data.csv is :\r\n_1,2,3_\r\n_2,4,6_\r\n\r\nand for some other purpose we add a new column to a new csv data2.csv\r\n_1,2,3,comment_\r\n\r\nthe code below fails if the input is data2.csv:\r\n`col1,col2,col3 = tf.decode_csv(line,record_defaults=[[1],[1],[1]]) `\r\n\r\nHope that tf.decode_csv() only decodes the first len(record_defaults) columns only, so that it works for both data1.csv as well as data2.csv.\r\nWhat's more, we can add  \"a column index list parameter\" to indicate which columns to be decoded.\r\n"}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/7511", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/7511/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/7511/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/7511/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/7511", "id": 207677942, "node_id": "MDU6SXNzdWUyMDc2Nzc5NDI=", "number": 7511, "title": "non_max_suppression is very slow and doesn't appear to have a cuda or multi-threaded implementation", "user": {"login": "andrei-pokrovsky", "id": 11221446, "node_id": "MDQ6VXNlcjExMjIxNDQ2", "avatar_url": "https://avatars3.githubusercontent.com/u/11221446?v=4", "gravatar_id": "", "url": "https://api.github.com/users/andrei-pokrovsky", "html_url": "https://github.com/andrei-pokrovsky", "followers_url": "https://api.github.com/users/andrei-pokrovsky/followers", "following_url": "https://api.github.com/users/andrei-pokrovsky/following{/other_user}", "gists_url": "https://api.github.com/users/andrei-pokrovsky/gists{/gist_id}", "starred_url": "https://api.github.com/users/andrei-pokrovsky/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/andrei-pokrovsky/subscriptions", "organizations_url": "https://api.github.com/users/andrei-pokrovsky/orgs", "repos_url": "https://api.github.com/users/andrei-pokrovsky/repos", "events_url": "https://api.github.com/users/andrei-pokrovsky/events{/privacy}", "received_events_url": "https://api.github.com/users/andrei-pokrovsky/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 299643928, "node_id": "MDU6TGFiZWwyOTk2NDM5Mjg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:contributions%20welcome", "name": "stat:contributions welcome", "color": "f4b400", "default": false, "description": ""}, {"id": 473173272, "node_id": "MDU6TGFiZWw0NzMxNzMyNzI=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:feature", "name": "type:feature", "color": "159b2e", "default": false, "description": ""}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 12, "created_at": "2017-02-15T00:37:17Z", "updated_at": "2019-07-04T13:28:20Z", "closed_at": null, "author_association": "NONE", "body": "\r\nIt appears that tf.image.non_max_suppression currently takes about 200ms for about 8000 boxes, runs on a single CPU thread and doesn't have a GPU implementation.\r\n\r\n### Environment info\r\nOperating System:\r\nUbuntu 16.04\r\n\r\nInstalled version of CUDA and cuDNN: \r\n(please attach the output of `ls -l /path/to/cuda/lib/libcud*`):\r\n8.0, 5.1.5\r\n\r\nIf installed from binary pip package, provide:\r\n\r\n1. A link to the pip package you installed:\r\n2. The output from `python -c \"import tensorflow; print(tensorflow.__version__)\"`.\r\n0.12.0-rc1\r\n\r\n"}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/7480", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/7480/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/7480/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/7480/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/7480", "id": 207378417, "node_id": "MDU6SXNzdWUyMDczNzg0MTc=", "number": 7480, "title": "preprocessor definition clash with glog", "user": {"login": "szym", "id": 222727, "node_id": "MDQ6VXNlcjIyMjcyNw==", "avatar_url": "https://avatars0.githubusercontent.com/u/222727?v=4", "gravatar_id": "", "url": "https://api.github.com/users/szym", "html_url": "https://github.com/szym", "followers_url": "https://api.github.com/users/szym/followers", "following_url": "https://api.github.com/users/szym/following{/other_user}", "gists_url": "https://api.github.com/users/szym/gists{/gist_id}", "starred_url": "https://api.github.com/users/szym/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/szym/subscriptions", "organizations_url": "https://api.github.com/users/szym/orgs", "repos_url": "https://api.github.com/users/szym/repos", "events_url": "https://api.github.com/users/szym/events{/privacy}", "received_events_url": "https://api.github.com/users/szym/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 473172988, "node_id": "MDU6TGFiZWw0NzMxNzI5ODg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:bug", "name": "type:bug", "color": "159b2e", "default": false, "description": ""}], "state": "open", "locked": false, "assignee": {"login": "gunan", "id": 7946809, "node_id": "MDQ6VXNlcjc5NDY4MDk=", "avatar_url": "https://avatars3.githubusercontent.com/u/7946809?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gunan", "html_url": "https://github.com/gunan", "followers_url": "https://api.github.com/users/gunan/followers", "following_url": "https://api.github.com/users/gunan/following{/other_user}", "gists_url": "https://api.github.com/users/gunan/gists{/gist_id}", "starred_url": "https://api.github.com/users/gunan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gunan/subscriptions", "organizations_url": "https://api.github.com/users/gunan/orgs", "repos_url": "https://api.github.com/users/gunan/repos", "events_url": "https://api.github.com/users/gunan/events{/privacy}", "received_events_url": "https://api.github.com/users/gunan/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "gunan", "id": 7946809, "node_id": "MDQ6VXNlcjc5NDY4MDk=", "avatar_url": "https://avatars3.githubusercontent.com/u/7946809?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gunan", "html_url": "https://github.com/gunan", "followers_url": "https://api.github.com/users/gunan/followers", "following_url": "https://api.github.com/users/gunan/following{/other_user}", "gists_url": "https://api.github.com/users/gunan/gists{/gist_id}", "starred_url": "https://api.github.com/users/gunan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gunan/subscriptions", "organizations_url": "https://api.github.com/users/gunan/orgs", "repos_url": "https://api.github.com/users/gunan/repos", "events_url": "https://api.github.com/users/gunan/events{/privacy}", "received_events_url": "https://api.github.com/users/gunan/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 15, "created_at": "2017-02-14T00:06:36Z", "updated_at": "2019-05-10T23:31:17Z", "closed_at": null, "author_association": "NONE", "body": "CHECK macros from `platform/logging.h` leak out into `core/public` headers which clash with users of glog.\r\n\r\nOne path is through `core/platform/allocator.h`:\r\n```\r\nIn file included from external/org_tensorflow/tensorflow/core/platform/logging.h:25:0,\r\n                 from external/org_tensorflow/tensorflow/core/framework/allocator.h:26,\r\n                 from external/org_tensorflow/tensorflow/core/framework/tensor.h:21,\r\n                 from external/org_tensorflow/tensorflow/core/public/session.h:23,\r\n(snip)\r\nexternal/org_tensorflow/tensorflow/core/platform/default/logging.h:224:0: note: this is the location of the previous definition\r\n #define CHECK_OP_LOG(name, op, val1, val2)                            \\\r\n ^\r\n```\r\nThis one is easy to fix by moving method implementation to allocator.cc.\r\n\r\nAnother is through `core/lib/core/status.h`.\r\n```\r\nIn file included from external/org_tensorflow/tensorflow/core/platform/logging.h:25:0,\r\n                 from external/org_tensorflow/tensorflow/core/lib/core/status.h:24,\r\n                 from external/org_tensorflow/tensorflow/core/lib/core/errors.h:19,\r\n                 from external/org_tensorflow/tensorflow/core/framework/tensor_shape.h:24,\r\n                 from external/org_tensorflow/tensorflow/core/framework/tensor.h:24,\r\n                 from external/org_tensorflow/tensorflow/core/public/session.h:23,\r\n```\r\n\r\nThis one is more work to fix because `TF_CHECK_OK` is used all over the code, but it does not seem to be necessary for `core/public`.\r\n"}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/7422", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/7422/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/7422/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/7422/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/7422", "id": 206880034, "node_id": "MDU6SXNzdWUyMDY4ODAwMzQ=", "number": 7422, "title": "Feature: Add reduce_average (weighted reduce_mean)", "user": {"login": "cancan101", "id": 51059, "node_id": "MDQ6VXNlcjUxMDU5", "avatar_url": "https://avatars1.githubusercontent.com/u/51059?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cancan101", "html_url": "https://github.com/cancan101", "followers_url": "https://api.github.com/users/cancan101/followers", "following_url": "https://api.github.com/users/cancan101/following{/other_user}", "gists_url": "https://api.github.com/users/cancan101/gists{/gist_id}", "starred_url": "https://api.github.com/users/cancan101/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cancan101/subscriptions", "organizations_url": "https://api.github.com/users/cancan101/orgs", "repos_url": "https://api.github.com/users/cancan101/repos", "events_url": "https://api.github.com/users/cancan101/events{/privacy}", "received_events_url": "https://api.github.com/users/cancan101/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 299643928, "node_id": "MDU6TGFiZWwyOTk2NDM5Mjg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:contributions%20welcome", "name": "stat:contributions welcome", "color": "f4b400", "default": false, "description": ""}, {"id": 473173272, "node_id": "MDU6TGFiZWw0NzMxNzMyNzI=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:feature", "name": "type:feature", "color": "159b2e", "default": false, "description": ""}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 13, "created_at": "2017-02-10T19:06:16Z", "updated_at": "2020-01-29T21:04:19Z", "closed_at": null, "author_association": "CONTRIBUTOR", "body": "[Numpy has a function `average`](https://docs.scipy.org/doc/numpy/reference/generated/numpy.average.html) which peforms a weighted mean. I suggest adding this function to tensorflow or adding an optional `weights` argument to `reduce_mean`."}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/7397", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/7397/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/7397/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/7397/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/7397", "id": 206600235, "node_id": "MDU6SXNzdWUyMDY2MDAyMzU=", "number": 7397, "title": "`tf.dynamic_stitch` gradient is incorrect", "user": {"login": "drasmuss", "id": 1952220, "node_id": "MDQ6VXNlcjE5NTIyMjA=", "avatar_url": "https://avatars1.githubusercontent.com/u/1952220?v=4", "gravatar_id": "", "url": "https://api.github.com/users/drasmuss", "html_url": "https://github.com/drasmuss", "followers_url": "https://api.github.com/users/drasmuss/followers", "following_url": "https://api.github.com/users/drasmuss/following{/other_user}", "gists_url": "https://api.github.com/users/drasmuss/gists{/gist_id}", "starred_url": "https://api.github.com/users/drasmuss/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/drasmuss/subscriptions", "organizations_url": "https://api.github.com/users/drasmuss/orgs", "repos_url": "https://api.github.com/users/drasmuss/repos", "events_url": "https://api.github.com/users/drasmuss/events{/privacy}", "received_events_url": "https://api.github.com/users/drasmuss/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 299643928, "node_id": "MDU6TGFiZWwyOTk2NDM5Mjg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:contributions%20welcome", "name": "stat:contributions welcome", "color": "f4b400", "default": false, "description": ""}, {"id": 473172988, "node_id": "MDU6TGFiZWw0NzMxNzI5ODg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:bug", "name": "type:bug", "color": "159b2e", "default": false, "description": ""}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2017-02-09T19:09:54Z", "updated_at": "2017-03-06T16:22:28Z", "closed_at": null, "author_association": "CONTRIBUTOR", "body": "### If possible, provide a minimal reproducible example (We usually don't have time to read hundreds of lines of your code)\r\n``` python\r\nimport tensorflow as tf\r\n\r\nx = tf.zeros((1, 3))\r\ny = tf.dynamic_stitch([[0], [0]], [x, tf.ones((1, 3))])\r\n\r\nwith tf.Session() as sess:\r\n    print(\"y\")\r\n    print(sess.run(y))\r\n\r\n    analytic, numeric = tf.test.compute_gradient(x, (1, 3), y, (1, 3))\r\n    print(\"analytic\")\r\n    print(analytic)\r\n    print(\"numeric\")\r\n    print(numeric)\r\n```\r\n\r\ngives output\r\n```\r\ny\r\n[[ 1.  1.  1.]]\r\nanalytic\r\n[[ 1.  0.  0.]\r\n [ 0.  1.  0.]\r\n [ 0.  0.  1.]]\r\nnumeric\r\n[[ 0.  0.  0.]\r\n [ 0.  0.  0.]\r\n [ 0.  0.  0.]]\r\n```\r\n\r\nThe numeric gradient correctly shows that `x` has no impact on `y` (since the value of `x` is completely overwritten by a constant in the `dynamic_stitch`).  The analytic gradient is incorrect; it seems like the gradient calculation in `dynamic_stitch` does not handle the case where there are duplicate indices being merged.\r\n"}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/7116", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/7116/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/7116/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/7116/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/7116", "id": 203742014, "node_id": "MDU6SXNzdWUyMDM3NDIwMTQ=", "number": 7116, "title": "Packet16q16i does not name a type", "user": {"login": "jiazhentim", "id": 1425881, "node_id": "MDQ6VXNlcjE0MjU4ODE=", "avatar_url": "https://avatars1.githubusercontent.com/u/1425881?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jiazhentim", "html_url": "https://github.com/jiazhentim", "followers_url": "https://api.github.com/users/jiazhentim/followers", "following_url": "https://api.github.com/users/jiazhentim/following{/other_user}", "gists_url": "https://api.github.com/users/jiazhentim/gists{/gist_id}", "starred_url": "https://api.github.com/users/jiazhentim/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jiazhentim/subscriptions", "organizations_url": "https://api.github.com/users/jiazhentim/orgs", "repos_url": "https://api.github.com/users/jiazhentim/repos", "events_url": "https://api.github.com/users/jiazhentim/events{/privacy}", "received_events_url": "https://api.github.com/users/jiazhentim/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 299643928, "node_id": "MDU6TGFiZWwyOTk2NDM5Mjg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:contributions%20welcome", "name": "stat:contributions welcome", "color": "f4b400", "default": false, "description": ""}, {"id": 473173351, "node_id": "MDU6TGFiZWw0NzMxNzMzNTE=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:build/install", "name": "type:build/install", "color": "159b2e", "default": false, "description": ""}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 29, "created_at": "2017-01-27T21:15:26Z", "updated_at": "2018-03-20T18:50:47Z", "closed_at": null, "author_association": "NONE", "body": "When I compile from source using the flag of AVX512 on Xeon Phi with gcc, I come across a problem as below:\r\nERROR: tensorflow/tensorflow/core/kernels/BUILD:895:1: C++ compilation of rule '//tensorflow/core/kernels:gather_functor' failed: gcc failed: error executing command /opt/rh/devtoolset-4/root/usr/bin/gcc -U_FORTIFY_SOURCE '-D_FORTIFY_SOURCE=1' -fstack-protector -Wall -Wl,-z,-relro,-z,now -B/opt/rh/devtoolset-4/root/usr/bin -B/usr/bin -Wunused-but-set-parameter ... (remaining 56 argument(s) skipped): com.google.devtools.build.lib.shell.BadExitStatusException: Process exited with status 1.\r\nIn file included from ./third_party/eigen3/unsupported/Eigen/CXX11/FixedPoint:35:0,\r\n                 from ./tensorflow/core/framework/numeric_types.h:25,\r\n                 from ./tensorflow/core/framework/type_traits.h:22,\r\n                 from ./tensorflow/core/kernels/gather_functor.h:22,\r\n                 from tensorflow/core/kernels/gather_functor.cc:50:\r\n./third_party/eigen3/unsupported/Eigen/CXX11/src/FixedPoint/PacketMathAVX512.h:84:11: error: 'Packet16q16i' does not name a type\r\n   typedef Packet16q16i half;\r\n           ^\r\n./third_party/eigen3/unsupported/Eigen/CXX11/src/FixedPoint/PacketMathAVX512.h:135:11: error: 'Packet16q16i' does not name a type\r\n   typedef Packet16q16i half;\r\n\r\nIs it caused by some code missing? I add some code in the file PacketMathAVX512.h:\r\ntypedef struct Packet16q16i {\r\n  __m512i val;\r\n  operator __m512i() const { return val; }\r\n  Packet16q16i();\r\n  Packet16q16i(__m512i val) : val(val) {}\r\n} Packet16q16i;\r\n\r\nHowever, it is still failed with the following issue:\r\n\r\nERROR: tensorflow/tensorflow/core/kernels/BUILD:346:1: C++ compilation of rule '//tensorflow/core/kernels:split_lib' failed: gcc failed: error executing command \r\n\r\nexternal/eigen_archive/unsupported/Eigen/CXX11/../../../Eigen/src/Core/GenericPacketMath.h:478:16: error: 'alignment' is not a member of 'Eigen::internal::unpacket_traits<Eigen::internal::Packet64q8u>'\r\n   if(Alignment >= unpacket_traits<Packet>::alignment)\r\n                ^\r\nI am not sure if I did something wrong. Can someone help?\r\n\r\nI use the command provided in [https://github.com/tensorflow/tensorflow/issues/4775](url)\r\nbazel build --ignore_unsupported_sandboxing -c opt //tensorflow/tools/pip_package:build_pip_package  --copt \"-mavx512f\" --copt \"-mavx512cd\" --copt \"-mavx512er\" --copt \"-mavx512pf\" --copt \"-mavx2\" --copt \"-fopt-info-vec-all\" --copt \"-DEIGEN_ENABLE_AVX512\" --copt \"-DEIGEN_ENABLE_AVX2\"  --verbose_failures   -j 64\r\n\r\nThe gcc version is 5.3.\r\n\r\nBTW, I also tried to use Intel compiler to compile the code, but failed. I saw two issues are discussed, but it seems that there is no solution. "}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/7004", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/7004/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/7004/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/7004/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/7004", "id": 202365940, "node_id": "MDU6SXNzdWUyMDIzNjU5NDA=", "number": 7004, "title": "Build with --define tensorflow_xsmm=1 fails on MacOS Sierra", "user": {"login": "mikowals", "id": 1331470, "node_id": "MDQ6VXNlcjEzMzE0NzA=", "avatar_url": "https://avatars0.githubusercontent.com/u/1331470?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mikowals", "html_url": "https://github.com/mikowals", "followers_url": "https://api.github.com/users/mikowals/followers", "following_url": "https://api.github.com/users/mikowals/following{/other_user}", "gists_url": "https://api.github.com/users/mikowals/gists{/gist_id}", "starred_url": "https://api.github.com/users/mikowals/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mikowals/subscriptions", "organizations_url": "https://api.github.com/users/mikowals/orgs", "repos_url": "https://api.github.com/users/mikowals/repos", "events_url": "https://api.github.com/users/mikowals/events{/privacy}", "received_events_url": "https://api.github.com/users/mikowals/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 299643928, "node_id": "MDU6TGFiZWwyOTk2NDM5Mjg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:contributions%20welcome", "name": "stat:contributions welcome", "color": "f4b400", "default": false, "description": ""}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2017-01-22T07:11:54Z", "updated_at": "2018-09-13T17:28:07Z", "closed_at": null, "author_association": "CONTRIBUTOR", "body": "Building current master after the recent commits to enable libxsmm.\r\n\r\n    bazel build --copt=-march=native -c opt --define tensorflow_xsmm=1 --verbose_failures //tensorflow/tools/pip_package:build_pip_package\r\n\r\nThe important error lines (I think) are:\r\n\r\n> tensorflow/core/kernels/sparse_matmul_op.cc:1408:3: error: unknown type name 'cpu_set_t'\r\n  cpu_set_t old_cpu_set;\r\n  \r\n> tensorflow/core/kernels/sparse_matmul_op.cc:1413:39: error: use of undeclared identifier 'cpu_set_t'\r\n    ret = sched_getaffinity(0, sizeof(cpu_set_t), &old_cpu_set);\r\n\r\nThe full result of --verbose_failures is attached.\r\n[tf_libxsmm_error.txt](https://github.com/tensorflow/tensorflow/files/721760/tf_libxsmm_error.txt)\r\n\r\nSearching for 'cpu_set_t' on OSX turned up [this code example under heading 2.2](https://github.com/Cibiv/NextGenMap/issues/6) and claims that 'cpu_set_t' is not defined on OSX and Apple's own multithreading code needs to be substituted. So maybe the code using 'cpu_set_t' is not meant to be reached on Macs and the libxsmm code is not ready to be used on my machine.\r\n\r\n\r\n\r\n\r\n\r\n"}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/6925", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/6925/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/6925/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/6925/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/6925", "id": 201531371, "node_id": "MDU6SXNzdWUyMDE1MzEzNzE=", "number": 6925, "title": "support for depth pooling in maxpool3d?", "user": {"login": "odellus", "id": 4686956, "node_id": "MDQ6VXNlcjQ2ODY5NTY=", "avatar_url": "https://avatars1.githubusercontent.com/u/4686956?v=4", "gravatar_id": "", "url": "https://api.github.com/users/odellus", "html_url": "https://github.com/odellus", "followers_url": "https://api.github.com/users/odellus/followers", "following_url": "https://api.github.com/users/odellus/following{/other_user}", "gists_url": "https://api.github.com/users/odellus/gists{/gist_id}", "starred_url": "https://api.github.com/users/odellus/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/odellus/subscriptions", "organizations_url": "https://api.github.com/users/odellus/orgs", "repos_url": "https://api.github.com/users/odellus/repos", "events_url": "https://api.github.com/users/odellus/events{/privacy}", "received_events_url": "https://api.github.com/users/odellus/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 299643928, "node_id": "MDU6TGFiZWwyOTk2NDM5Mjg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:contributions%20welcome", "name": "stat:contributions welcome", "color": "f4b400", "default": false, "description": ""}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2017-01-18T10:19:29Z", "updated_at": "2018-08-05T20:07:25Z", "closed_at": null, "author_association": "NONE", "body": "Is depth pooling in the works for MaxPool3D? Any pointers on how I should/could get this going myself? \r\n```\r\nUnimplementedError (see above for traceback): Pooling is not yet supported on the depth dimension.\r\n[[Node: max_pool_1 = MaxPool3D[T=DT_FLOAT, ksize=[1, 2, 2, 2, 64], padding=\"VALID\", strides=[1,\r\n 1, 1, 1, 1], _device=\"/job:localhost/replica:0/task:0/gpu:0\"](Relu_1)]]\r\n```\r\nHere's an example of how I'm using it:\r\n```Python\r\ndef maxpool3d(input_, kd, kh, kw, stride=1,scope=None):\r\n    input_cdim = input_.get_shape().as_list()[-1]\r\n    batch_size = input_.get_shape().as_list()[0]\r\n    kernel = [batch_size, kd, kh, kw, input_cdim]\r\n    return tf.nn.max_pool3d(input_, kernel,\r\n        strides=[1,stride,stride,stride,1], padding=\"VALID\", name=scope)\r\n# ...\r\n# Perform 2 3D convolutions without max pooling.\r\nx = tf.nn.relu(conv3d(x, 4, 4, 4, 64, scope=\"conv_1\"))\r\nx = tf.nn.relu(conv3d(x, 4, 4, 4, 64, scope=\"conv_2\"))\r\n\r\n# Downsample with max pooling.\r\nx = maxpool3d(x, 2, 2, 2, scope=\"max_pool_1\")\r\n```"}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/6541", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/6541/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/6541/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/6541/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/6541", "id": 197875208, "node_id": "MDU6SXNzdWUxOTc4NzUyMDg=", "number": 6541, "title": "tf.signal CPU FFT implementation is slower than NumPy, PyTorch, etc.", "user": {"login": "diggerdu", "id": 5636045, "node_id": "MDQ6VXNlcjU2MzYwNDU=", "avatar_url": "https://avatars2.githubusercontent.com/u/5636045?v=4", "gravatar_id": "", "url": "https://api.github.com/users/diggerdu", "html_url": "https://github.com/diggerdu", "followers_url": "https://api.github.com/users/diggerdu/followers", "following_url": "https://api.github.com/users/diggerdu/following{/other_user}", "gists_url": "https://api.github.com/users/diggerdu/gists{/gist_id}", "starred_url": "https://api.github.com/users/diggerdu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/diggerdu/subscriptions", "organizations_url": "https://api.github.com/users/diggerdu/orgs", "repos_url": "https://api.github.com/users/diggerdu/repos", "events_url": "https://api.github.com/users/diggerdu/events{/privacy}", "received_events_url": "https://api.github.com/users/diggerdu/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1566679705, "node_id": "MDU6TGFiZWwxNTY2Njc5NzA1", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/comp:signal", "name": "comp:signal", "color": "0052cc", "default": false, "description": "tf.signal related issues"}, {"id": 1463677878, "node_id": "MDU6TGFiZWwxNDYzNjc3ODc4", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:performance", "name": "type:performance", "color": "159b2e", "default": false, "description": "Performance Issue"}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 28, "created_at": "2016-12-28T16:00:15Z", "updated_at": "2020-03-12T15:22:56Z", "closed_at": null, "author_association": "NONE", "body": "### What related GitHub issues or StackOverflow threads have you found by searching the web for your problem?\r\n\r\n### Environment info\r\nOperating System:\r\nUbuntu 16.04 LTS 64bit\r\n\r\nInstalled version of CUDA and cuDNN: \r\n(please attach the output of `ls -l /path/to/cuda/lib/libcud*`):\r\n`\r\n-rw-r--r-- 1 root root   558720 9\u6708  15 07:02 libcudadevrt.a\r\nlrwxrwxrwx 1 root root       16 9\u6708  15 07:05 libcudart.so -> libcudart.so.8.0\r\nlrwxrwxrwx 1 root root       19 9\u6708  15 07:05 libcudart.so.8.0 -> libcudart.so.8.0.44\r\n-rw-r--r-- 1 root root   415432 9\u6708  15 07:02 libcudart.so.8.0.44\r\n-rw-r--r-- 1 root root   775162 9\u6708  15 07:02 libcudart_static.a\r\n-rwxr-xr-x 1 root root 79337624 10\u6708 27 23:13 libcudnn.so\r\n-rwxr-xr-x 1 root root 79337624 10\u6708 27 23:13 libcudnn.so.5\r\n-rwxr-xr-x 1 root root 79337624 10\u6708 27 23:13 libcudnn.so.5.1.5\r\n-rw-r--r-- 1 root root 69756172 10\u6708 27 23:13 libcudnn_static.a\r\n`\r\nIf installed from binary pip package, provide:\r\n\r\n1. A link to the pip package you installed:\r\n2. The output from `python -c \"import tensorflow; print(tensorflow.__version__)\"`.\r\n`0.12.head`\r\nIf installed from source, provide \r\n\r\n1. The commit hash (`git rev-parse HEAD`)\r\n2. The output of `bazel version`\r\n\r\n### If possible, provide a minimal reproducible example (We usually don't have time to read hundreds of lines of your code)\r\n\r\n\r\n```\r\nimport numpy as np\r\nimport tensorflow as tf\r\nimport time\r\n\r\nwav = np.random.random_sample((1024,))\r\nspec = np.fft.fft(wav)[:513]\r\n\r\n\r\nx = tf.placeholder(dtype=tf.complex64, shape=[513])\r\nresult = tf.ifft(x) \r\nsess = tf.Session()\r\n\r\nstart = time.time()\r\nfor i in range(10000):\r\n    something = sess.run(result, feed_dict={x:spec})\r\nprint 'tensorflow:{}s'.format(time.time()-start)\r\n\r\nstart = time.time()\r\nfor i in range(10000):\r\n   \tsomething = np.fft.ifft(spec)\r\nprint 'numpy:{}s'.format(time.time() - start)\r\n\r\n```\r\n```\r\ntensorflow:25.7219519615s\r\nnumpy:0.391902923584s\r\n```\r\n### What other attempted solutions have you tried?\r\n\r\n\r\n### Logs or other output that would be helpful\r\n(If logs are large, please upload as attachment or provide link).\r\n"}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/6504", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/6504/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/6504/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/6504/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/6504", "id": 197592196, "node_id": "MDU6SXNzdWUxOTc1OTIxOTY=", "number": 6504, "title": "Feature Request: Gradient for QR op", "user": {"login": "kstant0725", "id": 9817643, "node_id": "MDQ6VXNlcjk4MTc2NDM=", "avatar_url": "https://avatars0.githubusercontent.com/u/9817643?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kstant0725", "html_url": "https://github.com/kstant0725", "followers_url": "https://api.github.com/users/kstant0725/followers", "following_url": "https://api.github.com/users/kstant0725/following{/other_user}", "gists_url": "https://api.github.com/users/kstant0725/gists{/gist_id}", "starred_url": "https://api.github.com/users/kstant0725/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kstant0725/subscriptions", "organizations_url": "https://api.github.com/users/kstant0725/orgs", "repos_url": "https://api.github.com/users/kstant0725/repos", "events_url": "https://api.github.com/users/kstant0725/events{/privacy}", "received_events_url": "https://api.github.com/users/kstant0725/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 299643928, "node_id": "MDU6TGFiZWwyOTk2NDM5Mjg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:contributions%20welcome", "name": "stat:contributions welcome", "color": "f4b400", "default": false, "description": ""}, {"id": 473173272, "node_id": "MDU6TGFiZWw0NzMxNzMyNzI=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:feature", "name": "type:feature", "color": "159b2e", "default": false, "description": ""}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 10, "created_at": "2016-12-26T14:15:34Z", "updated_at": "2018-02-07T23:48:55Z", "closed_at": null, "author_association": "NONE", "body": "The QR op is currently implemented but has no gradient.  It would be very useful if the gradient were defined so that the op could be used in networks and cost functions.\r\n"}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/6417", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/6417/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/6417/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/6417/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/6417", "id": 196633923, "node_id": "MDU6SXNzdWUxOTY2MzM5MjM=", "number": 6417, "title": "Saver can't handle filename only ", "user": {"login": "HWiese1980", "id": 743912, "node_id": "MDQ6VXNlcjc0MzkxMg==", "avatar_url": "https://avatars3.githubusercontent.com/u/743912?v=4", "gravatar_id": "", "url": "https://api.github.com/users/HWiese1980", "html_url": "https://github.com/HWiese1980", "followers_url": "https://api.github.com/users/HWiese1980/followers", "following_url": "https://api.github.com/users/HWiese1980/following{/other_user}", "gists_url": "https://api.github.com/users/HWiese1980/gists{/gist_id}", "starred_url": "https://api.github.com/users/HWiese1980/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/HWiese1980/subscriptions", "organizations_url": "https://api.github.com/users/HWiese1980/orgs", "repos_url": "https://api.github.com/users/HWiese1980/repos", "events_url": "https://api.github.com/users/HWiese1980/events{/privacy}", "received_events_url": "https://api.github.com/users/HWiese1980/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 299643928, "node_id": "MDU6TGFiZWwyOTk2NDM5Mjg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:contributions%20welcome", "name": "stat:contributions welcome", "color": "f4b400", "default": false, "description": ""}, {"id": 473184161, "node_id": "MDU6TGFiZWw0NzMxODQxNjE=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:support", "name": "type:support", "color": "159b2e", "default": false, "description": ""}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 21, "created_at": "2016-12-20T10:13:40Z", "updated_at": "2018-03-22T21:00:21Z", "closed_at": null, "author_association": "NONE", "body": "Hey everyone,\r\n\r\nit seems to me like - at least on Windows - the `tf` saver can't save model files whose path consists only of the file's name with no parent path, relative nor absolute. The issue lies at or around [saver.py:1363](https://github.com/tensorflow/tensorflow/blob/master/tensorflow/python/training/saver.py#L1363) where it tries to check whether the parent directory of the file is actually a directory. There is no parent directory given (i.e. an empty string) and as such `gFile.IsDirectory` can't check anything. It fails and raises a ValueError that the parent directory does not exist. \r\n\r\nExpected behavior _in my opinion_ would be that the current working directory is used as the parent path when using no path/just a filename (i.e. a relative path). \r\n\r\n## Some details about my system specs:\r\n\r\n* Windows 10\r\n* Python 3.5.2\r\n* TF 0.12.0 (in a virtual environment; `pip install tensorflow --upgrade` just executed; issue persists)\r\n\r\n\r\nSo, I'm wondering whether this is an expected behavior and how to deal with it or if it is an actual bug that needs to be addressed."}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/6230", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/6230/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/6230/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/6230/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/6230", "id": 194731109, "node_id": "MDU6SXNzdWUxOTQ3MzExMDk=", "number": 6230, "title": "Poor colors for embedding projector", "user": {"login": "mzduchon", "id": 21205910, "node_id": "MDQ6VXNlcjIxMjA1OTEw", "avatar_url": "https://avatars0.githubusercontent.com/u/21205910?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mzduchon", "html_url": "https://github.com/mzduchon", "followers_url": "https://api.github.com/users/mzduchon/followers", "following_url": "https://api.github.com/users/mzduchon/following{/other_user}", "gists_url": "https://api.github.com/users/mzduchon/gists{/gist_id}", "starred_url": "https://api.github.com/users/mzduchon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mzduchon/subscriptions", "organizations_url": "https://api.github.com/users/mzduchon/orgs", "repos_url": "https://api.github.com/users/mzduchon/repos", "events_url": "https://api.github.com/users/mzduchon/events{/privacy}", "received_events_url": "https://api.github.com/users/mzduchon/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 299643928, "node_id": "MDU6TGFiZWwyOTk2NDM5Mjg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:contributions%20welcome", "name": "stat:contributions welcome", "color": "f4b400", "default": false, "description": ""}, {"id": 473173272, "node_id": "MDU6TGFiZWw0NzMxNzMyNzI=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:feature", "name": "type:feature", "color": "159b2e", "default": false, "description": ""}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2016-12-10T00:44:54Z", "updated_at": "2019-01-18T22:31:28Z", "closed_at": null, "author_association": "NONE", "body": "The second and third colors available in \"color by\" are extremely similar when there is overlap: the second color (orangish) appears very similar to third (redish) one.   This prevents any pop-out effect."}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/6219", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/6219/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/6219/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/6219/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/6219", "id": 194668578, "node_id": "MDU6SXNzdWUxOTQ2Njg1Nzg=", "number": 6219, "title": "Allow using raw values for Projector?", "user": {"login": "maximsch2", "id": 464680, "node_id": "MDQ6VXNlcjQ2NDY4MA==", "avatar_url": "https://avatars2.githubusercontent.com/u/464680?v=4", "gravatar_id": "", "url": "https://api.github.com/users/maximsch2", "html_url": "https://github.com/maximsch2", "followers_url": "https://api.github.com/users/maximsch2/followers", "following_url": "https://api.github.com/users/maximsch2/following{/other_user}", "gists_url": "https://api.github.com/users/maximsch2/gists{/gist_id}", "starred_url": "https://api.github.com/users/maximsch2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/maximsch2/subscriptions", "organizations_url": "https://api.github.com/users/maximsch2/orgs", "repos_url": "https://api.github.com/users/maximsch2/repos", "events_url": "https://api.github.com/users/maximsch2/events{/privacy}", "received_events_url": "https://api.github.com/users/maximsch2/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 299643928, "node_id": "MDU6TGFiZWwyOTk2NDM5Mjg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:contributions%20welcome", "name": "stat:contributions welcome", "color": "f4b400", "default": false, "description": ""}, {"id": 473173272, "node_id": "MDU6TGFiZWw0NzMxNzMyNzI=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:feature", "name": "type:feature", "color": "159b2e", "default": false, "description": ""}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2016-12-09T18:47:15Z", "updated_at": "2019-01-18T22:31:43Z", "closed_at": null, "author_association": "CONTRIBUTOR", "body": "It would be great if Projector would allow raw values for visualization (e.g. in case the data has PCA or t-SNE applied already )"}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/5965", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/5965/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/5965/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/5965/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/5965", "id": 192464124, "node_id": "MDU6SXNzdWUxOTI0NjQxMjQ=", "number": 5965, "title": "Feature request: GPU ops for tf.unique; tf.where; and tf.dynamic_partition ", "user": {"login": "liuyipei", "id": 4404828, "node_id": "MDQ6VXNlcjQ0MDQ4Mjg=", "avatar_url": "https://avatars0.githubusercontent.com/u/4404828?v=4", "gravatar_id": "", "url": "https://api.github.com/users/liuyipei", "html_url": "https://github.com/liuyipei", "followers_url": "https://api.github.com/users/liuyipei/followers", "following_url": "https://api.github.com/users/liuyipei/following{/other_user}", "gists_url": "https://api.github.com/users/liuyipei/gists{/gist_id}", "starred_url": "https://api.github.com/users/liuyipei/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/liuyipei/subscriptions", "organizations_url": "https://api.github.com/users/liuyipei/orgs", "repos_url": "https://api.github.com/users/liuyipei/repos", "events_url": "https://api.github.com/users/liuyipei/events{/privacy}", "received_events_url": "https://api.github.com/users/liuyipei/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 299643928, "node_id": "MDU6TGFiZWwyOTk2NDM5Mjg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:contributions%20welcome", "name": "stat:contributions welcome", "color": "f4b400", "default": false, "description": ""}, {"id": 473173272, "node_id": "MDU6TGFiZWw0NzMxNzMyNzI=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:feature", "name": "type:feature", "color": "159b2e", "default": false, "description": ""}], "state": "open", "locked": false, "assignee": {"login": "tatianashp", "id": 986732, "node_id": "MDQ6VXNlcjk4NjczMg==", "avatar_url": "https://avatars2.githubusercontent.com/u/986732?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tatianashp", "html_url": "https://github.com/tatianashp", "followers_url": "https://api.github.com/users/tatianashp/followers", "following_url": "https://api.github.com/users/tatianashp/following{/other_user}", "gists_url": "https://api.github.com/users/tatianashp/gists{/gist_id}", "starred_url": "https://api.github.com/users/tatianashp/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tatianashp/subscriptions", "organizations_url": "https://api.github.com/users/tatianashp/orgs", "repos_url": "https://api.github.com/users/tatianashp/repos", "events_url": "https://api.github.com/users/tatianashp/events{/privacy}", "received_events_url": "https://api.github.com/users/tatianashp/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "tatianashp", "id": 986732, "node_id": "MDQ6VXNlcjk4NjczMg==", "avatar_url": "https://avatars2.githubusercontent.com/u/986732?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tatianashp", "html_url": "https://github.com/tatianashp", "followers_url": "https://api.github.com/users/tatianashp/followers", "following_url": "https://api.github.com/users/tatianashp/following{/other_user}", "gists_url": "https://api.github.com/users/tatianashp/gists{/gist_id}", "starred_url": "https://api.github.com/users/tatianashp/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tatianashp/subscriptions", "organizations_url": "https://api.github.com/users/tatianashp/orgs", "repos_url": "https://api.github.com/users/tatianashp/repos", "events_url": "https://api.github.com/users/tatianashp/events{/privacy}", "received_events_url": "https://api.github.com/users/tatianashp/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 19, "created_at": "2016-11-30T03:10:13Z", "updated_at": "2019-08-10T15:58:08Z", "closed_at": null, "author_association": "CONTRIBUTOR", "body": "This is a feature request.  As far as I know, all three of them currently do not have GPU ops.\r\n\r\nIt seems that if we can at least get a GPU implementation of `tf.unique` for integers, then the user can make `tf.where` and `tf.dynamic_partition` manually.  For those of us who are trying to build models that want to mess around with indices rather frequently, this would be incredibly helpful. "}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/5443", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/5443/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/5443/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/5443/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/5443", "id": 187666994, "node_id": "MDU6SXNzdWUxODc2NjY5OTQ=", "number": 5443, "title": "einsum with ellipses \"...\" (indefinite number of axes)", "user": {"login": "isabeaups", "id": 12017880, "node_id": "MDQ6VXNlcjEyMDE3ODgw", "avatar_url": "https://avatars2.githubusercontent.com/u/12017880?v=4", "gravatar_id": "", "url": "https://api.github.com/users/isabeaups", "html_url": "https://github.com/isabeaups", "followers_url": "https://api.github.com/users/isabeaups/followers", "following_url": "https://api.github.com/users/isabeaups/following{/other_user}", "gists_url": "https://api.github.com/users/isabeaups/gists{/gist_id}", "starred_url": "https://api.github.com/users/isabeaups/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/isabeaups/subscriptions", "organizations_url": "https://api.github.com/users/isabeaups/orgs", "repos_url": "https://api.github.com/users/isabeaups/repos", "events_url": "https://api.github.com/users/isabeaups/events{/privacy}", "received_events_url": "https://api.github.com/users/isabeaups/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 299643928, "node_id": "MDU6TGFiZWwyOTk2NDM5Mjg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:contributions%20welcome", "name": "stat:contributions welcome", "color": "f4b400", "default": false, "description": ""}, {"id": 473173272, "node_id": "MDU6TGFiZWw0NzMxNzMyNzI=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:feature", "name": "type:feature", "color": "159b2e", "default": false, "description": ""}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2016-11-07T09:52:01Z", "updated_at": "2019-01-18T22:31:56Z", "closed_at": null, "author_association": "NONE", "body": "Thank you very much for providing the (numpy) einsum feature in tensorflow, that is really great. The documentation for einsum says to look at the numpy documentation as it provides the same api. It is not exactly the same, one difference is the possibility of using \"...\" in numpy which seems not to be implemented in tensorflow. This would definitely be a nice feature to have in tensorflow also since that way one could build various function/transformations in tensorflow which are not dependent on the number of axis the tensor has (i.e. the specific use case). \r\n\r\nHere is the error I encountered when trying to do that:\r\n`d = tf.einsum(\"i...,ij->j...\",c,b)`\r\n\r\n> ---------------------------------------------------------------------------\r\n> AssertionError                            Traceback (most recent call last)\r\n> <ipython-input-12-d7c0123ec21a> in <module>()\r\n> ----> 1 d = tf.einsum(\"i...,ij->j...\",c,b)\r\n> \r\n> //anaconda/envs/chaos/lib/python3.5/site-packages/tensorflow/python/ops/special_math_ops.py in einsum(axes, *inputs)\r\n>     100   match = re.match('([a-z,]+)->([a-z]+)', axes)\r\n>     101   assert match, \\\r\n> --> 102     \"Indices have incorrect format: %s\" % axes\r\n>     103 \r\n>     104   inputs = list(inputs)\r\n> \r\n> AssertionError: Indices have incorrect format: i...,ij->j..."}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/5193", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/5193/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/5193/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/5193/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/5193", "id": 185098822, "node_id": "MDU6SXNzdWUxODUwOTg4MjI=", "number": 5193, "title": "CuSPARSE support", "user": {"login": "mhobby", "id": 5887575, "node_id": "MDQ6VXNlcjU4ODc1NzU=", "avatar_url": "https://avatars3.githubusercontent.com/u/5887575?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mhobby", "html_url": "https://github.com/mhobby", "followers_url": "https://api.github.com/users/mhobby/followers", "following_url": "https://api.github.com/users/mhobby/following{/other_user}", "gists_url": "https://api.github.com/users/mhobby/gists{/gist_id}", "starred_url": "https://api.github.com/users/mhobby/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mhobby/subscriptions", "organizations_url": "https://api.github.com/users/mhobby/orgs", "repos_url": "https://api.github.com/users/mhobby/repos", "events_url": "https://api.github.com/users/mhobby/events{/privacy}", "received_events_url": "https://api.github.com/users/mhobby/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 299643928, "node_id": "MDU6TGFiZWwyOTk2NDM5Mjg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:contributions%20welcome", "name": "stat:contributions welcome", "color": "f4b400", "default": false, "description": ""}, {"id": 473173272, "node_id": "MDU6TGFiZWw0NzMxNzMyNzI=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:feature", "name": "type:feature", "color": "159b2e", "default": false, "description": ""}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 17, "created_at": "2016-10-25T12:12:22Z", "updated_at": "2019-05-15T17:09:52Z", "closed_at": null, "author_association": "NONE", "body": "For some machine learning /algorithm problems, we require to multiply matrices with vectors. In some cases - especially those associated with large graph analytics, the matrices are sparse. Given the major limitation with GPUs is the limited GPU memory, representing the matrix in sparse format is vital.\n\nTo this end, the CUSPARSE libraries (http://docs.nvidia.com/cuda/cusparse/) provide a suitable object model and various functions for sparse matrix/vector operations.\n\nI would therefore like to request a basic CUSPARSE implementation. \ne.g. - \n- CSR matrix representation - (see http://docs.nvidia.com/cuda/cusparse/#compressed-sparse-row-format-csr)\n- basic matrix-vector multiplication for CSR representations (see http://docs.nvidia.com/cuda/cusparse/#cusparse-lt-t-gt-csrmv)\n\nNOTE: Only file GitHub issues for bugs and feature requests.  All other topics will be closed.\n\nFor general support from the community, see [StackOverflow](https://stackoverflow.com/questions/tagged/tensorflow).\nTo make bugs and feature requests more easy to find and organize, we close issues that are deemed\nout of scope for GitHub Issues and point people to StackOverflow.\n\nFor bugs or installation issues, please provide the following information.\nThe more information you provide, the more easily we will be able to offer\nhelp and advice.\n### What related GitHub issues or StackOverflow threads have you found by searching the web for your problem?\n### Environment info\n\nOperating System:\n\nInstalled version of CUDA and cuDNN: \n(please attach the output of `ls -l /path/to/cuda/lib/libcud*`):\n\nIf installed from binary pip package, provide:\n1. A link to the pip package you installed:\n2. The output from `python -c \"import tensorflow; print(tensorflow.__version__)\"`.\n\nIf installed from source, provide \n1. The commit hash (`git rev-parse HEAD`)\n2. The output of `bazel version`\n### If possible, provide a minimal reproducible example (We usually don't have time to read hundreds of lines of your code)\n### What other attempted solutions have you tried?\n### Logs or other output that would be helpful\n\n(If logs are large, please upload as attachment or provide link).\n"}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/4914", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/4914/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/4914/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/4914/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/4914", "id": 182532851, "node_id": "MDU6SXNzdWUxODI1MzI4NTE=", "number": 4914, "title": "Keeping gradient of sqrt(x) stable for x = 0", "user": {"login": "egpbos", "id": 6146598, "node_id": "MDQ6VXNlcjYxNDY1OTg=", "avatar_url": "https://avatars3.githubusercontent.com/u/6146598?v=4", "gravatar_id": "", "url": "https://api.github.com/users/egpbos", "html_url": "https://github.com/egpbos", "followers_url": "https://api.github.com/users/egpbos/followers", "following_url": "https://api.github.com/users/egpbos/following{/other_user}", "gists_url": "https://api.github.com/users/egpbos/gists{/gist_id}", "starred_url": "https://api.github.com/users/egpbos/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/egpbos/subscriptions", "organizations_url": "https://api.github.com/users/egpbos/orgs", "repos_url": "https://api.github.com/users/egpbos/repos", "events_url": "https://api.github.com/users/egpbos/events{/privacy}", "received_events_url": "https://api.github.com/users/egpbos/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 299643928, "node_id": "MDU6TGFiZWwyOTk2NDM5Mjg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:contributions%20welcome", "name": "stat:contributions welcome", "color": "f4b400", "default": false, "description": ""}, {"id": 473173272, "node_id": "MDU6TGFiZWw0NzMxNzMyNzI=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:feature", "name": "type:feature", "color": "159b2e", "default": false, "description": ""}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 18, "created_at": "2016-10-12T13:57:36Z", "updated_at": "2020-03-02T06:41:09Z", "closed_at": null, "author_association": "NONE", "body": "I'm minimizing a function that contains a few `tf.sqrt(c * x)` terms. The `x` is a `tf.Variable` and `c` is a `tf.constant` that is sometimes zero. A `NaN` inevitably presents itself. In my case, the gradient is to `c`, which is `x * 0.5/sqrt(c * x)` and which equals `0 * inf = NaN` when `c` is `0`.\n\nWhen such a `sqrt` is deeply buried in your function, it can be quite an effort to dig out where the `NaN` is coming from. I can understand and appreciate the fact that there is no check for zero in the `sqrt_grad` operator. However, I feel that debugging could be easier for ops that are known to be unstable in some numerical range.\n\nTwo possible fixes would be:\n1. Add exceptions to the documentation of these ops. Right now this is not even indicated for `tf.div`, for instance. Since the use-cases of TensorFlow almost always mean that gradients will be involved, the allowed range should also be mentioned for the gradient, if different from that of the op itself.\n2. Add debug-mode versions of the ops. These could include `NaN` and `inf` checks.\n\nBy the way, I was using the `tf.contrib.opt.ScipyOptimizerInterface` for the minimization, which does not support manually changing the gradients by using `compute_gradients` and `apply_gradients`. That's beside the point, though.\n\nBelow some example code for completeness' sake. The differences in outcome only add to the confusion.\n\n``` python\nfrom __future__ import absolute_import, division, print_function\nimport tensorflow as tf\n\nc = tf.Variable(0.0)\n\nsqrt_grad = tf.gradients(tf.sqrt(c), c)\n\n# another possibility is when another factor in the argument is zero\nx = tf.Variable(1.)\nsqrt_x_grad = tf.gradients(tf.sqrt(x * c), x)\n\n# try to use select to filter out the NaN\nselsqrt_grad = tf.gradients(tf.select(c > 0, tf.sqrt(c), 0), c)\n\n# try clipping of the sqrt\nclipsqrt_grad = tf.gradients(tf.clip_by_value(tf.sqrt(c), 1e-10, 1), c)\n\n# clip the argument of the sqrt --> only numerically stable option\nclipargsqrt_grad = tf.gradients(tf.sqrt(tf.clip_by_value(c, 1e-10, 1)), c)\n\ninit_op = tf.initialize_all_variables()\n\nwith tf.Session() as sess:\n    sess.run(init_op)\n\n    print(sess.run([sqrt_grad, sqrt_x_grad, selsqrt_grad,\n                    clipsqrt_grad, clipargsqrt_grad]))\n    # [[inf], [nan], [nan], [nan], [0.0]]\n```\n"}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/4814", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/4814/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/4814/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/4814/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/4814", "id": 181616802, "node_id": "MDU6SXNzdWUxODE2MTY4MDI=", "number": 4814, "title": "[Feature Request] Make streaming metrics resettable", "user": {"login": "untom", "id": 3627551, "node_id": "MDQ6VXNlcjM2Mjc1NTE=", "avatar_url": "https://avatars2.githubusercontent.com/u/3627551?v=4", "gravatar_id": "", "url": "https://api.github.com/users/untom", "html_url": "https://github.com/untom", "followers_url": "https://api.github.com/users/untom/followers", "following_url": "https://api.github.com/users/untom/following{/other_user}", "gists_url": "https://api.github.com/users/untom/gists{/gist_id}", "starred_url": "https://api.github.com/users/untom/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/untom/subscriptions", "organizations_url": "https://api.github.com/users/untom/orgs", "repos_url": "https://api.github.com/users/untom/repos", "events_url": "https://api.github.com/users/untom/events{/privacy}", "received_events_url": "https://api.github.com/users/untom/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 299643928, "node_id": "MDU6TGFiZWwyOTk2NDM5Mjg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:contributions%20welcome", "name": "stat:contributions welcome", "color": "f4b400", "default": false, "description": ""}, {"id": 473173272, "node_id": "MDU6TGFiZWw0NzMxNzMyNzI=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:feature", "name": "type:feature", "color": "159b2e", "default": false, "description": ""}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 22, "created_at": "2016-10-07T08:57:48Z", "updated_at": "2020-02-17T18:35:30Z", "closed_at": null, "author_association": "NONE", "body": "Hi! \nCurrently, the streaming metrics are (as far as I know) not resettable. I'd like to be able to e.g. reset the counter after each epoch. This way, having e.g. a very bad accuracy in the beginning of training will not still influence the accuracy value ten epochs later. It makes it easier to compare my results to runs obtained outside tensorflow.\n\nThe only workaround I found is to do `sess.run(tf.initialize_local_variables())` after each epoch, but of course this can have bad side effects if I have other local variables that I don't want to reset.\n\nOr is there a way to achieve what I want that I didn't think of?\n"}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/4722", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/4722/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/4722/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/4722/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/4722", "id": 180548412, "node_id": "MDU6SXNzdWUxODA1NDg0MTI=", "number": 4722, "title": "einsum not fully implemented", "user": {"login": "xuancong84", "id": 10172392, "node_id": "MDQ6VXNlcjEwMTcyMzky", "avatar_url": "https://avatars0.githubusercontent.com/u/10172392?v=4", "gravatar_id": "", "url": "https://api.github.com/users/xuancong84", "html_url": "https://github.com/xuancong84", "followers_url": "https://api.github.com/users/xuancong84/followers", "following_url": "https://api.github.com/users/xuancong84/following{/other_user}", "gists_url": "https://api.github.com/users/xuancong84/gists{/gist_id}", "starred_url": "https://api.github.com/users/xuancong84/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/xuancong84/subscriptions", "organizations_url": "https://api.github.com/users/xuancong84/orgs", "repos_url": "https://api.github.com/users/xuancong84/repos", "events_url": "https://api.github.com/users/xuancong84/events{/privacy}", "received_events_url": "https://api.github.com/users/xuancong84/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 299643928, "node_id": "MDU6TGFiZWwyOTk2NDM5Mjg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:contributions%20welcome", "name": "stat:contributions welcome", "color": "f4b400", "default": false, "description": ""}, {"id": 473173272, "node_id": "MDU6TGFiZWw0NzMxNzMyNzI=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:feature", "name": "type:feature", "color": "159b2e", "default": false, "description": ""}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 10, "created_at": "2016-10-03T01:21:59Z", "updated_at": "2017-09-25T16:13:28Z", "closed_at": null, "author_association": "NONE", "body": "I am glad to see the newly added einsum function. The documentation claims that its usage is the same as numpy. However, it can do almost nothing as compared to numpy. For example, it only supports subscripts in the form of '_->_'. Unfortunately, even matrix transpose does not work, i.e., 'ij->ji'. \nNumpy works:\n\n```\n>>> A\narray([[ 0.3828997 , -0.39114848, -0.09727838, -0.20430113],\n       [ 0.48020577, -0.47122706,  0.42830791,  0.25665744],\n       [-0.30885863,  0.21669025,  0.31648793,  0.22417514],\n       [ 0.32505724,  0.30478035,  0.48655034,  0.20040547]])\n>>> einsum('ij->ji',A)\narray([[ 0.3828997 ,  0.48020577, -0.30885863,  0.32505724],\n       [-0.39114848, -0.47122706,  0.21669025,  0.30478035],\n       [-0.09727838,  0.42830791,  0.31648793,  0.48655034],\n       [-0.20430113,  0.25665744,  0.22417514,  0.20040547]])\n```\n\nTensorflow does not work:\n\n```\npseudo-code:\nM_ = tf.Variable(tf.random_normal([4,4]))\nN_ = tf.einsum('ij->ji',M_)              \nprint [M_, N_]\n\noutput:\n[array([[ 0.80474716, -1.38590837, -0.3379252 , -1.24965811],\n       [ 2.57852983,  0.05492432,  0.23039417, -0.74263287],\n       [-2.42627382,  1.70774114,  1.19503212,  0.43006262],\n       [-1.04652011, -0.32753903, -1.26430523,  0.8810069 ]], dtype=float32), \narray([[ 0.80474716, -1.38590837, -0.3379252 , -1.24965811],\n       [ 2.57852983,  0.05492432,  0.23039417, -0.74263287],\n       [-2.42627382,  1.70774114,  1.19503212,  0.43006262],\n       [-1.04652011, -0.32753903, -1.26430523,  0.8810069 ]], dtype=float32)]\n```\n\nI want to multiply a matrix with every frame vector in every batch. Or similar operations which can be done by a simple tensor product. It seems that I still have to duplicate the matrix so many times and perform a batch_matmul, which is very inconvenient and slow and memory consuming.\n\nI suggest tensorflow to implement either the tensordot or einsum function which can perform tensor product.\n\nIt is quite a shame that tensorflow cannot even perform basic tensor product so far :(\n"}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/4639", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/4639/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/4639/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/4639/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/4639", "id": 179892964, "node_id": "MDU6SXNzdWUxNzk4OTI5NjQ=", "number": 4639, "title": "Implement NumPy style boolean indexing", "user": {"login": "aselle", "id": 326106, "node_id": "MDQ6VXNlcjMyNjEwNg==", "avatar_url": "https://avatars1.githubusercontent.com/u/326106?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aselle", "html_url": "https://github.com/aselle", "followers_url": "https://api.github.com/users/aselle/followers", "following_url": "https://api.github.com/users/aselle/following{/other_user}", "gists_url": "https://api.github.com/users/aselle/gists{/gist_id}", "starred_url": "https://api.github.com/users/aselle/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aselle/subscriptions", "organizations_url": "https://api.github.com/users/aselle/orgs", "repos_url": "https://api.github.com/users/aselle/repos", "events_url": "https://api.github.com/users/aselle/events{/privacy}", "received_events_url": "https://api.github.com/users/aselle/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 299643928, "node_id": "MDU6TGFiZWwyOTk2NDM5Mjg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:contributions%20welcome", "name": "stat:contributions welcome", "color": "f4b400", "default": false, "description": ""}, {"id": 473173272, "node_id": "MDU6TGFiZWw0NzMxNzMyNzI=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:feature", "name": "type:feature", "color": "159b2e", "default": false, "description": ""}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2016-09-28T21:18:29Z", "updated_at": "2018-10-24T00:44:09Z", "closed_at": null, "author_association": "MEMBER", "body": "See NumPy's documentation\nhttp://docs.scipy.org/doc/numpy/reference/arrays.indexing.html#boolean-array-indexing\n\nWe currently support basic indexing http://docs.scipy.org/doc/numpy/reference/arrays.indexing.html#basic-slicing-and-indexing.\n\nBroken off of #206.\n"}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/4638", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/4638/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/4638/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/4638/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/4638", "id": 179892542, "node_id": "MDU6SXNzdWUxNzk4OTI1NDI=", "number": 4638, "title": "Implement advanced indexing (and mixed basic/advanced)", "user": {"login": "aselle", "id": 326106, "node_id": "MDQ6VXNlcjMyNjEwNg==", "avatar_url": "https://avatars1.githubusercontent.com/u/326106?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aselle", "html_url": "https://github.com/aselle", "followers_url": "https://api.github.com/users/aselle/followers", "following_url": "https://api.github.com/users/aselle/following{/other_user}", "gists_url": "https://api.github.com/users/aselle/gists{/gist_id}", "starred_url": "https://api.github.com/users/aselle/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aselle/subscriptions", "organizations_url": "https://api.github.com/users/aselle/orgs", "repos_url": "https://api.github.com/users/aselle/repos", "events_url": "https://api.github.com/users/aselle/events{/privacy}", "received_events_url": "https://api.github.com/users/aselle/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 299643928, "node_id": "MDU6TGFiZWwyOTk2NDM5Mjg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:contributions%20welcome", "name": "stat:contributions welcome", "color": "f4b400", "default": false, "description": ""}, {"id": 473173272, "node_id": "MDU6TGFiZWw0NzMxNzMyNzI=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:feature", "name": "type:feature", "color": "159b2e", "default": false, "description": ""}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 45, "created_at": "2016-09-28T21:16:49Z", "updated_at": "2019-06-13T00:16:25Z", "closed_at": null, "author_association": "MEMBER", "body": "NumPy style advanced indexing is documented here http://docs.scipy.org/doc/numpy/reference/arrays.indexing.html#advanced-indexing\n\nWe currently support basic indexing http://docs.scipy.org/doc/numpy/reference/arrays.indexing.html#basic-slicing-and-indexing\nusing StridedSlice.\n\ne.g.\n\nfoo = Some tensor\nidx1=[1,2,3]\nidx2=[3,4,5]\nfoo[idx1, idx2, 3]\n"}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/4337", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/4337/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/4337/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/4337/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/4337", "id": 176446409, "node_id": "MDU6SXNzdWUxNzY0NDY0MDk=", "number": 4337, "title": "Multi-CPU kernel for sparse_tensor_dense_matmul", "user": {"login": "rueberger", "id": 8816362, "node_id": "MDQ6VXNlcjg4MTYzNjI=", "avatar_url": "https://avatars2.githubusercontent.com/u/8816362?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rueberger", "html_url": "https://github.com/rueberger", "followers_url": "https://api.github.com/users/rueberger/followers", "following_url": "https://api.github.com/users/rueberger/following{/other_user}", "gists_url": "https://api.github.com/users/rueberger/gists{/gist_id}", "starred_url": "https://api.github.com/users/rueberger/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rueberger/subscriptions", "organizations_url": "https://api.github.com/users/rueberger/orgs", "repos_url": "https://api.github.com/users/rueberger/repos", "events_url": "https://api.github.com/users/rueberger/events{/privacy}", "received_events_url": "https://api.github.com/users/rueberger/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 299643928, "node_id": "MDU6TGFiZWwyOTk2NDM5Mjg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:contributions%20welcome", "name": "stat:contributions welcome", "color": "f4b400", "default": false, "description": ""}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 12, "created_at": "2016-09-12T18:19:24Z", "updated_at": "2018-03-10T16:37:47Z", "closed_at": null, "author_association": "NONE", "body": "Are there plans to implement a multi-cpu kernel for tf.sparse_tensor_dense_matmul? The current version seems to be single core only and is not performing well. \n\nI am working with a very large sparse tensor - about 8GB sparse and 200GB dense that I cannot work with as a dense tensor for memory reasons. Any suggestions for achieving fast matrix multiplication? \n"}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/4193", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/4193/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/4193/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/4193/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/4193", "id": 174950040, "node_id": "MDU6SXNzdWUxNzQ5NTAwNDA=", "number": 4193, "title": "CTC loss is numerically unstable for long sequence lengths", "user": {"login": "andykitchen", "id": 29637, "node_id": "MDQ6VXNlcjI5NjM3", "avatar_url": "https://avatars3.githubusercontent.com/u/29637?v=4", "gravatar_id": "", "url": "https://api.github.com/users/andykitchen", "html_url": "https://github.com/andykitchen", "followers_url": "https://api.github.com/users/andykitchen/followers", "following_url": "https://api.github.com/users/andykitchen/following{/other_user}", "gists_url": "https://api.github.com/users/andykitchen/gists{/gist_id}", "starred_url": "https://api.github.com/users/andykitchen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/andykitchen/subscriptions", "organizations_url": "https://api.github.com/users/andykitchen/orgs", "repos_url": "https://api.github.com/users/andykitchen/repos", "events_url": "https://api.github.com/users/andykitchen/events{/privacy}", "received_events_url": "https://api.github.com/users/andykitchen/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 299643928, "node_id": "MDU6TGFiZWwyOTk2NDM5Mjg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:contributions%20welcome", "name": "stat:contributions welcome", "color": "f4b400", "default": false, "description": ""}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 16, "created_at": "2016-09-04T13:54:11Z", "updated_at": "2019-07-30T13:16:14Z", "closed_at": null, "author_association": "CONTRIBUTOR", "body": "Hi All, great work TF team, thanks for implementing CTC loss ops recently!\n\nI've noticed that CTC loss becomes quite numerically unstable for long sequences, in the attached code that reproduces the plot from the CTC paper, sequences longer than 10,000 or so degrade the quality of the gradients quite severely.\n\nI'm not sure what the best fix is, trying to improve the numerical stability of CTC loss calculation could help, but I have no idea how difficult this would be.\n\nIn the interim, I suppose it might be worth issuing a warning when the op is used with long sequences, or placing internal consistency checks that warn the user when CTC loss may be producing bogus outputs. Or even just improving the documentation for CTC loss so that users know that this is a pitfall.\n\nThis is also sort of a public service announcement so nobody gets burned on long sequences.\n\nAgain, great work, thanks for all your effort.\n\n:)\n### Environment info\n\nPip Package Version: 0.10.0rc0\n### Minimal Example\n\n``` python\nimport numpy as np\nimport tensorflow as tf\n\n%matplotlib inline\nimport matplotlib.pyplot as plt\n\n# n = 100\nn = 20000\nk = 4\n\nwith tf.Session() as sess:\n    inputs = tf.zeros((n, 1, k+1), dtype=tf.float32)\n    labels_indices = tf.constant([[0, 0], [0, 1], [0, 2], [0, 3], [0, 4]], dtype=tf.int64)\n    labels_values  = tf.constant([0, 1, 2, 3, 4], dtype=tf.int32)\n    labels = tf.SparseTensor(indices=labels_indices, values=labels_values, shape=(1, k+1))\n    sequence_length = np.array([n])\n\n    loss = tf.nn.ctc_loss(inputs, labels, sequence_length)\n    g, = tf.gradients(loss, inputs)\n\n    g_v = sess.run(g)\n\nplt.plot(-g_v[:,0,:])\n```\n"}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/3638", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/3638/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/3638/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/3638/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/3638", "id": 169321954, "node_id": "MDU6SXNzdWUxNjkzMjE5NTQ=", "number": 3638, "title": "tf.gather produces zeros for invalid indices on GPU", "user": {"login": "hholst80", "id": 6200749, "node_id": "MDQ6VXNlcjYyMDA3NDk=", "avatar_url": "https://avatars0.githubusercontent.com/u/6200749?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hholst80", "html_url": "https://github.com/hholst80", "followers_url": "https://api.github.com/users/hholst80/followers", "following_url": "https://api.github.com/users/hholst80/following{/other_user}", "gists_url": "https://api.github.com/users/hholst80/gists{/gist_id}", "starred_url": "https://api.github.com/users/hholst80/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hholst80/subscriptions", "organizations_url": "https://api.github.com/users/hholst80/orgs", "repos_url": "https://api.github.com/users/hholst80/repos", "events_url": "https://api.github.com/users/hholst80/events{/privacy}", "received_events_url": "https://api.github.com/users/hholst80/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 299643928, "node_id": "MDU6TGFiZWwyOTk2NDM5Mjg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:contributions%20welcome", "name": "stat:contributions welcome", "color": "f4b400", "default": false, "description": ""}, {"id": 473172988, "node_id": "MDU6TGFiZWw0NzMxNzI5ODg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:bug", "name": "type:bug", "color": "159b2e", "default": false, "description": ""}, {"id": 284443156, "node_id": "MDU6TGFiZWwyODQ0NDMxNTY=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:docs", "name": "type:docs", "color": "159b2e", "default": false, "description": ""}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 30, "created_at": "2016-08-04T08:44:14Z", "updated_at": "2018-02-21T18:28:48Z", "closed_at": null, "author_association": "CONTRIBUTOR", "body": "### Environment info\n\nOperating System: Ubuntu 16.04 LTS (64 bit)\n\n```\n$ dpkg -l | grep cuda | grep ^ii\nii  libcuda1-361                                361.42-0ubuntu2                                             amd64        NVIDIA CUDA runtime library\nii  libcudart7.5:amd64                          7.5.18-0ubuntu1                                             amd64        NVIDIA CUDA Runtime Library\nii  libcudnn5                                   5.0.5-1+cuda7.5                                             amd64        cuDNN runtime libraries\nii  libcudnn5-dev                               5.0.5-1+cuda7.5                                             amd64        cuDNN development libraries and headers\nii  libcudnn5-doc                               5.0.5-1+cuda7.5                                             amd64        cuDNN documents and samples\nii  nvidia-cuda-dev                             7.5.18-0ubuntu1                                             amd64        NVIDIA CUDA development files\nii  nvidia-cuda-doc                             7.5.18-0ubuntu1                                             all          NVIDIA CUDA and OpenCL documentation\nii  nvidia-cuda-gdb                             7.5.18-0ubuntu1                                             amd64        NVIDIA CUDA Debugger (GDB)\nii  nvidia-cuda-toolkit                         7.5.18-0ubuntu1                                             amd64        NVIDIA CUDA development toolkit\n```\n\n```\n$ find /usr/lib -name libcud\\*\n/usr/lib/i386-linux-gnu/libcuda.so.1\n/usr/lib/i386-linux-gnu/libcuda.so.361.42\n/usr/lib/i386-linux-gnu/libcuda.so\n/usr/lib/x86_64-linux-gnu/libcudnn_static.a\n/usr/lib/x86_64-linux-gnu/libcudnn_static_v5.a\n/usr/lib/x86_64-linux-gnu/libcuda.so.1\n/usr/lib/x86_64-linux-gnu/libcudart.so.7.5.18\n/usr/lib/x86_64-linux-gnu/libcudnn.so\n/usr/lib/x86_64-linux-gnu/libcuda.so.361.42\n/usr/lib/x86_64-linux-gnu/libcudnn.so.5.0.5\n/usr/lib/x86_64-linux-gnu/libcudart.so\n/usr/lib/x86_64-linux-gnu/libcudart.so.7.5\n/usr/lib/x86_64-linux-gnu/libcudadevrt.a\n/usr/lib/x86_64-linux-gnu/libcudnn.so.5\n/usr/lib/x86_64-linux-gnu/stubs/libcuda.so\n/usr/lib/x86_64-linux-gnu/libcuda.so\n/usr/lib/x86_64-linux-gnu/libcudart_static.a\n```\n\n```\n$ python -c \"import tensorflow; print(tensorflow.__version__)\"\nI tensorflow/stream_executor/dso_loader.cc:108] successfully opened CUDA library libcublas.so locally\nI tensorflow/stream_executor/dso_loader.cc:108] successfully opened CUDA library libcudnn.so locally\nI tensorflow/stream_executor/dso_loader.cc:108] successfully opened CUDA library libcufft.so locally\nI tensorflow/stream_executor/dso_loader.cc:108] successfully opened CUDA library libcuda.so.1 locally\nI tensorflow/stream_executor/dso_loader.cc:108] successfully opened CUDA library libcurand.so locally\n0.10.0rc0\n```\n### Steps to reproduce\n\n```\nIn [23]: x = tf.constant([1.1,2.2,3.3])\n\nIn [24]: a = tf.constant(123,dtype=tf.int32)\n\nIn [25]: tf.gather(x,a,validate_indices=True).eval()\nGather_8: /job:localhost/replica:0/task:0/gpu:0\nI tensorflow/core/common_runtime/simple_placer.cc:818] Gather_8: /job:localhost/replica:0/task:0/gpu:0\nConst_8: /job:localhost/replica:0/task:0/gpu:0\nI tensorflow/core/common_runtime/simple_placer.cc:818] Const_8: /job:localhost/replica:0/task:0/gpu:0\nConst_7: /job:localhost/replica:0/task:0/gpu:0\nI tensorflow/core/common_runtime/simple_placer.cc:818] Const_7: /job:localhost/replica:0/task:0/gpu:0\nOut[25]: 0.0\n\nIn [26]: \n```\n"}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/3001", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/3001/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/3001/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/3001/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/3001", "id": 161807205, "node_id": "MDU6SXNzdWUxNjE4MDcyMDU=", "number": 3001, "title": "Use Basic neural network subroutines (BNNS) on iOS", "user": {"login": "cancan101", "id": 51059, "node_id": "MDQ6VXNlcjUxMDU5", "avatar_url": "https://avatars1.githubusercontent.com/u/51059?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cancan101", "html_url": "https://github.com/cancan101", "followers_url": "https://api.github.com/users/cancan101/followers", "following_url": "https://api.github.com/users/cancan101/following{/other_user}", "gists_url": "https://api.github.com/users/cancan101/gists{/gist_id}", "starred_url": "https://api.github.com/users/cancan101/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cancan101/subscriptions", "organizations_url": "https://api.github.com/users/cancan101/orgs", "repos_url": "https://api.github.com/users/cancan101/repos", "events_url": "https://api.github.com/users/cancan101/events{/privacy}", "received_events_url": "https://api.github.com/users/cancan101/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 299643928, "node_id": "MDU6TGFiZWwyOTk2NDM5Mjg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:contributions%20welcome", "name": "stat:contributions welcome", "color": "f4b400", "default": false, "description": ""}, {"id": 473173272, "node_id": "MDU6TGFiZWw0NzMxNzMyNzI=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:feature", "name": "type:feature", "color": "159b2e", "default": false, "description": ""}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 10, "created_at": "2016-06-22T23:09:53Z", "updated_at": "2018-01-29T22:29:21Z", "closed_at": null, "author_association": "CONTRIBUTOR", "body": "Take advantage of the [BNNS library that Apple announced for iOS](https://developer.apple.com/reference/accelerate/1912851-bnns).\n"}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/2625", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/2625/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/2625/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/2625/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/2625", "id": 158211176, "node_id": "MDU6SXNzdWUxNTgyMTExNzY=", "number": 2625, "title": "Numerically stable summation methods", "user": {"login": "ibab", "id": 890531, "node_id": "MDQ6VXNlcjg5MDUzMQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/890531?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ibab", "html_url": "https://github.com/ibab", "followers_url": "https://api.github.com/users/ibab/followers", "following_url": "https://api.github.com/users/ibab/following{/other_user}", "gists_url": "https://api.github.com/users/ibab/gists{/gist_id}", "starred_url": "https://api.github.com/users/ibab/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ibab/subscriptions", "organizations_url": "https://api.github.com/users/ibab/orgs", "repos_url": "https://api.github.com/users/ibab/repos", "events_url": "https://api.github.com/users/ibab/events{/privacy}", "received_events_url": "https://api.github.com/users/ibab/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 299643928, "node_id": "MDU6TGFiZWwyOTk2NDM5Mjg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:contributions%20welcome", "name": "stat:contributions welcome", "color": "f4b400", "default": false, "description": ""}, {"id": 473173272, "node_id": "MDU6TGFiZWw0NzMxNzMyNzI=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:feature", "name": "type:feature", "color": "159b2e", "default": false, "description": ""}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 15, "created_at": "2016-06-02T18:42:58Z", "updated_at": "2019-03-01T12:47:10Z", "closed_at": null, "author_association": "CONTRIBUTOR", "body": "It would be nice to be able to use numerically stable summation methods like\n- pairwise summation\n- Kahan summation\n\nfor applications where numerical accuracy is important.\nThis could work with an optional `stable` keyword argument to `tf.reduce_sum` or via a `tf.stable_reduce_sum` op.\n\nI think implementing Kahan summation in the Eigen tensor library wouldn't be difficult at all, we would simply have to add a stateful `KahanSumReducer`.\nIt should also be possible to provide a vectorized version.\nPairwise summation might be more difficult, as the reduction code would have to be touched.\n"}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/2118", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/2118/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/2118/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/2118/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/2118", "id": 151235937, "node_id": "MDU6SXNzdWUxNTEyMzU5Mzc=", "number": 2118, "title": "Default for tf.nn.conv2d_transpose output_shape", "user": {"login": "ziky90", "id": 1810839, "node_id": "MDQ6VXNlcjE4MTA4Mzk=", "avatar_url": "https://avatars0.githubusercontent.com/u/1810839?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ziky90", "html_url": "https://github.com/ziky90", "followers_url": "https://api.github.com/users/ziky90/followers", "following_url": "https://api.github.com/users/ziky90/following{/other_user}", "gists_url": "https://api.github.com/users/ziky90/gists{/gist_id}", "starred_url": "https://api.github.com/users/ziky90/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ziky90/subscriptions", "organizations_url": "https://api.github.com/users/ziky90/orgs", "repos_url": "https://api.github.com/users/ziky90/repos", "events_url": "https://api.github.com/users/ziky90/events{/privacy}", "received_events_url": "https://api.github.com/users/ziky90/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 299643928, "node_id": "MDU6TGFiZWwyOTk2NDM5Mjg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:contributions%20welcome", "name": "stat:contributions welcome", "color": "f4b400", "default": false, "description": ""}, {"id": 473173272, "node_id": "MDU6TGFiZWw0NzMxNzMyNzI=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:feature", "name": "type:feature", "color": "159b2e", "default": false, "description": ""}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 25, "created_at": "2016-04-26T20:50:52Z", "updated_at": "2018-12-27T10:48:38Z", "closed_at": null, "author_association": "CONTRIBUTOR", "body": "I am currently working with `tf.nn.conv2d_transpose`. From the past I am used to Caffe deconvolution layer and `tf.nn.conv2d_transpose` is kind of TensorFlow equivalent to it.\n\nMy question here is if someone could point me to detailed behaviour/documenatation of `tf.nn.conv2d_transpose`.\nParticularly I am confused by `output_shape` parameter. My question is, why there is needed the `output_shape` parameter. Isn't the output shape directly come from the conv2d_transpose operation?\nBased on how I understand it from Caffe and from [here](http://cs231n.stanford.edu/slides/winter1516_lecture13.pdf), computed as:\n\n```\nh = ((len(value[1]) - 1) * stride_h) + kernel_h - 2 * pad_h\nw = ((len(value[2]) - 1) * stride_w) + kernel_w - 2 * pad_w\n```\n\nWhat happens when I set `output_shape` smaller than `h` and `w`? Is the new layer being cropped?\n\nWhat happens when I set it higher? Is there being created padding with only zeros?\n"}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/1539", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/1539/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/1539/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/1539/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/1539", "id": 141753240, "node_id": "MDU6SXNzdWUxNDE3NTMyNDA=", "number": 1539, "title": "[clang+CUDA] No ZeroesLike[DT_BOOL] kernel", "user": {"login": "jlebar", "id": 150663, "node_id": "MDQ6VXNlcjE1MDY2Mw==", "avatar_url": "https://avatars1.githubusercontent.com/u/150663?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jlebar", "html_url": "https://github.com/jlebar", "followers_url": "https://api.github.com/users/jlebar/followers", "following_url": "https://api.github.com/users/jlebar/following{/other_user}", "gists_url": "https://api.github.com/users/jlebar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jlebar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jlebar/subscriptions", "organizations_url": "https://api.github.com/users/jlebar/orgs", "repos_url": "https://api.github.com/users/jlebar/repos", "events_url": "https://api.github.com/users/jlebar/events{/privacy}", "received_events_url": "https://api.github.com/users/jlebar/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 299643928, "node_id": "MDU6TGFiZWwyOTk2NDM5Mjg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:contributions%20welcome", "name": "stat:contributions welcome", "color": "f4b400", "default": false, "description": ""}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 23, "created_at": "2016-03-18T02:01:26Z", "updated_at": "2018-02-08T01:35:22Z", "closed_at": null, "author_association": "CONTRIBUTOR", "body": "I'm working on getting tensorflow to build its GPU code with clang.\n\nI have a hacked up crosstool, a hacked up clang (for std::complex support), and some minor changes to eigen (which are awaiting review).  The branch is at jlebar/tensorflow@cuda-clang, but checking that out isn't sufficient, because you need to customize some paths to make crosstool happy.  Anyway you don't have my WIP compiler changes, so you won't get very far.  :)\n\nHaving said all that, I'm trying to get the tensorflow tests to pass, while I wait for tra@ to hopefully figure out the crosstool business.  I'm looking at this one\n\n```\n$ bazel test -c opt --config=cuda_clang //tensorflow/core:ops_array_grad_test \n```\n\n, which fails with\n\n```\nE tensorflow/core/common_runtime/executor.cc:332] Executor failed to create kernel. Not found: No registered 'ZerosLike' OpKernel for GPU devices compatible with node n4 = ZerosLike[T=DT_BOOL](n1)\n     [[Node: n4 = ZerosLike[T=DT_BOOL](n1)]]\nF tensorflow/core/ops/array_grad_test.cc:365] Check failed: ::tensorflow::Status::OK() == (sess->Run({{\"x:0\", x}, {\"dims:0\", dims}, {\"dy:0\", dy}}, {\"dx:0\", \"dx:1\"}, {}, &out)) (OK vs. Not found: No registered 'ZerosLike' OpKernel for GPU devices compatible with node n4 = ZerosLike[T=DT_BOOL](n1)\n     [[Node: n4 = ZerosLike[T=DT_BOOL](n1)]]\n     [[Node: dx = SymbolicGradient[Tin=[DT_FLOAT, DT_BOOL, DT_FLOAT], Tout=[DT_FLOAT, DT_BOOL], f=Reverse[T=DT_FLOAT], _device=\"/job:localhost/replica:0/task:0/gpu:0\"](_recv_x_0/_2, _recv_dims_0/_4, _recv_dy_0/_6)]]\n     [[Node: dx/_8 = _Recv[client_terminated=false, recv_device=\"/job:localhost/replica:0/task:0/cpu:0\", send_device=\"/job:localhost/replica:0/task:0/gpu:0\", send_device_incarnation=1, tensor_name=\"edge_14_dx\", tensor_type=DT_FLOAT, _device=\"/job:localhost/replica:0/task:0/cpu:0\"]()]])\nexternal/bazel_tools/tools/test/test-setup.sh: line 52: 106730 Aborted                 (core dumped) \"$@\"\n```\n\nLooking through the code, it seems that there's no zeroing kernel for bools, so I'm not sure how this is supposed to work?  The obvious change to add a kernel, jlebar/tensorflow@286c1647cca9ebcdbce4497995c794d4b0c55633, doesn't work -- we seem to invoke the new kernel, but the whole program just silently dies.\n\nI'm pretty confused by what's going on here, what with the To32Bit functor being applied to an array of doubles (?) and so on.  Any pointers would be very much appreciated.\n"}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/956", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/956/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/956/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/956/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/956", "id": 130556593, "node_id": "MDU6SXNzdWUxMzA1NTY1OTM=", "number": 956, "title": "Feature request: other types of padding besides zero-padding.", "user": {"login": "cesarsalgado", "id": 1115209, "node_id": "MDQ6VXNlcjExMTUyMDk=", "avatar_url": "https://avatars2.githubusercontent.com/u/1115209?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cesarsalgado", "html_url": "https://github.com/cesarsalgado", "followers_url": "https://api.github.com/users/cesarsalgado/followers", "following_url": "https://api.github.com/users/cesarsalgado/following{/other_user}", "gists_url": "https://api.github.com/users/cesarsalgado/gists{/gist_id}", "starred_url": "https://api.github.com/users/cesarsalgado/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cesarsalgado/subscriptions", "organizations_url": "https://api.github.com/users/cesarsalgado/orgs", "repos_url": "https://api.github.com/users/cesarsalgado/repos", "events_url": "https://api.github.com/users/cesarsalgado/events{/privacy}", "received_events_url": "https://api.github.com/users/cesarsalgado/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 299643928, "node_id": "MDU6TGFiZWwyOTk2NDM5Mjg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:contributions%20welcome", "name": "stat:contributions welcome", "color": "f4b400", "default": false, "description": ""}, {"id": 473173272, "node_id": "MDU6TGFiZWw0NzMxNzMyNzI=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:feature", "name": "type:feature", "color": "159b2e", "default": false, "description": ""}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 19, "created_at": "2016-02-02T03:01:18Z", "updated_at": "2019-10-02T08:11:10Z", "closed_at": null, "author_association": "CONTRIBUTOR", "body": "I would like to have other options of padding for tf.pad and convolution ops.\n\nSome types that come to my mind right now:\n- reflect\n- constant value (other than zero)\n- maybe implement other options of numpy.pad: http://docs.scipy.org/doc/numpy-1.10.0/reference/generated/numpy.pad.html\n"}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/823", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/823/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/823/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/823/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/823", "id": 127788824, "node_id": "MDU6SXNzdWUxMjc3ODg4MjQ=", "number": 823, "title": "Give a convenient way to retrieve shadow variables created by ExponentialMovingAverage.", "user": {"login": "panmari", "id": 719020, "node_id": "MDQ6VXNlcjcxOTAyMA==", "avatar_url": "https://avatars1.githubusercontent.com/u/719020?v=4", "gravatar_id": "", "url": "https://api.github.com/users/panmari", "html_url": "https://github.com/panmari", "followers_url": "https://api.github.com/users/panmari/followers", "following_url": "https://api.github.com/users/panmari/following{/other_user}", "gists_url": "https://api.github.com/users/panmari/gists{/gist_id}", "starred_url": "https://api.github.com/users/panmari/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/panmari/subscriptions", "organizations_url": "https://api.github.com/users/panmari/orgs", "repos_url": "https://api.github.com/users/panmari/repos", "events_url": "https://api.github.com/users/panmari/events{/privacy}", "received_events_url": "https://api.github.com/users/panmari/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 299643928, "node_id": "MDU6TGFiZWwyOTk2NDM5Mjg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:contributions%20welcome", "name": "stat:contributions welcome", "color": "f4b400", "default": false, "description": ""}, {"id": 473173272, "node_id": "MDU6TGFiZWw0NzMxNzMyNzI=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:feature", "name": "type:feature", "color": "159b2e", "default": false, "description": ""}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 11, "created_at": "2016-01-20T21:34:04Z", "updated_at": "2017-12-22T07:41:52Z", "closed_at": null, "author_association": "CONTRIBUTOR", "body": "At first I was under the impression, the variables returned by `tf.moving_average_variables()` would be shadow variables created, but that does not seem to be the case (they didn't save/restore correctly for me). \n\nNow that I'm reading the code, that seems to be the intention, though? Shouldn't [this line](https://github.com/tensorflow/tensorflow/blame/f2bd0fc399606d14b55f3f7d732d013f32b33dd5/tensorflow/python/training/moving_averages.py#L227) read \n\n```\nops.add_to_collection(ops.GraphKeys.MOVING_AVERAGE_VARIABLES, avg)\n```\n\n? \n\nIf not, it would be great to save the averages under some other key and make them easily retrievable for the saver in a similar way as `tf.moving_average_variables()`, maybe as  `tf.moving_average_shadow_variables()`.\n"}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/360", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/360/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/360/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/360/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/360", "id": 119009957, "node_id": "MDU6SXNzdWUxMTkwMDk5NTc=", "number": 360, "title": "Warn when calling session.run() on a very large scatter", "user": {"login": "bdaskalov", "id": 2833552, "node_id": "MDQ6VXNlcjI4MzM1NTI=", "avatar_url": "https://avatars0.githubusercontent.com/u/2833552?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bdaskalov", "html_url": "https://github.com/bdaskalov", "followers_url": "https://api.github.com/users/bdaskalov/followers", "following_url": "https://api.github.com/users/bdaskalov/following{/other_user}", "gists_url": "https://api.github.com/users/bdaskalov/gists{/gist_id}", "starred_url": "https://api.github.com/users/bdaskalov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bdaskalov/subscriptions", "organizations_url": "https://api.github.com/users/bdaskalov/orgs", "repos_url": "https://api.github.com/users/bdaskalov/repos", "events_url": "https://api.github.com/users/bdaskalov/events{/privacy}", "received_events_url": "https://api.github.com/users/bdaskalov/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 299643928, "node_id": "MDU6TGFiZWwyOTk2NDM5Mjg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:contributions%20welcome", "name": "stat:contributions welcome", "color": "f4b400", "default": false, "description": ""}, {"id": 473173272, "node_id": "MDU6TGFiZWw0NzMxNzMyNzI=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:feature", "name": "type:feature", "color": "159b2e", "default": false, "description": ""}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2015-11-26T10:02:45Z", "updated_at": "2018-02-08T22:28:14Z", "closed_at": null, "author_association": "CONTRIBUTOR", "body": "Scatter ops output a ref to the whole tensor for easier chaining. The problem is if one executes the op directly in Session.run() the whole tensor is copied back as a numpy array. This can create very annoying and hard to find performance problems. I think you should consider adding a warning.\n\nFor example:\nlarge_table = tf.Variable(... [1000000, 3])\nset3_op = tf.scatter_update(large_table, 3, [1,2,3])\n\nsession.run([set3_op])\n\nHere run() modifies just 3 elements of the table but returns the whole table as a numpy array that is then \nignored.\n"}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/252", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/252/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/252/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/252/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/252", "id": 117304361, "node_id": "MDU6SXNzdWUxMTczMDQzNjE=", "number": 252, "title": "Make TensorFlow compatible with PyPy", "user": {"login": "FabHan", "id": 12666582, "node_id": "MDQ6VXNlcjEyNjY2NTgy", "avatar_url": "https://avatars2.githubusercontent.com/u/12666582?v=4", "gravatar_id": "", "url": "https://api.github.com/users/FabHan", "html_url": "https://github.com/FabHan", "followers_url": "https://api.github.com/users/FabHan/followers", "following_url": "https://api.github.com/users/FabHan/following{/other_user}", "gists_url": "https://api.github.com/users/FabHan/gists{/gist_id}", "starred_url": "https://api.github.com/users/FabHan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/FabHan/subscriptions", "organizations_url": "https://api.github.com/users/FabHan/orgs", "repos_url": "https://api.github.com/users/FabHan/repos", "events_url": "https://api.github.com/users/FabHan/events{/privacy}", "received_events_url": "https://api.github.com/users/FabHan/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 299643928, "node_id": "MDU6TGFiZWwyOTk2NDM5Mjg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:contributions%20welcome", "name": "stat:contributions welcome", "color": "f4b400", "default": false, "description": ""}, {"id": 473173272, "node_id": "MDU6TGFiZWw0NzMxNzMyNzI=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:feature", "name": "type:feature", "color": "159b2e", "default": false, "description": ""}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 20, "created_at": "2015-11-17T08:07:22Z", "updated_at": "2019-11-24T21:23:12Z", "closed_at": null, "author_association": "NONE", "body": "I know it's not a priority and will be a long way to get there; but making TF compatible with PyPy woud be super cool.\n\nThoughts?\n"}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/22", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/22/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/22/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/22/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/22", "id": 115928097, "node_id": "MDU6SXNzdWUxMTU5MjgwOTc=", "number": 22, "title": "OpenCL support", "user": {"login": "outlace", "id": 3196399, "node_id": "MDQ6VXNlcjMxOTYzOTk=", "avatar_url": "https://avatars0.githubusercontent.com/u/3196399?v=4", "gravatar_id": "", "url": "https://api.github.com/users/outlace", "html_url": "https://github.com/outlace", "followers_url": "https://api.github.com/users/outlace/followers", "following_url": "https://api.github.com/users/outlace/following{/other_user}", "gists_url": "https://api.github.com/users/outlace/gists{/gist_id}", "starred_url": "https://api.github.com/users/outlace/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/outlace/subscriptions", "organizations_url": "https://api.github.com/users/outlace/orgs", "repos_url": "https://api.github.com/users/outlace/repos", "events_url": "https://api.github.com/users/outlace/events{/privacy}", "received_events_url": "https://api.github.com/users/outlace/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 299643928, "node_id": "MDU6TGFiZWwyOTk2NDM5Mjg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:contributions%20welcome", "name": "stat:contributions welcome", "color": "f4b400", "default": false, "description": ""}], "state": "open", "locked": true, "assignee": null, "assignees": [], "milestone": null, "comments": 541, "created_at": "2015-11-09T17:41:26Z", "updated_at": "2019-03-19T17:24:45Z", "closed_at": null, "author_association": "NONE", "body": "I understand TensorFlow only supports CUDA. What would need to be done to add in OpenCL support?\n"}]