[{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20342", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20342/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20342/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20342/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/20342", "id": 336195230, "node_id": "MDU6SXNzdWUzMzYxOTUyMzA=", "number": 20342, "title": "distributed training with SyncReplicasOptimizer got stuck after a number of iterations", "user": {"login": "codescv", "id": 124190, "node_id": "MDQ6VXNlcjEyNDE5MA==", "avatar_url": "https://avatars1.githubusercontent.com/u/124190?v=4", "gravatar_id": "", "url": "https://api.github.com/users/codescv", "html_url": "https://github.com/codescv", "followers_url": "https://api.github.com/users/codescv/followers", "following_url": "https://api.github.com/users/codescv/following{/other_user}", "gists_url": "https://api.github.com/users/codescv/gists{/gist_id}", "starred_url": "https://api.github.com/users/codescv/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/codescv/subscriptions", "organizations_url": "https://api.github.com/users/codescv/orgs", "repos_url": "https://api.github.com/users/codescv/repos", "events_url": "https://api.github.com/users/codescv/events{/privacy}", "received_events_url": "https://api.github.com/users/codescv/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1097547147, "node_id": "MDU6TGFiZWwxMDk3NTQ3MTQ3", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/comp:ops", "name": "comp:ops", "color": "0052cc", "default": false, "description": ""}, {"id": 473172988, "node_id": "MDU6TGFiZWw0NzMxNzI5ODg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:bug", "name": "type:bug", "color": "159b2e", "default": false, "description": ""}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-06-27T11:48:30Z", "updated_at": "2019-06-24T22:31:21Z", "closed_at": null, "author_association": "NONE", "body": "### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**: Yes\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**: Linux Ubuntu 16.04\r\n- **TensorFlow installed from (source or binary)**: binary\r\n- **TensorFlow version (use command below)**: 1.8.0\r\n- **Python version**: 3.6.5\r\n- **Bazel version (if compiling from source)**: NA\r\n- **GCC/Compiler version (if compiling from source)**: NA\r\n- **CUDA/cuDNN version**: NA\r\n- **GPU model and memory**: NA\r\n- **Exact command to reproduce**: NA\r\n\r\n### Describe the problem\r\nI am running distributed training using SyncReplicasOptimizer, after about 10k iterations, the workers got stuck. CPU usage drops to 0 percent. \r\n\r\nThe arguments for SyncReplicasOptimizer:\r\nreplicas_to_aggregate = 60, total_num_replicas = 64 (I have 64 workers)\r\n\r\nIt might also be worth noting that this happens after 27 workers finish their training data.\r\n\r\nConnecting to one of the stuck worker processes using gdb I get the following backtraces:\r\n\r\n#0  syscall () at ../sysdeps/unix/sysv/linux/x86_64/syscall.S:38\r\n#1  0x00007f5813609de4 in nsync::nsync_mu_semaphore_p_with_deadline(nsync::nsync_semaphore_s_*, timespec) ()\r\n   from /usr/local/lib/python3.6/dist-packages/tensorflow/python/_pywrap_tensorflow_internal.so\r\n#2  0x00007f58136095b1 in nsync::nsync_sem_wait_with_cancel_(nsync::waiter*, timespec, nsync::nsync_note_s_*) ()\r\n   from /usr/local/lib/python3.6/dist-packages/tensorflow/python/_pywrap_tensorflow_internal.so\r\n#3  0x00007f5813606af4 in nsync::nsync_cv_wait_with_deadline_generic(nsync::nsync_cv_s_*, void*, void (*)(void*), void (*)(void*), timespec, nsync::nsync_note_s_*) () from /usr/local/lib/python3.6/dist-packages/tensorflow/python/_pywrap_tensorflow_internal.so\r\n#4  0x00007f5813607015 in nsync::nsync_cv_wait_with_deadline(nsync::nsync_cv_s_*, nsync::nsync_mu_s_*, timespec, nsync::nsync_note_s_*) ()\r\n   from /usr/local/lib/python3.6/dist-packages/tensorflow/python/_pywrap_tensorflow_internal.so\r\n#5  0x00007f58111a4b23 in tensorflow::(anonymous namespace)::WaitForNotification(tensorflow::CallOptions*, long long, tensorflow::Notification*) ()\r\n   from /usr/local/lib/python3.6/dist-packages/tensorflow/python/_pywrap_tensorflow_internal.so\r\n#6  0x00007f58111a54ab in tensorflow::LocalMaster::RunStep(tensorflow::CallOptions*, tensorflow::RunStepRequestWrapper*, tensorflow::MutableRunStepResponseWrapper*) () from /usr/local/lib/python3.6/dist-packages/tensorflow/python/_pywrap_tensorflow_internal.so\r\n#7  0x00007f5811187256 in tensorflow::GrpcSession::RunProto(tensorflow::CallOptions*, tensorflow::MutableRunStepRequestWrapper*, tensorflow::MutableRunStepResponseWrapper*) () from /usr/local/lib/python3.6/dist-packages/tensorflow/python/_pywrap_tensorflow_internal.so\r\n#8  0x00007f581118767d in tensorflow::GrpcSession::RunHelper(tensorflow::RunOptions const&, std::vector<std::pair<std::string, tensorflow::Tensor>, std::allocator<std::pair<std::string, tensorflow::Tensor> > > const&, std::vector<std::string, std::allocator<std::string> > const&, std::vector<std::string, std::allocator<std::string> > const&, std::vector<tensorflow::Tensor, std::allocator<tensorflow::Tensor> >*, tensorflow::RunMetadata*, std::string const&) ()\r\n   from /usr/local/lib/python3.6/dist-packages/tensorflow/python/_pywrap_tensorflow_internal.so\r\n#9  0x00007f5811187ceb in tensorflow::GrpcSession::Run(tensorflow::RunOptions const&, std::vector<std::pair<std::string, tensorflow::Tensor>, std::allocator<std::pair<std::string, tensorflow::Tensor> > > const&, std::vector<std::string, std::allocator<std::string> > const&, std::vector<std::string, std::allocator<std::string> > const&, std::vector<tensorflow::Tensor, std::allocator<tensorflow::Tensor> >*, tensorflow::RunMetadata*) ()\r\n   from /usr/local/lib/python3.6/dist-packages/tensorflow/python/_pywrap_tensorflow_internal.so\r\n#10 0x00007f5811468dba in TF_Run_Helper(tensorflow::Session*, char const*, TF_Buffer const*, std::vector<std::pair<std::string, tensorflow::Tensor>, std::allocator<std::pair<std::string, tensorflow::Tensor> > > const&, std::vector<std::string, std::allocator<std::string> > const&, TF_Tensor**, std::vector<std::string, std::allocator<std::string> > const&, TF_Buffer*, TF_Status*) () from /usr/local/lib/python3.6/dist-packages/tensorflow/python/_pywrap_tensorflow_internal.so\r\n#11 0x00007f58114699b6 in TF_SessionRun () from /usr/local/lib/python3.6/dist-packages/tensorflow/python/_pywrap_tensorflow_internal.so\r\n#12 0x00007f5811119256 in tensorflow::TF_SessionRun_wrapper_helper(TF_Session*, char const*, TF_Buffer const*, std::vector<TF_Output, std::allocator<TF_Output> > const&, std::vector<_object*, std::allocator<_object*> > const&, std::vector<TF_Output, std::allocator<TF_Output> > const&, std::vector<TF_Operation*, std::allocator<TF_Operation*> > const&, TF_Buffer*, TF_Status*, std::vector<_object*, std::allocator<_object*> >*) ()\r\n   from /usr/local/lib/python3.6/dist-packages/tensorflow/python/_pywrap_tensorflow_internal.so\r\n#13 0x00007f581111939a in tensorflow::TF_SessionRun_wrapper(TF_Session*, TF_Buffer const*, std::vector<TF_Output, std::allocator<TF_Output> > const&, std::vector<_object*, std::allocator<_object*> > const&, std::vector<TF_Output, std::allocator<TF_Output> > const&, std::vector<TF_Operation*, std::allocator<TF_Operation*> > const&, TF_Buffer*, TF_Status*, std::vector<_object*, std::allocator<_object*> >*) ()\r\n   from /usr/local/lib/python3.6/dist-packages/tensorflow/python/_pywrap_tensorflow_internal.so\r\n#14 0x00007f58110d5b3e in _wrap_TF_SessionRun_wrapper () from /usr/local/lib/python3.6/dist-packages/tensorflow/python/_pywrap_tensorflow_internal.so\r\n\r\nAny ideas ? Thanks!\r\n"}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20338", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20338/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20338/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20338/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/20338", "id": 336150944, "node_id": "MDU6SXNzdWUzMzYxNTA5NDQ=", "number": 20338, "title": "Keras Model functional API with custom submodel not working in eager execution?", "user": {"login": "David-Mao", "id": 12476624, "node_id": "MDQ6VXNlcjEyNDc2NjI0", "avatar_url": "https://avatars3.githubusercontent.com/u/12476624?v=4", "gravatar_id": "", "url": "https://api.github.com/users/David-Mao", "html_url": "https://github.com/David-Mao", "followers_url": "https://api.github.com/users/David-Mao/followers", "following_url": "https://api.github.com/users/David-Mao/following{/other_user}", "gists_url": "https://api.github.com/users/David-Mao/gists{/gist_id}", "starred_url": "https://api.github.com/users/David-Mao/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/David-Mao/subscriptions", "organizations_url": "https://api.github.com/users/David-Mao/orgs", "repos_url": "https://api.github.com/users/David-Mao/repos", "events_url": "https://api.github.com/users/David-Mao/events{/privacy}", "received_events_url": "https://api.github.com/users/David-Mao/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1097546578, "node_id": "MDU6TGFiZWwxMDk3NTQ2NTc4", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/comp:keras", "name": "comp:keras", "color": "0052cc", "default": false, "description": ""}, {"id": 473172988, "node_id": "MDU6TGFiZWw0NzMxNzI5ODg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:bug", "name": "type:bug", "color": "159b2e", "default": false, "description": ""}], "state": "open", "locked": false, "assignee": {"login": "fchollet", "id": 710255, "node_id": "MDQ6VXNlcjcxMDI1NQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/710255?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fchollet", "html_url": "https://github.com/fchollet", "followers_url": "https://api.github.com/users/fchollet/followers", "following_url": "https://api.github.com/users/fchollet/following{/other_user}", "gists_url": "https://api.github.com/users/fchollet/gists{/gist_id}", "starred_url": "https://api.github.com/users/fchollet/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fchollet/subscriptions", "organizations_url": "https://api.github.com/users/fchollet/orgs", "repos_url": "https://api.github.com/users/fchollet/repos", "events_url": "https://api.github.com/users/fchollet/events{/privacy}", "received_events_url": "https://api.github.com/users/fchollet/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "fchollet", "id": 710255, "node_id": "MDQ6VXNlcjcxMDI1NQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/710255?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fchollet", "html_url": "https://github.com/fchollet", "followers_url": "https://api.github.com/users/fchollet/followers", "following_url": "https://api.github.com/users/fchollet/following{/other_user}", "gists_url": "https://api.github.com/users/fchollet/gists{/gist_id}", "starred_url": "https://api.github.com/users/fchollet/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fchollet/subscriptions", "organizations_url": "https://api.github.com/users/fchollet/orgs", "repos_url": "https://api.github.com/users/fchollet/repos", "events_url": "https://api.github.com/users/fchollet/events{/privacy}", "received_events_url": "https://api.github.com/users/fchollet/received_events", "type": "User", "site_admin": false}, {"login": "pavithrasv", "id": 13326758, "node_id": "MDQ6VXNlcjEzMzI2NzU4", "avatar_url": "https://avatars0.githubusercontent.com/u/13326758?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pavithrasv", "html_url": "https://github.com/pavithrasv", "followers_url": "https://api.github.com/users/pavithrasv/followers", "following_url": "https://api.github.com/users/pavithrasv/following{/other_user}", "gists_url": "https://api.github.com/users/pavithrasv/gists{/gist_id}", "starred_url": "https://api.github.com/users/pavithrasv/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pavithrasv/subscriptions", "organizations_url": "https://api.github.com/users/pavithrasv/orgs", "repos_url": "https://api.github.com/users/pavithrasv/repos", "events_url": "https://api.github.com/users/pavithrasv/events{/privacy}", "received_events_url": "https://api.github.com/users/pavithrasv/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 20, "created_at": "2018-06-27T09:35:36Z", "updated_at": "2019-06-25T09:25:13Z", "closed_at": null, "author_association": "NONE", "body": "### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**:\r\nYes\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**:\r\nDarwin localhost 17.5.0 Darwin Kernel Version 17.5.0: Fri Apr 13 19:32:32 PDT 2018; root:xnu-4570.51.2~1/RELEASE_X86_64 x86_64\r\nMac OS X 10.13.4\r\n- **TensorFlow installed from (source or binary)**:\r\nbinary\r\n- **TensorFlow version (use command below)**:\r\n1.8\r\n- **Python version**: \r\n2.7\r\n- **Bazel version (if compiling from source)**:\r\nN/A\r\n- **GCC/Compiler version (if compiling from source)**:\r\nN/A\r\n- **CUDA/cuDNN version**:\r\nN/A\r\n- **GPU model and memory**:\r\nN/A\r\n- **Exact command to reproduce**:\r\nSee below\r\n\r\n\r\n### Describe the problem\r\nConsider the following keras model with a custom submodel:\r\n\r\n```\r\ntf.enable_eager_execution()\r\n\r\nclass SubModel(tf.keras.Model):\r\n    def __init__(self):\r\n        super(SubModel, self).__init__()\r\n        self.layer = tf.keras.layers.Dense(3) \r\n    def call(self, inputs):\r\n        return self.layer(inputs)\r\n\r\ndef MyModel():\r\n    input = tf.keras.Input(shape=(3, 3))\r\n    m = SubModel()\r\n    output = m(input)\r\n    return tf.keras.Model(input, output)\r\n\r\nm = MyModel()\r\nm(tf.constant(tf.ones([3, 3])))\r\n```\r\n\r\nwhere the SubModel is a custom model, and MyModel() uses it in the functional API. The code raises error:\r\n\r\n> File \"/Library/Python/2.7/site-packages/tensorflow/python/keras/_impl/keras/engine/network.py\", line 639, in compute_output_shape\r\n>     raise NotImplementedError\r\n\r\nI think it might be because the submodel cannot calculate the shape. So I added a compute_output_shape method for the SubModel class as if it's a custom layer:\r\n\r\n```\r\nclass SubModel(tf.keras.Model):\r\n    ...\r\n    def compute_output_shape(self, input_shape):\r\n        return (input_shape[0], 3)\r\n```\r\n\r\nNow the NotImplementedError disappeared, but we have a new error when running the model:\r\n\r\n> AssertionError: Could not compute output DeferredTensor('None', shape=(3,), dtype=float32)\r\n\r\nNow I don't know what to do. The code actually works in non-eager mode, so I guess it's a bug for keras functional API in eager execution?\r\n\r\n"}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20326", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20326/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20326/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20326/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/20326", "id": 336050503, "node_id": "MDU6SXNzdWUzMzYwNTA1MDM=", "number": 20326, "title": "codelabs tutorial poets doesn't work", "user": {"login": "Jvalal", "id": 3803053, "node_id": "MDQ6VXNlcjM4MDMwNTM=", "avatar_url": "https://avatars2.githubusercontent.com/u/3803053?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Jvalal", "html_url": "https://github.com/Jvalal", "followers_url": "https://api.github.com/users/Jvalal/followers", "following_url": "https://api.github.com/users/Jvalal/following{/other_user}", "gists_url": "https://api.github.com/users/Jvalal/gists{/gist_id}", "starred_url": "https://api.github.com/users/Jvalal/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Jvalal/subscriptions", "organizations_url": "https://api.github.com/users/Jvalal/orgs", "repos_url": "https://api.github.com/users/Jvalal/repos", "events_url": "https://api.github.com/users/Jvalal/events{/privacy}", "received_events_url": "https://api.github.com/users/Jvalal/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": {"login": "tatatodd", "id": 5453737, "node_id": "MDQ6VXNlcjU0NTM3Mzc=", "avatar_url": "https://avatars3.githubusercontent.com/u/5453737?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tatatodd", "html_url": "https://github.com/tatatodd", "followers_url": "https://api.github.com/users/tatatodd/followers", "following_url": "https://api.github.com/users/tatatodd/following{/other_user}", "gists_url": "https://api.github.com/users/tatatodd/gists{/gist_id}", "starred_url": "https://api.github.com/users/tatatodd/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tatatodd/subscriptions", "organizations_url": "https://api.github.com/users/tatatodd/orgs", "repos_url": "https://api.github.com/users/tatatodd/repos", "events_url": "https://api.github.com/users/tatatodd/events{/privacy}", "received_events_url": "https://api.github.com/users/tatatodd/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "tatatodd", "id": 5453737, "node_id": "MDQ6VXNlcjU0NTM3Mzc=", "avatar_url": "https://avatars3.githubusercontent.com/u/5453737?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tatatodd", "html_url": "https://github.com/tatatodd", "followers_url": "https://api.github.com/users/tatatodd/followers", "following_url": "https://api.github.com/users/tatatodd/following{/other_user}", "gists_url": "https://api.github.com/users/tatatodd/gists{/gist_id}", "starred_url": "https://api.github.com/users/tatatodd/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tatatodd/subscriptions", "organizations_url": "https://api.github.com/users/tatatodd/orgs", "repos_url": "https://api.github.com/users/tatatodd/repos", "events_url": "https://api.github.com/users/tatatodd/events{/privacy}", "received_events_url": "https://api.github.com/users/tatatodd/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 13, "created_at": "2018-06-27T01:58:58Z", "updated_at": "2018-12-15T18:39:13Z", "closed_at": null, "author_association": "NONE", "body": "Your tutorial does not work on a variety of fronts. You cannot complete the tutorial from start to end just trying to use your instructions. I dare you to do so. \r\n\r\nI tried this using Anaconda AND Pycharm\r\n\r\nhttps://codelabs.developers.google.com/codelabs/tensorflow-for-poets/#0"}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20308", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20308/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20308/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20308/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/20308", "id": 335887442, "node_id": "MDU6SXNzdWUzMzU4ODc0NDI=", "number": 20308, "title": "Results are different on MacOS for fixed data", "user": {"login": "madrugado", "id": 3098853, "node_id": "MDQ6VXNlcjMwOTg4NTM=", "avatar_url": "https://avatars0.githubusercontent.com/u/3098853?v=4", "gravatar_id": "", "url": "https://api.github.com/users/madrugado", "html_url": "https://github.com/madrugado", "followers_url": "https://api.github.com/users/madrugado/followers", "following_url": "https://api.github.com/users/madrugado/following{/other_user}", "gists_url": "https://api.github.com/users/madrugado/gists{/gist_id}", "starred_url": "https://api.github.com/users/madrugado/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/madrugado/subscriptions", "organizations_url": "https://api.github.com/users/madrugado/orgs", "repos_url": "https://api.github.com/users/madrugado/repos", "events_url": "https://api.github.com/users/madrugado/events{/privacy}", "received_events_url": "https://api.github.com/users/madrugado/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 404586594, "node_id": "MDU6TGFiZWw0MDQ1ODY1OTQ=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:awaiting%20tensorflower", "name": "stat:awaiting tensorflower", "color": "f4b400", "default": false, "description": ""}], "state": "open", "locked": false, "assignee": {"login": "cy89", "id": 29663194, "node_id": "MDQ6VXNlcjI5NjYzMTk0", "avatar_url": "https://avatars0.githubusercontent.com/u/29663194?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cy89", "html_url": "https://github.com/cy89", "followers_url": "https://api.github.com/users/cy89/followers", "following_url": "https://api.github.com/users/cy89/following{/other_user}", "gists_url": "https://api.github.com/users/cy89/gists{/gist_id}", "starred_url": "https://api.github.com/users/cy89/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cy89/subscriptions", "organizations_url": "https://api.github.com/users/cy89/orgs", "repos_url": "https://api.github.com/users/cy89/repos", "events_url": "https://api.github.com/users/cy89/events{/privacy}", "received_events_url": "https://api.github.com/users/cy89/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "cy89", "id": 29663194, "node_id": "MDQ6VXNlcjI5NjYzMTk0", "avatar_url": "https://avatars0.githubusercontent.com/u/29663194?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cy89", "html_url": "https://github.com/cy89", "followers_url": "https://api.github.com/users/cy89/followers", "following_url": "https://api.github.com/users/cy89/following{/other_user}", "gists_url": "https://api.github.com/users/cy89/gists{/gist_id}", "starred_url": "https://api.github.com/users/cy89/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cy89/subscriptions", "organizations_url": "https://api.github.com/users/cy89/orgs", "repos_url": "https://api.github.com/users/cy89/repos", "events_url": "https://api.github.com/users/cy89/events{/privacy}", "received_events_url": "https://api.github.com/users/cy89/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 8, "created_at": "2018-06-26T15:59:12Z", "updated_at": "2018-12-10T18:56:03Z", "closed_at": null, "author_association": "NONE", "body": "Hello.\r\n\r\nWe've encountered strange behaviour of TF (tested on versions 1.7.0 and 1.8.0) on MacOS (tested on 10.11.6) with Python 2.7 (tested on 2.7.10). While running this code:\r\n\r\n```python\r\nimport tensorflow as tf\r\n\r\nclass Model(object):\r\n    def __init__(self):\r\n        one_hot = tf.constant([[1, 0, 0, 1], [0, 1, 1, 2], [1, 1, 1, 3]])\r\n        logits = tf.constant([[0.3, 0.2, 0], [0.1, 0.0004, 0], [0, 0.02, 0.2]])\r\n\r\n        self.one_hot = one_hot\r\n        self.logits = logits\r\n        self.rec_at_k = self._recall_at_k()\r\n        self.prec_at_k = self._precision_at_k()\r\n\r\n        config = tf.ConfigProto()\r\n        config.gpu_options.allow_growth = True\r\n        self.sess = tf.Session(config=config)\r\n        self.sess.run(tf.global_variables_initializer())\r\n        self.sess.run(tf.local_variables_initializer())\r\n\r\n\r\n    def _recall_at_k(self, top=3):\r\n        recalls = []\r\n        for k in range(1,top+1):\r\n            recalls.append(tf.metrics.recall_at_k(tf.cast(self.one_hot, tf.int64), tf.cast(self.logits, tf.float32), k=k))\r\n        return recalls\r\n\r\n    def _precision_at_k(self, top=3):\r\n        precs = []\r\n        for k in range(1,top+1):\r\n            precs.append(tf.metrics.recall_at_k(tf.cast(self.one_hot, tf.int64), self.logits, k=k))\r\n        return precs\r\n\r\n    def fit(self):\r\n        recalls, precs = self.sess.run([self.rec_at_k, self.prec_at_k])\r\n        for rec,prec in zip(recalls,precs):\r\n            print rec[0],rec, prec\r\n        l,o = self.sess.run([self.logits, self.one_hot])\r\n        print l\r\n        print o, o[:,:-1]\r\n\r\n\r\nmodel = Model()\r\nmodel.fit()\r\n```\r\n\r\n\r\nwe receive results which are different from run to run, like:\r\n\r\n\r\n```\r\n0.2857142857142857 ('0.2857142857142857', '0.2857142857142857') ('1.0', '0.2857142857142857')\r\n0.7142857142857143 ('0.7142857142857143', '0.7142857142857143') ('1.0', '0.7142857142857143')\r\n0.0 ('0.0', '0.8571428571428571') ('1.0', '0.8571428571428571')\r\n[[0.3    0.2    0.    ]\r\n [0.1    0.0004 0.    ]\r\n [0.     0.02   0.2   ]]\r\n[[1 0 0 1]\r\n [0 1 1 2]\r\n [1 1 1 3]] [[1 0 0]\r\n [0 1 1]\r\n [1 1 1]]\r\n```\r\n\r\n\r\nand\r\n\r\n\r\n```\r\n0.4 ('0.4', '0.2857142857142857') ('1.0', '0.2857142857142857')\r\n1.0 ('1.0', '0.7142857142857143') ('0.7142857142857143', '0.7142857142857143')\r\n0.0 ('0.0', '0.8571428571428571') ('1.0', '0.8571428571428571')\r\n[[0.3    0.2    0.    ]\r\n [0.1    0.0004 0.    ]\r\n [0.     0.02   0.2   ]]\r\n[[1 0 0 1]\r\n [0 1 1 2]\r\n [1 1 1 3]] [[1 0 0]\r\n [0 1 1]\r\n [1 1 1]]\r\n```\r\n\r\n\r\nOn linux (Ubuntu 16.04 4.13.0-45-generic) and Python (2.7.14) results are stable."}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20305", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20305/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20305/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20305/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/20305", "id": 335802720, "node_id": "MDU6SXNzdWUzMzU4MDI3MjA=", "number": 20305, "title": "Compiling TF from source on Debian9 does not work as documented - partial fix", "user": {"login": "schloegl", "id": 1644245, "node_id": "MDQ6VXNlcjE2NDQyNDU=", "avatar_url": "https://avatars1.githubusercontent.com/u/1644245?v=4", "gravatar_id": "", "url": "https://api.github.com/users/schloegl", "html_url": "https://github.com/schloegl", "followers_url": "https://api.github.com/users/schloegl/followers", "following_url": "https://api.github.com/users/schloegl/following{/other_user}", "gists_url": "https://api.github.com/users/schloegl/gists{/gist_id}", "starred_url": "https://api.github.com/users/schloegl/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/schloegl/subscriptions", "organizations_url": "https://api.github.com/users/schloegl/orgs", "repos_url": "https://api.github.com/users/schloegl/repos", "events_url": "https://api.github.com/users/schloegl/events{/privacy}", "received_events_url": "https://api.github.com/users/schloegl/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": {"login": "tatatodd", "id": 5453737, "node_id": "MDQ6VXNlcjU0NTM3Mzc=", "avatar_url": "https://avatars3.githubusercontent.com/u/5453737?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tatatodd", "html_url": "https://github.com/tatatodd", "followers_url": "https://api.github.com/users/tatatodd/followers", "following_url": "https://api.github.com/users/tatatodd/following{/other_user}", "gists_url": "https://api.github.com/users/tatatodd/gists{/gist_id}", "starred_url": "https://api.github.com/users/tatatodd/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tatatodd/subscriptions", "organizations_url": "https://api.github.com/users/tatatodd/orgs", "repos_url": "https://api.github.com/users/tatatodd/repos", "events_url": "https://api.github.com/users/tatatodd/events{/privacy}", "received_events_url": "https://api.github.com/users/tatatodd/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "tatatodd", "id": 5453737, "node_id": "MDQ6VXNlcjU0NTM3Mzc=", "avatar_url": "https://avatars3.githubusercontent.com/u/5453737?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tatatodd", "html_url": "https://github.com/tatatodd", "followers_url": "https://api.github.com/users/tatatodd/followers", "following_url": "https://api.github.com/users/tatatodd/following{/other_user}", "gists_url": "https://api.github.com/users/tatatodd/gists{/gist_id}", "starred_url": "https://api.github.com/users/tatatodd/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tatatodd/subscriptions", "organizations_url": "https://api.github.com/users/tatatodd/orgs", "repos_url": "https://api.github.com/users/tatatodd/repos", "events_url": "https://api.github.com/users/tatatodd/events{/privacy}", "received_events_url": "https://api.github.com/users/tatatodd/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2018-06-26T12:46:40Z", "updated_at": "2018-12-13T18:58:12Z", "closed_at": null, "author_association": "NONE", "body": "### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**:\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**:\r\n\r\nDebian 9, with nvidia-driver 390, and nvidia-cuda-toolkit 9.1.85 from the repository \"stretch-backports\"\r\n\r\n- **TensorFlow installed from (source or binary)**:\r\n\r\ntrying to install from source - but this fails (see description below) \r\n\r\n- **TensorFlow version (use command below)**:\r\n1.8\r\n- **Python version**: \r\n3.5.2\r\n- **Bazel version (if compiling from source)**:\r\n0.14.1\r\n- **GCC/Compiler version (if compiling from source)**:\r\n6.3\r\n- **CUDA/cuDNN version**:\r\n9.1/7.1\r\n- **GPU model and memory**:\r\nGTX1080Ti\r\n- **Exact command to reproduce**:\r\n```\r\n\r\nTF_NEED_CUDA=1 \\\r\nGCC_HOST_COMPILER_PATH=/usr/bin/gcc \\\r\nCUDA_TOOLKIT_PATH=/usr \\\r\nTF_CUDA_VERSION=9.1 \\\r\nTF_CUDNN_VERSION=7.1 \\\r\nCUDNN_INSTALL_PATH=/mnt/nfs/clustersw/shared/cuda/cudnn-9.1-linux-x64-v7.1/ \\\r\nTF_CUDA_COMPUTE_CAPABILITIES=5.2,6.1,6.2 \\\r\n./configure \r\n\r\nbazel build \r\nbazel build //tensorflow/tools/pip_package:build_pip_package \r\n```\r\n### Describe the problem\r\nI was trying to install TF 1.8 on a  Debian 9 system with python/3.5.2, Cuda 9.1, cudnn 7.1. Because all attempts to used some some precomiled TF wheels failed, I'm trying to install TF from source. Cuda, and libcupti are installed from stretch-backports repository \r\n    apt-get install -t stretch-backports nvidia-cuda-toolkit libcupti-dev nvidia-driver\r\n\r\nIn order to compile TF from source, the following changes to the build system where necessary.\r\n\r\n```\r\ndiff --git a/configure.py b/configure.py\r\nindex ad585fa52e..af5ead70da 100644\r\n--- a/configure.py\r\n+++ b/configure.py\r\n@@ -33,12 +33,12 @@ except ImportError:\r\n   from distutils.spawn import find_executable as which\r\n # pylint: enable=g-import-not-at-top\r\n \r\n-_DEFAULT_CUDA_VERSION = '9.0'\r\n-_DEFAULT_CUDNN_VERSION = '7'\r\n+_DEFAULT_CUDA_VERSION = '9.1'\r\n+_DEFAULT_CUDNN_VERSION = '7.1'\r\n _DEFAULT_NCCL_VERSION = '1.3'\r\n-_DEFAULT_CUDA_COMPUTE_CAPABILITIES = '3.5,5.2'\r\n-_DEFAULT_CUDA_PATH = '/usr/local/cuda'\r\n-_DEFAULT_CUDA_PATH_LINUX = '/opt/cuda'\r\n+_DEFAULT_CUDA_COMPUTE_CAPABILITIES = '5.2,6.1,6.2'\r\n+_DEFAULT_CUDA_PATH = '/usr'\r\n+_DEFAULT_CUDA_PATH_LINUX = '/usr'\r\n _DEFAULT_CUDA_PATH_WIN = ('C:/Program Files/NVIDIA GPU Computing '\r\n                           'Toolkit/CUDA/v%s' % _DEFAULT_CUDA_VERSION)\r\n _DEFAULT_TENSORRT_PATH_LINUX = '/usr/lib/%s-linux-gnu' % platform.machine()\r\n@@ -839,7 +839,7 @@ def set_tf_cuda_version(environ_cp):\r\n     if is_windows():\r\n       cuda_rt_lib_path = 'lib/x64/cudart.lib'\r\n     elif is_linux():\r\n-      cuda_rt_lib_path = 'lib64/libcudart.so.%s' % tf_cuda_version\r\n+      cuda_rt_lib_path = 'lib/x86_64-linux-gnu/libcudart.so.%s' % tf_cuda_version\r\n     elif is_macos():\r\n       cuda_rt_lib_path = 'lib/libcudart.%s.dylib' % tf_cuda_version\r\n \r\ndiff --git a/third_party/gpus/cuda_configure.bzl b/third_party/gpus/cuda_configure.bzl\r\nindex c90c66912d..f55d0a455e 100644\r\n--- a/third_party/gpus/cuda_configure.bzl\r\n+++ b/third_party/gpus/cuda_configure.bzl\r\n@@ -59,6 +59,7 @@ CUDA_LIB_PATHS = [\r\n CUPTI_HEADER_PATHS = [\r\n   \"extras/CUPTI/include/\",\r\n   \"include/cuda/CUPTI/\",\r\n+  \"include/\"\r\n ]\r\n \r\n # Lookup paths for the cupti library, relative to the\r\n@@ -67,7 +68,7 @@ CUPTI_HEADER_PATHS = [\r\n # the other CUDA libraries but rather in a special extras/CUPTI directory.\r\n CUPTI_LIB_PATHS = [\r\n   \"extras/CUPTI/lib64/\",\r\n-  \"lib/x86_64-linux-gnu\",\r\n+  \"lib/x86_64-linux-gnu/\",\r\n   \"lib64/\",\r\n   \"extras/CUPTI/libx64/\",\r\n   \"extras/CUPTI/lib/\",\r\n@@ -94,6 +95,7 @@ CUDNN_INCLUDE_PATHS = [\r\n NVVM_LIBDEVICE_PATHS = [\r\n   \"nvvm/libdevice/\",\r\n   \"share/cuda/\",\r\n+  \"lib/nvidia-cuda-toolkit/libdevice/\"\r\n ]\r\n \r\n load(\"//third_party/clang_toolchain:download_clang.bzl\", \"download_clang\")`\r\n```\r\n\r\n\r\nWith these changes, \"bazel build\" was sucessful. However, the command \r\n   bazel build //tensorflow/tools/pip_package:build_pip_package\r\nwould still fail with \r\n\r\n`bazel build //tensorflow/tools/pip_package:build_pip_package \r\nWARNING: Output base '/nfs/scistore12/jonasgrp/schloegl/.cache/bazel/_bazel_schloegl/8678486dd934320ead8a15f39d2403d9' is on NFS. This may lead to surprising failures and undetermined behavior.\r\nStarting local Bazel server and connecting to it...\r\n..........................\r\nERROR: /nfs/scistore_grp/schloegl/.cache/bazel/_bazel_schloegl/8678486dd934320ead8a15f39d2403d9/external/local_config_cuda/cuda/BUILD:48526:11: in cmd attribute of genrule rule @local_config_cuda//cuda:cuda-include: '$SocketInputStream' syntax is not supported; use '$(SocketInputStream)' instead for \"Make\" variables, or escape the '$' as '$$' if you intended this for the shell\r\nERROR: Analysis of target '//tensorflow/tools/pip_package:build_pip_package' failed; build aborted: Analysis of target '@local_config_cuda//cuda:cuda-include' failed; build aborted\r\nINFO: Elapsed time: 7.423s\r\nINFO: 0 processes.\r\nFAILED: Build did NOT complete successfully (186 packages loaded)\r\n`\r\n\r\n"}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20283", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20283/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20283/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20283/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/20283", "id": 335513892, "node_id": "MDU6SXNzdWUzMzU1MTM4OTI=", "number": 20283, "title": "Truncated Distributions in TensorFlow", "user": {"login": "ZigaSajovic", "id": 10235589, "node_id": "MDQ6VXNlcjEwMjM1NTg5", "avatar_url": "https://avatars0.githubusercontent.com/u/10235589?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ZigaSajovic", "html_url": "https://github.com/ZigaSajovic", "followers_url": "https://api.github.com/users/ZigaSajovic/followers", "following_url": "https://api.github.com/users/ZigaSajovic/following{/other_user}", "gists_url": "https://api.github.com/users/ZigaSajovic/gists{/gist_id}", "starred_url": "https://api.github.com/users/ZigaSajovic/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ZigaSajovic/subscriptions", "organizations_url": "https://api.github.com/users/ZigaSajovic/orgs", "repos_url": "https://api.github.com/users/ZigaSajovic/repos", "events_url": "https://api.github.com/users/ZigaSajovic/events{/privacy}", "received_events_url": "https://api.github.com/users/ZigaSajovic/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 299643928, "node_id": "MDU6TGFiZWwyOTk2NDM5Mjg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:contributions%20welcome", "name": "stat:contributions welcome", "color": "f4b400", "default": false, "description": ""}, {"id": 473173272, "node_id": "MDU6TGFiZWw0NzMxNzMyNzI=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:feature", "name": "type:feature", "color": "159b2e", "default": false, "description": ""}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 11, "created_at": "2018-06-25T18:15:50Z", "updated_at": "2018-10-02T23:55:42Z", "closed_at": null, "author_association": "NONE", "body": "At this point, only [tf.truncated_normal](https://www.tensorflow.org/api_docs/python/tf/truncated_normal) is implemented within TensorFlow. Are there any plans for implementing others aswell? ex. Truncated Gamma, Truncated Exponential etc. Truncated distributions come up often in probabilistic programming, a branch in which TensorFlow is becoming prominent. I for one do most of my probabilistic work and sampling in TensorFlow, due to the GPU support and the control it offers me.\r\n\r\nEach truncated distribution offers a different method of efficiently sampling from it, so distribution specific algorithms would be ideal.\r\n\r\nIn the mean time, I implemented a general method for personal use. I attach the specifications bellow, in case there is any interest in this general solution (the implementation, documentation and examples are available [here](https://github.com/ZigaSajovic/truncatedDistribution)). Note that I am willing to work on improving it, in case interest is present.\r\n\r\n**TruncatedDistribution**\r\n\r\nThe class [TruncatedDistribution](https://github.com/ZigaSajovic/truncatedDistribution) extends any existing TensorFlow distribution, i.e. classes inheriting from [tf.distribution](https://www.tensorflow.org/api_docs/python/tf/distributions/Distribution), to enable their truncated counterparts, with full support of broadcasting.\r\n\r\n**Methods:**\r\n\r\n* \\_\\_init\\_\\_(disttribution,left,right, n_points=1000)\r\n* sample(sample_shape=())\r\n* cdf(X)\r\n* log_cdf(X)\r\n* survival_function(X)\r\n* log_survival_function(X)\r\n* prob(X)\r\n* log_prob(X)\r\n* mean(n_samples=1000)\r\n* variance(n_samples=1000)\r\n* stddev(n_samples=1000)"}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20280", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20280/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20280/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20280/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/20280", "id": 335482706, "node_id": "MDU6SXNzdWUzMzU0ODI3MDY=", "number": 20280, "title": "Provide a way to build a Tensorflow wheel without a dependency on Tensorboard", "user": {"login": "orf", "id": 1027207, "node_id": "MDQ6VXNlcjEwMjcyMDc=", "avatar_url": "https://avatars1.githubusercontent.com/u/1027207?v=4", "gravatar_id": "", "url": "https://api.github.com/users/orf", "html_url": "https://github.com/orf", "followers_url": "https://api.github.com/users/orf/followers", "following_url": "https://api.github.com/users/orf/following{/other_user}", "gists_url": "https://api.github.com/users/orf/gists{/gist_id}", "starred_url": "https://api.github.com/users/orf/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/orf/subscriptions", "organizations_url": "https://api.github.com/users/orf/orgs", "repos_url": "https://api.github.com/users/orf/repos", "events_url": "https://api.github.com/users/orf/events{/privacy}", "received_events_url": "https://api.github.com/users/orf/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 299643928, "node_id": "MDU6TGFiZWwyOTk2NDM5Mjg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:contributions%20welcome", "name": "stat:contributions welcome", "color": "f4b400", "default": false, "description": ""}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 10, "created_at": "2018-06-25T16:36:36Z", "updated_at": "2018-08-08T18:59:05Z", "closed_at": null, "author_association": "CONTRIBUTOR", "body": "### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**: No\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**: N/A\r\n- **TensorFlow installed from (source or binary)**: Source\r\n- **TensorFlow version (use command below)**: 1.8\r\n- **Python version**: 3\r\n- **Bazel version (if compiling from source)**: 0.14.1\r\n- **GCC/Compiler version (if compiling from source)**: 6.3.0\r\n- **CUDA/cuDNN version**: N/A\r\n- **GPU model and memory**: N/A\r\n- **Exact command to reproduce**: N/A\r\n\r\n### Describe the problem\r\n\r\nWhen building a custom Tensorflow wheel from source there is currently no way to disable the resulting wheels dependency on `tensorboard`. Tensorboard is great during development but is not useful when running in a headless server environment. It brings with it a large number of dependencies, and as I believe a custom tensorflow build is likely to be used in this kind of environment and it would be great to be able to disable the `install_requires` dependency on tensorboard in this case.\r\n"}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20263", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20263/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20263/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20263/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/20263", "id": 335189743, "node_id": "MDU6SXNzdWUzMzUxODk3NDM=", "number": 20263, "title": "Computing gradients in extracted subgraph which contains a 'while_loop'", "user": {"login": "Tal-Golan", "id": 10431558, "node_id": "MDQ6VXNlcjEwNDMxNTU4", "avatar_url": "https://avatars3.githubusercontent.com/u/10431558?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Tal-Golan", "html_url": "https://github.com/Tal-Golan", "followers_url": "https://api.github.com/users/Tal-Golan/followers", "following_url": "https://api.github.com/users/Tal-Golan/following{/other_user}", "gists_url": "https://api.github.com/users/Tal-Golan/gists{/gist_id}", "starred_url": "https://api.github.com/users/Tal-Golan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Tal-Golan/subscriptions", "organizations_url": "https://api.github.com/users/Tal-Golan/orgs", "repos_url": "https://api.github.com/users/Tal-Golan/repos", "events_url": "https://api.github.com/users/Tal-Golan/events{/privacy}", "received_events_url": "https://api.github.com/users/Tal-Golan/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": {"login": "tatatodd", "id": 5453737, "node_id": "MDQ6VXNlcjU0NTM3Mzc=", "avatar_url": "https://avatars3.githubusercontent.com/u/5453737?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tatatodd", "html_url": "https://github.com/tatatodd", "followers_url": "https://api.github.com/users/tatatodd/followers", "following_url": "https://api.github.com/users/tatatodd/following{/other_user}", "gists_url": "https://api.github.com/users/tatatodd/gists{/gist_id}", "starred_url": "https://api.github.com/users/tatatodd/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tatatodd/subscriptions", "organizations_url": "https://api.github.com/users/tatatodd/orgs", "repos_url": "https://api.github.com/users/tatatodd/repos", "events_url": "https://api.github.com/users/tatatodd/events{/privacy}", "received_events_url": "https://api.github.com/users/tatatodd/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "tatatodd", "id": 5453737, "node_id": "MDQ6VXNlcjU0NTM3Mzc=", "avatar_url": "https://avatars3.githubusercontent.com/u/5453737?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tatatodd", "html_url": "https://github.com/tatatodd", "followers_url": "https://api.github.com/users/tatatodd/followers", "following_url": "https://api.github.com/users/tatatodd/following{/other_user}", "gists_url": "https://api.github.com/users/tatatodd/gists{/gist_id}", "starred_url": "https://api.github.com/users/tatatodd/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tatatodd/subscriptions", "organizations_url": "https://api.github.com/users/tatatodd/orgs", "repos_url": "https://api.github.com/users/tatatodd/repos", "events_url": "https://api.github.com/users/tatatodd/events{/privacy}", "received_events_url": "https://api.github.com/users/tatatodd/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 0, "created_at": "2018-06-24T15:49:31Z", "updated_at": "2018-12-21T18:51:14Z", "closed_at": null, "author_association": "NONE", "body": "### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**:\r\nyes\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**:\r\nLinux Ubuntu 17.10\r\n- **TensorFlow installed from (source or binary)**:\r\nBinary\r\n- **TensorFlow version (use command below)**:\r\nv1.8.0-0-g93bc2e2072 \r\n- **Python version**: \r\n3.6.5\r\n- **Bazel version (if compiling from source)**:\r\nN/A\r\n- **GCC/Compiler version (if compiling from source)**:\r\nN/A\r\n- **CUDA/cuDNN version**:\r\n9.0/7.0.5\r\n- **GPU model and memory**:\r\nTitan XP\r\n- **Exact command to reproduce**:\r\n```\r\nimport tensorflow as tf\r\ng1=tf.Graph()\r\nsess1=tf.Session(graph=g1)\r\nwith g1.as_default():\r\n    with sess1.as_default():\r\n        i=tf.constant(0, name=\"input\")\r\n        out=tf.while_loop(lambda i: tf.less(i,5), lambda i: [tf.add(i,1)], [i], name=\"output\")\r\n        loss=tf.square(out,name='loss')\r\n        graph_def = tf.graph_util.convert_variables_to_constants(sess1,g1.as_graph_def(),['output/Exit'])\r\n\r\ng2 = tf.Graph()\r\nwith g2.as_default():\r\n    tf.import_graph_def(graph_def,name='')\r\n    i_imported = g2.get_tensor_by_name(\"input:0\")\r\n    out_imported = g2.get_tensor_by_name(\"output/Exit:0\")\r\n    tf.gradients(out_imported, i_imported)\r\n\r\n```\r\noutput:\r\n```\r\nINFO:tensorflow:Froze 0 variables.\r\nConverted 0 variables to const ops.\r\nTraceback (most recent call last):\r\n\r\n  File \"<ipython-input-1-908dc1dee750>\", line 23, in <module>\r\n    tf.gradients(out_imported, i_imported)\r\n\r\n  File \"/home/user/anaconda3/envs/tf1.8_gpu/lib/python3.6/site-packages/tensorflow/python/ops/gradients_impl.py\", line 494, in gradients\r\n    gate_gradients, aggregation_method, stop_gradients)\r\n\r\n  File \"/home/user/anaconda3/envs/tf1.8_gpu/lib/python3.6/site-packages/tensorflow/python/ops/gradients_impl.py\", line 543, in _GradientsHelper\r\n    ops.get_default_graph(), to_ops, from_ops, colocate_gradients_with_ops)\r\n\r\n  File \"/home/user/anaconda3/envs/tf1.8_gpu/lib/python3.6/site-packages/tensorflow/python/ops/gradients_impl.py\", line 195, in _PendingCount\r\n    between_op_list, between_ops, colocate_gradients_with_ops)\r\n\r\n  File \"/home/user/anaconda3/envs/tf1.8_gpu/lib/python3.6/site-packages/tensorflow/python/ops/control_flow_ops.py\", line 1456, in MaybeCreateControlFlowState\r\n    loop_state.AddWhileContext(op, between_op_list, between_ops)\r\n\r\n  File \"/home/user/anaconda3/envs/tf1.8_gpu/lib/python3.6/site-packages/tensorflow/python/ops/control_flow_ops.py\", line 1262, in AddWhileContext\r\n    outer_forward_ctxt = forward_ctxt.outer_context\r\n\r\nAttributeError: 'NoneType' object has no attribute 'outer_context'\r\n```\r\n### Describe the problem\r\nTF  [issue #7404](https://github.com/tensorflow/tensorflow/issues/7404) describes that when trying to form a gradient op in an imported (sub)graph, a 'No attribute 'outer_context'' error occurs. This issue was closed with the recommendation to use `tf.train.import_meta_graph` instead, so the outer context related to the while op is included.\r\n\r\nHowever, this does not fully solve the problem. In some deep-learning related settings, one might want to train a model, extract a subgraph (i.e., remove training related ops), connect the extracted subgraph into a larger graph to serve as part of an ensemble, GAN and so on, and then retrain the larger graph. When there is no dependence on outer context, one can easily use graph editing tools such as `tf.graph_util.convert_variables_to_constants` or `tf.graph_util.extract_sub_graph` to achieve that, exporting and importing subgraphs and then forming new tf.gradients operations. \r\n\r\nThe minimal example above, adapted from issue 7404, shows how this approach fails when a tf.while is used and the outer context is missing. Importing and exporting the metagraph instead would leave the tf.square op in the graph. While for this minimal example being forced to save also the loss tensor looks like a very minor limitation it is easy to conceive actual applications in which there are large parts of the graph which we might really want to exclude (e.g., a decoder network in Capsule-network training). \r\n\r\nRight now, the dependence on outer context for computing gradients for tf.while is incompatible with tf.graph_util.extract_sub_graph and similar operations that operate on graphdefs. I believe that this is not a negligible functionality limitation.  A [related StackOverflow question](https://stackoverflow.com/questions/50663594/computing-gradients-in-extracted-tensorflow-subgraph-which-contains-a-while-loo) was upvoted but left unanswered.\r\n\r\nIn general, from the perspective of an API user who is ignorant of the internal implementation of TF, any dependence of operations on information stored out of the graphdef is not expected, hinders graph editing (as I try to convey above) and seems patchy."}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20225", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20225/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20225/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20225/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/20225", "id": 334901066, "node_id": "MDU6SXNzdWUzMzQ5MDEwNjY=", "number": 20225, "title": "Windows Make: Don't (re)build dependencies, use prebuilt ones", "user": {"login": "KOLANICH", "id": 240344, "node_id": "MDQ6VXNlcjI0MDM0NA==", "avatar_url": "https://avatars1.githubusercontent.com/u/240344?v=4", "gravatar_id": "", "url": "https://api.github.com/users/KOLANICH", "html_url": "https://github.com/KOLANICH", "followers_url": "https://api.github.com/users/KOLANICH/followers", "following_url": "https://api.github.com/users/KOLANICH/following{/other_user}", "gists_url": "https://api.github.com/users/KOLANICH/gists{/gist_id}", "starred_url": "https://api.github.com/users/KOLANICH/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/KOLANICH/subscriptions", "organizations_url": "https://api.github.com/users/KOLANICH/orgs", "repos_url": "https://api.github.com/users/KOLANICH/repos", "events_url": "https://api.github.com/users/KOLANICH/events{/privacy}", "received_events_url": "https://api.github.com/users/KOLANICH/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 404586558, "node_id": "MDU6TGFiZWw0MDQ1ODY1NTg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:community%20support", "name": "stat:community support", "color": "f4b400", "default": false, "description": ""}, {"id": 473173351, "node_id": "MDU6TGFiZWw0NzMxNzMzNTE=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:build/install", "name": "type:build/install", "color": "159b2e", "default": false, "description": ""}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2018-06-22T14:33:30Z", "updated_at": "2018-08-10T20:16:10Z", "closed_at": null, "author_association": "NONE", "body": "### System information\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**: Windows 7\r\n- **TensorFlow installed from (source or binary)**: source\r\n- **TensorFlow version (use command below)**: master\r\n- **GCC/Compiler version (if compiling from source)**: 8.0.1\r\n- **Exact command to reproduce**: mingw32-make\r\n\r\n### Describe the problem\r\nThe tool builds the dependencies instead of asking the user to provide location of prebuilt ones. Building dependencies when building TF causes problems: if a dependency build fails, I have to start the build from scratch, this consumes LOT OF TIME. Also I cannot fix an error in the dependencies because it fetches the latest version from git on each insfallation, this also consumes LOT OF TIME. Please provide the way to use prebuilt dependencies. "}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20222", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20222/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20222/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20222/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/20222", "id": 334874496, "node_id": "MDU6SXNzdWUzMzQ4NzQ0OTY=", "number": 20222, "title": "Use shallow clones from git repos in CMake build", "user": {"login": "KOLANICH", "id": 240344, "node_id": "MDQ6VXNlcjI0MDM0NA==", "avatar_url": "https://avatars1.githubusercontent.com/u/240344?v=4", "gravatar_id": "", "url": "https://api.github.com/users/KOLANICH", "html_url": "https://github.com/KOLANICH", "followers_url": "https://api.github.com/users/KOLANICH/followers", "following_url": "https://api.github.com/users/KOLANICH/following{/other_user}", "gists_url": "https://api.github.com/users/KOLANICH/gists{/gist_id}", "starred_url": "https://api.github.com/users/KOLANICH/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/KOLANICH/subscriptions", "organizations_url": "https://api.github.com/users/KOLANICH/orgs", "repos_url": "https://api.github.com/users/KOLANICH/repos", "events_url": "https://api.github.com/users/KOLANICH/events{/privacy}", "received_events_url": "https://api.github.com/users/KOLANICH/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 299643928, "node_id": "MDU6TGFiZWwyOTk2NDM5Mjg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:contributions%20welcome", "name": "stat:contributions welcome", "color": "f4b400", "default": false, "description": ""}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2018-06-22T13:17:07Z", "updated_at": "2018-07-05T06:59:08Z", "closed_at": null, "author_association": "NONE", "body": "Please add\r\n\r\n```cmake\r\nGIT_SHALLOW 1\r\nGIT_PROGRESS 1\r\n```\r\n\r\nto all cmake files cloning git repos in ``contrib/cmake/external`"}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20219", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20219/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20219/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20219/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/20219", "id": 334814825, "node_id": "MDU6SXNzdWUzMzQ4MTQ4MjU=", "number": 20219, "title": "[FEATURE REQUEST] tf.scatter_nd doesn't support half types", "user": {"login": "x10000year", "id": 22427780, "node_id": "MDQ6VXNlcjIyNDI3Nzgw", "avatar_url": "https://avatars0.githubusercontent.com/u/22427780?v=4", "gravatar_id": "", "url": "https://api.github.com/users/x10000year", "html_url": "https://github.com/x10000year", "followers_url": "https://api.github.com/users/x10000year/followers", "following_url": "https://api.github.com/users/x10000year/following{/other_user}", "gists_url": "https://api.github.com/users/x10000year/gists{/gist_id}", "starred_url": "https://api.github.com/users/x10000year/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/x10000year/subscriptions", "organizations_url": "https://api.github.com/users/x10000year/orgs", "repos_url": "https://api.github.com/users/x10000year/repos", "events_url": "https://api.github.com/users/x10000year/events{/privacy}", "received_events_url": "https://api.github.com/users/x10000year/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 299643928, "node_id": "MDU6TGFiZWwyOTk2NDM5Mjg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:contributions%20welcome", "name": "stat:contributions welcome", "color": "f4b400", "default": false, "description": ""}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 11, "created_at": "2018-06-22T09:45:52Z", "updated_at": "2018-06-24T04:36:34Z", "closed_at": null, "author_association": "NONE", "body": "I try to use tf.scatter_nd and tf.scatter_max for tf.float16 input, but it reports that it doesn't support half types. Can tf.scatter_nd  and tf.scatter_max add support for half types? Thanks.\r\n\r\n@kosklain @dantkz"}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20210", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20210/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20210/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20210/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/20210", "id": 334721319, "node_id": "MDU6SXNzdWUzMzQ3MjEzMTk=", "number": 20210, "title": "Support openmp in tflite for operations like depthwise convolution", "user": {"login": "qiming-shi", "id": 23111874, "node_id": "MDQ6VXNlcjIzMTExODc0", "avatar_url": "https://avatars2.githubusercontent.com/u/23111874?v=4", "gravatar_id": "", "url": "https://api.github.com/users/qiming-shi", "html_url": "https://github.com/qiming-shi", "followers_url": "https://api.github.com/users/qiming-shi/followers", "following_url": "https://api.github.com/users/qiming-shi/following{/other_user}", "gists_url": "https://api.github.com/users/qiming-shi/gists{/gist_id}", "starred_url": "https://api.github.com/users/qiming-shi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/qiming-shi/subscriptions", "organizations_url": "https://api.github.com/users/qiming-shi/orgs", "repos_url": "https://api.github.com/users/qiming-shi/repos", "events_url": "https://api.github.com/users/qiming-shi/events{/privacy}", "received_events_url": "https://api.github.com/users/qiming-shi/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 750616506, "node_id": "MDU6TGFiZWw3NTA2MTY1MDY=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/comp:lite", "name": "comp:lite", "color": "0052cc", "default": false, "description": ""}, {"id": 299643928, "node_id": "MDU6TGFiZWwyOTk2NDM5Mjg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:contributions%20welcome", "name": "stat:contributions welcome", "color": "f4b400", "default": false, "description": ""}, {"id": 473173272, "node_id": "MDU6TGFiZWw0NzMxNzMyNzI=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:feature", "name": "type:feature", "color": "159b2e", "default": false, "description": ""}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-06-22T02:19:07Z", "updated_at": "2019-02-23T00:31:37Z", "closed_at": null, "author_association": "NONE", "body": "In tflite, some operations like convolution have openmp support from Eigen library, while for others like depthwise convolution they don't have openmp optimization yet.\r\n\r\nDo we have any plans to add openmp to all operations in tflite?"}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20208", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20208/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20208/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20208/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/20208", "id": 334713552, "node_id": "MDU6SXNzdWUzMzQ3MTM1NTI=", "number": 20208, "title": "tf.distributions.Gamma quantile not implemented, yet exists in documentation", "user": {"login": "MarkGreeny", "id": 40479001, "node_id": "MDQ6VXNlcjQwNDc5MDAx", "avatar_url": "https://avatars3.githubusercontent.com/u/40479001?v=4", "gravatar_id": "", "url": "https://api.github.com/users/MarkGreeny", "html_url": "https://github.com/MarkGreeny", "followers_url": "https://api.github.com/users/MarkGreeny/followers", "following_url": "https://api.github.com/users/MarkGreeny/following{/other_user}", "gists_url": "https://api.github.com/users/MarkGreeny/gists{/gist_id}", "starred_url": "https://api.github.com/users/MarkGreeny/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/MarkGreeny/subscriptions", "organizations_url": "https://api.github.com/users/MarkGreeny/orgs", "repos_url": "https://api.github.com/users/MarkGreeny/repos", "events_url": "https://api.github.com/users/MarkGreeny/events{/privacy}", "received_events_url": "https://api.github.com/users/MarkGreeny/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 404586594, "node_id": "MDU6TGFiZWw0MDQ1ODY1OTQ=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:awaiting%20tensorflower", "name": "stat:awaiting tensorflower", "color": "f4b400", "default": false, "description": ""}], "state": "open", "locked": false, "assignee": {"login": "cy89", "id": 29663194, "node_id": "MDQ6VXNlcjI5NjYzMTk0", "avatar_url": "https://avatars0.githubusercontent.com/u/29663194?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cy89", "html_url": "https://github.com/cy89", "followers_url": "https://api.github.com/users/cy89/followers", "following_url": "https://api.github.com/users/cy89/following{/other_user}", "gists_url": "https://api.github.com/users/cy89/gists{/gist_id}", "starred_url": "https://api.github.com/users/cy89/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cy89/subscriptions", "organizations_url": "https://api.github.com/users/cy89/orgs", "repos_url": "https://api.github.com/users/cy89/repos", "events_url": "https://api.github.com/users/cy89/events{/privacy}", "received_events_url": "https://api.github.com/users/cy89/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "cy89", "id": 29663194, "node_id": "MDQ6VXNlcjI5NjYzMTk0", "avatar_url": "https://avatars0.githubusercontent.com/u/29663194?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cy89", "html_url": "https://github.com/cy89", "followers_url": "https://api.github.com/users/cy89/followers", "following_url": "https://api.github.com/users/cy89/following{/other_user}", "gists_url": "https://api.github.com/users/cy89/gists{/gist_id}", "starred_url": "https://api.github.com/users/cy89/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cy89/subscriptions", "organizations_url": "https://api.github.com/users/cy89/orgs", "repos_url": "https://api.github.com/users/cy89/repos", "events_url": "https://api.github.com/users/cy89/events{/privacy}", "received_events_url": "https://api.github.com/users/cy89/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 12, "created_at": "2018-06-22T01:29:04Z", "updated_at": "2019-08-13T14:26:03Z", "closed_at": null, "author_association": "NONE", "body": "### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**: No\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**:Linux Ubuntu 16.04\r\n- **TensorFlow installed from (source or binary)**: pip\r\n- **TensorFlow version (use command below)**: 1.8\r\n- **Python version**: 3.6\r\n\r\nAtempting to run\r\n\r\n`tf.distributions.Gamma(concentration=10.,rate=0.2).quantile(0)`\r\nwe see that\r\n\r\n> NotImplementedError: quantile is not implemented\r\n\r\nBut in the [documentation](https://www.tensorflow.org/api_docs/python/tf/distributions/Gamma) there is no indication of this function not being implemented, as the function is documented as all others are.\r\n\r\nIs there something missing from my installation and the function should be present, or is it wrongly documented as existing?"}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20201", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20201/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20201/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20201/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/20201", "id": 334644725, "node_id": "MDU6SXNzdWUzMzQ2NDQ3MjU=", "number": 20201, "title": "[FEATURE REQUEST] decode_csv - optionally skip records with empty required fields", "user": {"login": "novog", "id": 16354547, "node_id": "MDQ6VXNlcjE2MzU0NTQ3", "avatar_url": "https://avatars3.githubusercontent.com/u/16354547?v=4", "gravatar_id": "", "url": "https://api.github.com/users/novog", "html_url": "https://github.com/novog", "followers_url": "https://api.github.com/users/novog/followers", "following_url": "https://api.github.com/users/novog/following{/other_user}", "gists_url": "https://api.github.com/users/novog/gists{/gist_id}", "starred_url": "https://api.github.com/users/novog/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/novog/subscriptions", "organizations_url": "https://api.github.com/users/novog/orgs", "repos_url": "https://api.github.com/users/novog/repos", "events_url": "https://api.github.com/users/novog/events{/privacy}", "received_events_url": "https://api.github.com/users/novog/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": {"login": "tatianashp", "id": 986732, "node_id": "MDQ6VXNlcjk4NjczMg==", "avatar_url": "https://avatars2.githubusercontent.com/u/986732?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tatianashp", "html_url": "https://github.com/tatianashp", "followers_url": "https://api.github.com/users/tatianashp/followers", "following_url": "https://api.github.com/users/tatianashp/following{/other_user}", "gists_url": "https://api.github.com/users/tatianashp/gists{/gist_id}", "starred_url": "https://api.github.com/users/tatianashp/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tatianashp/subscriptions", "organizations_url": "https://api.github.com/users/tatianashp/orgs", "repos_url": "https://api.github.com/users/tatianashp/repos", "events_url": "https://api.github.com/users/tatianashp/events{/privacy}", "received_events_url": "https://api.github.com/users/tatianashp/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "tatianashp", "id": 986732, "node_id": "MDQ6VXNlcjk4NjczMg==", "avatar_url": "https://avatars2.githubusercontent.com/u/986732?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tatianashp", "html_url": "https://github.com/tatianashp", "followers_url": "https://api.github.com/users/tatianashp/followers", "following_url": "https://api.github.com/users/tatianashp/following{/other_user}", "gists_url": "https://api.github.com/users/tatianashp/gists{/gist_id}", "starred_url": "https://api.github.com/users/tatianashp/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tatianashp/subscriptions", "organizations_url": "https://api.github.com/users/tatianashp/orgs", "repos_url": "https://api.github.com/users/tatianashp/repos", "events_url": "https://api.github.com/users/tatianashp/events{/privacy}", "received_events_url": "https://api.github.com/users/tatianashp/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 2, "created_at": "2018-06-21T20:27:05Z", "updated_at": "2018-12-14T18:55:42Z", "closed_at": null, "author_association": "NONE", "body": "The function `decode_csv` has a `record_defaults` parameter used to specify the default value for each field. An empty value indicates that the field is required. Currently, if a required field is empty in a record, an InvalidArgumentError is raised with a message indicating the offending record and field numbers.\r\n\r\nIt would be useful to have a new parameter in `decode_csv` that allows you to optionally skip input records with empty required fields. Some examples of why this feature would be helpful:\r\n\r\n- existing data files in which fields that you require are occasionally empty\r\n- data files that are used for multiple purposes that have different required fields\r\n\r\nObligatory issue template requested by tensorflowbutler (I assume that most are irrelevant, since this is a feature request):\r\n\r\nHave I written custom code: Not yet\r\nOS Platform and Distribution: N/A\r\nTensorFlow installed from: N/A\r\nTensorFlow version: N/A\r\nBazel version: N/A\r\nCUDA/cuDNN version: N/A\r\nGPU model and memory: N/A\r\nExact command to reproduce: N/A"}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20162", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20162/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20162/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20162/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/20162", "id": 334248742, "node_id": "MDU6SXNzdWUzMzQyNDg3NDI=", "number": 20162, "title": "Improper attribution for GPLv3 in non-existent directory", "user": {"login": "jamesiri", "id": 22601145, "node_id": "MDQ6VXNlcjIyNjAxMTQ1", "avatar_url": "https://avatars1.githubusercontent.com/u/22601145?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jamesiri", "html_url": "https://github.com/jamesiri", "followers_url": "https://api.github.com/users/jamesiri/followers", "following_url": "https://api.github.com/users/jamesiri/following{/other_user}", "gists_url": "https://api.github.com/users/jamesiri/gists{/gist_id}", "starred_url": "https://api.github.com/users/jamesiri/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jamesiri/subscriptions", "organizations_url": "https://api.github.com/users/jamesiri/orgs", "repos_url": "https://api.github.com/users/jamesiri/repos", "events_url": "https://api.github.com/users/jamesiri/events{/privacy}", "received_events_url": "https://api.github.com/users/jamesiri/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 299643928, "node_id": "MDU6TGFiZWwyOTk2NDM5Mjg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:contributions%20welcome", "name": "stat:contributions welcome", "color": "f4b400", "default": false, "description": ""}, {"id": 284443156, "node_id": "MDU6TGFiZWwyODQ0NDMxNTY=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:docs", "name": "type:docs", "color": "159b2e", "default": false, "description": ""}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-06-20T21:03:55Z", "updated_at": "2018-06-29T05:56:17Z", "closed_at": null, "author_association": "NONE", "body": "### Describe the problem\r\nYou are declaring GPLv3 attribution at https://github.com/tensorflow/tensorflow/blob/v1.8.0/third_party/eigen3/LICENSE#L1011 for a directory that you have removed. The license attributed is also improperly identified as GPLv3 but instead should be GPLv2 as per Eigen's own repo, https://github.com/eigenteam/eigen-git-mirror/blob/master/bench/btl/COPYING.\r\nThe later isn't of much concern since you already removed the directory, but the former shows that you need to update your attribution to correctly reflect what is in the package. Thanks!"}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20142", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20142/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20142/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20142/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/20142", "id": 333996696, "node_id": "MDU6SXNzdWUzMzM5OTY2OTY=", "number": 20142, "title": " use the stream builder to invoke FFT library fail in custom op ", "user": {"login": "laurentk67", "id": 16876678, "node_id": "MDQ6VXNlcjE2ODc2Njc4", "avatar_url": "https://avatars1.githubusercontent.com/u/16876678?v=4", "gravatar_id": "", "url": "https://api.github.com/users/laurentk67", "html_url": "https://github.com/laurentk67", "followers_url": "https://api.github.com/users/laurentk67/followers", "following_url": "https://api.github.com/users/laurentk67/following{/other_user}", "gists_url": "https://api.github.com/users/laurentk67/gists{/gist_id}", "starred_url": "https://api.github.com/users/laurentk67/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/laurentk67/subscriptions", "organizations_url": "https://api.github.com/users/laurentk67/orgs", "repos_url": "https://api.github.com/users/laurentk67/repos", "events_url": "https://api.github.com/users/laurentk67/events{/privacy}", "received_events_url": "https://api.github.com/users/laurentk67/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 473184161, "node_id": "MDU6TGFiZWw0NzMxODQxNjE=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:support", "name": "type:support", "color": "159b2e", "default": false, "description": ""}], "state": "open", "locked": false, "assignee": {"login": "tatianashp", "id": 986732, "node_id": "MDQ6VXNlcjk4NjczMg==", "avatar_url": "https://avatars2.githubusercontent.com/u/986732?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tatianashp", "html_url": "https://github.com/tatianashp", "followers_url": "https://api.github.com/users/tatianashp/followers", "following_url": "https://api.github.com/users/tatianashp/following{/other_user}", "gists_url": "https://api.github.com/users/tatianashp/gists{/gist_id}", "starred_url": "https://api.github.com/users/tatianashp/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tatianashp/subscriptions", "organizations_url": "https://api.github.com/users/tatianashp/orgs", "repos_url": "https://api.github.com/users/tatianashp/repos", "events_url": "https://api.github.com/users/tatianashp/events{/privacy}", "received_events_url": "https://api.github.com/users/tatianashp/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "tatianashp", "id": 986732, "node_id": "MDQ6VXNlcjk4NjczMg==", "avatar_url": "https://avatars2.githubusercontent.com/u/986732?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tatianashp", "html_url": "https://github.com/tatianashp", "followers_url": "https://api.github.com/users/tatianashp/followers", "following_url": "https://api.github.com/users/tatianashp/following{/other_user}", "gists_url": "https://api.github.com/users/tatianashp/gists{/gist_id}", "starred_url": "https://api.github.com/users/tatianashp/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tatianashp/subscriptions", "organizations_url": "https://api.github.com/users/tatianashp/orgs", "repos_url": "https://api.github.com/users/tatianashp/repos", "events_url": "https://api.github.com/users/tatianashp/events{/privacy}", "received_events_url": "https://api.github.com/users/tatianashp/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 3, "created_at": "2018-06-20T09:31:39Z", "updated_at": "2018-12-14T18:55:38Z", "closed_at": null, "author_association": "NONE", "body": "### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**:\r\nYes\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**:\r\nCentos /Linux\r\n- **TensorFlow installed from (source or binary)**:\r\nBinary\r\n- **TensorFlow version (use command below)**:\r\n1.8.0\r\n- **Python version**: \r\n3.5\r\n- **Bazel version (if compiling from source)**:\r\n- **GCC/Compiler version (if compiling from source)**:\r\n- **CUDA/cuDNN version**:\r\nCUDA Version 9.0.176  cuDNN 7.0.5\r\n- **GPU model and memory**:\r\nGeForce GTX TITAN X major: 5 minor: 2 memoryClockRate(GHz): 1.076\r\n- **Exact command to reproduce**:\r\nI'm writing a custom op performing image alignment. The module is performing several FFT operations on GPU .  I created a simple custom op to reproduce the issue with the stream builder method.\r\nI didn't find any real example, I followed the comments given in the code  stream_executor/fft.h  \r\n\r\nThe portion of the code that is causing the error  is bellow  ( Create1dPlan ...)  with the corresponding trace log.\r\nI also attached the full code  to produce the custom op at the bottom.\r\nThanks for any help !\r\n``` javascript\r\nvoid launchFFT(\r\n  OpKernelContext* context,\r\n  const Tensor& x,\r\n   Tensor* y)\r\n{\r\nauto dev_ctx = context->op_device_context();\r\nOP_REQUIRES(context, dev_ctx->stream(), errors::Internal(\"No stream available.\"));\r\nauto stream_exec=dev_ctx->stream()->parent();\r\nperftools::gputools::DeviceMemory<std::complex<float>>X=stream_exec>AllocateArray<std::complex<float>>(1024);\r\nperftools::gputools::DeviceMemory<std::complex<float>>Y=stream_exec>AllocateArray<std::complex<float>>(1024);\r\n /* ... populate x and y ... TBD*/\r\nStream stream{stream_exec};\r\nprintf(\"Create1dPlan and ... die\\n\");\r\nstd::unique_ptr<Plan> plan =stream_exec->AsFft()->Create1dPlan(&stream, 1024,Type::kC2CForward,false);\r\nstream.Init().ThenFft(plan.get(), X, &Y);\r\nSE_CHECK_OK(stream.BlockHostUntilDone());\r\n}\r\n```\r\n\r\n\r\n018-06-20 02:12:43.373297: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1435] Adding visible gpu devices: 0\r\n2018-06-20 02:12:43.524101: I tensorflow/core/common_runtime/gpu/gpu_device.cc:923] Device interconnect StreamExecutor with strength 1 edge matrix:\r\n2018-06-20 02:12:43.524119: I tensorflow/core/common_runtime/gpu/gpu_device.cc:929]      0 \r\n2018-06-20 02:12:43.524123: I tensorflow/core/common_runtime/gpu/gpu_device.cc:942] 0:   N \r\n2018-06-20 02:12:43.524320: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1053] Created TensorFlow device (/job:localhost/replica:0/task:0/device:GPU:0 with 11431 MB memory) -> physical GPU (device: 0, name: GeForce GTX TITAN X, pci bus id: 0000:06:00.0, compute capability: 5.2)\r\nlaunchFFT\r\nCreate1dPlan and ... die\r\n**2018-06-20 02:12:43.603606: F tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:112] Check failed: cuda_exec != nullptr** \r\n\r\nProcess finished with exit code 134 (interrupted by signal 6: SIGABRT) \r\n\r\nThe sources of the custom op to reproduce the problem are bellow:\r\n**dummyFFT.cc**\r\n```javascript\r\n#include \"third_party/eigen3/unsupported/Eigen/CXX11/Tensor\"\r\n#include \"tensorflow/core/framework/op.h\"\r\n#include \"tensorflow/core/framework/op_kernel.h\"\r\n#include \"tensorflow/core/framework/register_types.h\"\r\n#include \"tensorflow/core/framework/shape_inference.h\"\r\n\r\nnamespace tensorflow\r\n{\r\ntypedef Eigen::GpuDevice GPUDevice;\r\n\r\nusing shape_inference::ShapeHandle;\r\nusing shape_inference::InferenceContext;\r\nusing shape_inference::DimensionHandle;\r\n\r\nREGISTER_OP(\"DummyFft\")\r\n.Input(\"float: float32\")\r\n.Output(\"output: float32\")\r\n.SetShapeFn([](InferenceContext* ctx) {\r\n    // Get shapes and ensure correct dimensionality\r\n    ShapeHandle in_shape;\r\n    TF_RETURN_IF_ERROR(ctx->WithRank(ctx->input(0), 2, &in_shape));\r\n    // Construct and set the output shape\r\n   ctx->set_output(0, in_shape);\r\n    return Status::OK();\r\n});\r\n\r\nvoid launchFFT(\r\n  OpKernelContext* ctx,\r\n  const Tensor& x,\r\n  Tensor* y);\r\n\r\nclass launchFFTOp : public OpKernel\r\n{\r\n public:\r\n  explicit launchFFTOp(OpKernelConstruction* ctx) : OpKernel(ctx) { }\r\n\r\n  void Compute(OpKernelContext* ctx) override\r\n  {\r\n    // Get inputs\r\n    const Tensor& input = ctx->input(0);\r\n    // Setup output shape\r\n    const TensorShape& input_shape(input.shape());\r\n    TensorShape output_shape(input.shape());\r\n    // Allocate output tensor\r\n    Tensor* output = nullptr;\r\n    OP_REQUIRES_OK(ctx, ctx->allocate_output(0, output_shape, &output));\r\n    printf(\"launchFFT\\n\");\r\n    launchFFT(ctx, input,output);\r\n\r\n  }\r\n};\r\n```\r\n**dummyFFT.cu.cc**\r\n```javascript\r\n#if GOOGLE_CUDA\r\n#define EIGEN_USE_GPU\r\n\r\n#include \"third_party/eigen3/unsupported/Eigen/CXX11/Tensor\"\r\n#include \"tensorflow/core/framework/register_types.h\"\r\n#include \"tensorflow/core/platform/types.h\"\r\n#include \"tensorflow/core/util/cuda_kernel_helper.h\"\r\n#include \"tensorflow/core/platform/stream_executor.h\"\r\n\r\nusing namespace perftools::gputools::fft;\r\n\r\nusing namespace perftools::gputools;\r\n\r\n\r\n\r\ntypedef Eigen::GpuDevice GPUDevice;\r\nnamespace tensorflow\r\n{\r\nnamespace {\r\n\r\ntemplate <typename T>\r\n\tperftools::gputools::DeviceMemory<T> AsDeviceMemory(const T* cuda_memory) {\r\n\tperftools::gputools::DeviceMemoryBase wrapped(const_cast<T*>(cuda_memory));\r\n\tperftools::gputools::DeviceMemory<T> typed(wrapped);\r\n  return typed;\r\n}\r\n\r\n}  // end namespace\r\n\r\n\r\nvoid launchFFT(\r\n  OpKernelContext* context,\r\n  const Tensor& x,\r\n   Tensor* y)\r\n{\r\nauto dev_ctx = context->op_device_context();\r\nOP_REQUIRES(context, dev_ctx->stream(), errors::Internal(\"No stream available.\"));\r\nauto stream_exec=dev_ctx->stream()->parent();\r\nperftools::gputools::DeviceMemory<std::complex<float>>X=stream_exec>AllocateArray<std::complex<float>>(1024);\r\nperftools::gputools::DeviceMemory<std::complex<float>>Y=stream_exec>AllocateArray<std::complex<float>>(1024);\r\n /* ... populate x and y ... TBD*/\r\nStream stream{stream_exec};\r\nprintf(\"Create1dPlan and ... die\\n\");\r\nstd::unique_ptr<Plan> plan =stream_exec->AsFft()->Create1dPlan(&stream, 1024,Type::kC2CForward,false);\r\nstream.Init().ThenFft(plan.get(), X, &Y);\r\nSE_CHECK_OK(stream.BlockHostUntilDone());\r\n}\r\n\r\n\r\n}  // namespace TensorFlow\r\n#endif\r\n```\r\n\r\n**makefile**\r\n```\r\nTF_CFLAGS := $(shell python3 -c 'import tensorflow as tf; print(\" \".join(tf.sysconfig.get_compile_flags()))')\r\nTF_LIB := $(shell python -c 'import tensorflow as tf; print(tf.sysconfig.get_lib())')\r\n\r\nCUDA_LIB=/usr/local/cuda/lib64\r\n\r\nall: dummyFFT.cu.o dummyFFT.cu.cc dummyFFT.cc \r\n\tnvcc -std=c++11 -c -o dummyFFT.cu.o dummyFFT.cu.cc  $(TF_CFLAGS) -D GOOGLE_CUDA=1 -x cu -Xcompiler -fPIC --expt-relaxed-constexpr -ltensorfow_framework -I /usr/local -I /usr/local/cuda/include -O3\r\n\tg++ -std=c++11 -shared -o dummyFFT_op.so dummyFFT.cc dummyFFT.cu.o   $(TF_CFLAGS) -fPIC -O3 -L$(CUDA_LIB) -lcudart -L$(TF_LIB) -ltensorflow_framework\r\n```\r\nThe Python functions:\r\n\r\n**test.py** The main python  file to run the custom op\r\n```javascript\r\nimport tensorflow as tf\r\nimport numpy as np\r\n\r\nfrom dummyFFT import dummy_fft\r\n\r\n\r\ndef test():\r\n\r\n    x = np.random.rand(10,10).astype(np.float32)\r\n    x_ph = tf.placeholder(tf.float32, (10,10))\r\n    out=dummy_fft(x_ph)\r\n\r\n    with tf.Session() as sess:\r\n        _out = sess.run(out, feed_dict={x_ph: x})\r\n\r\n\r\nif __name__ == \"__main__\":\r\n    test()\r\n```\r\n\r\n**dummyFFT.py**  used to load the library \r\n```javascript\r\nimport tensorflow as tf\r\nfrom tensorflow.python.framework import ops\r\n\r\nop_module = tf.load_op_library('dummyFFT_op.so')\r\n\r\n\r\ndef dummy_fft(x):\r\n    return op_module.dummy_fft(x)\r\n```\r\n\r\n\r\n\r\n\r\n"}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20140", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20140/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20140/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20140/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/20140", "id": 333963701, "node_id": "MDU6SXNzdWUzMzM5NjM3MDE=", "number": 20140, "title": "Find a bug in tensorflow", "user": {"login": "zyj183247166", "id": 7501074, "node_id": "MDQ6VXNlcjc1MDEwNzQ=", "avatar_url": "https://avatars2.githubusercontent.com/u/7501074?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zyj183247166", "html_url": "https://github.com/zyj183247166", "followers_url": "https://api.github.com/users/zyj183247166/followers", "following_url": "https://api.github.com/users/zyj183247166/following{/other_user}", "gists_url": "https://api.github.com/users/zyj183247166/gists{/gist_id}", "starred_url": "https://api.github.com/users/zyj183247166/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zyj183247166/subscriptions", "organizations_url": "https://api.github.com/users/zyj183247166/orgs", "repos_url": "https://api.github.com/users/zyj183247166/repos", "events_url": "https://api.github.com/users/zyj183247166/events{/privacy}", "received_events_url": "https://api.github.com/users/zyj183247166/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 299643928, "node_id": "MDU6TGFiZWwyOTk2NDM5Mjg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:contributions%20welcome", "name": "stat:contributions welcome", "color": "f4b400", "default": false, "description": ""}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2018-06-20T07:55:39Z", "updated_at": "2018-06-29T01:55:25Z", "closed_at": null, "author_association": "NONE", "body": "write the code below, and save it to  a ,ckpt as a model\r\n```\r\nimport tensorflow as tf`\r\nv1 = tf.Variable(tf.constant(1.0, shape=[1]), name = \"v1\")\r\nv2 = tf.Variable(tf.constant(2.0, shape=[1]), name = \"v2\")\r\nv3 = tf.Variable(tf.constant(3.0, shape=[1]), name = \"v3\")\r\nresult=v1+v2\r\nresult2= result + v3\r\n\r\ninit_op = tf.global_variables_initializer()\r\nsaver = tf.train.Saver()\r\n\r\nwith tf.Session() as sess:\r\n    sess.run(init_op)\r\n    writer = tf.summary.FileWriter('./graphs/const_add', sess.graph)\r\n    saver.save(sess, \"Saved_model/model.ckpt\")`\r\n```\r\nthen in another .py\uff0c we restore the model from the model.ckpt file\r\n```\r\nimport tensorflow as tf\r\nsaver = tf.train.import_meta_graph(\"Saved_model/model.ckpt.meta\")\r\nwith tf.Session() as sess:\r\n    saver.restore(sess, \"Saved_model/model.ckpt\")\r\n    print (sess.run(tf.get_default_graph().get_tensor_by_name(\"add:0\")))\r\n    #sess.run(tf.assign(v1,[10])) #\u76f4\u63a5\u8fd9\u6837\u4f7f\u7528v1\uff0c\u4f1a\u63d0\u793av1\u6ca1\u6709\u5b9a\u4e49\r\n    \r\n    #with tf.variable_scope(\"\",reuse=tf.AUTO_REUSE):\r\n    with tf.variable_scope(\"\",reuse=False):\r\n        v1=tf.get_variable(name=\"v1\",shape=[1])\r\n        print(v1.name)\r\n    sess.run(tf.assign(v1,[10]))\r\n    \"\"\"\u2463\u8f93\u51fa\u6240\u6709\u53ef\u8bad\u7ec3\u7684\u53d8\u91cf\u540d\u79f0\uff0c\u4e5f\u5c31\u662f\u795e\u7ecf\u7f51\u7edc\u7684\u53c2\u6570\"\"\"\r\n    trainable_variables=tf.trainable_variables()\r\n    variable_list_name = [c.name for c in tf.trainable_variables()]\r\n    variable_list = sess.run(variable_list_name)\r\n    for k,v in zip(variable_list_name,variable_list):\r\n        print(\"variable name:\",k)\r\n        print(\"shape:\",v.shape)\r\n            #print(v) \r\n    \"\"\"\u2463\u8f93\u51fa\u6240\u6709\u53ef\u8bad\u7ec3\u7684\u53d8\u91cf\u540d\u79f0\uff0c\u4e5f\u5c31\u662f\u795e\u7ecf\u7f51\u7edc\u7684\u53c2\u6570\"\"\"\r\n    print (sess.run(tf.get_default_graph().get_tensor_by_name(\"v1:0\")))\r\n    print (sess.run(tf.get_default_graph().get_tensor_by_name(\"add:0\")))\r\n    print (sess.run(tf.get_default_graph().get_tensor_by_name(\"add_1:0\")))\r\n    print (sess.run(tf.get_default_graph().get_tensor_by_name(\"v1_1:0\")))\r\n```\r\nthe results will be as below:\r\n![image](https://user-images.githubusercontent.com/7501074/41644510-d1957e98-74a0-11e8-9327-7e2cd5ccd438.png)\r\nwe will find that:\r\nif we restore some variables from the already existed model file \"\"Saved_model/model.ckpt.meta\")\",\r\nsuch as v1,v2,v3 in this example.\r\nit will influence the process of calling get_variable. Because of these two causes as below:\r\n1. the variables restored from the model file such as v1,v2 and v3 will not exist in the scope of get_variable, it means you can only use\r\n```\r\nwith tf.variable_scope(\"\",reuse=False):\r\n        v1=tf.get_variable(name=\"v1\",shape=[1])\r\n```\r\nand create a new variable.  you can not  reuse the restored variable v1 from the model file unless you define a v1 , before you restore from the model file. like below\r\n```\r\nv1=tf.get_variable(name=\"v1\",shape=[1])\r\nsaver = tf.train.Saver()\r\nwith tf.Session() as sess:\r\n    saver.restore(sess, \"Saved_model/model.ckpt\")\r\n    print (sess.run(result))\r\n```\r\nthat is , you can not reuse the restored variable v1 which is from restoring the model file unless you define it befor you restore.\r\n2.  although tensorflow doesnot allow reusing the restored variable v1 which is from restoring the model file if you don't define v1 before you restore the model file.\r\nBut if you call get_varialbe after you restore the model file, it will create a variable whose name is \"v1_1\" but not as name='v1' which you specify.\r\n    in my opinion, it should be corrected because it is so confusing.  how to correct it?\r\ni think get_variable should also reuse the variables which is loaded by restoring some model file.\r\nthe last sentence is what i finally want to say. \r\nMy english is to bad, you can run the code i offer and will find what i want to convey. \r\nThanks.\r\n\r\n"}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20138", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20138/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20138/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20138/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/20138", "id": 333939372, "node_id": "MDU6SXNzdWUzMzM5MzkzNzI=", "number": 20138, "title": "Can I insert a node in a graph with graph_editor?", "user": {"login": "psyyz10", "id": 7493169, "node_id": "MDQ6VXNlcjc0OTMxNjk=", "avatar_url": "https://avatars2.githubusercontent.com/u/7493169?v=4", "gravatar_id": "", "url": "https://api.github.com/users/psyyz10", "html_url": "https://github.com/psyyz10", "followers_url": "https://api.github.com/users/psyyz10/followers", "following_url": "https://api.github.com/users/psyyz10/following{/other_user}", "gists_url": "https://api.github.com/users/psyyz10/gists{/gist_id}", "starred_url": "https://api.github.com/users/psyyz10/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/psyyz10/subscriptions", "organizations_url": "https://api.github.com/users/psyyz10/orgs", "repos_url": "https://api.github.com/users/psyyz10/repos", "events_url": "https://api.github.com/users/psyyz10/events{/privacy}", "received_events_url": "https://api.github.com/users/psyyz10/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": {"login": "shivaniag", "id": 16565716, "node_id": "MDQ6VXNlcjE2NTY1NzE2", "avatar_url": "https://avatars1.githubusercontent.com/u/16565716?v=4", "gravatar_id": "", "url": "https://api.github.com/users/shivaniag", "html_url": "https://github.com/shivaniag", "followers_url": "https://api.github.com/users/shivaniag/followers", "following_url": "https://api.github.com/users/shivaniag/following{/other_user}", "gists_url": "https://api.github.com/users/shivaniag/gists{/gist_id}", "starred_url": "https://api.github.com/users/shivaniag/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/shivaniag/subscriptions", "organizations_url": "https://api.github.com/users/shivaniag/orgs", "repos_url": "https://api.github.com/users/shivaniag/repos", "events_url": "https://api.github.com/users/shivaniag/events{/privacy}", "received_events_url": "https://api.github.com/users/shivaniag/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "shivaniag", "id": 16565716, "node_id": "MDQ6VXNlcjE2NTY1NzE2", "avatar_url": "https://avatars1.githubusercontent.com/u/16565716?v=4", "gravatar_id": "", "url": "https://api.github.com/users/shivaniag", "html_url": "https://github.com/shivaniag", "followers_url": "https://api.github.com/users/shivaniag/followers", "following_url": "https://api.github.com/users/shivaniag/following{/other_user}", "gists_url": "https://api.github.com/users/shivaniag/gists{/gist_id}", "starred_url": "https://api.github.com/users/shivaniag/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/shivaniag/subscriptions", "organizations_url": "https://api.github.com/users/shivaniag/orgs", "repos_url": "https://api.github.com/users/shivaniag/repos", "events_url": "https://api.github.com/users/shivaniag/events{/privacy}", "received_events_url": "https://api.github.com/users/shivaniag/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 4, "created_at": "2018-06-20T06:24:18Z", "updated_at": "2019-03-08T20:08:40Z", "closed_at": null, "author_association": "NONE", "body": "For example:\r\n\r\nI have a graph like:\r\n\r\n```\r\nA -> B -> C\r\n```\r\n\r\nAnd I want to select some indices of the output of B to , like that:\r\n\r\n```\r\nA -> B -> tf.gather(B, indices) -> C\r\n```\r\n\r\nIs it possilbe?"}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20098", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20098/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20098/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20098/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/20098", "id": 333329604, "node_id": "MDU6SXNzdWUzMzMzMjk2MDQ=", "number": 20098, "title": "Feature Request: Document Best Practice For Feeding New Data to a Restored Metagraph", "user": {"login": "masonk", "id": 449998, "node_id": "MDQ6VXNlcjQ0OTk5OA==", "avatar_url": "https://avatars0.githubusercontent.com/u/449998?v=4", "gravatar_id": "", "url": "https://api.github.com/users/masonk", "html_url": "https://github.com/masonk", "followers_url": "https://api.github.com/users/masonk/followers", "following_url": "https://api.github.com/users/masonk/following{/other_user}", "gists_url": "https://api.github.com/users/masonk/gists{/gist_id}", "starred_url": "https://api.github.com/users/masonk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/masonk/subscriptions", "organizations_url": "https://api.github.com/users/masonk/orgs", "repos_url": "https://api.github.com/users/masonk/repos", "events_url": "https://api.github.com/users/masonk/events{/privacy}", "received_events_url": "https://api.github.com/users/masonk/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": {"login": "jsimsa", "id": 1072079, "node_id": "MDQ6VXNlcjEwNzIwNzk=", "avatar_url": "https://avatars2.githubusercontent.com/u/1072079?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsimsa", "html_url": "https://github.com/jsimsa", "followers_url": "https://api.github.com/users/jsimsa/followers", "following_url": "https://api.github.com/users/jsimsa/following{/other_user}", "gists_url": "https://api.github.com/users/jsimsa/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsimsa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsimsa/subscriptions", "organizations_url": "https://api.github.com/users/jsimsa/orgs", "repos_url": "https://api.github.com/users/jsimsa/repos", "events_url": "https://api.github.com/users/jsimsa/events{/privacy}", "received_events_url": "https://api.github.com/users/jsimsa/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "jsimsa", "id": 1072079, "node_id": "MDQ6VXNlcjEwNzIwNzk=", "avatar_url": "https://avatars2.githubusercontent.com/u/1072079?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsimsa", "html_url": "https://github.com/jsimsa", "followers_url": "https://api.github.com/users/jsimsa/followers", "following_url": "https://api.github.com/users/jsimsa/following{/other_user}", "gists_url": "https://api.github.com/users/jsimsa/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsimsa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsimsa/subscriptions", "organizations_url": "https://api.github.com/users/jsimsa/orgs", "repos_url": "https://api.github.com/users/jsimsa/repos", "events_url": "https://api.github.com/users/jsimsa/events{/privacy}", "received_events_url": "https://api.github.com/users/jsimsa/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 12, "created_at": "2018-06-18T15:51:38Z", "updated_at": "2019-08-05T18:16:28Z", "closed_at": null, "author_association": "NONE", "body": "### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**:\r\n\r\nYes, custom code\r\n\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**:\r\n\r\nLinux Ubuntu 16.04\r\n\r\n- **TensorFlow installed from (source or binary)**:\r\n\r\nBinary\r\n\r\n- **TensorFlow version (use command below)**:\r\n\r\n1.7\r\n\r\n- **Python version**: \r\n\r\n3.x\r\n\r\n\r\n### Describe the problem\r\nI would like to produce and persist a model, represented by a metagraph, then restore it and feed it from a different data source, such as from a different Dataset. Despite being a natural thing to want to do, it is not easy to find out how to do this from official documentation. In particular, there's no  'best practice' shown anywhere in the docs.\r\n\r\nToday, the only way I have found of doing this is to build the graph with a feedable iterator (as described in the comments to #11679), and then saving+restoring the iterator _handle_ so that I can feed in new iterator by handle on every train step.\r\n\r\nAs a secondary issue, I think it would make more sense to save and restore a reinitializable iterator to the metagraph. Then, in the restored session, I could pull that reinitializable iterator out of the restored metagraph and reinitialize it from a new dataset.  No way that I tried of doing this actually worked. Although I could save the iterator with `make_saveable_from_iterator_`, the necessary `make_initializer` function wasn't present on the restored object; it didn't survive the roundtrip to disk.\r\n\r\n\r\n### Source code / logs\r\n@annarailton gives a full source code for the handle-based method of iterator persistence in this comment:\r\nhttps://github.com/tensorflow/tensorflow/issues/11679#issuecomment-395722710\r\n\r\nI independently came up with functionally equivalent code after several hours of work, then found her code by searching to see if anyone else was doing it with feedables. I was searching because it felt wrongish (inefficient) and the docs gave no endorsement for this approach.\r\n\r\nSo in the end, I have two related requests:\r\n\r\n1. Document the current best practice for attaching new data to the inputs of a restored metagraph.\r\n\r\ne.g. https://www.tensorflow.org/programmers_guide/datasets#saving_iterator_state should show this best practice. I believe this is by far the most common thing to want to do with a restored metagraph, likely to be far more common than resuming an existing iterator as shown in the docs.\r\n\r\n2. Provide an efficient way to attach a new data to a restored metagraph.\r\n\r\nIt may be that the handle lookup in the feedable iterator method is efficient. In that case, this second request is a no-op. \r\n\r\nFinally, I'm happy to give you a PR for datasets#saving_iterator_state to show the handle based feeding method, if you'd like one."}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20086", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20086/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20086/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20086/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/20086", "id": 333097463, "node_id": "MDU6SXNzdWUzMzMwOTc0NjM=", "number": 20086, "title": "Potential overflow in libhdfs wrapper", "user": {"login": "superbobry", "id": 185856, "node_id": "MDQ6VXNlcjE4NTg1Ng==", "avatar_url": "https://avatars1.githubusercontent.com/u/185856?v=4", "gravatar_id": "", "url": "https://api.github.com/users/superbobry", "html_url": "https://github.com/superbobry", "followers_url": "https://api.github.com/users/superbobry/followers", "following_url": "https://api.github.com/users/superbobry/following{/other_user}", "gists_url": "https://api.github.com/users/superbobry/gists{/gist_id}", "starred_url": "https://api.github.com/users/superbobry/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/superbobry/subscriptions", "organizations_url": "https://api.github.com/users/superbobry/orgs", "repos_url": "https://api.github.com/users/superbobry/repos", "events_url": "https://api.github.com/users/superbobry/events{/privacy}", "received_events_url": "https://api.github.com/users/superbobry/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-06-17T22:17:45Z", "updated_at": "2020-02-08T01:14:30Z", "closed_at": null, "author_association": "MEMBER", "body": "### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**: Yes\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**: macOS\r\n- **TensorFlow installed from (source or binary)**: binary\r\n- **TensorFlow version (use command below)**: v1.8.0-0-g93bc2e2072 1.8.0\r\n- **Python version**: 3.6\r\n- **Bazel version (if compiling from source)**: N/A\r\n- **GCC/Compiler version (if compiling from source)**: N/A\r\n- **CUDA/cuDNN version**: N/A\r\n- **GPU model and memory**: N/A\r\n- **Exact command to reproduce**: see below\r\n\r\n### Describe the problem\r\n\r\nThe following snippet works fine until 2^30; 2^31 results in EINVAL, and >2^31 it produces zero-sized files. I wonder if this is an issue in the TF wrapper or rather in libhdfs itself.\r\n\r\n```python\r\n>>> for size in [2**30, 2**31, 2**32]:\r\n...     try:\r\n...         result = write_read(\"hdfs://root/user/s.lebedev/test\", size)\r\n...     except Exception as e:\r\n...         result = e\r\n...     print(\">\", size, \"<\", result)\r\n...\r\n> 1073741824 < 1073741824\r\n> 2147483648 < hdfs://root/user/s.lebedev/test; Invalid argument\r\n> 4294967296 < 0\r\n```\r\n\r\n### Source code / logs\r\n\r\n```python\r\ndef write_read(path, size):\r\n    b = bytes(memoryview(np.ones(size, dtype=np.uint8)))\r\n    with tf.gfile.Open(path, \"wb\") as f:\r\n        f.write(b)\r\n    return len(tf.gfile.Open(path, \"rb\").read())\r\n```"}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20072", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20072/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20072/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20072/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/20072", "id": 332959972, "node_id": "MDU6SXNzdWUzMzI5NTk5NzI=", "number": 20072, "title": "Partial model loaded SavedModelBundle without exception", "user": {"login": "frankzhangrui", "id": 8742978, "node_id": "MDQ6VXNlcjg3NDI5Nzg=", "avatar_url": "https://avatars0.githubusercontent.com/u/8742978?v=4", "gravatar_id": "", "url": "https://api.github.com/users/frankzhangrui", "html_url": "https://github.com/frankzhangrui", "followers_url": "https://api.github.com/users/frankzhangrui/followers", "following_url": "https://api.github.com/users/frankzhangrui/following{/other_user}", "gists_url": "https://api.github.com/users/frankzhangrui/gists{/gist_id}", "starred_url": "https://api.github.com/users/frankzhangrui/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/frankzhangrui/subscriptions", "organizations_url": "https://api.github.com/users/frankzhangrui/orgs", "repos_url": "https://api.github.com/users/frankzhangrui/repos", "events_url": "https://api.github.com/users/frankzhangrui/events{/privacy}", "received_events_url": "https://api.github.com/users/frankzhangrui/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": {"login": "tatianashp", "id": 986732, "node_id": "MDQ6VXNlcjk4NjczMg==", "avatar_url": "https://avatars2.githubusercontent.com/u/986732?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tatianashp", "html_url": "https://github.com/tatianashp", "followers_url": "https://api.github.com/users/tatianashp/followers", "following_url": "https://api.github.com/users/tatianashp/following{/other_user}", "gists_url": "https://api.github.com/users/tatianashp/gists{/gist_id}", "starred_url": "https://api.github.com/users/tatianashp/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tatianashp/subscriptions", "organizations_url": "https://api.github.com/users/tatianashp/orgs", "repos_url": "https://api.github.com/users/tatianashp/repos", "events_url": "https://api.github.com/users/tatianashp/events{/privacy}", "received_events_url": "https://api.github.com/users/tatianashp/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "tatianashp", "id": 986732, "node_id": "MDQ6VXNlcjk4NjczMg==", "avatar_url": "https://avatars2.githubusercontent.com/u/986732?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tatianashp", "html_url": "https://github.com/tatianashp", "followers_url": "https://api.github.com/users/tatianashp/followers", "following_url": "https://api.github.com/users/tatianashp/following{/other_user}", "gists_url": "https://api.github.com/users/tatianashp/gists{/gist_id}", "starred_url": "https://api.github.com/users/tatianashp/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tatianashp/subscriptions", "organizations_url": "https://api.github.com/users/tatianashp/orgs", "repos_url": "https://api.github.com/users/tatianashp/repos", "events_url": "https://api.github.com/users/tatianashp/events{/privacy}", "received_events_url": "https://api.github.com/users/tatianashp/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2018-06-16T04:38:24Z", "updated_at": "2018-12-14T18:55:20Z", "closed_at": null, "author_association": "NONE", "body": "### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**: No\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**: Linux Ubuntu 16.04\r\n- **TensorFlow installed from (source or binary)**: binary\r\n- **TensorFlow version (use command below)**: None\r\n- **Python version**:  None\r\n- **Bazel version (if compiling from source)**: None\r\n- **GCC/Compiler version (if compiling from source)**: None\r\n- **CUDA/cuDNN version**: None\r\n- **GPU model and memory**: None\r\n- **Exact command to reproduce**: None\r\n\r\n### Describe the problem\r\nBackground\r\n\r\nI am training a tensorflow with python and trying to load it in java for serving with SavedModelBundle.\r\n\r\nSample mode directory\r\n.\r\n\u251c\u2500\u2500 saved_model.pb\r\n\u2514\u2500\u2500 variables\r\n    \u251c\u2500\u2500 variables.data-00000-of-00001\r\n    \u2514\u2500\u2500 variables.index\r\n\r\nProblem\r\n\r\nThe thing is my model is published on hdfs and during downloading, some instances of the prediction server downloaded a partial model path with incomplete variables. Somehow SavedModelBundle is still able to load the partial model path into memory. Then when I actually query the service, I will get a lot of java.lang.IllegalStateException: Attempting to use uninitialized value *** in some node.\r\n\r\nMy question is how can I prevent this from happening? I can think of\r\n\r\nI need to check if downloading is successful before loading it.\r\nHave a way to throw an exception in SavedModelBundle when loading the partial model.\r\n\r\n### Source code / logs\r\nExceptions like \r\njava.lang.IllegalStateException: Attempting to use uninitialized value ***\r\n"}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20050", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20050/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20050/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20050/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/20050", "id": 332709549, "node_id": "MDU6SXNzdWUzMzI3MDk1NDk=", "number": 20050, "title": "tf.contrib.rnn.LSTMCell wrong documentation and unclear naming  ", "user": {"login": "oldsqlwnb", "id": 33448641, "node_id": "MDQ6VXNlcjMzNDQ4NjQx", "avatar_url": "https://avatars2.githubusercontent.com/u/33448641?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oldsqlwnb", "html_url": "https://github.com/oldsqlwnb", "followers_url": "https://api.github.com/users/oldsqlwnb/followers", "following_url": "https://api.github.com/users/oldsqlwnb/following{/other_user}", "gists_url": "https://api.github.com/users/oldsqlwnb/gists{/gist_id}", "starred_url": "https://api.github.com/users/oldsqlwnb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oldsqlwnb/subscriptions", "organizations_url": "https://api.github.com/users/oldsqlwnb/orgs", "repos_url": "https://api.github.com/users/oldsqlwnb/repos", "events_url": "https://api.github.com/users/oldsqlwnb/events{/privacy}", "received_events_url": "https://api.github.com/users/oldsqlwnb/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 299643928, "node_id": "MDU6TGFiZWwyOTk2NDM5Mjg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:contributions%20welcome", "name": "stat:contributions welcome", "color": "f4b400", "default": false, "description": ""}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2018-06-15T09:40:19Z", "updated_at": "2018-11-15T08:32:30Z", "closed_at": null, "author_association": "NONE", "body": "### Describe the problem\r\n1.\r\nIn the documentation at [https://www.tensorflow.org/api_docs/python/tf/contrib/rnn/LSTMCell](url) it says: \r\n\r\n> Long short-term memory unit (LSTM) recurrent network cell. The default non-peephole implementation is based on: http://www.bioinf.jku.at/publications/older/2604.pdf S. Hochreiter and J. Schmidhuber. \"Long Short-Term Memory\". Neural Computation, 9(8):1735-1780, 1997\r\n\r\nThis is not true since the implementation already contains the forget gate which was not mentioned in the original paper but in this one: \r\n\r\n> \"Learning to Forget: Continual Prediction with LSTM\" by Gers et al.\r\n\r\n2.\r\nThe naming of the parameter `num_units` or the `LSTMcell` is  is unclear and causes a lot of confusion. (google \"num_units lstm cell\" and you will find countless posts with the same question: what does it mean?)\r\n\r\nSince the number of units within an LSTM cell is fixed, `num_units` should either be `memory_cell_block_size` as it is described in the \"Long Short-Term Memory\" paper and/or rename `LSTMcell` into `LSTMMemoryCellBlock`\r\n\r\n### Request\r\n1. Add the Paper:\r\n> \"Learning to Forget: Continual Prediction with LSTM\" by Gers et al.\r\n\r\n to the Documention and mention that the implementation already contains forget gates.\r\n\r\n2. Rename `num_units` and/or  `LSTMcell` or at the very least add a comment"}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20043", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20043/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20043/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20043/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/20043", "id": 332621343, "node_id": "MDU6SXNzdWUzMzI2MjEzNDM=", "number": 20043, "title": "[BUG] tf.train.Saver in non-local filesystem", "user": {"login": "candyzone", "id": 7778833, "node_id": "MDQ6VXNlcjc3Nzg4MzM=", "avatar_url": "https://avatars0.githubusercontent.com/u/7778833?v=4", "gravatar_id": "", "url": "https://api.github.com/users/candyzone", "html_url": "https://github.com/candyzone", "followers_url": "https://api.github.com/users/candyzone/followers", "following_url": "https://api.github.com/users/candyzone/following{/other_user}", "gists_url": "https://api.github.com/users/candyzone/gists{/gist_id}", "starred_url": "https://api.github.com/users/candyzone/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/candyzone/subscriptions", "organizations_url": "https://api.github.com/users/candyzone/orgs", "repos_url": "https://api.github.com/users/candyzone/repos", "events_url": "https://api.github.com/users/candyzone/events{/privacy}", "received_events_url": "https://api.github.com/users/candyzone/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 299643928, "node_id": "MDU6TGFiZWwyOTk2NDM5Mjg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:contributions%20welcome", "name": "stat:contributions welcome", "color": "f4b400", "default": false, "description": ""}], "state": "open", "locked": false, "assignee": {"login": "mihaimaruseac", "id": 323199, "node_id": "MDQ6VXNlcjMyMzE5OQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/323199?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mihaimaruseac", "html_url": "https://github.com/mihaimaruseac", "followers_url": "https://api.github.com/users/mihaimaruseac/followers", "following_url": "https://api.github.com/users/mihaimaruseac/following{/other_user}", "gists_url": "https://api.github.com/users/mihaimaruseac/gists{/gist_id}", "starred_url": "https://api.github.com/users/mihaimaruseac/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mihaimaruseac/subscriptions", "organizations_url": "https://api.github.com/users/mihaimaruseac/orgs", "repos_url": "https://api.github.com/users/mihaimaruseac/repos", "events_url": "https://api.github.com/users/mihaimaruseac/events{/privacy}", "received_events_url": "https://api.github.com/users/mihaimaruseac/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "mihaimaruseac", "id": 323199, "node_id": "MDQ6VXNlcjMyMzE5OQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/323199?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mihaimaruseac", "html_url": "https://github.com/mihaimaruseac", "followers_url": "https://api.github.com/users/mihaimaruseac/followers", "following_url": "https://api.github.com/users/mihaimaruseac/following{/other_user}", "gists_url": "https://api.github.com/users/mihaimaruseac/gists{/gist_id}", "starred_url": "https://api.github.com/users/mihaimaruseac/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mihaimaruseac/subscriptions", "organizations_url": "https://api.github.com/users/mihaimaruseac/orgs", "repos_url": "https://api.github.com/users/mihaimaruseac/repos", "events_url": "https://api.github.com/users/mihaimaruseac/events{/privacy}", "received_events_url": "https://api.github.com/users/mihaimaruseac/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 3, "created_at": "2018-06-15T01:58:17Z", "updated_at": "2020-03-12T16:02:57Z", "closed_at": null, "author_association": "CONTRIBUTOR", "body": "### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**: No\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**: Linux CentOS 7\r\n- **TensorFlow installed from (source or binary)**: source\r\n- **TensorFlow version (use command below)**: 1.4.0 release\r\n- **Python version**: python2.7\r\n- **Bazel version (if compiling from source)**: 0.9.0\r\n- **GCC/Compiler version (if compiling from source)**: gcc4.8.5\r\n- **CUDA/cuDNN version**: -\r\n- **GPU model and memory**: -\r\n- **Exact command to reproduce**: -\r\n\r\nIn Tensorflow source code tensorflow/python/training/saver.py, there are some function call like \"os.path.isabs()\". If saving to non-local filesystem such as \"hdfs://\" and using save_relative_paths=True, the behavior is not expected. The checkpoint file still save \"hdfs://.../.../...\" instead of relative_path\r\n\r\nsource code: https://github.com/tensorflow/tensorflow/blob/master/tensorflow/python/training/saver.py#L982\r\n\r\nIt doesn't have any \"IsAbs()\" Interface in tensorflow::FileSystem, I think some solution:\r\n1. Add IsAbs() Interface in tensorflow::FileSystem\r\n2. add IsAbs() Interface in tensorflow::FileStatistics, we can call tensorflow::FileSystem::Stat() to get this info.\r\n\r\nThanks"}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20041", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20041/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20041/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20041/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/20041", "id": 332589745, "node_id": "MDU6SXNzdWUzMzI1ODk3NDU=", "number": 20041, "title": "Failed to create CUPTI subcriber when profiling on servers with no GPU's", "user": {"login": "majoros", "id": 56639, "node_id": "MDQ6VXNlcjU2NjM5", "avatar_url": "https://avatars3.githubusercontent.com/u/56639?v=4", "gravatar_id": "", "url": "https://api.github.com/users/majoros", "html_url": "https://github.com/majoros", "followers_url": "https://api.github.com/users/majoros/followers", "following_url": "https://api.github.com/users/majoros/following{/other_user}", "gists_url": "https://api.github.com/users/majoros/gists{/gist_id}", "starred_url": "https://api.github.com/users/majoros/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/majoros/subscriptions", "organizations_url": "https://api.github.com/users/majoros/orgs", "repos_url": "https://api.github.com/users/majoros/repos", "events_url": "https://api.github.com/users/majoros/events{/privacy}", "received_events_url": "https://api.github.com/users/majoros/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 404586594, "node_id": "MDU6TGFiZWw0MDQ1ODY1OTQ=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:awaiting%20tensorflower", "name": "stat:awaiting tensorflower", "color": "f4b400", "default": false, "description": ""}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-06-14T22:43:59Z", "updated_at": "2020-02-08T01:14:34Z", "closed_at": null, "author_association": "NONE", "body": "\r\n------------------------\r\n\r\n### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**:\r\n\r\nCustom i guess? I took the first example on the [Using GPUs](https://www.tensorflow.org/programmers_guide/using_gpu) page and added profiling to it (code below).\r\n\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**:\r\n\r\nRed Hat Enterprise Linux Server release 6.7 (Santiago)\r\n\r\n- **TensorFlow installed from (source or binary)**:\r\n\r\nSource\r\n\r\n- **TensorFlow version (use command below)**:\r\n\r\n>>> import tensorflow as tf\r\n>>> print(tf.GIT_VERSION, tf.VERSION)\r\n('unknown', '1.8.0')\r\n\r\n\r\n- **Python version**:\r\n\r\nBuilt for both version of python same outcome for both\r\n2.7.14\r\n3.6.5\r\n\r\n- **Bazel version (if compiling from source)**:\r\n\r\n0.11.1\r\n\r\n- **GCC/Compiler version (if compiling from source)**:\r\n\r\n4.9.3\r\n\r\n- **CUDA/cuDNN version**:\r\n\r\nCUDA: 9.1.85\r\ncuDNN: 7.0.5\r\n\r\n- **GPU model and memory**:\r\n\r\nMy GPU test server has the following GPU's and driver version\r\n\r\n```bash\r\n$ nvidia-smi\r\nThu Jun 14 12:58:15 2018\r\n+-----------------------------------------------------------------------------+\r\n| NVIDIA-SMI 390.30                 Driver Version: 390.30                    |\r\n|-------------------------------+----------------------+----------------------+\r\n| GPU  Name        Persistence-M| Bus-Id        Disp.A | Volatile Uncorr. ECC |\r\n| Fan  Temp  Perf  Pwr:Usage/Cap|         Memory-Usage | GPU-Util  Compute M. |\r\n|===============================+======================+======================|\r\n|   0  Tesla K40m          On   | 00000000:0B:00.0 Off |                    0 |\r\n| N/A   24C    P8    19W / 235W |    207MiB / 11441MiB |      0%      Default |\r\n+-------------------------------+----------------------+----------------------+\r\n|   1  Tesla K40m          On   | 00000000:81:00.0 Off |                    0 |\r\n| N/A   25C    P8    20W / 235W |    207MiB / 11441MiB |      0%      Default |\r\n+-------------------------------+----------------------+----------------------+\r\n\r\n+-----------------------------------------------------------------------------+\r\n| Processes:                                                       GPU Memory |\r\n|  GPU       PID   Type   Process name                             Usage      |\r\n|=============================================================================|\r\n|  No running processes found                                                 |\r\n+-----------------------------------------------------------------------------+\r\n```\r\n\r\n- **Exact command to reproduce**:\r\n\r\nRun the following script with TF built with GPU support on a server without GPU's with the cuda stub and cupti extras library path's in your LD_LIBRARY_PATH environment variable.\r\n\r\n```python\r\nimport tensorflow as tf\r\nimport os\r\ntrace_dir = '/tmp/tf_trace'\r\n\r\nbuilder = tf.profiler.ProfileOptionBuilder\r\nopts = builder(builder.time_and_memory()).order_by('micros').build()\r\n\r\nwith tf.contrib.tfprof.ProfileContext(trace_dir, trace_steps=[], dump_steps=[]) as pctx:\r\n    a = tf.constant([1.0, 2.0, 3.0, 4.0, 5.0, 6.0], shape=[2, 3], name='a')\r\n    b = tf.constant([1.0, 2.0, 3.0, 4.0, 5.0, 6.0], shape=[3, 2], name='b')\r\n    c = tf.matmul(a, b)\r\n    with tf.Session() as sess:\r\n        pctx.trace_next_step()\r\n        pctx.dump_next_step()\r\n        _ = sess.run(c)\r\n        pctx.profiler.profile_operations(options=opts)\r\n\r\n```\r\n\r\nWorks perfect on servers with GPU's fails on servers without GPU's\r\n\r\n### Describe the problem\r\n\r\nI am attempting to make a single, portable version of TensorFlow 1.8.0 with XLA and GPU support. Everything works as expected on servers with GPU's.\r\nThe only thing that\u2019s not working on servers without GPU's is when you run a session in a profiler context, you get the below message.\r\n\r\nThe error seems fairly straight forward. The calls to the libcupti are failing since there are no GPU's or cuda drivers installed.\r\n\r\nHow feasible would it be to have TensorFlow fallback(or do a pre-check) to CPU only profiling if TensorFlow was built with GPU support but there are no GPU's on the servers?\r\n\r\n\r\n### Source code / logs\r\n\r\nNote: I manually truncated the paths of the log files up until the lib directory.\r\n\r\n$ python ~/tmp/tfprof.py\r\n2018-06-14 17:32:07.348377: I tensorflow/core/platform/cpu_feature_guard.cc:140] Your CPU supports instructions that this TensorFlow binary was not compiled to use: AVX2 FMA\r\n2018-06-14 17:32:07.354865: E tensorflow/stream_executor/cuda/cuda_driver.cc:406] failed call to cuInit: CUresult(-1)\r\n2018-06-14 17:32:07.354921: I tensorflow/stream_executor/cuda/cuda_diagnostics.cc:145] kernel driver does not appear to be running on this host (HOST_NAME): /proc/driver/nvidia/version does not exist\r\nNone\r\n2018-06-14 17:32:07.360597: I tensorflow/stream_executor/dso_loader.cc:152] successfully opened CUDA library libcupti.so.9.1 locally\r\n2018-06-14 17:32:07.460813: E tensorflow/core/platform/default/device_tracer.cc:134] cuda call ActivityRegisterCallbacks(BufferRequested, BufferCompleted) failed 15\r\nFailed to create CUPTI subcriber.\r\nTraceback (most recent call last):\r\n  File \"lib/tensorflow/python/client/session.py\", line 1323, in _do_call\r\n    return fn(*args)\r\n  File \"/home/o594256/tmp/tf18/lib/tensorflow/python/client/session.py\", line 1308, in _run_fn\r\n    options, feed_dict, fetch_list, target_list, run_metadata)\r\n  File \"lib/tensorflow/python/client/session.py\", line 1411, in _call_tf_sessionrun\r\n    run_metadata)\r\ntensorflow.python.framework.errors_impl.InternalError: Failed to create CUPTI subcriber.\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTraceback (most recent call last):\r\n  File \"/tmp/tfprof.py\", line 24, in <module>\r\n    _ = sess.run(c)\r\n  File \"lib/tensorflow/python/profiler/profile_context.py\", line 74, in _profiled_run\r\n    fetches, feed_dict, options, run_metadata)\r\n  File \"lib/tensorflow/python/client/session.py\", line 900, in run\r\n    run_metadata_ptr)\r\n  File \"lib/tensorflow/python/client/session.py\", line 1136, in _run\r\n    feed_dict_tensor, options, run_metadata)\r\n  File \"lib/tensorflow/python/client/session.py\", line 1317, in _do_run\r\n    run_metadata)\r\n  File \"lib/tensorflow/python/client/session.py\", line 1337, in _do_call\r\n    raise type(e)(node_def, op, message)\r\ntensorflow.python.framework.errors_impl.InternalError: Failed to create CUPTI subcriber.\r\n"}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19991", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19991/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19991/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19991/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/19991", "id": 332044476, "node_id": "MDU6SXNzdWUzMzIwNDQ0NzY=", "number": 19991, "title": "Incorrect name returned in Tensorflow causes \u201cTensor which does not exist\u201d error while invoking get_tensor_by_name", "user": {"login": "skbhat", "id": 8628054, "node_id": "MDQ6VXNlcjg2MjgwNTQ=", "avatar_url": "https://avatars1.githubusercontent.com/u/8628054?v=4", "gravatar_id": "", "url": "https://api.github.com/users/skbhat", "html_url": "https://github.com/skbhat", "followers_url": "https://api.github.com/users/skbhat/followers", "following_url": "https://api.github.com/users/skbhat/following{/other_user}", "gists_url": "https://api.github.com/users/skbhat/gists{/gist_id}", "starred_url": "https://api.github.com/users/skbhat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/skbhat/subscriptions", "organizations_url": "https://api.github.com/users/skbhat/orgs", "repos_url": "https://api.github.com/users/skbhat/repos", "events_url": "https://api.github.com/users/skbhat/events{/privacy}", "received_events_url": "https://api.github.com/users/skbhat/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": {"login": "tatatodd", "id": 5453737, "node_id": "MDQ6VXNlcjU0NTM3Mzc=", "avatar_url": "https://avatars3.githubusercontent.com/u/5453737?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tatatodd", "html_url": "https://github.com/tatatodd", "followers_url": "https://api.github.com/users/tatatodd/followers", "following_url": "https://api.github.com/users/tatatodd/following{/other_user}", "gists_url": "https://api.github.com/users/tatatodd/gists{/gist_id}", "starred_url": "https://api.github.com/users/tatatodd/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tatatodd/subscriptions", "organizations_url": "https://api.github.com/users/tatatodd/orgs", "repos_url": "https://api.github.com/users/tatatodd/repos", "events_url": "https://api.github.com/users/tatatodd/events{/privacy}", "received_events_url": "https://api.github.com/users/tatatodd/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "tatatodd", "id": 5453737, "node_id": "MDQ6VXNlcjU0NTM3Mzc=", "avatar_url": "https://avatars3.githubusercontent.com/u/5453737?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tatatodd", "html_url": "https://github.com/tatatodd", "followers_url": "https://api.github.com/users/tatatodd/followers", "following_url": "https://api.github.com/users/tatatodd/following{/other_user}", "gists_url": "https://api.github.com/users/tatatodd/gists{/gist_id}", "starred_url": "https://api.github.com/users/tatatodd/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tatatodd/subscriptions", "organizations_url": "https://api.github.com/users/tatatodd/orgs", "repos_url": "https://api.github.com/users/tatatodd/repos", "events_url": "https://api.github.com/users/tatatodd/events{/privacy}", "received_events_url": "https://api.github.com/users/tatatodd/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 3, "created_at": "2018-06-13T15:21:01Z", "updated_at": "2018-12-14T18:54:58Z", "closed_at": null, "author_association": "NONE", "body": "As per the [documentation](https://www.tensorflow.org/programmers_guide/graphs#naming_operations) TensorFlow would append \"_1\", \"_2\", and so on to the name in tf.Graph namespace, in order to make it unique. Here I define two convolutional operations. It is expected that the first one will be named as \"conv2d\" and second one \"conv2d_1\". But when I try to obtain the name of the second convolution it returns \"conv2d_2\". I causes error when I try to invoke get_tensor_by_name. Here is the code:\r\n\r\nimport numpy as np\r\nimport tensorflow as tf\r\nimport os\r\n\r\nx = tf.constant(np.random.randn(1,2,2,1), dtype=tf.float32)\r\nkernel_size = (1,1)\r\nno_of_out = 20\r\nstrides = (1,1)\r\nconv_out1 = tf.layers.conv2d(x, 10, (1,1), (1,1))\r\nconv_out2 = tf.layers.conv2d(x, 10, (1,1), (1,1))\r\n\r\nwith tf.Session() as sess:\r\n    sess.run(tf.global_variables_initializer())\r\n    print conv_out1.name # conv2d/BiasAdd:0 .  This value is correct\r\n    print conv_out2.name # conv2d_2/BiasAdd:0 .  This value is incorrect.  It should be conv2d_1/BiasAdd:0\r\n    conv_weights1 = tf.get_default_graph().get_tensor_by_name(os.path.split(conv_out1.name)[0] + '/kernel:0')\r\n    conv_weights2 = tf.get_default_graph().get_tensor_by_name('conv2d_1/kernel:0')  \r\n    conv_weights2 = tf.get_default_graph().get_tensor_by_name(os.path.split(conv_out2.name)[0] + '/kernel:0')\r\n\r\nI get error\r\n\r\n\"KeyError: \"The name 'conv2d_2/kernel:0' refers to a Tensor which does not exist. The operation, 'conv2d_2/kernel', does not exist in the graph.\"\r\n\r\n**Issue Template**\r\n1. Have I written custom code : No. I did not customize any part of TensorFlow. Directly using it as described above\r\n2. OS Platform and Distribution : Ubuntu 14.04\r\n3. TensorFlow installed from : N/A\r\n4. TensorFlow version : 1.4.0-rc1\r\n5. Bazel version : N/A\r\n6. CUDA/cuDNN version : N/A\r\n7. GPU model and memory : N/A\r\n8. Exact command to reproduce : As described above with exact code."}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19988", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19988/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19988/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19988/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/19988", "id": 332013733, "node_id": "MDU6SXNzdWUzMzIwMTM3MzM=", "number": 19988, "title": "Official profile python API not work on the official mnist example", "user": {"login": "twangnh", "id": 18298163, "node_id": "MDQ6VXNlcjE4Mjk4MTYz", "avatar_url": "https://avatars0.githubusercontent.com/u/18298163?v=4", "gravatar_id": "", "url": "https://api.github.com/users/twangnh", "html_url": "https://github.com/twangnh", "followers_url": "https://api.github.com/users/twangnh/followers", "following_url": "https://api.github.com/users/twangnh/following{/other_user}", "gists_url": "https://api.github.com/users/twangnh/gists{/gist_id}", "starred_url": "https://api.github.com/users/twangnh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/twangnh/subscriptions", "organizations_url": "https://api.github.com/users/twangnh/orgs", "repos_url": "https://api.github.com/users/twangnh/repos", "events_url": "https://api.github.com/users/twangnh/events{/privacy}", "received_events_url": "https://api.github.com/users/twangnh/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 299643928, "node_id": "MDU6TGFiZWwyOTk2NDM5Mjg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:contributions%20welcome", "name": "stat:contributions welcome", "color": "f4b400", "default": false, "description": ""}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2018-06-13T14:13:00Z", "updated_at": "2018-08-20T22:46:48Z", "closed_at": null, "author_association": "NONE", "body": "Hi! I was using the official minist summaries example which uses run_metadata to track model runtime statistics:\r\n\r\nhttps://github.com/tensorflow/tensorflow/blob/master/tensorflow/examples/tutorials/mnist/mnist_with_summaries.py\r\n\r\nI tried to add simple profiler python API as suggest by \r\n\r\nhttps://github.com/tensorflow/tensorflow/blob/master/tensorflow/core/profiler/g3doc/python_api.md\r\n\r\nSo, my code is:\r\nhttps://github.com/MrWanter/mnist-proflie/blob/c0f5b59403fbf3258e8236fa7c983750623354e6/mnist-profile.py#L175-L184\r\n\r\nbut running the model gives \r\n```\r\nAdded profiling by user\r\nParsing Inputs...\r\nIncomplete shape.\r\nIncomplete shape.\r\nOptions -step=199 not found.\r\nAvailable steps: 0 \r\nAdding run metadata for 199\r\n```\r\nbut tensorboard shows the memory consumption of nodes, which suggests runtime statistics are captured:\r\n![image](https://user-images.githubusercontent.com/18298163/41357872-b3d623fe-6f59-11e8-91c2-539f55340e8a.png)\r\n\r\nwhat is incomplete shape, the input shape has None for batch size, but since it is runtime statistics, I thought it would work, but it does not, can someone help?\r\n\r\nAs in #19962, it is hard to know how to deal with profiler problem since documentation is not enough and    codes are hard to read as it is implemented with C++ and heavily wrapped\r\n\r\n**UPDATA**:\r\nTh problem is caused by input shape of None for batch size, change it to fixed shape solve the problem, but there would inevitably be a large amount of None in tensors since we have to deal with variable sized inputs, in those cases, it should be reasonable for the profiler to capture runtime statistics, so how can we do it? where am I wrong?\r\n\r\n**UPDATE**\r\nFound a quote on the official profiler doc:\r\n> It must have known \"shape\" information for RegisterStatistics('flops') to calculate the statistics. It is suggested to pass in -run_meta_path if shape is only known during runtime. tfprof can fill in the missing shape with the runtime shape information from RunMetadata. Hence, it is suggested to use -account_displayed_op_only option so that you know the statistics are only for the operations printed out.\r\n\r\nseems profiler can fill in the missing shape with runtime shape information, but how to pass in `-\r\nrun_meta_path`,  I did not find anything relevant in the profiler options:\r\n```\r\n      self._options = {'max_depth': 100,\r\n                       'min_bytes': 0,\r\n                       'min_micros': 0,\r\n                       'min_params': 0,\r\n                       'min_float_ops': 0,\r\n                       'min_occurrence': 0,\r\n                       'order_by': 'name',\r\n                       'account_type_regexes': ['.*'],\r\n                       'start_name_regexes': ['.*'],\r\n                       'trim_name_regexes': [],\r\n                       'show_name_regexes': ['.*'],\r\n                       'hide_name_regexes': [],\r\n                       'account_displayed_op_only': False,\r\n                       'select': ['micros'],\r\n                       'step': -1,\r\n                       'output': 'stdout'}\r\n```"}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19967", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19967/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19967/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19967/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/19967", "id": 331831946, "node_id": "MDU6SXNzdWUzMzE4MzE5NDY=", "number": 19967, "title": "GPU OOM with Keras and Estimator, fine with Keras alone", "user": {"login": "pawarrick", "id": 8933353, "node_id": "MDQ6VXNlcjg5MzMzNTM=", "avatar_url": "https://avatars0.githubusercontent.com/u/8933353?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pawarrick", "html_url": "https://github.com/pawarrick", "followers_url": "https://api.github.com/users/pawarrick/followers", "following_url": "https://api.github.com/users/pawarrick/following{/other_user}", "gists_url": "https://api.github.com/users/pawarrick/gists{/gist_id}", "starred_url": "https://api.github.com/users/pawarrick/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pawarrick/subscriptions", "organizations_url": "https://api.github.com/users/pawarrick/orgs", "repos_url": "https://api.github.com/users/pawarrick/repos", "events_url": "https://api.github.com/users/pawarrick/events{/privacy}", "received_events_url": "https://api.github.com/users/pawarrick/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": {"login": "fchollet", "id": 710255, "node_id": "MDQ6VXNlcjcxMDI1NQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/710255?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fchollet", "html_url": "https://github.com/fchollet", "followers_url": "https://api.github.com/users/fchollet/followers", "following_url": "https://api.github.com/users/fchollet/following{/other_user}", "gists_url": "https://api.github.com/users/fchollet/gists{/gist_id}", "starred_url": "https://api.github.com/users/fchollet/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fchollet/subscriptions", "organizations_url": "https://api.github.com/users/fchollet/orgs", "repos_url": "https://api.github.com/users/fchollet/repos", "events_url": "https://api.github.com/users/fchollet/events{/privacy}", "received_events_url": "https://api.github.com/users/fchollet/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "fchollet", "id": 710255, "node_id": "MDQ6VXNlcjcxMDI1NQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/710255?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fchollet", "html_url": "https://github.com/fchollet", "followers_url": "https://api.github.com/users/fchollet/followers", "following_url": "https://api.github.com/users/fchollet/following{/other_user}", "gists_url": "https://api.github.com/users/fchollet/gists{/gist_id}", "starred_url": "https://api.github.com/users/fchollet/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fchollet/subscriptions", "organizations_url": "https://api.github.com/users/fchollet/orgs", "repos_url": "https://api.github.com/users/fchollet/repos", "events_url": "https://api.github.com/users/fchollet/events{/privacy}", "received_events_url": "https://api.github.com/users/fchollet/received_events", "type": "User", "site_admin": false}, {"login": "tanzhenyu", "id": 15220929, "node_id": "MDQ6VXNlcjE1MjIwOTI5", "avatar_url": "https://avatars3.githubusercontent.com/u/15220929?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tanzhenyu", "html_url": "https://github.com/tanzhenyu", "followers_url": "https://api.github.com/users/tanzhenyu/followers", "following_url": "https://api.github.com/users/tanzhenyu/following{/other_user}", "gists_url": "https://api.github.com/users/tanzhenyu/gists{/gist_id}", "starred_url": "https://api.github.com/users/tanzhenyu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tanzhenyu/subscriptions", "organizations_url": "https://api.github.com/users/tanzhenyu/orgs", "repos_url": "https://api.github.com/users/tanzhenyu/repos", "events_url": "https://api.github.com/users/tanzhenyu/events{/privacy}", "received_events_url": "https://api.github.com/users/tanzhenyu/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 29, "created_at": "2018-06-13T03:49:56Z", "updated_at": "2019-04-26T21:08:47Z", "closed_at": null, "author_association": "NONE", "body": "\r\n### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**: yes\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**: Windows10\r\n- **TensorFlow installed from (source or binary)**: binary\r\n- **TensorFlow version (use command below)**: tensorflowGPU_1.7\r\n- **Python version**: 3.5.4\r\n- **Bazel version (if compiling from source)**:\r\n- **GCC/Compiler version (if compiling from source)**:\r\n- **CUDA/cuDNN version**: CUDA 9.0/cuDNN7.0\r\n- **GPU model and memory**:NVidia Titan X (Pascal) 12GB\r\n- **Exact command to reproduce**:python TestKerasAndEstimator.py\r\n\r\n\r\n### Describe the problem\r\nI have developed a Keras model and used it successfully with only Keras train and evaluate calls. Now I would like to use the same model in an Estimator context using tf.keras.estimator.model_to_estimator.\r\n\r\nIt's quite a large model (3 LSTM layers with 100 units each, input dimension 598), but I can run it in the Keras-alone context with a batch_size up to 10.  However, with an Estimator, I get an OOM on the GPU even with a batch_size of 1.  If I reduce the sequence length (SEQ_LEN) from 24000 to 5000 however, it will run with an Estimator.\r\n\r\nHere is the output log with Keras alone (USE_ESTIMATOR=False)\r\n```\r\n[Console output redirected to file:C:\\Users\\philip.LMS\\git\\GIT_RD_Python\\Ch2018\\ch2018_train\\TestEstimator_20180612_2256_log.txt]\r\nUsing TensorFlow backend.\r\n2018-06-12 22:57:11.753350: I T:\\src\\github\\tensorflow\\tensorflow\\core\\platform\\cpu_feature_guard.cc:140] Your CPU supports instructions that this TensorFlow binary was not compiled to use: AVX2\r\n2018-06-12 22:57:12.396391: I T:\\src\\github\\tensorflow\\tensorflow\\core\\common_runtime\\gpu\\gpu_device.cc:1344] Found device 0 with properties: \r\nname: TITAN X (Pascal) major: 6 minor: 1 memoryClockRate(GHz): 1.531\r\npciBusID: 0000:03:00.0\r\ntotalMemory: 12.00GiB freeMemory: 9.93GiB\r\n2018-06-12 22:57:12.624894: I T:\\src\\github\\tensorflow\\tensorflow\\core\\common_runtime\\gpu\\gpu_device.cc:1344] Found device 1 with properties: \r\nname: TITAN X (Pascal) major: 6 minor: 1 memoryClockRate(GHz): 1.531\r\npciBusID: 0000:a1:00.0\r\ntotalMemory: 12.00GiB freeMemory: 9.93GiB\r\n2018-06-12 22:57:12.625753: I T:\\src\\github\\tensorflow\\tensorflow\\core\\common_runtime\\gpu\\gpu_device.cc:1423] Adding visible gpu devices: 0, 1\r\n2018-06-12 22:57:17.075745: I T:\\src\\github\\tensorflow\\tensorflow\\core\\common_runtime\\gpu\\gpu_device.cc:911] Device interconnect StreamExecutor with strength 1 edge matrix:\r\n2018-06-12 22:57:17.076181: I T:\\src\\github\\tensorflow\\tensorflow\\core\\common_runtime\\gpu\\gpu_device.cc:917]      0 1 \r\n2018-06-12 22:57:17.076457: I T:\\src\\github\\tensorflow\\tensorflow\\core\\common_runtime\\gpu\\gpu_device.cc:930] 0:   N N \r\n2018-06-12 22:57:17.076746: I T:\\src\\github\\tensorflow\\tensorflow\\core\\common_runtime\\gpu\\gpu_device.cc:930] 1:   N N \r\n2018-06-12 22:57:17.077336: I T:\\src\\github\\tensorflow\\tensorflow\\core\\common_runtime\\gpu\\gpu_device.cc:1041] Created TensorFlow device (/job:localhost/replica:0/task:0/device:GPU:0 with 9618 MB memory) -> physical GPU (device: 0, name: TITAN X (Pascal), pci bus id: 0000:03:00.0, compute capability: 6.1)\r\n2018-06-12 22:57:17.079930: I T:\\src\\github\\tensorflow\\tensorflow\\core\\common_runtime\\gpu\\gpu_device.cc:1041] Created TensorFlow device (/job:localhost/replica:0/task:0/device:GPU:1 with 9619 MB memory) -> physical GPU (device: 1, name: TITAN X (Pascal), pci bus id: 0000:a1:00.0, compute capability: 6.1)\r\nCreating Model\r\n_________________________________________________________________\r\nLayer (type)                 Output Shape              Param #   \r\n=================================================================\r\nlstm_1 (LSTM)                (10, 24000, 100)          279600    \r\n_________________________________________________________________\r\nbatch_normalization_1 (Batch (10, 24000, 100)          400       \r\n_________________________________________________________________\r\nlstm_2 (LSTM)                (10, 24000, 100)          80400     \r\n_________________________________________________________________\r\nbatch_normalization_2 (Batch (10, 24000, 100)          400       \r\n_________________________________________________________________\r\nlstm_3 (LSTM)                (10, 24000, 100)          80400     \r\n_________________________________________________________________\r\nbatch_normalization_3 (Batch (10, 24000, 100)          400       \r\n_________________________________________________________________\r\ndense_1 (Dense)              (10, 24000, 3)            303       \r\n=================================================================\r\nTotal params: 441,903\r\nTrainable params: 441,303\r\nNon-trainable params: 600\r\n_________________________________________________________________\r\nNone\r\nEpoch 1/2\r\n\r\n10/20 [==============>...............] - ETA: 6:45 - loss: 0.0000e+00 - acc: 1.0000 - weighted_acc: 1.0000\r\n20/20 [==============================] - 904s 45s/step - loss: 0.0000e+00 - acc: 1.0000 - weighted_acc: 1.0000\r\nEpoch 2/2\r\n\r\n10/20 [==============>...............] - ETA: 8:59 - loss: 0.0000e+00 - acc: 1.0000 - weighted_acc: 1.0000\r\n20/20 [==============================] - 1059s 53s/step - loss: 0.0000e+00 - acc: 1.0000 - weighted_acc: 1.0000\r\n\r\n10/20 [==============>...............] - ETA: 43s\r\n20/20 [==============================] - 86s 4s/step\r\n```\r\n\r\nAnd here is the output log with Keras and Estimator (USE_ESTIMATOR=True)\r\n\r\n```\r\n[Console output redirected to file:C:\\Users\\philip.LMS\\git\\GIT_RD_Python\\Ch2018\\ch2018_train\\TestEstimator_20180612_2338_log.txt]\r\nCreating Model\r\n_________________________________________________________________\r\nLayer (type)                 Output Shape              Param #   \r\n=================================================================\r\nlstm_1 (LSTM)                (1, 24000, 100)           279600    \r\n_________________________________________________________________\r\nbatch_normalization_1 (Batch (1, 24000, 100)           400       \r\n_________________________________________________________________\r\nlstm_2 (LSTM)                (1, 24000, 100)           80400     \r\n_________________________________________________________________\r\nbatch_normalization_2 (Batch (1, 24000, 100)           400       \r\n_________________________________________________________________\r\nlstm_3 (LSTM)                (1, 24000, 100)           80400     \r\n_________________________________________________________________\r\nbatch_normalization_3 (Batch (1, 24000, 100)           400       \r\n_________________________________________________________________\r\ndense_1 (Dense)              (1, 24000, 3)             303       \r\n=================================================================\r\nTotal params: 441,903\r\nTrainable params: 441,303\r\nNon-trainable params: 600\r\n_________________________________________________________________\r\nNone\r\n2018-06-12 23:39:11.126586: I T:\\src\\github\\tensorflow\\tensorflow\\core\\platform\\cpu_feature_guard.cc:140] Your CPU supports instructions that this TensorFlow binary was not compiled to use: AVX2\r\n2018-06-12 23:39:11.751372: I T:\\src\\github\\tensorflow\\tensorflow\\core\\common_runtime\\gpu\\gpu_device.cc:1344] Found device 0 with properties: \r\nname: TITAN X (Pascal) major: 6 minor: 1 memoryClockRate(GHz): 1.531\r\npciBusID: 0000:03:00.0\r\ntotalMemory: 12.00GiB freeMemory: 9.93GiB\r\n2018-06-12 23:39:11.981018: I T:\\src\\github\\tensorflow\\tensorflow\\core\\common_runtime\\gpu\\gpu_device.cc:1344] Found device 1 with properties: \r\nname: TITAN X (Pascal) major: 6 minor: 1 memoryClockRate(GHz): 1.531\r\npciBusID: 0000:a1:00.0\r\ntotalMemory: 12.00GiB freeMemory: 9.93GiB\r\n2018-06-12 23:39:11.981905: I T:\\src\\github\\tensorflow\\tensorflow\\core\\common_runtime\\gpu\\gpu_device.cc:1423] Adding visible gpu devices: 0, 1\r\n2018-06-12 23:39:17.295319: I T:\\src\\github\\tensorflow\\tensorflow\\core\\common_runtime\\gpu\\gpu_device.cc:911] Device interconnect StreamExecutor with strength 1 edge matrix:\r\n2018-06-12 23:39:17.295766: I T:\\src\\github\\tensorflow\\tensorflow\\core\\common_runtime\\gpu\\gpu_device.cc:917]      0 1 \r\n2018-06-12 23:39:17.296030: I T:\\src\\github\\tensorflow\\tensorflow\\core\\common_runtime\\gpu\\gpu_device.cc:930] 0:   N N \r\n2018-06-12 23:39:17.296314: I T:\\src\\github\\tensorflow\\tensorflow\\core\\common_runtime\\gpu\\gpu_device.cc:930] 1:   N N \r\n2018-06-12 23:39:17.296888: I T:\\src\\github\\tensorflow\\tensorflow\\core\\common_runtime\\gpu\\gpu_device.cc:1041] Created TensorFlow device (/job:localhost/replica:0/task:0/device:GPU:0 with 9618 MB memory) -> physical GPU (device: 0, name: TITAN X (Pascal), pci bus id: 0000:03:00.0, compute capability: 6.1)\r\n2018-06-12 23:39:17.299820: I T:\\src\\github\\tensorflow\\tensorflow\\core\\common_runtime\\gpu\\gpu_device.cc:1041] Created TensorFlow device (/job:localhost/replica:0/task:0/device:GPU:1 with 9619 MB memory) -> physical GPU (device: 1, name: TITAN X (Pascal), pci bus id: 0000:a1:00.0, compute capability: 6.1)\r\n2018-06-12 23:39:17.644506: I T:\\src\\github\\tensorflow\\tensorflow\\core\\kernels\\cuda_solvers.cc:159] Creating CudaSolver handles for stream 000001E5C8B53C10\r\n<MapDataset shapes: (<unknown>, <unknown>), types: (tf.float32, tf.float32)>\r\nDataset point 1:\r\n<MapDataset shapes: ((24000, 598), (24000, 3)), types: (tf.float32, tf.float32)>\r\nDataset point 2:\r\n<MapDataset shapes: ((24000, 598), (24000, 3)), types: (tf.float32, tf.float32)>\r\nDataset point 3:\r\n<RepeatDataset shapes: ((24000, 598), (24000, 3)), types: (tf.float32, tf.float32)>\r\nBatch features\r\nTensor(\"IteratorGetNext:0\", shape=(?, 24000, 598), dtype=float32, device=/device:CPU:0)\r\nBatch labels\r\nTensor(\"IteratorGetNext:1\", shape=(?, 24000, 3), dtype=float32, device=/device:CPU:0)\r\n2018-06-12 23:39:26.545626: I T:\\src\\github\\tensorflow\\tensorflow\\core\\common_runtime\\gpu\\gpu_device.cc:1423] Adding visible gpu devices: 0, 1\r\n2018-06-12 23:39:26.546174: I T:\\src\\github\\tensorflow\\tensorflow\\core\\common_runtime\\gpu\\gpu_device.cc:911] Device interconnect StreamExecutor with strength 1 edge matrix:\r\n2018-06-12 23:39:26.546739: I T:\\src\\github\\tensorflow\\tensorflow\\core\\common_runtime\\gpu\\gpu_device.cc:917]      0 1 \r\n2018-06-12 23:39:26.547090: I T:\\src\\github\\tensorflow\\tensorflow\\core\\common_runtime\\gpu\\gpu_device.cc:930] 0:   N N \r\n2018-06-12 23:39:26.547462: I T:\\src\\github\\tensorflow\\tensorflow\\core\\common_runtime\\gpu\\gpu_device.cc:930] 1:   N N \r\n2018-06-12 23:39:26.548091: I T:\\src\\github\\tensorflow\\tensorflow\\core\\common_runtime\\gpu\\gpu_device.cc:1041] Created TensorFlow device (/job:localhost/replica:0/task:0/device:GPU:0 with 9618 MB memory) -> physical GPU (device: 0, name: TITAN X (Pascal), pci bus id: 0000:03:00.0, compute capability: 6.1)\r\n2018-06-12 23:39:26.549907: I T:\\src\\github\\tensorflow\\tensorflow\\core\\common_runtime\\gpu\\gpu_device.cc:1041] Created TensorFlow device (/job:localhost/replica:0/task:0/device:GPU:1 with 9619 MB memory) -> physical GPU (device: 1, name: TITAN X (Pascal), pci bus id: 0000:a1:00.0, compute capability: 6.1)\r\nInput File:\r\nb'record_0'\r\nDecoded File:\r\nrecord_0\r\nFeatures:\r\n[[ 0.  0.  0. ...,  0.  0.  0.]\r\n [ 0.  0.  0. ...,  0.  0.  0.]\r\n [ 0.  0.  0. ...,  0.  0.  0.]\r\n ..., \r\n [ 0.  0.  0. ...,  0.  0.  0.]\r\n [ 0.  0.  0. ...,  0.  0.  0.]\r\n [ 0.  0.  0. ...,  0.  0.  0.]]\r\nLabels:\r\n[[ 0.  0.  0.]\r\n [ 0.  0.  0.]\r\n [ 0.  0.  0.]\r\n ..., \r\n [ 0.  0.  0.]\r\n [ 0.  0.  0.]\r\n [ 0.  0.  0.]]\r\n2018-06-12 23:40:47.905054: E T:\\src\\github\\tensorflow\\tensorflow\\stream_executor\\cuda\\cuda_driver.cc:967] failed to alloc 4294967296 bytes on host: CUDA_ERROR_OUT_OF_MEMORY\r\n2018-06-12 23:40:47.905614: W T:\\src\\github\\tensorflow\\tensorflow/core/common_runtime/gpu/pool_allocator.h:195] could not allocate pinned host memory of size: 4294967296\r\n2018-06-12 23:40:47.906068: E \r\n...\r\n```\r\n\r\nHere is the python test file TestKerasAndEstimator.py:\r\n```\r\nimport sys\r\n\r\nimport numpy as np\r\nimport tensorflow as tf\r\n\r\nUSE_ESTIMATOR = True\r\n#USE_ESTIMATOR = False\r\n\r\nif USE_ESTIMATOR:\r\n  from tensorflow.python import keras\r\n  from tensorflow.python.keras.models import Sequential\r\n  from tensorflow.python.keras.layers import Dense, LSTM, BatchNormalization\r\n  from tensorflow.python.keras.optimizers import SGD, RMSprop\r\n  N_RECORDS = 1\r\n  BATCH_SIZE = 1\r\nelse:\r\n  import keras\r\n  import keras.backend.tensorflow_backend as K\r\n  from keras.models import Sequential\r\n  from keras.layers import Dense, LSTM, BatchNormalization\r\n  from keras.optimizers import SGD, RMSprop\r\n  N_RECORDS = 20\r\n  BATCH_SIZE = 10\r\n\r\n#SEQ_LENGTH=1000\r\n#SEQ_LENGTH=5000\r\n#SEQ_LENGTH=10000\r\nSEQ_LENGTH=24000\r\n\r\nINPUT_DIM = 598\r\nOUTPUT_DIM = 3\r\n\r\nNP_DTYPE = np.float32\r\nTF_DTYPE = tf.float32\r\n  \r\nTRAIN_EPOCHS = 2\r\nDEVICE_ID = '/gpu:0'\r\n\r\nclass ModelLSTM():\r\n  def __init__(self, batch_size, max_length=None, device_id='/cpu:0', n_input_dim=1, n_output_dim=2):  \r\n    \r\n    self.batch_size = batch_size\r\n    self.max_length = max_length\r\n    self.device_id = device_id\r\n    self.n_input_dim = n_input_dim\r\n    self.n_output_dim = n_output_dim\r\n\r\n    self.lstm_n_cell=[100, 100, 100] \r\n    self.dropout=0.1 \r\n    self.recurrent_dropout=0.1\r\n    \r\n    self.create_model()\r\n        \r\n  def create_model(self):        \r\n      \r\n    with tf.device(self.device_id):\r\n    \r\n      print('Creating Model')\r\n      model = Sequential()\r\n      model.add(LSTM(self.lstm_n_cell[0],\r\n                      return_sequences=True,\r\n                      stateful=False,\r\n                      kernel_initializer='he_normal',\r\n                      activation='tanh',\r\n                      dropout = self.dropout, \r\n                      recurrent_dropout = self.recurrent_dropout,\r\n                      batch_input_shape=(self.batch_size, self.max_length, self.n_input_dim)))\r\n      model.add(BatchNormalization(momentum=0.99, epsilon=0.001, center=True, \r\n                                   scale=True, beta_initializer='zeros', gamma_initializer='ones', moving_mean_initializer='zeros', moving_variance_initializer='ones'))\r\n      model.add(LSTM(self.lstm_n_cell[1],\r\n                     return_sequences=True,\r\n                     stateful=False,\r\n                     kernel_initializer='he_normal',\r\n                      activation='tanh',\r\n                      dropout = self.dropout, \r\n                      recurrent_dropout = self.recurrent_dropout))\r\n      model.add(BatchNormalization(momentum=0.99, epsilon=0.001, center=True, \r\n                                   scale=True, beta_initializer='zeros', gamma_initializer='ones', moving_mean_initializer='zeros', moving_variance_initializer='ones'))\r\n      model.add(LSTM(self.lstm_n_cell[2],\r\n                     return_sequences=True,\r\n                     stateful=False,\r\n                     kernel_initializer='he_normal',\r\n                      activation='tanh',\r\n                      dropout = self.dropout, \r\n                      recurrent_dropout = self.recurrent_dropout))\r\n      model.add(BatchNormalization(momentum=0.99, epsilon=0.001, center=True, \r\n                                   scale=True, beta_initializer='zeros', gamma_initializer='ones', moving_mean_initializer='zeros', moving_variance_initializer='ones'))\r\n       \r\n      model.add(Dense(self.n_output_dim, kernel_initializer='he_normal',\r\n                                      activation='softmax')) \r\n      \r\n      print (model.summary())\r\n      \r\n      opt = RMSprop(lr=0.001, rho=0.9, epsilon=1e-08, decay=0.0)\r\n  \r\n      model.compile(loss='categorical_crossentropy',\r\n                    optimizer=opt,\r\n                    metrics=['accuracy'],\r\n                    weighted_metrics=['accuracy'],\r\n                    sample_weight_mode='temporal')\r\n    \r\n    self.model = model\r\n    return self\r\n  \r\n  \r\nclass TestKerasAndEstimator():\r\n  def __init__(self):\r\n    self.device_id = DEVICE_ID\r\n      \r\n  def set_device(self, id):\r\n    self.device_id = id\r\n          \r\n  def the_input_fn(self, filenames, perform_shuffle=False, repeat_count=1, batch_size=1):\r\n    def _set_shapes(features, labels):\r\n      features.set_shape([SEQ_LENGTH, 598])\r\n      labels.set_shape([SEQ_LENGTH, 3])\r\n      return features, labels\r\n\r\n    def _my_parse_function(filename, label=None):\r\n      \r\n      print('Input File:')\r\n      print(filename)\r\n      \r\n      dec_filename = filename.decode(sys.getdefaultencoding())\r\n      print('Decoded File:')\r\n      print(dec_filename)\r\n      \r\n      features = np.zeros((SEQ_LENGTH, INPUT_DIM), dtype=NP_DTYPE)\r\n      labels = np.zeros((SEQ_LENGTH, OUTPUT_DIM), dtype=NP_DTYPE)\r\n\r\n      print('Features:')\r\n      print(features)\r\n      print('Labels:')\r\n      print(labels)\r\n      \r\n      return features, labels \r\n      \r\n     \r\n    labels = [0]*len(filenames)\r\n    labels = np.array(labels)\r\n    labels = tf.constant(labels)\r\n    labels = tf.cast(labels, TF_DTYPE)\r\n    \r\n    dataset = tf.data.Dataset.from_tensor_slices((filenames, labels))  \r\n    \r\n    dataset = dataset.map(\r\n      lambda filename, label: tuple(tf.py_func(\r\n        _my_parse_function, [filename, label], [TF_DTYPE, label.dtype])))\r\n    \r\n    print(dataset)\r\n\r\n    dataset = dataset.map(_set_shapes)\r\n    \r\n    print(\"Dataset point 1:\")\r\n    print(dataset)\r\n    \r\n    if perform_shuffle:\r\n        dataset = dataset.shuffle(buffer_size=batch_size)\r\n    print(\"Dataset point 2:\")\r\n    print(dataset)\r\n    dataset = dataset.repeat(repeat_count)  # Repeats dataset this # times\r\n    print(\"Dataset point 3:\")\r\n    print(dataset)\r\n    dataset = dataset.batch(batch_size)  # Batch size to use\r\n    the_iterator = dataset.make_one_shot_iterator()    \r\n    batch_features, batch_labels = the_iterator.get_next()\r\n    print('Batch features') \r\n    print(batch_features) \r\n    print('Batch labels') \r\n    print(batch_labels) \r\n    return batch_features, batch_labels\r\n  \r\n  def test_keras_estimator(self, n_records=1, batch_size=1):\r\n    gpu_options = tf.GPUOptions(allow_growth=True) \r\n    sess_config = tf.ConfigProto(gpu_options=gpu_options, allow_soft_placement=True, log_device_placement=False)        \r\n    run_config = tf.estimator.RunConfig(session_config=sess_config)   \r\n    \r\n    train_model = ModelLSTM(batch_size=batch_size, max_length=SEQ_LENGTH, device_id=self.device_id, \r\n                            n_input_dim=INPUT_DIM, n_output_dim=OUTPUT_DIM)\r\n    self.estimator = tf.keras.estimator.model_to_estimator(keras_model=train_model.model,\r\n                                                           model_dir='.', config=run_config)\r\n    train_records = list()\r\n    for i in range(0, n_records):\r\n      train_records.append('record_' + str(i))\r\n      \r\n    train_spec = tf.estimator.TrainSpec(input_fn=lambda: \r\n                                        self.the_input_fn(train_records, perform_shuffle=False, batch_size=batch_size), \r\n                                        max_steps=TRAIN_EPOCHS)\r\n    eval_spec = tf.estimator.EvalSpec(input_fn=lambda: \r\n                                        self.the_input_fn(train_records, perform_shuffle=False, batch_size=batch_size))\r\n\r\n    tf.estimator.train_and_evaluate(self.estimator, train_spec, eval_spec)\r\n    \r\n     \r\n  def test_keras(self, n_records=1, batch_size=1):\r\n    gpu_options = tf.GPUOptions(allow_growth=True) \r\n    sess_config = tf.ConfigProto(gpu_options=gpu_options, allow_soft_placement=True, log_device_placement=False)        \r\n    K.set_session(tf.Session(config=sess_config))\r\n      \r\n    train_model = ModelLSTM(batch_size=batch_size, max_length=SEQ_LENGTH, device_id=self.device_id, \r\n                            n_input_dim=INPUT_DIM, n_output_dim=OUTPUT_DIM)\r\n    features = np.zeros((n_records, SEQ_LENGTH, INPUT_DIM), dtype=NP_DTYPE)\r\n    labels = np.zeros((n_records, SEQ_LENGTH, OUTPUT_DIM), dtype=NP_DTYPE)\r\n\r\n    train_model.model.fit(x=features, y=labels, batch_size=batch_size, epochs=TRAIN_EPOCHS, verbose=1)\r\n    train_model.model.evaluate(x=features, y=labels, batch_size=batch_size, verbose=1)    \r\n     \r\n     \r\n     \r\nif __name__ == \"__main__\":\r\n  mt = TestKerasAndEstimator()\r\n  if USE_ESTIMATOR:\r\n      mt.test_keras_estimator(n_records=N_RECORDS, batch_size=BATCH_SIZE)\r\n  else:\r\n      mt.test_keras(n_records=N_RECORDS, batch_size=BATCH_SIZE)\r\n\r\n    \r\n  \r\n```\r\nThanks!"}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19965", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19965/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19965/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19965/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/19965", "id": 331827617, "node_id": "MDU6SXNzdWUzMzE4Mjc2MTc=", "number": 19965, "title": "[feature request] Quasi recurrent neural networks (QRNN) in tensorflow ", "user": {"login": "dhwajraj", "id": 9861437, "node_id": "MDQ6VXNlcjk4NjE0Mzc=", "avatar_url": "https://avatars3.githubusercontent.com/u/9861437?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dhwajraj", "html_url": "https://github.com/dhwajraj", "followers_url": "https://api.github.com/users/dhwajraj/followers", "following_url": "https://api.github.com/users/dhwajraj/following{/other_user}", "gists_url": "https://api.github.com/users/dhwajraj/gists{/gist_id}", "starred_url": "https://api.github.com/users/dhwajraj/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dhwajraj/subscriptions", "organizations_url": "https://api.github.com/users/dhwajraj/orgs", "repos_url": "https://api.github.com/users/dhwajraj/repos", "events_url": "https://api.github.com/users/dhwajraj/events{/privacy}", "received_events_url": "https://api.github.com/users/dhwajraj/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1097545817, "node_id": "MDU6TGFiZWwxMDk3NTQ1ODE3", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/comp:apis", "name": "comp:apis", "color": "0052cc", "default": false, "description": ""}, {"id": 473173272, "node_id": "MDU6TGFiZWw0NzMxNzMyNzI=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:feature", "name": "type:feature", "color": "159b2e", "default": false, "description": ""}], "state": "open", "locked": false, "assignee": {"login": "ebrevdo", "id": 1794715, "node_id": "MDQ6VXNlcjE3OTQ3MTU=", "avatar_url": "https://avatars0.githubusercontent.com/u/1794715?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ebrevdo", "html_url": "https://github.com/ebrevdo", "followers_url": "https://api.github.com/users/ebrevdo/followers", "following_url": "https://api.github.com/users/ebrevdo/following{/other_user}", "gists_url": "https://api.github.com/users/ebrevdo/gists{/gist_id}", "starred_url": "https://api.github.com/users/ebrevdo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ebrevdo/subscriptions", "organizations_url": "https://api.github.com/users/ebrevdo/orgs", "repos_url": "https://api.github.com/users/ebrevdo/repos", "events_url": "https://api.github.com/users/ebrevdo/events{/privacy}", "received_events_url": "https://api.github.com/users/ebrevdo/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "ebrevdo", "id": 1794715, "node_id": "MDQ6VXNlcjE3OTQ3MTU=", "avatar_url": "https://avatars0.githubusercontent.com/u/1794715?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ebrevdo", "html_url": "https://github.com/ebrevdo", "followers_url": "https://api.github.com/users/ebrevdo/followers", "following_url": "https://api.github.com/users/ebrevdo/following{/other_user}", "gists_url": "https://api.github.com/users/ebrevdo/gists{/gist_id}", "starred_url": "https://api.github.com/users/ebrevdo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ebrevdo/subscriptions", "organizations_url": "https://api.github.com/users/ebrevdo/orgs", "repos_url": "https://api.github.com/users/ebrevdo/repos", "events_url": "https://api.github.com/users/ebrevdo/events{/privacy}", "received_events_url": "https://api.github.com/users/ebrevdo/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2018-06-13T03:22:35Z", "updated_at": "2019-01-24T18:52:59Z", "closed_at": null, "author_association": "NONE", "body": "It would be cool to have native Quasi recurrent neural networks (QRNN) implementation included in the tensorflow package.\r\n\r\nFollowing is the paper : Bradbury, James, et al. \"Quasi-recurrent neural networks.\" arXiv preprint arXiv:1611.01576 (2016). [link](https://arxiv.org/pdf/1611.01576)\r\nIt is claimed in the paper that QRNN is 14-16x faster than cudnn_lstm while giving same accuracies.\r\n\r\nreference : https://github.com/salesforce/pytorch-qrnn\r\n\r\n\r\n**System information**\r\nHave I written custom code (as opposed to using a stock example script provided in TensorFlow): No\r\nOS Platform and Distribution (e.g., Linux Ubuntu 16.04): Linux Ubuntu 18.04\r\nTensorFlow installed from (source or binary): binary\r\nTensorFlow version (use command below): 1.8.0\r\nPython version: 3.6.5\r\nBazel version (if compiling from source): none\r\nGCC/Compiler version (if compiling from source): none\r\nCUDA/cuDNN version: none\r\nGPU model and memory: none\r\nExact command to reproduce: none"}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19957", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19957/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19957/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19957/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/19957", "id": 331762921, "node_id": "MDU6SXNzdWUzMzE3NjI5MjE=", "number": 19957, "title": "tf.dynamic_partition cannot have dynamic num_partitions", "user": {"login": "Chasearmer", "id": 23300817, "node_id": "MDQ6VXNlcjIzMzAwODE3", "avatar_url": "https://avatars3.githubusercontent.com/u/23300817?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Chasearmer", "html_url": "https://github.com/Chasearmer", "followers_url": "https://api.github.com/users/Chasearmer/followers", "following_url": "https://api.github.com/users/Chasearmer/following{/other_user}", "gists_url": "https://api.github.com/users/Chasearmer/gists{/gist_id}", "starred_url": "https://api.github.com/users/Chasearmer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Chasearmer/subscriptions", "organizations_url": "https://api.github.com/users/Chasearmer/orgs", "repos_url": "https://api.github.com/users/Chasearmer/repos", "events_url": "https://api.github.com/users/Chasearmer/events{/privacy}", "received_events_url": "https://api.github.com/users/Chasearmer/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 473172988, "node_id": "MDU6TGFiZWw0NzMxNzI5ODg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:bug", "name": "type:bug", "color": "159b2e", "default": false, "description": ""}], "state": "open", "locked": false, "assignee": {"login": "aselle", "id": 326106, "node_id": "MDQ6VXNlcjMyNjEwNg==", "avatar_url": "https://avatars1.githubusercontent.com/u/326106?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aselle", "html_url": "https://github.com/aselle", "followers_url": "https://api.github.com/users/aselle/followers", "following_url": "https://api.github.com/users/aselle/following{/other_user}", "gists_url": "https://api.github.com/users/aselle/gists{/gist_id}", "starred_url": "https://api.github.com/users/aselle/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aselle/subscriptions", "organizations_url": "https://api.github.com/users/aselle/orgs", "repos_url": "https://api.github.com/users/aselle/repos", "events_url": "https://api.github.com/users/aselle/events{/privacy}", "received_events_url": "https://api.github.com/users/aselle/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "aselle", "id": 326106, "node_id": "MDQ6VXNlcjMyNjEwNg==", "avatar_url": "https://avatars1.githubusercontent.com/u/326106?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aselle", "html_url": "https://github.com/aselle", "followers_url": "https://api.github.com/users/aselle/followers", "following_url": "https://api.github.com/users/aselle/following{/other_user}", "gists_url": "https://api.github.com/users/aselle/gists{/gist_id}", "starred_url": "https://api.github.com/users/aselle/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aselle/subscriptions", "organizations_url": "https://api.github.com/users/aselle/orgs", "repos_url": "https://api.github.com/users/aselle/repos", "events_url": "https://api.github.com/users/aselle/events{/privacy}", "received_events_url": "https://api.github.com/users/aselle/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 11, "created_at": "2018-06-12T21:36:24Z", "updated_at": "2019-08-05T15:03:35Z", "closed_at": null, "author_association": "NONE", "body": "I am attempting to use `tf.dynamic_partition` as so:\r\n`tf.dynamic_partition(features, membership, tf.reduce_max(membership))`\r\nUnfortunately, however, it is throwing this error\r\n>TypeError: Expected int for argument 'num_partitions' not <tf.Tensor 'Max:0' shape=() dtype=int32>.\r\n\r\nCan `tf.dynamic_partition` not receive a dynamic input for num_partitions? "}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19944", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19944/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19944/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19944/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/19944", "id": 331609476, "node_id": "MDU6SXNzdWUzMzE2MDk0NzY=", "number": 19944, "title": "c++ gradient is not implemented for concat/stack", "user": {"login": "tcmxx", "id": 6486152, "node_id": "MDQ6VXNlcjY0ODYxNTI=", "avatar_url": "https://avatars2.githubusercontent.com/u/6486152?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tcmxx", "html_url": "https://github.com/tcmxx", "followers_url": "https://api.github.com/users/tcmxx/followers", "following_url": "https://api.github.com/users/tcmxx/following{/other_user}", "gists_url": "https://api.github.com/users/tcmxx/gists{/gist_id}", "starred_url": "https://api.github.com/users/tcmxx/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tcmxx/subscriptions", "organizations_url": "https://api.github.com/users/tcmxx/orgs", "repos_url": "https://api.github.com/users/tcmxx/repos", "events_url": "https://api.github.com/users/tcmxx/events{/privacy}", "received_events_url": "https://api.github.com/users/tcmxx/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 473173272, "node_id": "MDU6TGFiZWw0NzMxNzMyNzI=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:feature", "name": "type:feature", "color": "159b2e", "default": false, "description": ""}], "state": "open", "locked": false, "assignee": {"login": "suharshs", "id": 1450614, "node_id": "MDQ6VXNlcjE0NTA2MTQ=", "avatar_url": "https://avatars1.githubusercontent.com/u/1450614?v=4", "gravatar_id": "", "url": "https://api.github.com/users/suharshs", "html_url": "https://github.com/suharshs", "followers_url": "https://api.github.com/users/suharshs/followers", "following_url": "https://api.github.com/users/suharshs/following{/other_user}", "gists_url": "https://api.github.com/users/suharshs/gists{/gist_id}", "starred_url": "https://api.github.com/users/suharshs/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/suharshs/subscriptions", "organizations_url": "https://api.github.com/users/suharshs/orgs", "repos_url": "https://api.github.com/users/suharshs/repos", "events_url": "https://api.github.com/users/suharshs/events{/privacy}", "received_events_url": "https://api.github.com/users/suharshs/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "suharshs", "id": 1450614, "node_id": "MDQ6VXNlcjE0NTA2MTQ=", "avatar_url": "https://avatars1.githubusercontent.com/u/1450614?v=4", "gravatar_id": "", "url": "https://api.github.com/users/suharshs", "html_url": "https://github.com/suharshs", "followers_url": "https://api.github.com/users/suharshs/followers", "following_url": "https://api.github.com/users/suharshs/following{/other_user}", "gists_url": "https://api.github.com/users/suharshs/gists{/gist_id}", "starred_url": "https://api.github.com/users/suharshs/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/suharshs/subscriptions", "organizations_url": "https://api.github.com/users/suharshs/orgs", "repos_url": "https://api.github.com/users/suharshs/repos", "events_url": "https://api.github.com/users/suharshs/events{/privacy}", "received_events_url": "https://api.github.com/users/suharshs/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 15, "created_at": "2018-06-12T14:20:50Z", "updated_at": "2019-11-20T20:41:20Z", "closed_at": null, "author_association": "NONE", "body": "Feature Request:\r\nI noticed that c++ gradient for concat or stack is not implemented while i am using tensorflow sharp. I think those are quite important operations.  Could you please somehow consider implement those? Or is there any other replacement?\r\n\r\nThank you!\r\n\r\n"}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19904", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19904/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19904/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19904/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/19904", "id": 331096306, "node_id": "MDU6SXNzdWUzMzEwOTYzMDY=", "number": 19904, "title": "Multiple Prediction With Tensorflow Model On iOS Swift, Objective-C", "user": {"login": "cagrigider", "id": 28455404, "node_id": "MDQ6VXNlcjI4NDU1NDA0", "avatar_url": "https://avatars0.githubusercontent.com/u/28455404?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cagrigider", "html_url": "https://github.com/cagrigider", "followers_url": "https://api.github.com/users/cagrigider/followers", "following_url": "https://api.github.com/users/cagrigider/following{/other_user}", "gists_url": "https://api.github.com/users/cagrigider/gists{/gist_id}", "starred_url": "https://api.github.com/users/cagrigider/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cagrigider/subscriptions", "organizations_url": "https://api.github.com/users/cagrigider/orgs", "repos_url": "https://api.github.com/users/cagrigider/repos", "events_url": "https://api.github.com/users/cagrigider/events{/privacy}", "received_events_url": "https://api.github.com/users/cagrigider/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 404586594, "node_id": "MDU6TGFiZWw0MDQ1ODY1OTQ=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:awaiting%20tensorflower", "name": "stat:awaiting tensorflower", "color": "f4b400", "default": false, "description": ""}], "state": "open", "locked": false, "assignee": {"login": "mhyttsten", "id": 5739464, "node_id": "MDQ6VXNlcjU3Mzk0NjQ=", "avatar_url": "https://avatars0.githubusercontent.com/u/5739464?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mhyttsten", "html_url": "https://github.com/mhyttsten", "followers_url": "https://api.github.com/users/mhyttsten/followers", "following_url": "https://api.github.com/users/mhyttsten/following{/other_user}", "gists_url": "https://api.github.com/users/mhyttsten/gists{/gist_id}", "starred_url": "https://api.github.com/users/mhyttsten/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mhyttsten/subscriptions", "organizations_url": "https://api.github.com/users/mhyttsten/orgs", "repos_url": "https://api.github.com/users/mhyttsten/repos", "events_url": "https://api.github.com/users/mhyttsten/events{/privacy}", "received_events_url": "https://api.github.com/users/mhyttsten/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "mhyttsten", "id": 5739464, "node_id": "MDQ6VXNlcjU3Mzk0NjQ=", "avatar_url": "https://avatars0.githubusercontent.com/u/5739464?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mhyttsten", "html_url": "https://github.com/mhyttsten", "followers_url": "https://api.github.com/users/mhyttsten/followers", "following_url": "https://api.github.com/users/mhyttsten/following{/other_user}", "gists_url": "https://api.github.com/users/mhyttsten/gists{/gist_id}", "starred_url": "https://api.github.com/users/mhyttsten/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mhyttsten/subscriptions", "organizations_url": "https://api.github.com/users/mhyttsten/orgs", "repos_url": "https://api.github.com/users/mhyttsten/repos", "events_url": "https://api.github.com/users/mhyttsten/events{/privacy}", "received_events_url": "https://api.github.com/users/mhyttsten/received_events", "type": "User", "site_admin": false}, {"login": "drpngx", "id": 20959853, "node_id": "MDQ6VXNlcjIwOTU5ODUz", "avatar_url": "https://avatars1.githubusercontent.com/u/20959853?v=4", "gravatar_id": "", "url": "https://api.github.com/users/drpngx", "html_url": "https://github.com/drpngx", "followers_url": "https://api.github.com/users/drpngx/followers", "following_url": "https://api.github.com/users/drpngx/following{/other_user}", "gists_url": "https://api.github.com/users/drpngx/gists{/gist_id}", "starred_url": "https://api.github.com/users/drpngx/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/drpngx/subscriptions", "organizations_url": "https://api.github.com/users/drpngx/orgs", "repos_url": "https://api.github.com/users/drpngx/repos", "events_url": "https://api.github.com/users/drpngx/events{/privacy}", "received_events_url": "https://api.github.com/users/drpngx/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 6, "created_at": "2018-06-11T08:45:19Z", "updated_at": "2019-01-19T20:50:38Z", "closed_at": null, "author_association": "NONE", "body": "I am trying to do character recognition mobile app with CNN. My model predict with %99,6 accuracy on python.\r\nNow, I am trying to implement my model on iOS. \r\nI used this project for sample project [Tensorflow Camera Example](https://github.com/tensorflow/tensorflow/tree/master/tensorflow/examples/ios/camera)\r\nI created an app, it can predict right single character on screen. But I need to predict 5 character (like a code ABCDE) at same time. And when I change settings to send 5 CVPixelBuffer value to model, it predict wrong. When I send wrong predicted images to computer and try with python , it predicts true. I think there should be some special setting which I do not know, or something wrong about my function to get CVPixelBuffer value from UIImage.\r\nI trained my model with 45x45 images. Now I crop 5 images (45x45 pixels) and send them to model.\r\n\r\nMy function to get CVPixelBuffer : \r\n\r\n    extension UIImage {\r\n    /**\r\n     Resizes the image to width x height and converts it to an BGR CVPixelBuffer.\r\n     */\r\n    public func pixelBuffer(width: Int, height: Int) -> CVPixelBuffer? {\r\n        return pixelBuffer(width: width, height: height,\r\n                           pixelFormatType: kCVPixelFormatType_32BGRA,\r\n                           colorSpace: CGColorSpaceCreateDeviceRGB(),\r\n                           alphaInfo: .noneSkipLast)\r\n    }\r\n    func pixelBuffer(width: Int, height: Int, pixelFormatType: OSType,\r\n                     colorSpace: CGColorSpace, alphaInfo: CGImageAlphaInfo) -> CVPixelBuffer? {\r\n        var maybePixelBuffer: CVPixelBuffer?\r\n        let attrs = [kCVPixelBufferCGImageCompatibilityKey: kCFBooleanTrue,\r\n                     kCVPixelBufferCGBitmapContextCompatibilityKey: kCFBooleanTrue]\r\n        let status = CVPixelBufferCreate(kCFAllocatorDefault,\r\n                                         width,\r\n                                         height,\r\n                                         pixelFormatType,\r\n                                         attrs as CFDictionary,\r\n                                         &maybePixelBuffer)\r\n        \r\n        guard status == kCVReturnSuccess, let pixelBuffer = maybePixelBuffer else {\r\n            return nil\r\n        }\r\n        \r\n        CVPixelBufferLockBaseAddress(pixelBuffer, CVPixelBufferLockFlags(rawValue: 0))\r\n        let pixelData = CVPixelBufferGetBaseAddress(pixelBuffer)\r\n        \r\n        guard let context = CGContext(data: pixelData,\r\n                                      width: width,\r\n                                      height: height,\r\n                                      bitsPerComponent: 8,\r\n                                      bytesPerRow: CVPixelBufferGetBytesPerRow(pixelBuffer),\r\n                                      space: colorSpace,\r\n                                      bitmapInfo: alphaInfo.rawValue)\r\n            else {\r\n                return nil\r\n        }\r\n        \r\n        UIGraphicsPushContext(context)\r\n        context.translateBy(x: 0, y: CGFloat(height))\r\n        context.scaleBy(x: 1, y: -1)\r\n        self.draw(in: CGRect(x: 0, y: 0, width: width, height: height))\r\n        UIGraphicsPopContext()\r\n        \r\n        CVPixelBufferUnlockBaseAddress(pixelBuffer, CVPixelBufferLockFlags(rawValue: 0))\r\n        return pixelBuffer\r\n    }\r\n\r\nThanks.\r\n\r\n- Have I written custom code: Yes\r\n- OS Platform and Distribution: Mac OS 10.13.3 High Sierra\r\n- TensorFlow installed from (source or binary): source\r\n- TensorFlow version: 1.1.0 on Mac (Tensorflow-Experimental on iOS)\r\n- Python version: 3\r\n- Bazel version: 0.13.0\r\n- CUDA/cuDNN: N/A\r\n- GPU model and Memory: N/A\r\n- Exact command to reproduce: Single image prediction works well. But cannot predict multiple image.(Prediction)"}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19893", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19893/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19893/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19893/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/19893", "id": 330980272, "node_id": "MDU6SXNzdWUzMzA5ODAyNzI=", "number": 19893, "title": "\u201cgrp c++/grpc++.h\u201d: No such file or directory ( D:\\tensorflow-master\\tensorflow\\core\\common_runtime\\eager\\context.cc)", "user": {"login": "mm1860", "id": 15964887, "node_id": "MDQ6VXNlcjE1OTY0ODg3", "avatar_url": "https://avatars1.githubusercontent.com/u/15964887?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mm1860", "html_url": "https://github.com/mm1860", "followers_url": "https://api.github.com/users/mm1860/followers", "following_url": "https://api.github.com/users/mm1860/following{/other_user}", "gists_url": "https://api.github.com/users/mm1860/gists{/gist_id}", "starred_url": "https://api.github.com/users/mm1860/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mm1860/subscriptions", "organizations_url": "https://api.github.com/users/mm1860/orgs", "repos_url": "https://api.github.com/users/mm1860/repos", "events_url": "https://api.github.com/users/mm1860/events{/privacy}", "received_events_url": "https://api.github.com/users/mm1860/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 299643928, "node_id": "MDU6TGFiZWwyOTk2NDM5Mjg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:contributions%20welcome", "name": "stat:contributions welcome", "color": "f4b400", "default": false, "description": ""}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 37, "created_at": "2018-06-10T15:59:24Z", "updated_at": "2019-05-07T09:08:22Z", "closed_at": null, "author_association": "NONE", "body": "\r\n\u201cD:\\tensorflow-master\\tensorflow\\contrib\\cmake\\build\\tf_tutorials_example_trainer.vcxproj\u201d(\u9ed8\u8ba4\u76ee\u6807) (1) ->\r\n\u201cD:\\tensorflow-master\\tensorflow\\contrib\\cmake\\build\\tf_core_cpu.vcxproj\u201d(\u9ed8\u8ba4\u76ee\u6807) (130) ->\r\n(ClCompile \u76ee\u6807) ->\r\n  D:\\tensorflow-master\\tensorflow/core/distributed_runtime/rpc/grpc_server_lib.h(21): fatal error C1083: \u65e0\u6cd5\u6253\u5f00\u5305\u62ec\u6587\u4ef6: \u201cgrp\r\nc++/grpc++.h\u201d: No such file or directory (\u7f16\u8bd1\u6e90\u6587\u4ef6 D:\\tensorflow-master\\tensorflow\\core\\common_runtime\\eager\\context.cc) [\r\nD:\\tensorflow-master\\tensorflow\\contrib\\cmake\\build\\tf_core_cpu.vcxproj]\r\n  D:\\tensorflow-master\\tensorflow/core/distributed_runtime/rpc/grpc_server_lib.h(21): fatal error C1083: \u65e0\u6cd5\u6253\u5f00\u5305\u62ec\u6587\u4ef6: \u201cgrp\r\nc++/grpc++.h\u201d: No such file or directory (\u7f16\u8bd1\u6e90\u6587\u4ef6 D:\\tensorflow-master\\tensorflow\\core\\common_runtime\\eager\\eager_operati\r\non.cc) [D:\\tensorflow-master\\tensorflow\\contrib\\cmake\\build\\tf_core_cpu.vcxproj]\r\n  D:\\tensorflow-master\\tensorflow/core/distributed_runtime/rpc/grpc_server_lib.h(21): fatal error C1083: \u65e0\u6cd5\u6253\u5f00\u5305\u62ec\u6587\u4ef6: \u201cgrp\r\nc++/grpc++.h\u201d: No such file or directory (\u7f16\u8bd1\u6e90\u6587\u4ef6 D:\\tensorflow-master\\tensorflow\\core\\common_runtime\\eager\\execute.cc) [\r\nD:\\tensorflow-master\\tensorflow\\contrib\\cmake\\build\\tf_core_cpu.vcxproj]\r\n  D:\\tensorflow-master\\tensorflow/core/distributed_runtime/rpc/grpc_server_lib.h(21): fatal error C1083: \u65e0\u6cd5\u6253\u5f00\u5305\u62ec\u6587\u4ef6: \u201cgrp\r\nc++/grpc++.h\u201d: No such file or directory (\u7f16\u8bd1\u6e90\u6587\u4ef6 D:\\tensorflow-master\\tensorflow\\core\\common_runtime\\eager\\tensor_handle\r\n.cc) [D:\\tensorflow-master\\tensorflow\\contrib\\cmake\\build\\tf_core_cpu.vcxproj]"}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19864", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19864/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19864/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19864/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/19864", "id": 330750722, "node_id": "MDU6SXNzdWUzMzA3NTA3MjI=", "number": 19864, "title": "No dtype for array of arrays into tf.keras.Input", "user": {"login": "Chasearmer", "id": 23300817, "node_id": "MDQ6VXNlcjIzMzAwODE3", "avatar_url": "https://avatars3.githubusercontent.com/u/23300817?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Chasearmer", "html_url": "https://github.com/Chasearmer", "followers_url": "https://api.github.com/users/Chasearmer/followers", "following_url": "https://api.github.com/users/Chasearmer/following{/other_user}", "gists_url": "https://api.github.com/users/Chasearmer/gists{/gist_id}", "starred_url": "https://api.github.com/users/Chasearmer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Chasearmer/subscriptions", "organizations_url": "https://api.github.com/users/Chasearmer/orgs", "repos_url": "https://api.github.com/users/Chasearmer/repos", "events_url": "https://api.github.com/users/Chasearmer/events{/privacy}", "received_events_url": "https://api.github.com/users/Chasearmer/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": {"login": "fchollet", "id": 710255, "node_id": "MDQ6VXNlcjcxMDI1NQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/710255?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fchollet", "html_url": "https://github.com/fchollet", "followers_url": "https://api.github.com/users/fchollet/followers", "following_url": "https://api.github.com/users/fchollet/following{/other_user}", "gists_url": "https://api.github.com/users/fchollet/gists{/gist_id}", "starred_url": "https://api.github.com/users/fchollet/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fchollet/subscriptions", "organizations_url": "https://api.github.com/users/fchollet/orgs", "repos_url": "https://api.github.com/users/fchollet/repos", "events_url": "https://api.github.com/users/fchollet/events{/privacy}", "received_events_url": "https://api.github.com/users/fchollet/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "fchollet", "id": 710255, "node_id": "MDQ6VXNlcjcxMDI1NQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/710255?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fchollet", "html_url": "https://github.com/fchollet", "followers_url": "https://api.github.com/users/fchollet/followers", "following_url": "https://api.github.com/users/fchollet/following{/other_user}", "gists_url": "https://api.github.com/users/fchollet/gists{/gist_id}", "starred_url": "https://api.github.com/users/fchollet/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fchollet/subscriptions", "organizations_url": "https://api.github.com/users/fchollet/orgs", "repos_url": "https://api.github.com/users/fchollet/repos", "events_url": "https://api.github.com/users/fchollet/events{/privacy}", "received_events_url": "https://api.github.com/users/fchollet/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 4, "created_at": "2018-06-08T17:59:17Z", "updated_at": "2019-08-03T06:25:28Z", "closed_at": null, "author_association": "NONE", "body": "I would like to input an array of arrays into `tf.keras.Input()`, however that requires me to specify a dtype to ensure it doesn't default to expecting a float. However it doesn't appear as though there is a viable dtype for an array of arrays. For an array by itself, `dtype=float32_ref` appears to work, however this does not work for an array of arrays. `tf.keras.backend.dtype()` throws an error if I attempt to put in an array to see it's type as well. Does this dtype not exist?"}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19832", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19832/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19832/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19832/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/19832", "id": 330219796, "node_id": "MDU6SXNzdWUzMzAyMTk3OTY=", "number": 19832, "title": "set_intersection doesn't work as expectation - tensorflow 1.6.0", "user": {"login": "llv22", "id": 679518, "node_id": "MDQ6VXNlcjY3OTUxOA==", "avatar_url": "https://avatars1.githubusercontent.com/u/679518?v=4", "gravatar_id": "", "url": "https://api.github.com/users/llv22", "html_url": "https://github.com/llv22", "followers_url": "https://api.github.com/users/llv22/followers", "following_url": "https://api.github.com/users/llv22/following{/other_user}", "gists_url": "https://api.github.com/users/llv22/gists{/gist_id}", "starred_url": "https://api.github.com/users/llv22/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/llv22/subscriptions", "organizations_url": "https://api.github.com/users/llv22/orgs", "repos_url": "https://api.github.com/users/llv22/repos", "events_url": "https://api.github.com/users/llv22/events{/privacy}", "received_events_url": "https://api.github.com/users/llv22/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": {"login": "ebrevdo", "id": 1794715, "node_id": "MDQ6VXNlcjE3OTQ3MTU=", "avatar_url": "https://avatars0.githubusercontent.com/u/1794715?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ebrevdo", "html_url": "https://github.com/ebrevdo", "followers_url": "https://api.github.com/users/ebrevdo/followers", "following_url": "https://api.github.com/users/ebrevdo/following{/other_user}", "gists_url": "https://api.github.com/users/ebrevdo/gists{/gist_id}", "starred_url": "https://api.github.com/users/ebrevdo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ebrevdo/subscriptions", "organizations_url": "https://api.github.com/users/ebrevdo/orgs", "repos_url": "https://api.github.com/users/ebrevdo/repos", "events_url": "https://api.github.com/users/ebrevdo/events{/privacy}", "received_events_url": "https://api.github.com/users/ebrevdo/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "ebrevdo", "id": 1794715, "node_id": "MDQ6VXNlcjE3OTQ3MTU=", "avatar_url": "https://avatars0.githubusercontent.com/u/1794715?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ebrevdo", "html_url": "https://github.com/ebrevdo", "followers_url": "https://api.github.com/users/ebrevdo/followers", "following_url": "https://api.github.com/users/ebrevdo/following{/other_user}", "gists_url": "https://api.github.com/users/ebrevdo/gists{/gist_id}", "starred_url": "https://api.github.com/users/ebrevdo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ebrevdo/subscriptions", "organizations_url": "https://api.github.com/users/ebrevdo/orgs", "repos_url": "https://api.github.com/users/ebrevdo/repos", "events_url": "https://api.github.com/users/ebrevdo/events{/privacy}", "received_events_url": "https://api.github.com/users/ebrevdo/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 2, "created_at": "2018-06-07T10:53:05Z", "updated_at": "2018-12-14T18:54:44Z", "closed_at": null, "author_association": "NONE", "body": "### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**: NO\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**:\r\nLinux Ubuntu 16.04\r\n- **TensorFlow installed from (source or binary)**:\r\nsource\r\n- **TensorFlow version (use command below)**:\r\n1.6.0\r\n- **Python version**: \r\n3.6.5 (anaconda)\r\n- **Bazel version (if compiling from source)**:\r\n0.11\r\n- **GCC/Compiler version (if compiling from source)**:\r\ngcc-5.4.0\r\n- **CUDA/cuDNN version**:\r\nCUDA9.1 and cuDNN 7.1.4\r\n- **GPU model and memory**:\r\nGPU model and 16G memory\r\n- **Exact command to reproduce**:\r\n\r\n```python\r\nimport collections\r\n\r\na = collections.OrderedDict([\r\n      ((0, 0), 1),\r\n      ((0, 3), 1),\r\n      ((1, 1), 1),\r\n      ((1, 3), 1),\r\n      ((2, 0), 1),\r\n      ((2, 1), 1)\r\n  ])\r\na = tf.SparseTensor(list(a.keys()), list(a.values()), dense_shape=[3, 4])\r\n\r\nb = collections.OrderedDict([\r\n      ((0, 0), 1),\r\n      ((0, 3), 1),\r\n      ((1, 1), 1),\r\n      ((1, 2), 1),\r\n      ((1, 3), 1),\r\n      ((2, 0), 1),\r\n      ((2, 1), 1)\r\n  ])\r\nb = tf.SparseTensor(list(b.keys()), list(b.values()), dense_shape=[3, 4])\r\n\r\nwith tf.Session() as sess:\r\n    print(sess.run(a))\r\n    print(sess.run(b))\r\n    print(sess.run(tf.contrib.metrics.set_intersection(a, b)))\r\n\r\n```\r\n\r\n### Describe the problem\r\nFor set_intersection, for my own understanding, output should be \r\n\r\n```bash\r\nSparseTensorValue(indices=array([[0, 0],\r\n       [0, 3],\r\n       [1, 1],\r\n       [1, 3],\r\n       [2, 0],\r\n       [2, 1]]), values=array([1, 1, 1, 1, 1, 1], dtype=int32), dense_shape=array([3, 4]))\r\n```\r\n\r\nHowever, I get the result as follow:\r\n\r\n```bash\r\nSparseTensorValue(indices=array([[0, 0],\r\n       [1, 0],\r\n       [2, 0]]), values=array([1, 1, 1], dtype=int32), dense_shape=array([3, 1]))\r\n```\r\n\r\nI don't understand if I'm not fully understanding for the points....\r\n\r\nBest Regards\r\nOrlando"}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19825", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19825/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19825/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19825/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/19825", "id": 330099107, "node_id": "MDU6SXNzdWUzMzAwOTkxMDc=", "number": 19825, "title": "Feature request: Concurrently serving models with optimizers", "user": {"login": "rothn", "id": 4665783, "node_id": "MDQ6VXNlcjQ2NjU3ODM=", "avatar_url": "https://avatars3.githubusercontent.com/u/4665783?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rothn", "html_url": "https://github.com/rothn", "followers_url": "https://api.github.com/users/rothn/followers", "following_url": "https://api.github.com/users/rothn/following{/other_user}", "gists_url": "https://api.github.com/users/rothn/gists{/gist_id}", "starred_url": "https://api.github.com/users/rothn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rothn/subscriptions", "organizations_url": "https://api.github.com/users/rothn/orgs", "repos_url": "https://api.github.com/users/rothn/repos", "events_url": "https://api.github.com/users/rothn/events{/privacy}", "received_events_url": "https://api.github.com/users/rothn/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": {"login": "tatatodd", "id": 5453737, "node_id": "MDQ6VXNlcjU0NTM3Mzc=", "avatar_url": "https://avatars3.githubusercontent.com/u/5453737?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tatatodd", "html_url": "https://github.com/tatatodd", "followers_url": "https://api.github.com/users/tatatodd/followers", "following_url": "https://api.github.com/users/tatatodd/following{/other_user}", "gists_url": "https://api.github.com/users/tatatodd/gists{/gist_id}", "starred_url": "https://api.github.com/users/tatatodd/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tatatodd/subscriptions", "organizations_url": "https://api.github.com/users/tatatodd/orgs", "repos_url": "https://api.github.com/users/tatatodd/repos", "events_url": "https://api.github.com/users/tatatodd/events{/privacy}", "received_events_url": "https://api.github.com/users/tatatodd/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "tatatodd", "id": 5453737, "node_id": "MDQ6VXNlcjU0NTM3Mzc=", "avatar_url": "https://avatars3.githubusercontent.com/u/5453737?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tatatodd", "html_url": "https://github.com/tatatodd", "followers_url": "https://api.github.com/users/tatatodd/followers", "following_url": "https://api.github.com/users/tatatodd/following{/other_user}", "gists_url": "https://api.github.com/users/tatatodd/gists{/gist_id}", "starred_url": "https://api.github.com/users/tatatodd/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tatatodd/subscriptions", "organizations_url": "https://api.github.com/users/tatatodd/orgs", "repos_url": "https://api.github.com/users/tatatodd/repos", "events_url": "https://api.github.com/users/tatatodd/events{/privacy}", "received_events_url": "https://api.github.com/users/tatatodd/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 2, "created_at": "2018-06-07T02:56:39Z", "updated_at": "2018-12-20T18:47:33Z", "closed_at": null, "author_association": "NONE", "body": "==Problem==\r\n\r\nI want to use TensorFlow Serving to serve an output given certain placeholder inputs with a single run. The graph looks like this:\r\n\r\nInput vector -> embedding lookup -> iterative inference with optimizer and tf.while_loop -> matrix math using inferred vector -> top K -> output\r\n\r\nThe problem is that I can't simply use a Tensor in the loop because tf.Optimizer requires a Variable. This in turn forces me to modify global state in each prediction, effectively prohibiting concurrency.\r\n\r\n==Feature Request==\r\n\r\nThis could be solved by implementing:\r\n* a version of Optimizer.minimize() that returns a list of Tensors and takes Tensors instead of Variables as input and\r\n* an optimization to make Optimizer.minimize() recycle Tensors that are loop variables re-assigned to the return of Optimizer.minimize()\r\n\r\n==For tensorflowbutler==\r\n\r\nSince this is a feature request, the following fields are irrelevant:\r\nHave I written custom code: NA\r\nOS Platform and Distribution: NA\r\nTensorFlow installed from: NA\r\nTensorFlow version: NA\r\nBazel version: NA\r\nCUDA/cuDNN version: NA\r\nGPU model and memory: NA\r\nExact command to reproduce: NA"}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19776", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19776/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19776/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19776/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/19776", "id": 329477565, "node_id": "MDU6SXNzdWUzMjk0Nzc1NjU=", "number": 19776, "title": "einsum contraction order (is undocumented)", "user": {"login": "mrader1248", "id": 32457308, "node_id": "MDQ6VXNlcjMyNDU3MzA4", "avatar_url": "https://avatars1.githubusercontent.com/u/32457308?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mrader1248", "html_url": "https://github.com/mrader1248", "followers_url": "https://api.github.com/users/mrader1248/followers", "following_url": "https://api.github.com/users/mrader1248/following{/other_user}", "gists_url": "https://api.github.com/users/mrader1248/gists{/gist_id}", "starred_url": "https://api.github.com/users/mrader1248/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mrader1248/subscriptions", "organizations_url": "https://api.github.com/users/mrader1248/orgs", "repos_url": "https://api.github.com/users/mrader1248/repos", "events_url": "https://api.github.com/users/mrader1248/events{/privacy}", "received_events_url": "https://api.github.com/users/mrader1248/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 299643928, "node_id": "MDU6TGFiZWwyOTk2NDM5Mjg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:contributions%20welcome", "name": "stat:contributions welcome", "color": "f4b400", "default": false, "description": ""}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2018-06-05T14:17:07Z", "updated_at": "2018-07-09T07:48:44Z", "closed_at": null, "author_association": "NONE", "body": "### Describe the problem\r\nThe documentation for `tf.einsum` does not specify the order of the contraction. However, for contractions with three and more tensors, the contraction order is crucial as it determines the runtime complexity. The only thing one finds in the documentation is the following:\r\n\r\n> This function behaves like `numpy.einsum` [...]\r\n\r\nThe `numpy.einsum` function has an additional parameter `optimize` and is able to peform a greedy optimisation for the contraction order. As far as I understood the tensorflow code, `tf.einsum` simply contracts tensors from left to right.\r\nWould it be possible to adopt the optimisation code from numpy for tensorflow? If not, at least the documentation should indicate the contraction order. Thank you!"}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19775", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19775/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19775/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19775/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/19775", "id": 329464831, "node_id": "MDU6SXNzdWUzMjk0NjQ4MzE=", "number": 19775, "title": "Tensorflow python version incompatibility", "user": {"login": "icebreaker2", "id": 12209674, "node_id": "MDQ6VXNlcjEyMjA5Njc0", "avatar_url": "https://avatars2.githubusercontent.com/u/12209674?v=4", "gravatar_id": "", "url": "https://api.github.com/users/icebreaker2", "html_url": "https://github.com/icebreaker2", "followers_url": "https://api.github.com/users/icebreaker2/followers", "following_url": "https://api.github.com/users/icebreaker2/following{/other_user}", "gists_url": "https://api.github.com/users/icebreaker2/gists{/gist_id}", "starred_url": "https://api.github.com/users/icebreaker2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/icebreaker2/subscriptions", "organizations_url": "https://api.github.com/users/icebreaker2/orgs", "repos_url": "https://api.github.com/users/icebreaker2/repos", "events_url": "https://api.github.com/users/icebreaker2/events{/privacy}", "received_events_url": "https://api.github.com/users/icebreaker2/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 299643928, "node_id": "MDU6TGFiZWwyOTk2NDM5Mjg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:contributions%20welcome", "name": "stat:contributions welcome", "color": "f4b400", "default": false, "description": ""}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 12, "created_at": "2018-06-05T13:48:12Z", "updated_at": "2018-08-08T20:16:16Z", "closed_at": null, "author_association": "NONE", "body": "Hey,\r\n\r\nI use `inceptionv3` to classify various images. I experienced that images are classified with a different probabillity on different versions of python. I set up three environments:\r\n1. Tensorflow (b'v1.8.0-0-g93bc2e2072' 1.8.0) with python 3.6.2 with anaconda (no gpu support) (Windows 10)\r\n2. Tensorflow (b'v1.8.0-0-g93bc2e2072' 1.8.0) with python 2.7.12 installed via plain pip. (no GPU) (Ubuntu 16.04)\r\n3. Tensorflow (b'v1.8.0-0-g93bc2e2072' 1.8.0) with python 3.5.2 installed via plain pip. (no GPU) (Ubuntu 16.04)\r\n\r\nEnvironment 1 and 3 give the same results. Using python2 gives the lower probabilities on the correct class than given by the other two setups.\r\n\r\nHeres a little example I just created to outline the error and show how the classification performed:\r\n```python\r\nimport numpy as np\r\nimport matplotlib.pyplot as plt\r\nfrom PIL import Image\r\nimport json, os\r\n\r\nimport tensorflow as tf\r\nimport tensorflow.contrib.slim as slim\r\nfrom tensorflow.contrib.slim.nets import inception\r\n\r\nFLAGS = tf.flags.FLAGS\r\ntf.flags.DEFINE_string('image_name', 'cropped_panda.jpg', 'Image name with file ending.')\r\ntf.flags.DEFINE_integer('top_k', 5, 'Top k predictions to print out.')\r\ntf.flags.DEFINE_integer('image_height', 299, 'The image height for inception_v3 model.')\r\ntf.flags.DEFINE_integer('image_width', 299, 'The image width for inception_v3 model.')\r\ntf.flags.DEFINE_integer('image_channels', 3, 'The number of channels of for inception_v3 model.')\r\ntf.flags.DEFINE_integer('image_N_classes', 1000, 'The number of classes in the inception_v3 model.')\r\ntf.flags.DEFINE_float('weight_decay', 0.0, 'The weight decay applied to each edge/weight at each update step.')\r\n\r\n\r\ndef load_images(batch_shape, pathPrefix='../../images/'):\r\n    num_images = batch_shape[0]\r\n    image_path = os.path.join(pathPrefix, FLAGS.image_name)\r\n    image = Image.open(image_path)\r\n\r\n    # crop\r\n    wide = image.width > image.height\r\n    new_w = FLAGS.image_width if not wide else int(image.width * FLAGS.image_width / image.height)\r\n    new_h = FLAGS.image_height if wide else int(image.height * FLAGS.image_height / image.width)\r\n\r\n    images = np.zeros(batch_shape)\r\n    for idx in range(num_images):\r\n        image = image.resize((new_w, new_h)).crop((0, 0, FLAGS.image_width, FLAGS.image_height))\r\n        image = (np.asarray(image) / 255.0).astype(np.float32)\r\n        images[idx, :, :, :] = image\r\n    return images\r\n\r\n\r\ndef get_logits(image_placeholder):\r\n    preprocessed = tf.multiply(tf.subtract(image_placeholder, 0.5), 2.0)\r\n    arg_scope = inception.inception_v3_arg_scope(weight_decay=FLAGS.weight_decay)\r\n    with slim.arg_scope(arg_scope):\r\n        logits, _ = inception.inception_v3(\r\n            preprocessed, FLAGS.image_N_classes + 1, is_training=False, reuse=False)\r\n        logits = logits[:, 1:]\r\n        probs = tf.nn.softmax(logits)\r\n    return logits, probs\r\n\r\n\r\ndef get_inception_session(sess=None, pathToInception='../../'):\r\n    saver = tf.train.Saver()\r\n    saver.restore(sess, os.path.join(pathToInception, 'inception_v3.ckpt'))\r\n    return sess\r\n\r\n\r\ndef main(argsunused):\r\n    images = load_images((1, FLAGS.image_height, FLAGS.image_width, FLAGS.image_channels))\r\n    image_placeholder = tf.placeholder(tf.float32, (1, FLAGS.image_height, FLAGS.image_width, FLAGS.image_channels))\r\n    logits, preds = get_logits(image_placeholder)\r\n\r\n    with tf.Session() as sess:\r\n        sess = get_inception_session(sess)\r\n        top_k = tf.nn.top_k(preds, k=FLAGS.top_k)\r\n        values, indices = sess.run([top_k.values, top_k.indices], feed_dict={image_placeholder: images})\r\n        for (index, value) in zip(indices[0], values[0]):\r\n            print(\"Class %d with prob: %f\" % (index, value))\r\n\r\n\r\nif __name__ == '__main__':\r\n    tf.app.run()\r\n```\r\nIf I misssused something here, please be so kind and explain my mistake:)\r\n\r\nRegards\r\n\r\n### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**: Yes. Uses the elements shown in the example.\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**: See above (windows and ubuntu 16.04)\r\n- **TensorFlow installed from (source or binary)**: binary\r\n- **TensorFlow version (use command below)**: b'v1.8.0-0-g93bc2e2072' 1.8.0\r\n- **Python version**: 2.7.12, 3.5.2, 3.6.2\r\n- **Bazel version (if compiling from source)**: -\r\n- **GCC/Compiler version (if compiling from source)**: -\r\n- **CUDA/cuDNN version**: -\r\n- **GPU model and memory**: -\r\n- **Exact command to reproduce**: -"}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19774", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19774/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19774/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19774/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/19774", "id": 329437002, "node_id": "MDU6SXNzdWUzMjk0MzcwMDI=", "number": 19774, "title": "metagraph loading fails with 'No op named ImageProjectiveTransform' message", "user": {"login": "akamaus", "id": 58955, "node_id": "MDQ6VXNlcjU4OTU1", "avatar_url": "https://avatars0.githubusercontent.com/u/58955?v=4", "gravatar_id": "", "url": "https://api.github.com/users/akamaus", "html_url": "https://github.com/akamaus", "followers_url": "https://api.github.com/users/akamaus/followers", "following_url": "https://api.github.com/users/akamaus/following{/other_user}", "gists_url": "https://api.github.com/users/akamaus/gists{/gist_id}", "starred_url": "https://api.github.com/users/akamaus/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/akamaus/subscriptions", "organizations_url": "https://api.github.com/users/akamaus/orgs", "repos_url": "https://api.github.com/users/akamaus/repos", "events_url": "https://api.github.com/users/akamaus/events{/privacy}", "received_events_url": "https://api.github.com/users/akamaus/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 299643928, "node_id": "MDU6TGFiZWwyOTk2NDM5Mjg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:contributions%20welcome", "name": "stat:contributions welcome", "color": "f4b400", "default": false, "description": ""}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2018-06-05T12:37:42Z", "updated_at": "2018-08-10T00:10:08Z", "closed_at": null, "author_association": "NONE", "body": "### System information\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**:\r\nUbuntu 16.04\r\n- **TensorFlow installed from (source or binary)**:\r\nbinary, installed with pip3\r\n- **TensorFlow version (use command below)**:\r\nv1.8.0-0-g93bc2e2072\r\n- **Python version**: \r\n3.5\r\n\r\n### Describe the problem\r\nI'm trying to load a metagraph file saved with tf-v1.4.0-rc1-11-g130a514. Loading fails with the following error: \r\n\r\n```\r\n  File \"/home/vyal/.local/lib/python3.5/site-packages/tensorflow/python/training/saver.py\", line 1955, in import_meta_graph\r\n    **kwargs)\r\n  File \"/home/vyal/.local/lib/python3.5/site-packages/tensorflow/python/framework/meta_graph.py\", line 743, in import_scoped_meta_graph\r\n    producer_op_list=producer_op_list)\r\n  File \"/home/vyal/.local/lib/python3.5/site-packages/tensorflow/python/util/deprecation.py\", line 432, in new_func\r\n    return func(*args, **kwargs)\r\n  File \"/home/vyal/.local/lib/python3.5/site-packages/tensorflow/python/framework/importer.py\", line 460, in import_graph_def\r\n    _RemoveDefaultAttrs(op_dict, producer_op_list, graph_def)\r\n  File \"/home/vyal/.local/lib/python3.5/site-packages/tensorflow/python/framework/importer.py\", line 227, in _RemoveDefaultAttrs\r\n    op_def = op_dict[node.op]\r\nKeyError: 'ImageProjectiveTransform'\r\n```\r\n\r\nI thought it's the result of some backward incompability so I retested on python2.7 and tf-v1.4.0-rc1-11-g130a514. Getting very similar message:\r\n\r\n```\r\nIn [3]: tf.train.import_meta_graph('00000000000001107000.meta')\r\n---------------------------------------------------------------------------\r\nValueError                                Traceback (most recent call last)\r\n<ipython-input-3-6d533993d6fe> in <module>()\r\n----> 1 tf.train.import_meta_graph('00000000000001107000.meta')\r\n\r\n/home/marin/tensorflow/lib/python2.7/site-packages/tensorflow/python/training/saver.pyc in import_meta_graph(meta_graph_or_file, clear_devices, import_scope, **kwargs)\r\n   1808                                       clear_devices=clear_devices,\r\n   1809                                       import_scope=import_scope,\r\n-> 1810                                       **kwargs)\r\n   1811   if meta_graph_def.HasField(\"saver_def\"):\r\n   1812     return Saver(saver_def=meta_graph_def.saver_def, name=import_scope)\r\n\r\n/home/marin/tensorflow/lib/python2.7/site-packages/tensorflow/python/framework/meta_graph.pyc in import_scoped_meta_graph(meta_graph_or_file, clear_devices, graph, import_scope, input_map, unbound_inputs_col_name, restore_collections_predicate)\r\n    658     importer.import_graph_def(\r\n    659         input_graph_def, name=(import_scope or \"\"), input_map=input_map,\r\n--> 660         producer_op_list=producer_op_list)\r\n    661 \r\n    662     scope_to_prepend_to_names = \"/\".join(\r\n\r\n/home/marin/tensorflow/lib/python2.7/site-packages/tensorflow/python/framework/importer.pyc in import_graph_def(graph_def, input_map, return_elements, name, op_dict, producer_op_list)\r\n    283       # Set any default attr values that aren't present.\r\n    284       if node.op not in op_dict:\r\n--> 285         raise ValueError('No op named %s in defined operations.' % node.op)\r\n    286       op_def = op_dict[node.op]\r\n    287       for attr_def in op_def.attr:\r\n\r\nValueError: No op named ImageProjectiveTransform in defined operations.\r\n```\r\n\r\n"}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19771", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19771/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19771/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19771/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/19771", "id": 329391210, "node_id": "MDU6SXNzdWUzMjkzOTEyMTA=", "number": 19771, "title": "tensordot/conj interplay", "user": {"login": "mrader1248", "id": 32457308, "node_id": "MDQ6VXNlcjMyNDU3MzA4", "avatar_url": "https://avatars1.githubusercontent.com/u/32457308?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mrader1248", "html_url": "https://github.com/mrader1248", "followers_url": "https://api.github.com/users/mrader1248/followers", "following_url": "https://api.github.com/users/mrader1248/following{/other_user}", "gists_url": "https://api.github.com/users/mrader1248/gists{/gist_id}", "starred_url": "https://api.github.com/users/mrader1248/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mrader1248/subscriptions", "organizations_url": "https://api.github.com/users/mrader1248/orgs", "repos_url": "https://api.github.com/users/mrader1248/repos", "events_url": "https://api.github.com/users/mrader1248/events{/privacy}", "received_events_url": "https://api.github.com/users/mrader1248/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": {"login": "tatatodd", "id": 5453737, "node_id": "MDQ6VXNlcjU0NTM3Mzc=", "avatar_url": "https://avatars3.githubusercontent.com/u/5453737?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tatatodd", "html_url": "https://github.com/tatatodd", "followers_url": "https://api.github.com/users/tatatodd/followers", "following_url": "https://api.github.com/users/tatatodd/following{/other_user}", "gists_url": "https://api.github.com/users/tatatodd/gists{/gist_id}", "starred_url": "https://api.github.com/users/tatatodd/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tatatodd/subscriptions", "organizations_url": "https://api.github.com/users/tatatodd/orgs", "repos_url": "https://api.github.com/users/tatatodd/repos", "events_url": "https://api.github.com/users/tatatodd/events{/privacy}", "received_events_url": "https://api.github.com/users/tatatodd/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "tatatodd", "id": 5453737, "node_id": "MDQ6VXNlcjU0NTM3Mzc=", "avatar_url": "https://avatars3.githubusercontent.com/u/5453737?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tatatodd", "html_url": "https://github.com/tatatodd", "followers_url": "https://api.github.com/users/tatatodd/followers", "following_url": "https://api.github.com/users/tatatodd/following{/other_user}", "gists_url": "https://api.github.com/users/tatatodd/gists{/gist_id}", "starred_url": "https://api.github.com/users/tatatodd/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tatatodd/subscriptions", "organizations_url": "https://api.github.com/users/tatatodd/orgs", "repos_url": "https://api.github.com/users/tatatodd/repos", "events_url": "https://api.github.com/users/tatatodd/events{/privacy}", "received_events_url": "https://api.github.com/users/tatatodd/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 2, "created_at": "2018-06-05T10:16:22Z", "updated_at": "2018-12-19T18:46:23Z", "closed_at": null, "author_association": "NONE", "body": "### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**: Yes\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**: CentOS Linux 7, Kernel 3.10\r\n- **TensorFlow installed from (source or binary)**: binary\r\n- **TensorFlow version (use command below)**: v1.8.0-0-g93bc2e2072 1.8.0\r\n- **Python version**: Python 3.6.2 :: Continuum Analytics, Inc.\r\n- **Bazel version (if compiling from source)**: N/A\r\n- **GCC/Compiler version (if compiling from source)**: N/A\r\n- **CUDA/cuDNN version**: CUDA 9.0.176 (but not in use)\r\n- **GPU model and memory**: GeForce GTX 1080 (but not in use)\r\n- **Exact command to reproduce**: execute python script below\r\n\r\n### Describe the problem\r\nI am using the code below to contract four tensors `A[l,m,n] B[q,l,i] C[j,p,m,q] conj(D[p,n,k])` using a series of tensordot operations. To verify the result, I compare tensorflow with pure numpy. It seems like the `tf.conj` node is ignored (or an additional conjugation is executed) when executing tensorflow's `tensordot`s, as the first `print` gives me `False` and the second one `True`, although it should be the other way round. Just as a remark: The third part of my code uses `einsum` instead and works as intended (output of the third `print` should be `True` and is indeed `True`). Thank you for your help!\r\n\r\n### Source code / logs\r\n```python\r\nimport numpy as np\r\nimport tensorflow as tf\r\n\r\nn = 100\r\nm = 4\r\ndtype = np.complex128\r\n\r\n### generate random tensors ###\r\n\r\ndef rand(*shape):\r\n    return np.asarray(\r\n        np.random.random(shape) + 1j*np.random.random(shape),\r\n        dtype\r\n    )\r\n\r\nA = rand(n, m, n)\r\nB = rand(m, n, n)\r\nC = rand(m, m, m, m)\r\nD = rand(m, n, n)\r\n\r\n### perform numpy computation ###\r\n\r\nX_np = np.tensordot(A, B, (0,1))\r\nY_np = np.tensordot(X_np, C, ((0,2),(2,3)))\r\nZ_np = np.tensordot(Y_np, D.conj(), ((3,0),(0,1)))\r\n\r\n### build tensorflow computation graph ###\r\n\r\nA_node = tf.placeholder(dtype, (n, m, n))\r\nB_node = tf.placeholder(dtype, (m, n, n))\r\nC_node = tf.placeholder(dtype, (m, m, m, m))\r\nD_node = tf.placeholder(dtype, (m, n, n))\r\n\r\nX_node = tf.tensordot(A_node, B_node, (0,1))\r\nY_node = tf.tensordot(X_node, C_node, ((0,2),(2,3)))\r\nZ_node = tf.tensordot(Y_node, tf.conj(D_node), ((3,0),(0,1)))\r\n\r\n### run tensorflow computation ###\r\n\r\nsession = tf.Session()\r\nZ_tf = session.run(\r\n    Z_node, feed_dict={A_node: A, B_node: B, C_node: C, D_node: D}\r\n)\r\nsession.close()\r\n\r\n### compare results ###\r\n\r\nprint(np.allclose(Z_np, Z_tf))\r\n\r\n### run tensorflow computation again with numpy conj ###\r\n\r\nsession = tf.Session()\r\nZ_tf = session.run(\r\n    Z_node, feed_dict={A_node: A, B_node: B, C_node: C, D_node: D.conj()}\r\n)\r\nsession.close()\r\n\r\n### compare results ###\r\n\r\nprint(np.allclose(Z_np, Z_tf))\r\n\r\n### build tensorflow computation graph using einsum ###\r\n\r\nW_node = tf.einsum(\r\n    \"lmn,qli,jpmq,pnk->ijk\", A_node, B_node, C_node, tf.conj(D_node)\r\n)\r\n\r\nsession = tf.Session()\r\nW_tf = session.run(\r\n    W_node, feed_dict={A_node: A, B_node: B, C_node: C, D_node: D}\r\n)\r\nsession.close()\r\n\r\nprint(np.allclose(Z_np, W_tf))\r\n```\r\n### Output\r\n```\r\nFalse\r\nTrue\r\nTrue\r\n```\r\n"}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19770", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19770/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19770/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19770/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/19770", "id": 329377904, "node_id": "MDU6SXNzdWUzMjkzNzc5MDQ=", "number": 19770, "title": "Tensorflow 1.8.0 Java tests fail with error \"Building Java resource jar failed (Segmentation fault): singlejar failed\"", "user": {"login": "duane-ibm", "id": 20570859, "node_id": "MDQ6VXNlcjIwNTcwODU5", "avatar_url": "https://avatars3.githubusercontent.com/u/20570859?v=4", "gravatar_id": "", "url": "https://api.github.com/users/duane-ibm", "html_url": "https://github.com/duane-ibm", "followers_url": "https://api.github.com/users/duane-ibm/followers", "following_url": "https://api.github.com/users/duane-ibm/following{/other_user}", "gists_url": "https://api.github.com/users/duane-ibm/gists{/gist_id}", "starred_url": "https://api.github.com/users/duane-ibm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/duane-ibm/subscriptions", "organizations_url": "https://api.github.com/users/duane-ibm/orgs", "repos_url": "https://api.github.com/users/duane-ibm/repos", "events_url": "https://api.github.com/users/duane-ibm/events{/privacy}", "received_events_url": "https://api.github.com/users/duane-ibm/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": {"login": "sjamesr", "id": 4641539, "node_id": "MDQ6VXNlcjQ2NDE1Mzk=", "avatar_url": "https://avatars0.githubusercontent.com/u/4641539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sjamesr", "html_url": "https://github.com/sjamesr", "followers_url": "https://api.github.com/users/sjamesr/followers", "following_url": "https://api.github.com/users/sjamesr/following{/other_user}", "gists_url": "https://api.github.com/users/sjamesr/gists{/gist_id}", "starred_url": "https://api.github.com/users/sjamesr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sjamesr/subscriptions", "organizations_url": "https://api.github.com/users/sjamesr/orgs", "repos_url": "https://api.github.com/users/sjamesr/repos", "events_url": "https://api.github.com/users/sjamesr/events{/privacy}", "received_events_url": "https://api.github.com/users/sjamesr/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "sjamesr", "id": 4641539, "node_id": "MDQ6VXNlcjQ2NDE1Mzk=", "avatar_url": "https://avatars0.githubusercontent.com/u/4641539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sjamesr", "html_url": "https://github.com/sjamesr", "followers_url": "https://api.github.com/users/sjamesr/followers", "following_url": "https://api.github.com/users/sjamesr/following{/other_user}", "gists_url": "https://api.github.com/users/sjamesr/gists{/gist_id}", "starred_url": "https://api.github.com/users/sjamesr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sjamesr/subscriptions", "organizations_url": "https://api.github.com/users/sjamesr/orgs", "repos_url": "https://api.github.com/users/sjamesr/repos", "events_url": "https://api.github.com/users/sjamesr/events{/privacy}", "received_events_url": "https://api.github.com/users/sjamesr/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 28, "created_at": "2018-06-05T09:40:09Z", "updated_at": "2020-02-24T22:01:12Z", "closed_at": null, "author_association": "NONE", "body": "\r\n### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**: No\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**: Linux Ubuntu 16.04 s390x\r\n- **TensorFlow installed from (source or binary)**: source\r\n- **TensorFlow version (use command below)**: v1.8.0\r\n- **Python version**: Python 2.7.12\r\n- **Bazel version (if compiling from source)**: 0.12.0\r\n- **GCC/Compiler version (if compiling from source)**: gcc (Ubuntu 5.4.0-6ubuntu1~16.04.9) 5.4.0 20160609\r\n- **CUDA/cuDNN version**: NA\r\n- **GPU model and memory**: NA\r\n- **JDK Version**:\r\n```\r\ntest@f6c9f944adde:~/tensorflow$ java -version\r\nopenjdk version \"1.8.0_171\"\r\nOpenJDK Runtime Environment (build 1.8.0_171-8u171-b11-0ubuntu0.16.04.1-b11)\r\nOpenJDK 64-Bit Zero VM (build 25.171-b11, interpreted mode)\r\n```\r\n- **Exact command to reproduce**:\r\n```\r\ntest@f6c9f944adde:~/tensorflow$ ./configure  \r\n  Extracting Bazel installation...\r\n  You have bazel 0.12.0- (@non-git) installed.\r\n  Please specify the location of python. [Default is /usr/bin/python]:\r\n\r\n\r\n  Found possible Python library paths:\r\n    /usr/local/lib/python2.7/dist-packages\r\n    /usr/lib/python2.7/dist-packages\r\n  Please input the desired Python library path to use.  Default is [/usr/local/lib/python2.7/dist-packages]\r\n\r\n  Do you wish to build TensorFlow with jemalloc as malloc support? [Y/n]: Y\r\n  jemalloc as malloc support will be enabled for TensorFlow.\r\n\r\n  Do you wish to build TensorFlow with Google Cloud Platform support? [Y/n]: N\r\n  No Google Cloud Platform support will be enabled for TensorFlow.\r\n\r\n  Do you wish to build TensorFlow with Hadoop File System support? [Y/n]: N\r\n  No Hadoop File System support will be enabled for TensorFlow.\r\n\r\n  Do you wish to build TensorFlow with Amazon S3 File System support? [Y/n]: N\r\n  No Amazon S3 File System support will be enabled for TensorFlow.\r\n\r\n  Do you wish to build TensorFlow with Apache Kafka Platform support? [Y/n]: N\r\n  No Apache Kafka Platform support will be enabled for TensorFlow.\r\n\r\n  Do you wish to build TensorFlow with XLA JIT support? [y/N]: N\r\n  No XLA JIT support will be enabled for TensorFlow.\r\n\r\n  Do you wish to build TensorFlow with GDR support? [y/N]: N\r\n  No GDR support will be enabled for TensorFlow.\r\n\r\n  Do you wish to build TensorFlow with VERBS support? [y/N]: N\r\n  No VERBS support will be enabled for TensorFlow.\r\n\r\n  Do you wish to build TensorFlow with OpenCL SYCL support? [y/N]: N\r\n  No OpenCL SYCL support will be enabled for TensorFlow.\r\n\r\n  Do you wish to build TensorFlow with CUDA support? [y/N]: N\r\n  No CUDA support will be enabled for TensorFlow.\r\n\r\n  Do you wish to download a fresh release of clang? (Experimental) [y/N]: N\r\n  Clang will not be downloaded.\r\n\r\n  Do you wish to build TensorFlow with MPI support? [y/N]: N\r\n  No MPI support will be enabled for TensorFlow.\r\n\r\n  Please specify optimization flags to use during compilation when bazel option \"--config=opt\" is specified [Default is -march=native]:\r\n\r\n\r\n  Would you like to interactively configure ./WORKSPACE for Android builds? [y/N]: N\r\n  Not configuring the WORKSPACE for Android builds.\r\n\r\n  Preconfigured Bazel build configs. You can use any of the below by adding \"--config=<>\" to your build command. See tools/bazel.rc for more details.\r\n        --config=mkl            # Build with MKL support.\r\n        --config=monolithic     # Config for mostly static monolithic build.\r\n  Configuration finished\r\n```\r\n\r\nBuild tensorflow using \r\n```\r\nbazel build -c opt //tensorflow/tools/pip_package:build_pip_package\r\n```\r\n\r\nExecute the tests \r\n```\r\ntest@f6c9f944adde:~/tensorflow$ bazel --host_jvm_args=\"-Xms512m\" --host_jvm_args=\"-Xmx1024m\" test --test_timeout 300,450,1200,3600 --build_tests_only -- //tensorflow/java/...\r\nWARNING: /home/test/.cache/bazel/_bazel_test/24685d064c07f7346b48c2d13ec3ad69/external/protobuf_archive/WORKSPACE:1: Workspace name in /home/test/.cache/bazel/_bazel_test/24685d064c07f7346b48c2d13ec3ad69/external/protobuf_archive/WORKSPACE (@com_google_protobuf) does not match the name given in the repository's definition (@protobuf_archive); this will cause a build error in future versions\r\nINFO: Analysed 13 targets (3 packages loaded).\r\nINFO: Found 13 test targets...\r\nSlow read: a 17792073-byte read from /home/test/.cache/bazel/_bazel_test/24685d064c07f7346b48c2d13ec3ad69/external/local_jdk/lib/ct.sym took 279596ms.\r\nSlow read: a 660545-byte read from /home/test/.cache/bazel/_bazel_test/24685d064c07f7346b48c2d13ec3ad69/external/local_jdk/jre/lib/jsse.jar took 8904ms.\r\nSlow read: a 65000897-byte read from /home/test/.cache/bazel/_bazel_test/24685d064c07f7346b48c2d13ec3ad69/external/local_jdk/jre/lib/rt.jar took 1050262ms.\r\nSlow read: a 407746-byte read from /home/test/.cache/bazel/_bazel_test/24685d064c07f7346b48c2d13ec3ad69/external/local_jdk/lib/jconsole.jar took 7045ms.\r\nSlow read: a 2033434-byte read from /home/test/.cache/bazel/_bazel_test/24685d064c07f7346b48c2d13ec3ad69/external/local_jdk/jre/lib/ext/nashorn.jar took 36359ms.\r\nSlow read: a 3861228-byte read from /home/test/.cache/bazel/_bazel_test/24685d064c07f7346b48c2d13ec3ad69/external/local_jdk/jre/lib/ext/cldrdata.jar took 69984ms.\r\nSlow read: a 7615736-byte read from /home/test/.cache/bazel/_bazel_test/24685d064c07f7346b48c2d13ec3ad69/external/local_jdk/jre/lib/s390x/server/libjvm.so took 139747ms.\r\nSlow read: a 923944-byte read from /home/test/.cache/bazel/_bazel_test/24685d064c07f7346b48c2d13ec3ad69/external/local_jdk/jre/lib/s390x/libmlib_image.so took 18312ms.\r\nSlow read: a 1178929-byte read from /home/test/.cache/bazel/_bazel_test/24685d064c07f7346b48c2d13ec3ad69/external/local_jdk/jre/lib/ext/localedata.jar took 20124ms.\r\nSlow read: a 3135616-byte read from /home/test/.cache/bazel/_bazel_test/24685d064c07f7346b48c2d13ec3ad69/external/local_jdk/jre/lib/charsets.jar took 54969ms.\r\nSlow read: a 3509496-byte read from /home/test/.cache/bazel/_bazel_test/24685d064c07f7346b48c2d13ec3ad69/external/local_jdk/jre/lib/resources.jar took 52916ms.\r\nSlow read: a 17320112-byte read from /home/test/.cache/bazel/_bazel_test/24685d064c07f7346b48c2d13ec3ad69/execroot/org_tensorflow/bazel-out/host/bin/_solib_piii/_U_S_Stensorflow_Sjava_Cops_Sstring_Uops_Ugen_Utool___Utensorflow/libtensorflow_framework.so took 295367ms.\r\nSlow read: a 17320112-byte read from /home/test/.cache/bazel/_bazel_test/24685d064c07f7346b48c2d13ec3ad69/execroot/org_tensorflow/bazel-out/host/bin/_solib_piii/_U_S_Stensorflow_Sjava_Cops_Suser_Uops_Ugen_Utool___Utensorflow/libtensorflow_framework.so took 295164ms.\r\nSlow read: a 17320112-byte read from /home/test/.cache/bazel/_bazel_test/24685d064c07f7346b48c2d13ec3ad69/execroot/org_tensorflow/bazel-out/host/bin/_solib_piii/_U_S_Stensorflow_Sjava_Cops_Sno_Uop_Ugen_Utool___Utensorflow/libtensorflow_framework.so took 219115ms.\r\nSlow read: a 17320112-byte read from /home/test/.cache/bazel/_bazel_test/24685d064c07f7346b48c2d13ec3ad69/execroot/org_tensorflow/bazel-out/host/bin/_solib_piii/_U_S_Stensorflow_Sjava_Cops_Sarray_Uops_Ugen_Utool___Utensorflow/libtensorflow_framework.so took 210040ms.\r\nSlow read: a 17320112-byte read from /home/test/.cache/bazel/_bazel_test/24685d064c07f7346b48c2d13ec3ad69/execroot/org_tensorflow/bazel-out/host/bin/_solib_piii/_U_S_Stensorflow_Sjava_Cops_Sstate_Uops_Ugen_Utool___Utensorflow/libtensorflow_framework.so took 228118ms.\r\nSlow read: a 17320112-byte read from /home/test/.cache/bazel/_bazel_test/24685d064c07f7346b48c2d13ec3ad69/execroot/org_tensorflow/bazel-out/host/bin/_solib_piii/_U_S_Stensorflow_Sjava_Cops_Smath_Uops_Ugen_Utool___Utensorflow/libtensorflow_framework.so took 211957ms.\r\nSlow read: a 17320112-byte read from /home/test/.cache/bazel/_bazel_test/24685d064c07f7346b48c2d13ec3ad69/execroot/org_tensorflow/bazel-out/host/bin/_solib_piii/_U_S_Stensorflow_Sjava_Cops_Scandidate_Usampling_Uops_Ugen_Utool___Utensorflow/libtensorflow_framework.so took 209071ms.\r\nSlow read: a 17320112-byte read from /home/test/.cache/bazel/_bazel_test/24685d064c07f7346b48c2d13ec3ad69/execroot/org_tensorflow/bazel-out/host/bin/_solib_piii/_U_S_Stensorflow_Sjava_Cops_Snn_Uops_Ugen_Utool___Utensorflow/libtensorflow_framework.so took 220945ms.\r\nSlow read: a 17320112-byte read from /home/test/.cache/bazel/_bazel_test/24685d064c07f7346b48c2d13ec3ad69/execroot/org_tensorflow/bazel-out/host/bin/_solib_piii/_U_S_Stensorflow_Sjava_Cops_Scontrol_Uflow_Uops_Ugen_Utool___Utensorflow/libtensorflow_framework.so took 204621ms.\r\nSlow read: a 17320112-byte read from /home/test/.cache/bazel/_bazel_test/24685d064c07f7346b48c2d13ec3ad69/execroot/org_tensorflow/bazel-out/host/bin/_solib_piii/_U_S_Stensorflow_Sjava_Cops_Slogging_Uops_Ugen_Utool___Utensorflow/libtensorflow_framework.so took 215215ms.\r\nSlow read: a 17320112-byte read from /home/test/.cache/bazel/_bazel_test/24685d064c07f7346b48c2d13ec3ad69/execroot/org_tensorflow/bazel-out/host/bin/_solib_piii/_U_S_Stensorflow_Sjava_Cops_Straining_Uops_Ugen_Utool___Utensorflow/libtensorflow_framework.so took 202976ms.\r\nSlow read: a 17320112-byte read from /home/test/.cache/bazel/_bazel_test/24685d064c07f7346b48c2d13ec3ad69/execroot/org_tensorflow/bazel-out/host/bin/_solib_piii/_U_S_Stensorflow_Sjava_Cops_Sio_Uops_Ugen_Utool___Utensorflow/libtensorflow_framework.so took 197636ms.\r\nSlow read: a 17320112-byte read from /home/test/.cache/bazel/_bazel_test/24685d064c07f7346b48c2d13ec3ad69/execroot/org_tensorflow/bazel-out/host/bin/_solib_piii/_U_S_Stensorflow_Sjava_Cops_Srandom_Uops_Ugen_Utool___Utensorflow/libtensorflow_framework.so took 157546ms.\r\nSlow read: a 17320112-byte read from /home/test/.cache/bazel/_bazel_test/24685d064c07f7346b48c2d13ec3ad69/execroot/org_tensorflow/bazel-out/host/bin/_solib_piii/_U_S_Stensorflow_Sjava_Cops_Ssparse_Uops_Ugen_Utool___Utensorflow/libtensorflow_framework.so took 185855ms.\r\nSlow read: a 17320112-byte read from /home/test/.cache/bazel/_bazel_test/24685d064c07f7346b48c2d13ec3ad69/execroot/org_tensorflow/bazel-out/host/bin/_solib_piii/_U_S_Stensorflow_Sjava_Cops_Sdata_Uflow_Uops_Ugen_Utool___Utensorflow/libtensorflow_framework.so took 194397ms.\r\nSlow read: a 17320112-byte read from /home/test/.cache/bazel/_bazel_test/24685d064c07f7346b48c2d13ec3ad69/execroot/org_tensorflow/bazel-out/host/bin/_solib_piii/_U_S_Stensorflow_Sjava_Cops_Sparsing_Uops_Ugen_Utool___Utensorflow/libtensorflow_framework.so took 194407ms.\r\nSlow read: a 17320112-byte read from /home/test/.cache/bazel/_bazel_test/24685d064c07f7346b48c2d13ec3ad69/execroot/org_tensorflow/bazel-out/host/bin/_solib_piii/_U_S_Stensorflow_Sjava_Cops_Slinalg_Uops_Ugen_Utool___Utensorflow/libtensorflow_framework.so took 192693ms.\r\nSlow read: a 17320112-byte read from /home/test/.cache/bazel/_bazel_test/24685d064c07f7346b48c2d13ec3ad69/execroot/org_tensorflow/bazel-out/host/bin/_solib_piii/_U_S_Stensorflow_Sjava_Cops_Simage_Uops_Ugen_Utool___Utensorflow/libtensorflow_framework.so took 171085ms.\r\nSlow read: a 807616-byte read from /home/test/.cache/bazel/_bazel_test/24685d064c07f7346b48c2d13ec3ad69/external/local_jdk/jre/lib/s390x/libawt.so took 10783ms.\r\nSlow read: a 18318086-byte read from /home/test/.cache/bazel/_bazel_test/24685d064c07f7346b48c2d13ec3ad69/external/local_jdk/lib/tools.jar took 189336ms.\r\nSlow read: a 17320112-byte read from /home/test/.cache/bazel/_bazel_test/24685d064c07f7346b48c2d13ec3ad69/execroot/org_tensorflow/bazel-out/s390x-opt/bin/_solib_piii/_U_S_Stensorflow_Sjava_Clibtensorflow_Ujni.so___Utensorflow/libtensorflow_framework.so took 150482ms.\r\nSlow read: a 6885456-byte read from /home/test/.cache/bazel/_bazel_test/24685d064c07f7346b48c2d13ec3ad69/external/bazel_tools/third_party/java/jdk/langtools/javac-9+181-r4173-1.jar took 52658ms.\r\nSlow read: a 9200450-byte read from /home/test/.cache/bazel/_bazel_test/24685d064c07f7346b48c2d13ec3ad69/external/bazel_tools/tools/jdk/turbine_deploy.jar took 71876ms.\r\nSlow read: a 37198458-byte read from /home/test/.cache/bazel/_bazel_test/24685d064c07f7346b48c2d13ec3ad69/execroot/org_tensorflow/bazel-out/host/genfiles/external/bazel_tools/tools/jdk/platformclasspath-impl.jar took 426726ms.\r\nSlow read: a 16268324-byte read from /home/test/.cache/bazel/_bazel_test/24685d064c07f7346b48c2d13ec3ad69/execroot/org_tensorflow/bazel-out/host/genfiles/external/bazel_tools/tools/jdk/platformclasspath.jar took 190506ms.\r\nSlow read: a 11497298-byte read from /home/test/.cache/bazel/_bazel_test/24685d064c07f7346b48c2d13ec3ad69/external/bazel_tools/tools/jdk/JavaBuilder_deploy.jar took 141703ms.\r\nERROR: /home/test/tensorflow/tensorflow/java/BUILD:54:1: Building Java resource jar failed (Segmentation fault): singlejar failed: error executing command external/bazel_tools/tools/jdk/singlejar/singlejar --normalize --dont_change_compression --exclude_build_data --output bazel-out/host/bin/tensorflow/java/libprocessor_library.jar --sources ... (remaining 3 argument(s) skipped)\r\nSlow read: a 49095408-byte read from /home/test/.cache/bazel/_bazel_test/24685d064c07f7346b48c2d13ec3ad69/execroot/org_tensorflow/bazel-out/s390x-opt/bin/tensorflow/java/libtensorflow_jni.so took 521931ms.\r\nSlow read: a 17320112-byte read from /home/test/.cache/bazel/_bazel_test/24685d064c07f7346b48c2d13ec3ad69/execroot/org_tensorflow/bazel-out/s390x-opt/bin/_solib_piii/_U_S_Stensorflow_Sjava_Csource_Uwriter_Utest___Utensorflow/libtensorflow_framework.so took 230369ms.\r\nINFO: Elapsed time: 7966.630s, Critical Path: 2784.06s\r\nFAILED: Build did NOT complete successfully\r\n//tensorflow/java:ConstantTest                                        NO STATUS\r\n//tensorflow/java:OperandsTest                                        NO STATUS\r\n//tensorflow/java:OperationBuilderTest                                NO STATUS\r\n//tensorflow/java:OperationTest                                       NO STATUS\r\n//tensorflow/java:PrimitiveOpTest                                     NO STATUS\r\n//tensorflow/java:SavedModelBundleTest                                NO STATUS\r\n//tensorflow/java:ScopeTest                                           NO STATUS\r\n//tensorflow/java:SessionTest                                         NO STATUS\r\n//tensorflow/java:ShapeTest                                           NO STATUS\r\n//tensorflow/java:TensorFlowTest                                      NO STATUS\r\n//tensorflow/java:TensorTest                                          NO STATUS\r\n//tensorflow/java:source_writer_test                                  NO STATUS\r\n\r\nExecuted 0 out of 13 tests: 1 fails to build and 12 were skipped.\r\n```\r\n\r\n### Describe the problem\r\nI have successfully compiled tensorflow from source using same configure procedure as above and built it with the following command:\r\n```\r\nbazel build -c opt //tensorflow/tools/pip_package:build_pip_package\r\n```\r\n\r\nAfter that I tried executing the tests which failed with the error as stated above. I tried running just a single test from the Java module which produced the same error as above with the following error:\r\n```\r\nERROR: /home/test/tensorflow/tensorflow/java/BUILD:54:1: Building Java resource jar failed (Segmentation fault): singlejar failed: error executing command external/bazel_tools/tools/jdk/singlejar/singlejar --normalize --dont_change_compression --exclude_build_data --output bazel-out/host/bin/tensorflow/java/libprocessor_library.jar --sources ... (remaining 3 argument(s) skipped)\r\n```"}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19748", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19748/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19748/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19748/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/19748", "id": 329054984, "node_id": "MDU6SXNzdWUzMjkwNTQ5ODQ=", "number": 19748, "title": "DirectSession::Run with Saver restore operation crashes during nsync wait", "user": {"login": "jayadeepk", "id": 5885220, "node_id": "MDQ6VXNlcjU4ODUyMjA=", "avatar_url": "https://avatars3.githubusercontent.com/u/5885220?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jayadeepk", "html_url": "https://github.com/jayadeepk", "followers_url": "https://api.github.com/users/jayadeepk/followers", "following_url": "https://api.github.com/users/jayadeepk/following{/other_user}", "gists_url": "https://api.github.com/users/jayadeepk/gists{/gist_id}", "starred_url": "https://api.github.com/users/jayadeepk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jayadeepk/subscriptions", "organizations_url": "https://api.github.com/users/jayadeepk/orgs", "repos_url": "https://api.github.com/users/jayadeepk/repos", "events_url": "https://api.github.com/users/jayadeepk/events{/privacy}", "received_events_url": "https://api.github.com/users/jayadeepk/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-06-04T13:26:12Z", "updated_at": "2020-02-08T01:14:51Z", "closed_at": null, "author_association": "NONE", "body": "### System information\r\nHave I written custom code: Yes\r\nOS Platform and Distribution: Tizen\r\nTensorFlow installed from: Source\r\nTensorFlow version: 1.4\r\nBazel version: N/A\r\nCUDA/cuDNN version: N/A\r\nGPU model and memory: N/A\r\nExact command to reproduce: N/A\r\n\r\n### Problem\r\nI am using Tensorflow 1.4 C++ API to read graph from meta file and load weights from checkpoint file.\r\n\r\n```\r\n#include <tensorflow/cc/ops/standard_ops.h>\r\n#include <tensorflow/core/framework/tensor.h>\r\n#include <tensorflow/core/public/session.h>\r\n#include <tensorflow/core/protobuf/meta_graph.pb.h>\r\n\r\n#define GRAPH_PATH \"path-to-graph.meta\"\r\n#define CHECKPOINT_PATH \"path-to-checkpoint.data-00000-of-00001\"\r\n\r\nMetaGraphDef graph_def;\r\nTensor checkpoint_path_tensor(DT_STRING, TensorShape());\r\nauto session = NewSession(SessionOptions());\r\nstatus = ReadBinaryProto(Env::Default(), GRAPH_PATH, &graph_def);\r\nstatus = session->Create(graph_def.graph_def());\r\ncheckpoint_path_tensor.scalar<string>()() = CHECKPOINT_PATH;\r\nstatus = session->Run(\r\n        {{ graph_def.saver_def().filename_tensor_name(), checkpoint_path_tensor },},\r\n        {},\r\n        {graph_def.saver_def().restore_op_name()},\r\n        nullptr);\r\n```\r\n\r\nWhile loading weights into graph from checkpoint, the program crashes during session->Run() with following trace:\r\n```\r\n#0  0xf1268e14 in std::condition_variable::condition_variable() () from /lib/libstdc++.so.6\r\n#1  0xf555701c in nsync::nsync_mu_semaphore_init(nsync::nsync_semaphore_s_*) () from /lib/libpywrap_tensorflow_internal.so\r\n#2  0xf5557ae4 in nsync::nsync_waiter_new_() () from /lib/libpywrap_tensorflow_internal.so\r\n#3  0xf55558fc in nsync::nsync_cv_wait_with_deadline_generic(nsync::nsync_cv_s_*, void*, void (*)(void*), void (*)(void*), timespec, nsync::nsync_note_s_*) () from /lib/libpywrap_tensorflow_internal.so\r\n#4  0xf5556004 in nsync::nsync_cv_wait_with_deadline(nsync::nsync_cv_s_*, nsync::nsync_mu_s_*, timespec, nsync::nsync_note_s_*) () from /lib/libpywrap_tensorflow_internal.so\r\n#5  0xf5556040 in nsync::nsync_cv_wait(nsync::nsync_cv_s_*, nsync::nsync_mu_s_*) () from /lib/libpywrap_tensorflow_internal.so\r\n#6  0xf2d6ba30 in tensorflow::condition_variable::wait(tensorflow::mutex_lock&) () from /lib/libpywrap_tensorflow_internal.so\r\n#7  0xf2d6c0d4 in tensorflow::Notification::WaitForNotification() () from /lib/libpywrap_tensorflow_internal.so\r\n#8  0xf34f2078 in tensorflow::DirectSession::WaitForNotification(tensorflow::Notification*, long long) () from /lib/libpywrap_tensorflow_internal.so\r\n#9  0xf34f1f14 in tensorflow::DirectSession::WaitForNotification(tensorflow::DirectSession::RunState*, tensorflow::CancellationManager*, long long) () from /lib/libpywrap_tensorflow_internal.so\r\n#10 0xf34ebfc4 in tensorflow::DirectSession::Run(tensorflow::RunOptions const&, std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tensorflow::Tensor>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tensorflow::Tensor> > > const&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, std::vector<tensorflow::Tensor, std::allocator<tensorflow::Tensor> >*, tensorflow::RunMetadata*) () from /lib/libpywrap_tensorflow_internal.so\r\n#11 0xf34eadfc in tensorflow::DirectSession::Run(std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tensorflow::Tensor>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tensorflow::Tensor> > > const&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, std::vector<tensorflow::Tensor, std::allocator<tensorflow::Tensor> >*) () from /lib/libpywrap_tensorflow_internal.so\r\n```\r\n"}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19734", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19734/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19734/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19734/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/19734", "id": 328907402, "node_id": "MDU6SXNzdWUzMjg5MDc0MDI=", "number": 19734, "title": "[bug] Regularizers do not allow integer scales.", "user": {"login": "renxida", "id": 10362952, "node_id": "MDQ6VXNlcjEwMzYyOTUy", "avatar_url": "https://avatars3.githubusercontent.com/u/10362952?v=4", "gravatar_id": "", "url": "https://api.github.com/users/renxida", "html_url": "https://github.com/renxida", "followers_url": "https://api.github.com/users/renxida/followers", "following_url": "https://api.github.com/users/renxida/following{/other_user}", "gists_url": "https://api.github.com/users/renxida/gists{/gist_id}", "starred_url": "https://api.github.com/users/renxida/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/renxida/subscriptions", "organizations_url": "https://api.github.com/users/renxida/orgs", "repos_url": "https://api.github.com/users/renxida/repos", "events_url": "https://api.github.com/users/renxida/events{/privacy}", "received_events_url": "https://api.github.com/users/renxida/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-06-04T04:50:51Z", "updated_at": "2020-02-08T01:14:55Z", "closed_at": null, "author_association": "NONE", "body": "Location:\r\n\r\nhttps://github.com/tensorflow/tensorflow/blob/c9de294d0a0980b1636f76757c175afbf4f58ea8/tensorflow/contrib/layers/python/layers/regularizers.py#L92\r\n\r\nExpected behavior: I was expecting layers to work with integer scale regularizers.\r\n\r\nActual behavior: program throws error and quits on me when I set scale=10 but not when I set scale=10.0\r\n\r\nThis seems to be vestigial of a misunderstanding: earlier commits limit regularizer scale to a floating point number between 0.0 and 1.0, disallowing integers. While the upperbound of 1.0 has been removed, the no-integers limitation is left over."}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19720", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19720/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19720/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19720/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/19720", "id": 328814390, "node_id": "MDU6SXNzdWUzMjg4MTQzOTA=", "number": 19720, "title": "Library not loaded: @rpath/libcublas.8.0.dylib when running TF GPU on MacOS ", "user": {"login": "JiangHoumin", "id": 20291253, "node_id": "MDQ6VXNlcjIwMjkxMjUz", "avatar_url": "https://avatars1.githubusercontent.com/u/20291253?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JiangHoumin", "html_url": "https://github.com/JiangHoumin", "followers_url": "https://api.github.com/users/JiangHoumin/followers", "following_url": "https://api.github.com/users/JiangHoumin/following{/other_user}", "gists_url": "https://api.github.com/users/JiangHoumin/gists{/gist_id}", "starred_url": "https://api.github.com/users/JiangHoumin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JiangHoumin/subscriptions", "organizations_url": "https://api.github.com/users/JiangHoumin/orgs", "repos_url": "https://api.github.com/users/JiangHoumin/repos", "events_url": "https://api.github.com/users/JiangHoumin/events{/privacy}", "received_events_url": "https://api.github.com/users/JiangHoumin/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 404586558, "node_id": "MDU6TGFiZWw0MDQ1ODY1NTg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:community%20support", "name": "stat:community support", "color": "f4b400", "default": false, "description": ""}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2018-06-03T09:39:49Z", "updated_at": "2018-08-01T03:43:25Z", "closed_at": null, "author_association": "NONE", "body": "\r\n### System information\r\n\r\n- **System: Mac OS 10.13.4**:\r\n- **Xcode:9.2 .  Apple LLVM version 9.0.0 (clang-900.0.39.2)**:\r\n- **Cuda:**:\r\n- **nvcc: NVIDIA (R) Cuda compiler driver**:\r\n- **Copyright (c) 2005-2018 NVIDIA Corporation**:\r\n- **Built on Sun_Mar_18_21:08:25_CDT_2018**:\r\n- **Cuda compilation tools, release 9.2, V9.2.64**:\r\n- **cudnn:7.1.4**:\r\n- **gcc g++ : 4.2.1**:\r\n\r\n\r\n- **Question:**:\r\nWhen i use anaconda install tensorflow-gpu,the terminal say i was successful! Such as:\r\nInstalling collected packages: numpy, six, werkzeug, protobuf, tensorflow-gpu\r\nSuccessfully installed numpy-1.14.3 protobuf-3.5.2.post1 six-1.11.0 tensorflow-gpu-1.1.0 werkzeug-0.14.1\r\n\r\nBut when is write \"import tensorflow as tf\",some erroes is show.\r\n\r\n> (tensorflowGPU) jhmdeMacBook-Air:Sources jhm$ python\r\nPython 3.6.5 |Anaconda, Inc.| (default, Apr 26 2018, 08:42:37) \r\n[GCC 4.2.1 Compatible Clang 4.0.1 (tags/RELEASE_401/final)] on darwin\r\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\r\n>>> import tensorflow as tf\r\nTraceback (most recent call last):\r\n  File \"/Users/jhm/anaconda3/envs/tensorflowGPU/lib/python3.6/site-packages/tensorflow/python/pywrap_tensorflow.py\", line 41, in <module>\r\n    from tensorflow.python.pywrap_tensorflow_internal import *\r\n  File \"/Users/jhm/anaconda3/envs/tensorflowGPU/lib/python3.6/site-packages/tensorflow/python/pywrap_tensorflow_internal.py\", line 28, in <module>\r\n    _pywrap_tensorflow_internal = swig_import_helper()\r\n  File \"/Users/jhm/anaconda3/envs/tensorflowGPU/lib/python3.6/site-packages/tensorflow/python/pywrap_tensorflow_internal.py\", line 24, in swig_import_helper\r\n    _mod = imp.load_module('_pywrap_tensorflow_internal', fp, pathname, description)\r\n  File \"/Users/jhm/anaconda3/envs/tensorflowGPU/lib/python3.6/imp.py\", line 243, in load_module\r\n    return load_dynamic(name, filename, file)\r\n  File \"/Users/jhm/anaconda3/envs/tensorflowGPU/lib/python3.6/imp.py\", line 343, in load_dynamic\r\n    return _load(spec)\r\nImportError: dlopen(/Users/jhm/anaconda3/envs/tensorflowGPU/lib/python3.6/site-packages/tensorflow/python/_pywrap_tensorflow_internal.so, 10): Library not loaded: @rpath/libcublas.8.0.dylib\r\n  Referenced from: /Users/jhm/anaconda3/envs/tensorflowGPU/lib/python3.6/site-packages/tensorflow/python/_pywrap_tensorflow_internal.so\r\n  Reason: image not found\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\n>Traceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\n  File \"/Users/jhm/anaconda3/envs/tensorflowGPU/lib/python3.6/site-packages/tensorflow/__init__.py\", line 24, in <module>\r\n    from tensorflow.python import *\r\n  File \"/Users/jhm/anaconda3/envs/tensorflowGPU/lib/python3.6/site-packages/tensorflow/python/__init__.py\", line 51, in <module>\r\n    from tensorflow.python import pywrap_tensorflow\r\n  File \"/Users/jhm/anaconda3/envs/tensorflowGPU/lib/python3.6/site-packages/tensorflow/python/pywrap_tensorflow.py\", line 52, in <module>\r\n    raise ImportError(msg)\r\nImportError: Traceback (most recent call last):\r\n  File \"/Users/jhm/anaconda3/envs/tensorflowGPU/lib/python3.6/site-packages/tensorflow/python/pywrap_tensorflow.py\", line 41, in <module>\r\n    from tensorflow.python.pywrap_tensorflow_internal import *\r\n  File \"/Users/jhm/anaconda3/envs/tensorflowGPU/lib/python3.6/site-packages/tensorflow/python/pywrap_tensorflow_internal.py\", line 28, in <module>\r\n    _pywrap_tensorflow_internal = swig_import_helper()\r\n  File \"/Users/jhm/anaconda3/envs/tensorflowGPU/lib/python3.6/site-packages/tensorflow/python/pywrap_tensorflow_internal.py\", line 24, in swig_import_helper\r\n    _mod = imp.load_module('_pywrap_tensorflow_internal', fp, pathname, description)\r\n  File \"/Users/jhm/anaconda3/envs/tensorflowGPU/lib/python3.6/imp.py\", line 243, in load_module\r\n    return load_dynamic(name, filename, file)\r\n  File \"/Users/jhm/anaconda3/envs/tensorflowGPU/lib/python3.6/imp.py\", line 343, in load_dynamic\r\n    return _load(spec)\r\nImportError: dlopen(/Users/jhm/anaconda3/envs/tensorflowGPU/lib/python3.6/site-packages/tensorflow/python/_pywrap_tensorflow_internal.so, 10): Library not loaded: @rpath/libcublas.8.0.dylib\r\n  Referenced from: /Users/jhm/anaconda3/envs/tensorflowGPU/lib/python3.6/site-packages/tensorflow/python/_pywrap_tensorflow_internal.so\r\n  Reason: image not found\r\n\r\n\r\nFailed to load the native TensorFlow runtime.\r\n\r\nSee https://www.tensorflow.org/install/install_sources#common_installation_problems\r\n\r\nfor some common reasons and solutions.  Include the entire stack trace\r\nabove this error message when asking for help.\r\n\r\n\r\n\r\nBugLog/tensorflowGPU-01.log\r\n\r\nI don't konw what to do!"}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19717", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19717/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19717/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19717/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/19717", "id": 328807755, "node_id": "MDU6SXNzdWUzMjg4MDc3NTU=", "number": 19717, "title": "`ScipyOptimizerInterface` fails with `scatter_add` and `scatter_update`", "user": {"login": "david-cortes", "id": 11860098, "node_id": "MDQ6VXNlcjExODYwMDk4", "avatar_url": "https://avatars0.githubusercontent.com/u/11860098?v=4", "gravatar_id": "", "url": "https://api.github.com/users/david-cortes", "html_url": "https://github.com/david-cortes", "followers_url": "https://api.github.com/users/david-cortes/followers", "following_url": "https://api.github.com/users/david-cortes/following{/other_user}", "gists_url": "https://api.github.com/users/david-cortes/gists{/gist_id}", "starred_url": "https://api.github.com/users/david-cortes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/david-cortes/subscriptions", "organizations_url": "https://api.github.com/users/david-cortes/orgs", "repos_url": "https://api.github.com/users/david-cortes/repos", "events_url": "https://api.github.com/users/david-cortes/events{/privacy}", "received_events_url": "https://api.github.com/users/david-cortes/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 299643928, "node_id": "MDU6TGFiZWwyOTk2NDM5Mjg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:contributions%20welcome", "name": "stat:contributions welcome", "color": "f4b400", "default": false, "description": ""}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2018-06-03T07:45:46Z", "updated_at": "2018-10-04T20:58:12Z", "closed_at": null, "author_association": "NONE", "body": "If I try to build some loss function which in its calculations includes an `scatter_add` or `scatter_update` and optimize it using `ScipyOptimizerInterface`, TensorFlow will fail in calculating the gradient.\r\n\r\nHere's an example with a variant of low-rank matrix factorization in which I add an extra variable, which adds to some of the rows of one of the matrices in the low-rank factorization:\r\n\r\n```python\r\nimport numpy as np, tensorflow as tf\r\n\r\nnrow = 20\r\nncol = 30\r\nk = 15\r\nnrow_add = 10\r\nncol_mult_add = 5\r\nregularization = 1e-6\r\n\r\nnp.random.seed(1)\r\nX = np.random.normal(size = (nrow, ncol)).astype('float32')\r\nX2 = np.random.normal(size = (nrow_add, ncol_mult_add)).astype('float32')\r\nix_row_add = np.random.choice(np.arange(nrow), replace=False, size=nrow_add).astype('int32')\r\n\r\nA = tf.Variable(tf.random_normal([nrow, k]))\r\nB = tf.Variable(tf.random_normal([ncol, k]))\r\nA2 = tf.Variable(tf.random_normal([ncol_mult_add, k]))\r\n\r\nXtf = tf.placeholder(tf.float32)\r\nX2tf = tf.placeholder(tf.float32)\r\n\r\nA_added = tf.scatter_add(A, ix_row_add, tf.matmul(X2, A2))\r\npred_x = tf.matmul(A_added, B, transpose_b=True)\r\nloss = tf.losses.mean_squared_error(Xtf, pred_x)\r\nloss += regularization * (tf.nn.l2_loss(A) + tf.nn.l2_loss(A2) + tf.nn.l2_loss(B))\r\n\r\noptimizer = tf.contrib.opt.ScipyOptimizerInterface(loss, method='L-BFGS-B')\r\nmodel = tf.global_variables_initializer()\r\nsess=tf.Session()\r\nsess.run(model)\r\nwith sess:\r\n    sess.run(model)\r\n    optimizer.minimize(sess, feed_dict={Xtf:X, X2tf:X2})\r\n    Aopt = A.eval(session=sess)\r\n    A2opt = A2.eval(session=sess)\r\n    Bopt = B.eval(session=sess)\r\n``` \r\n\r\nThrows:\r\n```\r\nInvalidArgumentError: Input 0 of node ScatterAdd was passed float from _arg_Variable_0_2:0 incompatible with expected float_ref.\r\n```\r\n\r\nInformation about my system:\r\n* Have I written custom code: No\r\n* OS Platform and Distribution: Debian buster/sid 64-bit\r\n* TensorFlow installed from: binary (PyPI)\r\n* TensorFlow version: 1.7.0\r\n* Python version: 3.6.3\r\n* Bazel version: N/A\r\n* GCC/Compiler version: N/A\r\n* CUDA/cuDNN version: N/A\r\n* GPU model and memory: N/A\r\n* Exact command to reproduce: N/A"}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19696", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19696/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19696/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19696/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/19696", "id": 328588240, "node_id": "MDU6SXNzdWUzMjg1ODgyNDA=", "number": 19696, "title": "Save training using Tensorflow C++ with VS2015", "user": {"login": "Pessanha24", "id": 8130695, "node_id": "MDQ6VXNlcjgxMzA2OTU=", "avatar_url": "https://avatars3.githubusercontent.com/u/8130695?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Pessanha24", "html_url": "https://github.com/Pessanha24", "followers_url": "https://api.github.com/users/Pessanha24/followers", "following_url": "https://api.github.com/users/Pessanha24/following{/other_user}", "gists_url": "https://api.github.com/users/Pessanha24/gists{/gist_id}", "starred_url": "https://api.github.com/users/Pessanha24/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Pessanha24/subscriptions", "organizations_url": "https://api.github.com/users/Pessanha24/orgs", "repos_url": "https://api.github.com/users/Pessanha24/repos", "events_url": "https://api.github.com/users/Pessanha24/events{/privacy}", "received_events_url": "https://api.github.com/users/Pessanha24/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 404586594, "node_id": "MDU6TGFiZWw0MDQ1ODY1OTQ=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:awaiting%20tensorflower", "name": "stat:awaiting tensorflower", "color": "f4b400", "default": false, "description": ""}, {"id": 284443156, "node_id": "MDU6TGFiZWwyODQ0NDMxNTY=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:docs", "name": "type:docs", "color": "159b2e", "default": false, "description": ""}], "state": "open", "locked": false, "assignee": {"login": "skye", "id": 88808, "node_id": "MDQ6VXNlcjg4ODA4", "avatar_url": "https://avatars1.githubusercontent.com/u/88808?v=4", "gravatar_id": "", "url": "https://api.github.com/users/skye", "html_url": "https://github.com/skye", "followers_url": "https://api.github.com/users/skye/followers", "following_url": "https://api.github.com/users/skye/following{/other_user}", "gists_url": "https://api.github.com/users/skye/gists{/gist_id}", "starred_url": "https://api.github.com/users/skye/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/skye/subscriptions", "organizations_url": "https://api.github.com/users/skye/orgs", "repos_url": "https://api.github.com/users/skye/repos", "events_url": "https://api.github.com/users/skye/events{/privacy}", "received_events_url": "https://api.github.com/users/skye/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "skye", "id": 88808, "node_id": "MDQ6VXNlcjg4ODA4", "avatar_url": "https://avatars1.githubusercontent.com/u/88808?v=4", "gravatar_id": "", "url": "https://api.github.com/users/skye", "html_url": "https://github.com/skye", "followers_url": "https://api.github.com/users/skye/followers", "following_url": "https://api.github.com/users/skye/following{/other_user}", "gists_url": "https://api.github.com/users/skye/gists{/gist_id}", "starred_url": "https://api.github.com/users/skye/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/skye/subscriptions", "organizations_url": "https://api.github.com/users/skye/orgs", "repos_url": "https://api.github.com/users/skye/repos", "events_url": "https://api.github.com/users/skye/events{/privacy}", "received_events_url": "https://api.github.com/users/skye/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2018-06-01T16:44:04Z", "updated_at": "2018-12-10T18:55:49Z", "closed_at": null, "author_association": "NONE", "body": "------------------------\r\n------------------------\r\n### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**: No\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**: Windows 10\r\n- **TensorFlow installed from (source or binary)**: Source\r\n- **TensorFlow version (use command below)**: 1.8\r\n- **Python version**: 3.5\r\n- **Bazel version (if compiling from source)**: N/A\r\n- **GCC/Compiler version (if compiling from source)**: Visual Studio 2015\r\n- **CUDA/cuDNN version**: Yes\r\n- **GPU model and memory**:  NVIDIA Quadro P5000 16GB\r\n- **Exact command to reproduce**: N/A\r\n------------------------\r\n------------------------\r\n\r\n### Description of the problem: Save Training Results using Tensorflow C++ VS2015\r\nI have successfully compiled tensorflow to be able to use the C++ with VS2015, and I have successfully run some examples.\r\n\r\nI want to save my training results and restore them to be able to continue training or simply to use the network to perform e.g. classification.\r\n\r\nI was unable until now to perform that, and the C++ interface didn't have many examples or tutorials available.\r\n\r\nCan someone provide me some instructions to perform that?\r\n\r\n------------------------\r\n------------------------"}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19695", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19695/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19695/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19695/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/19695", "id": 328575888, "node_id": "MDU6SXNzdWUzMjg1NzU4ODg=", "number": 19695, "title": "ppc64le: //tensorflow/contrib/image:image_ops_test test fails", "user": {"login": "wdirons", "id": 22967383, "node_id": "MDQ6VXNlcjIyOTY3Mzgz", "avatar_url": "https://avatars3.githubusercontent.com/u/22967383?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wdirons", "html_url": "https://github.com/wdirons", "followers_url": "https://api.github.com/users/wdirons/followers", "following_url": "https://api.github.com/users/wdirons/following{/other_user}", "gists_url": "https://api.github.com/users/wdirons/gists{/gist_id}", "starred_url": "https://api.github.com/users/wdirons/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wdirons/subscriptions", "organizations_url": "https://api.github.com/users/wdirons/orgs", "repos_url": "https://api.github.com/users/wdirons/repos", "events_url": "https://api.github.com/users/wdirons/events{/privacy}", "received_events_url": "https://api.github.com/users/wdirons/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 404586558, "node_id": "MDU6TGFiZWw0MDQ1ODY1NTg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:community%20support", "name": "stat:community support", "color": "f4b400", "default": false, "description": ""}], "state": "open", "locked": false, "assignee": {"login": "bignamehyp", "id": 3474655, "node_id": "MDQ6VXNlcjM0NzQ2NTU=", "avatar_url": "https://avatars2.githubusercontent.com/u/3474655?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bignamehyp", "html_url": "https://github.com/bignamehyp", "followers_url": "https://api.github.com/users/bignamehyp/followers", "following_url": "https://api.github.com/users/bignamehyp/following{/other_user}", "gists_url": "https://api.github.com/users/bignamehyp/gists{/gist_id}", "starred_url": "https://api.github.com/users/bignamehyp/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bignamehyp/subscriptions", "organizations_url": "https://api.github.com/users/bignamehyp/orgs", "repos_url": "https://api.github.com/users/bignamehyp/repos", "events_url": "https://api.github.com/users/bignamehyp/events{/privacy}", "received_events_url": "https://api.github.com/users/bignamehyp/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "bignamehyp", "id": 3474655, "node_id": "MDQ6VXNlcjM0NzQ2NTU=", "avatar_url": "https://avatars2.githubusercontent.com/u/3474655?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bignamehyp", "html_url": "https://github.com/bignamehyp", "followers_url": "https://api.github.com/users/bignamehyp/followers", "following_url": "https://api.github.com/users/bignamehyp/following{/other_user}", "gists_url": "https://api.github.com/users/bignamehyp/gists{/gist_id}", "starred_url": "https://api.github.com/users/bignamehyp/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bignamehyp/subscriptions", "organizations_url": "https://api.github.com/users/bignamehyp/orgs", "repos_url": "https://api.github.com/users/bignamehyp/repos", "events_url": "https://api.github.com/users/bignamehyp/events{/privacy}", "received_events_url": "https://api.github.com/users/bignamehyp/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 4, "created_at": "2018-06-01T16:03:41Z", "updated_at": "2018-12-14T18:54:35Z", "closed_at": null, "author_association": "CONTRIBUTOR", "body": "Please assign this issue to me and add the tag: stat:community support\r\n\r\n### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**: Yes, Have written a Dockerfile.gpu.ppc64le file and modified ci_parameterized_build.sh to allow for build/test runs on ppc64le. (Will submit as a PR)\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**: ppc64le Ubuntu 16.04.4 \r\n- **TensorFlow installed from (source or binary)**: source\r\n- **TensorFlow version (use command below)**: master from may 30th\r\n- **Python version**:  2.7.12\r\n- **Bazel version (if compiling from source)**: 0.11.0\r\n- **GCC/Compiler version (if compiling from source)**: 5.4.0\r\n- **CUDA/cuDNN version**: 9.2.88, 7\r\n- **GPU model and memory**: 2 P100 GPUs with 16 GB of memory each\r\n\r\n- **Exact command to reproduce**:\r\nbazel test --config=cuda -c opt --local_test_jobs=2 --cache_test_results=no --run_under=//tensorflow/tools/ci_build/gpu_build:parallel_gpu_execute //tensorflow/contrib/image:image_ops_test\r\n\r\n\r\n\r\n### Describe the problem\r\n```\r\n======================================================================\r\nFAIL: test_rotate_even (__main__.ImageOpsTest)\r\n----------------------------------------------------------------------\r\nTraceback (most recent call last):\r\n  File \"/root/.cache/bazel/_bazel_root/eab0d61a99b6696edb3d2aff87b585e8/execroot/org_tensorflow/bazel-out/ppc-opt/bin/tensorflow/contrib/image/image_ops_test.runfiles/org_tensorflow/tensorflow/contrib/image/python/kernel_tests/image_ops_test.py\", line 68, in test_rotate_even\r\n    [1, 7, 13, 19, 25, 31], [0, 6, 12, 18, 24, 30]]])\r\n  File \"/root/.cache/bazel/_bazel_root/eab0d61a99b6696edb3d2aff87b585e8/execroot/org_tensorflow/bazel-out/ppc-opt/bin/tensorflow/contrib/image/image_ops_test.runfiles/org_tensorflow/tensorflow/python/framework/test_util.py\", line 1466, in assertAllEqual\r\n    np.testing.assert_array_equal(a, b, err_msg=msg)\r\n  File \"/usr/local/lib/python2.7/dist-packages/numpy/testing/utils.py\", line 871, in assert_array_equal\r\n    verbose=verbose, header='Arrays are not equal')\r\n  File \"/usr/local/lib/python2.7/dist-packages/numpy/testing/utils.py\", line 796, in assert_array_compare\r\n    raise AssertionError(msg)\r\nAssertionError:\r\nArrays are not equal\r\n\r\n(mismatch 1.85185185185%)\r\n x: array([[[ 0,  1,  2,  3,  4,  5],\r\n        [ 6,  7,  8,  9, 10, 11],\r\n        [12, 13, 14, 15, 16, 17],...\r\n y: array([[[ 0,  1,  2,  3,  4,  5],\r\n        [ 6,  7,  8,  9, 10, 11],\r\n        [12, 13, 14, 15, 16, 17],...\r\n\r\n----------------------------------------------------------------------\r\nRan 11 tests in 14.343s\r\n\r\nFAILED (failures=1)\r\nnot equal where =  (array([1, 1]), array([3, 4]), array([3, 4]))\r\nnot equal lhs =  [20 32]\r\nnot equal rhs =  [21 33]\r\n================================================================================\r\n```\r\n\r\n### Source code / logs\r\n[image_ops_test.log](https://github.com/tensorflow/tensorflow/files/2063329/image_ops_test.log)\r\n"}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19679", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19679/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19679/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19679/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/19679", "id": 328344926, "node_id": "MDU6SXNzdWUzMjgzNDQ5MjY=", "number": 19679, "title": "Build fails if Nvidia nccl doc files (NCCL-SLA.txt) are relocated", "user": {"login": "edrozenberg", "id": 2648417, "node_id": "MDQ6VXNlcjI2NDg0MTc=", "avatar_url": "https://avatars2.githubusercontent.com/u/2648417?v=4", "gravatar_id": "", "url": "https://api.github.com/users/edrozenberg", "html_url": "https://github.com/edrozenberg", "followers_url": "https://api.github.com/users/edrozenberg/followers", "following_url": "https://api.github.com/users/edrozenberg/following{/other_user}", "gists_url": "https://api.github.com/users/edrozenberg/gists{/gist_id}", "starred_url": "https://api.github.com/users/edrozenberg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/edrozenberg/subscriptions", "organizations_url": "https://api.github.com/users/edrozenberg/orgs", "repos_url": "https://api.github.com/users/edrozenberg/repos", "events_url": "https://api.github.com/users/edrozenberg/events{/privacy}", "received_events_url": "https://api.github.com/users/edrozenberg/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": {"login": "chsigg", "id": 7523982, "node_id": "MDQ6VXNlcjc1MjM5ODI=", "avatar_url": "https://avatars3.githubusercontent.com/u/7523982?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chsigg", "html_url": "https://github.com/chsigg", "followers_url": "https://api.github.com/users/chsigg/followers", "following_url": "https://api.github.com/users/chsigg/following{/other_user}", "gists_url": "https://api.github.com/users/chsigg/gists{/gist_id}", "starred_url": "https://api.github.com/users/chsigg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chsigg/subscriptions", "organizations_url": "https://api.github.com/users/chsigg/orgs", "repos_url": "https://api.github.com/users/chsigg/repos", "events_url": "https://api.github.com/users/chsigg/events{/privacy}", "received_events_url": "https://api.github.com/users/chsigg/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "chsigg", "id": 7523982, "node_id": "MDQ6VXNlcjc1MjM5ODI=", "avatar_url": "https://avatars3.githubusercontent.com/u/7523982?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chsigg", "html_url": "https://github.com/chsigg", "followers_url": "https://api.github.com/users/chsigg/followers", "following_url": "https://api.github.com/users/chsigg/following{/other_user}", "gists_url": "https://api.github.com/users/chsigg/gists{/gist_id}", "starred_url": "https://api.github.com/users/chsigg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chsigg/subscriptions", "organizations_url": "https://api.github.com/users/chsigg/orgs", "repos_url": "https://api.github.com/users/chsigg/repos", "events_url": "https://api.github.com/users/chsigg/events{/privacy}", "received_events_url": "https://api.github.com/users/chsigg/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 16, "created_at": "2018-06-01T00:56:26Z", "updated_at": "2019-04-26T08:54:43Z", "closed_at": null, "author_association": "NONE", "body": "Please go to Stack Overflow for help and support:\r\n\r\nhttps://stackoverflow.com/questions/tagged/tensorflow\r\n\r\nIf you open a GitHub issue, here is our policy:\r\n\r\n1. It must be a bug, a feature request, or a significant problem with documentation (for small docs fixes please send a PR instead).\r\n2. The form below must be filled out.\r\n3. It shouldn't be a TensorBoard issue. Those go [here](https://github.com/tensorflow/tensorboard/issues).\r\n\r\n**Here's why we have that policy**: TensorFlow developers respond to issues. We want to focus on work that benefits the whole community, e.g., fixing bugs and adding features. Support only helps individuals. GitHub also notifies thousands of people when issues are filed. We want them to see you communicating an interesting problem, rather than being redirected to Stack Overflow.\r\n\r\n------------------------\r\n\r\n### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**:\r\nNO\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**:\r\nLinux Slackware 14.2+ (-current)\r\n- **TensorFlow installed from (source or binary)**:\r\nSource\r\n- **TensorFlow version (use command below)**:\r\n\r\n- **Python version**: \r\n2.7.15\r\n- **Bazel version (if compiling from source)**:\r\n0.13.1- (@non-git)\r\n- **GCC/Compiler version (if compiling from source)**:\r\ngcc (GCC) 7.3.0\r\n- **CUDA/cuDNN version**:\r\nCUDA 9.2/cuDNN 7.1\r\n- **GPU model and memory**:\r\nTitan X Pascal 16 GB\r\n- **Exact command to reproduce**:\r\nbazel build --config=opt --config=cuda //tensorflow/tools/pip_package:build_pip_package\r\n\r\nYou can collect some of this information using our environment capture script:\r\n\r\nhttps://github.com/tensorflow/tensorflow/tree/master/tools/tf_env_collect.sh\r\n\r\nYou can obtain the TensorFlow version with\r\n\r\npython -c \"import tensorflow as tf; print(tf.GIT_VERSION, tf.VERSION)\"\r\n\r\n### Describe the problem\r\nDescribe the problem clearly here. Be sure to convey here why it's a bug in TensorFlow or a feature request.\r\n\r\nTensorflow build process with nccl enabled is too \"picky\" about location of Nvidia NCLL doc file(s) - for ex. NCCL-SLA.txt.\r\nIt expects to find the text file(s) in the root of the nccl install dir (in my case `/opt/nvidia/nccl`) and the build fails if I relocate the txt file(s) (to for ex. a `doc` dir in the nccl install dir (for ex. `/opt/nvidia/nccl/doc`)\r\n\r\nWould be great if the build process would also look for the file(s) in subdirs of the `nccl` install directory. This would also make it possible to install nccl in a prefix such as `/usr/` and put the docs in `/usr/doc`. Not a big deal though, considering there are always more important issues to worry about.\r\n\r\n### Source code / logs\r\nInclude any logs or source code that would be helpful to diagnose the problem. If including tracebacks, please include the full traceback. Large logs and files should be attached. Try to provide a reproducible test case that is the bare minimum necessary to generate the problem.\r\n\r\n```\r\nERROR: missing input file '@local_config_nccl//:nccl/NCCL-SLA.txt'\r\nERROR: /usr/local/src/tensorflow/tensorflow-git/tensorflow/tools/pip_package/BUILD:167:1: //tensorflow/tools/pip_package:build_pip_package: missing input file '@local_config_nccl//:nccl/NCCL-SLA.txt'\r\nTarget //tensorflow/tools/pip_package:build_pip_package failed to build\r\n```\r\n"}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19645", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19645/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19645/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19645/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/19645", "id": 327685923, "node_id": "MDU6SXNzdWUzMjc2ODU5MjM=", "number": 19645, "title": "Feature: Exiting current variable_scope (parent scope)", "user": {"login": "sleighsoft", "id": 9438971, "node_id": "MDQ6VXNlcjk0Mzg5NzE=", "avatar_url": "https://avatars3.githubusercontent.com/u/9438971?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sleighsoft", "html_url": "https://github.com/sleighsoft", "followers_url": "https://api.github.com/users/sleighsoft/followers", "following_url": "https://api.github.com/users/sleighsoft/following{/other_user}", "gists_url": "https://api.github.com/users/sleighsoft/gists{/gist_id}", "starred_url": "https://api.github.com/users/sleighsoft/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sleighsoft/subscriptions", "organizations_url": "https://api.github.com/users/sleighsoft/orgs", "repos_url": "https://api.github.com/users/sleighsoft/repos", "events_url": "https://api.github.com/users/sleighsoft/events{/privacy}", "received_events_url": "https://api.github.com/users/sleighsoft/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": {"login": "tatatodd", "id": 5453737, "node_id": "MDQ6VXNlcjU0NTM3Mzc=", "avatar_url": "https://avatars3.githubusercontent.com/u/5453737?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tatatodd", "html_url": "https://github.com/tatatodd", "followers_url": "https://api.github.com/users/tatatodd/followers", "following_url": "https://api.github.com/users/tatatodd/following{/other_user}", "gists_url": "https://api.github.com/users/tatatodd/gists{/gist_id}", "starred_url": "https://api.github.com/users/tatatodd/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tatatodd/subscriptions", "organizations_url": "https://api.github.com/users/tatatodd/orgs", "repos_url": "https://api.github.com/users/tatatodd/repos", "events_url": "https://api.github.com/users/tatatodd/events{/privacy}", "received_events_url": "https://api.github.com/users/tatatodd/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "tatatodd", "id": 5453737, "node_id": "MDQ6VXNlcjU0NTM3Mzc=", "avatar_url": "https://avatars3.githubusercontent.com/u/5453737?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tatatodd", "html_url": "https://github.com/tatatodd", "followers_url": "https://api.github.com/users/tatatodd/followers", "following_url": "https://api.github.com/users/tatatodd/following{/other_user}", "gists_url": "https://api.github.com/users/tatatodd/gists{/gist_id}", "starred_url": "https://api.github.com/users/tatatodd/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tatatodd/subscriptions", "organizations_url": "https://api.github.com/users/tatatodd/orgs", "repos_url": "https://api.github.com/users/tatatodd/repos", "events_url": "https://api.github.com/users/tatatodd/events{/privacy}", "received_events_url": "https://api.github.com/users/tatatodd/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2018-05-30T11:19:39Z", "updated_at": "2018-12-14T18:54:27Z", "closed_at": null, "author_association": "CONTRIBUTOR", "body": "Is it possible to exit a current variable_scope?\r\n\r\nI know it is possible to get to the root `name_scope` with something like `tf.name_scope(None)` but I don't seem to find a way to do that for `tf.variable_scope`.\r\nThis feature is interesting to me because I would like to share certain variables across parts of my model without passing around the `variable_scope` object. I would like to just configure a name for my shared `variable_scope` and then wherever I need to use that shared scope call\r\n`with tf.variable_scope(shared, reuse=tf.AUTO_REUSE)` without having to care which scope I am currently in.\r\n\r\nI look through all the issues and stackoverflow but I have not found anything in that direction."}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19640", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19640/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19640/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19640/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/19640", "id": 327625636, "node_id": "MDU6SXNzdWUzMjc2MjU2MzY=", "number": 19640, "title": "Tensorflow Serving not using multi GPU/CUDA cores ", "user": {"login": "rickragv", "id": 6717323, "node_id": "MDQ6VXNlcjY3MTczMjM=", "avatar_url": "https://avatars1.githubusercontent.com/u/6717323?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rickragv", "html_url": "https://github.com/rickragv", "followers_url": "https://api.github.com/users/rickragv/followers", "following_url": "https://api.github.com/users/rickragv/following{/other_user}", "gists_url": "https://api.github.com/users/rickragv/gists{/gist_id}", "starred_url": "https://api.github.com/users/rickragv/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rickragv/subscriptions", "organizations_url": "https://api.github.com/users/rickragv/orgs", "repos_url": "https://api.github.com/users/rickragv/repos", "events_url": "https://api.github.com/users/rickragv/events{/privacy}", "received_events_url": "https://api.github.com/users/rickragv/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": {"login": "shivaniag", "id": 16565716, "node_id": "MDQ6VXNlcjE2NTY1NzE2", "avatar_url": "https://avatars1.githubusercontent.com/u/16565716?v=4", "gravatar_id": "", "url": "https://api.github.com/users/shivaniag", "html_url": "https://github.com/shivaniag", "followers_url": "https://api.github.com/users/shivaniag/followers", "following_url": "https://api.github.com/users/shivaniag/following{/other_user}", "gists_url": "https://api.github.com/users/shivaniag/gists{/gist_id}", "starred_url": "https://api.github.com/users/shivaniag/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/shivaniag/subscriptions", "organizations_url": "https://api.github.com/users/shivaniag/orgs", "repos_url": "https://api.github.com/users/shivaniag/repos", "events_url": "https://api.github.com/users/shivaniag/events{/privacy}", "received_events_url": "https://api.github.com/users/shivaniag/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "shivaniag", "id": 16565716, "node_id": "MDQ6VXNlcjE2NTY1NzE2", "avatar_url": "https://avatars1.githubusercontent.com/u/16565716?v=4", "gravatar_id": "", "url": "https://api.github.com/users/shivaniag", "html_url": "https://github.com/shivaniag", "followers_url": "https://api.github.com/users/shivaniag/followers", "following_url": "https://api.github.com/users/shivaniag/following{/other_user}", "gists_url": "https://api.github.com/users/shivaniag/gists{/gist_id}", "starred_url": "https://api.github.com/users/shivaniag/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/shivaniag/subscriptions", "organizations_url": "https://api.github.com/users/shivaniag/orgs", "repos_url": "https://api.github.com/users/shivaniag/repos", "events_url": "https://api.github.com/users/shivaniag/events{/privacy}", "received_events_url": "https://api.github.com/users/shivaniag/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 4, "created_at": "2018-05-30T08:28:23Z", "updated_at": "2018-12-12T18:47:19Z", "closed_at": null, "author_association": "NONE", "body": "I'm using an AWS g3.8xlarge instance which has 2 GPUs.\r\n\r\nTF serving is able to detect both GPUs and initialise them but while running the model it only uses 1 GPU to the maximum.\r\n\r\nWe are on version 1.7, even though the client sends upto 32 requests in parallel, the model server only uses the first GPU \r\n![40657873-faca0f68-6366-11e8-963c-3d5ba1db4e2c](https://user-images.githubusercontent.com/6717323/40708575-66e52d36-6411-11e8-9e01-d95a0861827d.jpg)\r\n\r\n06_09_21"}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19621", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19621/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19621/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19621/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/19621", "id": 327320529, "node_id": "MDU6SXNzdWUzMjczMjA1Mjk=", "number": 19621, "title": "[Bug] AdamOptimizer: No Exception on invalid input", "user": {"login": "mBHyuC", "id": 32447738, "node_id": "MDQ6VXNlcjMyNDQ3NzM4", "avatar_url": "https://avatars3.githubusercontent.com/u/32447738?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mBHyuC", "html_url": "https://github.com/mBHyuC", "followers_url": "https://api.github.com/users/mBHyuC/followers", "following_url": "https://api.github.com/users/mBHyuC/following{/other_user}", "gists_url": "https://api.github.com/users/mBHyuC/gists{/gist_id}", "starred_url": "https://api.github.com/users/mBHyuC/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mBHyuC/subscriptions", "organizations_url": "https://api.github.com/users/mBHyuC/orgs", "repos_url": "https://api.github.com/users/mBHyuC/repos", "events_url": "https://api.github.com/users/mBHyuC/events{/privacy}", "received_events_url": "https://api.github.com/users/mBHyuC/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 299643928, "node_id": "MDU6TGFiZWwyOTk2NDM5Mjg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:contributions%20welcome", "name": "stat:contributions welcome", "color": "f4b400", "default": false, "description": ""}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2018-05-29T13:27:23Z", "updated_at": "2018-07-14T11:41:30Z", "closed_at": null, "author_association": "NONE", "body": "### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**: No\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**: Windows\r\n- **TensorFlow installed from (source or binary)**: binary\r\n- **TensorFlow version (use command below)**: v1.8.0-0-g93bc2e2072\r\n- **Python version**: 3.6.3\r\n- **Bazel version (if compiling from source)**:\r\n- **GCC/Compiler version (if compiling from source)**:\r\n- **CUDA/cuDNN version**: 9.0/7.0\r\n- **GPU model and memory**: 4G/Quadro M1000M\r\n- **Exact command to reproduce**: -\r\n\r\n\r\n### Describe the problem\r\nThe graph can be executed with AdamOptimizer, thus the graph input is invalid. In the example an out-of-bound embedding  index is passed. Other tested optimizer (RMSP,Ada) yield: InvalidArgumentError: indices[0,0] = 10 is not in [0, 10)\r\n\r\n### Source code / logs\r\n```python\r\nimport tensorflow as tf\r\nimport numpy as np\r\n\r\ndef embed_helper(inputs, size, dim, name=None):\r\n    std = np.square(2. / dim)\r\n    test_emb = tf.Variable(tf.random_uniform([size, dim], -std, std), name=name)\r\n    return tf.nn.embedding_lookup(test_emb, inputs)\r\n\r\nnum_factors = 16\r\nnum_embed = 10\r\n\r\ngraph = tf.Graph()\r\nwith graph.as_default():\r\n    x = tf.placeholder(tf.int32, shape=(None, 1))\r\n    x_emb = embed_helper(x, num_embed, num_factors, name=None)\r\n    very_complicated_net = tf.square(tf.subtract(x_emb, tf.constant(3.)))\r\n\r\n    # RMSP and the other tested optimizer yield InvalidArgumentError - AdamOptimizer does not\r\n    # -> InvalidArgumentError (see above for traceback): indices[0,0] = 10 is not in [0, 10)\r\n    #opt = tf.train.RMSPropOptimizer(learning_rate=0.01)\r\n    opt = tf.train.AdamOptimizer(learning_rate=0.01)\r\n\r\n    graph_step = opt.minimize(very_complicated_net)\r\n    init = tf.global_variables_initializer()\r\n\r\nsession = tf.Session(config=None, graph=graph)\r\nsession.run(init)\r\n\r\n# 10 is not in [0,1,..,9]\r\nindex_batch_out_of_bound = np.array([10]).reshape(-1, 1)\r\n\r\nx_feed_dict = {\r\n    x: index_batch_out_of_bound\r\n}\r\n\r\nsession.run(graph_step, x_feed_dict)\r\n```\r\n"}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19616", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19616/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19616/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19616/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/19616", "id": 327252887, "node_id": "MDU6SXNzdWUzMjcyNTI4ODc=", "number": 19616, "title": "[Feature Request] print_tensors_in_checkpoint_file should accept Google Cloud Bucket addresses of the form 'gs://...'", "user": {"login": "amundvedal", "id": 22004000, "node_id": "MDQ6VXNlcjIyMDA0MDAw", "avatar_url": "https://avatars0.githubusercontent.com/u/22004000?v=4", "gravatar_id": "", "url": "https://api.github.com/users/amundvedal", "html_url": "https://github.com/amundvedal", "followers_url": "https://api.github.com/users/amundvedal/followers", "following_url": "https://api.github.com/users/amundvedal/following{/other_user}", "gists_url": "https://api.github.com/users/amundvedal/gists{/gist_id}", "starred_url": "https://api.github.com/users/amundvedal/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/amundvedal/subscriptions", "organizations_url": "https://api.github.com/users/amundvedal/orgs", "repos_url": "https://api.github.com/users/amundvedal/repos", "events_url": "https://api.github.com/users/amundvedal/events{/privacy}", "received_events_url": "https://api.github.com/users/amundvedal/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-05-29T10:05:56Z", "updated_at": "2020-02-08T01:15:03Z", "closed_at": null, "author_association": "NONE", "body": "### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**: yes\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**:\r\nMacOS High Sierra\r\n- **TensorFlow installed from (source or binary)**:\r\nbinary\r\n- **TensorFlow version (use command below)**:\r\nv1.8.0-1660-ga543d94710;  1.9.0-dev20180510\r\n- **Python version**:\r\n3.6.4 \r\nBazel version:\r\nN/A\r\nCUDA/cuDNN version:\r\nN/A\r\nGPU model and memory:\r\nN/A\r\nExact command to reproduce:\r\n```python\r\nfrom tensorflow.python.tools import inspect_checkpoint as chkp\r\nchkp.print_tensors_in_checkpoint_file(\"gs://...\",all_tensors=True)\r\n```\r\n\r\n### Describe the problem\r\nThe function `print_tensors_in_checkpoint_file` does not seem to handle Google Cloud Bucket addresses of the form 'gs://...', but rather gives a \"not found\" error. This does not match the behavior of tf.train.Saver.save() and .restore() \r\n\r\n### Source code / logs\r\nN/A\r\n"}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19584", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19584/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19584/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19584/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/19584", "id": 326844294, "node_id": "MDU6SXNzdWUzMjY4NDQyOTQ=", "number": 19584, "title": "Prebuilt binaries do not work with CPUs that do not have AVX instruction sets.", "user": {"login": "gunan", "id": 7946809, "node_id": "MDQ6VXNlcjc5NDY4MDk=", "avatar_url": "https://avatars3.githubusercontent.com/u/7946809?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gunan", "html_url": "https://github.com/gunan", "followers_url": "https://api.github.com/users/gunan/followers", "following_url": "https://api.github.com/users/gunan/following{/other_user}", "gists_url": "https://api.github.com/users/gunan/gists{/gist_id}", "starred_url": "https://api.github.com/users/gunan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gunan/subscriptions", "organizations_url": "https://api.github.com/users/gunan/orgs", "repos_url": "https://api.github.com/users/gunan/repos", "events_url": "https://api.github.com/users/gunan/events{/privacy}", "received_events_url": "https://api.github.com/users/gunan/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 404586558, "node_id": "MDU6TGFiZWw0MDQ1ODY1NTg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:community%20support", "name": "stat:community support", "color": "f4b400", "default": false, "description": ""}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 26, "created_at": "2018-05-27T19:41:01Z", "updated_at": "2020-03-19T11:05:37Z", "closed_at": null, "author_association": "MEMBER", "body": "As announced in release notes, TensorFlow release binaries version 1.6 and higher are prebuilt with AVX instruction sets. This means on any CPU that do not have these instruction sets either CPU or GPU version of TF will fail to load with any of the following errors:\r\n\r\n- `ImportError: DLL load failed:`\r\n-  A crash with return code 132\r\n\r\nOur recommendation is to build TF from sources on these systems.\r\n\r\n\r\n### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**: No\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**: ubuntu/windows/macos\r\n- **TensorFlow installed from (source or binary)**: binary\r\n- **TensorFlow version (use command below)**: 1.6 and up\r\n- **Python version**:  2.7, 3.3, 3.4, 3.5, 3.6 and any newer\r\n- **Bazel version (if compiling from source)**: n/a\r\n- **GCC/Compiler version (if compiling from source)**: n/a\r\n- **CUDA/cuDNN version**: any\r\n- **GPU model and memory**: any\r\n- **Exact command to reproduce**: python -c \"import tensorflow as tf\""}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19568", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19568/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19568/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19568/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/19568", "id": 326717520, "node_id": "MDU6SXNzdWUzMjY3MTc1MjA=", "number": 19568, "title": "sess.run([train_step]) freezes when using batch_normalization and Collection Update", "user": {"login": "amirmazaheri1990", "id": 3743009, "node_id": "MDQ6VXNlcjM3NDMwMDk=", "avatar_url": "https://avatars1.githubusercontent.com/u/3743009?v=4", "gravatar_id": "", "url": "https://api.github.com/users/amirmazaheri1990", "html_url": "https://github.com/amirmazaheri1990", "followers_url": "https://api.github.com/users/amirmazaheri1990/followers", "following_url": "https://api.github.com/users/amirmazaheri1990/following{/other_user}", "gists_url": "https://api.github.com/users/amirmazaheri1990/gists{/gist_id}", "starred_url": "https://api.github.com/users/amirmazaheri1990/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/amirmazaheri1990/subscriptions", "organizations_url": "https://api.github.com/users/amirmazaheri1990/orgs", "repos_url": "https://api.github.com/users/amirmazaheri1990/repos", "events_url": "https://api.github.com/users/amirmazaheri1990/events{/privacy}", "received_events_url": "https://api.github.com/users/amirmazaheri1990/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": {"login": "asimshankar", "id": 16018, "node_id": "MDQ6VXNlcjE2MDE4", "avatar_url": "https://avatars2.githubusercontent.com/u/16018?v=4", "gravatar_id": "", "url": "https://api.github.com/users/asimshankar", "html_url": "https://github.com/asimshankar", "followers_url": "https://api.github.com/users/asimshankar/followers", "following_url": "https://api.github.com/users/asimshankar/following{/other_user}", "gists_url": "https://api.github.com/users/asimshankar/gists{/gist_id}", "starred_url": "https://api.github.com/users/asimshankar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/asimshankar/subscriptions", "organizations_url": "https://api.github.com/users/asimshankar/orgs", "repos_url": "https://api.github.com/users/asimshankar/repos", "events_url": "https://api.github.com/users/asimshankar/events{/privacy}", "received_events_url": "https://api.github.com/users/asimshankar/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "asimshankar", "id": 16018, "node_id": "MDQ6VXNlcjE2MDE4", "avatar_url": "https://avatars2.githubusercontent.com/u/16018?v=4", "gravatar_id": "", "url": "https://api.github.com/users/asimshankar", "html_url": "https://github.com/asimshankar", "followers_url": "https://api.github.com/users/asimshankar/followers", "following_url": "https://api.github.com/users/asimshankar/following{/other_user}", "gists_url": "https://api.github.com/users/asimshankar/gists{/gist_id}", "starred_url": "https://api.github.com/users/asimshankar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/asimshankar/subscriptions", "organizations_url": "https://api.github.com/users/asimshankar/orgs", "repos_url": "https://api.github.com/users/asimshankar/repos", "events_url": "https://api.github.com/users/asimshankar/events{/privacy}", "received_events_url": "https://api.github.com/users/asimshankar/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 17, "created_at": "2018-05-26T07:24:03Z", "updated_at": "2018-12-11T18:51:19Z", "closed_at": null, "author_association": "NONE", "body": "Hi,\r\n\r\nI have faced a strange situation with Tensorflow. I explored a lot about this problem but just found one other thread (unsolved) on StackOverflow. (here: https://stackoverflow.com/questions/47047124/tf-layers-batch-normalization-freezes-during-sess-run-1-5-0-dev20171031). So, I decided to ask it here.\r\n\r\nBasically, when I call sess.run(), it freezes. By freeze, I mean, the GPU utilization is zero, I get no errors and the process is on GPU (GPU memory is allocated).  I have the following code segment:\r\n```\r\nupdate_ops = tf.get_collection(tf.GraphKeys.UPDATE_OPS)\r\n  with tf.control_dependencies(update_ops):\r\n        train_step1 = optimizer1.minimize(loss = loss_fill +lossL2+ loss_detection,var_list=vars)\r\n```\r\n\r\nWhen I change this part to:\r\n```\r\nupdate_ops = tf.get_collection(tf.GraphKeys.UPDATE_OPS)\r\n     with tf.control_dependencies(update_ops):\r\n             pass\r\ntrain_step1 = optimizer1.minimize(loss = loss_fill +lossL2+ loss_detection,var_list=vars)\r\n```\r\n\r\nwhich basically ignores some necessary moving average updates, it doesn't freeze anymore. I have a lot of tf.layers.batch_normalization() instances in my code and this is the first time I am facing this issue.\r\n\r\nThanks\r\n\r\n"}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19567", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19567/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19567/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19567/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/19567", "id": 326700789, "node_id": "MDU6SXNzdWUzMjY3MDA3ODk=", "number": 19567, "title": "[BUG] max_pooling1d can not run in GPU ", "user": {"login": "simon-moloco", "id": 25159955, "node_id": "MDQ6VXNlcjI1MTU5OTU1", "avatar_url": "https://avatars3.githubusercontent.com/u/25159955?v=4", "gravatar_id": "", "url": "https://api.github.com/users/simon-moloco", "html_url": "https://github.com/simon-moloco", "followers_url": "https://api.github.com/users/simon-moloco/followers", "following_url": "https://api.github.com/users/simon-moloco/following{/other_user}", "gists_url": "https://api.github.com/users/simon-moloco/gists{/gist_id}", "starred_url": "https://api.github.com/users/simon-moloco/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/simon-moloco/subscriptions", "organizations_url": "https://api.github.com/users/simon-moloco/orgs", "repos_url": "https://api.github.com/users/simon-moloco/repos", "events_url": "https://api.github.com/users/simon-moloco/events{/privacy}", "received_events_url": "https://api.github.com/users/simon-moloco/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-05-26T01:49:47Z", "updated_at": "2020-02-11T18:23:26Z", "closed_at": null, "author_association": "NONE", "body": "### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**: Yes\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**: Linux Ubuntu 16.04\r\n- **TensorFlow installed from (source or binary)**: binary\r\n- **TensorFlow version (use command below)**: 1.6.0\r\n- **Python version**: 2.71.0\r\n- **Bazel version (if compiling from source)**:\r\n- **GCC/Compiler version (if compiling from source)**:\r\n- **CUDA/cuDNN version**:  9.0/7102\r\n- **GPU model and memory**: 3x GeForce GTX 1080 at 8G\r\n- **Exact command to reproduce**: \r\n\r\n### Describe the problem\r\n\r\nI have a rank-2 tensor, say a 1024*512 tensor, and I want to apply 1D max pooling. If I run in CPU, codes work great. However, If I run in GPU, codes will throw exceptions like the following.\r\n\r\n```\r\n2018-05-25 18:28:34.272767: E tensorflow/stream_executor/cuda/cuda_dnn.cc:396] Loaded runtime CuDNN library: 7102 (compatibility version 7100) but source was compiled with 7005 (compatibility version 7000).  If using a binary install, upgrade your CuDNN library to match.  If building from sources, make sure the library loaded at runtime matches a compatible version specified during compile configuration.\r\n2018-05-25 18:28:34.273613: W ./tensorflow/stream_executor/stream.h:2018] attempting to perform DNN operation using StreamExecutor without DNN support\r\nTraceback (most recent call last):\r\n  File \"/var/lib/jenkins/venvs/gpumoloco/local/lib/python2.7/site-packages/tensorflow/python/estimator/estimator.py\", line 355, in train\r\n    loss = self._train_model(input_fn, hooks, saving_listeners)\r\n  File \"/var/lib/jenkins/venvs/gpumoloco/local/lib/python2.7/site-packages/tensorflow/python/estimator/estimator.py\", line 903, in _train_model\r\n    _, loss = mon_sess.run([estimator_spec.train_op, estimator_spec.loss])\r\n  File \"/var/lib/jenkins/venvs/gpumoloco/local/lib/python2.7/site-packages/tensorflow/python/training/monitored_session.py\", line 546, in run\r\n    run_metadata=run_metadata)\r\n  File \"/var/lib/jenkins/venvs/gpumoloco/local/lib/python2.7/site-packages/tensorflow/python/training/monitored_session.py\", line 1022, in run\r\n    run_metadata=run_metadata)\r\n  File \"/var/lib/jenkins/venvs/gpumoloco/local/lib/python2.7/site-packages/tensorflow/python/training/monitored_session.py\", line 1113, in run\r\n    raise six.reraise(*original_exc_info)\r\n  File \"/var/lib/jenkins/venvs/gpumoloco/local/lib/python2.7/site-packages/tensorflow/python/training/monitored_session.py\", line 1098, in run\r\n    return self._sess.run(*args, **kwargs)\r\n  File \"/var/lib/jenkins/venvs/gpumoloco/local/lib/python2.7/site-packages/tensorflow/python/training/monitored_session.py\", line 1170, in run\r\n    run_metadata=run_metadata)\r\n  File \"/var/lib/jenkins/venvs/gpumoloco/local/lib/python2.7/site-packages/tensorflow/python/training/monitored_session.py\", line 950, in run\r\n    return self._sess.run(*args, **kwargs)\r\n  File \"/var/lib/jenkins/venvs/gpumoloco/local/lib/python2.7/site-packages/tensorflow/python/client/session.py\", line 905, in run\r\n    run_metadata_ptr)\r\n  File \"/var/lib/jenkins/venvs/gpumoloco/local/lib/python2.7/site-packages/tensorflow/python/client/session.py\", line 1140, in _run\r\n    feed_dict_tensor, options, run_metadata)\r\n  File \"/var/lib/jenkins/venvs/gpumoloco/local/lib/python2.7/site-packages/tensorflow/python/client/session.py\", line 1321, in _do_run\r\n    run_metadata)\r\n  File \"/var/lib/jenkins/venvs/gpumoloco/local/lib/python2.7/site-packages/tensorflow/python/client/session.py\", line 1340, in _do_call\r\n    raise type(e)(node_def, op, message)\r\ntensorflow.python.framework.errors_impl.InternalError: cudnn PoolForward launch failed\r\n\t [[Node: dnn/input_from_feature_columns_2/max_pooling1d/MaxPool = MaxPool[T=DT_FLOAT, data_format=\"NCHW\", ksize=[1, 1, 1, 3], padding=\"SAME\", strides=[1, 1, 1, 3], _device=\"/job:localhost/replica:0/task:0/device:GPU:0\"](dnn/input_from_feature_columns_2/max_pooling1d/MaxPool-0-TransposeNHWCToNCHW-LayoutOptimizer)]]\r\n\t [[Node: dnn/gradients/dnn/input_from_feature_columns_2/input_layer/b_media_appbundle_format_embedding/b_media_appbundle_format_embedding_weights_grad/Select_1/_313 = _Recv[client_terminated=false, recv_device=\"/job:localhost/replica:0/task:0/device:CPU:0\", send_device=\"/job:localhost/replica:0/task:0/device:GPU:0\", send_device_incarnation=1, tensor_name=\"edge_1344_...d/Select_1\", tensor_type=DT_FLOAT, _device=\"/job:localhost/replica:0/task:0/device:CPU:0\"]()]]\r\n\r\nCaused by op u'dnn/input_from_feature_columns_2/max_pooling1d/MaxPool', defined at:\r\n  File \"/usr/lib/python2.7/runpy.py\", line 174, in _run_module_as_main\r\n    \"__main__\", fname, loader, pkg_name)\r\n  File \"/usr/lib/python2.7/runpy.py\", line 72, in _run_code\r\n    exec code in run_globals\r\n  File \"/data2/jenkins/src/marvel2/python/moloco/deploy/models/tf_dnn/training/main/task.py\", line 66, in <module>\r\n    tf.app.run()\r\n  File \"/var/lib/jenkins/venvs/gpumoloco/local/lib/python2.7/site-packages/tensorflow/python/platform/app.py\", line 126, in run\r\n    _sys.exit(main(argv))\r\n  File \"/data2/jenkins/src/marvel2/python/moloco/deploy/models/tf_dnn/training/main/task.py\", line 61, in main\r\n    t.train_eval()\r\n  File \"/data2/jenkins/src/marvel2/python/moloco/learn/training/trainer.py\", line 127, in train_eval\r\n    self.model.train_eval(config, model_dir, train_data, eval_data)\r\n  File \"/data2/jenkins/src/marvel2/python/moloco/learn/models/tf_deep.py\", line 170, in train_eval\r\n    training.train_and_evaluate(m, train_spec, eval_spec)\r\n  File \"/data2/jenkins/src/marvel2/python/moloco/learn/estimators/training.py\", line 401, in train_and_evaluate\r\n    executor.run_local()\r\n  File \"/data2/jenkins/src/marvel2/python/moloco/learn/estimators/training.py\", line 572, in run_local\r\n    self._estimator.train(input_fn=self._train_spec.input_fn, max_steps=max_steps, hooks=train_hooks)\r\n  File \"/var/lib/jenkins/venvs/gpumoloco/local/lib/python2.7/site-packages/tensorflow/python/estimator/estimator.py\", line 355, in train\r\n    loss = self._train_model(input_fn, hooks, saving_listeners)\r\n  File \"/var/lib/jenkins/venvs/gpumoloco/local/lib/python2.7/site-packages/tensorflow/python/estimator/estimator.py\", line 824, in _train_model\r\n    features, labels, model_fn_lib.ModeKeys.TRAIN, self.config)\r\n  File \"/var/lib/jenkins/venvs/gpumoloco/local/lib/python2.7/site-packages/tensorflow/python/estimator/estimator.py\", line 805, in _call_model_fn\r\n    model_fn_results = self._model_fn(features=features, **kwargs)\r\n  File \"/data2/jenkins/src/marvel2/python/moloco/learn/estimators/dnn.py\", line 466, in _model_fn\r\n    config=config)\r\n  File \"/data2/jenkins/src/marvel2/python/moloco/learn/estimators/dnn.py\", line 224, in _dnn_model_fn\r\n    last_layer_feats=ll_feats.values())\r\n  File \"/data2/jenkins/src/marvel2/python/moloco/learn/estimators/logit_ops.py\", line 301, in build_dnn_logits\r\n    last_layer_feats=last_layer_feats)\r\n  File \"/data2/jenkins/src/marvel2/python/moloco/learn/estimators/logit_ops.py\", line 206, in build_hidden_layers\r\n    net = apply_pooling(net, pooling, pooling_size, pooling_stride)\r\n  File \"/data2/jenkins/src/marvel2/python/moloco/learn/estimators/logit_ops.py\", line 343, in apply_pooling\r\n    o = tf.layers.max_pooling1d(o, pooling_size, strides=pooling_stride, padding=\"same\")\r\n  File \"/var/lib/jenkins/venvs/gpumoloco/local/lib/python2.7/site-packages/tensorflow/python/layers/pooling.py\", line 231, in max_pooling1d\r\n    return layer.apply(inputs)\r\n  File \"/var/lib/jenkins/venvs/gpumoloco/local/lib/python2.7/site-packages/tensorflow/python/layers/base.py\", line 825, in apply\r\n    return self.__call__(inputs, *args, **kwargs)\r\n  File \"/var/lib/jenkins/venvs/gpumoloco/local/lib/python2.7/site-packages/tensorflow/python/layers/base.py\", line 714, in __call__\r\n    outputs = self.call(inputs, *args, **kwargs)\r\n  File \"/var/lib/jenkins/venvs/gpumoloco/local/lib/python2.7/site-packages/tensorflow/python/layers/pooling.py\", line 86, in call\r\n    data_format=data_format)\r\n  File \"/var/lib/jenkins/venvs/gpumoloco/local/lib/python2.7/site-packages/tensorflow/python/ops/nn_ops.py\", line 2144, in max_pool\r\n    name=name)\r\n  File \"/var/lib/jenkins/venvs/gpumoloco/local/lib/python2.7/site-packages/tensorflow/python/ops/gen_nn_ops.py\", line 4587, in max_pool\r\n    data_format=data_format, name=name)\r\n  File \"/var/lib/jenkins/venvs/gpumoloco/local/lib/python2.7/site-packages/tensorflow/python/framework/op_def_library.py\", line 787, in _apply_op_helper\r\n    op_def=op_def)\r\n  File \"/var/lib/jenkins/venvs/gpumoloco/local/lib/python2.7/site-packages/tensorflow/python/framework/ops.py\", line 3290, in create_op\r\n    op_def=op_def)\r\n  File \"/var/lib/jenkins/venvs/gpumoloco/local/lib/python2.7/site-packages/tensorflow/python/framework/ops.py\", line 1654, in __init__\r\n    self._traceback = self._graph._extract_stack()  # pylint: disable=protected-access\r\n\r\nInternalError (see above for traceback): cudnn PoolForward launch failed\r\n\t [[Node: dnn/input_from_feature_columns_2/max_pooling1d/MaxPool = MaxPool[T=DT_FLOAT, data_format=\"NCHW\", ksize=[1, 1, 1, 3], padding=\"SAME\", strides=[1, 1, 1, 3], _device=\"/job:localhost/replica:0/task:0/device:GPU:0\"](dnn/input_from_feature_columns_2/max_pooling1d/MaxPool-0-TransposeNHWCToNCHW-LayoutOptimizer)]]\r\n\t [[Node: dnn/gradients/dnn/input_from_feature_columns_2/input_layer/b_media_appbundle_format_embedding/b_media_appbundle_format_embedding_weights_grad/Select_1/_313 = _Recv[client_terminated=false, recv_device=\"/job:localhost/replica:0/task:0/device:CPU:0\", send_device=\"/job:localhost/replica:0/task:0/device:GPU:0\", send_device_incarnation=1, tensor_name=\"edge_1344_...d/Select_1\", tensor_type=DT_FLOAT, _device=\"/job:localhost/replica:0/task:0/device:CPU:0\"]()]]\r\n\r\nINFO:root:RETURN CODES: 1\r\n```\r\n\r\n\r\n### Source code / logs\r\n\r\nHere are my codes:\r\n\r\n```python\r\ndef apply_pooling(inputs, pooling, pooling_size, pooling_stride):\r\n  \"\"\"Apply pooling operations on inputs tensor.\r\n\r\n  Args:\r\n    inputs: A tensor with at least 3 rank.\r\n    pooling: When not `None`, `max` means max pooling, and `average` means average pooling.\r\n    pooling_size: The pooling size in all spatial dimensions.\r\n    pooling_stride: The stride operation size in all spatial dimensions.\r\n\r\n  Returns:\r\n    A tensors after applying for pooling strategy.\r\n  \"\"\"\r\n  if pooling is None or pooling == Pooling.NONE:\r\n    return inputs\r\n\r\n  # Expand dimension if inputs has not enough rank\r\n  ndims = len(inputs.get_shape().as_list())\r\n  if ndims == 1:\r\n    raise ValueError(\"inputs must be at least rank 2. Given it's {}\".format(ndims))\r\n  o = inputs\r\n  if ndims == 2:\r\n    o = tf.expand_dims(o, -1)\r\n  # TODO: fix the issue of not being able to run pooling in GPU\r\n  if pooling == Pooling.MAX:\r\n    o = tf.layers.max_pooling1d(o, pooling_size, strides=pooling_stride, padding=\"same\")\r\n  elif pooling == Pooling.AVERAGE:\r\n    o = tf.layers.average_pooling1d(o, pooling_size, strides=pooling_stride, padding=\"same\")\r\n  else:\r\n    raise ValueError(\"Unsupported pooling strategy: {}\".format(pooling))\r\n  # Squeeze dimenion if necessary\r\n  if ndims == 2:\r\n    o = tf.squeeze(o, -1)\r\n  return o\r\n```"}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19556", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19556/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19556/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19556/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/19556", "id": 326567248, "node_id": "MDU6SXNzdWUzMjY1NjcyNDg=", "number": 19556, "title": "[Feature request] Backpropagation through Dataset API", "user": {"login": "Hoeze", "id": 1200058, "node_id": "MDQ6VXNlcjEyMDAwNTg=", "avatar_url": "https://avatars0.githubusercontent.com/u/1200058?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Hoeze", "html_url": "https://github.com/Hoeze", "followers_url": "https://api.github.com/users/Hoeze/followers", "following_url": "https://api.github.com/users/Hoeze/following{/other_user}", "gists_url": "https://api.github.com/users/Hoeze/gists{/gist_id}", "starred_url": "https://api.github.com/users/Hoeze/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Hoeze/subscriptions", "organizations_url": "https://api.github.com/users/Hoeze/orgs", "repos_url": "https://api.github.com/users/Hoeze/repos", "events_url": "https://api.github.com/users/Hoeze/events{/privacy}", "received_events_url": "https://api.github.com/users/Hoeze/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 299643928, "node_id": "MDU6TGFiZWwyOTk2NDM5Mjg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:contributions%20welcome", "name": "stat:contributions welcome", "color": "f4b400", "default": false, "description": ""}, {"id": 473173272, "node_id": "MDU6TGFiZWw0NzMxNzMyNzI=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:feature", "name": "type:feature", "color": "159b2e", "default": false, "description": ""}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-05-25T15:22:46Z", "updated_at": "2018-06-15T05:49:13Z", "closed_at": null, "author_association": "NONE", "body": "It would be cool if the Dataset API would support backpropagation.\r\n\r\nCurrenty I'm working on a statistical model with per-sample weights. \r\nTherefore, I have to pass sample indices through the Dataset API and index the weights manually.\r\n\r\n[See my question (especially Allen Lavoie's comment) on stackoverflow.](https://stackoverflow.com/questions/50155021/tensorflow-dataset-api-gradient-is-none?noredirect=1#comment87464556_50155021)\r\n\r\n\r\n------------------------\r\n\r\n### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**: No\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**: Linux Ubuntu 18.04\r\n- **TensorFlow installed from (source or binary)**: binary\r\n- **TensorFlow version (use command below)**: 1.8.0\r\n- **Python version**: 3.6.5\r\n- **Bazel version (if compiling from source)**: none\r\n- **GCC/Compiler version (if compiling from source)**: none\r\n- **CUDA/cuDNN version**: none\r\n- **GPU model and memory**: none\r\n- **Exact command to reproduce**: none\r\n"}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19543", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19543/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19543/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19543/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/19543", "id": 326315440, "node_id": "MDU6SXNzdWUzMjYzMTU0NDA=", "number": 19543, "title": "TPUEstimator.evaluate() docstring incorrect for steps param", "user": {"login": "Matt-Hicks-Bose", "id": 38144321, "node_id": "MDQ6VXNlcjM4MTQ0MzIx", "avatar_url": "https://avatars3.githubusercontent.com/u/38144321?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Matt-Hicks-Bose", "html_url": "https://github.com/Matt-Hicks-Bose", "followers_url": "https://api.github.com/users/Matt-Hicks-Bose/followers", "following_url": "https://api.github.com/users/Matt-Hicks-Bose/following{/other_user}", "gists_url": "https://api.github.com/users/Matt-Hicks-Bose/gists{/gist_id}", "starred_url": "https://api.github.com/users/Matt-Hicks-Bose/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Matt-Hicks-Bose/subscriptions", "organizations_url": "https://api.github.com/users/Matt-Hicks-Bose/orgs", "repos_url": "https://api.github.com/users/Matt-Hicks-Bose/repos", "events_url": "https://api.github.com/users/Matt-Hicks-Bose/events{/privacy}", "received_events_url": "https://api.github.com/users/Matt-Hicks-Bose/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": {"login": "rxsang", "id": 6399870, "node_id": "MDQ6VXNlcjYzOTk4NzA=", "avatar_url": "https://avatars0.githubusercontent.com/u/6399870?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rxsang", "html_url": "https://github.com/rxsang", "followers_url": "https://api.github.com/users/rxsang/followers", "following_url": "https://api.github.com/users/rxsang/following{/other_user}", "gists_url": "https://api.github.com/users/rxsang/gists{/gist_id}", "starred_url": "https://api.github.com/users/rxsang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rxsang/subscriptions", "organizations_url": "https://api.github.com/users/rxsang/orgs", "repos_url": "https://api.github.com/users/rxsang/repos", "events_url": "https://api.github.com/users/rxsang/events{/privacy}", "received_events_url": "https://api.github.com/users/rxsang/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "rxsang", "id": 6399870, "node_id": "MDQ6VXNlcjYzOTk4NzA=", "avatar_url": "https://avatars0.githubusercontent.com/u/6399870?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rxsang", "html_url": "https://github.com/rxsang", "followers_url": "https://api.github.com/users/rxsang/followers", "following_url": "https://api.github.com/users/rxsang/following{/other_user}", "gists_url": "https://api.github.com/users/rxsang/gists{/gist_id}", "starred_url": "https://api.github.com/users/rxsang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rxsang/subscriptions", "organizations_url": "https://api.github.com/users/rxsang/orgs", "repos_url": "https://api.github.com/users/rxsang/repos", "events_url": "https://api.github.com/users/rxsang/events{/privacy}", "received_events_url": "https://api.github.com/users/rxsang/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 2, "created_at": "2018-05-24T22:14:56Z", "updated_at": "2020-03-17T04:43:59Z", "closed_at": null, "author_association": "NONE", "body": "### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**: Yes\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**: TPUv2-8\r\n- **TensorFlow installed from (source or binary)**: VM disk image as configured by ctpu\r\n- **TensorFlow version (use command below)**: v1.8.0-0-g93bc2e2072\r\n- **Python version**: 2.7.13\r\n- **Bazel version (if compiling from source)**: N/A\r\n- **GCC/Compiler version (if compiling from source)**: N/A\r\n- **CUDA/cuDNN version**: N/A\r\n- **GPU model and memory**: N/A\r\n- **Exact command to reproduce**: my_tpu_estimator.evaluate(my_input_fn, steps=None)\r\n\r\n### Describe the problem\r\nThe docstring for https://www.tensorflow.org/api_docs/python/tf/contrib/tpu/TPUEstimator#evaluate incorrectly states that ```steps``` can be None, but when called in this way it causes a ```ValueError: Evaluate `steps` must be set on TPU. Cannot be `None`.```\r\n"}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19530", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19530/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19530/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19530/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/19530", "id": 326110984, "node_id": "MDU6SXNzdWUzMjYxMTA5ODQ=", "number": 19530, "title": "transforms_graph error when \"remove_nodes(op=Identity, op=CheckNumerics)\" and \"fold_old_batch_norms\" are used together", "user": {"login": "HwMohanLiu", "id": 34759453, "node_id": "MDQ6VXNlcjM0NzU5NDUz", "avatar_url": "https://avatars3.githubusercontent.com/u/34759453?v=4", "gravatar_id": "", "url": "https://api.github.com/users/HwMohanLiu", "html_url": "https://github.com/HwMohanLiu", "followers_url": "https://api.github.com/users/HwMohanLiu/followers", "following_url": "https://api.github.com/users/HwMohanLiu/following{/other_user}", "gists_url": "https://api.github.com/users/HwMohanLiu/gists{/gist_id}", "starred_url": "https://api.github.com/users/HwMohanLiu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/HwMohanLiu/subscriptions", "organizations_url": "https://api.github.com/users/HwMohanLiu/orgs", "repos_url": "https://api.github.com/users/HwMohanLiu/repos", "events_url": "https://api.github.com/users/HwMohanLiu/events{/privacy}", "received_events_url": "https://api.github.com/users/HwMohanLiu/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 404586558, "node_id": "MDU6TGFiZWw0MDQ1ODY1NTg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:community%20support", "name": "stat:community support", "color": "f4b400", "default": false, "description": ""}, {"id": 284443156, "node_id": "MDU6TGFiZWwyODQ0NDMxNTY=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:docs", "name": "type:docs", "color": "159b2e", "default": false, "description": ""}], "state": "open", "locked": false, "assignee": {"login": "tatianashp", "id": 986732, "node_id": "MDQ6VXNlcjk4NjczMg==", "avatar_url": "https://avatars2.githubusercontent.com/u/986732?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tatianashp", "html_url": "https://github.com/tatianashp", "followers_url": "https://api.github.com/users/tatianashp/followers", "following_url": "https://api.github.com/users/tatianashp/following{/other_user}", "gists_url": "https://api.github.com/users/tatianashp/gists{/gist_id}", "starred_url": "https://api.github.com/users/tatianashp/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tatianashp/subscriptions", "organizations_url": "https://api.github.com/users/tatianashp/orgs", "repos_url": "https://api.github.com/users/tatianashp/repos", "events_url": "https://api.github.com/users/tatianashp/events{/privacy}", "received_events_url": "https://api.github.com/users/tatianashp/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "tatianashp", "id": 986732, "node_id": "MDQ6VXNlcjk4NjczMg==", "avatar_url": "https://avatars2.githubusercontent.com/u/986732?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tatianashp", "html_url": "https://github.com/tatianashp", "followers_url": "https://api.github.com/users/tatianashp/followers", "following_url": "https://api.github.com/users/tatianashp/following{/other_user}", "gists_url": "https://api.github.com/users/tatianashp/gists{/gist_id}", "starred_url": "https://api.github.com/users/tatianashp/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tatianashp/subscriptions", "organizations_url": "https://api.github.com/users/tatianashp/orgs", "repos_url": "https://api.github.com/users/tatianashp/repos", "events_url": "https://api.github.com/users/tatianashp/events{/privacy}", "received_events_url": "https://api.github.com/users/tatianashp/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 11, "created_at": "2018-05-24T13:00:35Z", "updated_at": "2019-02-13T01:27:28Z", "closed_at": null, "author_association": "NONE", "body": "### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**: No\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**: Ubuntu 16.04\r\n- **TensorFlow installed from (source or binary)**: source\r\n- **TensorFlow version (use command below)**: r1.8\r\n- **Python version**: 2.7\r\n- **Bazel version (if compiling from source)**: 0.11.0\r\n- **GCC/Compiler version (if compiling from source)**: 4.9\r\n- **CUDA/cuDNN version**: No\r\n- **GPU model and memory**: No\r\n- **Exact command to reproduce**: ` bazel build tensorflow/tools/graph_transforms:transform_graph`\r\n\r\n### Describe the problem\r\nI followed the proposed commands for optimizing the model. However, \"remove_node(op=Identity, op=CheckNumerics)\" and \"fold_old_batch_norms\" cannot be used together.\r\n\r\n### Source code / logs\r\n```\r\nbazel-bin/tensorflow/tools/graph_transforms/transform_graph \\\r\n--in_graph=resnet-18_train.pb \\\r\n--out_graph=opt_resnet-18_train.pb \\\r\n--inputs='input_x' \\\r\n--outputs='output/BiasAdd' \\\r\n--transforms='\r\nstrip_unused_nodes(type=float, shape=\"1,224,224,3\")\r\nremove_nodes(op=Identity, op=CheckNumerics)\r\nfold_old_batch_norms\r\nfold_batch_norms'\r\n```\r\nError:\r\n> 2018-05-24 20:53:06.184534: I tensorflow/tools/graph_transforms/transform_graph.cc:264] Applying strip_unused_nodes\r\n2018-05-24 20:53:06.259019: I tensorflow/tools/graph_transforms/transform_graph.cc:264] Applying remove_nodes\r\n2018-05-24 20:53:06.486037: I tensorflow/tools/graph_transforms/transform_graph.cc:264] Applying fold_old_batch_norms\r\n2018-05-24 20:53:06.513047: E tensorflow/tools/graph_transforms/transform_graph.cc:210] Beta input to batch norm has bad shape: [64]\r\n\r\nHowever, if \"remove_node(op=Identity, op=CheckNumerics)\" is removed\r\n```\r\nbazel-bin/tensorflow/tools/graph_transforms/transform_graph \\\r\n--in_graph=resnet-18_train.pb \\\r\n--out_graph=opt_resnet-18_train.pb \\\r\n--inputs='input_x' \\\r\n--outputs='output/BiasAdd' \\\r\n--transforms='\r\nstrip_unused_nodes(type=float, shape=\"1,224,224,3\")\r\nfold_old_batch_norms\r\nfold_batch_norms'\r\n```\r\nIt then works...\r\n\r\n"}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19528", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19528/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19528/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19528/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/19528", "id": 326062740, "node_id": "MDU6SXNzdWUzMjYwNjI3NDA=", "number": 19528, "title": "Restore problem when work with multiple tf.contrib.lookup.MutableHashTable", "user": {"login": "wrongtest", "id": 7600935, "node_id": "MDQ6VXNlcjc2MDA5MzU=", "avatar_url": "https://avatars2.githubusercontent.com/u/7600935?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wrongtest", "html_url": "https://github.com/wrongtest", "followers_url": "https://api.github.com/users/wrongtest/followers", "following_url": "https://api.github.com/users/wrongtest/following{/other_user}", "gists_url": "https://api.github.com/users/wrongtest/gists{/gist_id}", "starred_url": "https://api.github.com/users/wrongtest/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wrongtest/subscriptions", "organizations_url": "https://api.github.com/users/wrongtest/orgs", "repos_url": "https://api.github.com/users/wrongtest/repos", "events_url": "https://api.github.com/users/wrongtest/events{/privacy}", "received_events_url": "https://api.github.com/users/wrongtest/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 404586594, "node_id": "MDU6TGFiZWw0MDQ1ODY1OTQ=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:awaiting%20tensorflower", "name": "stat:awaiting tensorflower", "color": "f4b400", "default": false, "description": ""}, {"id": 473172988, "node_id": "MDU6TGFiZWw0NzMxNzI5ODg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:bug", "name": "type:bug", "color": "159b2e", "default": false, "description": ""}], "state": "open", "locked": false, "assignee": {"login": "ysuematsu", "id": 15674604, "node_id": "MDQ6VXNlcjE1Njc0NjA0", "avatar_url": "https://avatars3.githubusercontent.com/u/15674604?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ysuematsu", "html_url": "https://github.com/ysuematsu", "followers_url": "https://api.github.com/users/ysuematsu/followers", "following_url": "https://api.github.com/users/ysuematsu/following{/other_user}", "gists_url": "https://api.github.com/users/ysuematsu/gists{/gist_id}", "starred_url": "https://api.github.com/users/ysuematsu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ysuematsu/subscriptions", "organizations_url": "https://api.github.com/users/ysuematsu/orgs", "repos_url": "https://api.github.com/users/ysuematsu/repos", "events_url": "https://api.github.com/users/ysuematsu/events{/privacy}", "received_events_url": "https://api.github.com/users/ysuematsu/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "ysuematsu", "id": 15674604, "node_id": "MDQ6VXNlcjE1Njc0NjA0", "avatar_url": "https://avatars3.githubusercontent.com/u/15674604?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ysuematsu", "html_url": "https://github.com/ysuematsu", "followers_url": "https://api.github.com/users/ysuematsu/followers", "following_url": "https://api.github.com/users/ysuematsu/following{/other_user}", "gists_url": "https://api.github.com/users/ysuematsu/gists{/gist_id}", "starred_url": "https://api.github.com/users/ysuematsu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ysuematsu/subscriptions", "organizations_url": "https://api.github.com/users/ysuematsu/orgs", "repos_url": "https://api.github.com/users/ysuematsu/repos", "events_url": "https://api.github.com/users/ysuematsu/events{/privacy}", "received_events_url": "https://api.github.com/users/ysuematsu/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 4, "created_at": "2018-05-24T10:37:18Z", "updated_at": "2018-12-20T18:47:24Z", "closed_at": null, "author_association": "NONE", "body": "### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**: \r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**: 3.10.0-693.2.2.el7.x86_64\r\n- **TensorFlow installed from (source or binary)**: binary\r\n- **TensorFlow version (use command below)**: 1.8.0\r\n- **Python version**: Python 2.7.14 :: Anaconda\r\n- **Bazel version (if compiling from source)**: None\r\n- **GCC/Compiler version (if compiling from source)**: None\r\n- **CUDA/cuDNN version**: None\r\n- **GPU model and memory**: None\r\n- **Exact command to reproduce**: See below\r\n\r\n### Describe the problem\r\nWe try to use multiple tf.contrib.lookup.MutableHashTable objects in the script. But after do checkpoint with Saver.save(), we find that it can not restore table contents successfully. \r\n\r\nThe problem disappears if we explicitly specify name field for tables. It seems that the MutableHashTable save contents with spec key \"xxxx-keys\" and \"xxxx-values\", where \"xxxx\" is the object's name field defaults to \"MutableHashTable\".\r\n\r\nhttps://github.com/tensorflow/tensorflow/blob/93bc2e2072e0daccbcff7a90d397b704a9e8f778/tensorflow/contrib/lookup/lookup_ops.py#L463-L467\r\n\r\nMaybe it is better to associate unique name for each table object if not explicitly specified?\r\n\r\n### Source code / logs\r\nCreate and insert tables, and save\r\n```python\r\nkeys = tf.placeholder(dtype=tf.string, shape=[None])\r\nvalues = tf.placeholder(dtype=tf.int64, shape=[None])\r\ntable1 = tf.contrib.lookup.MutableHashTable(tf.string, tf.int64, -1)\r\ntable2 = tf.contrib.lookup.MutableHashTable(tf.string, tf.int64, -1)\r\ninsert_table1 = table1.insert(keys, values)\r\ninsert_table2 = table2.insert(keys, values)\r\nsaver = tf.train.Saver()\r\nwith tf.Session() as sess:\r\n    sess.run(insert_table1, feed_dict={keys: [\"a\"], values: [1]})\r\n    sess.run(insert_table2, feed_dict={keys: [\"b\"], values: [2]})\r\n    print \"table1:\", sess.run(table1.export())\r\n    print \"table2:\", sess.run(table2.export())\r\n    saver.save(sess, \"checkpoint/test\")\r\n```\r\ntable1: (array(['a'], dtype=object), array([1]))\r\ntable2: (array(['b'], dtype=object), array([2]))\r\n\r\nTry restore contents\r\n```python\r\ntable1 = tf.contrib.lookup.MutableHashTable(tf.string, tf.int64, -1)\r\ntable2 = tf.contrib.lookup.MutableHashTable(tf.string, tf.int64, -1)\r\nsaver = tf.train.Saver()\r\nwith tf.Session() as sess:\r\n    saver.restore(sess, \"checkpoint/test\")\r\n    print \"table1:\", sess.run(table1.export())\r\n    print \"table2:\", sess.run(table2.export())\r\n```\r\ntable1: (array([], dtype=object), array([], dtype=int64))\r\ntable2: (array(['b'], dtype=object), array([2]))"}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19517", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19517/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19517/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19517/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/19517", "id": 325956927, "node_id": "MDU6SXNzdWUzMjU5NTY5Mjc=", "number": 19517, "title": "Support on TPU for tf.contrib.framework.sort", "user": {"login": "1vn", "id": 7690074, "node_id": "MDQ6VXNlcjc2OTAwNzQ=", "avatar_url": "https://avatars0.githubusercontent.com/u/7690074?v=4", "gravatar_id": "", "url": "https://api.github.com/users/1vn", "html_url": "https://github.com/1vn", "followers_url": "https://api.github.com/users/1vn/followers", "following_url": "https://api.github.com/users/1vn/following{/other_user}", "gists_url": "https://api.github.com/users/1vn/gists{/gist_id}", "starred_url": "https://api.github.com/users/1vn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/1vn/subscriptions", "organizations_url": "https://api.github.com/users/1vn/orgs", "repos_url": "https://api.github.com/users/1vn/repos", "events_url": "https://api.github.com/users/1vn/events{/privacy}", "received_events_url": "https://api.github.com/users/1vn/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1097541661, "node_id": "MDU6TGFiZWwxMDk3NTQxNjYx", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/comp:tpus", "name": "comp:tpus", "color": "0052cc", "default": false, "description": "tpu, tpuestimator"}, {"id": 404586594, "node_id": "MDU6TGFiZWw0MDQ1ODY1OTQ=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:awaiting%20tensorflower", "name": "stat:awaiting tensorflower", "color": "f4b400", "default": false, "description": ""}, {"id": 473172988, "node_id": "MDU6TGFiZWw0NzMxNzI5ODg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:bug", "name": "type:bug", "color": "159b2e", "default": false, "description": ""}], "state": "open", "locked": false, "assignee": {"login": "jhseu", "id": 170179, "node_id": "MDQ6VXNlcjE3MDE3OQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/170179?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jhseu", "html_url": "https://github.com/jhseu", "followers_url": "https://api.github.com/users/jhseu/followers", "following_url": "https://api.github.com/users/jhseu/following{/other_user}", "gists_url": "https://api.github.com/users/jhseu/gists{/gist_id}", "starred_url": "https://api.github.com/users/jhseu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jhseu/subscriptions", "organizations_url": "https://api.github.com/users/jhseu/orgs", "repos_url": "https://api.github.com/users/jhseu/repos", "events_url": "https://api.github.com/users/jhseu/events{/privacy}", "received_events_url": "https://api.github.com/users/jhseu/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "jhseu", "id": 170179, "node_id": "MDQ6VXNlcjE3MDE3OQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/170179?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jhseu", "html_url": "https://github.com/jhseu", "followers_url": "https://api.github.com/users/jhseu/followers", "following_url": "https://api.github.com/users/jhseu/following{/other_user}", "gists_url": "https://api.github.com/users/jhseu/gists{/gist_id}", "starred_url": "https://api.github.com/users/jhseu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jhseu/subscriptions", "organizations_url": "https://api.github.com/users/jhseu/orgs", "repos_url": "https://api.github.com/users/jhseu/repos", "events_url": "https://api.github.com/users/jhseu/events{/privacy}", "received_events_url": "https://api.github.com/users/jhseu/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 2, "created_at": "2018-05-24T04:08:11Z", "updated_at": "2019-01-09T22:01:28Z", "closed_at": null, "author_association": "CONTRIBUTOR", "body": "We tried to train with TPU on our model which needs to sort a tensor along an axis. Using  tf.contrib.framework.sort results in the following error:\r\n```\r\nNotFoundError (see above for traceback): No registered 'TopKV2' OpKernel for XLA_TPU_JIT devices compatible with node TPUReplicate/loop/resnet/unit_2_4/sub1/conv1/sort/TopKV2 = TopKV2[T=DT_FLOAT, sorted=true, _device=\"/device:TPU_REPLICATED_CORE\"](TPUReplicate/loop/resnet/unit_2_4/sub1/conv1/sort/transpose, TPUReplicate/loop/resnet/unit_2_4/sub1/conv1/sort/strided_slice)\r\n```\r\n\r\nAre there any alternatives? \r\n\r\nHave I written custom code: N/A\r\nOS Platform and Distribution: ubuntu\r\nTensorFlow installed from: official\r\nTensorFlow version: N/A\r\nBazel version: N/A\r\nCUDA/cuDNN version: N/A\r\nGPU model and memory: TPU on gcloud\r\nExact command to reproduce: any training script using tf.contrib.framework.sort"}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19491", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19491/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19491/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19491/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/19491", "id": 325590125, "node_id": "MDU6SXNzdWUzMjU1OTAxMjU=", "number": 19491, "title": "Performance problem with TensorFlow training", "user": {"login": "fcacarminati", "id": 4223137, "node_id": "MDQ6VXNlcjQyMjMxMzc=", "avatar_url": "https://avatars3.githubusercontent.com/u/4223137?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fcacarminati", "html_url": "https://github.com/fcacarminati", "followers_url": "https://api.github.com/users/fcacarminati/followers", "following_url": "https://api.github.com/users/fcacarminati/following{/other_user}", "gists_url": "https://api.github.com/users/fcacarminati/gists{/gist_id}", "starred_url": "https://api.github.com/users/fcacarminati/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fcacarminati/subscriptions", "organizations_url": "https://api.github.com/users/fcacarminati/orgs", "repos_url": "https://api.github.com/users/fcacarminati/repos", "events_url": "https://api.github.com/users/fcacarminati/events{/privacy}", "received_events_url": "https://api.github.com/users/fcacarminati/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 969831806, "node_id": "MDU6TGFiZWw5Njk4MzE4MDY=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/WIP", "name": "WIP", "color": "f4c77f", "default": false, "description": ""}, {"id": 473172988, "node_id": "MDU6TGFiZWw0NzMxNzI5ODg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:bug", "name": "type:bug", "color": "159b2e", "default": false, "description": ""}], "state": "open", "locked": false, "assignee": {"login": "tatianashp", "id": 986732, "node_id": "MDQ6VXNlcjk4NjczMg==", "avatar_url": "https://avatars2.githubusercontent.com/u/986732?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tatianashp", "html_url": "https://github.com/tatianashp", "followers_url": "https://api.github.com/users/tatianashp/followers", "following_url": "https://api.github.com/users/tatianashp/following{/other_user}", "gists_url": "https://api.github.com/users/tatianashp/gists{/gist_id}", "starred_url": "https://api.github.com/users/tatianashp/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tatianashp/subscriptions", "organizations_url": "https://api.github.com/users/tatianashp/orgs", "repos_url": "https://api.github.com/users/tatianashp/repos", "events_url": "https://api.github.com/users/tatianashp/events{/privacy}", "received_events_url": "https://api.github.com/users/tatianashp/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "tatianashp", "id": 986732, "node_id": "MDQ6VXNlcjk4NjczMg==", "avatar_url": "https://avatars2.githubusercontent.com/u/986732?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tatianashp", "html_url": "https://github.com/tatianashp", "followers_url": "https://api.github.com/users/tatianashp/followers", "following_url": "https://api.github.com/users/tatianashp/following{/other_user}", "gists_url": "https://api.github.com/users/tatianashp/gists{/gist_id}", "starred_url": "https://api.github.com/users/tatianashp/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tatianashp/subscriptions", "organizations_url": "https://api.github.com/users/tatianashp/orgs", "repos_url": "https://api.github.com/users/tatianashp/repos", "events_url": "https://api.github.com/users/tatianashp/events{/privacy}", "received_events_url": "https://api.github.com/users/tatianashp/received_events", "type": "User", "site_admin": false}, {"login": "ezhulenev", "id": 1174378, "node_id": "MDQ6VXNlcjExNzQzNzg=", "avatar_url": "https://avatars2.githubusercontent.com/u/1174378?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ezhulenev", "html_url": "https://github.com/ezhulenev", "followers_url": "https://api.github.com/users/ezhulenev/followers", "following_url": "https://api.github.com/users/ezhulenev/following{/other_user}", "gists_url": "https://api.github.com/users/ezhulenev/gists{/gist_id}", "starred_url": "https://api.github.com/users/ezhulenev/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ezhulenev/subscriptions", "organizations_url": "https://api.github.com/users/ezhulenev/orgs", "repos_url": "https://api.github.com/users/ezhulenev/repos", "events_url": "https://api.github.com/users/ezhulenev/events{/privacy}", "received_events_url": "https://api.github.com/users/ezhulenev/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 23, "created_at": "2018-05-23T07:56:21Z", "updated_at": "2018-12-19T18:46:01Z", "closed_at": null, "author_association": "NONE", "body": "Hello,\r\n    We are running a not-very-complex 3D convolution problem had we have extremely poor performance. Here is the summary of our problem\r\n\r\nNow the technical part.\r\n\r\nI am running on an Haswell CPU in a Mac OS running High Sierra. \r\n\r\nModel Name:\tMacBook Pro\r\nModel Identifier:\tMacBookPro11,5\r\nProcessor Name:\tIntel Core i7\r\nProcessor Speed:\t2.5 GHz\r\nNumber of Processors:\t1\r\nTotal Number of Cores:\t4\r\nL2 Cache (per Core):\t256 KB\r\nL3 Cache:\t6 MB\r\nMemory:\t16 GB\r\n\r\n\r\nTensorflow performance\r\n---------------------------------\r\n\r\n1.) Memory allocation\r\n\r\nMemory allocation seems highly unoptimized. I see an allocation of ~80GB (78M allocations) out of which we are left with 37GB persistent (corresponding to 575k permanent allocations). The memory churn is enormous and this may affect very seriously performance. Most of those are very small allocation / deallocation which happen here\r\n\r\nEigen::NonBlockingThreadPoolTempl<tensorflow::thread::EigenEnvironment>::Schedule(std::__1::function<void ()>)\r\n\r\nI have tried to run with tcmalloc from google hoping to improve memory allocation and handling. tcmalloc complains that there are the following \u201clarge allocation\u201d from TF even before starting the epochs: (23+23+2+18+4+9+2) = 81GB of allocation even before starting the epoch\u2019s. After that my disk is full of swap files and my machine dies.\r\n\r\nThen I went back running with the Mac allocator, which surprisingly seems to be more robust. \r\n\r\n2.) Code performance\r\n\r\nA careful VTune analysis performed by Sofia has identified Eigen as the major source of CPU consumption.  All the time is wasted simply in repacking (gemm_pack_rhs).\r\n\r\nTo look at the code I attempted to compile with -g, however the default compilation is with -g0 and I could not find yet a way to replace this default on bazel. I added -g3 that, according to the manual (and to a small test I have made) should override -g0. However the Mac Instrument (a poor relation of VTune on Mac) could not find out the source. The library should be _pywrap_tensorflow_internal.so. Then I went looking for the source and I found that gemm_pack_rhs::operator() is defined in the following files\r\n\r\n./bazel-tensorflow/external/eigen_archive/Eigen/src/Core/products/GeneralBlockPanelKernel.h\r\n./bazel-tensorflow/third_party/eigen3/unsupported/Eigen/CXX11/src/FixedPoint/MatMatProductAVX2.h\r\n./third_party/eigen3/unsupported/Eigen/CXX11/src/FixedPoint/MatMatProductAVX2.h\r\n\r\nThe last two are identical. Putting good old printf\u2019s I discovered we are calling the GeneralBlockPanelKernel.h version. The operator works with packets of size 8, which is fine for AVX2 (256) and float32 as we are using. However I am not sure that the compiler manages to vectorize this procedure. Indeed, most of the time is spent in line 559 of eigen_volume_patch.h. \r\n\r\n   for (int i = 0; i < PacketSize; ++i) {\r\n      values[i] = coeff(index + i);\r\n    }\r\n\r\nThe packet structure of the code is meant to have each packet treated as a unit. This for loop simply destroys all possibility of optimisation. There is a lot of room for optimisation in tensorflow before we get really serious about performance with a problem like ours. But who is going to pick up the tab? \r\n\r\n3.) MKL or not MKL. \r\n\r\nWhen bringing up this problem, I have been answered that tensorflow in Mac does not support the usage of MKL, and therefore, till then, my findings were not entirely relevant. MKL for Mac exists, however clang does not support OMP (or rather the default version of clang distributed with Mac does not have OMP support enabled). So the only way to compile tensorflow on the Mac with MKL was to change compiler. \r\n\r\nUnfortunately changing compiler with bazel on the Mac seems a very ambitious proposition. After posting to and perusing stackoverflow, bazel forum and tensorflow forum, I came to the following recipe\r\n\r\nexport BAZEL_USE_CPP_ONLY_TOOLCHAIN=1 \r\nexport CC=/path/to/compiler\r\nbazel build [\u2026]\r\n\r\ndoes indeed force Bazel to use a new compiler, however controlling the compiler switches is much more complicated. The two compiler flags -Wthread-safety and -Wself-assign, as well as the linker flag \u201c-no-as-needed\u201d and \u201c-z\u201d are incompatible with g++ linker. The CROSSTOOL.tpl are automatically generated during configuration. The only occurrences of (for instance) -Wself-assign in the TF code are in \r\n\r\nthird_party/gpus/crosstool/CROSSTOOL_nvcc.tpl\r\nthird_party/toolchains/clang6/CROSSTOOL.tpl\r\nthird_party/toolchains/cpus/arm/CROSSTOOL.tpl\r\n\r\nbut even if I comment the lines:\r\n\r\n-  compiler_flag: \"-Wthread-safety\"\r\n-  compiler_flag: \"-Wself-assign\"\r\n+#  compiler_flag: \"-Wthread-safety\"\r\n+#  compiler_flag: \"-Wself-assign\u201d\r\n\r\nin all three of them \u201csomething\u201d creates a CROSSTOOL.tpl with these flags in. The hack I am trying now is to configure and then edit the file\r\n\r\n./bazel-tensorflow/external/local_config_cc/cc_wrapper.sh\r\n\r\nadding the following line\r\n\r\n/sw/bin/gcc-fsf-7 `echo \"$@\" | sed -e 's/-Wself-assign//' | sed -e 's/-Wthread-safety//' | sed -e 's/-Wl,-no-as-needed//' | sed -e 's/-Wl,-z,relro,-z,now//\u2018`\r\n\r\nwhich is a very poor hack. \r\n\r\nWith this I could build a version of tensorflow using the Mac MKL, but to no avail. Performance is still abysmal with the same bottleneck. \r\n\r\nThanks for reading up to here..."}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19490", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19490/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19490/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19490/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/19490", "id": 325585664, "node_id": "MDU6SXNzdWUzMjU1ODU2NjQ=", "number": 19490, "title": "tensorflow cpu module's speed lower on windows than linux", "user": {"login": "marykid", "id": 39548266, "node_id": "MDQ6VXNlcjM5NTQ4MjY2", "avatar_url": "https://avatars0.githubusercontent.com/u/39548266?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marykid", "html_url": "https://github.com/marykid", "followers_url": "https://api.github.com/users/marykid/followers", "following_url": "https://api.github.com/users/marykid/following{/other_user}", "gists_url": "https://api.github.com/users/marykid/gists{/gist_id}", "starred_url": "https://api.github.com/users/marykid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marykid/subscriptions", "organizations_url": "https://api.github.com/users/marykid/orgs", "repos_url": "https://api.github.com/users/marykid/repos", "events_url": "https://api.github.com/users/marykid/events{/privacy}", "received_events_url": "https://api.github.com/users/marykid/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 404586558, "node_id": "MDU6TGFiZWw0MDQ1ODY1NTg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:community%20support", "name": "stat:community support", "color": "f4b400", "default": false, "description": ""}, {"id": 473172988, "node_id": "MDU6TGFiZWw0NzMxNzI5ODg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:bug", "name": "type:bug", "color": "159b2e", "default": false, "description": ""}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-05-23T07:41:50Z", "updated_at": "2018-06-26T20:16:14Z", "closed_at": null, "author_association": "NONE", "body": "System information\r\n- Have I written custom code (as opposed to using a stock example script provided in TensorFlow):yes\r\n- OS Platform and Distribution (e.g., Linux Ubuntu 16.04):windows7 64bit and ubuntu 16.04 64bit\r\n- TensorFlow installed from (source or binary):build tensorflow source to shared lib\r\n- TensorFlow version (use command below):tensorflow v1.3.0\r\n- Python version: 3.5\r\n- Bazel version (if compiling from source):N/A\r\n- GCC/Compiler version (if compiling from source):N/A\r\n- CUDA/cuDNN version:N/A\r\n- GPU model and memory:N/A\r\n- Exact command to reproduce:N/A\r\n\r\nDescribe the problem\r\nTraining tensorflow module and detect faces both on windows7 and ubuntu 16.04, but it costs about twice time on windows7 than ubuntu16.04. So we want to know this issue is normal or not? And if it is normal, what's the reason?\r\nwindows7 PC environment:\r\nCPU: Intel Core i3 2120\r\ntime: 80~160 ms\r\n\r\nubuntu16.04 PC environment:\r\nCPU: Intel(R) Core(TM) i3-3220 CPU@3.30GHz\r\ntime: 40~100 ms\r\n"}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19478", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19478/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19478/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19478/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/19478", "id": 325454613, "node_id": "MDU6SXNzdWUzMjU0NTQ2MTM=", "number": 19478, "title": "Does eager execution allow dynamic batching like Tensorflow fold?", "user": {"login": "ixime", "id": 25181125, "node_id": "MDQ6VXNlcjI1MTgxMTI1", "avatar_url": "https://avatars2.githubusercontent.com/u/25181125?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ixime", "html_url": "https://github.com/ixime", "followers_url": "https://api.github.com/users/ixime/followers", "following_url": "https://api.github.com/users/ixime/following{/other_user}", "gists_url": "https://api.github.com/users/ixime/gists{/gist_id}", "starred_url": "https://api.github.com/users/ixime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ixime/subscriptions", "organizations_url": "https://api.github.com/users/ixime/orgs", "repos_url": "https://api.github.com/users/ixime/repos", "events_url": "https://api.github.com/users/ixime/events{/privacy}", "received_events_url": "https://api.github.com/users/ixime/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": {"login": "shivaniag", "id": 16565716, "node_id": "MDQ6VXNlcjE2NTY1NzE2", "avatar_url": "https://avatars1.githubusercontent.com/u/16565716?v=4", "gravatar_id": "", "url": "https://api.github.com/users/shivaniag", "html_url": "https://github.com/shivaniag", "followers_url": "https://api.github.com/users/shivaniag/followers", "following_url": "https://api.github.com/users/shivaniag/following{/other_user}", "gists_url": "https://api.github.com/users/shivaniag/gists{/gist_id}", "starred_url": "https://api.github.com/users/shivaniag/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/shivaniag/subscriptions", "organizations_url": "https://api.github.com/users/shivaniag/orgs", "repos_url": "https://api.github.com/users/shivaniag/repos", "events_url": "https://api.github.com/users/shivaniag/events{/privacy}", "received_events_url": "https://api.github.com/users/shivaniag/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "shivaniag", "id": 16565716, "node_id": "MDQ6VXNlcjE2NTY1NzE2", "avatar_url": "https://avatars1.githubusercontent.com/u/16565716?v=4", "gravatar_id": "", "url": "https://api.github.com/users/shivaniag", "html_url": "https://github.com/shivaniag", "followers_url": "https://api.github.com/users/shivaniag/followers", "following_url": "https://api.github.com/users/shivaniag/following{/other_user}", "gists_url": "https://api.github.com/users/shivaniag/gists{/gist_id}", "starred_url": "https://api.github.com/users/shivaniag/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/shivaniag/subscriptions", "organizations_url": "https://api.github.com/users/shivaniag/orgs", "repos_url": "https://api.github.com/users/shivaniag/repos", "events_url": "https://api.github.com/users/shivaniag/events{/privacy}", "received_events_url": "https://api.github.com/users/shivaniag/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 2, "created_at": "2018-05-22T20:40:03Z", "updated_at": "2018-12-14T18:53:54Z", "closed_at": null, "author_association": "NONE", "body": "Tensorflow fold has no updates since months and as far as I know it only works with Tensorflow v1.0.\r\nDoes anybody know if eager execution in newer Tensorflow versions supports dynamic batching like Tensorflow fold? If not, is it likely that future versions would support it?\r\nThanks for any answer!\r\n \r\n### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**:N/A\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**: Linux Ubuntu 16.04\r\n- **TensorFlow installed from (source or binary)**: N/A\r\n- **TensorFlow version (use command below)**: from 1.4 to the latest\r\n- **Python version**: 3.5\r\n- **Bazel version (if compiling from source)**: N/A\r\n- **GCC/Compiler version (if compiling from source)**: N/A\r\n- **CUDA/cuDNN version**: N/A\r\n- **GPU model and memory**: N/A\r\n- **Exact command to reproduce**: N/A\r\n"}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19473", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19473/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19473/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19473/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/19473", "id": 325423892, "node_id": "MDU6SXNzdWUzMjU0MjM4OTI=", "number": 19473, "title": "Random initialization of a GPU variable with more than INT32_MAX elements crashes with CUDA_ERROR_ILLEGAL_ADDRESS", "user": {"login": "cbcase", "id": 238403, "node_id": "MDQ6VXNlcjIzODQwMw==", "avatar_url": "https://avatars1.githubusercontent.com/u/238403?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cbcase", "html_url": "https://github.com/cbcase", "followers_url": "https://api.github.com/users/cbcase/followers", "following_url": "https://api.github.com/users/cbcase/following{/other_user}", "gists_url": "https://api.github.com/users/cbcase/gists{/gist_id}", "starred_url": "https://api.github.com/users/cbcase/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cbcase/subscriptions", "organizations_url": "https://api.github.com/users/cbcase/orgs", "repos_url": "https://api.github.com/users/cbcase/repos", "events_url": "https://api.github.com/users/cbcase/events{/privacy}", "received_events_url": "https://api.github.com/users/cbcase/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 404586594, "node_id": "MDU6TGFiZWw0MDQ1ODY1OTQ=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:awaiting%20tensorflower", "name": "stat:awaiting tensorflower", "color": "f4b400", "default": false, "description": ""}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-05-22T19:03:07Z", "updated_at": "2020-02-08T01:15:09Z", "closed_at": null, "author_association": "NONE", "body": "### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**: yes\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**: Linux Ubuntu 16.04\r\n- **TensorFlow installed from (source or binary)**: Binary\r\n- **TensorFlow version (use command below)**: 1.8.0\r\n- **Python version**: 3.5.2\r\n- **CUDA/cuDNN version**: 9.0\r\n- **GPU model and memory**: V100\r\n- **Bazel version**: N/A\r\n- **Exact command to reproduce**: see below\r\n\r\n### Describe the problem\r\nRandom initialization of a GPU variable with more than INT32_MAX elements crashes with CUDA_ERROR_ILLEGAL_ADDRESS.\r\n\r\n### Source code / logs\r\nThe following code runs with no problem (ran into this with large embedding tables):\r\n```python\r\nimport tensorflow as tf\r\nn = 13417676\r\nh = 160\r\nx = tf.get_variable('x', [n, h])\r\nwith tf.Session() as sess:\r\n    sess.run(tf.global_variables_initializer())\r\n```\r\nThe following code crashes with CUDA_ERROR_ILLEGAL_ACCESS:\r\n```python\r\nimport tensorflow as tf\r\nn = 13417677 # increased by 1\r\nh = 160\r\nx = tf.get_variable('x', [n, h])\r\nwith tf.Session() as sess:\r\n    sess.run(tf.global_variables_initializer())\r\n```\r\n\r\nRunning with `cuda-memcheck` reports the following:\r\n```\r\n========= Invalid __global__ write of size 16\r\n=========     at 0x00000850 in void tensorflow::functor::FillPhiloxRandomKernelLaunch<tensorflow::random::UniformDistribution<tensorflow::random::PhiloxRandom, float>>(tensorflow::random::PhiloxRandom, tensorflow::random::PhiloxRandomResultElementType*, __int64, tensorflow::functor::FillPhiloxRandomKernelLaunch<tensorflow::random::UniformDistribution<tensorflow::random::PhiloxRandom, float>>)\r\n=========     by thread (1023,0,0) in block (127,0,0)\r\n=========     Address 0x7f7e3c6806f0 is out of bounds\r\n```\r\n\r\nChecking the source code, the following looks suspicious to me: https://github.com/tensorflow/tensorflow/blob/982549ea3423df4270ff154e5c764beb43d472da/tensorflow/core/kernels/random_op_gpu.cu.cc#L136\r\n\r\nThe `int32 offset` variable is later used to index into the output array -- and I believe it can overflow and generate an illegal negative index."}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19457", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19457/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19457/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19457/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/19457", "id": 325222234, "node_id": "MDU6SXNzdWUzMjUyMjIyMzQ=", "number": 19457, "title": "Slot variables used in an optimizer must have the same shape with the variable to be optimized?", "user": {"login": "jackonan", "id": 9108860, "node_id": "MDQ6VXNlcjkxMDg4NjA=", "avatar_url": "https://avatars3.githubusercontent.com/u/9108860?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jackonan", "html_url": "https://github.com/jackonan", "followers_url": "https://api.github.com/users/jackonan/followers", "following_url": "https://api.github.com/users/jackonan/following{/other_user}", "gists_url": "https://api.github.com/users/jackonan/gists{/gist_id}", "starred_url": "https://api.github.com/users/jackonan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jackonan/subscriptions", "organizations_url": "https://api.github.com/users/jackonan/orgs", "repos_url": "https://api.github.com/users/jackonan/repos", "events_url": "https://api.github.com/users/jackonan/events{/privacy}", "received_events_url": "https://api.github.com/users/jackonan/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": {"login": "allenlavoie", "id": 3731025, "node_id": "MDQ6VXNlcjM3MzEwMjU=", "avatar_url": "https://avatars3.githubusercontent.com/u/3731025?v=4", "gravatar_id": "", "url": "https://api.github.com/users/allenlavoie", "html_url": "https://github.com/allenlavoie", "followers_url": "https://api.github.com/users/allenlavoie/followers", "following_url": "https://api.github.com/users/allenlavoie/following{/other_user}", "gists_url": "https://api.github.com/users/allenlavoie/gists{/gist_id}", "starred_url": "https://api.github.com/users/allenlavoie/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/allenlavoie/subscriptions", "organizations_url": "https://api.github.com/users/allenlavoie/orgs", "repos_url": "https://api.github.com/users/allenlavoie/repos", "events_url": "https://api.github.com/users/allenlavoie/events{/privacy}", "received_events_url": "https://api.github.com/users/allenlavoie/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "allenlavoie", "id": 3731025, "node_id": "MDQ6VXNlcjM3MzEwMjU=", "avatar_url": "https://avatars3.githubusercontent.com/u/3731025?v=4", "gravatar_id": "", "url": "https://api.github.com/users/allenlavoie", "html_url": "https://github.com/allenlavoie", "followers_url": "https://api.github.com/users/allenlavoie/followers", "following_url": "https://api.github.com/users/allenlavoie/following{/other_user}", "gists_url": "https://api.github.com/users/allenlavoie/gists{/gist_id}", "starred_url": "https://api.github.com/users/allenlavoie/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/allenlavoie/subscriptions", "organizations_url": "https://api.github.com/users/allenlavoie/orgs", "repos_url": "https://api.github.com/users/allenlavoie/repos", "events_url": "https://api.github.com/users/allenlavoie/events{/privacy}", "received_events_url": "https://api.github.com/users/allenlavoie/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 11, "created_at": "2018-05-22T09:57:50Z", "updated_at": "2018-12-14T18:53:46Z", "closed_at": null, "author_association": "CONTRIBUTOR", "body": "Please go to Stack Overflow for help and support:\r\n\r\nhttps://stackoverflow.com/questions/tagged/tensorflow\r\n\r\nIf you open a GitHub issue, here is our policy:\r\n\r\n1. It must be a bug, a feature request, or a significant problem with documentation (for small docs fixes please send a PR instead).\r\n2. The form below must be filled out.\r\n3. It shouldn't be a TensorBoard issue. Those go [here](https://github.com/tensorflow/tensorboard/issues).\r\n\r\n**Here's why we have that policy**: TensorFlow developers respond to issues. We want to focus on work that benefits the whole community, e.g., fixing bugs and adding features. Support only helps individuals. GitHub also notifies thousands of people when issues are filed. We want them to see you communicating an interesting problem, rather than being redirected to Stack Overflow.\r\n\r\n------------------------\r\n\r\n### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**: Yes\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**: Linux Ubuntu, MacOS\r\n- **TensorFlow installed from (source or binary)**: source\r\n- **TensorFlow version (use command below)**: 1.4\r\n- **Python version**:  2.7.5\r\n- **Bazel version (if compiling from source)**: 0.9.0\r\n- **GCC/Compiler version (if compiling from source)**: 4.8.5\r\n- **CUDA/cuDNN version**: 8\r\n- **GPU model and memory**: CPU\r\n- **Exact command to reproduce**: When a optimizer is created.\r\n\r\n### Describe the problem\r\n\r\nI write a new optimizer to try some strategies for gradients apply. Some slots are used in the implementation. But I find that slots must have the same shape with the variables to be optimized. Otherwise, an error will be thrown out with message \"shape not match\" when I try to save model.\r\n\r\nThe problem happens in version 1.4. I try the same code in version 1.2, it works correctly.\r\n\r\nSo I want to figure out the reason.\r\n\r\n### Source code / logs\r\n \r\n```python\r\n 1 def _create_slots(self, var_list):\r\n 2   for v in var_list:\r\n 3     with ops.colocate_with(v):\r\n 4       dtype = v.dtype.base_dtype\r\n 5       v_shape = v.get_shape()\r\n 6       if v_shape.is_fully_defined():\r\n 7         init = init_ops.constant_initializer(self._initial_accumulator_value, dtype=dtype)\r\n 8       else:                                  \r\n 9         init_constant = gen_array_ops.fill(array_ops.shape(v), self._initial_accumulator_value)\r\n10         init = math_ops.cast(init_constant, dtype)\r\n11 \r\n12     self._get_or_make_slot_with_initializer(\r\n13        v, init, v_shape, dtype, \"accumulator\", self._name)\r\n14     self._get_or_make_slot_with_initializer(\r\n15        v, init_ops.zeros_initializer(self._global_step.dtype),-\r\n16        v_shape, self._global_step.dtype, \"accumulator_decay_power\", self._name)\r\n```\r\n\r\nIn line 16, if I change 'v_shape' with other value, an error will be got. For example, v_shape=[512, 256], but only [512] is needed to create this slot. \r\n"}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19455", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19455/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19455/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19455/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/19455", "id": 325174013, "node_id": "MDU6SXNzdWUzMjUxNzQwMTM=", "number": 19455, "title": "CuDNN error while fitting CNN ", "user": {"login": "alenashilina", "id": 18195604, "node_id": "MDQ6VXNlcjE4MTk1NjA0", "avatar_url": "https://avatars1.githubusercontent.com/u/18195604?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alenashilina", "html_url": "https://github.com/alenashilina", "followers_url": "https://api.github.com/users/alenashilina/followers", "following_url": "https://api.github.com/users/alenashilina/following{/other_user}", "gists_url": "https://api.github.com/users/alenashilina/gists{/gist_id}", "starred_url": "https://api.github.com/users/alenashilina/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alenashilina/subscriptions", "organizations_url": "https://api.github.com/users/alenashilina/orgs", "repos_url": "https://api.github.com/users/alenashilina/repos", "events_url": "https://api.github.com/users/alenashilina/events{/privacy}", "received_events_url": "https://api.github.com/users/alenashilina/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-05-22T07:37:40Z", "updated_at": "2020-02-08T01:15:14Z", "closed_at": null, "author_association": "NONE", "body": "OS: Windows 10 64bit\r\nTensorFlow GPU: 1.5.0 (installed with pip)\r\nPython Version: 3.6.4\r\nIDE : Spyder 3.2.6\r\nCUDA: v9.0\r\nCuDNN: v7.0.5 for CUDA 9.0\r\nGPU: GeForce GTX 960M 4GB\r\nNVIDIA drivers: 397.64\r\n\r\n\r\nSo, I was trying to run some CNN (and also CapsNet where the first layer is just a convolution layer). And it keeps crushing with the error below. From what I found on the internet I decided to reinstall cuda and cudnn. And the code with CNN worked. Though capsnet still didn't. I googled more and found out that cuda reset your drivers after installation, so, I needed to update my drivers. I had something like 380 or 384. Don't remember exactly. I installed 397. And now they both don't work again. I'm desperate. I don't know what to do anymore.\r\nThe CNN code works fine on CPU though.\r\n\r\nError given by CNN code:\r\n\r\n` 2018\udae1\udea9\udae1\udeba 15:50:40.136802: I C:\\tf_jenkins\\workspace\\rel\u2011win\\M\\windows\u2011gpu\\PY\\36\\tensorflow\\core\\platform\\cpu_feature_guard.cc:137] Your CPU supports instructions that this TensorFlow binary was not compiled to use: AVX AVX2\r\n2018\udae1\udea9\udae1\udeba 15:50:40.925004: I C:\\tf_jenkins\\workspace\\rel\u2011win\\M\\windows\u2011gpu\\PY\\36\\tensorflow\\core\\common_runtime\\gpu\\gpu_device.cc:1105] Found device 0 with properties: \r\nname: GeForce GTX 960M major: 5 minor: 0 memoryClockRate(GHz): 1.176\r\npciBusID: 0000:01:00.0\r\ntotalMemory: 4.00GiB freeMemory: 3.34GiB\r\n2018\udae1\udea9\udae1\udeba 15:50:40.930269: I C:\\tf_jenkins\\workspace\\rel\u2011win\\M\\windows\u2011gpu\\PY\\36\\tensorflow\\core\\common_runtime\\gpu\\gpu_device.cc:1195] Creating TensorFlow device (/device:GPU:0) \u2011> (device: 0, name: GeForce GTX 960M, pci bus id: 0000:01:00.0, compute capability: 5.0)\r\n2018\udae1\udea9\udae1\udeba 15:50:47.834229: E C:\\tf_jenkins\\workspace\\rel\u2011win\\M\\windows\u2011gpu\\PY\\36\\tensorflow\\stream_executor\\cuda\\cuda_blas.cc:444] failed to create cublas handle: CUBLAS_STATUS_ALLOC_FAILED\r\n2018\udae1\udea9\udae1\udeba 15:50:47.866263: E C:\\tf_jenkins\\workspace\\rel\u2011win\\M\\windows\u2011gpu\\PY\\36\\tensorflow\\stream_executor\\cuda\\cuda_blas.cc:444] failed to create cublas handle: CUBLAS_STATUS_ALLOC_FAILED\r\n2018\udae1\udea9\udae1\udeba 15:50:47.905931: E C:\\tf_jenkins\\workspace\\rel\u2011win\\M\\windows\u2011gpu\\PY\\36\\tensorflow\\stream_executor\\cuda\\cuda_blas.cc:444] failed to create cublas handle: CUBLAS_STATUS_ALLOC_FAILED\r\n2018\udae1\udea9\udae1\udeba 15:50:47.907669: E C:\\tf_jenkins\\workspace\\rel\u2011win\\M\\windows\u2011gpu\\PY\\36\\tensorflow\\stream_executor\\cuda\\cuda_blas.cc:444] failed to create cublas handle: CUBLAS_STATUS_ALLOC_FAILED\r\n2018\udae1\udea9\udae1\udeba 15:50:47.909351: E C:\\tf_jenkins\\workspace\\rel\u2011win\\M\\windows\u2011gpu\\PY\\36\\tensorflow\\stream_executor\\cuda\\cuda_blas.cc:444] failed to create cublas handle: CUBLAS_STATUS_ALLOC_FAILED\r\n2018\udae1\udea9\udae1\udeba 15:50:47.911059: E C:\\tf_jenkins\\workspace\\rel\u2011win\\M\\windows\u2011gpu\\PY\\36\\tensorflow\\stream_executor\\cuda\\cuda_blas.cc:444] failed to create cublas handle: CUBLAS_STATUS_ALLOC_FAILED\r\n2018\udae1\udea9\udae1\udeba 15:50:48.585303: E C:\\tf_jenkins\\workspace\\rel\u2011win\\M\\windows\u2011gpu\\PY\\36\\tensorflow\\stream_executor\\cuda\\cuda_dnn.cc:385] could not create cudnn handle: CUDNN_STATUS_INTERNAL_ERROR\r\n2018\udae1\udea9\udae1\udeba 15:50:48.586924: E C:\\tf_jenkins\\workspace\\rel\u2011win\\M\\windows\u2011gpu\\PY\\36\\tensorflow\\stream_executor\\cuda\\cuda_dnn.cc:352] could not destroy cudnn handle: CUDNN_STATUS_BAD_PARAM\r\n2018\udae1\udea9\udae1\udeba 15:50:48.588290: F C:\\tf_jenkins\\workspace\\rel\u2011win\\M\\windows\u2011gpu\\PY\\36\\tensorflow\\core\\kernels\\conv_ops.cc:717] Check failed: stream\u2011>parent()\u2011>GetConvolveAlgorithms( conv_parameters.ShouldIncludeWinogradNonfusedAlgo(), &algorithms) \r\n2018\udae1\udea9\udae1\udeba 15:53:45.749902: I C:\\tf_jenkins\\workspace\\rel\u2011win\\M\\windows\u2011gpu\\PY\\36\\tensorflow\\core\\platform\\cpu_feature_guard.cc:137] Your CPU supports instructions that this TensorFlow binary was not compiled to use: AVX AVX2\r\n2018\udae1\udea9\udae1\udeba 15:53:46.246273: I C:\\tf_jenkins\\workspace\\rel\u2011win\\M\\windows\u2011gpu\\PY\\36\\tensorflow\\core\\common_runtime\\gpu\\gpu_device.cc:1105] Found device 0 with properties: \r\nname: GeForce GTX 960M major: 5 minor: 0 memoryClockRate(GHz): 1.176\r\npciBusID: 0000:01:00.0\r\ntotalMemory: 4.00GiB freeMemory: 3.34GiB\r\n2018\udae1\udea9\udae1\udeba 15:53:46.248497: I C:\\tf_jenkins\\workspace\\rel\u2011win\\M\\windows\u2011gpu\\PY\\36\\tensorflow\\core\\common_runtime\\gpu\\gpu_device.cc:1195] Creating TensorFlow device (/device:GPU:0) \u2011> (device: 0, name: GeForce GTX 960M, pci bus id: 0000:01:00.0, compute capability: 5.0)\r\n2018\udae1\udea9\udae1\udeba 15:53:49.372376: E C:\\tf_jenkins\\workspace\\rel\u2011win\\M\\windows\u2011gpu\\PY\\36\\tensorflow\\stream_executor\\cuda\\cuda_blas.cc:444] failed to create cublas handle: CUBLAS_STATUS_ALLOC_FAILED\r\n2018\udae1\udea9\udae1\udeba 15:53:49.373772: E C:\\tf_jenkins\\workspace\\rel\u2011win\\M\\windows\u2011gpu\\PY\\36\\tensorflow\\stream_executor\\cuda\\cuda_blas.cc:444] failed to create cublas handle: CUBLAS_STATUS_ALLOC_FAILED\r\n2018\udae1\udea9\udae1\udeba 15:53:49.377767: E C:\\tf_jenkins\\workspace\\rel\u2011win\\M\\windows\u2011gpu\\PY\\36\\tensorflow\\stream_executor\\cuda\\cuda_blas.cc:444] failed to create cublas handle: CUBLAS_STATUS_ALLOC_FAILED\r\n2018\udae1\udea9\udae1\udeba 15:53:49.379147: E C:\\tf_jenkins\\workspace\\rel\u2011win\\M\\windows\u2011gpu\\PY\\36\\tensorflow\\stream_executor\\cuda\\cuda_blas.cc:444] failed to create cublas handle: CUBLAS_STATUS_ALLOC_FAILED\r\n2018\udae1\udea9\udae1\udeba 15:53:49.380568: E C:\\tf_jenkins\\workspace\\rel\u2011win\\M\\windows\u2011gpu\\PY\\36\\tensorflow\\stream_executor\\cuda\\cuda_blas.cc:444] failed to create cublas handle: CUBLAS_STATUS_ALLOC_FAILED\r\n2018\udae1\udea9\udae1\udeba 15:53:49.382145: E C:\\tf_jenkins\\workspace\\rel\u2011win\\M\\windows\u2011gpu\\PY\\36\\tensorflow\\stream_executor\\cuda\\cuda_blas.cc:444] failed to create cublas handle: CUBLAS_STATUS_ALLOC_FAILED\r\n2018\udae1\udea9\udae1\udeba 15:53:49.646183: E C:\\tf_jenkins\\workspace\\rel\u2011win\\M\\windows\u2011gpu\\PY\\36\\tensorflow\\stream_executor\\cuda\\cuda_dnn.cc:385] could not create cudnn handle: CUDNN_STATUS_INTERNAL_ERROR\r\n2018\udae1\udea9\udae1\udeba 15:53:49.647436: E C:\\tf_jenkins\\workspace\\rel\u2011win\\M\\windows\u2011gpu\\PY\\36\\tensorflow\\stream_executor\\cuda\\cuda_dnn.cc:352] could not destroy cudnn handle: CUDNN_STATUS_BAD_PARAM\r\n2018\udae1\udea9\udae1\udeba 15:53:49.648615: F C:\\tf_jenkins\\workspace\\rel\u2011win\\M\\windows\u2011gpu\\PY\\36\\tensorflow\\core\\kernels\\conv_ops.cc:717] Check failed: stream\u2011>parent()\u2011>GetConvolveAlgorithms( conv_parameters.ShouldIncludeWinogradNonfusedAlgo(), &algorithms) `\r\n\r\n\r\nPart of the error given by capsnet:\r\n\r\n` 2018\udae1\udea9\udae1\udeba 15:49:02.623151: W C:\\tf_jenkins\\workspace\\rel\u2011win\\M\\windows\u2011gpu\\PY\\36\\tensorflow\\core\\common_runtime\\bfc_allocator.cc:277] *****************************************___________________________________________________________\r\n2018\udae1\udea9\udae1\udeba 15:49:02.624700: W C:\\tf_jenkins\\workspace\\rel\u2011win\\M\\windows\u2011gpu\\PY\\36\\tensorflow\\core\\framework\\op_kernel.cc:1198] Resource exhausted: OOM when allocating tensor with shape[24,6,6,3,3,32,32,4,4,4] and type float on /job:localhost/replica:0/task:0/device:GPU:0 by allocator GPU_0_bfc\r\n2018\udae1\udea9\udae1\udeba 16:22:12.617066: I C:\\tf_jenkins\\workspace\\rel\u2011win\\M\\windows\u2011gpu\\PY\\36\\tensorflow\\core\\platform\\cpu_feature_guard.cc:137] Your CPU supports instructions that this TensorFlow binary was not compiled to use: AVX AVX2\r\n2018\udae1\udea9\udae1\udeba 16:22:13.091828: I C:\\tf_jenkins\\workspace\\rel\u2011win\\M\\windows\u2011gpu\\PY\\36\\tensorflow\\core\\common_runtime\\gpu\\gpu_device.cc:1105] Found device 0 with properties: \r\nname: GeForce GTX 960M major: 5 minor: 0 memoryClockRate(GHz): 1.176\r\npciBusID: 0000:01:00.0\r\ntotalMemory: 4.00GiB freeMemory: 3.34GiB\r\n2018\udae1\udea9\udae1\udeba 16:22:13.094135: I C:\\tf_jenkins\\workspace\\rel\u2011win\\M\\windows\u2011gpu\\PY\\36\\tensorflow\\core\\common_runtime\\gpu\\gpu_device.cc:1195] Creating TensorFlow device (/device:GPU:0) \u2011> (device: 0, name: GeForce GTX 960M, pci bus id: 0000:01:00.0, compute capability: 5.0)\r\n2018\udae1\udea9\udae1\udeba 16:23:36.501624: E C:\\tf_jenkins\\workspace\\rel\u2011win\\M\\windows\u2011gpu\\PY\\36\\tensorflow\\stream_executor\\cuda\\cuda_dnn.cc:385] could not create cudnn handle: CUDNN_STATUS_INTERNAL_ERROR\r\n2018\udae1\udea9\udae1\udeba 16:23:36.504510: E C:\\tf_jenkins\\workspace\\rel\u2011win\\M\\windows\u2011gpu\\PY\\36\\tensorflow\\stream_executor\\cuda\\cuda_dnn.cc:352] could not destroy cudnn handle: CUDNN_STATUS_BAD_PARAM\r\n2018\udae1\udea9\udae1\udeba 16:23:36.507233: F C:\\tf_jenkins\\workspace\\rel\u2011win\\M\\windows\u2011gpu\\PY\\36\\tensorflow\\core\\kernels\\conv_ops.cc:717] Check failed: stream\u2011>parent()\u2011>GetConvolveAlgorithms( conv_parameters.ShouldIncludeWinogradNonfusedAlgo(), &algorithms) `\r\n\r\n\r\n\r\n"}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19441", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19441/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19441/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19441/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/19441", "id": 325009202, "node_id": "MDU6SXNzdWUzMjUwMDkyMDI=", "number": 19441, "title": "Feature request: Generate java classes from .protos for java library", "user": {"login": "galv", "id": 4767568, "node_id": "MDQ6VXNlcjQ3Njc1Njg=", "avatar_url": "https://avatars0.githubusercontent.com/u/4767568?v=4", "gravatar_id": "", "url": "https://api.github.com/users/galv", "html_url": "https://github.com/galv", "followers_url": "https://api.github.com/users/galv/followers", "following_url": "https://api.github.com/users/galv/following{/other_user}", "gists_url": "https://api.github.com/users/galv/gists{/gist_id}", "starred_url": "https://api.github.com/users/galv/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/galv/subscriptions", "organizations_url": "https://api.github.com/users/galv/orgs", "repos_url": "https://api.github.com/users/galv/repos", "events_url": "https://api.github.com/users/galv/events{/privacy}", "received_events_url": "https://api.github.com/users/galv/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": {"login": "shivaniag", "id": 16565716, "node_id": "MDQ6VXNlcjE2NTY1NzE2", "avatar_url": "https://avatars1.githubusercontent.com/u/16565716?v=4", "gravatar_id": "", "url": "https://api.github.com/users/shivaniag", "html_url": "https://github.com/shivaniag", "followers_url": "https://api.github.com/users/shivaniag/followers", "following_url": "https://api.github.com/users/shivaniag/following{/other_user}", "gists_url": "https://api.github.com/users/shivaniag/gists{/gist_id}", "starred_url": "https://api.github.com/users/shivaniag/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/shivaniag/subscriptions", "organizations_url": "https://api.github.com/users/shivaniag/orgs", "repos_url": "https://api.github.com/users/shivaniag/repos", "events_url": "https://api.github.com/users/shivaniag/events{/privacy}", "received_events_url": "https://api.github.com/users/shivaniag/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "shivaniag", "id": 16565716, "node_id": "MDQ6VXNlcjE2NTY1NzE2", "avatar_url": "https://avatars1.githubusercontent.com/u/16565716?v=4", "gravatar_id": "", "url": "https://api.github.com/users/shivaniag", "html_url": "https://github.com/shivaniag", "followers_url": "https://api.github.com/users/shivaniag/followers", "following_url": "https://api.github.com/users/shivaniag/following{/other_user}", "gists_url": "https://api.github.com/users/shivaniag/gists{/gist_id}", "starred_url": "https://api.github.com/users/shivaniag/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/shivaniag/subscriptions", "organizations_url": "https://api.github.com/users/shivaniag/orgs", "repos_url": "https://api.github.com/users/shivaniag/repos", "events_url": "https://api.github.com/users/shivaniag/events{/privacy}", "received_events_url": "https://api.github.com/users/shivaniag/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 0, "created_at": "2018-05-21T18:11:58Z", "updated_at": "2018-12-07T18:51:21Z", "closed_at": null, "author_association": "NONE", "body": "### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**: No\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**: Ubuntu 16.04\r\n- **TensorFlow installed from (source or binary)**: Yes\r\n- **TensorFlow version (use command below)**: 1.8\r\n- **Python version**: 2.7\r\n- **Bazel version (if compiling from source)**: 0.11.1\r\n- **GCC/Compiler version (if compiling from source)**:\r\n- **CUDA/cuDNN version**: 5.3.1\r\n- **GPU model and memory**: N/A\r\n- **Exact command to reproduce**: N/A\r\n\r\n### Describe the problem\r\nIt would be nice to be able to handle protobufs within java as java classes, rather than byte arrays, as is currently done. Concretely, this would be useful because we could extract the input and output variable names from, e.g.: https://github.com/tensorflow/tensorflow/blob/master/tensorflow/core/protobuf/meta_graph.proto, instead of having to hard-code them in our java code, hoping that they python code which produced the MetaGraphDef hasn't changed the input or output names. I am sure there are other helpful things one could do with programmatic access to their protobufs.\r\n\r\nI don't see a better way to do this than to modify tensorflow's BUILD files to call the rule `java_proto_library` in [tf_proto_library](https://github.com/tensorflow/tensorflow/blob/master/tensorflow/core/platform/default/build_config.bzl). Since .proto files are not exported in the python wheel, or the java jar, end-users do not currently have the ability to generate their own files from the .proto files.\r\n\r\nI would be happy to do this if the maintainers think it is a reasonable request and don't consider it to be a burdensome thing to maintain.\r\n\r\n### Source code / logs\r\nN/A\r\n"}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19440", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19440/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19440/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19440/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/19440", "id": 324987181, "node_id": "MDU6SXNzdWUzMjQ5ODcxODE=", "number": 19440, "title": "Race codition during updating of checkpoint file on samba file share", "user": {"login": "AlexanderYukhanov", "id": 29782957, "node_id": "MDQ6VXNlcjI5NzgyOTU3", "avatar_url": "https://avatars2.githubusercontent.com/u/29782957?v=4", "gravatar_id": "", "url": "https://api.github.com/users/AlexanderYukhanov", "html_url": "https://github.com/AlexanderYukhanov", "followers_url": "https://api.github.com/users/AlexanderYukhanov/followers", "following_url": "https://api.github.com/users/AlexanderYukhanov/following{/other_user}", "gists_url": "https://api.github.com/users/AlexanderYukhanov/gists{/gist_id}", "starred_url": "https://api.github.com/users/AlexanderYukhanov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/AlexanderYukhanov/subscriptions", "organizations_url": "https://api.github.com/users/AlexanderYukhanov/orgs", "repos_url": "https://api.github.com/users/AlexanderYukhanov/repos", "events_url": "https://api.github.com/users/AlexanderYukhanov/events{/privacy}", "received_events_url": "https://api.github.com/users/AlexanderYukhanov/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 473184161, "node_id": "MDU6TGFiZWw0NzMxODQxNjE=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:support", "name": "type:support", "color": "159b2e", "default": false, "description": ""}], "state": "open", "locked": false, "assignee": {"login": "rohan100jain", "id": 144114, "node_id": "MDQ6VXNlcjE0NDExNA==", "avatar_url": "https://avatars2.githubusercontent.com/u/144114?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rohan100jain", "html_url": "https://github.com/rohan100jain", "followers_url": "https://api.github.com/users/rohan100jain/followers", "following_url": "https://api.github.com/users/rohan100jain/following{/other_user}", "gists_url": "https://api.github.com/users/rohan100jain/gists{/gist_id}", "starred_url": "https://api.github.com/users/rohan100jain/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rohan100jain/subscriptions", "organizations_url": "https://api.github.com/users/rohan100jain/orgs", "repos_url": "https://api.github.com/users/rohan100jain/repos", "events_url": "https://api.github.com/users/rohan100jain/events{/privacy}", "received_events_url": "https://api.github.com/users/rohan100jain/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "rohan100jain", "id": 144114, "node_id": "MDQ6VXNlcjE0NDExNA==", "avatar_url": "https://avatars2.githubusercontent.com/u/144114?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rohan100jain", "html_url": "https://github.com/rohan100jain", "followers_url": "https://api.github.com/users/rohan100jain/followers", "following_url": "https://api.github.com/users/rohan100jain/following{/other_user}", "gists_url": "https://api.github.com/users/rohan100jain/gists{/gist_id}", "starred_url": "https://api.github.com/users/rohan100jain/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rohan100jain/subscriptions", "organizations_url": "https://api.github.com/users/rohan100jain/orgs", "repos_url": "https://api.github.com/users/rohan100jain/repos", "events_url": "https://api.github.com/users/rohan100jain/events{/privacy}", "received_events_url": "https://api.github.com/users/rohan100jain/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 5, "created_at": "2018-05-21T16:55:45Z", "updated_at": "2018-12-20T18:47:20Z", "closed_at": null, "author_association": "NONE", "body": "Have I written custom code: No. Any code generating checkpoints on Azure File Share seems to be affected.\r\nOS Platform and Distribution: Ubuntu 16.04\r\nTensorFlow installed from: NA (doesn't matter)\r\nTensorFlow version: 1.6 (but seems to be the case for other versions as well)\r\nBazel version: NA\r\nCUDA/cuDNN version: 9.0 (doesn't matter)\r\nGPU model and memory: K80\r\nExact command to reproduce: launch long running training job which generates checkpoints on Azure File Share or just simulate race conditions in atomic_write_string_to_file when the target file is opened by other thread or process (see Describe the problem below).\r\n\r\n### Describe the problem\r\nI am observing a race condition while writing checkpoint file into Azure File Share directory - atomic_write_string_to_file sometimes (after multiple hours of training) crashes with \"Permission denied\" error. This race condition seems to be the same as being fixed by 3758878728710801f681afba39e145df4ddb8bf1. Unfortunately, this fix doesn't work on Azure file share (and, probably, on cifs in general) because of a fancy samba behavior - rename of a file fails if the target file is currently opened. Here is a simple repro for this behavior:\r\n\r\n    import os\r\n    f = open('target.txt', 'r')\r\n    os.rename('source.txt', 'target.txt')\r\n\r\n    Traceback (most recent call last):\r\n    PermissionError: [Errno 13] Permission denied: 'source.txt' -> 'target.txt'\r\n\r\n"}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19421", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19421/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19421/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19421/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/19421", "id": 324730823, "node_id": "MDU6SXNzdWUzMjQ3MzA4MjM=", "number": 19421, "title": "Feature Request:  128-bit floats", "user": {"login": "johnpjust", "id": 31108737, "node_id": "MDQ6VXNlcjMxMTA4NzM3", "avatar_url": "https://avatars3.githubusercontent.com/u/31108737?v=4", "gravatar_id": "", "url": "https://api.github.com/users/johnpjust", "html_url": "https://github.com/johnpjust", "followers_url": "https://api.github.com/users/johnpjust/followers", "following_url": "https://api.github.com/users/johnpjust/following{/other_user}", "gists_url": "https://api.github.com/users/johnpjust/gists{/gist_id}", "starred_url": "https://api.github.com/users/johnpjust/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/johnpjust/subscriptions", "organizations_url": "https://api.github.com/users/johnpjust/orgs", "repos_url": "https://api.github.com/users/johnpjust/repos", "events_url": "https://api.github.com/users/johnpjust/events{/privacy}", "received_events_url": "https://api.github.com/users/johnpjust/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": {"login": "tatatodd", "id": 5453737, "node_id": "MDQ6VXNlcjU0NTM3Mzc=", "avatar_url": "https://avatars3.githubusercontent.com/u/5453737?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tatatodd", "html_url": "https://github.com/tatatodd", "followers_url": "https://api.github.com/users/tatatodd/followers", "following_url": "https://api.github.com/users/tatatodd/following{/other_user}", "gists_url": "https://api.github.com/users/tatatodd/gists{/gist_id}", "starred_url": "https://api.github.com/users/tatatodd/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tatatodd/subscriptions", "organizations_url": "https://api.github.com/users/tatatodd/orgs", "repos_url": "https://api.github.com/users/tatatodd/repos", "events_url": "https://api.github.com/users/tatatodd/events{/privacy}", "received_events_url": "https://api.github.com/users/tatatodd/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "tatatodd", "id": 5453737, "node_id": "MDQ6VXNlcjU0NTM3Mzc=", "avatar_url": "https://avatars3.githubusercontent.com/u/5453737?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tatatodd", "html_url": "https://github.com/tatatodd", "followers_url": "https://api.github.com/users/tatatodd/followers", "following_url": "https://api.github.com/users/tatatodd/following{/other_user}", "gists_url": "https://api.github.com/users/tatatodd/gists{/gist_id}", "starred_url": "https://api.github.com/users/tatatodd/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tatatodd/subscriptions", "organizations_url": "https://api.github.com/users/tatatodd/orgs", "repos_url": "https://api.github.com/users/tatatodd/repos", "events_url": "https://api.github.com/users/tatatodd/events{/privacy}", "received_events_url": "https://api.github.com/users/tatatodd/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 2, "created_at": "2018-05-20T18:34:40Z", "updated_at": "2018-12-14T18:53:41Z", "closed_at": null, "author_association": "NONE", "body": "I have posted a question and answer on [SO](https://stackoverflow.com/questions/50438071/cost-function-convergence-in-tensorflow-using-softmax-cross-entropy-with-logits/50438072#50438072) showing why this is needed.  Admittedly it is probably not a common case, but I do research and the problems I deal with usually require creative solutions and so I'm generally pushing the boundaries of packages like Tensorflow (which is a wonderful package!).  I ran into this with soft-target classification.  \r\n\r\n> with soft targets, especially ones that aren't close to 1 or zero, cross entropy loss doesn't change significantly as the algorithm improves. Let's say the targets are [0.39019628, 0.44301641, 0.16678731]. Well, using the formula for cross entropy\r\n\r\n`cross_entropy = tf.reduce_mean(-tf.reduce_sum(y_ * tf.log(y), reduction_indices=[1]))`\r\n\r\n> but then using the targets \"y_\" in place of the predicted probabilities \"y\" we arrive at the true entropy value of 1.0266190072458234. If you're predictions are just slightly off of target....lets say they are [0.39511779, 0.44509024, 0.15979198], then the cross entropy is 1.026805558049737.\r\n\r\nBasically even with 64-bit floats, the loss function shows evidence that it would continue to train if further significant digits were available.  This is just to support the cost function during the training process since the final trained values would not need such precision, but to get to an optimal convergence I need it.\r\n\r\n\r\n"}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19407", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19407/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19407/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19407/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/19407", "id": 324567549, "node_id": "MDU6SXNzdWUzMjQ1Njc1NDk=", "number": 19407, "title": "Using estimators created by `tf.keras.estimator.model_to_estimator` in `tf.estimator.train_and_evaluate` causes a memory leak of sorts", "user": {"login": "zmjjmz", "id": 1694612, "node_id": "MDQ6VXNlcjE2OTQ2MTI=", "avatar_url": "https://avatars2.githubusercontent.com/u/1694612?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zmjjmz", "html_url": "https://github.com/zmjjmz", "followers_url": "https://api.github.com/users/zmjjmz/followers", "following_url": "https://api.github.com/users/zmjjmz/following{/other_user}", "gists_url": "https://api.github.com/users/zmjjmz/gists{/gist_id}", "starred_url": "https://api.github.com/users/zmjjmz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zmjjmz/subscriptions", "organizations_url": "https://api.github.com/users/zmjjmz/orgs", "repos_url": "https://api.github.com/users/zmjjmz/repos", "events_url": "https://api.github.com/users/zmjjmz/events{/privacy}", "received_events_url": "https://api.github.com/users/zmjjmz/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 404586594, "node_id": "MDU6TGFiZWw0MDQ1ODY1OTQ=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:awaiting%20tensorflower", "name": "stat:awaiting tensorflower", "color": "f4b400", "default": false, "description": ""}, {"id": 473172988, "node_id": "MDU6TGFiZWw0NzMxNzI5ODg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:bug", "name": "type:bug", "color": "159b2e", "default": false, "description": ""}], "state": "open", "locked": false, "assignee": {"login": "fchollet", "id": 710255, "node_id": "MDQ6VXNlcjcxMDI1NQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/710255?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fchollet", "html_url": "https://github.com/fchollet", "followers_url": "https://api.github.com/users/fchollet/followers", "following_url": "https://api.github.com/users/fchollet/following{/other_user}", "gists_url": "https://api.github.com/users/fchollet/gists{/gist_id}", "starred_url": "https://api.github.com/users/fchollet/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fchollet/subscriptions", "organizations_url": "https://api.github.com/users/fchollet/orgs", "repos_url": "https://api.github.com/users/fchollet/repos", "events_url": "https://api.github.com/users/fchollet/events{/privacy}", "received_events_url": "https://api.github.com/users/fchollet/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "fchollet", "id": 710255, "node_id": "MDQ6VXNlcjcxMDI1NQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/710255?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fchollet", "html_url": "https://github.com/fchollet", "followers_url": "https://api.github.com/users/fchollet/followers", "following_url": "https://api.github.com/users/fchollet/following{/other_user}", "gists_url": "https://api.github.com/users/fchollet/gists{/gist_id}", "starred_url": "https://api.github.com/users/fchollet/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fchollet/subscriptions", "organizations_url": "https://api.github.com/users/fchollet/orgs", "repos_url": "https://api.github.com/users/fchollet/repos", "events_url": "https://api.github.com/users/fchollet/events{/privacy}", "received_events_url": "https://api.github.com/users/fchollet/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 6, "created_at": "2018-05-18T22:17:38Z", "updated_at": "2019-08-06T06:42:13Z", "closed_at": null, "author_association": "NONE", "body": "### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**: Yes, see provided gist\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**: Debian Jessie\r\n- **TensorFlow installed from (source or binary)**: Binary\r\n- **TensorFlow version (use command below)**: ('v1.8.0-0-g93bc2e2072', '1.8.0')\r\n- **Python version**: 2.7.9\r\n- **Bazel version (if compiling from source)**: n/a\r\n- **GCC/Compiler version (if compiling from source)**: n/a\r\n- **CUDA/cuDNN version**: n/a\r\n- **GPU model and memory**: n/a\r\n- **Exact command to reproduce**: Run provided gist\r\n\r\n\r\n### Describe the problem\r\nWhen using keras models with `train_and_evaluate`, you need to convert them into estimators first. The best way to do this is `tf.keras.estimator.model_to_estimator`. However, when `train_and_evaluate` is called with those estimators, the default graphs that are created end up referenced in `_GRAPH_LEARNING_PHASES` and never deallocated (so sort of a memory leak). This is due to a call to `keras.backend.set_learning_phase` that's done as part of the created `model_fn`, which uses the default graph as a key into `_GRAPH_LEARNING_PHASES`. Since that graph changes every so often in `train_and_evaluate`, that key changes so there's a new key inserted without the old ones being removed.\r\n\r\nOr at leas, I'm 80% certain that's what's going on. You can see in the provided code a very simple Keras model turned into an estimator and then run with a hook that prints out memory usage and the size of `_GRAPH_LEARNING_PHASES`. It increases over time!\r\n\r\nWhile the leak is small in the provided example, it has caused me great strife in real usage.\r\n### Source code / logs\r\n\r\nThe source code and a sample run are provided in [this gist](https://gist.github.com/zmjjmz/392ead713f19db025390f6d8de17bde2). It should be easy to run the python script yourself however you'll need to have `numpy` and `psutil` installed."}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19395", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19395/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19395/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19395/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/19395", "id": 324520886, "node_id": "MDU6SXNzdWUzMjQ1MjA4ODY=", "number": 19395, "title": "Gridrnn (Grid2LSTM) tied behaviour is inverted", "user": {"login": "Abhishek8394", "id": 5524161, "node_id": "MDQ6VXNlcjU1MjQxNjE=", "avatar_url": "https://avatars0.githubusercontent.com/u/5524161?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Abhishek8394", "html_url": "https://github.com/Abhishek8394", "followers_url": "https://api.github.com/users/Abhishek8394/followers", "following_url": "https://api.github.com/users/Abhishek8394/following{/other_user}", "gists_url": "https://api.github.com/users/Abhishek8394/gists{/gist_id}", "starred_url": "https://api.github.com/users/Abhishek8394/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Abhishek8394/subscriptions", "organizations_url": "https://api.github.com/users/Abhishek8394/orgs", "repos_url": "https://api.github.com/users/Abhishek8394/repos", "events_url": "https://api.github.com/users/Abhishek8394/events{/privacy}", "received_events_url": "https://api.github.com/users/Abhishek8394/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": {"login": "ebrevdo", "id": 1794715, "node_id": "MDQ6VXNlcjE3OTQ3MTU=", "avatar_url": "https://avatars0.githubusercontent.com/u/1794715?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ebrevdo", "html_url": "https://github.com/ebrevdo", "followers_url": "https://api.github.com/users/ebrevdo/followers", "following_url": "https://api.github.com/users/ebrevdo/following{/other_user}", "gists_url": "https://api.github.com/users/ebrevdo/gists{/gist_id}", "starred_url": "https://api.github.com/users/ebrevdo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ebrevdo/subscriptions", "organizations_url": "https://api.github.com/users/ebrevdo/orgs", "repos_url": "https://api.github.com/users/ebrevdo/repos", "events_url": "https://api.github.com/users/ebrevdo/events{/privacy}", "received_events_url": "https://api.github.com/users/ebrevdo/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "ebrevdo", "id": 1794715, "node_id": "MDQ6VXNlcjE3OTQ3MTU=", "avatar_url": "https://avatars0.githubusercontent.com/u/1794715?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ebrevdo", "html_url": "https://github.com/ebrevdo", "followers_url": "https://api.github.com/users/ebrevdo/followers", "following_url": "https://api.github.com/users/ebrevdo/following{/other_user}", "gists_url": "https://api.github.com/users/ebrevdo/gists{/gist_id}", "starred_url": "https://api.github.com/users/ebrevdo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ebrevdo/subscriptions", "organizations_url": "https://api.github.com/users/ebrevdo/orgs", "repos_url": "https://api.github.com/users/ebrevdo/repos", "events_url": "https://api.github.com/users/ebrevdo/events{/privacy}", "received_events_url": "https://api.github.com/users/ebrevdo/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 2, "created_at": "2018-05-18T19:08:42Z", "updated_at": "2018-12-14T18:53:37Z", "closed_at": null, "author_association": "NONE", "body": "\r\n### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**: yes\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**: Ubuntu 16.04\r\n- **TensorFlow installed from (source or binary)**: binary\r\n- **TensorFlow version (use command below)**: 1.8\r\n- **Python version**: 3.5\r\n- **Bazel version (if compiling from source)**:\r\n- **GCC/Compiler version (if compiling from source)**:\r\n- **CUDA/cuDNN version**:\r\n- **GPU model and memory**:\r\n- **Exact command to reproduce**:\r\n\r\n### Describe the problem\r\nWhen trying to create a unrolled sequence for a `Grid2LSTMCell`, weights are shared among two states (the two dimensions) for a given step, when the property `tied` is set to *False* and they are not shared when `tied` is set to *True*. If this is indeed the behaviour that was desired, then it deviates from the original paper based on which it is implemented, otherwise it seems to be a bug in variable reuse.\r\n\r\n**Expected Behaviour**: Share weights when `tied` is True and do not share when `tied` is False\r\n\r\n### Source code / logs\r\n```python\r\nimport tensorflow as tf\r\nfrom tensorflow.contrib.rnn.python.ops import rnn_cell\r\nfrom tensorflow.contrib import grid_rnn\r\nfrom tensorflow.python.ops import variable_scope\r\n\r\nbatch_size = 32\r\nseq_len = 10\r\n# inp => sequence_length x batch_size x embedding_size\r\ninp_grid = tf.placeholder(tf.float32, shape=(seq_len, batch_size, 2048)) \r\nrnnargs = {\r\n            'use_peepholes': True, 'forget_bias': 1.0,\r\n            'state_is_tuple': False, 'output_is_tuple': False,\r\n            'output_is_tuple': True, 'state_is_tuple': True,\r\n            'tied': False\r\n            }\r\nglstm = grid_rnn.Grid2LSTMCell(1024, **rnnargs)\r\nstate = glstm.zero_state(batch_size, tf.float32)\r\nfor i in range(seq_len):\r\n    if i>0:\r\n        variable_scope.get_variable_scope().reuse_variables()\r\n    state_left, state_top = state[0], state[1] # since two dimensions\r\n    out, state = glstm(inp_grid[i], (state_left, state_top))\r\n    # If you observe the actual tensor (name) of the two states, \r\n    # they will be same when tied is False \r\n    # and different when tied is true\r\n    print(state[0],\"\\t\",state[1],\"\\n\")\r\n```\r\n\r\nI think this is a bug related to variable reuse instead of how cells are defined in `grid_rnn` constructor. I would like to work on this issue if this indeed is an issue, or else a explanation of why this is the correct behaviour will do."}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19391", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19391/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19391/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19391/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/19391", "id": 324484802, "node_id": "MDU6SXNzdWUzMjQ0ODQ4MDI=", "number": 19391, "title": "Feature Request: Use hwloc to query CPU topologies and support thread/memory binding for improved performance", "user": {"login": "jbobba", "id": 21375855, "node_id": "MDQ6VXNlcjIxMzc1ODU1", "avatar_url": "https://avatars1.githubusercontent.com/u/21375855?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jbobba", "html_url": "https://github.com/jbobba", "followers_url": "https://api.github.com/users/jbobba/followers", "following_url": "https://api.github.com/users/jbobba/following{/other_user}", "gists_url": "https://api.github.com/users/jbobba/gists{/gist_id}", "starred_url": "https://api.github.com/users/jbobba/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jbobba/subscriptions", "organizations_url": "https://api.github.com/users/jbobba/orgs", "repos_url": "https://api.github.com/users/jbobba/repos", "events_url": "https://api.github.com/users/jbobba/events{/privacy}", "received_events_url": "https://api.github.com/users/jbobba/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 299643928, "node_id": "MDU6TGFiZWwyOTk2NDM5Mjg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:contributions%20welcome", "name": "stat:contributions welcome", "color": "f4b400", "default": false, "description": ""}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 23, "created_at": "2018-05-18T17:01:09Z", "updated_at": "2019-04-15T01:16:34Z", "closed_at": null, "author_association": "CONTRIBUTOR", "body": "------------------------\r\n\r\n### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**:\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**:\r\n- **TensorFlow installed from (source or binary)**:\r\n- **TensorFlow version (use command below)**:\r\n- **Python version**: \r\n- **Bazel version (if compiling from source)**:\r\n- **GCC/Compiler version (if compiling from source)**:\r\n- **CUDA/cuDNN version**:\r\n- **GPU model and memory**:\r\n- **Exact command to reproduce**:\r\n\r\n### Describe the problem\r\nFeature request to add hwloc (https://www.open-mpi.org/projects/hwloc/) to TensorFlow's third-party dependencies, use hwloc APIs to query CPU topologies in a portable manner and bind threads/memory for improved performance\r\n\r\nThis is following up on some of the discussion here: https://github.com/tensorflow/tensorflow/pull/19136"}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19390", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19390/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19390/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19390/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/19390", "id": 324478763, "node_id": "MDU6SXNzdWUzMjQ0Nzg3NjM=", "number": 19390, "title": "depthwise_conv2d_native too slow", "user": {"login": "lubomir1", "id": 21107748, "node_id": "MDQ6VXNlcjIxMTA3NzQ4", "avatar_url": "https://avatars1.githubusercontent.com/u/21107748?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lubomir1", "html_url": "https://github.com/lubomir1", "followers_url": "https://api.github.com/users/lubomir1/followers", "following_url": "https://api.github.com/users/lubomir1/following{/other_user}", "gists_url": "https://api.github.com/users/lubomir1/gists{/gist_id}", "starred_url": "https://api.github.com/users/lubomir1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lubomir1/subscriptions", "organizations_url": "https://api.github.com/users/lubomir1/orgs", "repos_url": "https://api.github.com/users/lubomir1/repos", "events_url": "https://api.github.com/users/lubomir1/events{/privacy}", "received_events_url": "https://api.github.com/users/lubomir1/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 473172988, "node_id": "MDU6TGFiZWw0NzMxNzI5ODg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:bug", "name": "type:bug", "color": "159b2e", "default": false, "description": ""}], "state": "open", "locked": false, "assignee": {"login": "drpngx", "id": 20959853, "node_id": "MDQ6VXNlcjIwOTU5ODUz", "avatar_url": "https://avatars1.githubusercontent.com/u/20959853?v=4", "gravatar_id": "", "url": "https://api.github.com/users/drpngx", "html_url": "https://github.com/drpngx", "followers_url": "https://api.github.com/users/drpngx/followers", "following_url": "https://api.github.com/users/drpngx/following{/other_user}", "gists_url": "https://api.github.com/users/drpngx/gists{/gist_id}", "starred_url": "https://api.github.com/users/drpngx/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/drpngx/subscriptions", "organizations_url": "https://api.github.com/users/drpngx/orgs", "repos_url": "https://api.github.com/users/drpngx/repos", "events_url": "https://api.github.com/users/drpngx/events{/privacy}", "received_events_url": "https://api.github.com/users/drpngx/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "drpngx", "id": 20959853, "node_id": "MDQ6VXNlcjIwOTU5ODUz", "avatar_url": "https://avatars1.githubusercontent.com/u/20959853?v=4", "gravatar_id": "", "url": "https://api.github.com/users/drpngx", "html_url": "https://github.com/drpngx", "followers_url": "https://api.github.com/users/drpngx/followers", "following_url": "https://api.github.com/users/drpngx/following{/other_user}", "gists_url": "https://api.github.com/users/drpngx/gists{/gist_id}", "starred_url": "https://api.github.com/users/drpngx/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/drpngx/subscriptions", "organizations_url": "https://api.github.com/users/drpngx/orgs", "repos_url": "https://api.github.com/users/drpngx/repos", "events_url": "https://api.github.com/users/drpngx/events{/privacy}", "received_events_url": "https://api.github.com/users/drpngx/received_events", "type": "User", "site_admin": false}, {"login": "tfboyd", "id": 23486130, "node_id": "MDQ6VXNlcjIzNDg2MTMw", "avatar_url": "https://avatars1.githubusercontent.com/u/23486130?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tfboyd", "html_url": "https://github.com/tfboyd", "followers_url": "https://api.github.com/users/tfboyd/followers", "following_url": "https://api.github.com/users/tfboyd/following{/other_user}", "gists_url": "https://api.github.com/users/tfboyd/gists{/gist_id}", "starred_url": "https://api.github.com/users/tfboyd/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tfboyd/subscriptions", "organizations_url": "https://api.github.com/users/tfboyd/orgs", "repos_url": "https://api.github.com/users/tfboyd/repos", "events_url": "https://api.github.com/users/tfboyd/events{/privacy}", "received_events_url": "https://api.github.com/users/tfboyd/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 6, "created_at": "2018-05-18T16:40:37Z", "updated_at": "2019-01-18T02:21:11Z", "closed_at": null, "author_association": "NONE", "body": "***edit***: Simplified the example, added system info\r\n\r\nAccording to this [thread](https://github.com/tensorflow/tensorflow/pull/17961) Tensorflow now uses the CuDNN accelerations of group convolutions for depthwise_conv2d_native. Thank you for working on this! However, I am having a hard time reproducing any gains from the accelerated version. Both the native and accelerated versions of depthwise_conv2d_native is about 3-4 times slower than doing a full (dense) convolution.\r\n\r\nIn the example below, a dense 3x3 convolution with 64-in and 64-out channels should do about 16 times more multiplications compared to a group convolution with the same dimensions and 16 groups (64x3x3x64 vs 16x4x3x3x4). The latter can be implemented with depthwise_conv2d_native with channel_multiplier of 4 followed by a sum. So I expect a fully amortized depthwise_conv2d_native to be 16 times faster than a dense convolution, and yet, it is about 4 times slower. It is also substantially slower than naive slice/convolve/concat implementation of group convolution\r\n\r\n\r\n### System information\r\n- **Have I written custom code**: no\r\n- **OS Platform and Distribution**: Linux Ubuntu 16.04\r\n- **TensorFlow installed from (source)**: from May 15, 2018 commit 1521eeb676383417b33ad55ad73b152bd5b046ca\r\n- **Python version**: 2.7\r\n- **Bazel version (if compiling from source)**: 0.11.1\r\n- **GCC/Compiler version (if compiling from source)**: 5.4\r\n- **CUDA/cuDNN version**: 9.1, 7.1.3\r\n- **GPU model and memory**: GeForce GTX 1080ti (tf compiled for compute capability 6.1) and Volta (V100, tf compiled for compute capability 7.0)\r\n- **Exact command to reproduce**: see code below\r\n\r\n\r\nHere are my results on GTX 1080ti:\r\n```\r\n           depthwise : 2.72s\r\n     depthwise_cudnn : 2.59s\r\n   manual_group_conv : 0.84s\r\n          dense_conv : 0.72s\r\n```\r\nHere is the code I used to test performance:\r\n```\r\nimport numpy as np, time, os\r\nimport tensorflow as tf\r\nos.environ['TF_CPP_MIN_LOG_LEVEL'] = '3'\r\n\r\ndef conv3x3(bottom, filters):\r\n    return tf.layers.conv2d(bottom, filters, kernel_size = 3, padding='same', use_bias = False, data_format = 'channels_first')\r\n\r\n# this is not even group convolution, just the depthwise part without the sum\r\ndef depthwise(bottom, num_groups):\r\n    input_chans = bottom.shape[1]\r\n    group_size = input_chans / num_groups\r\n    w0 = tf.get_variable(name='var', shape=[3, 3, input_chans, group_size])\r\n    return tf.nn.depthwise_conv2d_native(bottom, w0, strides = [1,1,1,1], padding = 'SAME', data_format = 'NCHW')\r\n\r\ndef depthwise_cudnn(bottom, num_groups):\r\n    with tf.get_default_graph()._kernel_label_map({\"DepthwiseConv2dNative\": \"cudnn_grouped_convolution\"}):\r\n        return depthwise(bottom, num_groups)\r\n\r\ndef manual_group_conv(bottom, num_groups):\r\n    input_chans = bottom.shape[1]\r\n    group_size = input_chans / num_groups\r\n    slices = [bottom[:,i:(i+group_size)] for i in range(0, input_chans, group_size)]\r\n    convs = [conv3x3(sl, group_size) for sl in slices]\r\n    return tf.concat(convs, axis = 1)\r\n\r\ndef dense_conv(bottom, num_groups):\r\n    return conv3x3(bottom, bottom.shape[1])\r\n\r\ninput_shape = [16, 64, 128, 128]\r\ngroups = 16\r\ndtype = tf.float32\r\n\r\nfor cnv_type in [depthwise, depthwise_cudnn, manual_group_conv, dense_conv]:\r\n    tf.reset_default_graph()\r\n\r\n    cnv = cnv_type(tf.constant(np.zeros(input_shape), dtype), groups)\r\n\r\n    N = 100\r\n    with tf.Session('') as sess:\r\n        sess.run(tf.global_variables_initializer())\r\n\r\n        sess.run(cnv) # initialization run\r\n\r\n        start = time.time()\r\n        for i in range(N):\r\n            sess.run(cnv)\r\n\r\n        print \"%20s : %4.2fs\" % (cnv_type.func_name, time.time() - start)\r\n\r\n```\r\n\r\nI also tested with NHWC with similar results. Let me know if I am doing something wrong or whether you can replicate my perf results. Thanks!\r\n"}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19384", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19384/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19384/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19384/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/19384", "id": 324416431, "node_id": "MDU6SXNzdWUzMjQ0MTY0MzE=", "number": 19384, "title": "App crashes when building with gradle", "user": {"login": "achraf-boussaada", "id": 31047155, "node_id": "MDQ6VXNlcjMxMDQ3MTU1", "avatar_url": "https://avatars2.githubusercontent.com/u/31047155?v=4", "gravatar_id": "", "url": "https://api.github.com/users/achraf-boussaada", "html_url": "https://github.com/achraf-boussaada", "followers_url": "https://api.github.com/users/achraf-boussaada/followers", "following_url": "https://api.github.com/users/achraf-boussaada/following{/other_user}", "gists_url": "https://api.github.com/users/achraf-boussaada/gists{/gist_id}", "starred_url": "https://api.github.com/users/achraf-boussaada/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/achraf-boussaada/subscriptions", "organizations_url": "https://api.github.com/users/achraf-boussaada/orgs", "repos_url": "https://api.github.com/users/achraf-boussaada/repos", "events_url": "https://api.github.com/users/achraf-boussaada/events{/privacy}", "received_events_url": "https://api.github.com/users/achraf-boussaada/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 750616506, "node_id": "MDU6TGFiZWw3NTA2MTY1MDY=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/comp:lite", "name": "comp:lite", "color": "0052cc", "default": false, "description": ""}, {"id": 473173351, "node_id": "MDU6TGFiZWw0NzMxNzMzNTE=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:build/install", "name": "type:build/install", "color": "159b2e", "default": false, "description": ""}], "state": "open", "locked": false, "assignee": {"login": "jdduke", "id": 479117, "node_id": "MDQ6VXNlcjQ3OTExNw==", "avatar_url": "https://avatars2.githubusercontent.com/u/479117?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jdduke", "html_url": "https://github.com/jdduke", "followers_url": "https://api.github.com/users/jdduke/followers", "following_url": "https://api.github.com/users/jdduke/following{/other_user}", "gists_url": "https://api.github.com/users/jdduke/gists{/gist_id}", "starred_url": "https://api.github.com/users/jdduke/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jdduke/subscriptions", "organizations_url": "https://api.github.com/users/jdduke/orgs", "repos_url": "https://api.github.com/users/jdduke/repos", "events_url": "https://api.github.com/users/jdduke/events{/privacy}", "received_events_url": "https://api.github.com/users/jdduke/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "jdduke", "id": 479117, "node_id": "MDQ6VXNlcjQ3OTExNw==", "avatar_url": "https://avatars2.githubusercontent.com/u/479117?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jdduke", "html_url": "https://github.com/jdduke", "followers_url": "https://api.github.com/users/jdduke/followers", "following_url": "https://api.github.com/users/jdduke/following{/other_user}", "gists_url": "https://api.github.com/users/jdduke/gists{/gist_id}", "starred_url": "https://api.github.com/users/jdduke/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jdduke/subscriptions", "organizations_url": "https://api.github.com/users/jdduke/orgs", "repos_url": "https://api.github.com/users/jdduke/repos", "events_url": "https://api.github.com/users/jdduke/events{/privacy}", "received_events_url": "https://api.github.com/users/jdduke/received_events", "type": "User", "site_admin": false}, {"login": "achowdhery", "id": 4723042, "node_id": "MDQ6VXNlcjQ3MjMwNDI=", "avatar_url": "https://avatars3.githubusercontent.com/u/4723042?v=4", "gravatar_id": "", "url": "https://api.github.com/users/achowdhery", "html_url": "https://github.com/achowdhery", "followers_url": "https://api.github.com/users/achowdhery/followers", "following_url": "https://api.github.com/users/achowdhery/following{/other_user}", "gists_url": "https://api.github.com/users/achowdhery/gists{/gist_id}", "starred_url": "https://api.github.com/users/achowdhery/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/achowdhery/subscriptions", "organizations_url": "https://api.github.com/users/achowdhery/orgs", "repos_url": "https://api.github.com/users/achowdhery/repos", "events_url": "https://api.github.com/users/achowdhery/events{/privacy}", "received_events_url": "https://api.github.com/users/achowdhery/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 33, "created_at": "2018-05-18T13:43:36Z", "updated_at": "2019-03-27T14:17:28Z", "closed_at": null, "author_association": "NONE", "body": "### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**:\r\nNO\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**:\r\nmacOS Sierra 10.12.6\r\n- **TensorFlow installed from (source or binary)**:\r\nsource\r\n\r\n\r\n- **Python version**: \r\npython 3.6\r\n- **Bazel version (if compiling from source)**:\r\nbazel 0.13.0\r\n- **GCC/Compiler version (if compiling from source)**:\r\nGCC 4.2.1\r\n\r\nI managed to implement the object detection api in my app with my trained model. Despite that the app works fine I always get an error the the tensorflow_demo.so was not find so the tracking is unavailable which affected the bounding boxes in comparison with the tensorflow object detection demo (when you build it with bazel)\r\n\r\nI downloaded the missing .so file and add it to my project by adding this to my gradle :\r\n \r\n     lintOptions {\r\n        abortOnError false\r\n    }\r\n\r\n    sourceSets.main {\r\n        jniLibs.srcDirs =  ['libs']\r\n    }\r\n\r\nand then dropping the files into the created directory (JniLibs)\r\n\r\nwhen I unpack my .apk file I can see clearly that the .so are packed in the .apk : \r\n\r\n     20336344  Defl:N  5832450  71% 00-00-1980 00:00 33cca329  lib/arm64-       v8a/libtensorflow_inference.so\r\n      412440  Defl:N   210820  49% 00-00-1980 00:00 f305dd00  lib/armeabi- v7a/libtensorflow_demo.so\r\n      1.3987972  Defl:N  4856867  65% 00-00-1980 00:00 be7adc48  lib/armeabi-v7a/libtensorflow_inference.so\r\n       21178780  Defl:N  6353576  70% 00-00-1980 00:00 addfcb9d  lib/x86/libtensorflow_inference.so\r\n       21811248  Defl:N  6681692  69% 00-00-1980 00:00 4cac1c73  lib/x86_64/libtensorflow_inference.so\r\n\r\nthe problem now is when I launch the app it crashes with the following error : \r\n\r\n         No implementation found for void package_name_tracking.ObjectTracker.initNative(int, int, boolean) (tried Java_package_name_tracking_ObjectTracker_initNative and Java_package_name_tracking_ObjectTracker_initNative__IIZ)\r\n\r\nI want to avoid the use of bazel or cmake, is it possible or there is a solution for the error I'm getting !!\r\n\r\nAny information would be helpful\r\n"}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19378", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19378/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19378/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19378/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/19378", "id": 324382528, "node_id": "MDU6SXNzdWUzMjQzODI1Mjg=", "number": 19378, "title": "tf.gfile.Glob returns wrong values on Windows systems", "user": {"login": "canut", "id": 4560150, "node_id": "MDQ6VXNlcjQ1NjAxNTA=", "avatar_url": "https://avatars0.githubusercontent.com/u/4560150?v=4", "gravatar_id": "", "url": "https://api.github.com/users/canut", "html_url": "https://github.com/canut", "followers_url": "https://api.github.com/users/canut/followers", "following_url": "https://api.github.com/users/canut/following{/other_user}", "gists_url": "https://api.github.com/users/canut/gists{/gist_id}", "starred_url": "https://api.github.com/users/canut/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/canut/subscriptions", "organizations_url": "https://api.github.com/users/canut/orgs", "repos_url": "https://api.github.com/users/canut/repos", "events_url": "https://api.github.com/users/canut/events{/privacy}", "received_events_url": "https://api.github.com/users/canut/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 299643928, "node_id": "MDU6TGFiZWwyOTk2NDM5Mjg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:contributions%20welcome", "name": "stat:contributions welcome", "color": "f4b400", "default": false, "description": ""}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2018-05-18T11:59:37Z", "updated_at": "2018-08-14T06:19:20Z", "closed_at": null, "author_association": "NONE", "body": "### System information\r\nEnvironment:\r\n- **Python 3.6.2**\r\n- **Tensorflow 'v1.8.0-0-g93bc2e2072' 1.8.0**\r\n- **OS : Windows 7**\r\n\r\n- **Exact command to reproduce**:\r\n\r\n```\r\n > ls -R\r\n.:\r\nexample/\r\n\r\n./example:\r\nsubdir/\r\n\r\n./example/subdir:\r\nfile1  file2\r\n\r\n\r\n> python\r\nPython 3.6.2 (v3.6.2:5fd33b5, Jul  8 2017, 04:57:36) [MSC v.1900 64 bit (AMD64)] on win32\r\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\r\n>>> import tensorflow as tf\r\n>>> tf.gfile.Glob(\"example/*\")\r\n['example\\\\subdir', 'example\\\\subdir\\\\file1', 'example\\\\subdir\\\\file2']\r\n\r\n```\r\n\r\n### Describe the problem\r\nBehaviour of _tf.gfile.Glob_ is different on Windows and Linux-based (POSIX) systems.\r\nOn Windows, the result includes all files and sub-directories of the matching pattern (=> recursive)\r\nOn Linux, the result includes only files and directories matched by the pattern (=> not recursive)\r\n\r\nAs an example, given the directory structure above, I have the following result:\r\n\r\n* Windows\r\n```python\r\n>>> tf.gfile.Glob(\"example/*\")\r\n['example\\\\subdir', 'example\\\\subdir\\\\file1', 'example\\\\subdir\\\\file2']\r\n```\r\n\r\n* Linux-based systems\r\n```python\r\n>>> tf.gfile.Glob(\"example/*\")\r\n['example/subdir']\r\n```\r\n\r\nThe result returned on Windows platform is clearly wrong.\r\n\r\nThis has an impact on my application because I do something like `[my_list]=tf.gfile.Glob(pattern)` and it doesn't work on Windows whereas it works on Linux.\r\nError on Windows is `ValueError: too many values to unpack `\r\n\r\n\r\n### Source code\r\nI tracked down the issue in TF code and it is related to how _GetMatchingPaths_ works. See difference between [Windows implementation](https://github.com/tensorflow/tensorflow/blob/e7f158858479400f17a1b6351e9827e3aa83e7ff/tensorflow/core/platform/windows/windows_file_system.cc) and [POSIX implementation](https://github.com/tensorflow/tensorflow/blob/e7f158858479400f17a1b6351e9827e3aa83e7ff/tensorflow/core/platform/posix/posix_file_system.cc).\r\nBoth of them refer to [internal::GetMatchingPaths](https://github.com/tensorflow/tensorflow/blob/6ba9573a702ea9e1290517cce4e5f73a14552ad9/tensorflow/core/platform/file_system_helper.cc) which seems to be the root cause of the issue.\r\n\r\n\r\n"}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19376", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19376/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19376/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19376/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/19376", "id": 324332809, "node_id": "MDU6SXNzdWUzMjQzMzI4MDk=", "number": 19376, "title": "The channel dimension of the inputs is `None` when tf.layers.conv2d after tf.slice with tf.shape instead of constant value", "user": {"login": "Giangblackk", "id": 10430725, "node_id": "MDQ6VXNlcjEwNDMwNzI1", "avatar_url": "https://avatars1.githubusercontent.com/u/10430725?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Giangblackk", "html_url": "https://github.com/Giangblackk", "followers_url": "https://api.github.com/users/Giangblackk/followers", "following_url": "https://api.github.com/users/Giangblackk/following{/other_user}", "gists_url": "https://api.github.com/users/Giangblackk/gists{/gist_id}", "starred_url": "https://api.github.com/users/Giangblackk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Giangblackk/subscriptions", "organizations_url": "https://api.github.com/users/Giangblackk/orgs", "repos_url": "https://api.github.com/users/Giangblackk/repos", "events_url": "https://api.github.com/users/Giangblackk/events{/privacy}", "received_events_url": "https://api.github.com/users/Giangblackk/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": {"login": "tatatodd", "id": 5453737, "node_id": "MDQ6VXNlcjU0NTM3Mzc=", "avatar_url": "https://avatars3.githubusercontent.com/u/5453737?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tatatodd", "html_url": "https://github.com/tatatodd", "followers_url": "https://api.github.com/users/tatatodd/followers", "following_url": "https://api.github.com/users/tatatodd/following{/other_user}", "gists_url": "https://api.github.com/users/tatatodd/gists{/gist_id}", "starred_url": "https://api.github.com/users/tatatodd/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tatatodd/subscriptions", "organizations_url": "https://api.github.com/users/tatatodd/orgs", "repos_url": "https://api.github.com/users/tatatodd/repos", "events_url": "https://api.github.com/users/tatatodd/events{/privacy}", "received_events_url": "https://api.github.com/users/tatatodd/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "tatatodd", "id": 5453737, "node_id": "MDQ6VXNlcjU0NTM3Mzc=", "avatar_url": "https://avatars3.githubusercontent.com/u/5453737?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tatatodd", "html_url": "https://github.com/tatatodd", "followers_url": "https://api.github.com/users/tatatodd/followers", "following_url": "https://api.github.com/users/tatatodd/following{/other_user}", "gists_url": "https://api.github.com/users/tatatodd/gists{/gist_id}", "starred_url": "https://api.github.com/users/tatatodd/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tatatodd/subscriptions", "organizations_url": "https://api.github.com/users/tatatodd/orgs", "repos_url": "https://api.github.com/users/tatatodd/repos", "events_url": "https://api.github.com/users/tatatodd/events{/privacy}", "received_events_url": "https://api.github.com/users/tatatodd/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 3, "created_at": "2018-05-18T09:19:12Z", "updated_at": "2018-12-15T18:38:46Z", "closed_at": null, "author_association": "NONE", "body": "Here is my sample code to test the case:\r\n```python\r\nimport tensorflow as tf\r\nimport numpy as np\r\n\r\nif __name__ == '__main__':\r\n    n_channel = 3\r\n    n_layer = 5\r\n    input_tensor = tf.placeholder(tf.float32, shape=[None, None, None, n_channel])\r\n    input_image = np.random.rand(4, 512, 512,n_channel)\r\n\r\n    slice = tf.slice(input_tensor, [0,0,0,0], [-1, tf.shape(input_tensor)[1], tf.shape(input_tensor)[2], -1])\r\n    conv = tf.layers.conv2d(slice,filters=16,kernel_size=3,strides=1,padding='valid')\r\n\r\n    with tf.Session() as sess:\r\n        sess.run(tf.global_variables_initializer())\r\n        output_image = sess.run(conv,feed_dict={input_tensor:input_image})\r\n    print(output_image.shape)\r\n```\r\nHere is the error:\r\n```python-traceback\r\nTraceback (most recent call last):\r\n  File \"test_concat_then_conv.py\", line 11, in <module>\r\n    conv = tf.layers.conv2d(slice,filters=16,kernel_size=3,strides=1,padding='valid')\r\n  File \"/home/python3.6/site-packages/tensorflow/python/layers/convolutional.py\", line 619, in conv2d\r\n    return layer.apply(inputs)\r\n  File \"/home/lib/python3.6/site-packages/tensorflow/python/layers/base.py\", line 825, in apply\r\n    return self.__call__(inputs, *args, **kwargs)\r\n  File \"/home/lib/python3.6/site-packages/tensorflow/python/layers/base.py\", line 696, in __call__\r\n    self.build(input_shapes)\r\n  File \"/home/lib/python3.6/site-packages/tensorflow/python/layers/convolutional.py\", line 133, in build\r\n    raise ValueError('The channel dimension of the inputs '\r\nValueError: The channel dimension of the inputs should be defined. Found `None`.\r\n```\r\nThis happen only when I used `tf.layers.conv2d`. It works with `tf.nn.conv2d`.\r\nI wonder what is the root of this problem?"}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19368", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19368/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19368/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19368/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/19368", "id": 324239037, "node_id": "MDU6SXNzdWUzMjQyMzkwMzc=", "number": 19368, "title": "tf.control_dependencies fails to update the dependent op.", "user": {"login": "mingyr", "id": 5569293, "node_id": "MDQ6VXNlcjU1NjkyOTM=", "avatar_url": "https://avatars1.githubusercontent.com/u/5569293?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mingyr", "html_url": "https://github.com/mingyr", "followers_url": "https://api.github.com/users/mingyr/followers", "following_url": "https://api.github.com/users/mingyr/following{/other_user}", "gists_url": "https://api.github.com/users/mingyr/gists{/gist_id}", "starred_url": "https://api.github.com/users/mingyr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mingyr/subscriptions", "organizations_url": "https://api.github.com/users/mingyr/orgs", "repos_url": "https://api.github.com/users/mingyr/repos", "events_url": "https://api.github.com/users/mingyr/events{/privacy}", "received_events_url": "https://api.github.com/users/mingyr/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": {"login": "shivaniag", "id": 16565716, "node_id": "MDQ6VXNlcjE2NTY1NzE2", "avatar_url": "https://avatars1.githubusercontent.com/u/16565716?v=4", "gravatar_id": "", "url": "https://api.github.com/users/shivaniag", "html_url": "https://github.com/shivaniag", "followers_url": "https://api.github.com/users/shivaniag/followers", "following_url": "https://api.github.com/users/shivaniag/following{/other_user}", "gists_url": "https://api.github.com/users/shivaniag/gists{/gist_id}", "starred_url": "https://api.github.com/users/shivaniag/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/shivaniag/subscriptions", "organizations_url": "https://api.github.com/users/shivaniag/orgs", "repos_url": "https://api.github.com/users/shivaniag/repos", "events_url": "https://api.github.com/users/shivaniag/events{/privacy}", "received_events_url": "https://api.github.com/users/shivaniag/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "shivaniag", "id": 16565716, "node_id": "MDQ6VXNlcjE2NTY1NzE2", "avatar_url": "https://avatars1.githubusercontent.com/u/16565716?v=4", "gravatar_id": "", "url": "https://api.github.com/users/shivaniag", "html_url": "https://github.com/shivaniag", "followers_url": "https://api.github.com/users/shivaniag/followers", "following_url": "https://api.github.com/users/shivaniag/following{/other_user}", "gists_url": "https://api.github.com/users/shivaniag/gists{/gist_id}", "starred_url": "https://api.github.com/users/shivaniag/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/shivaniag/subscriptions", "organizations_url": "https://api.github.com/users/shivaniag/orgs", "repos_url": "https://api.github.com/users/shivaniag/repos", "events_url": "https://api.github.com/users/shivaniag/events{/privacy}", "received_events_url": "https://api.github.com/users/shivaniag/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 2, "created_at": "2018-05-18T01:24:00Z", "updated_at": "2019-04-10T19:56:47Z", "closed_at": null, "author_association": "NONE", "body": "------------------------\r\n\r\n### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**: Yes\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**: Linux Redhat 7.3\r\n- **TensorFlow installed from (source or binary)**: Source\r\n- **TensorFlow version (use command below)**: r1.8\r\n- **Python version**: 2.7.5\r\n- **Bazel version (if compiling from source)**: 0.12\r\n- **GCC/Compiler version (if compiling from source)**: \r\n- **CUDA/cuDNN version**: 9.1/7.0.5\r\n- **GPU model and memory**: P5000/16G\r\n- **Exact command to reproduce**: N/A\r\n\r\n\r\n### Describe the problem\r\n\r\nDuring the test of tf.metrics, two pieces of code snippets are believed to be equivalent outputting totally different results.\r\n\r\n### Source code / logs\r\nCode snippet 1:\r\n\r\n```\r\nimport tensorflow as tf\r\n\r\na = tf.constant([1.], tf.float32)\r\nmean_a, mean_a_uop = tf.metrics.mean(a)\r\n\r\nsess = tf.InteractiveSession()\r\ntf.global_variables_initializer().run()\r\ntf.local_variables_initializer().run()\r\n\r\nfor _ in range(10):\r\n  sess.run(mean_a_uop)\r\n  print(sess.run(mean_a))\r\n\r\n```\r\noutputs:\r\n```\r\n1.0\r\n1.0\r\n1.0\r\n1.0\r\n1.0\r\n1.0\r\n1.0\r\n1.0\r\n1.0\r\n1.0\r\n\r\n```\r\n\r\nCode snippet 2:\r\n```\r\nimport tensorflow as tf\r\n\r\na = tf.constant([1.], tf.float32)\r\nmean_a, mean_a_uop = tf.metrics.mean(a)\r\n\r\nwith tf.control_dependencies([mean_a_uop]):\r\n  mean_a = tf.identity(mean_a)\r\n\r\nsess = tf.InteractiveSession()\r\ntf.global_variables_initializer().run()\r\ntf.local_variables_initializer().run()\r\n\r\nfor _ in range(10):\r\n  print(sess.run(mean_a))\r\n\r\n```\r\n\r\noutputs:\r\n\r\n```\r\n0.0\r\n2.0\r\n1.5\r\n1.3333334\r\n1.25\r\n1.2\r\n1.1666666\r\n1.1428572\r\n1.125\r\n1.1111112\r\n\r\n```\r\n"}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19363", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19363/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19363/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19363/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/19363", "id": 324216451, "node_id": "MDU6SXNzdWUzMjQyMTY0NTE=", "number": 19363, "title": "Offer TensorFlow Docker Images Based on 18.04", "user": {"login": "cancan101", "id": 51059, "node_id": "MDQ6VXNlcjUxMDU5", "avatar_url": "https://avatars1.githubusercontent.com/u/51059?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cancan101", "html_url": "https://github.com/cancan101", "followers_url": "https://api.github.com/users/cancan101/followers", "following_url": "https://api.github.com/users/cancan101/following{/other_user}", "gists_url": "https://api.github.com/users/cancan101/gists{/gist_id}", "starred_url": "https://api.github.com/users/cancan101/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cancan101/subscriptions", "organizations_url": "https://api.github.com/users/cancan101/orgs", "repos_url": "https://api.github.com/users/cancan101/repos", "events_url": "https://api.github.com/users/cancan101/events{/privacy}", "received_events_url": "https://api.github.com/users/cancan101/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 299643928, "node_id": "MDU6TGFiZWwyOTk2NDM5Mjg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:contributions%20welcome", "name": "stat:contributions welcome", "color": "f4b400", "default": false, "description": ""}, {"id": 473173351, "node_id": "MDU6TGFiZWw0NzMxNzMzNTE=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:build/install", "name": "type:build/install", "color": "159b2e", "default": false, "description": ""}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2018-05-17T23:10:02Z", "updated_at": "2018-08-01T21:58:04Z", "closed_at": null, "author_association": "CONTRIBUTOR", "body": "Nvidia is now shipping docker images based on ubuntu 18.04 ([see](https://github.com/NVIDIA/nvidia-docker/issues/666#issuecomment-390039509)), it would be great if TensorFlow started offering builds against these.\r\n\r\nUbuntu 18.04 has added Python 3.6.\r\n```\r\nHave I written custom code N/A\r\nOS Platform and Distribution Docker\r\nTensorFlow installed from Docker\r\nTensorFlow version N/A\r\nBazel version N/A\r\nCUDA/cuDNN version N/A\r\nGPU model and memory N/A\r\nExact command to reproduce N/A\r\n```"}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19324", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19324/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19324/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19324/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/19324", "id": 323553208, "node_id": "MDU6SXNzdWUzMjM1NTMyMDg=", "number": 19324, "title": "[feature request] large scale embedding for sparse features", "user": {"login": "candyzone", "id": 7778833, "node_id": "MDQ6VXNlcjc3Nzg4MzM=", "avatar_url": "https://avatars0.githubusercontent.com/u/7778833?v=4", "gravatar_id": "", "url": "https://api.github.com/users/candyzone", "html_url": "https://github.com/candyzone", "followers_url": "https://api.github.com/users/candyzone/followers", "following_url": "https://api.github.com/users/candyzone/following{/other_user}", "gists_url": "https://api.github.com/users/candyzone/gists{/gist_id}", "starred_url": "https://api.github.com/users/candyzone/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/candyzone/subscriptions", "organizations_url": "https://api.github.com/users/candyzone/orgs", "repos_url": "https://api.github.com/users/candyzone/repos", "events_url": "https://api.github.com/users/candyzone/events{/privacy}", "received_events_url": "https://api.github.com/users/candyzone/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 299643928, "node_id": "MDU6TGFiZWwyOTk2NDM5Mjg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:contributions%20welcome", "name": "stat:contributions welcome", "color": "f4b400", "default": false, "description": ""}, {"id": 473173272, "node_id": "MDU6TGFiZWw0NzMxNzMyNzI=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:feature", "name": "type:feature", "color": "159b2e", "default": false, "description": ""}], "state": "open", "locked": false, "assignee": {"login": "yuefengz", "id": 1647833, "node_id": "MDQ6VXNlcjE2NDc4MzM=", "avatar_url": "https://avatars0.githubusercontent.com/u/1647833?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yuefengz", "html_url": "https://github.com/yuefengz", "followers_url": "https://api.github.com/users/yuefengz/followers", "following_url": "https://api.github.com/users/yuefengz/following{/other_user}", "gists_url": "https://api.github.com/users/yuefengz/gists{/gist_id}", "starred_url": "https://api.github.com/users/yuefengz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yuefengz/subscriptions", "organizations_url": "https://api.github.com/users/yuefengz/orgs", "repos_url": "https://api.github.com/users/yuefengz/repos", "events_url": "https://api.github.com/users/yuefengz/events{/privacy}", "received_events_url": "https://api.github.com/users/yuefengz/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "yuefengz", "id": 1647833, "node_id": "MDQ6VXNlcjE2NDc4MzM=", "avatar_url": "https://avatars0.githubusercontent.com/u/1647833?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yuefengz", "html_url": "https://github.com/yuefengz", "followers_url": "https://api.github.com/users/yuefengz/followers", "following_url": "https://api.github.com/users/yuefengz/following{/other_user}", "gists_url": "https://api.github.com/users/yuefengz/gists{/gist_id}", "starred_url": "https://api.github.com/users/yuefengz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yuefengz/subscriptions", "organizations_url": "https://api.github.com/users/yuefengz/orgs", "repos_url": "https://api.github.com/users/yuefengz/repos", "events_url": "https://api.github.com/users/yuefengz/events{/privacy}", "received_events_url": "https://api.github.com/users/yuefengz/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 20, "created_at": "2018-05-16T10:04:17Z", "updated_at": "2018-12-26T16:37:33Z", "closed_at": null, "author_association": "CONTRIBUTOR", "body": "### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**: No\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**: Linux CentOS 7\r\n- **TensorFlow installed from (source or binary)**: source\r\n- **TensorFlow version (use command below)**: 1.4.0 release\r\n- **Python version**: python2.7\r\n- **Bazel version (if compiling from source)**: 0.9.0\r\n- **GCC/Compiler version (if compiling from source)**: gcc4.8.5\r\n- **CUDA/cuDNN version**: -\r\n- **GPU model and memory**: -\r\n- **Exact command to reproduce**: -\r\n\r\nIn my scene, training data is very large, we have 10e10 unique values(string) for embedding in one sparse column. In short, model structure is \u201cinput->embedding->NNs\u201d. I set hash_bucket_size to 15e10 for low hash collision. sample code:\r\n```\r\ncol0=tf.contrib.layers.sparse_column_with_hash_bucket(\"feature_id\", hash_bucket_size=1.5e11)\r\ncols=[tf.feature_column.embedding_column(categorical_column=col0, dimension=8)]\r\n```\r\nin above example, Tensorflow new a Variable with shape [1.5e11, 8]\r\nSome problems:\r\n1. memory waste, more than 0.5e11\\*8\\*4Bytes memory not used. \r\n2. hash collision, though enlarging the `hash_bucket_size`, it might occurs conflict. I don't know how much it influence on model. \r\n\r\nIs there any suggestions in Tensorflow in this case ?\r\nIn my opinion: \r\nDefine a new Variable for embedding, need not define the first demension. It will malloc memory for this Variable when the new value is embedding_lookup. It will solve the two problems mentioned above.\r\n\r\nThanks"}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19322", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19322/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19322/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19322/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/19322", "id": 323547266, "node_id": "MDU6SXNzdWUzMjM1NDcyNjY=", "number": 19322, "title": "tf.gfile.GFile deadlocks on HDFS access after a fork()", "user": {"login": "superbobry", "id": 185856, "node_id": "MDQ6VXNlcjE4NTg1Ng==", "avatar_url": "https://avatars1.githubusercontent.com/u/185856?v=4", "gravatar_id": "", "url": "https://api.github.com/users/superbobry", "html_url": "https://github.com/superbobry", "followers_url": "https://api.github.com/users/superbobry/followers", "following_url": "https://api.github.com/users/superbobry/following{/other_user}", "gists_url": "https://api.github.com/users/superbobry/gists{/gist_id}", "starred_url": "https://api.github.com/users/superbobry/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/superbobry/subscriptions", "organizations_url": "https://api.github.com/users/superbobry/orgs", "repos_url": "https://api.github.com/users/superbobry/repos", "events_url": "https://api.github.com/users/superbobry/events{/privacy}", "received_events_url": "https://api.github.com/users/superbobry/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 299643928, "node_id": "MDU6TGFiZWwyOTk2NDM5Mjg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:contributions%20welcome", "name": "stat:contributions welcome", "color": "f4b400", "default": false, "description": ""}, {"id": 473172988, "node_id": "MDU6TGFiZWw0NzMxNzI5ODg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:bug", "name": "type:bug", "color": "159b2e", "default": false, "description": ""}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-05-16T09:50:12Z", "updated_at": "2018-06-10T17:16:45Z", "closed_at": null, "author_association": "MEMBER", "body": "### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**: N/A\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**: macOS 10.13\r\n- **TensorFlow installed from (source or binary)**: binary\r\n- **TensorFlow version (use command below)**: v1.8.0-0-g93bc2e2072 1.8.0\r\n- **Python version**: 3.6\r\n- **Bazel version (if compiling from source)**: N/A\r\n- **GCC/Compiler version (if compiling from source)**: N/A\r\n- **CUDA/cuDNN version**: N/A\r\n- **GPU model and memory**: N/A\r\n- **Exact command to reproduce**: N/A\r\n\r\n### Describe the problem\r\n\r\nAccessing HDFS via `tf.gfile` functions leads to a deadlock (?) if the HDFS has been initialized, i.e. there has been at least a single HDFS call from the parent process. Not sure if this is a `libhdfs` bug, or a TF one. If the former, then maybe #16919 could help.\r\n\r\n### Source code / logs\r\n\r\n#### Case 1: HDFS is not initialized in the parent process\r\n\r\n```python\r\n>>> import tensorflow as tf\r\n>>> def f():\r\n...     print(tf.gfile.ListDirectory(\"hdfs://root/user/[...]\"))\r\n...\r\n>>> from multiprocessing import Process\r\n>>> p = Process(target=f)\r\n>>> p.start()\r\n>>> p.join()\r\nSLF4J: Class path contains multiple SLF4J bindings.\r\nSLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.\r\nSLF4J: Actual binding is of type [org.slf4j.impl.Log4jLoggerFactory]\r\n\r\n['foo', 'bar', 'boo']\r\n```\r\n\r\n#### Case 2: HDFS is initialized in the parent process\r\n\r\n```python\r\n>>> f()\r\nSLF4J: Class path contains multiple SLF4J bindings.\r\nSLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.\r\nSLF4J: Actual binding is of type [org.slf4j.impl.Log4jLoggerFactory]\r\n['foo', 'bar', 'boo']\r\n>>> p = Process(target=f)\r\n>>> p.start()\r\n>>> p.join()  # Never returns.\r\n```"}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19297", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19297/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19297/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19297/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/19297", "id": 323306622, "node_id": "MDU6SXNzdWUzMjMzMDY2MjI=", "number": 19297, "title": "[Feature Request] GCS and S3 support on windows", "user": {"login": "gunan", "id": 7946809, "node_id": "MDQ6VXNlcjc5NDY4MDk=", "avatar_url": "https://avatars3.githubusercontent.com/u/7946809?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gunan", "html_url": "https://github.com/gunan", "followers_url": "https://api.github.com/users/gunan/followers", "following_url": "https://api.github.com/users/gunan/following{/other_user}", "gists_url": "https://api.github.com/users/gunan/gists{/gist_id}", "starred_url": "https://api.github.com/users/gunan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gunan/subscriptions", "organizations_url": "https://api.github.com/users/gunan/orgs", "repos_url": "https://api.github.com/users/gunan/repos", "events_url": "https://api.github.com/users/gunan/events{/privacy}", "received_events_url": "https://api.github.com/users/gunan/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 299643928, "node_id": "MDU6TGFiZWwyOTk2NDM5Mjg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:contributions%20welcome", "name": "stat:contributions welcome", "color": "f4b400", "default": false, "description": ""}], "state": "open", "locked": false, "assignee": {"login": "mihaimaruseac", "id": 323199, "node_id": "MDQ6VXNlcjMyMzE5OQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/323199?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mihaimaruseac", "html_url": "https://github.com/mihaimaruseac", "followers_url": "https://api.github.com/users/mihaimaruseac/followers", "following_url": "https://api.github.com/users/mihaimaruseac/following{/other_user}", "gists_url": "https://api.github.com/users/mihaimaruseac/gists{/gist_id}", "starred_url": "https://api.github.com/users/mihaimaruseac/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mihaimaruseac/subscriptions", "organizations_url": "https://api.github.com/users/mihaimaruseac/orgs", "repos_url": "https://api.github.com/users/mihaimaruseac/repos", "events_url": "https://api.github.com/users/mihaimaruseac/events{/privacy}", "received_events_url": "https://api.github.com/users/mihaimaruseac/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "mihaimaruseac", "id": 323199, "node_id": "MDQ6VXNlcjMyMzE5OQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/323199?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mihaimaruseac", "html_url": "https://github.com/mihaimaruseac", "followers_url": "https://api.github.com/users/mihaimaruseac/followers", "following_url": "https://api.github.com/users/mihaimaruseac/following{/other_user}", "gists_url": "https://api.github.com/users/mihaimaruseac/gists{/gist_id}", "starred_url": "https://api.github.com/users/mihaimaruseac/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mihaimaruseac/subscriptions", "organizations_url": "https://api.github.com/users/mihaimaruseac/orgs", "repos_url": "https://api.github.com/users/mihaimaruseac/repos", "events_url": "https://api.github.com/users/mihaimaruseac/events{/privacy}", "received_events_url": "https://api.github.com/users/mihaimaruseac/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 7, "created_at": "2018-05-15T17:09:49Z", "updated_at": "2020-03-10T22:29:44Z", "closed_at": null, "author_association": "MEMBER", "body": "### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**: Will be required.\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**: Windows, all versions\r\n- **TensorFlow installed from (source or binary)**: source and binary,\r\n- **TensorFlow version (use command below)**: master, and all releases\r\n- **Python version**: python 3+\r\n- **Bazel version (if compiling from source)**: - \r\n- **GCC/Compiler version (if compiling from source)**: - \r\n- **CUDA/cuDNN version**: - \r\n- **GPU model and memory**: - \r\n- **Exact command to reproduce**: Install tf on windows, and try anything that reads from GCS or S3\r\n\r\n### Describe the problem\r\nCurrently, TF has no support for GCS and S3 on windows. Because they depend on curl, and we have not worked to make curl build and work on windows. Someone needs to dive in and work through the problems, and the rest should be just removing the windows exceptions for GCS and S3 support in configure.py.\r\n\r\nThis issue is open for community contributions."}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19295", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19295/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19295/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19295/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/19295", "id": 323278150, "node_id": "MDU6SXNzdWUzMjMyNzgxNTA=", "number": 19295, "title": "[FR] Add warm_start_from in model_to_estimator", "user": {"login": "bhack", "id": 1710528, "node_id": "MDQ6VXNlcjE3MTA1Mjg=", "avatar_url": "https://avatars0.githubusercontent.com/u/1710528?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bhack", "html_url": "https://github.com/bhack", "followers_url": "https://api.github.com/users/bhack/followers", "following_url": "https://api.github.com/users/bhack/following{/other_user}", "gists_url": "https://api.github.com/users/bhack/gists{/gist_id}", "starred_url": "https://api.github.com/users/bhack/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bhack/subscriptions", "organizations_url": "https://api.github.com/users/bhack/orgs", "repos_url": "https://api.github.com/users/bhack/repos", "events_url": "https://api.github.com/users/bhack/events{/privacy}", "received_events_url": "https://api.github.com/users/bhack/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 299643928, "node_id": "MDU6TGFiZWwyOTk2NDM5Mjg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:contributions%20welcome", "name": "stat:contributions welcome", "color": "f4b400", "default": false, "description": ""}, {"id": 473173272, "node_id": "MDU6TGFiZWw0NzMxNzMyNzI=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:feature", "name": "type:feature", "color": "159b2e", "default": false, "description": ""}], "state": "open", "locked": false, "assignee": {"login": "tanzhenyu", "id": 15220929, "node_id": "MDQ6VXNlcjE1MjIwOTI5", "avatar_url": "https://avatars3.githubusercontent.com/u/15220929?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tanzhenyu", "html_url": "https://github.com/tanzhenyu", "followers_url": "https://api.github.com/users/tanzhenyu/followers", "following_url": "https://api.github.com/users/tanzhenyu/following{/other_user}", "gists_url": "https://api.github.com/users/tanzhenyu/gists{/gist_id}", "starred_url": "https://api.github.com/users/tanzhenyu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tanzhenyu/subscriptions", "organizations_url": "https://api.github.com/users/tanzhenyu/orgs", "repos_url": "https://api.github.com/users/tanzhenyu/repos", "events_url": "https://api.github.com/users/tanzhenyu/events{/privacy}", "received_events_url": "https://api.github.com/users/tanzhenyu/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "tanzhenyu", "id": 15220929, "node_id": "MDQ6VXNlcjE1MjIwOTI5", "avatar_url": "https://avatars3.githubusercontent.com/u/15220929?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tanzhenyu", "html_url": "https://github.com/tanzhenyu", "followers_url": "https://api.github.com/users/tanzhenyu/followers", "following_url": "https://api.github.com/users/tanzhenyu/following{/other_user}", "gists_url": "https://api.github.com/users/tanzhenyu/gists{/gist_id}", "starred_url": "https://api.github.com/users/tanzhenyu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tanzhenyu/subscriptions", "organizations_url": "https://api.github.com/users/tanzhenyu/orgs", "repos_url": "https://api.github.com/users/tanzhenyu/repos", "events_url": "https://api.github.com/users/tanzhenyu/events{/privacy}", "received_events_url": "https://api.github.com/users/tanzhenyu/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 25, "created_at": "2018-05-15T15:49:31Z", "updated_at": "2019-04-26T17:26:40Z", "closed_at": null, "author_association": "CONTRIBUTOR", "body": "### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**: N/A\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**: Docker nightly\r\n- **TensorFlow installed from (source or binary)**: Docker nightly\r\n- **TensorFlow version (use command below)**: Docker nightly\r\n- **Python version**: Docker nightly\r\n- **Bazel version (if compiling from source)**: Docker nightly\r\n- **GCC/Compiler version (if compiling from source)**: Docker nightly\r\n- **CUDA/cuDNN version**: Docker nightly\r\n- **GPU model and memory**:  N/A\r\n- **Exact command to reproduce**: N/A\r\n\r\n### Describe the problem\r\nPlease add `warm_start_from` parameter in `tf.model_to_estimator`\r\n\r\n### Source code / logs\r\nN/A"}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19293", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19293/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19293/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19293/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/19293", "id": 323240552, "node_id": "MDU6SXNzdWUzMjMyNDA1NTI=", "number": 19293, "title": "Feature request: Mask R-CNN support on TensorFlow Lite", "user": {"login": "JaviBonilla", "id": 20316179, "node_id": "MDQ6VXNlcjIwMzE2MTc5", "avatar_url": "https://avatars1.githubusercontent.com/u/20316179?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JaviBonilla", "html_url": "https://github.com/JaviBonilla", "followers_url": "https://api.github.com/users/JaviBonilla/followers", "following_url": "https://api.github.com/users/JaviBonilla/following{/other_user}", "gists_url": "https://api.github.com/users/JaviBonilla/gists{/gist_id}", "starred_url": "https://api.github.com/users/JaviBonilla/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JaviBonilla/subscriptions", "organizations_url": "https://api.github.com/users/JaviBonilla/orgs", "repos_url": "https://api.github.com/users/JaviBonilla/repos", "events_url": "https://api.github.com/users/JaviBonilla/events{/privacy}", "received_events_url": "https://api.github.com/users/JaviBonilla/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 750616506, "node_id": "MDU6TGFiZWw3NTA2MTY1MDY=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/comp:lite", "name": "comp:lite", "color": "0052cc", "default": false, "description": ""}, {"id": 473173272, "node_id": "MDU6TGFiZWw0NzMxNzMyNzI=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:feature", "name": "type:feature", "color": "159b2e", "default": false, "description": ""}], "state": "open", "locked": false, "assignee": {"login": "miaout17", "id": 22063, "node_id": "MDQ6VXNlcjIyMDYz", "avatar_url": "https://avatars0.githubusercontent.com/u/22063?v=4", "gravatar_id": "", "url": "https://api.github.com/users/miaout17", "html_url": "https://github.com/miaout17", "followers_url": "https://api.github.com/users/miaout17/followers", "following_url": "https://api.github.com/users/miaout17/following{/other_user}", "gists_url": "https://api.github.com/users/miaout17/gists{/gist_id}", "starred_url": "https://api.github.com/users/miaout17/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/miaout17/subscriptions", "organizations_url": "https://api.github.com/users/miaout17/orgs", "repos_url": "https://api.github.com/users/miaout17/repos", "events_url": "https://api.github.com/users/miaout17/events{/privacy}", "received_events_url": "https://api.github.com/users/miaout17/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "miaout17", "id": 22063, "node_id": "MDQ6VXNlcjIyMDYz", "avatar_url": "https://avatars0.githubusercontent.com/u/22063?v=4", "gravatar_id": "", "url": "https://api.github.com/users/miaout17", "html_url": "https://github.com/miaout17", "followers_url": "https://api.github.com/users/miaout17/followers", "following_url": "https://api.github.com/users/miaout17/following{/other_user}", "gists_url": "https://api.github.com/users/miaout17/gists{/gist_id}", "starred_url": "https://api.github.com/users/miaout17/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/miaout17/subscriptions", "organizations_url": "https://api.github.com/users/miaout17/orgs", "repos_url": "https://api.github.com/users/miaout17/repos", "events_url": "https://api.github.com/users/miaout17/events{/privacy}", "received_events_url": "https://api.github.com/users/miaout17/received_events", "type": "User", "site_admin": false}, {"login": "jdduke", "id": 479117, "node_id": "MDQ6VXNlcjQ3OTExNw==", "avatar_url": "https://avatars2.githubusercontent.com/u/479117?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jdduke", "html_url": "https://github.com/jdduke", "followers_url": "https://api.github.com/users/jdduke/followers", "following_url": "https://api.github.com/users/jdduke/following{/other_user}", "gists_url": "https://api.github.com/users/jdduke/gists{/gist_id}", "starred_url": "https://api.github.com/users/jdduke/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jdduke/subscriptions", "organizations_url": "https://api.github.com/users/jdduke/orgs", "repos_url": "https://api.github.com/users/jdduke/repos", "events_url": "https://api.github.com/users/jdduke/events{/privacy}", "received_events_url": "https://api.github.com/users/jdduke/received_events", "type": "User", "site_admin": false}, {"login": "srjoglekar246", "id": 2099293, "node_id": "MDQ6VXNlcjIwOTkyOTM=", "avatar_url": "https://avatars3.githubusercontent.com/u/2099293?v=4", "gravatar_id": "", "url": "https://api.github.com/users/srjoglekar246", "html_url": "https://github.com/srjoglekar246", "followers_url": "https://api.github.com/users/srjoglekar246/followers", "following_url": "https://api.github.com/users/srjoglekar246/following{/other_user}", "gists_url": "https://api.github.com/users/srjoglekar246/gists{/gist_id}", "starred_url": "https://api.github.com/users/srjoglekar246/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/srjoglekar246/subscriptions", "organizations_url": "https://api.github.com/users/srjoglekar246/orgs", "repos_url": "https://api.github.com/users/srjoglekar246/repos", "events_url": "https://api.github.com/users/srjoglekar246/events{/privacy}", "received_events_url": "https://api.github.com/users/srjoglekar246/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 41, "created_at": "2018-05-15T14:22:15Z", "updated_at": "2020-02-23T21:18:48Z", "closed_at": null, "author_association": "NONE", "body": "### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**: No\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**: Linux openSUSE Leap 42.3\r\n- **TensorFlow installed from (source or binary)**: Binary\r\n- **TensorFlow version (use command below)**: 1.8.0\r\n- **Python version**: \r\n- **Bazel version (if compiling from source)**:\r\n- **GCC/Compiler version (if compiling from source)**:\r\n- **CUDA/cuDNN version**:\r\n- **GPU model and memory**:\r\n- **Exact command to reproduce**:\r\n\r\n### Describe the problem\r\nThis is a feature request about supporting Mask R-CNN on TensorFlow Lite. Thanks.\r\n\r\n### Source code / logs\r\nCurrently, the following operators are not supported by TensorFlow Lite: `ResizeNearestNeighbor`, `Stack`, and `TensorFlowShape`.\r\n\r\n`Some of the operators in the model are not supported by the standard TensorFlow Lite runtime. If you have a custom implementation for them you can disable this error with --allow_custom_ops. Here is a list of operators for which you will need custom implementations: ResizeNearestNeighbor, Stack, TensorFlowShape.`\r\n\r\n"}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19277", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19277/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19277/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19277/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/19277", "id": 322949394, "node_id": "MDU6SXNzdWUzMjI5NDkzOTQ=", "number": 19277, "title": "SSD mobilenet inference is slower w/ MKL", "user": {"login": "YijinLiu", "id": 10109708, "node_id": "MDQ6VXNlcjEwMTA5NzA4", "avatar_url": "https://avatars1.githubusercontent.com/u/10109708?v=4", "gravatar_id": "", "url": "https://api.github.com/users/YijinLiu", "html_url": "https://github.com/YijinLiu", "followers_url": "https://api.github.com/users/YijinLiu/followers", "following_url": "https://api.github.com/users/YijinLiu/following{/other_user}", "gists_url": "https://api.github.com/users/YijinLiu/gists{/gist_id}", "starred_url": "https://api.github.com/users/YijinLiu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/YijinLiu/subscriptions", "organizations_url": "https://api.github.com/users/YijinLiu/orgs", "repos_url": "https://api.github.com/users/YijinLiu/repos", "events_url": "https://api.github.com/users/YijinLiu/events{/privacy}", "received_events_url": "https://api.github.com/users/YijinLiu/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 404586558, "node_id": "MDU6TGFiZWw0MDQ1ODY1NTg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:community%20support", "name": "stat:community support", "color": "f4b400", "default": false, "description": ""}, {"id": 473172988, "node_id": "MDU6TGFiZWw0NzMxNzI5ODg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:bug", "name": "type:bug", "color": "159b2e", "default": false, "description": ""}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 13, "created_at": "2018-05-14T19:29:07Z", "updated_at": "2018-12-24T09:23:59Z", "closed_at": null, "author_association": "CONTRIBUTOR", "body": "### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**:\r\nNo.\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**:\r\nLinux Ubuntu 16.04\r\n- **TensorFlow installed from (source or binary)**:\r\nSource\r\n- **TensorFlow version (use command below)**:\r\n1.8.0 (could repro the same problem from head too)\r\n- **Python version**: \r\nN/A\r\n- **Bazel version (if compiling from source)**:\r\n0.13.0\r\n- **GCC/Compiler version (if compiling from source)**:\r\n5.4.0\r\n- **CUDA/cuDNN version**:\r\nN/A\r\n- **GPU model and memory**:\r\nN/A\r\n- **Exact command to reproduce**:\r\nOMP_NUM_THREADS=1 bazel run --config=mkl --config=opt --config=monolithic //tensorflow/tools/benchmark:benchmark_model -- --graph=ssd_mobilenet_v2_coco_2018_03_29_frozen.pb --show_flops --input_layer=image_tensor --input_layer_type=uint8 --input_layer_shape=1,1920,1080,3 --output_layer=num_detections,detection_classes,detection_scores,detection_boxes --num_threads=1\r\n\r\n### Describe the problem\r\nw/ MKL, benchmark_model got 18.98B FLOPs/second, w/o MKL, it got 25.61B.\r\nFrom the benchmark_model results, we could see that _MklConv2DWithBias is the culprit.\r\nI am using MKL 2018.2.199 and mkldnn 0.14 on a i7-5557U CPU.\r\n\r\nA unrelated question: @agramesh1 I filed the same bug on [mkldnn](https://github.com/intel/mkl-dnn/issues/234). They told me you have some plan to implement MKL version of DepthwiseConv2dNative. Do you have a timeline for it? I am eager to try it..\r\n\r\nbenchmark_model results:\r\n\r\n w/ MKL\r\n\r\n             [Node type]  [count]  [avg ms]    [avg %]    [cdf %]  [mem KB][times called]\r\n       _MklConv2DWithBias       12   143.936    42.710%    42.710% 56555.531       12\r\n               _MklConv2D       43    48.872    14.502%    57.212% 43206.305       43\r\n      DepthwiseConv2dNative       21    27.330     8.110%    65.321% 17180.992       21\r\n                  _MklMul       43    12.751     3.784%    69.105% 32070.080       43\r\n                  _MklAdd       53    12.137     3.601%    72.706% 33662.238       53\r\n                     Cast      183    11.584     3.437%    76.143% 24883.217      183\r\n        _MklInputConversion       96    10.990     3.261%    79.404% 32261.969       96\r\n                    Const     1602    10.360     3.074%    82.479%     0.000     1602\r\n                      Mul      127     7.063     2.096%    84.574%     0.004      127\r\n                      Add      119     6.541     1.941%    86.515%    15.344      119\r\n                    Relu6       47     3.715     1.102%    87.618%     0.000       47\r\n                  Minimum      451     3.680     1.092%    88.709%     0.000      451\r\n                   Gather      546     3.607     1.070%    89.780%     0.000      546\r\n                    Slice       93     3.543     1.051%    90.831%  1380.240       93\r\n       TensorArrayScatterV3        5     3.261     0.968%    91.799% 25604.012        5\r\n              _MklReshape      107     3.183     0.944%    92.743%   810.972      107\r\n                    Where      180     2.560     0.760%    93.503%     1.440      180\r\n             _MklConcatV2       98     2.260     0.671%    94.173%   782.604       98\r\n                  Greater      183     2.183     0.648%    94.821%   172.533      183\r\n\r\nw/o MKL\r\n\r\n              [Node type]  [count]  [avg ms]    [avg %]    [cdf %]  [mem KB][times called]\r\n                   Conv2D       55   108.692    47.515%    47.515% 32798.539       55\r\n    DepthwiseConv2dNative       21    28.022    12.250%    59.765% 17180.992       21\r\n                      Mul      170    18.866     8.247%    68.012%     0.008      170\r\n                      Add      172    18.460     8.070%    76.082%    15.344      172\r\n                     Cast      183    12.116     5.297%    81.378% 24883.217      183\r\n                   Gather      546     4.815     2.105%    83.483%     0.000      546\r\n     TensorArrayScatterV3        5     3.971     1.736%    85.219% 25604.012        5\r\n                    Relu6       47     3.619     1.582%    86.801%     0.000       47\r\n                    Slice       93     2.915     1.274%    88.075%  1380.240       93\r\n                  Minimum      451     2.877     1.258%    89.333%     0.000      451\r\n                    Const      476     2.802     1.225%    90.558%     0.000      476\r\n                  Maximum      360     2.761     1.207%    91.765%     0.000      360\r\n                  Reshape      287     2.318     1.013%    92.778%     0.000      287\r\n                    Where      180     1.793     0.784%    93.562%     1.440      180\r\n                      Sub      190     1.749     0.765%    94.327%     0.008      190\r\n                    Split      180     1.749     0.765%    95.091%     0.000      180\r\n                  Greater      183     1.220     0.533%    95.625%   172.533      183\r\n                 ConcatV2       99     1.057     0.462%    96.087%   730.868       99\r\n                    Shape      112     1.001     0.438%    96.524%     0.952      112\r\n                  Squeeze       92     0.978     0.428%    96.952%     0.000       92\r\n           ResizeBilinear        1     0.885     0.387%    97.339%  1080.000        1\r\n             StridedSlice      113     0.878     0.384%    97.722%     0.432      113\r\n      NonMaxSuppressionV2       90     0.820     0.358%    98.081%     0.000       90\r\n                Transpose        3     0.706     0.309%    98.390%    92.016        3\r\n                    Enter       26     0.434     0.190%    98.579%     0.000       26\r\n                     Pack       19     0.433     0.189%    98.769%    30.908       19\r\n                ZerosLike       92     0.362     0.158%    98.927%     0.004       92\r\n                  BiasAdd       12     0.326     0.143%    99.069%     0.000       12\r\n            NextIteration        8     0.308     0.135%    99.204%     0.000        8\r\n\r\n\r\n### Source code / logs\r\nI run benchmark_model with MKLDDN_VERBOSE=1 and got this log.\r\nhttps://drive.google.com/file/d/12ClzFKiOryge6So-trXrvEyEk6ycOheY/view?usp=sharing"}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19272", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19272/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19272/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19272/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/19272", "id": 322880502, "node_id": "MDU6SXNzdWUzMjI4ODA1MDI=", "number": 19272, "title": "Gradient Penalty won't execute", "user": {"login": "sarthmit", "id": 19748754, "node_id": "MDQ6VXNlcjE5NzQ4NzU0", "avatar_url": "https://avatars3.githubusercontent.com/u/19748754?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sarthmit", "html_url": "https://github.com/sarthmit", "followers_url": "https://api.github.com/users/sarthmit/followers", "following_url": "https://api.github.com/users/sarthmit/following{/other_user}", "gists_url": "https://api.github.com/users/sarthmit/gists{/gist_id}", "starred_url": "https://api.github.com/users/sarthmit/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sarthmit/subscriptions", "organizations_url": "https://api.github.com/users/sarthmit/orgs", "repos_url": "https://api.github.com/users/sarthmit/repos", "events_url": "https://api.github.com/users/sarthmit/events{/privacy}", "received_events_url": "https://api.github.com/users/sarthmit/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": {"login": "shivaniag", "id": 16565716, "node_id": "MDQ6VXNlcjE2NTY1NzE2", "avatar_url": "https://avatars1.githubusercontent.com/u/16565716?v=4", "gravatar_id": "", "url": "https://api.github.com/users/shivaniag", "html_url": "https://github.com/shivaniag", "followers_url": "https://api.github.com/users/shivaniag/followers", "following_url": "https://api.github.com/users/shivaniag/following{/other_user}", "gists_url": "https://api.github.com/users/shivaniag/gists{/gist_id}", "starred_url": "https://api.github.com/users/shivaniag/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/shivaniag/subscriptions", "organizations_url": "https://api.github.com/users/shivaniag/orgs", "repos_url": "https://api.github.com/users/shivaniag/repos", "events_url": "https://api.github.com/users/shivaniag/events{/privacy}", "received_events_url": "https://api.github.com/users/shivaniag/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "shivaniag", "id": 16565716, "node_id": "MDQ6VXNlcjE2NTY1NzE2", "avatar_url": "https://avatars1.githubusercontent.com/u/16565716?v=4", "gravatar_id": "", "url": "https://api.github.com/users/shivaniag", "html_url": "https://github.com/shivaniag", "followers_url": "https://api.github.com/users/shivaniag/followers", "following_url": "https://api.github.com/users/shivaniag/following{/other_user}", "gists_url": "https://api.github.com/users/shivaniag/gists{/gist_id}", "starred_url": "https://api.github.com/users/shivaniag/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/shivaniag/subscriptions", "organizations_url": "https://api.github.com/users/shivaniag/orgs", "repos_url": "https://api.github.com/users/shivaniag/repos", "events_url": "https://api.github.com/users/shivaniag/events{/privacy}", "received_events_url": "https://api.github.com/users/shivaniag/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 0, "created_at": "2018-05-14T16:01:41Z", "updated_at": "2018-12-14T18:53:32Z", "closed_at": null, "author_association": "NONE", "body": "### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**:\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**: Ubuntu 16.04\r\n- **TensorFlow installed from (source or binary)**: binary (pip install inside conda)\r\n- **TensorFlow version (use command below)**: 1.8.0\r\n- **Python version**: 2.7.9\r\n- **Bazel version (if compiling from source)**:\r\n- **GCC/Compiler version (if compiling from source)**:\r\n- **CUDA/cuDNN version**: 9.0 / 7\r\n- **GPU model and memory**: Nvidia Titan X\r\n- **Exact command to reproduce**:\r\n\r\nI use the following code for Gradient Penalty. The code works fine without gradient penalty but with gradient penalty, the code hangs at the mentioned line (mentioned with -------> ). For some reason, incorporating the gradient in the loss term isn't letting me take the gradient. Is it a bug?\r\n\r\n    def dropout(inp):\r\n            return tf.nn.dropout(inp,0.8)\r\n\r\n    def mnist_svhn(X,noise,reuse=False):\r\n        with tf.variable_scope(\"Encoder/mnist-svhn\",reuse=reuse,initializer=initializer):\r\n            h0 = lrelu(tf.layers.batch_normalization(tf.layers.conv2d(X,32,5,1)))\r\n            h1 = lrelu(tf.layers.batch_normalization(tf.layers.conv2d(h0,64,4,2)))\r\n            h2 = lrelu(tf.layers.batch_normalization(tf.layers.conv2d(h1,128,4,1)))\r\n            h3 = lrelu(tf.layers.batch_normalization(tf.layers.conv2d(h2,256,4,2)))\r\n            h4 = lrelu(tf.layers.batch_normalization(tf.layers.conv2d(h3,256,3,1)))\r\n            h5 = lrelu(tf.layers.batch_normalization(tf.layers.conv2d(h4,256,1,1)))\r\n            h6 = tf.layers.conv2d(h5,256,1,1)\r\n\r\n            h7 = tf.concat([h6,noise],axis=-1)\r\n\r\n            h8 = lrelu(tf.layers.batch_normalization(tf.layers.conv2d_transpose(h7,256,4,1)))\r\n            h9 = lrelu(tf.layers.batch_normalization(tf.layers.conv2d_transpose(h8,128,4,2)))\r\n            h10 = lrelu(tf.layers.batch_normalization(tf.layers.conv2d_transpose(h9,64,4,1)))\r\n            h11 = lrelu(tf.layers.batch_normalization(tf.layers.conv2d_transpose(h10,32,4,2)))\r\n            h12 = lrelu(tf.layers.batch_normalization(tf.layers.conv2d_transpose(h11,3,5,1)))\r\n            h13 = lrelu(tf.layers.batch_normalization(tf.layers.conv2d_transpose(h12,32,1,1)))\r\n            h14 = tf.layers.conv2d_transpose(h13,3,1,1,activation=tf.nn.sigmoid)\r\n\r\n        print h14\r\n\r\n    def svhn_mnist(X,noise,reuse=False):\r\n        with tf.variable_scope(\"Encoder/svhn-mnist\",reuse=reuse,initializer=initializer):\r\n            h0 = lrelu(tf.layers.batch_normalization(tf.layers.conv2d(X,32,5,1)))\r\n            h1 = lrelu(tf.layers.batch_normalization(tf.layers.conv2d(h0,64,4,2)))\r\n            h2 = lrelu(tf.layers.batch_normalization(tf.layers.conv2d(h1,128,4,1)))\r\n            h3 = lrelu(tf.layers.batch_normalization(tf.layers.conv2d(h2,256,4,2)))\r\n            h4 = lrelu(tf.layers.batch_normalization(tf.layers.conv2d(h3,256,4,1)))\r\n            h5 = lrelu(tf.layers.batch_normalization(tf.layers.conv2d(h4,256,1,1)))\r\n            h6 = tf.layers.conv2d(h5,256,1,1)\r\n\r\n            h7 = tf.concat([h6,noise],axis=-1)\r\n\r\n            h8 = lrelu(tf.layers.batch_normalization(tf.layers.conv2d_transpose(h7,256,3,1)))\r\n            h9 = lrelu(tf.layers.batch_normalization(tf.layers.conv2d_transpose(h8,128,4,2)))\r\n            h10 = lrelu(tf.layers.batch_normalization(tf.layers.conv2d_transpose(h9,64,4,1)))\r\n            h11 = lrelu(tf.layers.batch_normalization(tf.layers.conv2d_transpose(h10,32,4,2)))\r\n            h12 = lrelu(tf.layers.batch_normalization(tf.layers.conv2d_transpose(h11,32,5,1)))\r\n            h13 = lrelu(tf.layers.batch_normalization(tf.layers.conv2d_transpose(h12,32,1,1)))\r\n            h14 = tf.layers.conv2d_transpose(h13,1,1,1,activation=tf.nn.sigmoid)\r\n\r\n        return h14\r\n\r\n    def discriminator(X,y,reuse=False):\r\n        with tf.variable_scope(\"Discriminator\",reuse=reuse,initializer=initializer):\r\n            d0 = dropout(lrelu(tf.layers.conv2d(X,32,5,1)))\r\n            d1 = dropout(lrelu(tf.layers.batch_normalization(tf.layers.conv2d(d0,64,4,2))))\r\n            d2 = dropout(lrelu(tf.layers.batch_normalization(tf.layers.conv2d(d1,128,4,1))))\r\n            d3 = dropout(lrelu(tf.layers.batch_normalization(tf.layers.conv2d(d2,256,4,2))))\r\n            d4 = dropout(lrelu(tf.layers.batch_normalization(tf.layers.conv2d(d3,512,4,1))))\r\n\r\n            h0 = dropout(lrelu(tf.layers.conv2d(y,32,5,1)))\r\n            h1 = dropout(lrelu(tf.layers.batch_normalization(tf.layers.conv2d(h0,64,4,2))))\r\n            h2 = dropout(lrelu(tf.layers.batch_normalization(tf.layers.conv2d(h1,128,4,1))))\r\n            h3 = dropout(lrelu(tf.layers.batch_normalization(tf.layers.conv2d(h2,256,4,2))))\r\n            h4 = dropout(lrelu(tf.layers.batch_normalization(tf.layers.conv2d(h3,512,3,1))))\r\n\r\n            final = tf.concat([d4,h4],axis=-1)\r\n\r\n            f0 = dropout(lrelu(tf.layers.conv2d(final,1024,1,1)))\r\n            f1 = dropout(lrelu(tf.layers.conv2d(f0,1024,1,1)))\r\n            f2 = dropout(tf.layers.conv2d(f1,1,1,1))\r\n\r\n        return tf.reshape(f2,[-1,1])\r\n\r\n    def sig_loss(a,b):\r\n        return tf.reduce_sum(tf.nn.sigmoid_cross_entropy_with_logits(logits=a,labels=b),axis=1)\r\n\r\n    def get_vars(name):\r\n        return tf.get_collection(tf.GraphKeys.TRAINABLE_VARIABLES,scope=name)\r\n\r\n    def l2_loss(a,b):\r\n        return tf.reduce_sum(tf.square(a-b),axis=1)\r\n\r\n    X_mnist = tf.placeholder(tf.float32,[None,28,28,1])\r\n    X_svhn = tf.placeholder(tf.float32,[None,32,32,3])\r\n\r\n    epsilon = tf.placeholder(tf.float32,[None,1])\r\n\r\n    z_mnist = tf.placeholder(tf.float32,[None,1,1,32])\r\n    z_svhn = tf.placeholder(tf.float32,[None,1,1,32])\r\n\r\n    Xtr_svhn = mnist_svhn(X_mnist,z_mnist)\r\n    Xtr_mnist = svhn_mnist(X_svhn,z_svhn)\r\n\r\n    sv = discriminator(X_svhn,Xtr_mnist)\r\n    mn = discriminator(Xtr_svhn,X_mnist,True)\r\n\r\n    G_opt = tf.train.AdamOptimizer(learning_rate=1e-4,beta1=0.5)\r\n    D_opt = tf.train.AdamOptimizer(learning_rate=1e-4,beta1=0.5)\r\n\r\n    x_hat = epsilon * X_svhn + (1-epsilon) * Xtr_svhn\r\n    grad_1 = tf.gradients(discriminator(x_hat,svhn_mnist(x_hat,z_svhn,True),True),x_hat)[0]\r\n    x_hat = epsilon * X_mnist + (1-epsilon) * Xtr_mnist\r\n    grad_2 = tf.gradients(discriminator(mnist_svhn(x_hat,z_mnist,True),x_hat,True),x_hat)[0]\r\n\r\n    slopes_1 = tf.sqrt(tf.reduce_sum(tf.square(grad_1),reduction_indices=-1))\r\n    slopes_2 = tf.sqrt(tf.reduce_sum(tf.square(grad_2),reduction_indices=-1))\r\n    grad_penalty = tf.reduce_mean((slopes_1 - 1.)**2) * 5\r\n    grad_penalty += tf.reduce_mean((slopes_2 - 1.)**2) * 5\r\n\r\n    disc_loss = tf.reduce_mean(sig_loss(sv,tf.ones_like(sv))) + \\\r\n                tf.reduce_mean(sig_loss(mn,tf.zeros_like(mn))) + grad_penalty\r\n\r\n    gen_loss = tf.reduce_mean(sig_loss(mn,tf.ones_like(mn))) + \\\r\n                tf.reduce_mean(sig_loss(sv,tf.zeros_like(sv)))\r\n\r\n    g_grad = G_opt.compute_gradients(gen_loss,var_list=get_vars(\"Encoder\"),colocate_gradient_with_ops=True)\r\n    -------> d_grad = D_opt.compute_gradients(disc_loss,var_list=get_vars(\"Discriminator\"),colocate_gradient_with_ops=True)\r\n\r\n    d_step = D_opt.apply_gradients(d_grad)\r\n    g_step = G_opt.apply_gradients(g_grad)"}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19262", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19262/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19262/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19262/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/19262", "id": 322702278, "node_id": "MDU6SXNzdWUzMjI3MDIyNzg=", "number": 19262, "title": "PosixFileSystem::CreateDir should create directory respecting umask", "user": {"login": "voegtlel", "id": 5764745, "node_id": "MDQ6VXNlcjU3NjQ3NDU=", "avatar_url": "https://avatars0.githubusercontent.com/u/5764745?v=4", "gravatar_id": "", "url": "https://api.github.com/users/voegtlel", "html_url": "https://github.com/voegtlel", "followers_url": "https://api.github.com/users/voegtlel/followers", "following_url": "https://api.github.com/users/voegtlel/following{/other_user}", "gists_url": "https://api.github.com/users/voegtlel/gists{/gist_id}", "starred_url": "https://api.github.com/users/voegtlel/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/voegtlel/subscriptions", "organizations_url": "https://api.github.com/users/voegtlel/orgs", "repos_url": "https://api.github.com/users/voegtlel/repos", "events_url": "https://api.github.com/users/voegtlel/events{/privacy}", "received_events_url": "https://api.github.com/users/voegtlel/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": {"login": "tatatodd", "id": 5453737, "node_id": "MDQ6VXNlcjU0NTM3Mzc=", "avatar_url": "https://avatars3.githubusercontent.com/u/5453737?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tatatodd", "html_url": "https://github.com/tatatodd", "followers_url": "https://api.github.com/users/tatatodd/followers", "following_url": "https://api.github.com/users/tatatodd/following{/other_user}", "gists_url": "https://api.github.com/users/tatatodd/gists{/gist_id}", "starred_url": "https://api.github.com/users/tatatodd/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tatatodd/subscriptions", "organizations_url": "https://api.github.com/users/tatatodd/orgs", "repos_url": "https://api.github.com/users/tatatodd/repos", "events_url": "https://api.github.com/users/tatatodd/events{/privacy}", "received_events_url": "https://api.github.com/users/tatatodd/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "tatatodd", "id": 5453737, "node_id": "MDQ6VXNlcjU0NTM3Mzc=", "avatar_url": "https://avatars3.githubusercontent.com/u/5453737?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tatatodd", "html_url": "https://github.com/tatatodd", "followers_url": "https://api.github.com/users/tatatodd/followers", "following_url": "https://api.github.com/users/tatatodd/following{/other_user}", "gists_url": "https://api.github.com/users/tatatodd/gists{/gist_id}", "starred_url": "https://api.github.com/users/tatatodd/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tatatodd/subscriptions", "organizations_url": "https://api.github.com/users/tatatodd/orgs", "repos_url": "https://api.github.com/users/tatatodd/repos", "events_url": "https://api.github.com/users/tatatodd/events{/privacy}", "received_events_url": "https://api.github.com/users/tatatodd/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 0, "created_at": "2018-05-14T07:33:24Z", "updated_at": "2018-12-14T18:53:28Z", "closed_at": null, "author_association": "CONTRIBUTOR", "body": "### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**: Yes\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**: Linux Ubuntu 16.04\r\n- **TensorFlow installed from (source or binary)**: binary\r\n- **TensorFlow version (use command below)**: 1.8.0\r\n- **Python version**: 3.6.5\r\n- **Bazel version (if compiling from source)**: N/A\r\n- **GCC/Compiler version (if compiling from source)**: N/A\r\n- **CUDA/cuDNN version**: N/A\r\n- **GPU model and memory**: N/A\r\n- **Exact command to reproduce**: See below\r\n\r\n### The Problem\r\nWhen using the EventFileWriter to write event files to a non-existent directory, the directory will be created but will not have group or other permissions, even if the parent directory has the sticky bit set and umask is set to 0777.\r\n\r\nThe problem originates from [posix_file_system.cc:244](https://github.com/tensorflow/tensorflow/blob/e7f158858479400f17a1b6351e9827e3aa83e7ff/tensorflow/core/platform/posix/posix_file_system.cc#L244). Here the mask is set to 0755, which may not be desired. Instead setting this to 0777 will respect the umask, thus work as expected.\r\n\r\n### Source code / logs\r\nThe following code will create the directory \"nonexistent-directory\" with permissions 0755 even when umask is set to 0775 or 0755:\r\n```\r\nfrom tensorflow.python.training.summary_io import SummaryWriterCache\r\nSummaryWriterCache.get(\"nonexistent-directory\")\r\n```\r\n\r\n### Workaround\r\nAs a workaround, the directory can be created before the `SummaryWriterCache` is used:\r\n```\r\nfrom tensorflow.python.training.summary_io import SummaryWriterCache\r\nimport os\r\nos.makedirs(\"nonexistent-directory\", exist_ok=True)\r\nSummaryWriterCache.get(\"nonexistent-directory\")\r\n```\r\nIn this case the umask is respected correctly.\r\n\r\n### Fix\r\nReplacing [posix_file_system.cc:244](https://github.com/tensorflow/tensorflow/blob/e7f158858479400f17a1b6351e9827e3aa83e7ff/tensorflow/core/platform/posix/posix_file_system.cc#L244) by `if (mkdir(TranslateName(name).c_str(), 0777) != 0) {` should fix the problem."}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19245", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19245/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19245/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19245/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/19245", "id": 322504449, "node_id": "MDU6SXNzdWUzMjI1MDQ0NDk=", "number": 19245, "title": "An error occurred while starting the kernel in CNN runing", "user": {"login": "fathi1989", "id": 39053874, "node_id": "MDQ6VXNlcjM5MDUzODc0", "avatar_url": "https://avatars2.githubusercontent.com/u/39053874?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fathi1989", "html_url": "https://github.com/fathi1989", "followers_url": "https://api.github.com/users/fathi1989/followers", "following_url": "https://api.github.com/users/fathi1989/following{/other_user}", "gists_url": "https://api.github.com/users/fathi1989/gists{/gist_id}", "starred_url": "https://api.github.com/users/fathi1989/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fathi1989/subscriptions", "organizations_url": "https://api.github.com/users/fathi1989/orgs", "repos_url": "https://api.github.com/users/fathi1989/repos", "events_url": "https://api.github.com/users/fathi1989/events{/privacy}", "received_events_url": "https://api.github.com/users/fathi1989/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": {"login": "shivaniag", "id": 16565716, "node_id": "MDQ6VXNlcjE2NTY1NzE2", "avatar_url": "https://avatars1.githubusercontent.com/u/16565716?v=4", "gravatar_id": "", "url": "https://api.github.com/users/shivaniag", "html_url": "https://github.com/shivaniag", "followers_url": "https://api.github.com/users/shivaniag/followers", "following_url": "https://api.github.com/users/shivaniag/following{/other_user}", "gists_url": "https://api.github.com/users/shivaniag/gists{/gist_id}", "starred_url": "https://api.github.com/users/shivaniag/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/shivaniag/subscriptions", "organizations_url": "https://api.github.com/users/shivaniag/orgs", "repos_url": "https://api.github.com/users/shivaniag/repos", "events_url": "https://api.github.com/users/shivaniag/events{/privacy}", "received_events_url": "https://api.github.com/users/shivaniag/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "shivaniag", "id": 16565716, "node_id": "MDQ6VXNlcjE2NTY1NzE2", "avatar_url": "https://avatars1.githubusercontent.com/u/16565716?v=4", "gravatar_id": "", "url": "https://api.github.com/users/shivaniag", "html_url": "https://github.com/shivaniag", "followers_url": "https://api.github.com/users/shivaniag/followers", "following_url": "https://api.github.com/users/shivaniag/following{/other_user}", "gists_url": "https://api.github.com/users/shivaniag/gists{/gist_id}", "starred_url": "https://api.github.com/users/shivaniag/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/shivaniag/subscriptions", "organizations_url": "https://api.github.com/users/shivaniag/orgs", "repos_url": "https://api.github.com/users/shivaniag/repos", "events_url": "https://api.github.com/users/shivaniag/events{/privacy}", "received_events_url": "https://api.github.com/users/shivaniag/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 2, "created_at": "2018-05-12T11:38:16Z", "updated_at": "2018-12-14T18:53:23Z", "closed_at": null, "author_association": "NONE", "body": "### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**: Yes\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**: Win 8.1\r\n- **TensorFlow installed from (source or binary)**: source\r\n- **TensorFlow version (use command below)**:  1.7.0 \r\n- **Python version**: 3.6.4\r\n- **Bazel version (if compiling from source)**:\r\n- **GCC/Compiler version (if compiling from source)**: anaconda\r\n- **CUDA/cuDNN version**: 9.0.0  \r\n- **GPU model and memory**:GTX 740m\r\n- **Exact command to reproduce**:\r\n\r\n### Describe the problem\r\nI can run NN code but i can't run CNN code.\r\nwhen i run a CNN code, the kernel suddenly dies. I see this error:\r\n|An error occurred while starting the kernel|\r\n\r\n### Source code / logs\r\nfrom keras.datasets import mnist\r\ndef plot_history(net_history):\r\nhistory = net_history.history\r\nimport matplotlib.pyplot as plt\r\nlosses = history['loss']\r\nval_losses = history['val_loss']\r\naccuracies = history['acc']\r\nval_accuracies = history['val_acc']\r\nplt.xlabel('Epochs')\r\nplt.ylabel('Loss')\r\nplt.plot(losses)\r\nplt.plot(val_losses)\r\nplt.legend(['loss', 'val_loss'])\r\nplt.figure()\r\nplt.xlabel('Epochs')\r\nplt.ylabel('Accuracy')\r\nplt.plot(accuracies)\r\nplt.plot(val_accuracies)\r\nplt.legend(['acc', 'val_acc'])\r\n#========================Load data\r\n(train_images, train_labels), (test_images, test_labels) = mnist.load_data()\r\n\r\n#================Data attributes\r\nprint(\"train_images dimentions: \", train_images.ndim)\r\nprint(\"train_images shape: \", train_images.shape)\r\nprint(\"train_images type: \", train_images.dtype)\r\n\r\nX_train = train_images.reshape(60000, 784)\r\nX_test = test_images.reshape(10000, 784)\r\n\r\nX_train = X_train.astype('float32')\r\nX_test = X_test.astype('float32')\r\n\r\nX_train /= 255\r\nX_test /= 255\r\n\r\nfrom keras.utils import np_utils\r\nY_train = np_utils.to_categorical(train_labels)\r\nY_test = np_utils.to_categorical(test_labels)\r\n\r\n#==============Creating our model====================================\r\nfrom keras.models import Sequential\r\nfrom keras.layers import Dense, Dropout\r\nfrom keras.optimizers import SGD\r\nfrom keras.losses import categorical_crossentropy\r\n\r\nmyModel = Sequential()\r\nmyModel.add(Dense(500, activation='relu', input_shape=(784,)))\r\nmyModel.add(Dropout(20))\r\nmyModel.add(Dense(100, activation='relu'))\r\nmyModel.add(Dropout(20))\r\nmyModel.add(Dense(10, activation='softmax'))\r\n\r\nmyModel.summary()\r\nmyModel.compile(optimizer=SGD(lr=0.001), loss=categorical_crossentropy, metrics=['accuracy'])\r\n\r\n#=====Train our model=============================================\r\nnetwork_history = myModel.fit(X_train, Y_train, batch_size=128, epochs=20, validation_split=0.2)\r\nplot_history(network_history)\r\n\r\n#=============Evaluation========================================\r\ntest_loss, test_acc = myModel.evaluate(X_test, Y_test)\r\ntest_labels_p = myModel.predict(X_test)\r\nimport numpy as np\r\ntest_labels_p = np.argmax(test_labels_p, axis=1)\r\n\r\n#=========== Change layers config================\r\nmyModel.layers[0].name = 'Layer_0'\r\nmyModel.layers[0].trainable = False\r\nmyModel.layers[0].get_config()"}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19241", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19241/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19241/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19241/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/19241", "id": 322485922, "node_id": "MDU6SXNzdWUzMjI0ODU5MjI=", "number": 19241, "title": "[Eager] Fix for determining input / output shape of the model prior to Model.fit()", "user": {"login": "titu1994", "id": 3048602, "node_id": "MDQ6VXNlcjMwNDg2MDI=", "avatar_url": "https://avatars1.githubusercontent.com/u/3048602?v=4", "gravatar_id": "", "url": "https://api.github.com/users/titu1994", "html_url": "https://github.com/titu1994", "followers_url": "https://api.github.com/users/titu1994/followers", "following_url": "https://api.github.com/users/titu1994/following{/other_user}", "gists_url": "https://api.github.com/users/titu1994/gists{/gist_id}", "starred_url": "https://api.github.com/users/titu1994/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/titu1994/subscriptions", "organizations_url": "https://api.github.com/users/titu1994/orgs", "repos_url": "https://api.github.com/users/titu1994/repos", "events_url": "https://api.github.com/users/titu1994/events{/privacy}", "received_events_url": "https://api.github.com/users/titu1994/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 736653459, "node_id": "MDU6TGFiZWw3MzY2NTM0NTk=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/comp:eager", "name": "comp:eager", "color": "0052cc", "default": false, "description": ""}], "state": "open", "locked": false, "assignee": {"login": "karmel", "id": 667809, "node_id": "MDQ6VXNlcjY2NzgwOQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/667809?v=4", "gravatar_id": "", "url": "https://api.github.com/users/karmel", "html_url": "https://github.com/karmel", "followers_url": "https://api.github.com/users/karmel/followers", "following_url": "https://api.github.com/users/karmel/following{/other_user}", "gists_url": "https://api.github.com/users/karmel/gists{/gist_id}", "starred_url": "https://api.github.com/users/karmel/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/karmel/subscriptions", "organizations_url": "https://api.github.com/users/karmel/orgs", "repos_url": "https://api.github.com/users/karmel/repos", "events_url": "https://api.github.com/users/karmel/events{/privacy}", "received_events_url": "https://api.github.com/users/karmel/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "karmel", "id": 667809, "node_id": "MDQ6VXNlcjY2NzgwOQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/667809?v=4", "gravatar_id": "", "url": "https://api.github.com/users/karmel", "html_url": "https://github.com/karmel", "followers_url": "https://api.github.com/users/karmel/followers", "following_url": "https://api.github.com/users/karmel/following{/other_user}", "gists_url": "https://api.github.com/users/karmel/gists{/gist_id}", "starred_url": "https://api.github.com/users/karmel/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/karmel/subscriptions", "organizations_url": "https://api.github.com/users/karmel/orgs", "repos_url": "https://api.github.com/users/karmel/repos", "events_url": "https://api.github.com/users/karmel/events{/privacy}", "received_events_url": "https://api.github.com/users/karmel/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 8, "created_at": "2018-05-12T05:59:41Z", "updated_at": "2019-12-30T19:28:45Z", "closed_at": null, "author_association": "NONE", "body": "### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**: Yes\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**: Windows 10 Home Edition\r\n- **TensorFlow installed from (source or binary)**: Windows binary\r\n- **TensorFlow version (use command below)**: Github version 'v1.8.0-0-g93bc2e2072' 1.8.0TF (GPU) \r\n- **Python version**: 3.5\r\n- **Bazel version (if compiling from source)**: N/A\r\n- **GCC/Compiler version (if compiling from source)**: N/A\r\n- **CUDA/cuDNN version**: CUDA 9.0 / cuDNN 7.0.5\r\n- **GPU model and memory**: NVIDIA GTX 980M\r\n- **Exact command to reproduce**: Provided below as a standalone script\r\n\r\nYou can collect some of this information using our environment capture script:\r\n\r\nhttps://github.com/tensorflow/tensorflow/tree/master/tools/tf_env_collect.sh\r\n\r\nYou can obtain the TensorFlow version with\r\n\r\npython -c \"import tensorflow as tf; print(tf.GIT_VERSION, tf.VERSION)\"\r\n\r\n### Describe the problem\r\nThe issue is that in Eager mode, the two attributes of the Model subclass, `inputs` and `outputs` is undetermined until the first call to `Model.fit(...)`.\r\n\r\nWhen attempting to determine this prior to fitting the model, in the script at location **tensorflow/python/keras/_impl/keras/engine/training.py**, the entire input dataset `X` (passed to .fit(...)) is provided as the input `x` in Line 684 `if not self.inputs: self._set_inputs(x)` inside `_standardize_user_data`.\r\n\r\nDue to this, in eager execution mode, this call is deferred to `_eager_set_inputs(inputs)`. Here, `inputs` is the entire dataset numpy matrix / tensor, and a `Model.call(inputs)` is performed at line 909. \r\n\r\nSince the entire dataset is unable to fit in GPU memory for smaller GPU devices, it causes an OOM error.\r\n\r\nHowever, to determine the input / output shape/s of a model, a single sample tensor is sufficient.\r\n\r\nThe below fix shows that the solution is adequate, and can be implemented by simply extracting a single sample of the entire dataset to determine the input / output shape/s of a model during eager execution.\r\n\r\n**Note : **\r\nIn order to provide indicators to identify where the error occurs, I modified the above mentioned script to print 2 logs to the console, to describe the shape of the \"inputs\" parameter inside `_eager_set_inputs(inputs)`. The lines `Inside training._eager_set_inputs ...` and `***** Providing entire dataset into call *****` are the above logs.\r\n\r\n### Source code / logs\r\n\r\n```python\r\nimport os\r\nimport numpy as np\r\n\r\nimport tensorflow as tf\r\nfrom tensorflow.python.keras.datasets import mnist\r\nfrom tensorflow.contrib.eager.python import tfe\r\n\r\n# enable eager mode\r\ntf.enable_eager_execution()\r\ntf.set_random_seed(0)\r\nnp.random.seed(0)\r\n\r\n# constants\r\nbatch_size = 128\r\nepochs = 10\r\nnum_classes = 10\r\n\r\n# dataset loading\r\n(x_train, y_train), (x_test, y_test) = mnist.load_data()\r\nx_train = x_train.astype('float32') / 255.\r\nx_test = x_test.astype('float32') / 255.\r\nx_train = x_train.reshape((-1, 28, 28, 1))\r\nx_test = x_test.reshape((-1, 28, 28, 1))\r\n\r\n# one hot encode the labels. convert back to numpy as we cannot use a combination of numpy\r\n# and tensors as input to keras\r\ny_train_ohe = tf.one_hot(y_train, depth=num_classes).numpy()\r\ny_test_ohe = tf.one_hot(y_test, depth=num_classes).numpy()\r\n\r\nprint('x train', x_train.shape)\r\nprint('y train', y_train_ohe.shape)\r\nprint('x test', x_test.shape)\r\nprint('y test', y_test_ohe.shape)\r\n\r\nclass CNN(tf.keras.Model):\r\n\r\n    def __init__(self, num_classes):\r\n        super(CNN, self).__init__()\r\n\r\n        self.cnn1 = tf.keras.layers.Conv2D(16, (5, 5), padding='same', strides=(2, 2))\r\n        self.bn1 = tf.keras.layers.BatchNormalization()\r\n        self.cnn2 = tf.keras.layers.Conv2D(32, (5, 5), padding='same', strides=(2, 2))\r\n        self.bn2 = tf.keras.layers.BatchNormalization()\r\n        self.pool = tf.keras.layers.GlobalAveragePooling2D()\r\n        self.classifier = tf.keras.layers.Dense(num_classes)\r\n\r\n    def call(self, inputs, training=None, mask=None):\r\n        # Used to print out the input shape of the entire dataset prior to training loop\r\n        print(inputs.shape)\r\n\r\n        x = self.cnn1(inputs)\r\n        x = self.bn1(x)\r\n        x = tf.nn.relu(x)  # layer 1\r\n        x = tf.nn.relu(self.bn2(self.cnn2(x))) # layer 2\r\n        x = self.pool(x)\r\n        output = self.classifier(x)\r\n\r\n        # softmax op does not exist on the gpu, so always use cpu\r\n        with tf.device('/cpu:0'):\r\n            output = tf.nn.softmax(output)\r\n\r\n        return output\r\n\r\n\r\ndevice = '/cpu:0' if tfe.num_gpus() == 0 else '/gpu:0'\r\n\r\nwith tf.device(device):\r\n    # build model and optimizer\r\n    model = CNN(num_classes)\r\n    model.compile(optimizer=tf.train.AdamOptimizer(0.001), loss='categorical_crossentropy',\r\n                  metrics=['accuracy'])\r\n    \r\n    # suggested fix ; can be incorporated inside `_eager_set_inputs` or `_set_input`\r\n    # Fix = Use exactly one sample from the provided input dataset to determine \r\n    # input/output shape/s for the model\r\n\r\n    # dummy_x = np.zeros((1, 28, 28, 1))\r\n    # model._set_inputs(dummy_x)\r\n\r\n    # train\r\n    model.fit(x_train, y_train_ohe, batch_size=batch_size, epochs=epochs,\r\n              validation_data=(x_test, y_test_ohe), verbose=2)\r\n\r\n    # evaluate on test set\r\n    scores = model.evaluate(x_test, y_test_ohe, batch_size, verbose=2)\r\n    print(\"Final test loss and accuracy :\", scores)\r\n\r\n```\r\n\r\nTruncated log without the fix : (Only tensor allocation summary dump after OOM is truncated)\r\n```python\r\n2018-05-12 00:22:44.208127: I T:\\src\\github\\tensorflow\\tensorflow\\core\\platform\\cpu_feature_guard.cc:140] Your CPU supports instructions that this TensorFlow binary was not compiled to use: AVX2\r\n2018-05-12 00:22:45.385242: I T:\\src\\github\\tensorflow\\tensorflow\\core\\common_runtime\\gpu\\gpu_device.cc:1356] Found device 0 with properties: \r\nname: GeForce GTX 980M major: 5 minor: 2 memoryClockRate(GHz): 1.1265\r\npciBusID: 0000:01:00.0\r\ntotalMemory: 4.00GiB freeMemory: 3.32GiB\r\n2018-05-12 00:22:45.385822: I T:\\src\\github\\tensorflow\\tensorflow\\core\\common_runtime\\gpu\\gpu_device.cc:1435] Adding visible gpu devices: 0\r\n2018-05-12 00:22:45.838116: I T:\\src\\github\\tensorflow\\tensorflow\\core\\common_runtime\\gpu\\gpu_device.cc:923] Device interconnect StreamExecutor with strength 1 edge matrix:\r\n2018-05-12 00:22:45.838626: I T:\\src\\github\\tensorflow\\tensorflow\\core\\common_runtime\\gpu\\gpu_device.cc:929]      0 \r\n2018-05-12 00:22:45.838912: I T:\\src\\github\\tensorflow\\tensorflow\\core\\common_runtime\\gpu\\gpu_device.cc:942] 0:   N \r\n2018-05-12 00:22:45.839762: I T:\\src\\github\\tensorflow\\tensorflow\\core\\common_runtime\\gpu\\gpu_device.cc:1053] Created TensorFlow device (/job:localhost/replica:0/task:0/device:GPU:0 with 3050 MB memory) -> physical GPU (device: 0, name: GeForce GTX 980M, pci bus id: 0000:01:00.0, compute capability: 5.2)\r\nx train (60000, 28, 28, 1)\r\ny train (60000, 10)\r\nx test (10000, 28, 28, 1)\r\ny test (10000, 10)\r\n\r\nInside training._eager_set_inputs ip shape/s [(60000, 28, 28, 1)]  <= Here the input is the entire dataset\r\n***** Providing entire dataset into call *****\r\n(60000, 28, 28, 1)\r\n\r\n2018-05-12 00:22:58.125845: W T:\\src\\github\\tensorflow\\tensorflow\\core\\common_runtime\\bfc_allocator.cc:275] Allocator (GPU_0_bfc) ran out of memory trying to allocate 717.77MiB.  Current allocation summary follows.\r\n\r\n<<< Truncated >>>\r\n\r\n2018-05-12 00:22:58.229153: W T:\\src\\github\\tensorflow\\tensorflow\\core\\framework\\op_kernel.cc:1318] OP_REQUIRES failed at fused_batch_norm_op.cc:263 : Resource exhausted: OOM when allocating tensor with shape[60000,16,14,14] and type float on /job:localhost/replica:0/task:0/device:GPU:0 by allocator GPU_0_bfc\r\nTraceback (most recent call last):\r\n  File \"D:/Users/Yue/PycharmProjects/eager-tutorials/tutorials/04_cnn.py\", line 83, in <module>\r\n    validation_data=(x_test, y_test_ohe), verbose=2)\r\n  File \"D:\\Users\\Yue\\Anaconda3\\lib\\site-packages\\tensorflow\\python\\keras\\_impl\\keras\\engine\\training.py\", line 1147, in fit\r\n    batch_size=batch_size)\r\n  File \"D:\\Users\\Yue\\Anaconda3\\lib\\site-packages\\tensorflow\\python\\keras\\_impl\\keras\\engine\\training.py\", line 685, in _standardize_user_data\r\n    self._set_inputs(x)\r\n  File \"D:\\Users\\Yue\\Anaconda3\\lib\\site-packages\\tensorflow\\python\\keras\\_impl\\keras\\engine\\training.py\", line 871, in _set_inputs\r\n    self._eager_set_inputs(inputs)\r\n  File \"D:\\Users\\Yue\\Anaconda3\\lib\\site-packages\\tensorflow\\python\\keras\\_impl\\keras\\engine\\training.py\", line 914, in _eager_set_inputs\r\n    ops.convert_to_tensor(inputs, dtype=K.floatx()))\r\n  File \"D:/Users/Yue/PycharmProjects/eager-tutorials/tutorials/04_cnn.py\", line 55, in call\r\n    x = self.bn1(x)\r\n  File \"D:\\Users\\Yue\\Anaconda3\\lib\\site-packages\\tensorflow\\python\\keras\\_impl\\keras\\engine\\base_layer.py\", line 314, in __call__\r\n    output = super(Layer, self).__call__(inputs, *args, **kwargs)\r\n  File \"D:\\Users\\Yue\\Anaconda3\\lib\\site-packages\\tensorflow\\python\\layers\\base.py\", line 717, in __call__\r\n    outputs = self.call(inputs, *args, **kwargs)\r\n  File \"D:\\Users\\Yue\\Anaconda3\\lib\\site-packages\\tensorflow\\python\\keras\\_impl\\keras\\layers\\normalization.py\", line 113, in call\r\n    output = super(BatchNormalization, self).call(inputs, training=training)\r\n  File \"D:\\Users\\Yue\\Anaconda3\\lib\\site-packages\\tensorflow\\python\\layers\\normalization.py\", line 501, in call\r\n    outputs = self._fused_batch_norm(inputs, training=training)\r\n  File \"D:\\Users\\Yue\\Anaconda3\\lib\\site-packages\\tensorflow\\python\\layers\\normalization.py\", line 396, in _fused_batch_norm\r\n    training, _fused_batch_norm_training, _fused_batch_norm_inference)\r\n  File \"D:\\Users\\Yue\\Anaconda3\\lib\\site-packages\\tensorflow\\python\\layers\\utils.py\", line 206, in smart_cond\r\n    pred, true_fn=true_fn, false_fn=false_fn, name=name)\r\n  File \"D:\\Users\\Yue\\Anaconda3\\lib\\site-packages\\tensorflow\\python\\framework\\smart_cond.py\", line 56, in smart_cond\r\n    return false_fn()\r\n  File \"D:\\Users\\Yue\\Anaconda3\\lib\\site-packages\\tensorflow\\python\\layers\\normalization.py\", line 393, in _fused_batch_norm_inference\r\n    data_format=self._data_format)\r\n  File \"D:\\Users\\Yue\\Anaconda3\\lib\\site-packages\\tensorflow\\python\\ops\\nn_impl.py\", line 904, in fused_batch_norm\r\n    name=name)\r\n  File \"D:\\Users\\Yue\\Anaconda3\\lib\\site-packages\\tensorflow\\python\\ops\\gen_nn_ops.py\", line 3804, in _fused_batch_norm\r\n    _six.raise_from(_core._status_to_exception(e.code, message), None)\r\n  File \"<string>\", line 3, in raise_from\r\ntensorflow.python.framework.errors_impl.ResourceExhaustedError: OOM when allocating tensor with shape[60000,16,14,14] and type float on /job:localhost/replica:0/task:0/device:GPU:0 by allocator GPU_0_bfc [Op:FusedBatchNorm]\r\n\r\n```\r\n\r\nPartial log with the aforementioned fix\r\n```python\r\n2018-05-12 00:27:23.607020: I T:\\src\\github\\tensorflow\\tensorflow\\core\\platform\\cpu_feature_guard.cc:140] Your CPU supports instructions that this TensorFlow binary was not compiled to use: AVX2\r\n2018-05-12 00:27:24.748056: I T:\\src\\github\\tensorflow\\tensorflow\\core\\common_runtime\\gpu\\gpu_device.cc:1356] Found device 0 with properties: \r\nname: GeForce GTX 980M major: 5 minor: 2 memoryClockRate(GHz): 1.1265\r\npciBusID: 0000:01:00.0\r\ntotalMemory: 4.00GiB freeMemory: 3.32GiB\r\n2018-05-12 00:27:24.748771: I T:\\src\\github\\tensorflow\\tensorflow\\core\\common_runtime\\gpu\\gpu_device.cc:1435] Adding visible gpu devices: 0\r\n2018-05-12 00:27:25.196921: I T:\\src\\github\\tensorflow\\tensorflow\\core\\common_runtime\\gpu\\gpu_device.cc:923] Device interconnect StreamExecutor with strength 1 edge matrix:\r\n2018-05-12 00:27:25.197231: I T:\\src\\github\\tensorflow\\tensorflow\\core\\common_runtime\\gpu\\gpu_device.cc:929]      0 \r\n2018-05-12 00:27:25.197570: I T:\\src\\github\\tensorflow\\tensorflow\\core\\common_runtime\\gpu\\gpu_device.cc:942] 0:   N \r\n2018-05-12 00:27:25.197993: I T:\\src\\github\\tensorflow\\tensorflow\\core\\common_runtime\\gpu\\gpu_device.cc:1053] Created TensorFlow device (/job:localhost/replica:0/task:0/device:GPU:0 with 3050 MB memory) -> physical GPU (device: 0, name: GeForce GTX 980M, pci bus id: 0000:01:00.0, compute capability: 5.2)\r\nx train (60000, 28, 28, 1)\r\ny train (60000, 10)\r\nx test (10000, 28, 28, 1)\r\ny test (10000, 10)\r\n\r\nInside training._eager_set_inputs ip shape/s [(1, 28, 28, 1)]  <= Here the \"dataset\" is the dummy batch\r\n***** Providing entire dataset into call *****\r\n(1, 28, 28, 1)\r\n\r\nTrain on 60000 samples, validate on 10000 samples\r\nEpoch 1/10\r\n(128, 28, 28, 1)\r\n(128, 28, 28, 1)\r\n(128, 28, 28, 1)\r\n(128, 28, 28, 1)\r\n(128, 28, 28, 1)\r\n... repeated for the entire training loop over the batch.\r\n```\r\n"}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19233", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19233/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19233/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19233/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/19233", "id": 322439961, "node_id": "MDU6SXNzdWUzMjI0Mzk5NjE=", "number": 19233, "title": "`foldl` disallows mixing different types of `elems`", "user": {"login": "shengc", "id": 940628, "node_id": "MDQ6VXNlcjk0MDYyOA==", "avatar_url": "https://avatars1.githubusercontent.com/u/940628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/shengc", "html_url": "https://github.com/shengc", "followers_url": "https://api.github.com/users/shengc/followers", "following_url": "https://api.github.com/users/shengc/following{/other_user}", "gists_url": "https://api.github.com/users/shengc/gists{/gist_id}", "starred_url": "https://api.github.com/users/shengc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/shengc/subscriptions", "organizations_url": "https://api.github.com/users/shengc/orgs", "repos_url": "https://api.github.com/users/shengc/repos", "events_url": "https://api.github.com/users/shengc/events{/privacy}", "received_events_url": "https://api.github.com/users/shengc/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": {"login": "skye", "id": 88808, "node_id": "MDQ6VXNlcjg4ODA4", "avatar_url": "https://avatars1.githubusercontent.com/u/88808?v=4", "gravatar_id": "", "url": "https://api.github.com/users/skye", "html_url": "https://github.com/skye", "followers_url": "https://api.github.com/users/skye/followers", "following_url": "https://api.github.com/users/skye/following{/other_user}", "gists_url": "https://api.github.com/users/skye/gists{/gist_id}", "starred_url": "https://api.github.com/users/skye/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/skye/subscriptions", "organizations_url": "https://api.github.com/users/skye/orgs", "repos_url": "https://api.github.com/users/skye/repos", "events_url": "https://api.github.com/users/skye/events{/privacy}", "received_events_url": "https://api.github.com/users/skye/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "skye", "id": 88808, "node_id": "MDQ6VXNlcjg4ODA4", "avatar_url": "https://avatars1.githubusercontent.com/u/88808?v=4", "gravatar_id": "", "url": "https://api.github.com/users/skye", "html_url": "https://github.com/skye", "followers_url": "https://api.github.com/users/skye/followers", "following_url": "https://api.github.com/users/skye/following{/other_user}", "gists_url": "https://api.github.com/users/skye/gists{/gist_id}", "starred_url": "https://api.github.com/users/skye/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/skye/subscriptions", "organizations_url": "https://api.github.com/users/skye/orgs", "repos_url": "https://api.github.com/users/skye/repos", "events_url": "https://api.github.com/users/skye/events{/privacy}", "received_events_url": "https://api.github.com/users/skye/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2018-05-11T21:27:49Z", "updated_at": "2018-12-19T18:45:52Z", "closed_at": null, "author_association": "NONE", "body": "### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**:\r\nyes\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**:\r\nLinux Redhat\r\n- **TensorFlow installed from (source or binary)**:\r\nconda-forge\r\n- **TensorFlow version (use command below)**:\r\n1.6\r\n- **Python version**: \r\n3.6\r\n- **Bazel version (if compiling from source)**:\r\nN/A\r\n- **GCC/Compiler version (if compiling from source)**:\r\nN/A\r\n- **CUDA/cuDNN version**:\r\nN/A (cpu only)\r\n- **GPU model and memory**:\r\nN/A (cpu only)\r\n- **Exact command to reproduce**:\r\n### Describe the problem\r\n### Source code / logs\r\nLook at the following two code snippets. \r\n\r\n```python\r\nscore = tf.foldl(lambda s, x: transitions[x[0], x[1]] + x[2][x[0]] + s, (label[1:], label[:-1], logits), initializer=np.zeros((), dtype=np.float64))\r\n```\r\n\r\n```python\r\nscore = tf.reduce_sum(tf.map_fn(lambda x: transitions[x[0], x[1]] + x[2][x[0]], (label[1:], label[:-1], logits), dtype=tf.float64))\r\n```\r\n\r\nLong story short, the 1st one does not compile, while the second one does. From my view, these 2 operations essentially do the same thing. That said, from the error trace, it seems to me `foldl` disallows mixing different types for the argument of `elems=`, since indeed `label` is of type `tf.int32`, while `logits` is of type `tf.float64`. However the documentation does not indicate that is the case. Could you confirm if that is true ? If yes, can we update the documentation to make it explicit ?\r\n\r\n```python\r\nXXX/lib/python3.6/site-packages/tensorflow/python/ops/functional_ops.py in foldl(fn, elems, initializer, parallel_iterations, back_prop, swap_memory, name)\r\n    107 \r\n    108     # Convert elems to tensor array.\r\n--> 109     elems = ops.convert_to_tensor(elems, name=\"elems\")\r\n    110     n = array_ops.shape(elems)[0]\r\n    111     elems_ta = tensor_array_ops.TensorArray(dtype=elems.dtype, size=n,\r\n\r\nXXX/lib/python3.6/site-packages/tensorflow/python/framework/ops.py in convert_to_tensor(value, dtype, name, preferred_dtype)\r\n    944       name=name,\r\n    945       preferred_dtype=preferred_dtype,\r\n--> 946       as_ref=False)\r\n    947 \r\n    948 \r\n\r\nXXX/lib/python3.6/site-packages/tensorflow/python/framework/ops.py in internal_convert_to_tensor(value, dtype, name, as_ref, preferred_dtype, ctx)\r\n   1034 \r\n   1035     if ret is None:\r\n-> 1036       ret = conversion_func(value, dtype=dtype, name=name, as_ref=as_ref)\r\n   1037 \r\n   1038     if ret is NotImplemented:\r\n\r\nXXX/lib/python3.6/site-packages/tensorflow/python/ops/array_ops.py in _autopacking_conversion_function(v, dtype, name, as_ref)\r\n   1018   if dtype is not None and dtype != inferred_dtype:\r\n   1019     return NotImplemented\r\n-> 1020   return _autopacking_helper(v, inferred_dtype, name or \"packed\")\r\n   1021 \r\n   1022 \r\n\r\nXXX/lib/python3.6/site-packages/tensorflow/python/ops/array_ops.py in _autopacking_helper(list_or_tuple, dtype, name)\r\n    960           raise TypeError(\"Cannot convert a list containing a tensor of dtype \"\r\n    961                           \"%s to %s (Tensor is: %r)\" % (elem.dtype, dtype,\r\n--> 962                                                         elem))\r\n    963         converted_elems.append(elem)\r\n    964         must_pack = True\r\n\r\nTypeError: Cannot convert a list containing a tensor of dtype <dtype: 'float64'> to <dtype: 'int32'> (Tensor is: <tf.Tensor 'loss/BiasAdd:0' shape=(?, 5) dtype=float64>)\r\n```"}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19200", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19200/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19200/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19200/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/19200", "id": 321962058, "node_id": "MDU6SXNzdWUzMjE5NjIwNTg=", "number": 19200, "title": "Difference in output between CPU and GPU ", "user": {"login": "annemenini", "id": 13631130, "node_id": "MDQ6VXNlcjEzNjMxMTMw", "avatar_url": "https://avatars0.githubusercontent.com/u/13631130?v=4", "gravatar_id": "", "url": "https://api.github.com/users/annemenini", "html_url": "https://github.com/annemenini", "followers_url": "https://api.github.com/users/annemenini/followers", "following_url": "https://api.github.com/users/annemenini/following{/other_user}", "gists_url": "https://api.github.com/users/annemenini/gists{/gist_id}", "starred_url": "https://api.github.com/users/annemenini/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/annemenini/subscriptions", "organizations_url": "https://api.github.com/users/annemenini/orgs", "repos_url": "https://api.github.com/users/annemenini/repos", "events_url": "https://api.github.com/users/annemenini/events{/privacy}", "received_events_url": "https://api.github.com/users/annemenini/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 473172988, "node_id": "MDU6TGFiZWw0NzMxNzI5ODg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:bug", "name": "type:bug", "color": "159b2e", "default": false, "description": ""}], "state": "open", "locked": false, "assignee": {"login": "sanjoy", "id": 136291, "node_id": "MDQ6VXNlcjEzNjI5MQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/136291?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sanjoy", "html_url": "https://github.com/sanjoy", "followers_url": "https://api.github.com/users/sanjoy/followers", "following_url": "https://api.github.com/users/sanjoy/following{/other_user}", "gists_url": "https://api.github.com/users/sanjoy/gists{/gist_id}", "starred_url": "https://api.github.com/users/sanjoy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sanjoy/subscriptions", "organizations_url": "https://api.github.com/users/sanjoy/orgs", "repos_url": "https://api.github.com/users/sanjoy/repos", "events_url": "https://api.github.com/users/sanjoy/events{/privacy}", "received_events_url": "https://api.github.com/users/sanjoy/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "sanjoy", "id": 136291, "node_id": "MDQ6VXNlcjEzNjI5MQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/136291?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sanjoy", "html_url": "https://github.com/sanjoy", "followers_url": "https://api.github.com/users/sanjoy/followers", "following_url": "https://api.github.com/users/sanjoy/following{/other_user}", "gists_url": "https://api.github.com/users/sanjoy/gists{/gist_id}", "starred_url": "https://api.github.com/users/sanjoy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sanjoy/subscriptions", "organizations_url": "https://api.github.com/users/sanjoy/orgs", "repos_url": "https://api.github.com/users/sanjoy/repos", "events_url": "https://api.github.com/users/sanjoy/events{/privacy}", "received_events_url": "https://api.github.com/users/sanjoy/received_events", "type": "User", "site_admin": false}, {"login": "rmlarsen", "id": 16907534, "node_id": "MDQ6VXNlcjE2OTA3NTM0", "avatar_url": "https://avatars2.githubusercontent.com/u/16907534?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rmlarsen", "html_url": "https://github.com/rmlarsen", "followers_url": "https://api.github.com/users/rmlarsen/followers", "following_url": "https://api.github.com/users/rmlarsen/following{/other_user}", "gists_url": "https://api.github.com/users/rmlarsen/gists{/gist_id}", "starred_url": "https://api.github.com/users/rmlarsen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rmlarsen/subscriptions", "organizations_url": "https://api.github.com/users/rmlarsen/orgs", "repos_url": "https://api.github.com/users/rmlarsen/repos", "events_url": "https://api.github.com/users/rmlarsen/events{/privacy}", "received_events_url": "https://api.github.com/users/rmlarsen/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 31, "created_at": "2018-05-10T14:55:12Z", "updated_at": "2020-02-29T14:03:17Z", "closed_at": null, "author_association": "NONE", "body": "### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**: Custom code\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**: Ubuntu 16.04\r\n- **TensorFlow installed from (source or binary)**: binary\r\n- **TensorFlow version (use command below)**: TF 1.7 and TF 1.8 (v1.8.0-0-g93bc2e2072 1.8.0)\r\n- **Python version**: Python 3.5.4\r\n- **Bazel version (if compiling from source)**: n/a\r\n- **GCC/Compiler version (if compiling from source)**: n/a\r\n- **CUDA/cuDNN version**: CUDA 9.0, cudnn 7.0.5\r\n- **GPU model and memory**: GPU GTX1080\r\n- **Exact command to reproduce**: n/a\r\n\r\n**Problem**\r\nI see a very different output when executing a training on CPU vs. GPU. The problem does not seem to be related to initialization or numerical precision (see investigation): same code, same data, same machine, just switching between GPU and CPU execution by adding `os.environ[\"CUDA_VISIBLE_DEVICES\"]=\"\"` gives fundamentally different results (the loss function differs by several orders of magnitude at the end of the first run of the first epoch).\r\n\r\n**Investigation**\r\nI gave names to all the variables and operations in order to track what was the first operation in the graph where the results differ between CPU and GPU execution. I could actually identify it. In my case, it is a `tf.multiply` (pixel-wise multiplication of complex64 Tensors). I can see that the inputs of that operation are identical (+/- numerical precision), while the outputs are really different: the magnitude of the complex output is consistent but the phase is very different (the real and imaginary parts are both very different). I can tell that the CPU output is the right one.\r\n\r\nUnfortunately, I am not able to reproduce the problem in a unit test (but am still working on it). If I feed the same inputs to `tf.multiply` in a unit test, the CPU and GPU outputs are consistent. I am wondering if the CPU/GPU execution may be affecting the order in which the graph is build/executed, and if there may be interferences somehow.\r\n\r\n**Seeding and reproducibility**\r\nRegarding the seeds, they are all set (graph wise and operation wise), but anyway, the diverging operation does not depend on a seed in this case.\r\n\r\nThe problem is reproducible from one run to the other.\r\n\r\n**Environment dependency**\r\nThe problem occurs with both TF 1.7 and TF 1.8. However, if I switch the environment (same machine, same OS, same code, same data, but python 2.7, TF 1.4), the problem disappears, i.e. the CPU and GPU outputs are consistent.\r\n\r\nAny idea or debugging experiment suggestion is very welcome.\r\n"}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19193", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19193/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19193/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19193/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/19193", "id": 321807379, "node_id": "MDU6SXNzdWUzMjE4MDczNzk=", "number": 19193, "title": "Feature request: tf.pad to pad an image with different values correspond to different channels respectively", "user": {"login": "Kongsea", "id": 4168984, "node_id": "MDQ6VXNlcjQxNjg5ODQ=", "avatar_url": "https://avatars2.githubusercontent.com/u/4168984?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Kongsea", "html_url": "https://github.com/Kongsea", "followers_url": "https://api.github.com/users/Kongsea/followers", "following_url": "https://api.github.com/users/Kongsea/following{/other_user}", "gists_url": "https://api.github.com/users/Kongsea/gists{/gist_id}", "starred_url": "https://api.github.com/users/Kongsea/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Kongsea/subscriptions", "organizations_url": "https://api.github.com/users/Kongsea/orgs", "repos_url": "https://api.github.com/users/Kongsea/repos", "events_url": "https://api.github.com/users/Kongsea/events{/privacy}", "received_events_url": "https://api.github.com/users/Kongsea/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 473173272, "node_id": "MDU6TGFiZWw0NzMxNzMyNzI=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:feature", "name": "type:feature", "color": "159b2e", "default": false, "description": ""}], "state": "open", "locked": false, "assignee": {"login": "cy89", "id": 29663194, "node_id": "MDQ6VXNlcjI5NjYzMTk0", "avatar_url": "https://avatars0.githubusercontent.com/u/29663194?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cy89", "html_url": "https://github.com/cy89", "followers_url": "https://api.github.com/users/cy89/followers", "following_url": "https://api.github.com/users/cy89/following{/other_user}", "gists_url": "https://api.github.com/users/cy89/gists{/gist_id}", "starred_url": "https://api.github.com/users/cy89/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cy89/subscriptions", "organizations_url": "https://api.github.com/users/cy89/orgs", "repos_url": "https://api.github.com/users/cy89/repos", "events_url": "https://api.github.com/users/cy89/events{/privacy}", "received_events_url": "https://api.github.com/users/cy89/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "cy89", "id": 29663194, "node_id": "MDQ6VXNlcjI5NjYzMTk0", "avatar_url": "https://avatars0.githubusercontent.com/u/29663194?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cy89", "html_url": "https://github.com/cy89", "followers_url": "https://api.github.com/users/cy89/followers", "following_url": "https://api.github.com/users/cy89/following{/other_user}", "gists_url": "https://api.github.com/users/cy89/gists{/gist_id}", "starred_url": "https://api.github.com/users/cy89/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cy89/subscriptions", "organizations_url": "https://api.github.com/users/cy89/orgs", "repos_url": "https://api.github.com/users/cy89/repos", "events_url": "https://api.github.com/users/cy89/events{/privacy}", "received_events_url": "https://api.github.com/users/cy89/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 7, "created_at": "2018-05-10T04:40:48Z", "updated_at": "2018-12-19T18:45:43Z", "closed_at": null, "author_association": "CONTRIBUTOR", "body": "### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**: yes\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**: Ubuntu 16.04\r\n- **TensorFlow installed from (source)**: source\r\n- **TensorFlow version (use command below)**: 1.4.1\r\n- **Python version**: 2.7\r\n- **CUDA/cuDNN version**: 8.0\r\n- **GPU model and memory**: GTX 1080, 8G\r\n\r\n### Describe the problem\r\n\r\n**tf.pad** has a parameter `constant_values` to control the padding values. However, the value need to be a single scalar and it is used to pad all the channels equally.\r\nThen if we want to pad the imagenet mean values [123.68, 116.779, 103.939] to 3 channels of a RGB image tensor respectively, we cannot achieve it by tf.pad.\r\n\r\nSo is it possible to extend tf.pad to be able to pad 3 channels with different values respectively?\r\n"}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19168", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19168/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19168/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19168/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/19168", "id": 321423838, "node_id": "MDU6SXNzdWUzMjE0MjM4Mzg=", "number": 19168, "title": "tf.control_dependencies() not work in a custom_gradient function", "user": {"login": "YantianZha", "id": 9017839, "node_id": "MDQ6VXNlcjkwMTc4Mzk=", "avatar_url": "https://avatars0.githubusercontent.com/u/9017839?v=4", "gravatar_id": "", "url": "https://api.github.com/users/YantianZha", "html_url": "https://github.com/YantianZha", "followers_url": "https://api.github.com/users/YantianZha/followers", "following_url": "https://api.github.com/users/YantianZha/following{/other_user}", "gists_url": "https://api.github.com/users/YantianZha/gists{/gist_id}", "starred_url": "https://api.github.com/users/YantianZha/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/YantianZha/subscriptions", "organizations_url": "https://api.github.com/users/YantianZha/orgs", "repos_url": "https://api.github.com/users/YantianZha/repos", "events_url": "https://api.github.com/users/YantianZha/events{/privacy}", "received_events_url": "https://api.github.com/users/YantianZha/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 404586594, "node_id": "MDU6TGFiZWw0MDQ1ODY1OTQ=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:awaiting%20tensorflower", "name": "stat:awaiting tensorflower", "color": "f4b400", "default": false, "description": ""}, {"id": 473172988, "node_id": "MDU6TGFiZWw0NzMxNzI5ODg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:bug", "name": "type:bug", "color": "159b2e", "default": false, "description": ""}], "state": "open", "locked": false, "assignee": {"login": "skye", "id": 88808, "node_id": "MDQ6VXNlcjg4ODA4", "avatar_url": "https://avatars1.githubusercontent.com/u/88808?v=4", "gravatar_id": "", "url": "https://api.github.com/users/skye", "html_url": "https://github.com/skye", "followers_url": "https://api.github.com/users/skye/followers", "following_url": "https://api.github.com/users/skye/following{/other_user}", "gists_url": "https://api.github.com/users/skye/gists{/gist_id}", "starred_url": "https://api.github.com/users/skye/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/skye/subscriptions", "organizations_url": "https://api.github.com/users/skye/orgs", "repos_url": "https://api.github.com/users/skye/repos", "events_url": "https://api.github.com/users/skye/events{/privacy}", "received_events_url": "https://api.github.com/users/skye/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "skye", "id": 88808, "node_id": "MDQ6VXNlcjg4ODA4", "avatar_url": "https://avatars1.githubusercontent.com/u/88808?v=4", "gravatar_id": "", "url": "https://api.github.com/users/skye", "html_url": "https://github.com/skye", "followers_url": "https://api.github.com/users/skye/followers", "following_url": "https://api.github.com/users/skye/following{/other_user}", "gists_url": "https://api.github.com/users/skye/gists{/gist_id}", "starred_url": "https://api.github.com/users/skye/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/skye/subscriptions", "organizations_url": "https://api.github.com/users/skye/orgs", "repos_url": "https://api.github.com/users/skye/repos", "events_url": "https://api.github.com/users/skye/events{/privacy}", "received_events_url": "https://api.github.com/users/skye/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 0, "created_at": "2018-05-09T04:08:16Z", "updated_at": "2018-12-14T18:53:15Z", "closed_at": null, "author_association": "NONE", "body": "### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**: Y\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**: Ubuntu 16.04\r\n- **TensorFlow installed from (source or binary)**: binary\r\n- **TensorFlow version (use command below)**: r1.8\r\n- **Python version**: 2.7.14\r\n- **GCC/Compiler version (if compiling from source)**: 5.4\r\n- **CUDA/cuDNN version**: 8.0/7.0\r\n- **GPU model and memory**: GTX1080, 8G\r\n- **Bazel version**: N/A\r\n- **Exact command to reproduce**: python test_script.py\r\n\r\n### Describe the problem\r\nThe output for the code below, is not correct. The first value of variable \"assign_var\" is not assigned with 2. The expected output for the 2nd line is: [2 0]. Thus, the approach [here][1] cannot work with \"@tf.custom_gradient\". I don't know if this is a bug or there is a solution for this. Thanks in advance!\r\n\r\n### Source code / logs\r\n@tf.custom_gradient\r\ndef test_func(x):\r\n    i = tf.constant(0)\r\n    id_refs = tf.Variable(tf.zeros((1), tf.int32))\r\n    assign_var = tf.Variable(tf.zeros((2), tf.int32))\r\n    cond = lambda i, id_refs: tf.less(i, 8)\r\n\r\n    def _body(i, id_refs):\r\n      a = tf.assign(assign_var[0], 2)\r\n      id_refs = tf.concat([id_refs, [i]], 0)\r\n      with tf.control_dependencies([a]):\r\n        return i+1, id_refs\r\n\r\n    _, gradRefs = tf.while_loop(cond, _body, [i, id_refs], shape_invariants= \\\r\n      [i.get_shape(), tf.TensorShape([None])])\r\n    def grad(dy):\r\n        return tf.constant(0)\r\n    return assign_var, grad\r\n\r\nx = tf.constant(100.)\r\ny = test_func(x)\r\ndy = tf.gradients(y, x)\r\n\r\ninit_op = tf.global_variables_initializer()\r\nwith tf.Session() as sess:\r\n    sess.run(init_op)\r\n    print(sess.run(dy))\r\n    print(sess.run(y))\r\n\r\nOutput:\r\n[0]\r\n[0 0]\r\n"}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19140", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19140/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19140/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19140/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/19140", "id": 321118945, "node_id": "MDU6SXNzdWUzMjExMTg5NDU=", "number": 19140, "title": "[XLA] input data type support for DT_STRING?", "user": {"login": "ydp", "id": 1532805, "node_id": "MDQ6VXNlcjE1MzI4MDU=", "avatar_url": "https://avatars0.githubusercontent.com/u/1532805?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ydp", "html_url": "https://github.com/ydp", "followers_url": "https://api.github.com/users/ydp/followers", "following_url": "https://api.github.com/users/ydp/following{/other_user}", "gists_url": "https://api.github.com/users/ydp/gists{/gist_id}", "starred_url": "https://api.github.com/users/ydp/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ydp/subscriptions", "organizations_url": "https://api.github.com/users/ydp/orgs", "repos_url": "https://api.github.com/users/ydp/repos", "events_url": "https://api.github.com/users/ydp/events{/privacy}", "received_events_url": "https://api.github.com/users/ydp/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": {"login": "tatatodd", "id": 5453737, "node_id": "MDQ6VXNlcjU0NTM3Mzc=", "avatar_url": "https://avatars3.githubusercontent.com/u/5453737?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tatatodd", "html_url": "https://github.com/tatatodd", "followers_url": "https://api.github.com/users/tatatodd/followers", "following_url": "https://api.github.com/users/tatatodd/following{/other_user}", "gists_url": "https://api.github.com/users/tatatodd/gists{/gist_id}", "starred_url": "https://api.github.com/users/tatatodd/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tatatodd/subscriptions", "organizations_url": "https://api.github.com/users/tatatodd/orgs", "repos_url": "https://api.github.com/users/tatatodd/repos", "events_url": "https://api.github.com/users/tatatodd/events{/privacy}", "received_events_url": "https://api.github.com/users/tatatodd/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "tatatodd", "id": 5453737, "node_id": "MDQ6VXNlcjU0NTM3Mzc=", "avatar_url": "https://avatars3.githubusercontent.com/u/5453737?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tatatodd", "html_url": "https://github.com/tatatodd", "followers_url": "https://api.github.com/users/tatatodd/followers", "following_url": "https://api.github.com/users/tatatodd/following{/other_user}", "gists_url": "https://api.github.com/users/tatatodd/gists{/gist_id}", "starred_url": "https://api.github.com/users/tatatodd/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tatatodd/subscriptions", "organizations_url": "https://api.github.com/users/tatatodd/orgs", "repos_url": "https://api.github.com/users/tatatodd/repos", "events_url": "https://api.github.com/users/tatatodd/events{/privacy}", "received_events_url": "https://api.github.com/users/tatatodd/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 0, "created_at": "2018-05-08T09:55:44Z", "updated_at": "2018-12-19T18:45:39Z", "closed_at": null, "author_association": "NONE", "body": "------------------------\r\n\r\n### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**:  Yes\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**:  CentOS 7.4.1708\r\n- **TensorFlow installed from (source or binary)**:  source\r\n- **TensorFlow version (use command below)**:  1.7.0\r\n- **Python version**:   2.7\r\n- **Bazel version (if compiling from source)**:  0.11.1\r\n- **GCC/Compiler version (if compiling from source)**:  4.8.5\r\n- **CUDA/cuDNN version**:  cuda9 & cuddn6\r\n- **GPU model and memory**:  \r\n- **Exact command to reproduce**:  \r\n\r\n\r\n### Describe the problem\r\nWhat I want to do here is that using XLA to speedup my model inference performance.  so I have a model(think it is just a wide and deep model) trained with Estimator, exported as savedModel format with feature_column, then transform to frozen graph.  Then I followed the [AOT tutorial](https://www.tensorflow.org/performance/xla/tfcompile):\r\n\r\n* prepare my frozen graph.pb\r\n* write a graph_config.pbtxt\r\n* edit BUILD file to add cc_library of my own\r\n* build\r\n\r\nin the meantime, in order to make it work, I have to add 3 more dependency in tf_compile library section of BUILD file(tensorflow/compiler/aot/BUILD). like below:\r\n\r\n```\r\n        \"//tensorflow/core/kernels:example_parsing_ops\",\r\n        \"//tensorflow/core/kernels:lookup_table_op\",\r\n        \"//tensorflow/core/kernels:logging_ops\",\r\n```\r\n\r\nthen, after all dependency error resolved. Following error messages showed up:\r\n\r\n```\r\nINVALID ARGUMENTS: Unsupported type in DataTypeToPrimitiveType string\r\n```\r\n\r\nSo I checked the code here [tensorflow/compiler/tf2xla/type_util.cc](https://github.com/tensorflow/tensorflow/blob/master/tensorflow/compiler/tf2xla/type_util.cc) and here [tensorflow/compiler/xla/xla_data.proto](https://github.com/tensorflow/tensorflow/blob/master/tensorflow/compiler/xla/xla_data.proto); found that XLA actually does not support DT_STRING now. So I would like to know is it possible to support string? why?\r\n\r\n\r\n### Source code / logs\r\n\r\nmy graph.config.pbtxt is like below:\r\n\r\n```\r\nfeed {\r\n  id { node_name: \"input_example_tensor\" }\r\n  shape {\r\n    dim { size: 1 }\r\n  }\r\n}\r\n\r\nfetch {\r\n  id { node_name: \"head/predictions/probabilities\" }\r\n}\r\n```\r\n\r\nbazel build error message:\r\n\r\n```\r\nERROR: /data/tf/tensorflow-1.7.0/tensorflow/compiler/aot/tests/BUILD:155:1: Executing genrule //tensorflow/compiler/aot/tests:gen_feed_graph failed (Exit 1)\r\n2018-05-08 17:49:19.657209: I tensorflow/core/platform/cpu_feature_guard.cc:140] Your CPU supports instructions that this TensorFlow binary was not compiled to use: SSE4.1 SSE4.2 AVX AVX2 FMA\r\nINVALID ARGUMENTS: Unsupported type in DataTypeToPrimitiveType string\r\n\r\ntfcompile performs ahead-of-time compilation of a TensorFlow graph,\r\nresulting in an object file compiled for your target architecture, and a\r\nheader file that gives access to the functionality in the object file.\r\nA typical invocation looks like this:\r\n\r\n   $ tfcompile --graph=mygraph.pb --config=myfile.pbtxt --cpp_class=\"mynamespace::MyComputation\"\r\n\r\nusage: bazel-out/host/bin/tensorflow/compiler/aot/tfcompile\r\nFlags:\r\n\t--graph=\"\"                       \tstring\tInput GraphDef file.  If the file ends in '.pbtxt' it is expected to be in the human-readable proto text format, otherwise it is expected to be in the proto binary format.\r\n\t--config=\"\"                      \tstring\tInput file containing Config proto.  If the file ends in '.pbtxt' it is expected to be in the human-readable proto text format, otherwise it is expected to be in the proto binary format.\r\n\t--dump_fetch_nodes=false         \tbool\tIf set, only flags related to fetches are processed, and the resulting fetch nodes will be dumped to stdout in a comma-separated list.  Typically used to format arguments for other tools, e.g. freeze_graph.\r\n\t--target_triple=\"x86_64-pc-linux\"\tstring\tTarget platform, similar to the clang -target flag.  The general format is <arch><sub>-<vendor>-<sys>-<abi>.  http://clang.llvm.org/docs/CrossCompilation.html#target-triple.\r\n\t--target_cpu=\"\"                  \tstring\tTarget cpu, similar to the clang -mcpu flag.  http://clang.llvm.org/docs/CrossCompilation.html#cpu-fpu-abi\r\n\t--target_features=\"\"             \tstring\tTarget features, e.g. +avx2, +neon, etc.\r\n\t--entry_point=\"entry\"            \tstring\tName of the generated function.  If multiple generated object files will be linked into the same binary, each will need a unique entry point.\r\n\t--cpp_class=\"\"                   \tstring\tName of the generated C++ class, wrapping the generated function.  The syntax of this flag is [[<optional_namespace>::],...]<class_name>.  This mirrors the C++ syntax for referring to a class, where multiple namespaces may precede the class name, separated by double-colons.  The class will be generated in the given namespace(s), or if no namespaces are given, within the global namespace.\r\n\t--out_function_object=\"out_model.o\"\tstring\tOutput object file containing the generated function for the TensorFlow model.\r\n\t--out_header=\"out.h\"             \tstring\tOutput header file name.\r\n\t--out_metadata_object=\"out_helper.o\"\tstring\tOutput object file name containing optional metadata for the generated function.\r\n\t--out_session_module=\"\"          \tstring\tOutput session module proto.\r\n\t--gen_name_to_index=false        \tbool\tGenerate name-to-index data for Lookup{Arg,Result}Index methods.\r\n\t--gen_program_shape=false        \tbool\tGenerate program shape data for the ProgramShape method.\r\n\t--xla_generate_hlo_graph=\"\"      \tstring\tHLO modules matching this regex will be dumped to a .dot file throughout various stages in compilation.\r\n\t--xla_hlo_graph_addresses=false  \tbool\tWith xla_generate_hlo_graph, show addresses of HLO ops in graph dump.\r\n\t--xla_hlo_graph_path=\"\"          \tstring\tWith xla_generate_hlo_graph, dump the graphs into this path.\r\n\t--xla_hlo_dump_as_graphdef=false \tbool\tDump HLO graphs as TensorFlow GraphDefs.\r\n\t--xla_hlo_graph_sharding_color=false\tbool\tAssign colors based on sharding assignments when generating the HLO graphs.\r\n\t--xla_hlo_tfgraph_device_scopes=false\tbool\tWhen generating TensorFlow HLO graphs, if the HLO instructions are assigned to a specific device, prefix the name scope with \"devX\" with X being the device ordinal.\r\n\t--xla_log_hlo_text=\"\"            \tstring\tHLO modules matching this regex will be dumped to LOG(INFO).\r\n\t--xla_generate_hlo_text_to=\"\"    \tstring\tDump all HLO modules as text into the provided directory path.\r\n\t--xla_enable_fast_math=true      \tbool\tEnable unsafe fast-math optimizations in the compiler; this may produce faster code at the expense of some accuracy.\r\n\t--xla_llvm_enable_alias_scope_metadata=true\tbool\tIn LLVM-based backends, enable the emission of !alias.scope metadata in the generated IR.\r\n\t--xla_llvm_enable_noalias_metadata=true\tbool\tIn LLVM-based backends, enable the emission of !noalias metadata in the generated IR.\r\n\t--xla_llvm_enable_invariant_load_metadata=true\tbool\tIn LLVM-based backends, enable the emission of !invariant.load metadata in the generated IR.\r\n\t--xla_llvm_disable_expensive_passes=false\tbool\tIn LLVM-based backends, disable a custom set of expensive optimization passes.\r\n\t--xla_backend_optimization_level=3\tint32\tNumerical optimization level for the XLA compiler backend.\r\n\t--xla_disable_hlo_passes=\"\"      \tstring\tComma-separated list of hlo passes to be disabled. These names must exactly match the passes' names; no whitespace around commas.\r\n\t--xla_embed_ir_in_executable=false\tbool\tEmbed the compiler IR as a string in the executable.\r\n\t--xla_dump_ir_to=\"\"              \tstring\tDump the compiler IR into this directory as individual files.\r\n\t--xla_eliminate_hlo_implicit_broadcast=true\tbool\tEliminate implicit broadcasts when lowering user computations to HLO instructions; use explicit broadcast instead.\r\n\t--xla_cpu_multi_thread_eigen=true\tbool\tWhen generating calls to Eigen in the CPU backend, use multi-threaded Eigen mode.\r\n\t--xla_gpu_cuda_data_dir=\"./cuda_sdk_lib\"\tstring\tIf non-empty, speficies a local directory containing ptxas and nvvm libdevice files; otherwise we use those from runfile directories.\r\n\t--xla_gpu_ftz=false              \tbool\tIf true, flush-to-zero semantics are enabled in the code generated for GPUs.\r\n\t--xla_gpu_disable_multi_streaming=false\tbool\tIf true, multi-streaming in the GPU backend is disabled.\r\n\t--xla_dump_optimized_hlo_proto_to=\"\"\tstring\tDump Hlo after all hlo passes are executed as proto binary into this directory.\r\n\t--xla_dump_unoptimized_hlo_proto_to=\"\"\tstring\tDump HLO before any hlo passes are executed as proto binary into this directory.\r\n\t--xla_dump_per_pass_hlo_proto_to=\"\"\tstring\tDump HLO after each pass as an HloProto in binary file format into this directory.\r\n\t--xla_test_all_output_layouts=false\tbool\tLet ClientLibraryTestBase::ComputeAndCompare* test all permutations of output layouts. For example, with a 3D shape, all permutations of the set {0, 1, 2} are tried.\r\n\t--xla_test_all_input_layouts=false\tbool\tLet ClientLibraryTestBase::ComputeAndCompare* test all permutations of *input* layouts. For example, for 2 input arguments with 2D shape and 4D shape, the computation will run 2! * 4! times for every possible layouts\r\n\t--xla_hlo_profile=false          \tbool\tInstrument the computation to collect per-HLO cycle counts\r\n\t--xla_dump_computations_to=\"\"    \tstring\tDump computations that XLA executes into the provided directory path\r\n\t--xla_dump_executions_to=\"\"      \tstring\tDump parameters and results of computations that XLA executes into the provided directory path\r\n\t--xla_backend_extra_options=\"\"   \tstring\tExtra options to pass to a backend; comma-separated list of 'key=val' strings (=val may be omitted); no whitespace around commas.\r\n\t--xla_reduce_precision=\"\"        \tstring\tDirections for adding reduce-precision operations. Format is 'LOCATION=E,M:OPS;NAMES' where LOCATION is the class of locations in which to insert the operations (e.g., 'OP_OUTPUTS'), E and M are the exponent and matissa bit counts respectively, and OPS and NAMES are comma-separated (no spaces) lists of the operation types and names to which to attach the reduce-precision operations.  The NAMES string and its preceding ';' may be omitted.  This option may be repeated to define multiple sets of added reduce-precision operations.\r\n\t--xla_gpu_use_cudnn_batchnorm=false\tbool\tAllows the GPU backend to implement batchnorm HLOs using cudnn, rather than expanding them to a soup of HLOs.\r\nTarget //tensorflow/compiler/aot/tests:feed_binary failed to build\r\nUse --verbose_failures to see the command lines of failed build steps.\r\nINFO: Elapsed time: 12.475s, Critical Path: 3.04s\r\nFAILED: Build did NOT complete successfully\r\n```"}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19138", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19138/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19138/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19138/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/19138", "id": 321058224, "node_id": "MDU6SXNzdWUzMjEwNTgyMjQ=", "number": 19138, "title": "precision and recall values kept unchanged for some training steps.", "user": {"login": "hhzrz", "id": 17157194, "node_id": "MDQ6VXNlcjE3MTU3MTk0", "avatar_url": "https://avatars0.githubusercontent.com/u/17157194?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hhzrz", "html_url": "https://github.com/hhzrz", "followers_url": "https://api.github.com/users/hhzrz/followers", "following_url": "https://api.github.com/users/hhzrz/following{/other_user}", "gists_url": "https://api.github.com/users/hhzrz/gists{/gist_id}", "starred_url": "https://api.github.com/users/hhzrz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hhzrz/subscriptions", "organizations_url": "https://api.github.com/users/hhzrz/orgs", "repos_url": "https://api.github.com/users/hhzrz/repos", "events_url": "https://api.github.com/users/hhzrz/events{/privacy}", "received_events_url": "https://api.github.com/users/hhzrz/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 473184161, "node_id": "MDU6TGFiZWw0NzMxODQxNjE=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:support", "name": "type:support", "color": "159b2e", "default": false, "description": ""}], "state": "open", "locked": false, "assignee": {"login": "rohan100jain", "id": 144114, "node_id": "MDQ6VXNlcjE0NDExNA==", "avatar_url": "https://avatars2.githubusercontent.com/u/144114?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rohan100jain", "html_url": "https://github.com/rohan100jain", "followers_url": "https://api.github.com/users/rohan100jain/followers", "following_url": "https://api.github.com/users/rohan100jain/following{/other_user}", "gists_url": "https://api.github.com/users/rohan100jain/gists{/gist_id}", "starred_url": "https://api.github.com/users/rohan100jain/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rohan100jain/subscriptions", "organizations_url": "https://api.github.com/users/rohan100jain/orgs", "repos_url": "https://api.github.com/users/rohan100jain/repos", "events_url": "https://api.github.com/users/rohan100jain/events{/privacy}", "received_events_url": "https://api.github.com/users/rohan100jain/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "rohan100jain", "id": 144114, "node_id": "MDQ6VXNlcjE0NDExNA==", "avatar_url": "https://avatars2.githubusercontent.com/u/144114?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rohan100jain", "html_url": "https://github.com/rohan100jain", "followers_url": "https://api.github.com/users/rohan100jain/followers", "following_url": "https://api.github.com/users/rohan100jain/following{/other_user}", "gists_url": "https://api.github.com/users/rohan100jain/gists{/gist_id}", "starred_url": "https://api.github.com/users/rohan100jain/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rohan100jain/subscriptions", "organizations_url": "https://api.github.com/users/rohan100jain/orgs", "repos_url": "https://api.github.com/users/rohan100jain/repos", "events_url": "https://api.github.com/users/rohan100jain/events{/privacy}", "received_events_url": "https://api.github.com/users/rohan100jain/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 2, "created_at": "2018-05-08T06:29:50Z", "updated_at": "2018-12-14T18:53:10Z", "closed_at": null, "author_association": "NONE", "body": "### System information\r\n- Have I written custom code: No, i just use a canned estimator DNNClassifier.\r\n- OS Platform and Distribution: macOS High Sierra\r\n- TensorFlow installed from: pip\r\n- TensorFlow version: 1.8.0\r\n- Bazel version: N/A\r\n- CUDA/cuDNN version: N/A\r\n- GPU model and memory: N/A\r\n- Exact command to reproduce: N/A\r\n\r\n### Describe the problem\r\nI'm using google ml-engine to train a model for ctr-prediction(the training dataset is Imbalanced).\r\nFollowing is the training log screenshot from ml-engine.\r\n![pr-auc](https://user-images.githubusercontent.com/17157194/39740932-52b01a7c-52ca-11e8-8952-820424e38357.jpg)\r\nThe problem is: the **precision** and **recall** values kept unchanged for some training steps as i annotated in the picture(auctually these two values kept unchanged for 2 epochs in this picture). I'm pretty sure this is a bug, but i don't know where is wrong.\r\nDoes any one can check the calculation of these two metrics(precision, recall) for me?"}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19128", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19128/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19128/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19128/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/19128", "id": 320879764, "node_id": "MDU6SXNzdWUzMjA4Nzk3NjQ=", "number": 19128, "title": "build with python3 binary uses wrong path to find Python.h (fix inside)", "user": {"login": "akorzh", "id": 25698784, "node_id": "MDQ6VXNlcjI1Njk4Nzg0", "avatar_url": "https://avatars3.githubusercontent.com/u/25698784?v=4", "gravatar_id": "", "url": "https://api.github.com/users/akorzh", "html_url": "https://github.com/akorzh", "followers_url": "https://api.github.com/users/akorzh/followers", "following_url": "https://api.github.com/users/akorzh/following{/other_user}", "gists_url": "https://api.github.com/users/akorzh/gists{/gist_id}", "starred_url": "https://api.github.com/users/akorzh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/akorzh/subscriptions", "organizations_url": "https://api.github.com/users/akorzh/orgs", "repos_url": "https://api.github.com/users/akorzh/repos", "events_url": "https://api.github.com/users/akorzh/events{/privacy}", "received_events_url": "https://api.github.com/users/akorzh/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 404586558, "node_id": "MDU6TGFiZWw0MDQ1ODY1NTg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:community%20support", "name": "stat:community support", "color": "f4b400", "default": false, "description": ""}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2018-05-07T17:02:31Z", "updated_at": "2018-07-17T22:09:27Z", "closed_at": null, "author_association": "NONE", "body": "I spent few days fighting issue with building tensorflow where it was unable to find Python.h, and seen number of similar issues.\r\nPython.h was installed as a part of python3-devel, but build system wasnt unable to find it.\r\nFinally i figured out that in tensorflow/third_party/py/python_configure.bzl function _get_python_bin was looking for binary by name python, even once i did configure i told it to use /usr/bin/python3\r\n\r\nso i did a workaround by changing python_bin_path=repository_ctx.which(\"python\") to look for python3 instead.\r\n\r\nbut i guess configure should do that for me.\r\n\r\ni had unsupported fedora28 but its not the only distro having both python and python3 binaries"}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19122", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19122/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19122/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19122/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/19122", "id": 320693310, "node_id": "MDU6SXNzdWUzMjA2OTMzMTA=", "number": 19122, "title": "Windows: Adding a new op", "user": {"login": "deepin17", "id": 39017797, "node_id": "MDQ6VXNlcjM5MDE3Nzk3", "avatar_url": "https://avatars1.githubusercontent.com/u/39017797?v=4", "gravatar_id": "", "url": "https://api.github.com/users/deepin17", "html_url": "https://github.com/deepin17", "followers_url": "https://api.github.com/users/deepin17/followers", "following_url": "https://api.github.com/users/deepin17/following{/other_user}", "gists_url": "https://api.github.com/users/deepin17/gists{/gist_id}", "starred_url": "https://api.github.com/users/deepin17/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/deepin17/subscriptions", "organizations_url": "https://api.github.com/users/deepin17/orgs", "repos_url": "https://api.github.com/users/deepin17/repos", "events_url": "https://api.github.com/users/deepin17/events{/privacy}", "received_events_url": "https://api.github.com/users/deepin17/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 299643928, "node_id": "MDU6TGFiZWwyOTk2NDM5Mjg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:contributions%20welcome", "name": "stat:contributions welcome", "color": "f4b400", "default": false, "description": ""}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2018-05-07T06:53:17Z", "updated_at": "2018-05-21T17:54:33Z", "closed_at": null, "author_association": "NONE", "body": "Please go to Stack Overflow for help and support:\r\n\r\nhttps://stackoverflow.com/questions/tagged/tensorflow\r\n\r\nIf you open a GitHub issue, here is our policy:\r\n\r\n1. It must be a bug, a feature request, or a significant problem with documentation (for small docs fixes please send a PR instead).\r\n2. The form below must be filled out.\r\n3. It shouldn't be a TensorBoard issue. Those go [here](https://github.com/tensorflow/tensorboard/issues).\r\n\r\n**Here's why we have that policy**: TensorFlow developers respond to issues. We want to focus on work that benefits the whole community, e.g., fixing bugs and adding features. Support only helps individuals. GitHub also notifies thousands of people when issues are filed. We want them to see you communicating an interesting problem, rather than being redirected to Stack Overflow.\r\n\r\n------------------------\r\n\r\n### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**:yes\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**:windows7\r\n- **TensorFlow installed from (source or binary)**:binary\r\n- **TensorFlow version (use command below)**:1.8.0\r\n- **Python version**: 3.6\r\n- **Bazel version (if compiling from source)**:\r\n- **GCC/Compiler version (if compiling from source)**:6.4.0\r\n- **CUDA/cuDNN version**:\r\n- **GPU model and memory**:\r\n- **Exact command to reproduce**:\r\n\r\nYou can collect some of this information using our environment capture script:\r\n\r\nhttps://github.com/tensorflow/tensorflow/tree/master/tools/tf_env_collect.sh\r\n\r\nYou can obtain the TensorFlow version with\r\n\r\npython -c \"import tensorflow as tf; print(tf.GIT_VERSION, tf.VERSION)\"\r\n\r\n### Describe the problem\r\nDescribe the problem clearly here. Be sure to convey here why it's a bug in TensorFlow or a feature request.\r\nI use pip to install tensorflow, but there is no library I need to compile my op.\r\n### Source code / logs\r\nInclude any logs or source code that would be helpful to diagnose the problem. If including tracebacks, please include the full traceback. Large logs and files should be attached. Try to provide a reproducible test case that is the bare minimum necessary to generate the problem.\r\nTF_CFLAGS=( $(python -c 'import tensorflow as tf; print(\" \".join(tf.sysconfig.get_compile_flags()))') ) TF_LFLAGS=( $(python -c 'import tensorflow as tf; print(\" \".join(tf.sysconfig.get_link_flags()))') ) g++ -std=c++11 -shared zero_out.cc -o zero_out.so -fPIC ${TF_CFLAGS[@]} ${TF_LFLAGS[@]} -O2 /usr/bin/ld: \u627e\u4e0d\u5230 -ltensorflow_framework collect2: \u9519\u8bef\uff1ald \u8fd4\u56de 1"}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19120", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19120/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19120/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19120/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/19120", "id": 320668314, "node_id": "MDU6SXNzdWUzMjA2NjgzMTQ=", "number": 19120, "title": "Cannot build tensorflow on arm with the latest bazel. _pywrap_tensorflow_internal.so: undefined symbol: _ZN10tensorflow9ConcatCPUINS_8bfloat16EEEvPNS_10DeviceBaseERKSt6vectorISt10unique_ptrINS_6TTypesIT_Li2EiE11ConstMatrixESt14default_deleteIS9_EESaISC_EEPNS8_6MatrixE", "user": {"login": "xsolo", "id": 29442364, "node_id": "MDQ6VXNlcjI5NDQyMzY0", "avatar_url": "https://avatars1.githubusercontent.com/u/29442364?v=4", "gravatar_id": "", "url": "https://api.github.com/users/xsolo", "html_url": "https://github.com/xsolo", "followers_url": "https://api.github.com/users/xsolo/followers", "following_url": "https://api.github.com/users/xsolo/following{/other_user}", "gists_url": "https://api.github.com/users/xsolo/gists{/gist_id}", "starred_url": "https://api.github.com/users/xsolo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/xsolo/subscriptions", "organizations_url": "https://api.github.com/users/xsolo/orgs", "repos_url": "https://api.github.com/users/xsolo/repos", "events_url": "https://api.github.com/users/xsolo/events{/privacy}", "received_events_url": "https://api.github.com/users/xsolo/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2018-05-07T04:12:07Z", "updated_at": "2020-03-01T22:53:36Z", "closed_at": null, "author_association": "NONE", "body": "The system:\r\n\r\nHave I written custom code  \r\n- No\r\n\r\nOS Platform and Distribution \r\n- Ubuntu 18.04 LTS on odroid ux4\r\n- OS image is here https://wiki.odroid.com/odroid-xu4/os_images/linux/ubuntu_4.14/20180501\r\n- kernel 4.14\r\n- arm-linux-gnueabihf\r\n\r\nTensorFlow installed from\r\n- git https://github.com/tensorflow\r\n\r\nTensorFlow version\r\n- v1.8.0\r\n\r\nBazel version\r\n- bazel release 0.13.0\r\n- bazel release 0.11.0\r\n\r\nCUDA/cuDNN version\r\n- No\r\n\r\nGPU model and memory\r\n- Mali no Cuda\r\n\r\nUsing built-in specs.\r\nCOLLECT_GCC=gcc\r\nCOLLECT_LTO_WRAPPER=/usr/lib/gcc/arm-linux-gnueabihf/7/lto-wrapper\r\n\r\ngcc version 7.3.0 (Ubuntu/Linaro 7.3.0-16ubuntu3)\r\n**the same issue with gcc 4.8 and 5.5 **\r\n\r\n**Exact command to reproduce**\r\n\r\nbuild -c opt --local_resources 2024,8,1.0  --copt=\"-mcpu=cortex-a15\" --copt=\"-Ofast\"   tensorflow/tools/pip_package:build_pip_package  --action_env=\"LD_LIBRARY_PATH=${LD_LIBRARY_PATH}\" --verbose_failures\r\n\r\n```\r\nERROR: /home/jora/frameworks/tensorflow/tensorflow/tools/api/generator/BUILD:27:1: Executing genrule //tensorflow/tools/api/generator:python_api_gen failed (Exit 1): bash failed: error executing command\r\n  (cd /home/jora/.cache/bazel/_bazel_jora/7dfd049478ee24381bd18645ae9bd0df/execroot/org_tensorflow && \\\r\n  exec env - \\\r\n    LD_LIBRARY_PATH='' \\\r\n    PATH=/home/jora/.local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin:/usr/lib/jvm/java-8-oracle/bin:/usr/lib/jvm/java-8-oracle/db/bin:/usr/lib/jvm/java-8-oracle/jre/bin \\\r\n    PYTHON_BIN_PATH=/usr/bin/python3 \\\r\n    PYTHON_LIB_PATH=/usr/lib/python3/dist-packages \\\r\n    TF_DOWNLOAD_CLANG=0 \\\r\n    TF_NEED_CUDA=0 \\\r\n    TF_NEED_OPENCL_SYCL=0 \\\r\n  /bin/bash -c 'source external/bazel_tools/tools/genrule/genrule-setup.sh; bazel-out/host/bin/tensorflow/tools/api/generator/create_python_api bazel-out/arm-py3-opt/genfiles/tensorflow/tools/api/generator/api/__init__.py bazel-out/arm-py3-opt/genfiles/tensorflow/tools/api/generator/api/app/__init__.py bazel-out/arm-py3-opt/genfiles/tensorflow/tools/api/generator/api/bitwise/__init__.py bazel-out/arm-py3-opt/genfiles/tensorflow/tools/api/generator/api/compat/__init__.py bazel-out/arm-py3-opt/genfiles/tensorflow/tools/api/generator/api/contrib/__init__.py bazel-out/arm-py3-opt/genfiles/tensorflow/tools/api/generator/api/contrib/stat_summarizer/__init__.py bazel-out/arm-py3-opt/genfiles/tensorflow/tools/api/generator/api/data/__init__.py bazel-out/arm-py3-opt/genfiles/tensorflow/tools/api/generator/api/distributions/__init__.py bazel-out/arm-py3-opt/genfiles/tensorflow/tools/api/generator/api/distributions/bijectors/__init__.py bazel-out/arm-py3-opt/genfiles/tensorflow/tools/api/generator/api/errors/__init__.py bazel-out/arm-py3-opt/genfiles/tensorflow/tools/api/generator/api/estimator/__init__.py bazel-out/arm-py3-opt/genfiles/tensorflow/tools/api/generator/api/estimator/export/__init__.py bazel-out/arm-py3-opt/genfiles/tensorflow/tools/api/generator/api/estimator/inputs/__init__.py bazel-out/arm-py3-opt/genfiles/tensorflow/tools/api/generator/api/feature_column/__init__.py bazel-out/arm-py3-opt/genfiles/tensorflow/tools/api/generator/api/gfile/__init__.py bazel-out/arm-py3-opt/genfiles/tensorflow/tools/api/generator/api/graph_util/__init__.py bazel-out/arm-py3-opt/genfiles/tensorflow/tools/api/generator/api/image/__init__.py bazel-out/arm-py3-opt/genfiles/tensorflow/tools/api/generator/api/initializers/__init__.py bazel-out/arm-py3-opt/genfiles/tensorflow/tools/api/generator/api/keras/__init__.py bazel-out/arm-py3-opt/genfiles/tensorflow/tools/api/generator/api/keras/activations/__init__.py bazel-out/arm-py3-opt/genfiles/tensorflow/tools/api/generator/api/keras/applications/__init__.py bazel-out/arm-py3-opt/genfiles/tensorflow/tools/api/generator/api/keras/applications/densenet/__init__.py bazel-out/arm-py3-opt/genfiles/tensorflow/tools/api/generator/api/keras/applications/inception_resnet_v2/__init__.py bazel-out/arm-py3-opt/genfiles/tensorflow/tools/api/generator/api/keras/applications/inception_v3/__init__.py bazel-out/arm-py3-opt/genfiles/tensorflow/tools/api/generator/api/keras/applications/mobilenet/__init__.py bazel-out/arm-py3-opt/genfiles/tensorflow/tools/api/generator/api/keras/applications/nasnet/__init__.py bazel-out/arm-py3-opt/genfiles/tensorflow/tools/api/generator/api/keras/applications/resnet50/__init__.py bazel-out/arm-py3-opt/genfiles/tensorflow/tools/api/generator/api/keras/applications/vgg16/__init__.py bazel-out/arm-py3-opt/genfiles/tensorflow/tools/api/generator/api/keras/applications/vgg19/__init__.py bazel-out/arm-py3-opt/genfiles/tensorflow/tools/api/generator/api/keras/applications/xception/__init__.py bazel-out/arm-py3-opt/genfiles/tensorflow/tools/api/generator/api/keras/backend/__init__.py bazel-out/arm-py3-opt/genfiles/tensorflow/tools/api/generator/api/keras/callbacks/__init__.py bazel-out/arm-py3-opt/genfiles/tensorflow/tools/api/generator/api/keras/constraints/__init__.py bazel-out/arm-py3-opt/genfiles/tensorflow/tools/api/generator/api/keras/datasets/__init__.py bazel-out/arm-py3-opt/genfiles/tensorflow/tools/api/generator/api/keras/datasets/boston_housing/__init__.py bazel-out/arm-py3-opt/genfiles/tensorflow/tools/api/generator/api/keras/datasets/cifar10/__init__.py bazel-out/arm-py3-opt/genfiles/tensorflow/tools/api/generator/api/keras/datasets/cifar100/__init__.py bazel-out/arm-py3-opt/genfiles/tensorflow/tools/api/generator/api/keras/datasets/fashion_mnist/__init__.py bazel-out/arm-py3-opt/genfiles/tensorflow/tools/api/generator/api/keras/datasets/imdb/__init__.py bazel-out/arm-py3-opt/genfiles/tensorflow/tools/api/generator/api/keras/datasets/mnist/__init__.py bazel-out/arm-py3-opt/genfiles/tensorflow/tools/api/generator/api/keras/datasets/reuters/__init__.py bazel-out/arm-py3-opt/genfiles/tensorflow/tools/api/generator/api/keras/estimator/__init__.py bazel-out/arm-py3-opt/genfiles/tensorflow/tools/api/generator/api/keras/initializers/__init__.py bazel-out/arm-py3-opt/genfiles/tensorflow/tools/api/generator/api/keras/layers/__init__.py bazel-out/arm-py3-opt/genfiles/tensorflow/tools/api/generator/api/keras/losses/__init__.py bazel-out/arm-py3-opt/genfiles/tensorflow/tools/api/generator/api/keras/metrics/__init__.py bazel-out/arm-py3-opt/genfiles/tensorflow/tools/api/generator/api/keras/models/__init__.py bazel-out/arm-py3-opt/genfiles/tensorflow/tools/api/generator/api/keras/optimizers/__init__.py bazel-out/arm-py3-opt/genfiles/tensorflow/tools/api/generator/api/keras/preprocessing/__init__.py bazel-out/arm-py3-opt/genfiles/tensorflow/tools/api/generator/api/keras/preprocessing/image/__init__.py bazel-out/arm-py3-opt/genfiles/tensorflow/tools/api/generator/api/keras/preprocessing/sequence/__init__.py bazel-out/arm-py3-opt/genfiles/tensorflow/tools/api/generator/api/keras/preprocessing/text/__init__.py bazel-out/arm-py3-opt/genfiles/tensorflow/tools/api/generator/api/keras/regularizers/__init__.py bazel-out/arm-py3-opt/genfiles/tensorflow/tools/api/generator/api/keras/utils/__init__.py bazel-out/arm-py3-opt/genfiles/tensorflow/tools/api/generator/api/keras/wrappers/__init__.py bazel-out/arm-py3-opt/genfiles/tensorflow/tools/api/generator/api/keras/wrappers/scikit_learn/__init__.py bazel-out/arm-py3-opt/genfiles/tensorflow/tools/api/generator/api/layers/__init__.py bazel-out/arm-py3-opt/genfiles/tensorflow/tools/api/generator/api/linalg/__init__.py bazel-out/arm-py3-opt/genfiles/tensorflow/tools/api/generator/api/logging/__init__.py bazel-out/arm-py3-opt/genfiles/tensorflow/tools/api/generator/api/losses/__init__.py bazel-out/arm-py3-opt/genfiles/tensorflow/tools/api/generator/api/manip/__init__.py bazel-out/arm-py3-opt/genfiles/tensorflow/tools/api/generator/api/math/__init__.py bazel-out/arm-py3-opt/genfiles/tensorflow/tools/api/generator/api/metrics/__init__.py bazel-out/arm-py3-opt/genfiles/tensorflow/tools/api/generator/api/nn/__init__.py bazel-out/arm-py3-opt/genfiles/tensorflow/tools/api/generator/api/nn/rnn_cell/__init__.py bazel-out/arm-py3-opt/genfiles/tensorflow/tools/api/generator/api/profiler/__init__.py bazel-out/arm-py3-opt/genfiles/tensorflow/tools/api/generator/api/python_io/__init__.py bazel-out/arm-py3-opt/genfiles/tensorflow/tools/api/generator/api/resource_loader/__init__.py bazel-out/arm-py3-opt/genfiles/tensorflow/tools/api/generator/api/saved_model/__init__.py bazel-out/arm-py3-opt/genfiles/tensorflow/tools/api/generator/api/saved_model/builder/__init__.py bazel-out/arm-py3-opt/genfiles/tensorflow/tools/api/generator/api/saved_model/constants/__init__.py bazel-out/arm-py3-opt/genfiles/tensorflow/tools/api/generator/api/saved_model/loader/__init__.py bazel-out/arm-py3-opt/genfiles/tensorflow/tools/api/generator/api/saved_model/main_op/__init__.py bazel-out/arm-py3-opt/genfiles/tensorflow/tools/api/generator/api/saved_model/signature_constants/__init__.py bazel-out/arm-py3-opt/genfiles/tensorflow/tools/api/generator/api/saved_model/signature_def_utils/__init__.py bazel-out/arm-py3-opt/genfiles/tensorflow/tools/api/generator/api/saved_model/tag_constants/__init__.py bazel-out/arm-py3-opt/genfiles/tensorflow/tools/api/generator/api/saved_model/utils/__init__.py bazel-out/arm-py3-opt/genfiles/tensorflow/tools/api/generator/api/sets/__init__.py bazel-out/arm-py3-opt/genfiles/tensorflow/tools/api/generator/api/spectral/__init__.py bazel-out/arm-py3-opt/genfiles/tensorflow/tools/api/generator/api/summary/__init__.py bazel-out/arm-py3-opt/genfiles/tensorflow/tools/api/generator/api/sysconfig/__init__.py bazel-out/arm-py3-opt/genfiles/tensorflow/tools/api/generator/api/test/__init__.py bazel-out/arm-py3-opt/genfiles/tensorflow/tools/api/generator/api/train/__init__.py bazel-out/arm-py3-opt/genfiles/tensorflow/tools/api/generator/api/train/queue_runner/__init__.py bazel-out/arm-py3-opt/genfiles/tensorflow/tools/api/generator/api/user_ops/__init__.py')\r\nTraceback (most recent call last):\r\n  File \"/home/jora/.cache/bazel/_bazel_jora/7dfd049478ee24381bd18645ae9bd0df/execroot/org_tensorflow/bazel-out/host/bin/tensorflow/tools/api/generator/create_python_api.runfiles/org_tensorflow/tensorflow/python/pywrap_tensorflow.py\", line 58, in <module>\r\n    from tensorflow.python.pywrap_tensorflow_internal import *\r\n  File \"/home/jora/.cache/bazel/_bazel_jora/7dfd049478ee24381bd18645ae9bd0df/execroot/org_tensorflow/bazel-out/host/bin/tensorflow/tools/api/generator/create_python_api.runfiles/org_tensorflow/tensorflow/python/pywrap_tensorflow_internal.py\", line 28, in <module>\r\n    _pywrap_tensorflow_internal = swig_import_helper()\r\n  File \"/home/jora/.cache/bazel/_bazel_jora/7dfd049478ee24381bd18645ae9bd0df/execroot/org_tensorflow/bazel-out/host/bin/tensorflow/tools/api/generator/create_python_api.runfiles/org_tensorflow/tensorflow/python/pywrap_tensorflow_internal.py\", line 24, in swig_import_helper\r\n    _mod = imp.load_module('_pywrap_tensorflow_internal', fp, pathname, description)\r\n  File \"/usr/lib/python3.6/imp.py\", line 243, in load_module\r\n    return load_dynamic(name, filename, file)\r\n  File \"/usr/lib/python3.6/imp.py\", line 343, in load_dynamic\r\n    return _load(spec)\r\nImportError: /home/jora/.cache/bazel/_bazel_jora/7dfd049478ee24381bd18645ae9bd0df/execroot/org_tensorflow/bazel-out/host/bin/tensorflow/tools/api/generator/create_python_api.runfiles/org_tensorflow/tensorflow/python/_pywrap_tensorflow_internal.so: undefined symbol: _ZN10tensorflow9ConcatCPUINS_8bfloat16EEEvPNS_10DeviceBaseERKSt6vectorISt10unique_ptrINS_6TTypesIT_Li2EiE11ConstMatrixESt14default_deleteIS9_EESaISC_EEPNS8_6MatrixE\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTraceback (most recent call last):\r\n  File \"/home/jora/.cache/bazel/_bazel_jora/7dfd049478ee24381bd18645ae9bd0df/execroot/org_tensorflow/bazel-out/host/bin/tensorflow/tools/api/generator/create_python_api.runfiles/org_tensorflow/tensorflow/tools/api/generator/create_python_api.py\", line 26, in <module>\r\n    from tensorflow.python.util import tf_decorator\r\n  File \"/home/jora/.cache/bazel/_bazel_jora/7dfd049478ee24381bd18645ae9bd0df/execroot/org_tensorflow/bazel-out/host/bin/tensorflow/tools/api/generator/create_python_api.runfiles/org_tensorflow/tensorflow/python/__init__.py\", line 49, in <module>\r\n    from tensorflow.python import pywrap_tensorflow\r\n  File \"/home/jora/.cache/bazel/_bazel_jora/7dfd049478ee24381bd18645ae9bd0df/execroot/org_tensorflow/bazel-out/host/bin/tensorflow/tools/api/generator/create_python_api.runfiles/org_tensorflow/tensorflow/python/pywrap_tensorflow.py\", line 74, in <module>\r\n    raise ImportError(msg)\r\nImportError: Traceback (most recent call last):\r\n  File \"/home/jora/.cache/bazel/_bazel_jora/7dfd049478ee24381bd18645ae9bd0df/execroot/org_tensorflow/bazel-out/host/bin/tensorflow/tools/api/generator/create_python_api.runfiles/org_tensorflow/tensorflow/python/pywrap_tensorflow.py\", line 58, in <module>\r\n    from tensorflow.python.pywrap_tensorflow_internal import *\r\n  File \"/home/jora/.cache/bazel/_bazel_jora/7dfd049478ee24381bd18645ae9bd0df/execroot/org_tensorflow/bazel-out/host/bin/tensorflow/tools/api/generator/create_python_api.runfiles/org_tensorflow/tensorflow/python/pywrap_tensorflow_internal.py\", line 28, in <module>\r\n    _pywrap_tensorflow_internal = swig_import_helper()\r\n  File \"/home/jora/.cache/bazel/_bazel_jora/7dfd049478ee24381bd18645ae9bd0df/execroot/org_tensorflow/bazel-out/host/bin/tensorflow/tools/api/generator/create_python_api.runfiles/org_tensorflow/tensorflow/python/pywrap_tensorflow_internal.py\", line 24, in swig_import_helper\r\n    _mod = imp.load_module('_pywrap_tensorflow_internal', fp, pathname, description)\r\n  File \"/usr/lib/python3.6/imp.py\", line 243, in load_module\r\n    return load_dynamic(name, filename, file)\r\n  File \"/usr/lib/python3.6/imp.py\", line 343, in load_dynamic\r\n    return _load(spec)\r\nImportError: /home/jora/.cache/bazel/_bazel_jora/7dfd049478ee24381bd18645ae9bd0df/execroot/org_tensorflow/bazel-out/host/bin/tensorflow/tools/api/generator/create_python_api.runfiles/org_tensorflow/tensorflow/python/_pywrap_tensorflow_internal.so: undefined symbol: _ZN10tensorflow9ConcatCPUINS_8bfloat16EEEvPNS_10DeviceBaseERKSt6vectorISt10unique_ptrINS_6TTypesIT_Li2EiE11ConstMatrixESt14default_deleteIS9_EESaISC_EEPNS8_6MatrixE\r\n\r\n\r\nFailed to load the native TensorFlow runtime.\r\n\r\nSee https://www.tensorflow.org/install/install_sources#common_installation_problems\r\n\r\nfor some common reasons and solutions.  Include the entire stack trace\r\nabove this error message when asking for help.\r\nTarget //tensorflow/tools/pip_package:build_pip_package failed to build\r\nINFO: Elapsed time: 8968.754s, Critical Path: 2194.12s\r\nINFO: 3040 processes, local.\r\nFAILED: Build did NOT complete successfully\r\n```"}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19108", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19108/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19108/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19108/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/19108", "id": 320522283, "node_id": "MDU6SXNzdWUzMjA1MjIyODM=", "number": 19108, "title": "Set the weights in tf.layers with other variables but not as initializers.", "user": {"login": "siavash-khodadadeh", "id": 9966824, "node_id": "MDQ6VXNlcjk5NjY4MjQ=", "avatar_url": "https://avatars1.githubusercontent.com/u/9966824?v=4", "gravatar_id": "", "url": "https://api.github.com/users/siavash-khodadadeh", "html_url": "https://github.com/siavash-khodadadeh", "followers_url": "https://api.github.com/users/siavash-khodadadeh/followers", "following_url": "https://api.github.com/users/siavash-khodadadeh/following{/other_user}", "gists_url": "https://api.github.com/users/siavash-khodadadeh/gists{/gist_id}", "starred_url": "https://api.github.com/users/siavash-khodadadeh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/siavash-khodadadeh/subscriptions", "organizations_url": "https://api.github.com/users/siavash-khodadadeh/orgs", "repos_url": "https://api.github.com/users/siavash-khodadadeh/repos", "events_url": "https://api.github.com/users/siavash-khodadadeh/events{/privacy}", "received_events_url": "https://api.github.com/users/siavash-khodadadeh/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 473173272, "node_id": "MDU6TGFiZWw0NzMxNzMyNzI=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:feature", "name": "type:feature", "color": "159b2e", "default": false, "description": ""}], "state": "open", "locked": false, "assignee": {"login": "karmel", "id": 667809, "node_id": "MDQ6VXNlcjY2NzgwOQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/667809?v=4", "gravatar_id": "", "url": "https://api.github.com/users/karmel", "html_url": "https://github.com/karmel", "followers_url": "https://api.github.com/users/karmel/followers", "following_url": "https://api.github.com/users/karmel/following{/other_user}", "gists_url": "https://api.github.com/users/karmel/gists{/gist_id}", "starred_url": "https://api.github.com/users/karmel/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/karmel/subscriptions", "organizations_url": "https://api.github.com/users/karmel/orgs", "repos_url": "https://api.github.com/users/karmel/repos", "events_url": "https://api.github.com/users/karmel/events{/privacy}", "received_events_url": "https://api.github.com/users/karmel/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "karmel", "id": 667809, "node_id": "MDQ6VXNlcjY2NzgwOQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/667809?v=4", "gravatar_id": "", "url": "https://api.github.com/users/karmel", "html_url": "https://github.com/karmel", "followers_url": "https://api.github.com/users/karmel/followers", "following_url": "https://api.github.com/users/karmel/following{/other_user}", "gists_url": "https://api.github.com/users/karmel/gists{/gist_id}", "starred_url": "https://api.github.com/users/karmel/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/karmel/subscriptions", "organizations_url": "https://api.github.com/users/karmel/orgs", "repos_url": "https://api.github.com/users/karmel/repos", "events_url": "https://api.github.com/users/karmel/events{/privacy}", "received_events_url": "https://api.github.com/users/karmel/received_events", "type": "User", "site_admin": false}, {"login": "fchollet", "id": 710255, "node_id": "MDQ6VXNlcjcxMDI1NQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/710255?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fchollet", "html_url": "https://github.com/fchollet", "followers_url": "https://api.github.com/users/fchollet/followers", "following_url": "https://api.github.com/users/fchollet/following{/other_user}", "gists_url": "https://api.github.com/users/fchollet/gists{/gist_id}", "starred_url": "https://api.github.com/users/fchollet/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fchollet/subscriptions", "organizations_url": "https://api.github.com/users/fchollet/orgs", "repos_url": "https://api.github.com/users/fchollet/repos", "events_url": "https://api.github.com/users/fchollet/events{/privacy}", "received_events_url": "https://api.github.com/users/fchollet/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 7, "created_at": "2018-05-05T16:27:56Z", "updated_at": "2020-01-14T09:49:14Z", "closed_at": null, "author_association": "NONE", "body": "### System information\r\n- **Have I written custom code**: N/A (There is no example of meta learning with tf.layers)\r\n- **OS Platform and Distribution**: Linux Ubuntu 16.04\r\n- **TensorFlow installed from**: Installed tf-nightly with pip \r\n- **TensorFlow version**: v1.8.0-rc1-934-g291d85be42 1.9.0-dev20180426\r\n- **Python version**: 3.5.2 \r\n- **Bazel version**: N/A\r\n- **GCC/Compiler version**: N/A\r\n- **CUDA/cuDNN version**: N/A\r\n- **GPU model and memory**: N/A\r\n- **Exact command to reproduce**: N/A\r\n\r\n### Describe the problem\r\nNowadays, with advances in deep learning, the researchers sometimes need to set the weights of their model based on some formula (not initialize them but initialize something which calculates that formula) and then use that to backpropagate through the variables which computed that formula. For example in meta learning, I have a model, let's say it is just one layer tf.layers.dense(). I want to compute gradients and then use that gradients to build updated model graph and compute gradients on that. The backpropagation should tell me how should I update my first model weights to adapt well. Look at the code below:\r\n\r\n### Source code / logs\r\n\r\n    train = tf.placeholder(dtype=tf.float32, shape=(None, 4), name='train')\r\n    train_out = tf.placeholder(dtype=tf.float32, shape=(None, 1), name='train_out')\r\n\r\n    validation = tf.placeholder(dtype=tf.float32, shape=(None, 4))\r\n    validation_out = tf.placeholder(dtype=tf.float32, shape=(None, 1))\r\n\r\n    with tf.variable_scope('model'):\r\n        model_out = tf.layers.dense(train, 1, activation=tf.nn.relu)\r\n\r\n    with tf.variable_scope('loss'):\r\n        loss = tf.square(model_out - train_out)\r\n\r\n    with tf.variable_scope('gradients'):\r\n        optimizer = tf.train.AdamOptimizer()\r\n        grads = optimizer.compute_gradients(loss)\r\n\r\n    with tf.variable_scope('updated_model'):\r\n        updated_vars = {\r\n            grad_info[1].name[6:]: grad_info[1] - 0.1 * grad_info[0] \\\r\n            for grad_info in grads if grad_info[0] is not None\r\n            }\r\n\r\n        # meta_out = tf.nn.relu(tf.matmul(validation, updated_vars['dense/kernel:0']) + updated_vars['dense/bias:0'])\r\n        meta_out = tf.layers.dense(validation, 1, activation=tf.nn.relu, \r\n    kernel_initializer=updated_vars['dense/kernel:0'], bias_initializer=updated_vars['dense/bias:0'])\r\n\r\n\r\n    with tf.variable_scope('meta_loss'):\r\n        meta_loss = tf.square(meta_out - validation_out)\r\n\r\n    with tf.variable_scope('meta_optimizer'):\r\n        model_vars = tf.get_collection(tf.GraphKeys.GLOBAL_VARIABLES, scope='model')\r\n        meta_optimizer = tf.train.AdamOptimizer()\r\n        meta_train_op = meta_optimizer.minimize(meta_loss, var_list=model_vars)\r\n\r\n\r\nIn this code, I have commented one line. In that line, I did not use tf.layers but instead implemented what should happen in that layer myself. I think we need to be able to do that with tf.layers as well. \r\nPlease notice that we cannot use initializer because initializers should be set when we run tf.global_variables_initializer() and have another meaning(Which is to set the value of a variable). Here we do not want to initial those weights of layers with values but just with variables which we calculated in some other way and be able to backpropagate through them.\r\n\r\nI think one way to solve this is to allow creating tf.layers' models with setting kernel and bias directly instead of using initializers. I would be more than happy if I could help with this issue."}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19084", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19084/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19084/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19084/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/19084", "id": 320269082, "node_id": "MDU6SXNzdWUzMjAyNjkwODI=", "number": 19084, "title": "tensorflow.nn.dynamic_rnn with variable as init_state cannot work with Estimator.train", "user": {"login": "iron9light", "id": 64274, "node_id": "MDQ6VXNlcjY0Mjc0", "avatar_url": "https://avatars3.githubusercontent.com/u/64274?v=4", "gravatar_id": "", "url": "https://api.github.com/users/iron9light", "html_url": "https://github.com/iron9light", "followers_url": "https://api.github.com/users/iron9light/followers", "following_url": "https://api.github.com/users/iron9light/following{/other_user}", "gists_url": "https://api.github.com/users/iron9light/gists{/gist_id}", "starred_url": "https://api.github.com/users/iron9light/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/iron9light/subscriptions", "organizations_url": "https://api.github.com/users/iron9light/orgs", "repos_url": "https://api.github.com/users/iron9light/repos", "events_url": "https://api.github.com/users/iron9light/events{/privacy}", "received_events_url": "https://api.github.com/users/iron9light/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 473173272, "node_id": "MDU6TGFiZWw0NzMxNzMyNzI=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:feature", "name": "type:feature", "color": "159b2e", "default": false, "description": ""}], "state": "open", "locked": false, "assignee": {"login": "ebrevdo", "id": 1794715, "node_id": "MDQ6VXNlcjE3OTQ3MTU=", "avatar_url": "https://avatars0.githubusercontent.com/u/1794715?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ebrevdo", "html_url": "https://github.com/ebrevdo", "followers_url": "https://api.github.com/users/ebrevdo/followers", "following_url": "https://api.github.com/users/ebrevdo/following{/other_user}", "gists_url": "https://api.github.com/users/ebrevdo/gists{/gist_id}", "starred_url": "https://api.github.com/users/ebrevdo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ebrevdo/subscriptions", "organizations_url": "https://api.github.com/users/ebrevdo/orgs", "repos_url": "https://api.github.com/users/ebrevdo/repos", "events_url": "https://api.github.com/users/ebrevdo/events{/privacy}", "received_events_url": "https://api.github.com/users/ebrevdo/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "ebrevdo", "id": 1794715, "node_id": "MDQ6VXNlcjE3OTQ3MTU=", "avatar_url": "https://avatars0.githubusercontent.com/u/1794715?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ebrevdo", "html_url": "https://github.com/ebrevdo", "followers_url": "https://api.github.com/users/ebrevdo/followers", "following_url": "https://api.github.com/users/ebrevdo/following{/other_user}", "gists_url": "https://api.github.com/users/ebrevdo/gists{/gist_id}", "starred_url": "https://api.github.com/users/ebrevdo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ebrevdo/subscriptions", "organizations_url": "https://api.github.com/users/ebrevdo/orgs", "repos_url": "https://api.github.com/users/ebrevdo/repos", "events_url": "https://api.github.com/users/ebrevdo/events{/privacy}", "received_events_url": "https://api.github.com/users/ebrevdo/received_events", "type": "User", "site_admin": false}, {"login": "qlzh727", "id": 5118881, "node_id": "MDQ6VXNlcjUxMTg4ODE=", "avatar_url": "https://avatars3.githubusercontent.com/u/5118881?v=4", "gravatar_id": "", "url": "https://api.github.com/users/qlzh727", "html_url": "https://github.com/qlzh727", "followers_url": "https://api.github.com/users/qlzh727/followers", "following_url": "https://api.github.com/users/qlzh727/following{/other_user}", "gists_url": "https://api.github.com/users/qlzh727/gists{/gist_id}", "starred_url": "https://api.github.com/users/qlzh727/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/qlzh727/subscriptions", "organizations_url": "https://api.github.com/users/qlzh727/orgs", "repos_url": "https://api.github.com/users/qlzh727/repos", "events_url": "https://api.github.com/users/qlzh727/events{/privacy}", "received_events_url": "https://api.github.com/users/qlzh727/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 12, "created_at": "2018-05-04T13:10:17Z", "updated_at": "2018-12-11T18:51:15Z", "closed_at": null, "author_association": "NONE", "body": "### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**:\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**:Windows10\r\n- **TensorFlow installed from (source or binary)**:binary\r\n- **TensorFlow version (use command below)**:1.8.0\r\n- **Python version**: 3.6\r\n- **Bazel version (if compiling from source)**:\r\n- **GCC/Compiler version (if compiling from source)**:\r\n- **CUDA/cuDNN version**:\r\n- **GPU model and memory**:\r\n- **Exact command to reproduce**:\r\n\r\n### Describe the problem\r\nI wrote my own function to generate the init state variable\r\n\r\n```python\r\ndef get_initial_cell_state(cell, batch_size, dtype):\r\n  state_size = cell.state_size\r\n  i = 0\r\n  def get_state_shape(s):\r\n    c = _concat(1, s, static=True)\r\n    nonlocal i\r\n    name = \"init_state_\" + str(i)\r\n    i = i + 1\r\n    size = tf.get_variable(name, shape=c, dtype=dtype, initializer=tf.initializers.zeros)\r\n    size = tf.tile(size, [batch_size] + [1] * (len(c) - 1))\r\n    return size\r\n  return nest.map_structure(get_state_shape, state_size)\r\n```\r\n\r\nAnd use it as below:\r\n\r\n```python\r\n  rnn_output, _ = tf.nn.dynamic_rnn(\r\n    cell=cell,\r\n    inputs=inputs,\r\n    initial_state=get_initial_cell_state(cell, batch_size=batch_size, dtype=tf.float32),\r\n    parallel_iterations=128,\r\n    dtype=tf.float32\r\n  )\r\n```\r\n\r\nIt's compilable and runnable. But got this error:\r\n\r\n`WARNING:tensorflow:It seems that global step (tf.train.get_global_step) has not been increased. Current value (could be stable): 0 vs previous value: 0. You could increase the global step by passing tf.train.get_global_step() to Optimizer.apply_gradients or Optimizer.minimize.`\r\n\r\nI use Estimator to train. If I don't use this init state variable, everything goes fine.\r\n"}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19056", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19056/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19056/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19056/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/19056", "id": 319884610, "node_id": "MDU6SXNzdWUzMTk4ODQ2MTA=", "number": 19056, "title": "Android tensorflow repository weird permissions", "user": {"login": "anonym24", "id": 8851301, "node_id": "MDQ6VXNlcjg4NTEzMDE=", "avatar_url": "https://avatars2.githubusercontent.com/u/8851301?v=4", "gravatar_id": "", "url": "https://api.github.com/users/anonym24", "html_url": "https://github.com/anonym24", "followers_url": "https://api.github.com/users/anonym24/followers", "following_url": "https://api.github.com/users/anonym24/following{/other_user}", "gists_url": "https://api.github.com/users/anonym24/gists{/gist_id}", "starred_url": "https://api.github.com/users/anonym24/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/anonym24/subscriptions", "organizations_url": "https://api.github.com/users/anonym24/orgs", "repos_url": "https://api.github.com/users/anonym24/repos", "events_url": "https://api.github.com/users/anonym24/events{/privacy}", "received_events_url": "https://api.github.com/users/anonym24/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": {"login": "shivaniag", "id": 16565716, "node_id": "MDQ6VXNlcjE2NTY1NzE2", "avatar_url": "https://avatars1.githubusercontent.com/u/16565716?v=4", "gravatar_id": "", "url": "https://api.github.com/users/shivaniag", "html_url": "https://github.com/shivaniag", "followers_url": "https://api.github.com/users/shivaniag/followers", "following_url": "https://api.github.com/users/shivaniag/following{/other_user}", "gists_url": "https://api.github.com/users/shivaniag/gists{/gist_id}", "starred_url": "https://api.github.com/users/shivaniag/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/shivaniag/subscriptions", "organizations_url": "https://api.github.com/users/shivaniag/orgs", "repos_url": "https://api.github.com/users/shivaniag/repos", "events_url": "https://api.github.com/users/shivaniag/events{/privacy}", "received_events_url": "https://api.github.com/users/shivaniag/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "shivaniag", "id": 16565716, "node_id": "MDQ6VXNlcjE2NTY1NzE2", "avatar_url": "https://avatars1.githubusercontent.com/u/16565716?v=4", "gravatar_id": "", "url": "https://api.github.com/users/shivaniag", "html_url": "https://github.com/shivaniag", "followers_url": "https://api.github.com/users/shivaniag/followers", "following_url": "https://api.github.com/users/shivaniag/following{/other_user}", "gists_url": "https://api.github.com/users/shivaniag/gists{/gist_id}", "starred_url": "https://api.github.com/users/shivaniag/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/shivaniag/subscriptions", "organizations_url": "https://api.github.com/users/shivaniag/orgs", "repos_url": "https://api.github.com/users/shivaniag/repos", "events_url": "https://api.github.com/users/shivaniag/events{/privacy}", "received_events_url": "https://api.github.com/users/shivaniag/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2018-05-03T11:38:04Z", "updated_at": "2018-12-07T18:51:07Z", "closed_at": null, "author_association": "NONE", "body": "when using `implementation 'org.tensorflow:tensorflow-android:+'` in gradle file of my android project\r\n\r\nit adds those permissions to apk\r\n\r\n```\r\nuses-permission: name='android.permission.WRITE_EXTERNAL_STORAGE'\r\nuses-permission: name='android.permission.READ_PHONE_STATE'\r\nuses-permission: name='android.permission.READ_EXTERNAL_STORAGE'\r\n```\r\n\r\nonce I remove  `implementation 'org.tensorflow:tensorflow-android:+'`  permissions are gone\r\n\r\nwhat is that?"}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19049", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19049/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19049/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19049/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/19049", "id": 319848917, "node_id": "MDU6SXNzdWUzMTk4NDg5MTc=", "number": 19049, "title": "Memory Leak when tf.Session run on the sliced tensor", "user": {"login": "chychen", "id": 5878561, "node_id": "MDQ6VXNlcjU4Nzg1NjE=", "avatar_url": "https://avatars3.githubusercontent.com/u/5878561?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chychen", "html_url": "https://github.com/chychen", "followers_url": "https://api.github.com/users/chychen/followers", "following_url": "https://api.github.com/users/chychen/following{/other_user}", "gists_url": "https://api.github.com/users/chychen/gists{/gist_id}", "starred_url": "https://api.github.com/users/chychen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chychen/subscriptions", "organizations_url": "https://api.github.com/users/chychen/orgs", "repos_url": "https://api.github.com/users/chychen/repos", "events_url": "https://api.github.com/users/chychen/events{/privacy}", "received_events_url": "https://api.github.com/users/chychen/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 404586594, "node_id": "MDU6TGFiZWw0MDQ1ODY1OTQ=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:awaiting%20tensorflower", "name": "stat:awaiting tensorflower", "color": "f4b400", "default": false, "description": ""}], "state": "open", "locked": false, "assignee": {"login": "rmlarsen", "id": 16907534, "node_id": "MDQ6VXNlcjE2OTA3NTM0", "avatar_url": "https://avatars2.githubusercontent.com/u/16907534?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rmlarsen", "html_url": "https://github.com/rmlarsen", "followers_url": "https://api.github.com/users/rmlarsen/followers", "following_url": "https://api.github.com/users/rmlarsen/following{/other_user}", "gists_url": "https://api.github.com/users/rmlarsen/gists{/gist_id}", "starred_url": "https://api.github.com/users/rmlarsen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rmlarsen/subscriptions", "organizations_url": "https://api.github.com/users/rmlarsen/orgs", "repos_url": "https://api.github.com/users/rmlarsen/repos", "events_url": "https://api.github.com/users/rmlarsen/events{/privacy}", "received_events_url": "https://api.github.com/users/rmlarsen/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "rmlarsen", "id": 16907534, "node_id": "MDQ6VXNlcjE2OTA3NTM0", "avatar_url": "https://avatars2.githubusercontent.com/u/16907534?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rmlarsen", "html_url": "https://github.com/rmlarsen", "followers_url": "https://api.github.com/users/rmlarsen/followers", "following_url": "https://api.github.com/users/rmlarsen/following{/other_user}", "gists_url": "https://api.github.com/users/rmlarsen/gists{/gist_id}", "starred_url": "https://api.github.com/users/rmlarsen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rmlarsen/subscriptions", "organizations_url": "https://api.github.com/users/rmlarsen/orgs", "repos_url": "https://api.github.com/users/rmlarsen/repos", "events_url": "https://api.github.com/users/rmlarsen/events{/privacy}", "received_events_url": "https://api.github.com/users/rmlarsen/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 4, "created_at": "2018-05-03T09:34:32Z", "updated_at": "2020-02-24T01:36:18Z", "closed_at": null, "author_association": "NONE", "body": "### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**: yes\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**: Linux Ubuntu 16.04\r\n- **TensorFlow installed from (source or binary)**: binary\r\n- **TensorFlow version (use command below)**: v1.5.0-0-g37aa430d84 1.5.0\r\n- **Python version**: 3.6\r\n- **CUDA/cuDNN version**: release 9.0, V9.0.176\r\n- **GPU model and memory**: 1070 8G\r\n\r\n### Describe the Feature Request\r\nFor current version of Tensorflow, it will leak memory if we evaluate the sliced tensor as attached code and images, which isn't intuitive and hard to debug. It seems like the unused part of tensor will leak memory because there is no python object reference on it. I am not sure whether it could fixed or not, maybe it could show warning at least.\r\n\r\n### Source code / logs\r\n\r\n`import tensorflow as tf`\r\n`from pympler.tracker import SummaryTracker`\r\n`tracker = SummaryTracker()`\r\n`a = tf.zeros([3,4,5])`\r\n`sess = tf.Session()`\r\n\r\n`def leak_version():`\r\n`____return sess.run(a[0,0])`\r\n\r\n`def safe_version():`\r\n`____return sess.run(a)[0,0]` \r\n\r\n`for i in range(10):`\r\n`____tracker.print_diff()`\r\n`____# b = safe_version()`\r\n`____b = leak_version()`\r\n\r\n#### Trace of the Leak\r\n![image](https://user-images.githubusercontent.com/5878561/39568787-ed1af628-4ef5-11e8-80a0-b1e532b8c81c.png)\r\n\r\n#### Leak Version : visualize the object reference graph on object 'b' with depth=5 by Library objgraph\r\n![image](https://user-images.githubusercontent.com/5878561/39569067-adc03b18-4ef6-11e8-8d68-b5dee8a89eb0.png)\r\n\r\n#### Safe Version : visualize the object reference graph on object 'b' with depth=5 by Library objgraph\r\n![image](https://user-images.githubusercontent.com/5878561/39568928-57ccc000-4ef6-11e8-871d-7507a6dfefb4.png)\r\n\r\n"}]