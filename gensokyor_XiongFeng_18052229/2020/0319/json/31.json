[{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19041", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19041/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19041/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19041/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/19041", "id": 319742840, "node_id": "MDU6SXNzdWUzMTk3NDI4NDA=", "number": 19041, "title": "Saving Estimators, loading from checkpoints and accessing placeholders.", "user": {"login": "zeyademam", "id": 28906340, "node_id": "MDQ6VXNlcjI4OTA2MzQw", "avatar_url": "https://avatars0.githubusercontent.com/u/28906340?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zeyademam", "html_url": "https://github.com/zeyademam", "followers_url": "https://api.github.com/users/zeyademam/followers", "following_url": "https://api.github.com/users/zeyademam/following{/other_user}", "gists_url": "https://api.github.com/users/zeyademam/gists{/gist_id}", "starred_url": "https://api.github.com/users/zeyademam/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zeyademam/subscriptions", "organizations_url": "https://api.github.com/users/zeyademam/orgs", "repos_url": "https://api.github.com/users/zeyademam/repos", "events_url": "https://api.github.com/users/zeyademam/events{/privacy}", "received_events_url": "https://api.github.com/users/zeyademam/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 473184161, "node_id": "MDU6TGFiZWw0NzMxODQxNjE=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:support", "name": "type:support", "color": "159b2e", "default": false, "description": ""}], "state": "open", "locked": false, "assignee": {"login": "rohan100jain", "id": 144114, "node_id": "MDQ6VXNlcjE0NDExNA==", "avatar_url": "https://avatars2.githubusercontent.com/u/144114?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rohan100jain", "html_url": "https://github.com/rohan100jain", "followers_url": "https://api.github.com/users/rohan100jain/followers", "following_url": "https://api.github.com/users/rohan100jain/following{/other_user}", "gists_url": "https://api.github.com/users/rohan100jain/gists{/gist_id}", "starred_url": "https://api.github.com/users/rohan100jain/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rohan100jain/subscriptions", "organizations_url": "https://api.github.com/users/rohan100jain/orgs", "repos_url": "https://api.github.com/users/rohan100jain/repos", "events_url": "https://api.github.com/users/rohan100jain/events{/privacy}", "received_events_url": "https://api.github.com/users/rohan100jain/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "rohan100jain", "id": 144114, "node_id": "MDQ6VXNlcjE0NDExNA==", "avatar_url": "https://avatars2.githubusercontent.com/u/144114?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rohan100jain", "html_url": "https://github.com/rohan100jain", "followers_url": "https://api.github.com/users/rohan100jain/followers", "following_url": "https://api.github.com/users/rohan100jain/following{/other_user}", "gists_url": "https://api.github.com/users/rohan100jain/gists{/gist_id}", "starred_url": "https://api.github.com/users/rohan100jain/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rohan100jain/subscriptions", "organizations_url": "https://api.github.com/users/rohan100jain/orgs", "repos_url": "https://api.github.com/users/rohan100jain/repos", "events_url": "https://api.github.com/users/rohan100jain/events{/privacy}", "received_events_url": "https://api.github.com/users/rohan100jain/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 10, "created_at": "2018-05-02T23:14:06Z", "updated_at": "2018-12-07T18:50:58Z", "closed_at": null, "author_association": "NONE", "body": "I posted this question here on stackoverflow (https://stackoverflow.com/questions/50011969/tensorflow-estimator-api-input-tensor-names) and someone else posted a similar question earlier (https://stackoverflow.com/questions/48335699/tensorflow-what-are-the-input-nodes-for-tf-estimator-models), yet no satisfying answers. \r\n\r\nWhen using an estimator in tensorflow and passing the inputs using `tf.estimator.inputs.numpy_input_function()`, I would like to find a way to access the input placeholders (one for features and one for labels).\r\nI train the model using `tf.estimator.estimator.train()` and save the checkpoint files in `model_dir`. \r\nLater, I would like to load the model and variables using the following snippet:\r\n`sess = tf.Session()`\r\n`saver = tf.train.import_meta_graph(model_dir+'/model.ckpt-1.meta')`\r\n`saver.restore(sess, tf.train.latest_checkpoint(model_dir))`\r\n`predictions = graph.get_tensor_by_name('softmax_tensor:0')`\r\n\r\nThen do `sess.run(predictions,....)`. But there's no way to pull out the inputs' placeholder for the `feed_dict` parameter of `sess.run()`.\r\n\r\nAnother related issue I have: I would also like to add placeholders to an estimator other than the features and labels placeholders. For example if I have dropout, I would like the dropout_rate or the `tf.layers.dropout()` function's `training` param to be placeholders. This way after loading the model from chkpt as above, I can turn off dropout. \r\n\r\n\r\nHave I written custom code Y\r\nOS Platform and Distribution Ubuntu 18.04\r\nTensorFlow installed from pip\r\nTensorFlow version r1.8.0\r\nBazel version N/A\r\nCUDA/cuDNN version 9.0/7.0.1\r\nGPU model and memory GTX 1080TI\r\nExact command to reproduce N/A\r\n\r\n\r\n"}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19010", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19010/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19010/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19010/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/19010", "id": 319353347, "node_id": "MDU6SXNzdWUzMTkzNTMzNDc=", "number": 19010, "title": "Tensorflow r1.8  ImportError: dlopen: cannot load any more object with static TLS", "user": {"login": "crawforc3", "id": 8405957, "node_id": "MDQ6VXNlcjg0MDU5NTc=", "avatar_url": "https://avatars0.githubusercontent.com/u/8405957?v=4", "gravatar_id": "", "url": "https://api.github.com/users/crawforc3", "html_url": "https://github.com/crawforc3", "followers_url": "https://api.github.com/users/crawforc3/followers", "following_url": "https://api.github.com/users/crawforc3/following{/other_user}", "gists_url": "https://api.github.com/users/crawforc3/gists{/gist_id}", "starred_url": "https://api.github.com/users/crawforc3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/crawforc3/subscriptions", "organizations_url": "https://api.github.com/users/crawforc3/orgs", "repos_url": "https://api.github.com/users/crawforc3/repos", "events_url": "https://api.github.com/users/crawforc3/events{/privacy}", "received_events_url": "https://api.github.com/users/crawforc3/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 299643928, "node_id": "MDU6TGFiZWwyOTk2NDM5Mjg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:contributions%20welcome", "name": "stat:contributions welcome", "color": "f4b400", "default": false, "description": ""}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2018-05-01T22:48:16Z", "updated_at": "2018-08-23T05:25:23Z", "closed_at": null, "author_association": "NONE", "body": "Have I written custom code: No\r\nOS Platform and Distribution: Debian 8.10\r\nTensorFlow installed from: Source\r\nTensorFlow version: r1.8\r\nBazel version: 0.13.0\r\nCUDA/cuDNN version: n/a\r\nGPU model and memory: n/a\r\nExact command to reproduce:\r\n\r\nImporting Tensorflow r1.8 **after** some libraries (specifically cv2) results in: \r\n`ImportError: dlopen: cannot load any more object with static TLS`\r\n\r\n\r\n\r\nA temporary fix seems to be to import Tensorflow before any other libraries. \r\nHas this shown up before? Any other information I can provide?\r\n\r\n\r\nhttps://github.com/Kaggle/docker-python/issues/206\r\nhttps://www.kaggle.com/kmader/library-overload\r\n\r\n\r\n\r\n```\r\n---------------------------------------------------------------------------\r\nImportError                               Traceback (most recent call last)\r\n/opt/conda/lib/python3.6/site-packages/tensorflow/python/pywrap_tensorflow.py in <module>()\r\n     57 \r\n---> 58   from tensorflow.python.pywrap_tensorflow_internal import *\r\n     59   from tensorflow.python.pywrap_tensorflow_internal import __version__\r\n\r\n/opt/conda/lib/python3.6/site-packages/tensorflow/python/pywrap_tensorflow_internal.py in <module>()\r\n     27             return _mod\r\n---> 28     _pywrap_tensorflow_internal = swig_import_helper()\r\n     29     del swig_import_helper\r\n\r\n/opt/conda/lib/python3.6/site-packages/tensorflow/python/pywrap_tensorflow_internal.py in swig_import_helper()\r\n     23             try:\r\n---> 24                 _mod = imp.load_module('_pywrap_tensorflow_internal', fp, pathname, description)\r\n     25             finally:\r\n\r\n/opt/conda/lib/python3.6/imp.py in load_module(name, file, filename, details)\r\n    242         else:\r\n--> 243             return load_dynamic(name, filename, file)\r\n    244     elif type_ == PKG_DIRECTORY:\r\n\r\n/opt/conda/lib/python3.6/imp.py in load_dynamic(name, path, file)\r\n    342             name=name, loader=loader, origin=path)\r\n--> 343         return _load(spec)\r\n    344 \r\n\r\nImportError: dlopen: cannot load any more object with static TLS\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nImportError                               Traceback (most recent call last)\r\n<ipython-input-2-41389fad42b5> in <module>()\r\n----> 1 import tensorflow as tf\r\n\r\n/opt/conda/lib/python3.6/site-packages/tensorflow/__init__.py in <module>()\r\n     22 \r\n     23 # pylint: disable=g-bad-import-order\r\n---> 24 from tensorflow.python import pywrap_tensorflow  # pylint: disable=unused-import\r\n     25 # pylint: disable=wildcard-import\r\n     26 from tensorflow.tools.api.generator.api import *  # pylint: disable=redefined-builtin\r\n\r\n/opt/conda/lib/python3.6/site-packages/tensorflow/python/__init__.py in <module>()\r\n     47 import numpy as np\r\n     48 \r\n---> 49 from tensorflow.python import pywrap_tensorflow\r\n     50 \r\n     51 # Protocol buffers\r\n\r\n/opt/conda/lib/python3.6/site-packages/tensorflow/python/pywrap_tensorflow.py in <module>()\r\n     72 for some common reasons and solutions.  Include the entire stack trace\r\n     73 above this error message when asking for help.\"\"\" % traceback.format_exc()\r\n---> 74   raise ImportError(msg)\r\n     75 \r\n     76 # pylint: enable=wildcard-import,g-import-not-at-top,unused-import,line-too-long\r\n\r\nImportError: Traceback (most recent call last):\r\n  File \"/opt/conda/lib/python3.6/site-packages/tensorflow/python/pywrap_tensorflow.py\", line 58, in <module>\r\n    from tensorflow.python.pywrap_tensorflow_internal import *\r\n  File \"/opt/conda/lib/python3.6/site-packages/tensorflow/python/pywrap_tensorflow_internal.py\", line 28, in <module>\r\n    _pywrap_tensorflow_internal = swig_import_helper()\r\n  File \"/opt/conda/lib/python3.6/site-packages/tensorflow/python/pywrap_tensorflow_internal.py\", line 24, in swig_import_helper\r\n    _mod = imp.load_module('_pywrap_tensorflow_internal', fp, pathname, description)\r\n  File \"/opt/conda/lib/python3.6/imp.py\", line 243, in load_module\r\n    return load_dynamic(name, filename, file)\r\n  File \"/opt/conda/lib/python3.6/imp.py\", line 343, in load_dynamic\r\n    return _load(spec)\r\nImportError: dlopen: cannot load any more object with static TLS\r\n\r\n\r\nFailed to load the native TensorFlow runtime.\r\n\r\nSee https://www.tensorflow.org/install/install_sources#common_installation_problems\r\n\r\nfor some common reasons and solutions.  Include the entire stack trace\r\nabove this error message when asking for help.\r\n```\r\n\r\n"}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/18962", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/18962/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/18962/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/18962/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/18962", "id": 318726492, "node_id": "MDU6SXNzdWUzMTg3MjY0OTI=", "number": 18962, "title": "bug of tf.extract_image_patches", "user": {"login": "DC-Swind", "id": 5043628, "node_id": "MDQ6VXNlcjUwNDM2Mjg=", "avatar_url": "https://avatars2.githubusercontent.com/u/5043628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/DC-Swind", "html_url": "https://github.com/DC-Swind", "followers_url": "https://api.github.com/users/DC-Swind/followers", "following_url": "https://api.github.com/users/DC-Swind/following{/other_user}", "gists_url": "https://api.github.com/users/DC-Swind/gists{/gist_id}", "starred_url": "https://api.github.com/users/DC-Swind/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/DC-Swind/subscriptions", "organizations_url": "https://api.github.com/users/DC-Swind/orgs", "repos_url": "https://api.github.com/users/DC-Swind/repos", "events_url": "https://api.github.com/users/DC-Swind/events{/privacy}", "received_events_url": "https://api.github.com/users/DC-Swind/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": {"login": "shivaniag", "id": 16565716, "node_id": "MDQ6VXNlcjE2NTY1NzE2", "avatar_url": "https://avatars1.githubusercontent.com/u/16565716?v=4", "gravatar_id": "", "url": "https://api.github.com/users/shivaniag", "html_url": "https://github.com/shivaniag", "followers_url": "https://api.github.com/users/shivaniag/followers", "following_url": "https://api.github.com/users/shivaniag/following{/other_user}", "gists_url": "https://api.github.com/users/shivaniag/gists{/gist_id}", "starred_url": "https://api.github.com/users/shivaniag/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/shivaniag/subscriptions", "organizations_url": "https://api.github.com/users/shivaniag/orgs", "repos_url": "https://api.github.com/users/shivaniag/repos", "events_url": "https://api.github.com/users/shivaniag/events{/privacy}", "received_events_url": "https://api.github.com/users/shivaniag/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "shivaniag", "id": 16565716, "node_id": "MDQ6VXNlcjE2NTY1NzE2", "avatar_url": "https://avatars1.githubusercontent.com/u/16565716?v=4", "gravatar_id": "", "url": "https://api.github.com/users/shivaniag", "html_url": "https://github.com/shivaniag", "followers_url": "https://api.github.com/users/shivaniag/followers", "following_url": "https://api.github.com/users/shivaniag/following{/other_user}", "gists_url": "https://api.github.com/users/shivaniag/gists{/gist_id}", "starred_url": "https://api.github.com/users/shivaniag/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/shivaniag/subscriptions", "organizations_url": "https://api.github.com/users/shivaniag/orgs", "repos_url": "https://api.github.com/users/shivaniag/repos", "events_url": "https://api.github.com/users/shivaniag/events{/privacy}", "received_events_url": "https://api.github.com/users/shivaniag/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 7, "created_at": "2018-04-29T15:37:52Z", "updated_at": "2018-12-07T18:50:50Z", "closed_at": null, "author_association": "NONE", "body": "### System information\r\n- **OS Platform and Distribution**: Linux Ubuntu  16.04\r\n- **TensorFlow installed from pip**:\r\n- **TensorFlow version**: 1.5\r\n- **Python version**: 2.7 \r\n- **CUDA/cuDNN version**: 8.0\r\n- **Have I written custom code**: N/A\r\n- **Bazel version**: N/A\r\n- **GPU model and memory**: N/A\r\n- **Exact command to reproduce**: N/A\r\n\r\n### the problem\r\nI have a input \"x\" which size is (batch, width, height, chanel), because the height of data is variable. so x.get_shape() is (?, 20, ?, 64). I use the following code to do something like im2col:\r\n`im2col = tf.extract_image_patches(x, ksizes=[1, 1, KERNEL_SIZE, 1], strides=[1, 1, 1, 1], rates=[1, 1, 1, 1], padding=\"SAME\")\r\n`\r\nthe output \"im2col\" lost some shape, so I use the following code to set_shape:\r\n `im2col.set_shape([shape1, shape2, shape3, KERNEL_SIZE * shape4])`\r\nand then reshape im2col to (shape1, shape2, shape3, KERNEL_SIZE, shape4)\r\n\r\nIn the process of building graph, errors arise when processing optimization algorithms (Adam).\r\n\r\n> TypeError: unsupported operand type(s) for /: 'NoneType' and 'long'\r\n\r\nI'm sure the error is produced by tf.extract_image_patches. If I replace tf.extract_image_patches with tf.tile (to make the output size of tf.tile same as tf.extract_image_patches), graph will be built sucessfully.\r\n\r\n### Error message\r\nTraceback (most recent call last):\r\n  File \"/home/anaconda2/bin/t2t-trainer\", line 32, in <module>\r\n    tf.app.run()\r\n  File \"/home/anaconda2/lib/python2.7/site-packages/tensorflow/python/platform/app.py\", line 129, in run\r\n    _sys.exit(main(argv))\r\n  File \"/home/anaconda2/bin/t2t-trainer\", line 28, in main\r\n    t2t_trainer.main(argv)\r\n  File \"/home/anaconda2/lib/python2.7/site-packages/tensor2tensor/bin/t2t_trainer.py\", line 338, in main\r\n    execute_schedule(exp)\r\n  File \"/home/anaconda2/lib/python2.7/site-packages/tensor2tensor/bin/t2t_trainer.py\", line 288, in execute_schedule\r\n    getattr(exp, FLAGS.schedule)()\r\n  File \"/home/anaconda2/lib/python2.7/site-packages/tensorflow/contrib/learn/python/learn/experiment.py\", line 635, in train_and_evaluate\r\n    self.train(delay_secs=0)\r\n  File \"/home/anaconda2/lib/python2.7/site-packages/tensorflow/contrib/learn/python/learn/experiment.py\", line 377, in train\r\n    saving_listeners=self._saving_listeners)\r\n  File \"/home/anaconda2/lib/python2.7/site-packages/tensorflow/contrib/learn/python/learn/experiment.py\", line 824, in _call_train\r\n    saving_listeners=saving_listeners)\r\n  File \"/home/anaconda2/lib/python2.7/site-packages/tensorflow/python/estimator/estimator.py\", line 314, in train\r\n    loss = self._train_model(input_fn, hooks, saving_listeners)\r\n  File \"/home/anaconda2/lib/python2.7/site-packages/tensorflow/python/estimator/estimator.py\", line 743, in _train_model\r\n    features, labels, model_fn_lib.ModeKeys.TRAIN, self.config)\r\n  File \"/home/anaconda2/lib/python2.7/site-packages/tensorflow/python/estimator/estimator.py\", line 725, in _call_model_fn\r\n    model_fn_results = self._model_fn(features=features, **kwargs)\r\n  File \"/home/anaconda2/lib/python2.7/site-packages/tensor2tensor/utils/t2t_model.py\", line 886, in wrapping_model_fn\r\n    use_tpu=use_tpu)\r\n  File \"/home/anaconda2/lib/python2.7/site-packages/tensor2tensor/utils/t2t_model.py\", line 980, in estimator_model_fn\r\n    loss, num_async_replicas=num_async_replicas)\r\n  File \"/home/anaconda2/lib/python2.7/site-packages/tensor2tensor/utils/t2t_model.py\", line 984, in estimator_spec_train\r\n    train_op = self.optimize(loss, num_async_replicas=num_async_replicas)\r\n  File \"/home/anaconda2/lib/python2.7/site-packages/tensor2tensor/utils/t2t_model.py\", line 401, in optimize\r\n    loss, lr, self.hparams, use_tpu=common_layers.is_on_tpu())\r\n  File \"/home/anaconda2/lib/python2.7/site-packages/tensor2tensor/utils/optimize.py\", line 68, in optimize\r\n    colocate_gradients_with_ops=True)\r\n  File \"/home/anaconda2/lib/python2.7/site-packages/tensorflow/contrib/layers/python/layers/optimizers.py\", line 241, in optimize_loss\r\n    colocate_gradients_with_ops=colocate_gradients_with_ops)\r\n  File \"/home/anaconda2/lib/python2.7/site-packages/tensor2tensor/utils/optimize.py\", line 110, in compute_gradients\r\n    gradients = self._opt.compute_gradients(loss, var_list, **kwargs)\r\n  File \"/home/anaconda2/lib/python2.7/site-packages/tensorflow/python/training/optimizer.py\", line 456, in compute_gradients\r\n    colocate_gradients_with_ops=colocate_gradients_with_ops)\r\n  File \"/home/anaconda2/lib/python2.7/site-packages/tensorflow/python/ops/gradients_impl.py\", line 608, in gradients\r\n    grad_scope, op, func_call, lambda: grad_fn(op, *out_grads))\r\n  File \"/home/anaconda2/lib/python2.7/site-packages/tensorflow/python/ops/gradients_impl.py\", line 374, in _MaybeCompile\r\n    return grad_fn()  # Exit early\r\n  File \"/home/anaconda2/lib/python2.7/site-packages/tensorflow/python/ops/gradients_impl.py\", line 608, in <lambda>\r\n    grad_scope, op, func_call, lambda: grad_fn(op, *out_grads))\r\n  File \"/home/anaconda2/lib/python2.7/site-packages/tensorflow/python/ops/array_grad.py\", line 724, in _ExtractImagePatchesGrad\r\n    cols_out = int(ceil(cols_in / stride_h))\r\nTypeError: unsupported operand type(s) for /: 'NoneType' and 'long'\r\n\r\n"}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/18934", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/18934/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/18934/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/18934/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/18934", "id": 318484753, "node_id": "MDU6SXNzdWUzMTg0ODQ3NTM=", "number": 18934, "title": "Patch Request: Move CROSSTOOL_nvcc.tpl to c++14", "user": {"login": "thomasyoung", "id": 583132, "node_id": "MDQ6VXNlcjU4MzEzMg==", "avatar_url": "https://avatars2.githubusercontent.com/u/583132?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thomasyoung", "html_url": "https://github.com/thomasyoung", "followers_url": "https://api.github.com/users/thomasyoung/followers", "following_url": "https://api.github.com/users/thomasyoung/following{/other_user}", "gists_url": "https://api.github.com/users/thomasyoung/gists{/gist_id}", "starred_url": "https://api.github.com/users/thomasyoung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thomasyoung/subscriptions", "organizations_url": "https://api.github.com/users/thomasyoung/orgs", "repos_url": "https://api.github.com/users/thomasyoung/repos", "events_url": "https://api.github.com/users/thomasyoung/events{/privacy}", "received_events_url": "https://api.github.com/users/thomasyoung/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": {"login": "shivaniag", "id": 16565716, "node_id": "MDQ6VXNlcjE2NTY1NzE2", "avatar_url": "https://avatars1.githubusercontent.com/u/16565716?v=4", "gravatar_id": "", "url": "https://api.github.com/users/shivaniag", "html_url": "https://github.com/shivaniag", "followers_url": "https://api.github.com/users/shivaniag/followers", "following_url": "https://api.github.com/users/shivaniag/following{/other_user}", "gists_url": "https://api.github.com/users/shivaniag/gists{/gist_id}", "starred_url": "https://api.github.com/users/shivaniag/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/shivaniag/subscriptions", "organizations_url": "https://api.github.com/users/shivaniag/orgs", "repos_url": "https://api.github.com/users/shivaniag/repos", "events_url": "https://api.github.com/users/shivaniag/events{/privacy}", "received_events_url": "https://api.github.com/users/shivaniag/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "shivaniag", "id": 16565716, "node_id": "MDQ6VXNlcjE2NTY1NzE2", "avatar_url": "https://avatars1.githubusercontent.com/u/16565716?v=4", "gravatar_id": "", "url": "https://api.github.com/users/shivaniag", "html_url": "https://github.com/shivaniag", "followers_url": "https://api.github.com/users/shivaniag/followers", "following_url": "https://api.github.com/users/shivaniag/following{/other_user}", "gists_url": "https://api.github.com/users/shivaniag/gists{/gist_id}", "starred_url": "https://api.github.com/users/shivaniag/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/shivaniag/subscriptions", "organizations_url": "https://api.github.com/users/shivaniag/orgs", "repos_url": "https://api.github.com/users/shivaniag/repos", "events_url": "https://api.github.com/users/shivaniag/events{/privacy}", "received_events_url": "https://api.github.com/users/shivaniag/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 2, "created_at": "2018-04-27T17:12:27Z", "updated_at": "2018-12-14T18:53:06Z", "closed_at": null, "author_association": "NONE", "body": "CUDA9.0 is already supporting C++14 now:\r\nhttps://docs.nvidia.com/cuda/cuda-c-programming-guide/index.html#cpp14\r\n\r\n```\r\ndiff --git a/third_party/gpus/crosstool/CROSSTOOL_nvcc.tpl b/third_party/gpus/crosstool/CROSSTOOL_nvcc.tpl\r\nindex 05290d6..237d001 100644\r\n--- a/third_party/gpus/crosstool/CROSSTOOL_nvcc.tpl\r\n+++ b/third_party/gpus/crosstool/CROSSTOOL_nvcc.tpl\r\n@@ -51,9 +51,9 @@ toolchain {\r\n   # path, combined with the rest of our Bazel configuration causes our\r\n   # compilation to use those files.\r\n   tool_path { name: \"gcc\" path: \"clang/bin/crosstool_wrapper_driver_is_not_gcc\" }\r\n-  # Use \"-std=c++11\" for nvcc. For consistency, force both the host compiler\r\n-  # and the device compiler to use \"-std=c++11\".\r\n-  cxx_flag: \"-std=c++11\"\r\n+  # Use \"-std=c++14\" for nvcc. For consistency, force both the host compiler\r\n+  # and the device compiler to use \"-std=c++14\".\r\n+  cxx_flag: \"-std=c++14\"\r\n   linker_flag: \"-Wl,-no-as-needed\"\r\n   linker_flag: \"-lstdc++\"\r\n   linker_flag: \"-B/usr/bin/\"\r\ndiff --git a/third_party/gpus/crosstool/clang/bin/crosstool_wrapper_driver_is_not_gcc.tpl b/third_party/gpus/crosstool/clang/bin/crosstool_wrapper_driver_is_not_gcc.tpl\r\nindex 2558f46..5b1e65c 100755\r\n--- a/third_party/gpus/crosstool/clang/bin/crosstool_wrapper_driver_is_not_gcc.tpl\r\n+++ b/third_party/gpus/crosstool/clang/bin/crosstool_wrapper_driver_is_not_gcc.tpl\r\n@@ -167,7 +167,7 @@ def InvokeNvcc(argv, log=False):\r\n   undefines = ''.join([' -U' + define for define in undefines])\r\n   std_options = GetOptionValue(argv, 'std')\r\n   # currently only c++11 is supported by Cuda 7.0 std argument\r\n-  nvcc_allowed_std_options = [\"c++11\"]\r\n+  nvcc_allowed_std_options = [\"c++11\",\"c++14\"]\r\n   std_options = ''.join([' -std=' + define\r\n       for define in std_options if define in nvcc_allowed_std_options])\r\n```"}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/18931", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/18931/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/18931/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/18931/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/18931", "id": 318455681, "node_id": "MDU6SXNzdWUzMTg0NTU2ODE=", "number": 18931, "title": "CMake build without GRPC and Python bindings fails", "user": {"login": "Skydes", "id": 15985472, "node_id": "MDQ6VXNlcjE1OTg1NDcy", "avatar_url": "https://avatars0.githubusercontent.com/u/15985472?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Skydes", "html_url": "https://github.com/Skydes", "followers_url": "https://api.github.com/users/Skydes/followers", "following_url": "https://api.github.com/users/Skydes/following{/other_user}", "gists_url": "https://api.github.com/users/Skydes/gists{/gist_id}", "starred_url": "https://api.github.com/users/Skydes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Skydes/subscriptions", "organizations_url": "https://api.github.com/users/Skydes/orgs", "repos_url": "https://api.github.com/users/Skydes/repos", "events_url": "https://api.github.com/users/Skydes/events{/privacy}", "received_events_url": "https://api.github.com/users/Skydes/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 404586558, "node_id": "MDU6TGFiZWw0MDQ1ODY1NTg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:community%20support", "name": "stat:community support", "color": "f4b400", "default": false, "description": ""}, {"id": 299643928, "node_id": "MDU6TGFiZWwyOTk2NDM5Mjg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:contributions%20welcome", "name": "stat:contributions welcome", "color": "f4b400", "default": false, "description": ""}, {"id": 473173351, "node_id": "MDU6TGFiZWw0NzMxNzMzNTE=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:build/install", "name": "type:build/install", "color": "159b2e", "default": false, "description": ""}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-04-27T15:36:42Z", "updated_at": "2018-05-07T18:02:58Z", "closed_at": null, "author_association": "NONE", "body": "### System information\r\n- OS: Linux Ubuntu 14.04\r\n- Tensorflow: installed from source ([master branch](8a428cdd350a56b9f7de2ed55b3fbe7b6ad6b257))\r\n- GCC 4.8.4\r\n- CMake 3.8.2\r\n- No GPU\r\n\r\n### Problem\r\nThe CMake build fails on Ubuntu when GRPC support is disabled.\r\n\r\n### Command\r\n```\r\ncmake \\\r\n    \t-DCMAKE_INSTALL_PREFIX=../test/ \\\r\n    \t-DCMAKE_BUILD_TYPE=Release \\\r\n        -Dtensorflow_BUILD_SHARED_LIB=ON \\\r\n    \t-Dtensorflow_BUILD_ALL_KERNELS=ON \\\r\n    \t-Dtensorflow_BUILD_CONTRIB_KERNELS=OFF \\\r\n    \t-Dtensorflow_BUILD_CC_EXAMPLE=OFF \\\r\n    \t-Dtensorflow_BUILD_PYTHON_BINDINGS=OFF \\\r\n    \t-Dtensorflow_ENABLE_GRPC_SUPPORT=OFF \\\r\n    \t-Dtensorflow_ENABLE_SSL_SUPPORT=OFF \\\r\n    \t-Dtensorflow_BUILD_CC_TESTS=OFF \\\r\n    \t-Dtensorflow_BUILD_PYTHON_TESTS=OFF \\\r\n        -Dtensorflow_ENABLE_GPU=OFF ..\r\nmake\r\n```\r\n\r\n### Logs\r\n```\r\n[...]\r\nmake[2]: *** No rule to make target `../grpc', needed by `tensorflow/core/debug/debug_service.grpc.pb.cc'.\r\nStop.\r\nmake[1]: *** [CMakeFiles/tf_protos_cc.dir/all] Error 2\r\n```\r\n"}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/18893", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/18893/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/18893/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/18893/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/18893", "id": 317932019, "node_id": "MDU6SXNzdWUzMTc5MzIwMTk=", "number": 18893, "title": "Use ghost batch normalization with slim", "user": {"login": "ohadlights", "id": 14160338, "node_id": "MDQ6VXNlcjE0MTYwMzM4", "avatar_url": "https://avatars3.githubusercontent.com/u/14160338?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ohadlights", "html_url": "https://github.com/ohadlights", "followers_url": "https://api.github.com/users/ohadlights/followers", "following_url": "https://api.github.com/users/ohadlights/following{/other_user}", "gists_url": "https://api.github.com/users/ohadlights/gists{/gist_id}", "starred_url": "https://api.github.com/users/ohadlights/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ohadlights/subscriptions", "organizations_url": "https://api.github.com/users/ohadlights/orgs", "repos_url": "https://api.github.com/users/ohadlights/repos", "events_url": "https://api.github.com/users/ohadlights/events{/privacy}", "received_events_url": "https://api.github.com/users/ohadlights/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 299643928, "node_id": "MDU6TGFiZWwyOTk2NDM5Mjg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:contributions%20welcome", "name": "stat:contributions welcome", "color": "f4b400", "default": false, "description": ""}, {"id": 473173272, "node_id": "MDU6TGFiZWw0NzMxNzMyNzI=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:feature", "name": "type:feature", "color": "159b2e", "default": false, "description": ""}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2018-04-26T08:44:47Z", "updated_at": "2018-10-29T09:25:37Z", "closed_at": null, "author_association": "CONTRIBUTOR", "body": "Posted in Stack Overflow:\r\nhttps://stackoverflow.com/questions/49967489/use-ghost-batch-normalization-with-slim\r\n\r\n### Details\r\n\r\nOS Platform and Distribution: N/A\r\nTensorFlow installed from: N/A\r\nTensorFlow version: 1.8\r\nBazel version: N/A\r\nCUDA/cuDNN version: N/A\r\nGPU model and memory: N/A\r\nExact command to reproduce: use slim.batch_norm\r\n\r\n### Describe the problem\r\n\r\nnormalization_layers.BatchNormalization takes an argument virtual_batch_size that tells the layer to use \"Ghost Batch Normalization\", which creates virtual sub-batches which are each normalized separately.\r\n\r\nslim.batch_norm doesn't expose this argument. is there a way to use ghost BN with slim?\r\n\r\nThanks.\r\n"}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/18880", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/18880/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/18880/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/18880/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/18880", "id": 317821563, "node_id": "MDU6SXNzdWUzMTc4MjE1NjM=", "number": 18880, "title": "[Feature Request] Dynamic RPC Address Resolution", "user": {"login": "make1980", "id": 19718982, "node_id": "MDQ6VXNlcjE5NzE4OTgy", "avatar_url": "https://avatars3.githubusercontent.com/u/19718982?v=4", "gravatar_id": "", "url": "https://api.github.com/users/make1980", "html_url": "https://github.com/make1980", "followers_url": "https://api.github.com/users/make1980/followers", "following_url": "https://api.github.com/users/make1980/following{/other_user}", "gists_url": "https://api.github.com/users/make1980/gists{/gist_id}", "starred_url": "https://api.github.com/users/make1980/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/make1980/subscriptions", "organizations_url": "https://api.github.com/users/make1980/orgs", "repos_url": "https://api.github.com/users/make1980/repos", "events_url": "https://api.github.com/users/make1980/events{/privacy}", "received_events_url": "https://api.github.com/users/make1980/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 473173272, "node_id": "MDU6TGFiZWw0NzMxNzMyNzI=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:feature", "name": "type:feature", "color": "159b2e", "default": false, "description": ""}], "state": "open", "locked": false, "assignee": {"login": "saeta", "id": 1284535, "node_id": "MDQ6VXNlcjEyODQ1MzU=", "avatar_url": "https://avatars1.githubusercontent.com/u/1284535?v=4", "gravatar_id": "", "url": "https://api.github.com/users/saeta", "html_url": "https://github.com/saeta", "followers_url": "https://api.github.com/users/saeta/followers", "following_url": "https://api.github.com/users/saeta/following{/other_user}", "gists_url": "https://api.github.com/users/saeta/gists{/gist_id}", "starred_url": "https://api.github.com/users/saeta/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/saeta/subscriptions", "organizations_url": "https://api.github.com/users/saeta/orgs", "repos_url": "https://api.github.com/users/saeta/repos", "events_url": "https://api.github.com/users/saeta/events{/privacy}", "received_events_url": "https://api.github.com/users/saeta/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "saeta", "id": 1284535, "node_id": "MDQ6VXNlcjEyODQ1MzU=", "avatar_url": "https://avatars1.githubusercontent.com/u/1284535?v=4", "gravatar_id": "", "url": "https://api.github.com/users/saeta", "html_url": "https://github.com/saeta", "followers_url": "https://api.github.com/users/saeta/followers", "following_url": "https://api.github.com/users/saeta/following{/other_user}", "gists_url": "https://api.github.com/users/saeta/gists{/gist_id}", "starred_url": "https://api.github.com/users/saeta/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/saeta/subscriptions", "organizations_url": "https://api.github.com/users/saeta/orgs", "repos_url": "https://api.github.com/users/saeta/repos", "events_url": "https://api.github.com/users/saeta/events{/privacy}", "received_events_url": "https://api.github.com/users/saeta/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 28, "created_at": "2018-04-25T22:55:25Z", "updated_at": "2018-12-19T18:45:29Z", "closed_at": null, "author_association": "NONE", "body": "Currently TensorFlow cluster is created statically with host name/port information defined in cluster spec. The host name and port information for a worker can't be changed during run-time. In a multi-tenancy environment where host name/port is assigned to worker by a job manager after worker failover happens, this static cluster spec prevents other workers to communicate with this new worker using the latest host name and port.\r\n\r\nWith dynamic RPC address resolution feature, the host name of each TF server is resolved against an RPC address registry before initiating each RPC call. This allows changing the host name and port of each TF server at run time, which is useful in the following cases:\r\n\r\n- A stateless TF worker fails over and gets assigned with new host name/port by an external job scheduler.\r\n\r\n- A stateful TF worker fails over and all workers get restarted without changing the cluster spec. The failed worker can be assigned with new host name/port.\r\n\r\nI have composed a design document [here](https://docs.google.com/document/d/1Fl-mMZ9NMBDaQkhhVpXe-UdYC-iYg6hlSj7bBZSMCSM/edit?usp=sharing). A prototype has been done as well based on this design. We hope to contribute this feature to the upstream. Any feedbacks for the design are welcome.\r\n\r\n"}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/18872", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/18872/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/18872/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/18872/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/18872", "id": 317762005, "node_id": "MDU6SXNzdWUzMTc3NjIwMDU=", "number": 18872, "title": "Feature Request: More Granular Dependencies for Official Binaries", "user": {"login": "belph", "id": 4998607, "node_id": "MDQ6VXNlcjQ5OTg2MDc=", "avatar_url": "https://avatars3.githubusercontent.com/u/4998607?v=4", "gravatar_id": "", "url": "https://api.github.com/users/belph", "html_url": "https://github.com/belph", "followers_url": "https://api.github.com/users/belph/followers", "following_url": "https://api.github.com/users/belph/following{/other_user}", "gists_url": "https://api.github.com/users/belph/gists{/gist_id}", "starred_url": "https://api.github.com/users/belph/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/belph/subscriptions", "organizations_url": "https://api.github.com/users/belph/orgs", "repos_url": "https://api.github.com/users/belph/repos", "events_url": "https://api.github.com/users/belph/events{/privacy}", "received_events_url": "https://api.github.com/users/belph/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": {"login": "gunan", "id": 7946809, "node_id": "MDQ6VXNlcjc5NDY4MDk=", "avatar_url": "https://avatars3.githubusercontent.com/u/7946809?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gunan", "html_url": "https://github.com/gunan", "followers_url": "https://api.github.com/users/gunan/followers", "following_url": "https://api.github.com/users/gunan/following{/other_user}", "gists_url": "https://api.github.com/users/gunan/gists{/gist_id}", "starred_url": "https://api.github.com/users/gunan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gunan/subscriptions", "organizations_url": "https://api.github.com/users/gunan/orgs", "repos_url": "https://api.github.com/users/gunan/repos", "events_url": "https://api.github.com/users/gunan/events{/privacy}", "received_events_url": "https://api.github.com/users/gunan/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "gunan", "id": 7946809, "node_id": "MDQ6VXNlcjc5NDY4MDk=", "avatar_url": "https://avatars3.githubusercontent.com/u/7946809?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gunan", "html_url": "https://github.com/gunan", "followers_url": "https://api.github.com/users/gunan/followers", "following_url": "https://api.github.com/users/gunan/following{/other_user}", "gists_url": "https://api.github.com/users/gunan/gists{/gist_id}", "starred_url": "https://api.github.com/users/gunan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gunan/subscriptions", "organizations_url": "https://api.github.com/users/gunan/orgs", "repos_url": "https://api.github.com/users/gunan/repos", "events_url": "https://api.github.com/users/gunan/events{/privacy}", "received_events_url": "https://api.github.com/users/gunan/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 4, "created_at": "2018-04-25T19:26:36Z", "updated_at": "2018-12-14T18:52:57Z", "closed_at": null, "author_association": "NONE", "body": "### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**: N/A\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**: N/A\r\n- **TensorFlow installed from (source or binary)**: `pip`\r\n- **TensorFlow version (use command below)**: N/A\r\n- **Python version**:  N/A\r\n- **Bazel version (if compiling from source)**: N/A\r\n- **GCC/Compiler version (if compiling from source)**: N/A\r\n- **CUDA/cuDNN version**: N/A\r\n- **GPU model and memory**: N/A\r\n- **Exact command to reproduce**: N/A\r\n\r\n### Describe the problem\r\n(Note: This issue is related to #16046, but I feel that it's different enough to warrant a separate request, rather than resurrecting that one. Also, this question's wording is biased towards Linux, but the spirit of it may be useful for other systems as well.)\r\n\r\nTensorFlow currently specifies its system requirements at the level of an operating system and CPU architecture (for example, the docs [currently state][ubuntu] that Ubuntu 16.04 x86_64 is the supported Linux variant). This is certainly helpful, but, when incorporating TensorFlow into larger projects with their own lists of dependencies, I feel that it may be useful to additionally have somewhere that provides a clear description of the dynamic library requirements for the official releases. For example, `glibc` version requirements have burned a number of developers (a quick search shows #14208 and #15376). Currently, the only reliable way (to my knowledge) to determine the required versions of `glibc` and friends for a given TensorFlow release is to run `ldd -v` on it (the following are run on TensorFlow 1.5.0, which is what I happen to have installed on this machine):\r\n\r\n```bash\r\n(venv) belph@alpha ~/venv $ ldd -v \\\r\n    lib/python3.5/site-packages/tensorflow/libtensorflow_framework.so \\\r\n    | grep -oP '\\([A-Z][A-Z0-9._]+\\)' \\\r\n    | sort -V \\\r\n    | uniq\r\n(CXXABI_1.3)\r\n(CXXABI_1.3.5)\r\n(CXXABI_1.3.7)\r\n(GCC_3.0)\r\n(GCC_3.3)\r\n(GCC_4.2.0)\r\n(GLIBCXX_3.4)\r\n(GLIBCXX_3.4.9)\r\n(GLIBCXX_3.4.11)\r\n(GLIBCXX_3.4.14)\r\n(GLIBCXX_3.4.17)\r\n(GLIBCXX_3.4.18)\r\n(GLIBCXX_3.4.19)\r\n(GLIBC_2.2.5)\r\n(GLIBC_2.3)\r\n(GLIBC_2.3.2)\r\n(GLIBC_2.3.4)\r\n(GLIBC_2.4)\r\n(GLIBC_2.6)\r\n(GLIBC_2.7)\r\n(GLIBC_2.11)\r\n(GLIBC_2.14)\r\n(GLIBC_2.16)\r\n(GLIBC_2.17)\r\n(GLIBC_2.18)\r\n(GLIBC_PRIVATE)\r\n```\r\n(here's a fancier command to get the latest version required, in case anyone is interested)\r\n```bash\r\n(venv) belph@alpha ~/venv $ ldd -v \\\r\n    lib/python3.5/site-packages/tensorflow/libtensorflow_framework.so \\\r\n    | grep -oP '[A-Z][A-Z0-9.]*_[0-9.]+(?=\\) =>)' \\\r\n    | sort -V \\\r\n    | uniq \\\r\n    | tr '_' ' ' \\\r\n    | awk '{ reqs[$1] = $2 } END { for (lib in reqs) { print lib,reqs[lib] } }'\r\nGLIBCXX 3.4.19\r\nCXXABI 1.3.7\r\nGLIBC 2.18\r\nGCC 4.2.0\r\n```\r\n\r\nI _have_ noticed the [Tested Source Configurations][srcconfigs] list on the documentation; these very well may be the machines which compile the binaries, but they do not specify which version of `glibc` is installed. Additionally, `glibc` version 2.19 is [specified in a toolchain][toolchain], but it is unclear whether this is actually used when compiling the official distributions (or I just missed it).\r\n\r\nWould it be possible to specify what versions of shared libraries are required to be installed, or, at a minimum, some more detailed information about the system each binary is compiled on? The latter may be specified somewhere already, but I have not been able to find it. I'm not necessarily asking for a library requirement list that TensorFlow commits to maintain compatibility with across releases; instead, I just think it would be useful to be able to have a go-to place to answer the question of \"what version of `glibc` do I need to run the official TensorFlow 1.5 build?\" Anything would be helpful!\r\n\r\nThank you! Apologies if anything I've said is unclear; I'll be happy to clarify.\r\n\r\n### Source code / logs\r\nN/A\r\n\r\n[ubuntu]: https://www.tensorflow.org/install/install_linux#top_of_page\r\n[srcconfigs]: https://www.tensorflow.org/install/install_sources#tested_source_configurations\r\n[toolchain]: https://github.com/tensorflow/tensorflow/blob/d33f80f4083ef63b90b5763988541e901e7f0a3d/third_party/toolchains/clang6/CROSSTOOL.tpl#L13"}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/18863", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/18863/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/18863/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/18863/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/18863", "id": 317659801, "node_id": "MDU6SXNzdWUzMTc2NTk4MDE=", "number": 18863, "title": "[Feature Request] Fold batch_norm with depthwise_conv transformation graph", "user": {"login": "LucasMahieu", "id": 12006816, "node_id": "MDQ6VXNlcjEyMDA2ODE2", "avatar_url": "https://avatars3.githubusercontent.com/u/12006816?v=4", "gravatar_id": "", "url": "https://api.github.com/users/LucasMahieu", "html_url": "https://github.com/LucasMahieu", "followers_url": "https://api.github.com/users/LucasMahieu/followers", "following_url": "https://api.github.com/users/LucasMahieu/following{/other_user}", "gists_url": "https://api.github.com/users/LucasMahieu/gists{/gist_id}", "starred_url": "https://api.github.com/users/LucasMahieu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/LucasMahieu/subscriptions", "organizations_url": "https://api.github.com/users/LucasMahieu/orgs", "repos_url": "https://api.github.com/users/LucasMahieu/repos", "events_url": "https://api.github.com/users/LucasMahieu/events{/privacy}", "received_events_url": "https://api.github.com/users/LucasMahieu/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 473173272, "node_id": "MDU6TGFiZWw0NzMxNzMyNzI=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:feature", "name": "type:feature", "color": "159b2e", "default": false, "description": ""}], "state": "open", "locked": false, "assignee": {"login": "rmlarsen", "id": 16907534, "node_id": "MDQ6VXNlcjE2OTA3NTM0", "avatar_url": "https://avatars2.githubusercontent.com/u/16907534?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rmlarsen", "html_url": "https://github.com/rmlarsen", "followers_url": "https://api.github.com/users/rmlarsen/followers", "following_url": "https://api.github.com/users/rmlarsen/following{/other_user}", "gists_url": "https://api.github.com/users/rmlarsen/gists{/gist_id}", "starred_url": "https://api.github.com/users/rmlarsen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rmlarsen/subscriptions", "organizations_url": "https://api.github.com/users/rmlarsen/orgs", "repos_url": "https://api.github.com/users/rmlarsen/repos", "events_url": "https://api.github.com/users/rmlarsen/events{/privacy}", "received_events_url": "https://api.github.com/users/rmlarsen/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "rmlarsen", "id": 16907534, "node_id": "MDQ6VXNlcjE2OTA3NTM0", "avatar_url": "https://avatars2.githubusercontent.com/u/16907534?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rmlarsen", "html_url": "https://github.com/rmlarsen", "followers_url": "https://api.github.com/users/rmlarsen/followers", "following_url": "https://api.github.com/users/rmlarsen/following{/other_user}", "gists_url": "https://api.github.com/users/rmlarsen/gists{/gist_id}", "starred_url": "https://api.github.com/users/rmlarsen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rmlarsen/subscriptions", "organizations_url": "https://api.github.com/users/rmlarsen/orgs", "repos_url": "https://api.github.com/users/rmlarsen/repos", "events_url": "https://api.github.com/users/rmlarsen/events{/privacy}", "received_events_url": "https://api.github.com/users/rmlarsen/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 2, "created_at": "2018-04-25T14:42:43Z", "updated_at": "2018-12-14T18:52:49Z", "closed_at": null, "author_association": "NONE", "body": "Hi,\r\n\r\nI think it could be interesting to have a transformation graph function to fold batch_norms into depthwise_conv like with standard conv2d [like here](https://github.com/tensorflow/tensorflow/blob/master/tensorflow/tools/graph_transforms/README.md#fold_batch_norms)."}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/18849", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/18849/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/18849/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/18849/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/18849", "id": 317473593, "node_id": "MDU6SXNzdWUzMTc0NzM1OTM=", "number": 18849, "title": "CUPTI events are missing from tf.train.Server", "user": {"login": "xldrx", "id": 1114830, "node_id": "MDQ6VXNlcjExMTQ4MzA=", "avatar_url": "https://avatars1.githubusercontent.com/u/1114830?v=4", "gravatar_id": "", "url": "https://api.github.com/users/xldrx", "html_url": "https://github.com/xldrx", "followers_url": "https://api.github.com/users/xldrx/followers", "following_url": "https://api.github.com/users/xldrx/following{/other_user}", "gists_url": "https://api.github.com/users/xldrx/gists{/gist_id}", "starred_url": "https://api.github.com/users/xldrx/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/xldrx/subscriptions", "organizations_url": "https://api.github.com/users/xldrx/orgs", "repos_url": "https://api.github.com/users/xldrx/repos", "events_url": "https://api.github.com/users/xldrx/events{/privacy}", "received_events_url": "https://api.github.com/users/xldrx/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": {"login": "prb12", "id": 11547801, "node_id": "MDQ6VXNlcjExNTQ3ODAx", "avatar_url": "https://avatars1.githubusercontent.com/u/11547801?v=4", "gravatar_id": "", "url": "https://api.github.com/users/prb12", "html_url": "https://github.com/prb12", "followers_url": "https://api.github.com/users/prb12/followers", "following_url": "https://api.github.com/users/prb12/following{/other_user}", "gists_url": "https://api.github.com/users/prb12/gists{/gist_id}", "starred_url": "https://api.github.com/users/prb12/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/prb12/subscriptions", "organizations_url": "https://api.github.com/users/prb12/orgs", "repos_url": "https://api.github.com/users/prb12/repos", "events_url": "https://api.github.com/users/prb12/events{/privacy}", "received_events_url": "https://api.github.com/users/prb12/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "prb12", "id": 11547801, "node_id": "MDQ6VXNlcjExNTQ3ODAx", "avatar_url": "https://avatars1.githubusercontent.com/u/11547801?v=4", "gravatar_id": "", "url": "https://api.github.com/users/prb12", "html_url": "https://github.com/prb12", "followers_url": "https://api.github.com/users/prb12/followers", "following_url": "https://api.github.com/users/prb12/following{/other_user}", "gists_url": "https://api.github.com/users/prb12/gists{/gist_id}", "starred_url": "https://api.github.com/users/prb12/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/prb12/subscriptions", "organizations_url": "https://api.github.com/users/prb12/orgs", "repos_url": "https://api.github.com/users/prb12/repos", "events_url": "https://api.github.com/users/prb12/events{/privacy}", "received_events_url": "https://api.github.com/users/prb12/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2018-04-25T04:17:19Z", "updated_at": "2018-12-07T18:50:37Z", "closed_at": null, "author_association": "CONTRIBUTOR", "body": "### System information\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**: Linux Ubuntu 16.04\r\n- **TensorFlow installed from (source or binary)**: Source\r\n- **TensorFlow version (use command below)**: r1.7, r1.6, r1.5\r\n- **Python version**: 3.6\r\n- **Bazel version (if compiling from source)**: 0.11.0\r\n- **GCC/Compiler version (if compiling from source)**: \r\n- **CUDA/cuDNN version**: 9.1/7.1.3, 9.0/7.0.5\r\n- **GPU model and memory**: K80/V100/GTX TITAN\r\n- **Exact command to reproduce**: See the description\r\n\r\n### Describe the problem\r\nI am collecting runtime tracing using `tf.RunOptions.FULL_TRACE`. When a direct session is used (`master=None`), CUPTI events (`/stream:*` devices) are included in `tf.RunMetadata`. However, a remote (grpc) session does not have any. Is there a particular reason behind it?\r\n\r\nFor example the following script has the CUPTI:\r\n```python\r\nimport tensorflow as tf\r\nimport tensorflow.contrib.slim.nets as nets\r\n\r\nmodel, _ = nets.resnet_v2.resnet_v2_50(tf.random_uniform([16,299,299,3]))\r\n\r\nwith tf.train.MonitoredTrainingSession() as sess:\r\n     run_metadata = tf.RunMetadata()\r\n     sess.run(model.op, run_metadata=run_metadata, options=tf.RunOptions(trace_level=tf.RunOptions.FULL_TRACE))\r\n\r\nprint([d.device for d in run_metadata.step_stats.dev_stats])\r\nassert any([\"stream:all\" in d.device for d in run_metadata.step_stats.dev_stats])\r\n```\r\nThe example output on my device is:\r\n```\r\n['/device:GPU:0/stream:7', '/device:GPU:0/memcpy', '/device:GPU:0/stream:25', '/device:GPU:0/stream:24', '/device:GPU:0/stream:13', '/job:localhost/replica:0/task:0/device:GPU:0', '/device:GPU:0/stream:18', '/device:GPU:0/stream:all', '/device:GPU:0/stream:23', '/device:GPU:0/stream:31', '/device:GPU:0/stream:20', '/device:GPU:0/stream:22', '/device:GPU:0/stream:19', '/device:GPU:0/stream:21']\r\n```\r\n\r\nHowever, the following example does not have any CUPTI events:\r\n```python\r\nimport tensorflow as tf\r\nimport tensorflow.contrib.slim.nets as nets\r\n\r\nserver = tf.train.Server(tf.train.ClusterSpec({\"worker\":[\"localhost:2222\"]}), \"worker\", 0)\r\nmodel, _ = nets.resnet_v2.resnet_v2_50(tf.random_uniform([16,299,299,3]))\r\n\r\nwith tf.train.MonitoredTrainingSession(master=\"grpc://localhost:2222\") as sess:\r\n     run_metadata = tf.RunMetadata()\r\n     sess.run(model.op, run_metadata=run_metadata, options=tf.RunOptions(trace_level=tf.RunOptions.FULL_TRACE))\r\n\r\nprint([d.device for d in run_metadata.step_stats.dev_stats])\r\nassert any([\"stream:all\" in d.device for d in run_metadata.step_stats.dev_stats])\r\n```\r\n\r\nThe following is the output on my device:\r\n```\r\n['/job:worker/replica:0/task:0/device:GPU:0']\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\nAssertionError\r\n```\r\n\r\nI have tried this with multiple version of TensorFlow (r1.7, r1.6, r1.5) and both `grpc_tensorflow_server` and `tf.train.Server`.\r\n"}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/18839", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/18839/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/18839/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/18839/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/18839", "id": 317397135, "node_id": "MDU6SXNzdWUzMTczOTcxMzU=", "number": 18839, "title": "output 'tensorflow/core/kernels/_objs/gather_functor_gpu/tensorflow/core/kernels/gather_functor_gpu.cu.o' was not created", "user": {"login": "apoorva-js", "id": 38570674, "node_id": "MDQ6VXNlcjM4NTcwNjc0", "avatar_url": "https://avatars2.githubusercontent.com/u/38570674?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apoorva-js", "html_url": "https://github.com/apoorva-js", "followers_url": "https://api.github.com/users/apoorva-js/followers", "following_url": "https://api.github.com/users/apoorva-js/following{/other_user}", "gists_url": "https://api.github.com/users/apoorva-js/gists{/gist_id}", "starred_url": "https://api.github.com/users/apoorva-js/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apoorva-js/subscriptions", "organizations_url": "https://api.github.com/users/apoorva-js/orgs", "repos_url": "https://api.github.com/users/apoorva-js/repos", "events_url": "https://api.github.com/users/apoorva-js/events{/privacy}", "received_events_url": "https://api.github.com/users/apoorva-js/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 23, "created_at": "2018-04-24T21:12:15Z", "updated_at": "2019-10-18T10:52:26Z", "closed_at": null, "author_association": "NONE", "body": "When trying to build latest TensorFlow for CUDA 8.0/CuDNN 6.0\r\nThis is the error I'm facing when trying to execute the bazel build :<file> command.\r\nfollowing this error is,\r\n\r\n\r\n\r\nnot all outputs were created or valid\r\nTarget //tensorflow/loader:loader failed to build\r\nUse --verbose_failures to see the command lines of failed build steps.\r\nINFO: Elapsed time: 237.164s, Critical Path: 30.79s\r\nFAILED: Build did NOT complete successfully\r\n\r\n\r\n\r\n\r\ntrying to execute the loader.cc code from https://medium.com/jim-fleming/loading-a-tensorflow-graph-with-the-c-api-4caaff88463f\r\nstuck at the second step in Compile & Run Section. (From inside the project folder call bazel build :loader)"}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/18823", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/18823/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/18823/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/18823/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/18823", "id": 317125488, "node_id": "MDU6SXNzdWUzMTcxMjU0ODg=", "number": 18823, "title": "Variables in tf.contrib.autograph", "user": {"login": "sven1977", "id": 5839854, "node_id": "MDQ6VXNlcjU4Mzk4NTQ=", "avatar_url": "https://avatars3.githubusercontent.com/u/5839854?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sven1977", "html_url": "https://github.com/sven1977", "followers_url": "https://api.github.com/users/sven1977/followers", "following_url": "https://api.github.com/users/sven1977/following{/other_user}", "gists_url": "https://api.github.com/users/sven1977/gists{/gist_id}", "starred_url": "https://api.github.com/users/sven1977/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sven1977/subscriptions", "organizations_url": "https://api.github.com/users/sven1977/orgs", "repos_url": "https://api.github.com/users/sven1977/repos", "events_url": "https://api.github.com/users/sven1977/events{/privacy}", "received_events_url": "https://api.github.com/users/sven1977/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 299643928, "node_id": "MDU6TGFiZWwyOTk2NDM5Mjg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:contributions%20welcome", "name": "stat:contributions welcome", "color": "f4b400", "default": false, "description": ""}, {"id": 473173272, "node_id": "MDU6TGFiZWw0NzMxNzMyNzI=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:feature", "name": "type:feature", "color": "159b2e", "default": false, "description": ""}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 16, "created_at": "2018-04-24T08:40:16Z", "updated_at": "2019-10-28T15:25:42Z", "closed_at": null, "author_association": "NONE", "body": "This question is regarding creating tf.Variables inside an autograph function.\r\n\r\nThe semantics that we have been trying are:\r\n\r\n```\r\ndef func():\r\n   v = []\r\n   autograph.utils.set_element_type(v, tf.int32)\r\n   v.extend([0.5, 0.1])\r\n   return v.stack()\r\n\r\n# And then:\r\nt = autograph.to_graph(func)\r\n```\r\n\r\nHowever, now the return value of the function is an op, not a variable. The question is, how do I get the variable `v` as a tf.Variable \"out of\" my autograph function?\r\n\r\n\r\n"}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/18813", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/18813/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/18813/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/18813/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/18813", "id": 317012871, "node_id": "MDU6SXNzdWUzMTcwMTI4NzE=", "number": 18813, "title": "Support in the Dataset API for sharding dataset used in stateful LSTMs", "user": {"login": "terrykong", "id": 7576060, "node_id": "MDQ6VXNlcjc1NzYwNjA=", "avatar_url": "https://avatars3.githubusercontent.com/u/7576060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/terrykong", "html_url": "https://github.com/terrykong", "followers_url": "https://api.github.com/users/terrykong/followers", "following_url": "https://api.github.com/users/terrykong/following{/other_user}", "gists_url": "https://api.github.com/users/terrykong/gists{/gist_id}", "starred_url": "https://api.github.com/users/terrykong/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/terrykong/subscriptions", "organizations_url": "https://api.github.com/users/terrykong/orgs", "repos_url": "https://api.github.com/users/terrykong/repos", "events_url": "https://api.github.com/users/terrykong/events{/privacy}", "received_events_url": "https://api.github.com/users/terrykong/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 299643928, "node_id": "MDU6TGFiZWwyOTk2NDM5Mjg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:contributions%20welcome", "name": "stat:contributions welcome", "color": "f4b400", "default": false, "description": ""}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2018-04-23T23:02:42Z", "updated_at": "2018-05-21T15:30:42Z", "closed_at": null, "author_association": "NONE", "body": "- Have I written custom code (as opposed to using a stock example script provided in TensorFlow):\r\nyes\r\n- OS Platform and Distribution (e.g., Linux Ubuntu 16.04):\r\nubuntu 16.04\r\n- TensorFlow installed from (source or binary):\r\nusing docker from google container registry\r\n- TensorFlow version (use command below):\r\n1.7.0\r\n- Python version:\r\n3.5\r\n- Bazel version (if compiling from source):\r\nn/a\r\n- GCC/Compiler version (if compiling from source):\r\nn/a\r\n- CUDA/cuDNN version:\r\nn/a\r\n- GPU model and memory:\r\nn/a\r\n- Exact command to reproduce:\r\nn/a\r\n\r\nHi,\r\n\r\nI was wondering if there will ever be support for sharding a dataset where the order matters? As an example, consider the ptb_word_lm.py script. In the training of the LSTM, batches must be kept in order since the hidden/cell state is never reset (until the end of the epoch). If we use tf.data, we wouldn't be able to use Dataset.shard(...) on the examples themselves because we would get batches like this (assuming 4 workers in a distributed training and batch_size=3):\r\n\r\nworker0_batch0 = [example_0, example_4, example_8]\r\nworker0_batch1 = [example_12, example_16, example_20]\r\n...\r\n\r\nworker1_batch0 = [example_1, example_5, example_9]\r\nworker1_batch1 = [example_13, example_17, example_21]\r\n...\r\n\r\nworker2_batch0 = [example_2, example_6, example_10]\r\nworker2_batch1 = [example_14, example_18, example_22]\r\n...\r\n\r\nworker3_batch0 = [example_3, example_7, example_11]\r\nworker3_batch1 = [example_15, example_19, example_23]\r\n...\r\n\r\n**Assuming the size of the dataset is N, then what we really want is** \r\n\r\nworker0_batch0 = [example_0, example_1, example_2]\r\nworker0_batch1 = [example_3, example_4, example_5]\r\n...\r\n\r\nworker1_batch0 = [example_(N/4)+0, example_(N/4)+1, example_(N/4)+2]\r\nworker1_batch1 = [example_(N/4)+3, example_(N/4)+4, example_(N/4)+5]\r\n...\r\n\r\nworker2_batch0 = [example_2*(N/4)+0, example_2*(N/4)+1, example_2*(N/4)+2]\r\nworker2_batch1 = [example_2*(N/4)+3, example_2*(N/4)+4, example_2*(N/4)+5]\r\n...\r\n\r\nworker3_batch0 = [example_3*(N/4)+0, example_3*(N/4)+1, example_3*(N/4)+2]\r\nworker3_batch1 =[example_3*(N/4)+3, example_3*(N/4)+4, example_3*(N/4)+5]\r\n...\r\n\r\nEven sharding the batches instead of the examples would lead to a similar picture.\r\n\r\nSo I guess if I had a list of TFRecord filenames, I could split the filenames, but I have a concern in the context of synchronous training. Suppose I have 10 tfrecord files (each with 10k examples) and 4 workers. The first two workers would get 3 files and the other two would get 2 files. If my understanding of SyncReplicasOptimizer is correct, I would either have to toss each of the 10k examples on the first two workers, or create a barrier for the second two workers to not proceed until the first two are done. Is there another solution here aside from equally splitting up my training data among files?\r\n\r\nI can think of a couple of workarounds to this problem, but I'd like to know if this problem has been, or will be, solved?"}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/18807", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/18807/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/18807/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/18807/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/18807", "id": 316972685, "node_id": "MDU6SXNzdWUzMTY5NzI2ODU=", "number": 18807, "title": "OpKernel not registered, despite being listed in OpRegistry", "user": {"login": "sadlerjw", "id": 2762244, "node_id": "MDQ6VXNlcjI3NjIyNDQ=", "avatar_url": "https://avatars3.githubusercontent.com/u/2762244?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sadlerjw", "html_url": "https://github.com/sadlerjw", "followers_url": "https://api.github.com/users/sadlerjw/followers", "following_url": "https://api.github.com/users/sadlerjw/following{/other_user}", "gists_url": "https://api.github.com/users/sadlerjw/gists{/gist_id}", "starred_url": "https://api.github.com/users/sadlerjw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sadlerjw/subscriptions", "organizations_url": "https://api.github.com/users/sadlerjw/orgs", "repos_url": "https://api.github.com/users/sadlerjw/repos", "events_url": "https://api.github.com/users/sadlerjw/events{/privacy}", "received_events_url": "https://api.github.com/users/sadlerjw/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": {"login": "aselle", "id": 326106, "node_id": "MDQ6VXNlcjMyNjEwNg==", "avatar_url": "https://avatars1.githubusercontent.com/u/326106?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aselle", "html_url": "https://github.com/aselle", "followers_url": "https://api.github.com/users/aselle/followers", "following_url": "https://api.github.com/users/aselle/following{/other_user}", "gists_url": "https://api.github.com/users/aselle/gists{/gist_id}", "starred_url": "https://api.github.com/users/aselle/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aselle/subscriptions", "organizations_url": "https://api.github.com/users/aselle/orgs", "repos_url": "https://api.github.com/users/aselle/repos", "events_url": "https://api.github.com/users/aselle/events{/privacy}", "received_events_url": "https://api.github.com/users/aselle/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "aselle", "id": 326106, "node_id": "MDQ6VXNlcjMyNjEwNg==", "avatar_url": "https://avatars1.githubusercontent.com/u/326106?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aselle", "html_url": "https://github.com/aselle", "followers_url": "https://api.github.com/users/aselle/followers", "following_url": "https://api.github.com/users/aselle/following{/other_user}", "gists_url": "https://api.github.com/users/aselle/gists{/gist_id}", "starred_url": "https://api.github.com/users/aselle/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aselle/subscriptions", "organizations_url": "https://api.github.com/users/aselle/orgs", "repos_url": "https://api.github.com/users/aselle/repos", "events_url": "https://api.github.com/users/aselle/events{/privacy}", "received_events_url": "https://api.github.com/users/aselle/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 8, "created_at": "2018-04-23T20:34:00Z", "updated_at": "2019-04-11T13:29:35Z", "closed_at": null, "author_association": "CONTRIBUTOR", "body": "### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**: No\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**:macOS High Sierra 10.13.3\r\n- **TensorFlow installed from (source or binary)**: source\r\n- **TensorFlow version (use command below)**: 1.7.0\r\n- **Python version**: 2.7.14\r\n- **Bazel version (if compiling from source)**: 0.12.0-homebrew\r\n- **GCC/Compiler version (if compiling from source)**: Xcode 9.3: Apple LLVM version 9.1.0 (clang-902.0.39.1)\r\n- **CUDA/cuDNN version**: n/a\r\n- **GPU model and memory**: n/a\r\n- **Exact command to reproduce**: `tensorflow/contrib/makefile/build_all_ios.sh -g /path/to/model.p`\r\n\r\n### Describe the problem\r\nI have a ListDiff op in my model; as such, the generated `ops_to_register` file includes the following bits (edited way down to fit nicely):\r\n\r\n```c\r\nconstexpr inline bool ShouldRegisterOp(const char op[]) {\r\n  return false\r\n     || isequal(op, \"ListDiff\")\r\n  ;\r\n}\r\n```\r\n```c\r\nconstexpr const char* kNecessaryOpKernelClasses[] = {\r\n  \"ListDiffOp<::tensorflow::int32, int32>\",\r\n};\r\n```\r\n\r\nHowever, when I try to load the model, it gives:\r\n```\r\nError adding graph to session: No OpKernel was registered to support Op 'ListDiff' with these attrs.  Registered devices: [CPU], Registered kernels:\r\n  <no registered kernels>\r\n\r\n\t [[Node: rgb_to_grayscale/Tensordot/ListDiff = ListDiff[T=DT_INT32, out_idx=DT_INT32](rgb_to_grayscale/Tensordot/range, rgb_to_grayscale/Tensordot/add_1)]]\r\n```\r\n\r\nIf I print the full list of registered ops via `tensorflow::OpRegistry::Global()->DebugString(false)`, the line for ListDiff is (line breaks added for readability):\r\n\r\n```\r\nOp<\r\n    name=ListDiff; \r\n    signature=x:T, y:T -> out:T, idx:out_idx; \r\n    attr=T:type; \r\n    attr=out_idx:type,default=DT_INT32,allowed=[DT_INT32, DT_INT64]\r\n>\r\n```\r\n\r\nThe only thing I can think of here is that `T:type` has no allowable values (I would expect to see `DT_INT32` given my `ops_to_register.h` file). However in a working build before I added `ListDiff`,  I had a few ops that has no listed allowable values (`Reshape` and `Squeeze`, in this case). I've read through the code that registers the `ListDiff` op and couldn't find anything out of the ordinary, but I'm a fairly novice Tensorflower.\r\n\r\nPossibly related to #15732?\r\n\r\n### Source code / logs\r\nN/A\r\n"}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/18787", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/18787/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/18787/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/18787/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/18787", "id": 316657869, "node_id": "MDU6SXNzdWUzMTY2NTc4Njk=", "number": 18787, "title": "Default arguments of tensorflow.contrib.signal.inverse_stft do not invert tensorflow.contrib.signal.stft", "user": {"login": "boeddeker", "id": 13744128, "node_id": "MDQ6VXNlcjEzNzQ0MTI4", "avatar_url": "https://avatars3.githubusercontent.com/u/13744128?v=4", "gravatar_id": "", "url": "https://api.github.com/users/boeddeker", "html_url": "https://github.com/boeddeker", "followers_url": "https://api.github.com/users/boeddeker/followers", "following_url": "https://api.github.com/users/boeddeker/following{/other_user}", "gists_url": "https://api.github.com/users/boeddeker/gists{/gist_id}", "starred_url": "https://api.github.com/users/boeddeker/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/boeddeker/subscriptions", "organizations_url": "https://api.github.com/users/boeddeker/orgs", "repos_url": "https://api.github.com/users/boeddeker/repos", "events_url": "https://api.github.com/users/boeddeker/events{/privacy}", "received_events_url": "https://api.github.com/users/boeddeker/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1566679705, "node_id": "MDU6TGFiZWwxNTY2Njc5NzA1", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/comp:signal", "name": "comp:signal", "color": "0052cc", "default": false, "description": "tf.signal related issues"}], "state": "open", "locked": false, "assignee": {"login": "rryan", "id": 26527, "node_id": "MDQ6VXNlcjI2NTI3", "avatar_url": "https://avatars3.githubusercontent.com/u/26527?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rryan", "html_url": "https://github.com/rryan", "followers_url": "https://api.github.com/users/rryan/followers", "following_url": "https://api.github.com/users/rryan/following{/other_user}", "gists_url": "https://api.github.com/users/rryan/gists{/gist_id}", "starred_url": "https://api.github.com/users/rryan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rryan/subscriptions", "organizations_url": "https://api.github.com/users/rryan/orgs", "repos_url": "https://api.github.com/users/rryan/repos", "events_url": "https://api.github.com/users/rryan/events{/privacy}", "received_events_url": "https://api.github.com/users/rryan/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "rryan", "id": 26527, "node_id": "MDQ6VXNlcjI2NTI3", "avatar_url": "https://avatars3.githubusercontent.com/u/26527?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rryan", "html_url": "https://github.com/rryan", "followers_url": "https://api.github.com/users/rryan/followers", "following_url": "https://api.github.com/users/rryan/following{/other_user}", "gists_url": "https://api.github.com/users/rryan/gists{/gist_id}", "starred_url": "https://api.github.com/users/rryan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rryan/subscriptions", "organizations_url": "https://api.github.com/users/rryan/orgs", "repos_url": "https://api.github.com/users/rryan/repos", "events_url": "https://api.github.com/users/rryan/events{/privacy}", "received_events_url": "https://api.github.com/users/rryan/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 3, "created_at": "2018-04-23T04:27:27Z", "updated_at": "2019-09-19T21:33:24Z", "closed_at": null, "author_association": "CONTRIBUTOR", "body": "This issue is a suggestion to modify `tensorflow.contrib.signal.inverse_stft` such that the default arguments invert the `stft`\r\n\r\n## Background\r\nCurrently the correct call to `inverse_stft` is:\r\n```python\r\n... = tf.contrib.signal.inverse_stft(\r\n    stfts=...,\r\n    frame_length=frame_length,\r\n    frame_step=frame_step,\r\n    # forward_window_fn\r\n    window_fn=tf.contrib.signal.inverse_stft_window_fn(\r\n        frame_step=frame_step,\r\n        forward_window_fn=functools.partial(tf.contrib.signal.hann_window, periodic=True),\r\n    )\r\n)\r\n```\r\nbut the default value for `window_fn` is `functools.partial(tf.contrib.signal.hann_window, periodic=True)` so the call to `inverse_stft_window_fn` is missing, because the `frame_step` is unknown for the default argument.\r\n\r\nNote: Because the hann window has some special properties, it can happen, that the inverse stft only introduces an amplitude error.\r\n\r\n## Suggestion\r\nIntroduce `forward_window_fn` in `tensorflow.contrib.signal.inverse_stft` and change the defaults to `window_fn=None, forward_window_fn=functools.partial(tf.contrib.signal.hann_window, periodic=True)`.\r\nThe code inside would then be:\r\n```python\r\nif window_fn is None:\r\n    window_fn = tf.contrib.signal.inverse_stft_window_fn(frame_step, forward_window_fn)\r\n```\r\n\r\n## Example code (Demonstration)\r\n\r\n```python\r\nimport functools\r\nimport tensorflow as tf\r\nimport tensorflow.contrib\r\nimport matplotlib.pyplot as plt\r\n\r\nframe_length = 32\r\nframe_step = 16\r\n\r\nx = tf.placeholder(tf.float32)\r\nX = tf.contrib.signal.stft(\r\n    x,\r\n    frame_length=frame_length,\r\n    frame_step=frame_step,\r\n)\r\nx_hat = tf.contrib.signal.inverse_stft(\r\n    X,\r\n    frame_length=frame_length,\r\n    frame_step=frame_step,\r\n)\r\nx_hat_2 = tf.contrib.signal.inverse_stft(\r\n    X,\r\n    frame_length=frame_length,\r\n    frame_step=frame_step,\r\n    # forward_window_fn\r\n    window_fn=tf.contrib.signal.inverse_stft_window_fn(\r\n        frame_step,\r\n        functools.partial(tf.contrib.signal.hann_window, periodic=True),\r\n        \r\n    )\r\n)\r\n\r\ndef normalize(x):\r\n    return x / (-np.min(x))\r\n\r\nwith tf.Session() as sess:\r\n    t = np.linspace(0,10,128)\r\n    x_np = np.sin(t)\r\n    x_hat_np, x_hat_2_np = sess.run([x_hat, x_hat_2], {x: x_np})\r\n  \r\n    plt.plot(t, x_np, label='orig')\r\n    plt.plot(t, x_hat_np, label='default')\r\n    plt.plot(t, x_hat_2_np, label='fixed')\r\n#     plt.plot(t, normalize(x_np), label='orig', linewidth=8)\r\n#     plt.plot(t, normalize(x_hat_np), label='default', linewidth=6)\r\n#     plt.plot(t, normalize(x_hat_2_np), label='fixed', linewidth=4)\r\n    plt.legend()\r\n\r\n```\r\n\r\n`frame_step == 8`:\r\n![frame_step8](https://user-images.githubusercontent.com/13744128/39106793-5e78d87a-46be-11e8-9e88-d0c101f4b8de.png)\r\n\r\n`frame_step == 16`:\r\n![frame_step16](https://user-images.githubusercontent.com/13744128/39106796-61da9b52-46be-11e8-8c1f-de64c10e4f2d.png)\r\n\r\nWhile the example with `frame_step == 8` introduces \"only\" a scaling error, the `frame_step == 16` example introduces distortions.\r\n\r\n\r\n------------------------\r\n\r\n### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**: Yes\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**: Linux Ubuntu 16.04\r\n- **TensorFlow installed from (source or binary)**: binary\r\n- **TensorFlow version (use command below)**: Name: tf-nightly\r\nVersion: 1.8.0.dev20180331\r\nSummary: TensorFlow helps the tensors flow\r\nHome-page: https://www.tensorflow.org/\r\nAuthor: Google Inc.\r\nAuthor-email: opensource@google.com\r\nLicense: Apache 2.0\r\nLocation: /opt/anaconda/lib/python3.6/site-packages\r\nRequires: grpcio, astor, gast, termcolor, six, absl-py, numpy, wheel, protobuf, tb-nightly\r\n- **Python version**: 3.6\r\n- **Bazel version (if compiling from source)**:\r\n- **GCC/Compiler version (if compiling from source)**:\r\n- **CUDA/cuDNN version**:\r\n- **GPU model and memory**:\r\n- **Exact command to reproduce**:\r\n\r\n"}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/18768", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/18768/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/18768/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/18768/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/18768", "id": 316552066, "node_id": "MDU6SXNzdWUzMTY1NTIwNjY=", "number": 18768, "title": "Bad error message: InvalidArgumentError with no further info (besides Invalid argument)", "user": {"login": "rothn", "id": 4665783, "node_id": "MDQ6VXNlcjQ2NjU3ODM=", "avatar_url": "https://avatars3.githubusercontent.com/u/4665783?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rothn", "html_url": "https://github.com/rothn", "followers_url": "https://api.github.com/users/rothn/followers", "following_url": "https://api.github.com/users/rothn/following{/other_user}", "gists_url": "https://api.github.com/users/rothn/gists{/gist_id}", "starred_url": "https://api.github.com/users/rothn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rothn/subscriptions", "organizations_url": "https://api.github.com/users/rothn/orgs", "repos_url": "https://api.github.com/users/rothn/repos", "events_url": "https://api.github.com/users/rothn/events{/privacy}", "received_events_url": "https://api.github.com/users/rothn/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 473173272, "node_id": "MDU6TGFiZWw0NzMxNzMyNzI=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:feature", "name": "type:feature", "color": "159b2e", "default": false, "description": ""}], "state": "open", "locked": false, "assignee": {"login": "allenlavoie", "id": 3731025, "node_id": "MDQ6VXNlcjM3MzEwMjU=", "avatar_url": "https://avatars3.githubusercontent.com/u/3731025?v=4", "gravatar_id": "", "url": "https://api.github.com/users/allenlavoie", "html_url": "https://github.com/allenlavoie", "followers_url": "https://api.github.com/users/allenlavoie/followers", "following_url": "https://api.github.com/users/allenlavoie/following{/other_user}", "gists_url": "https://api.github.com/users/allenlavoie/gists{/gist_id}", "starred_url": "https://api.github.com/users/allenlavoie/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/allenlavoie/subscriptions", "organizations_url": "https://api.github.com/users/allenlavoie/orgs", "repos_url": "https://api.github.com/users/allenlavoie/repos", "events_url": "https://api.github.com/users/allenlavoie/events{/privacy}", "received_events_url": "https://api.github.com/users/allenlavoie/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "allenlavoie", "id": 3731025, "node_id": "MDQ6VXNlcjM3MzEwMjU=", "avatar_url": "https://avatars3.githubusercontent.com/u/3731025?v=4", "gravatar_id": "", "url": "https://api.github.com/users/allenlavoie", "html_url": "https://github.com/allenlavoie", "followers_url": "https://api.github.com/users/allenlavoie/followers", "following_url": "https://api.github.com/users/allenlavoie/following{/other_user}", "gists_url": "https://api.github.com/users/allenlavoie/gists{/gist_id}", "starred_url": "https://api.github.com/users/allenlavoie/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/allenlavoie/subscriptions", "organizations_url": "https://api.github.com/users/allenlavoie/orgs", "repos_url": "https://api.github.com/users/allenlavoie/repos", "events_url": "https://api.github.com/users/allenlavoie/events{/privacy}", "received_events_url": "https://api.github.com/users/allenlavoie/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 4, "created_at": "2018-04-22T06:01:09Z", "updated_at": "2018-12-20T18:46:47Z", "closed_at": null, "author_association": "NONE", "body": "When loading a model saved like the following to resume training (same machine, same version), I get an InvalidArgumentError:\r\n\r\nCode:\r\nsaver = tf.train.Saver({\"embeddings\": embeddings, \"weights\": nce_weights, \"biases\": nce_biases})\r\n\r\nSave:\r\nsaver.save(sess, model_checkpoint_path)\r\n\r\nLoad:\r\nsaver.restore(sess, model_checkpoint_path)\r\n\r\nExpected Output:\r\nSomething that actually tells me what went wrong (even if it is internal stuff, I want to know!)\r\n\r\nActual Output:\r\n```\r\n2018-04-21 22:45:00.143245: W tensorflow/core/framework/op_kernel.cc:1273] OP_REQUIRES failed at save_restore_v2_ops.cc:184 : Invalid argument: /Users/nroth/Documents/****/trained_model/****embeddings.ckpt.data-00000-of-00001; Invalid argument\r\nTraceback (most recent call last):\r\n  File \"/Users/nroth/tf_python/lib/python3.6/site-packages/tensorflow/python/client/session.py\", line 1327, in _do_call\r\n    return fn(*args)\r\n  File \"/Users/nroth/tf_python/lib/python3.6/site-packages/tensorflow/python/client/session.py\", line 1312, in _run_fn\r\n    options, feed_dict, fetch_list, target_list, run_metadata)\r\n  File \"/Users/nroth/tf_python/lib/python3.6/site-packages/tensorflow/python/client/session.py\", line 1420, in _call_tf_sessionrun\r\n    status, run_metadata)\r\n  File \"/Users/nroth/tf_python/lib/python3.6/site-packages/tensorflow/python/framework/errors_impl.py\", line 516, in __exit__\r\n    c_api.TF_GetCode(self.status.status))\r\ntensorflow.python.framework.errors_impl.InvalidArgumentError: /Users/nroth/Documents/****/trained_model/****embeddings.ckpt.data-00000-of-00001; Invalid argument\r\n\t [[Node: save/RestoreV2 = RestoreV2[dtypes=[DT_FLOAT, DT_FLOAT, DT_FLOAT], _device=\"/job:localhost/replica:0/task:0/device:CPU:0\"](_arg_save/Const_0_0, save/RestoreV2/tensor_names, save/RestoreV2/shape_and_slices)]]\r\n\r\n... <contains sensitive info> ...\r\n\r\nInvalidArgumentError (see above for traceback): /Users/nroth/Documents/****/trained_model/****embeddings.ckpt.data-00000-of-00001; Invalid argument\r\n\t [[Node: save/RestoreV2 = RestoreV2[dtypes=[DT_FLOAT, DT_FLOAT, DT_FLOAT], _device=\"/job:localhost/replica:0/task:0/device:CPU:0\"](_arg_save/Const_0_0, save/RestoreV2/tensor_names, save/RestoreV2/shape_and_slices)]]\r\n```\r\n\r\n**Clarification requested by tensorflowbutler**\r\n_Have I written custom code:_\r\nYes, I modified this code (https://github.com/PacktPublishing/TensorFlow-Machine-Learning-Cookbook/blob/master/Chapter%2007/doc2vec.py) to work with TensorFlow 1.7 and to use the same embeddings variable for documents as for words with average instead of concatenation. I also updated the saved variables to include nce_weights and nce_biases so that training may be resumed.\r\n_OS Platform and Distribution_\r\nMacOS 10.13.4 (17E199)\r\n_TensorFlow installed from_\r\npip on VirtualEnv, according to instructions (https://www.tensorflow.org/install/install_mac)\r\n_TensorFlow version_\r\n1.7\r\n_Bazel version_\r\nNA\r\n_CUDA/cuDNN version_\r\nNA\r\n_GPU model and memory_\r\nNA\r\n_Exact command to reproduce_\r\nsaver = tf.train.Saver({\"embeddings\": embeddings, \"weights\": nce_weights, \"biases\": nce_biases})\r\nsaver.restore(sess, \"../trained_model/saved_stuff\")"}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/18764", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/18764/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/18764/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/18764/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/18764", "id": 316533464, "node_id": "MDU6SXNzdWUzMTY1MzM0NjQ=", "number": 18764, "title": "Feature Request: Gradients for angles in tf.contrib.image.rotate()", "user": {"login": "Noahyt", "id": 23128135, "node_id": "MDQ6VXNlcjIzMTI4MTM1", "avatar_url": "https://avatars1.githubusercontent.com/u/23128135?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Noahyt", "html_url": "https://github.com/Noahyt", "followers_url": "https://api.github.com/users/Noahyt/followers", "following_url": "https://api.github.com/users/Noahyt/following{/other_user}", "gists_url": "https://api.github.com/users/Noahyt/gists{/gist_id}", "starred_url": "https://api.github.com/users/Noahyt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Noahyt/subscriptions", "organizations_url": "https://api.github.com/users/Noahyt/orgs", "repos_url": "https://api.github.com/users/Noahyt/repos", "events_url": "https://api.github.com/users/Noahyt/events{/privacy}", "received_events_url": "https://api.github.com/users/Noahyt/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 299643928, "node_id": "MDU6TGFiZWwyOTk2NDM5Mjg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:contributions%20welcome", "name": "stat:contributions welcome", "color": "f4b400", "default": false, "description": ""}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 10, "created_at": "2018-04-21T23:13:04Z", "updated_at": "2018-09-12T16:55:21Z", "closed_at": null, "author_association": "NONE", "body": "\r\n### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**: No\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**:Mac OS 10.13\r\n- **TensorFlow installed from (source or binary)**: Binary\r\n- **TensorFlow version (use command below)**: tf-nightly | 1.8.0.dev20180328\r\n- **Python version**: 3.6\r\n- **Bazel version (if compiling from source)**:\r\n- **GCC/Compiler version (if compiling from source)**:\r\n- **CUDA/cuDNN version**:\r\n- **GPU model and memory**:\r\n- **Exact command to reproduce**: N/A\r\n\r\n### Describe the problem\r\n#9423 requested gradients for  tf.contrib.image.rotate(), but the fix #9533 only provided gradients with respect to the image.  I would like to get gradients with respect to the angle. \r\n\r\nHappy to try to try to write a fix, if folks can give an idea for how to start a solution.  "}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/18748", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/18748/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/18748/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/18748/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/18748", "id": 316446770, "node_id": "MDU6SXNzdWUzMTY0NDY3NzA=", "number": 18748, "title": "build_all_android.sh x86 abi build issue", "user": {"login": "gpx1000", "id": 3833955, "node_id": "MDQ6VXNlcjM4MzM5NTU=", "avatar_url": "https://avatars0.githubusercontent.com/u/3833955?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gpx1000", "html_url": "https://github.com/gpx1000", "followers_url": "https://api.github.com/users/gpx1000/followers", "following_url": "https://api.github.com/users/gpx1000/following{/other_user}", "gists_url": "https://api.github.com/users/gpx1000/gists{/gist_id}", "starred_url": "https://api.github.com/users/gpx1000/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gpx1000/subscriptions", "organizations_url": "https://api.github.com/users/gpx1000/orgs", "repos_url": "https://api.github.com/users/gpx1000/repos", "events_url": "https://api.github.com/users/gpx1000/events{/privacy}", "received_events_url": "https://api.github.com/users/gpx1000/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 473173351, "node_id": "MDU6TGFiZWw0NzMxNzMzNTE=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:build/install", "name": "type:build/install", "color": "159b2e", "default": false, "description": ""}], "state": "open", "locked": false, "assignee": {"login": "aselle", "id": 326106, "node_id": "MDQ6VXNlcjMyNjEwNg==", "avatar_url": "https://avatars1.githubusercontent.com/u/326106?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aselle", "html_url": "https://github.com/aselle", "followers_url": "https://api.github.com/users/aselle/followers", "following_url": "https://api.github.com/users/aselle/following{/other_user}", "gists_url": "https://api.github.com/users/aselle/gists{/gist_id}", "starred_url": "https://api.github.com/users/aselle/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aselle/subscriptions", "organizations_url": "https://api.github.com/users/aselle/orgs", "repos_url": "https://api.github.com/users/aselle/repos", "events_url": "https://api.github.com/users/aselle/events{/privacy}", "received_events_url": "https://api.github.com/users/aselle/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "aselle", "id": 326106, "node_id": "MDQ6VXNlcjMyNjEwNg==", "avatar_url": "https://avatars1.githubusercontent.com/u/326106?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aselle", "html_url": "https://github.com/aselle", "followers_url": "https://api.github.com/users/aselle/followers", "following_url": "https://api.github.com/users/aselle/following{/other_user}", "gists_url": "https://api.github.com/users/aselle/gists{/gist_id}", "starred_url": "https://api.github.com/users/aselle/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aselle/subscriptions", "organizations_url": "https://api.github.com/users/aselle/orgs", "repos_url": "https://api.github.com/users/aselle/repos", "events_url": "https://api.github.com/users/aselle/events{/privacy}", "received_events_url": "https://api.github.com/users/aselle/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 6, "created_at": "2018-04-21T00:40:58Z", "updated_at": "2019-04-17T13:55:56Z", "closed_at": null, "author_association": "CONTRIBUTOR", "body": "It took a bit of effort to get the build_all_android.sh script to work.  The effort was primarily due to the same issues encountered here: https://github.com/tensorflow/tensorflow/issues/14186\r\nArmed with the work around outlined there, I modified compile_nsync.sh to have \r\nAR := ${NDK_ROOT}/toolchains/'\"$toolchain\"'/prebuilt/'\"$android_os_arch\"'/bin/'\"$bin_prefix\"'-ar\r\nThis does result in being able to build the arm variants (armeabi, armeabi-v7a and arm64-v8a) as well as the x86_64 variant.  However, x86 variant fails with:\r\n/Users/swinston/Downloads/android-ndk-r12b/platforms/android-21/arch-x86/usr/lib/crtend_android.o\r\n/tmp/77a95b0085967f7191ad958665724b6f/sysroot/usr/include/unistd.h:173: error: undefined reference to '__page_size'\r\n/tmp/77a95b0085967f7191ad958665724b6f/sysroot/usr/include/unistd.h:173: error: undefined reference to '__page_size'\r\n/tmp/77a95b0085967f7191ad958665724b6f/sysroot/usr/include/unistd.h:173: error: undefined reference to '__page_size'\r\n/tmp/77a95b0085967f7191ad958665724b6f/sysroot/usr/include/unistd.h:173: error: undefined reference to '__page_size'\r\ncollect2: error: ld returned 1 exit status\r\n\r\nThis is a OSX build host and using ndk r12b.\r\n\r\nNB: count me amongst those eager for r16/r17 ndk support!\r\n\r\n"}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/18734", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/18734/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/18734/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/18734/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/18734", "id": 316273376, "node_id": "MDU6SXNzdWUzMTYyNzMzNzY=", "number": 18734, "title": "tensorflow::ops::SoftmaxCrossEntropyWithLogits has apparently backwards order to its public attributes", "user": {"login": "rajha-korithrien", "id": 8145476, "node_id": "MDQ6VXNlcjgxNDU0NzY=", "avatar_url": "https://avatars3.githubusercontent.com/u/8145476?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rajha-korithrien", "html_url": "https://github.com/rajha-korithrien", "followers_url": "https://api.github.com/users/rajha-korithrien/followers", "following_url": "https://api.github.com/users/rajha-korithrien/following{/other_user}", "gists_url": "https://api.github.com/users/rajha-korithrien/gists{/gist_id}", "starred_url": "https://api.github.com/users/rajha-korithrien/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rajha-korithrien/subscriptions", "organizations_url": "https://api.github.com/users/rajha-korithrien/orgs", "repos_url": "https://api.github.com/users/rajha-korithrien/repos", "events_url": "https://api.github.com/users/rajha-korithrien/events{/privacy}", "received_events_url": "https://api.github.com/users/rajha-korithrien/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": {"login": "suharshs", "id": 1450614, "node_id": "MDQ6VXNlcjE0NTA2MTQ=", "avatar_url": "https://avatars1.githubusercontent.com/u/1450614?v=4", "gravatar_id": "", "url": "https://api.github.com/users/suharshs", "html_url": "https://github.com/suharshs", "followers_url": "https://api.github.com/users/suharshs/followers", "following_url": "https://api.github.com/users/suharshs/following{/other_user}", "gists_url": "https://api.github.com/users/suharshs/gists{/gist_id}", "starred_url": "https://api.github.com/users/suharshs/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/suharshs/subscriptions", "organizations_url": "https://api.github.com/users/suharshs/orgs", "repos_url": "https://api.github.com/users/suharshs/repos", "events_url": "https://api.github.com/users/suharshs/events{/privacy}", "received_events_url": "https://api.github.com/users/suharshs/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "suharshs", "id": 1450614, "node_id": "MDQ6VXNlcjE0NTA2MTQ=", "avatar_url": "https://avatars1.githubusercontent.com/u/1450614?v=4", "gravatar_id": "", "url": "https://api.github.com/users/suharshs", "html_url": "https://github.com/suharshs", "followers_url": "https://api.github.com/users/suharshs/followers", "following_url": "https://api.github.com/users/suharshs/following{/other_user}", "gists_url": "https://api.github.com/users/suharshs/gists{/gist_id}", "starred_url": "https://api.github.com/users/suharshs/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/suharshs/subscriptions", "organizations_url": "https://api.github.com/users/suharshs/orgs", "repos_url": "https://api.github.com/users/suharshs/repos", "events_url": "https://api.github.com/users/suharshs/events{/privacy}", "received_events_url": "https://api.github.com/users/suharshs/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 0, "created_at": "2018-04-20T13:43:14Z", "updated_at": "2018-12-14T18:52:35Z", "closed_at": null, "author_association": "NONE", "body": "### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**: yes\r\n\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**:\r\nmacOS 10.13.3 clang 900.0.39.2 and CentOS Linux 7 gcc-4.8.5\r\n\r\n- **TensorFlow installed from (source or binary)**:\r\nmaster\r\n\r\n- **TensorFlow version (use command below)**:\r\nI have not actually installed the python pip package, but the source tree is a current checkout of master.\r\n\r\n- **Python version**: \r\nN/A using the C++ API\r\n\r\n- **Bazel version (if compiling from source)**:\r\nmacOS Build label: 0.11.1-homebrew and Centos Linux 7 Build label: 0.11.1- (@non-git)\r\n\r\n- **GCC/Compiler version (if compiling from source)**:\r\nmacOS clang 900.0.39.2 and CentOS Linux 7 gcc-4.8.5\r\n\r\n- **CUDA/cuDNN version**:\r\nN/A\r\n\r\n- **GPU model and memory**:\r\nN/A\r\n\r\n- **Exact command to reproduce**:\r\nPlease read the description below\r\n\r\n### Describe the problem\r\nWhen trying to track down why code in pull request #14727 is failing an issue came to light. The gradient testing code in the C++ API would not correctly test C++ gradient code that had been shown to be a faithful reproduction of the python equivalent. It seems that the public attributes \"loss\" and \"backprop\" are reversed from their operation output order. @suharshs asked that a new issue be created to track this problem.  \r\n\r\n### Source code / logs\r\nTake a look at the comments in pull request #14727 \r\n"}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/18732", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/18732/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/18732/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/18732/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/18732", "id": 316256278, "node_id": "MDU6SXNzdWUzMTYyNTYyNzg=", "number": 18732, "title": "[Docs]Extend graph_viz doc", "user": {"login": "bhack", "id": 1710528, "node_id": "MDQ6VXNlcjE3MTA1Mjg=", "avatar_url": "https://avatars0.githubusercontent.com/u/1710528?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bhack", "html_url": "https://github.com/bhack", "followers_url": "https://api.github.com/users/bhack/followers", "following_url": "https://api.github.com/users/bhack/following{/other_user}", "gists_url": "https://api.github.com/users/bhack/gists{/gist_id}", "starred_url": "https://api.github.com/users/bhack/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bhack/subscriptions", "organizations_url": "https://api.github.com/users/bhack/orgs", "repos_url": "https://api.github.com/users/bhack/repos", "events_url": "https://api.github.com/users/bhack/events{/privacy}", "received_events_url": "https://api.github.com/users/bhack/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 299643928, "node_id": "MDU6TGFiZWwyOTk2NDM5Mjg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:contributions%20welcome", "name": "stat:contributions welcome", "color": "f4b400", "default": false, "description": ""}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-04-20T12:54:53Z", "updated_at": "2018-08-25T00:15:06Z", "closed_at": null, "author_association": "CONTRIBUTOR", "body": "[Extend graph_viz doc](https://www.tensorflow.org/programmers_guide/graph_viz#runtime_statistics) to High Level API.\r\n\r\nSee also https://github.com/tensorflow/tensorflow/issues/13594"}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/18711", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/18711/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/18711/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/18711/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/18711", "id": 316078996, "node_id": "MDU6SXNzdWUzMTYwNzg5OTY=", "number": 18711, "title": "Suggestion for efficient upsample+conv2d and conv2d+pool", "user": {"login": "alexlee-gk", "id": 839426, "node_id": "MDQ6VXNlcjgzOTQyNg==", "avatar_url": "https://avatars1.githubusercontent.com/u/839426?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexlee-gk", "html_url": "https://github.com/alexlee-gk", "followers_url": "https://api.github.com/users/alexlee-gk/followers", "following_url": "https://api.github.com/users/alexlee-gk/following{/other_user}", "gists_url": "https://api.github.com/users/alexlee-gk/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexlee-gk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexlee-gk/subscriptions", "organizations_url": "https://api.github.com/users/alexlee-gk/orgs", "repos_url": "https://api.github.com/users/alexlee-gk/repos", "events_url": "https://api.github.com/users/alexlee-gk/events{/privacy}", "received_events_url": "https://api.github.com/users/alexlee-gk/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 299643928, "node_id": "MDU6TGFiZWwyOTk2NDM5Mjg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:contributions%20welcome", "name": "stat:contributions welcome", "color": "f4b400", "default": false, "description": ""}, {"id": 473173272, "node_id": "MDU6TGFiZWw0NzMxNzMyNzI=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:feature", "name": "type:feature", "color": "159b2e", "default": false, "description": ""}], "state": "open", "locked": false, "assignee": {"login": "cy89", "id": 29663194, "node_id": "MDQ6VXNlcjI5NjYzMTk0", "avatar_url": "https://avatars0.githubusercontent.com/u/29663194?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cy89", "html_url": "https://github.com/cy89", "followers_url": "https://api.github.com/users/cy89/followers", "following_url": "https://api.github.com/users/cy89/following{/other_user}", "gists_url": "https://api.github.com/users/cy89/gists{/gist_id}", "starred_url": "https://api.github.com/users/cy89/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cy89/subscriptions", "organizations_url": "https://api.github.com/users/cy89/orgs", "repos_url": "https://api.github.com/users/cy89/repos", "events_url": "https://api.github.com/users/cy89/events{/privacy}", "received_events_url": "https://api.github.com/users/cy89/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "cy89", "id": 29663194, "node_id": "MDQ6VXNlcjI5NjYzMTk0", "avatar_url": "https://avatars0.githubusercontent.com/u/29663194?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cy89", "html_url": "https://github.com/cy89", "followers_url": "https://api.github.com/users/cy89/followers", "following_url": "https://api.github.com/users/cy89/following{/other_user}", "gists_url": "https://api.github.com/users/cy89/gists{/gist_id}", "starred_url": "https://api.github.com/users/cy89/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cy89/subscriptions", "organizations_url": "https://api.github.com/users/cy89/orgs", "repos_url": "https://api.github.com/users/cy89/repos", "events_url": "https://api.github.com/users/cy89/events{/privacy}", "received_events_url": "https://api.github.com/users/cy89/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 4, "created_at": "2018-04-19T23:50:49Z", "updated_at": "2019-04-18T16:45:26Z", "closed_at": null, "author_association": "NONE", "body": "### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**: yes\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**: Ubuntu 16.04\r\n- **TensorFlow installed from (source or binary)**: binary\r\n- **TensorFlow version (use command below)**: v1.7.0-3-g024aecf414 1.7.0\r\n- **Python version**: 3.5.2\r\n- **Bazel version (if compiling from source)**: N/A\r\n- **GCC/Compiler version (if compiling from source)**: /A\r\n- **CUDA/cuDNN version**: CUDA 9.0/cuDNN 7.0\r\n- **GPU model and memory**: Titan Xp 12GB\r\n- **Exact command to reproduce**: CUDA_VISIBLE_DEVICES=0 python test_conv_upsample_pool_ops.py\r\n\r\n### Describe the problem\r\nTLDR: upsampling+conv2d (which is very expensive) could be implemented such that it has the same time and memory complexity as strided conv2d_transposed. Similarly for conv2d+average_pooling and strided conv2d. An efficient implementation could be S^2 faster, where S is the stride (typically S=2).\r\n\r\nStrided conv2d_transposed have been traditionally used in decoders for dense prediction problems (e.g. image generation, video prediction, semantic segmentation). However, this op often produces outputs with checkerboard artifacts, e.g. see [1] and papers citing it. An alternative is to use bilinear upsampling followed by a standard convolution (with no strides). This is widely used in several recent works and it mitigates the checkerboard artifacts but at a cost: it's computationally and memory expensive (e.g. see [2]). upsampling+conv2d does S^2 more computation than the strided counterpart, where S is the stride factor. Furthermore, the intermediate tensor after upsampling could be very large if the input has a large number of channels.\r\n\r\nUnder certain conditions (which happens to be the most common use case), upsampling+conv2d could be rewritten as convolving the upsampling kernel with the given kernel, followed by conv2d_transposed of the given input and the combined kernels. This follows from commutative and associative properties of linearity in convolutions (taking proper care of flipping the filters so that the ops are actual convolutions).\r\n\r\nA similar reasoning applies for an efficient implementation of conv2d+average_pooling.\r\n\r\nImplementations of the mentioned ops are here (see `upsample_conv2d` and `conv_pool2d`): https://github.com/alexlee-gk/video_prediction/blob/master/video_prediction/ops.py\r\n\r\nA script that tests for equivalence and timings is here: https://gist.github.com/alexlee-gk/1ae88125ec38efc48b542a4c0356078f\r\n\r\nI report some timings below of hundreds of evaluations. The naive op should be about 4x slower than the strided counterpart since S^2 = 4. In theory, the optimized op should be as fast as the strided counterpart, but my implementation is about 2x slower (but still much faster than the naive version), and I think there is room for improvement.\r\n\r\n|                           | upsample + conv2d (optimized) | upsample + conv2d (naive) | strided conv2d_transpose |\r\n|:------------------------- | -----------------------------:| -------------------------:| --------------:|\r\n| forward pass              | 11.0s                         | 16.3s                     | 4.7s           |\r\n| forward and backward pass | 6.5s                          | 17.5s                     | 2.6s           |\r\n\r\n|                           | conv2d + pool (optimized) | conv2d + pool (naive) | strided conv2d |\r\n|:------------------------- | -------------------------:| ---------------------:| --------------:|\r\n| forward pass              | 4.1s                      | 8.2s                  | 2.6s           |\r\n| forward and backward pass | 4.1s                      | 8.4s                  | 2.6s           |\r\n\r\n[1] https://distill.pub/2016/deconv-checkerboard\r\n[2] https://arxiv.org/abs/1707.05847"}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/18661", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/18661/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/18661/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/18661/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/18661", "id": 315542398, "node_id": "MDU6SXNzdWUzMTU1NDIzOTg=", "number": 18661, "title": "Document cache shuffle repeat order", "user": {"login": "bhack", "id": 1710528, "node_id": "MDQ6VXNlcjE3MTA1Mjg=", "avatar_url": "https://avatars0.githubusercontent.com/u/1710528?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bhack", "html_url": "https://github.com/bhack", "followers_url": "https://api.github.com/users/bhack/followers", "following_url": "https://api.github.com/users/bhack/following{/other_user}", "gists_url": "https://api.github.com/users/bhack/gists{/gist_id}", "starred_url": "https://api.github.com/users/bhack/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bhack/subscriptions", "organizations_url": "https://api.github.com/users/bhack/orgs", "repos_url": "https://api.github.com/users/bhack/repos", "events_url": "https://api.github.com/users/bhack/events{/privacy}", "received_events_url": "https://api.github.com/users/bhack/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": {"login": "saeta", "id": 1284535, "node_id": "MDQ6VXNlcjEyODQ1MzU=", "avatar_url": "https://avatars1.githubusercontent.com/u/1284535?v=4", "gravatar_id": "", "url": "https://api.github.com/users/saeta", "html_url": "https://github.com/saeta", "followers_url": "https://api.github.com/users/saeta/followers", "following_url": "https://api.github.com/users/saeta/following{/other_user}", "gists_url": "https://api.github.com/users/saeta/gists{/gist_id}", "starred_url": "https://api.github.com/users/saeta/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/saeta/subscriptions", "organizations_url": "https://api.github.com/users/saeta/orgs", "repos_url": "https://api.github.com/users/saeta/repos", "events_url": "https://api.github.com/users/saeta/events{/privacy}", "received_events_url": "https://api.github.com/users/saeta/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "saeta", "id": 1284535, "node_id": "MDQ6VXNlcjEyODQ1MzU=", "avatar_url": "https://avatars1.githubusercontent.com/u/1284535?v=4", "gravatar_id": "", "url": "https://api.github.com/users/saeta", "html_url": "https://github.com/saeta", "followers_url": "https://api.github.com/users/saeta/followers", "following_url": "https://api.github.com/users/saeta/following{/other_user}", "gists_url": "https://api.github.com/users/saeta/gists{/gist_id}", "starred_url": "https://api.github.com/users/saeta/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/saeta/subscriptions", "organizations_url": "https://api.github.com/users/saeta/orgs", "repos_url": "https://api.github.com/users/saeta/repos", "events_url": "https://api.github.com/users/saeta/events{/privacy}", "received_events_url": "https://api.github.com/users/saeta/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 2, "created_at": "2018-04-18T15:58:09Z", "updated_at": "2018-12-07T18:50:23Z", "closed_at": null, "author_association": "CONTRIBUTOR", "body": "https://github.com/tensorflow/tensorflow/issues/15343#comment-351817810\r\n\r\n/cc @saeta @jsimsa"}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/18660", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/18660/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/18660/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/18660/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/18660", "id": 315538573, "node_id": "MDU6SXNzdWUzMTU1Mzg1NzM=", "number": 18660, "title": "Bug: tf.keras.estimator.model_to_estimator() API giving error when Keras model contains Lambda layer.", "user": {"login": "sibyjackgrove", "id": 25213730, "node_id": "MDQ6VXNlcjI1MjEzNzMw", "avatar_url": "https://avatars0.githubusercontent.com/u/25213730?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sibyjackgrove", "html_url": "https://github.com/sibyjackgrove", "followers_url": "https://api.github.com/users/sibyjackgrove/followers", "following_url": "https://api.github.com/users/sibyjackgrove/following{/other_user}", "gists_url": "https://api.github.com/users/sibyjackgrove/gists{/gist_id}", "starred_url": "https://api.github.com/users/sibyjackgrove/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sibyjackgrove/subscriptions", "organizations_url": "https://api.github.com/users/sibyjackgrove/orgs", "repos_url": "https://api.github.com/users/sibyjackgrove/repos", "events_url": "https://api.github.com/users/sibyjackgrove/events{/privacy}", "received_events_url": "https://api.github.com/users/sibyjackgrove/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 404586594, "node_id": "MDU6TGFiZWw0MDQ1ODY1OTQ=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:awaiting%20tensorflower", "name": "stat:awaiting tensorflower", "color": "f4b400", "default": false, "description": ""}, {"id": 284443156, "node_id": "MDU6TGFiZWwyODQ0NDMxNTY=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:docs", "name": "type:docs", "color": "159b2e", "default": false, "description": ""}], "state": "open", "locked": false, "assignee": {"login": "fchollet", "id": 710255, "node_id": "MDQ6VXNlcjcxMDI1NQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/710255?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fchollet", "html_url": "https://github.com/fchollet", "followers_url": "https://api.github.com/users/fchollet/followers", "following_url": "https://api.github.com/users/fchollet/following{/other_user}", "gists_url": "https://api.github.com/users/fchollet/gists{/gist_id}", "starred_url": "https://api.github.com/users/fchollet/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fchollet/subscriptions", "organizations_url": "https://api.github.com/users/fchollet/orgs", "repos_url": "https://api.github.com/users/fchollet/repos", "events_url": "https://api.github.com/users/fchollet/events{/privacy}", "received_events_url": "https://api.github.com/users/fchollet/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "fchollet", "id": 710255, "node_id": "MDQ6VXNlcjcxMDI1NQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/710255?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fchollet", "html_url": "https://github.com/fchollet", "followers_url": "https://api.github.com/users/fchollet/followers", "following_url": "https://api.github.com/users/fchollet/following{/other_user}", "gists_url": "https://api.github.com/users/fchollet/gists{/gist_id}", "starred_url": "https://api.github.com/users/fchollet/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fchollet/subscriptions", "organizations_url": "https://api.github.com/users/fchollet/orgs", "repos_url": "https://api.github.com/users/fchollet/repos", "events_url": "https://api.github.com/users/fchollet/events{/privacy}", "received_events_url": "https://api.github.com/users/fchollet/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 11, "created_at": "2018-04-18T15:48:33Z", "updated_at": "2019-07-31T07:54:39Z", "closed_at": null, "author_association": "CONTRIBUTOR", "body": "------------------------\r\n\r\n### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**: Custom code\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**: Windows\r\n- **TensorFlow installed from (source or binary)**: Binary\r\n- **TensorFlow version (use command below)**: 1.7\r\n- **Python version**:  3.6\r\n- **Bazel version (if compiling from source)**: N/A\r\n- **GCC/Compiler version (if compiling from source)**: N/A\r\n- **CUDA/cuDNN version**: N/A\r\n- **GPU model and memory**: N/A\r\n- **Exact command to reproduce**:\r\n`estimator_vae = tf.keras.estimator.model_to_estimator(keras_model=vae)`\r\n\r\n### Describe the problem\r\n `tf.keras.estimator.model_to_estimator()` API is failing when Keras model contains `Lambda ` layer.\r\nThe error I am getting is `SystemError: unknown opcode`\r\nThe problem seems to be only there when I am using custom functions inside the Keras mode.\r\n\r\n### Source code / logs\r\nI implemented a VAE in Keras and was trying to convert it into an TF estimator model. The model works and trains using Keras. The Keras model has functions for gaussian sampling and VAE training loss. The code and  error trace back is given below.\r\n\r\n```\r\n#Encoder network, mapping inputs to our latent distribution parameters:\r\nx = Input(batch_shape=(batch_size, original_dim),name='encoder_input')\r\nencoded = Dense(intermediate_dim, activation='relu',name='encoder_dense_1')(x)\r\nz_mean = Dense(latent_dim,name='z_mean')(encoded)\r\nz_log_var = Dense(latent_dim,name='z_log_var')(encoded)\r\n\r\n# Sampling from Gaussian\r\ndef sampling(args):\r\n    \r\n    z_mean, z_log_var = args\r\n\r\n    epsilon = tf.random_normal(shape=(batch_size, latent_dim),\r\n                               mean=0., stddev=epsilon_std) \r\n    \r\n    return z_mean + tf.exp(z_log_var/2) * epsilon\r\nz = Lambda(sampling,name='z')([z_mean, z_log_var]) \r\n\r\n#Compute VAE loss\r\ndef vae_loss(x, x_decoded):\r\n    x_mse_loss = original_dim*tf.keras.losses.mean_squared_error(tf.layers.flatten(x), tf.layers.flatten(x_decoded))\r\n    beta = 4.0\r\n    kl_loss = - 0.5*beta* tf.reduce_sum(1 + z_log_var - tf.square(z_mean) - tf.exp(z_log_var), axis=-1)\r\n    return tf.reduce_mean(x_mse_loss + kl_loss)\r\n\r\n# Map these sampled latent points back to reconstructed inputs:\r\n#Decoder network layers\r\ndecoder_dense_1 = Dense(intermediate_dim, activation='relu',name='decoder_dense_1')\r\ndecoder_output = Dense(48, activation='relu',name='decoder_output')\r\ndecoded = decoder_dense_1(z)\r\nx_decoded = decoder_output(decoded)\r\n\r\n# end-to-end autoencoder\r\nvae = Model(x, x_decoded)\r\nvae.compile(optimizer='adam',loss=vae_loss) \r\nvae.summary()\r\n#Converting to tf estimator\r\nestimator_vae = tf.keras.estimator.model_to_estimator(keras_model=vae)\r\n```\r\nOutput:\r\n\r\n```\r\n__________________________________________________________________________________________________\r\nLayer (type)                    Output Shape         Param #     Connected to                     \r\n==================================================================================================\r\nencoder_input (InputLayer)      (50, 48)             0                                            \r\n__________________________________________________________________________________________________\r\nencoder_dense_1 (Dense)         (50, 24)             1176        encoder_input[0][0]              \r\n__________________________________________________________________________________________________\r\nz_mean (Dense)                  (50, 10)             250         encoder_dense_1[0][0]            \r\n__________________________________________________________________________________________________\r\nz_log_var (Dense)               (50, 10)             250         encoder_dense_1[0][0]            \r\n__________________________________________________________________________________________________\r\nz (Lambda)                      (50, 10)             0           z_mean[0][0]                     \r\n                                                                 z_log_var[0][0]                  \r\n__________________________________________________________________________________________________\r\ndecoder_dense_1 (Dense)         (50, 24)             264         z[0][0]                          \r\n__________________________________________________________________________________________________\r\ndecoder_output (Dense)          (50, 48)             1200        decoder_dense_1[0][0]            \r\n==================================================================================================\r\nTotal params: 3,140\r\nTrainable params: 3,140\r\nNon-trainable params: 0\r\n__________________________________________________________________________________________________\r\nINFO:tensorflow:Using the Keras model provided.\r\nINFO:tensorflow:Using default config.\r\nWARNING:tensorflow:Using temporary folder as model directory: C:\\Users\\SPLATH~1\\AppData\\Local\\Temp\\tmps7nagdhz\r\nINFO:tensorflow:Using config: {'_model_dir': 'C:\\\\Users\\\\SPLATH~1\\\\AppData\\\\Local\\\\Temp\\\\tmps7nagdhz', '_tf_random_seed': None, '_save_summary_steps': 100, '_save_checkpoints_steps': None, '_save_checkpoints_secs': 600, '_session_config': None, '_keep_checkpoint_max': 5, '_keep_checkpoint_every_n_hours': 10000, '_log_step_count_steps': 100, '_service': None, '_cluster_spec': <tensorflow.python.training.server_lib.ClusterSpec object at 0x00000238136D9DA0>, '_task_type': 'worker', '_task_id': 0, '_global_id_in_cluster': 0, '_master': '', '_evaluation_master': '', '_is_chief': True, '_num_ps_replicas': 0, '_num_worker_replicas': 1}\r\n---------------------------------------------------------------------------\r\nSystemError                               Traceback (most recent call last)\r\n<ipython-input-10-77cc01c33881> in <module>()\r\n     13 vae.summary()\r\n     14 #Converting to tf estimator\r\n---> 15 estimator_vae = tf.keras.estimator.model_to_estimator(keras_model=vae)\r\n\r\n~\\AppData\\Local\\Continuum\\anaconda3\\lib\\site-packages\\tensorflow\\python\\keras\\_impl\\keras\\estimator.py in model_to_estimator(keras_model, keras_model_path, custom_objects, model_dir, config)\r\n    481                            estimator,\r\n    482                            custom_objects,\r\n--> 483                            keras_weights)\r\n    484   elif keras_model.built:\r\n    485     logging.warning('You are creating an Estimator from a Keras model '\r\n\r\n~\\AppData\\Local\\Continuum\\anaconda3\\lib\\site-packages\\tensorflow\\python\\keras\\_impl\\keras\\estimator.py in _save_first_checkpoint(keras_model, estimator, custom_objects, keras_weights)\r\n    396       training_util.create_global_step()\r\n    397       model = _clone_and_build_model(model_fn_lib.ModeKeys.TRAIN, keras_model,\r\n--> 398                                      custom_objects)\r\n    399       if isinstance(model, models.Sequential):\r\n    400         model = model.model\r\n\r\n~\\AppData\\Local\\Continuum\\anaconda3\\lib\\site-packages\\tensorflow\\python\\keras\\_impl\\keras\\estimator.py in _clone_and_build_model(mode, keras_model, custom_objects, features, labels)\r\n    270         model = models.clone_model(keras_model, input_tensors=input_tensors)\r\n    271     else:\r\n--> 272       model = models.clone_model(keras_model, input_tensors=input_tensors)\r\n    273   else:\r\n    274     model = keras_model\r\n\r\n~\\AppData\\Local\\Continuum\\anaconda3\\lib\\site-packages\\tensorflow\\python\\keras\\_impl\\keras\\models.py in clone_model(model, input_tensors)\r\n    261     return _clone_sequential_model(model, input_tensors=input_tensors)\r\n    262   else:\r\n--> 263     return _clone_functional_model(model, input_tensors=input_tensors)\r\n\r\n~\\AppData\\Local\\Continuum\\anaconda3\\lib\\site-packages\\tensorflow\\python\\keras\\_impl\\keras\\models.py in _clone_functional_model(model, input_tensors)\r\n    166               kwargs['mask'] = computed_masks\r\n    167           output_tensors = generic_utils.to_list(layer(computed_tensors,\r\n--> 168                                                        **kwargs))\r\n    169           output_masks = generic_utils.to_list(\r\n    170               layer.compute_mask(computed_tensors, computed_masks))\r\n\r\n~\\AppData\\Local\\Continuum\\anaconda3\\lib\\site-packages\\tensorflow\\python\\keras\\_impl\\keras\\engine\\base_layer.py in __call__(self, inputs, **kwargs)\r\n    237     \"\"\"\r\n    238     # Actually call the layer (optionally building it).\r\n--> 239     output = super(Layer, self).__call__(inputs, **kwargs)\r\n    240     if context.executing_eagerly():\r\n    241       return output\r\n\r\n~\\AppData\\Local\\Continuum\\anaconda3\\lib\\site-packages\\tensorflow\\python\\layers\\base.py in __call__(self, inputs, *args, **kwargs)\r\n    712 \r\n    713         if not in_deferred_mode:\r\n--> 714           outputs = self.call(inputs, *args, **kwargs)\r\n    715           if outputs is None:\r\n    716             raise ValueError('A layer\\'s `call` method should return a Tensor '\r\n\r\n~\\AppData\\Local\\Continuum\\anaconda3\\lib\\site-packages\\tensorflow\\python\\keras\\_impl\\keras\\layers\\core.py in call(self, inputs, mask)\r\n    640     if has_arg(self.function, 'mask'):\r\n    641       arguments['mask'] = mask\r\n--> 642     return self.function(inputs, **arguments)\r\n    643 \r\n    644   def compute_mask(self, inputs, mask=None):\r\n\r\n~\\AppData\\Local\\Continuum\\anaconda3\\lib\\site-packages\\tensorflow\\python\\keras\\_impl\\keras\\layers\\core.py in sampling(args)\r\n     16 def sampling(args):\r\n     17     #import tensorflow as tf\r\n---> 18     z_mean, z_log_var = args\r\n     19 \r\n     20     epsilon = tf.random_normal(shape=(batch_size, latent_dim),\r\n\r\nSystemError: unknown opcode\r\n```\r\n"}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/18652", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/18652/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/18652/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/18652/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/18652", "id": 315469560, "node_id": "MDU6SXNzdWUzMTU0Njk1NjA=", "number": 18652, "title": "Bug: tensorflow-gpu takes long time before beginning to compute", "user": {"login": "philippHRO", "id": 23098362, "node_id": "MDQ6VXNlcjIzMDk4MzYy", "avatar_url": "https://avatars0.githubusercontent.com/u/23098362?v=4", "gravatar_id": "", "url": "https://api.github.com/users/philippHRO", "html_url": "https://github.com/philippHRO", "followers_url": "https://api.github.com/users/philippHRO/followers", "following_url": "https://api.github.com/users/philippHRO/following{/other_user}", "gists_url": "https://api.github.com/users/philippHRO/gists{/gist_id}", "starred_url": "https://api.github.com/users/philippHRO/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/philippHRO/subscriptions", "organizations_url": "https://api.github.com/users/philippHRO/orgs", "repos_url": "https://api.github.com/users/philippHRO/repos", "events_url": "https://api.github.com/users/philippHRO/events{/privacy}", "received_events_url": "https://api.github.com/users/philippHRO/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": {"login": "gunan", "id": 7946809, "node_id": "MDQ6VXNlcjc5NDY4MDk=", "avatar_url": "https://avatars3.githubusercontent.com/u/7946809?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gunan", "html_url": "https://github.com/gunan", "followers_url": "https://api.github.com/users/gunan/followers", "following_url": "https://api.github.com/users/gunan/following{/other_user}", "gists_url": "https://api.github.com/users/gunan/gists{/gist_id}", "starred_url": "https://api.github.com/users/gunan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gunan/subscriptions", "organizations_url": "https://api.github.com/users/gunan/orgs", "repos_url": "https://api.github.com/users/gunan/repos", "events_url": "https://api.github.com/users/gunan/events{/privacy}", "received_events_url": "https://api.github.com/users/gunan/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "gunan", "id": 7946809, "node_id": "MDQ6VXNlcjc5NDY4MDk=", "avatar_url": "https://avatars3.githubusercontent.com/u/7946809?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gunan", "html_url": "https://github.com/gunan", "followers_url": "https://api.github.com/users/gunan/followers", "following_url": "https://api.github.com/users/gunan/following{/other_user}", "gists_url": "https://api.github.com/users/gunan/gists{/gist_id}", "starred_url": "https://api.github.com/users/gunan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gunan/subscriptions", "organizations_url": "https://api.github.com/users/gunan/orgs", "repos_url": "https://api.github.com/users/gunan/repos", "events_url": "https://api.github.com/users/gunan/events{/privacy}", "received_events_url": "https://api.github.com/users/gunan/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 82, "created_at": "2018-04-18T13:01:14Z", "updated_at": "2019-12-03T20:21:52Z", "closed_at": null, "author_association": "NONE", "body": "I noticed that tensorflow always takes about ~2min before it actually starts to compute. I've been trying to find out, why this happens, and nothing really worked so far. \r\n\r\n[Tensorflow site](https://www.tensorflow.org/install/install_windows) says, I should use CUDA\u00ae Toolkit 9.0 and cuDNN v7.0. I have CUDA 9.0, so I downloaded CuDNN 7.0.5 for CUDA 9.0 and pasted the files to *C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v9.0\\*, overwriting the ones form cuDNN 7.1.2, which I tested earlier. To make sure, I pip-installed tensorflow-gpu into a fresh anaconda env. See install [here](https://pastebin.com/rjiV1s3b). The issue is still the same.\r\n\r\nCUDA works, since it prints the  *'Hello, TensorFlow!'*, when I use the official test example, but before that it takes like 2minutes every time! \r\n\r\nWhen I tested this with [another wheel](https://drive.google.com/drive/folders/1lVK_ABvVHzVYKs7X5SUhcZFBgKpC41Qw) ([which is linked in this tutorial](http://www.python36.com/install-tensorflow-gpu-windows/), I did not compile it myself.) on cuda 9.1/cudnn7.0.5, I had the same issues. A NVIDIA employee [on stackoverflow](https://stackoverflow.com/questions/49770217/why-does-cuda-initialisation-take-so-long-python-vscode-anaconda-tensorflow) suggested, I may be hitting a lengthy JIT compile step, because the GTX 1080 has compute capability of 6.1, which the wheel I used may not be compiled for. \r\n\r\nSo I tried to find wheels for tensorflow with compute capability 6.1 for windows, but [the only one I found](https://github.com/fo40225/tensorflow-windows-wheel/tree/master/1.5.0/py36/GPU/cuda91cudnn7avx2) and tested produced the same problem.\r\n\r\nAm I doing something wrong here, or do I just have to accept the 2min delay everytime I start my tensorflow/keras scripts?\r\n\r\n\r\n### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**:\r\nCode:\r\n```\r\nimport time\r\nstart_time = time.time()\r\nimport tensorflow as tf\r\na = tf.constant([1.0, 2.0, 3.0, 4.0, 5.0, 6.0], shape=[2, 3], name='a')\r\nb = tf.constant([1.0, 2.0, 3.0, 4.0, 5.0, 6.0], shape=[3, 2], name='b')\r\nc = tf.matmul(a, b)\r\nsess = tf.Session(config=tf.ConfigProto(log_device_placement=True))\r\nprint(sess.run(c))\r\ntimer = time.time()\r\nprint(timer - start_time)\r\n```\r\nOutput:\r\n```\r\n(tf_clean) C:\\python_code\\test>C:/anaconda/envs/tf_clean/python.exe c:/python_code/test/tf_test.py\r\n2018-04-18 14:36:04.376661: I T:\\src\\github\\tensorflow\\tensorflow\\core\\platform\\cpu_feature_guard.cc:140] Your CPU supports instructions that this\r\nTensorFlow binary was not compiled to use: AVX2\r\n2018-04-18 14:36:04.689661: I T:\\src\\github\\tensorflow\\tensorflow\\core\\common_runtime\\gpu\\gpu_device.cc:1344] Found device 0 with properties:\r\nname: GeForce GTX 1080 major: 6 minor: 1 memoryClockRate(GHz): 1.7335\r\npciBusID: 0000:01:00.0\r\ntotalMemory: 8.00GiB freeMemory: 6.60GiB\r\n2018-04-18 14:36:04.699485: I T:\\src\\github\\tensorflow\\tensorflow\\core\\common_runtime\\gpu\\gpu_device.cc:1423] Adding visible gpu devices: 0\r\n2018-04-18 14:38:12.227561: I T:\\src\\github\\tensorflow\\tensorflow\\core\\common_runtime\\gpu\\gpu_device.cc:911] Device interconnect StreamExecutor with strength 1 edge matrix:\r\n2018-04-18 14:38:12.234504: I T:\\src\\github\\tens2018-04-18 14:38:12.237156: I T:\\src\\github\\tensorflow\\tensorflow\\core\\common_runtime\\gpu\\gpu_device.cc:930] 0:   N\r\n2018-04-18 14:38:12.240997: I T:\\src\\github\\tensorflow\\tensorflow\\core\\common_runtime\\gpu\\gpu_device.cc:1041] Created TensorFlow device (/job:localhost/replica:0/task:0/device:GPU:0 with 6379 MB memory) -> physical GPU (device: 0, name: GeForce GTX 1080, pci bus id: 0000:01:00.0, compute capability: 6.1)\r\nDevice mapping:\r\n/job:localhost/replica:0/task:0/device:GPU:0 -> device: 0, name: GeForce GTX 1080, pci bus id: 0000:01:00.0, compute capability: 6.1\r\n2018-04-18 14:38:12.548288: I T:\\src\\github\\tensorflow\\tensorflow\\core\\common_runtime\\direct_session.cc:297] Device mapping:\r\n/job:localhost/replica:0/task:0/device:GPU:0 -> device: 0, name: GeForce GTX 1080, pci bus id: 0000:01:00.0, compute capability: 6.1\r\nMatMul: (MatMul): /job:localhost/replica:0/task:0/device:GPU:0\r\n2018-04-18 14:38:12.559262: I T:\\src\\github\\tensorflow\\tensorflow\\core\\common_runtime\\placer.cc:884] MatMul: (MatMul)/job:localhost/replica:0/task:0/device:GPU:0\r\nb: (Const): /job:localhost/replica:0/task:0/device:GPU:0\r\n2018-04-18 14:38:12.564847: I T:\\src\\github\\tensorflow\\tensorflow\\core\\common_runtime\\placer.cc:884] b: (Const)/job:localhost/replica:0/task:0/device:GPU:0\r\na: (Const): /job:localhost/replica:0/task:0/device:GPU:0\r\n2018-04-18 14:38:12.570545: I T:\\src\\github\\tensorflow\\tensorflow\\core\\common_runtime\\placer.cc:884] a: (Const)/job:localhost/replica:0/task:0/device:GPU:0\r\n[[22. 28.]\r\n [49. 64.]]\r\n129.14624643325806\r\n```\r\n\r\n- **OS Platform and Distribution**:\r\nWindows 10 Education (Version 10.0.16299 Build 16299)\r\nIntel(R) Core(TM) i5-7500 CPU @ 3.40GHz, 3408 MHz, 4 Cores\r\n\r\n- **TensorFlow installed from (source or binary)**:\r\nbinary\r\n\r\n- **TensorFlow version**:\r\ntensorflow-gpu 1.5.0, 1.7.0\r\n\r\n- **Python version**: \r\n3.5.5 & 3.6 (via anaconda, conda 4.5.1.)\r\n\r\n- **Bazel Version**:\r\nN/A\r\n\r\n- **CUDA/cuDNN version**:\r\nTested combinations: \r\n   CUDA 9.0 and CuDNN 7.1.2 (tested on tensorflow 1.5.0, 1.7.0 and 1.8.0-dev20180329)\r\n   CUDA 9.1 and CuDNN 7.0.5 (tested on tensorflow 1.5.0 and 1.7.0)\r\n\r\n- **GPU model and memory**:\r\nNVIDIA GeForce GTX 1080 (GP104-400) [Hewlett-Packard], 8192 MBytes of GDDR5X SDRAM [Micron]\r\n\r\n- **Exact command to reproduce**:\r\nSee: *Have I written custom code...*\r\n\r\n=================================================================\r\nEDIT:\r\n\r\nThreadstarter here, hello.\r\n> \r\n> \r\n> Could you try with the latest nightly?\r\n> https://files.pythonhosted.org/packages/67/c0/e68a4f0400340b54c887703baa8eee188042c3d65a0cf535dda71abffbc2/tf_nightly_gpu-1.13.0.dev20190205-cp37-cp37m-win_amd64.whl\r\n\r\n**This works!** I checked with that wheel, and then with `tf-nightly-gpu-2.0-preview` on PYPI, which also worked.\r\nI initially wanted to use the anaconda cudatoolkit and cudnn packages, but currently, cudnn is only available up to version 7.3.1 on anaconda-cloud. Tensorflow 2.0 however, is compiled with 7.4.1, so I had to do this the oldschool way, and download the setups from Nvidia.\r\nSoon, though...[soon](https://imgur.com/a/A2jZizt).\r\n\r\nFor everyone, here's what I did, as a guide:\r\n\r\n### How to install Tensorflow Nightly 2.0 GPU in Anaconda on Windows 10 x64\r\n\r\n\u2022 I installed these CUDA/CuDnn Versions:\r\n   \u2013 cuda_10.0.130_win10_network (Nvidia CUDA Download: https://developer.nvidia.com/cuda-toolkit)\r\n   \u2013 cuDNN v7.4.1 (Nov 8, 2018), for CUDA 10.0 (Nvidia CuDnn Download: https://developer.nvidia.com/cudnn)\r\n   \u2013 Don't forget to check, whether the Cuda setup has correctly written itself to the PATH system variable.\r\n   \u2013 Reboot.\r\n\u2022 Now make a new environment in Anaconda and activate it:\r\n   \u2013 `conda create --name tf2-nightly-gpu python=3.6`\r\n   \u2013 `activate tf2-nightly-gpu`\r\n\u2022 Now, with the new env still activated, install the latest Tensorflow 2.0 nightly GPU build from PYPI:\r\n   \u2013 `pip install tf-nightly-gpu-2.0-preview`\r\n\u2022 For machine learning in Jupyter notebook (or Jupyter Lab) , you need these as well:\r\n   \u2013 `conda install nb_conda matplotlib scipy Pillow pandas scikit-learn`\r\n\u2022 Check, if your GPU is recognized by Tensorflow. Open the Anaconda prompt, activate the new environment and type `python`, then press Enter. Now type:\r\n`import tensorflow as tf`\r\n`tf.test.is_gpu_available(cuda_only=False,min_cuda_compute_capability=None) `\r\n\u2022 Output should be something like this:\r\n\r\n```\r\n(tf2-nightly-gpu) C:\\Users\\___>python\r\n>>> import tensorflow as tf\r\n>>> tf.test.is_gpu_available(cuda_only=False,min_cuda_compute_capability=None)\r\n2019-03-19 17:46:25.722209: I tensorflow/core/platform/cpu_feature_guard.cc:142] Your CPU supports instructions that this TensorFlow binary was not compiled to use: AVX2\r\n2019-03-19 17:46:25.729724: I tensorflow/stream_executor/platform/default/dso_loader.cc:42] Successfully opened dynamic library nvcuda.dll\r\n2019-03-19 17:46:25.922934: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1551] Found device 0 with properties:\r\nname: GeForce GTX 1080 major: 6 minor: 1 memoryClockRate(GHz): 1.7335\r\npciBusID: 0000:01:00.0\r\ntotalMemory: 8.00GiB freeMemory: 6.61GiB\r\n2019-03-19 17:46:25.938231: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1674] Adding visible gpu devices: 0\r\n2019-03-19 17:46:26.539185: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1082] Device interconnect StreamExecutor with strength 1 edge matrix:\r\n2019-03-19 17:46:26.546009: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1088]      0\r\n2019-03-19 17:46:26.550123: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1101] 0:   N\r\n2019-03-19 17:46:26.554188: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1222] Created TensorFlow device (/device:GPU:0 with 6360 MB memory) -> physical GPU (device: 0, name: GeForce GTX 1080, pci bus id: 0000:01:00.0, compute capability: 6.1)\r\nTrue\r\n```\r\n\r\n\u2022 Done."}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/18640", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/18640/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/18640/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/18640/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/18640", "id": 315400729, "node_id": "MDU6SXNzdWUzMTU0MDA3Mjk=", "number": 18640, "title": "InvalidArgumentError is raised when restoring large (>2GB) variable on macOS", "user": {"login": "alyaxey", "id": 5517413, "node_id": "MDQ6VXNlcjU1MTc0MTM=", "avatar_url": "https://avatars1.githubusercontent.com/u/5517413?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alyaxey", "html_url": "https://github.com/alyaxey", "followers_url": "https://api.github.com/users/alyaxey/followers", "following_url": "https://api.github.com/users/alyaxey/following{/other_user}", "gists_url": "https://api.github.com/users/alyaxey/gists{/gist_id}", "starred_url": "https://api.github.com/users/alyaxey/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alyaxey/subscriptions", "organizations_url": "https://api.github.com/users/alyaxey/orgs", "repos_url": "https://api.github.com/users/alyaxey/repos", "events_url": "https://api.github.com/users/alyaxey/events{/privacy}", "received_events_url": "https://api.github.com/users/alyaxey/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": {"login": "cy89", "id": 29663194, "node_id": "MDQ6VXNlcjI5NjYzMTk0", "avatar_url": "https://avatars0.githubusercontent.com/u/29663194?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cy89", "html_url": "https://github.com/cy89", "followers_url": "https://api.github.com/users/cy89/followers", "following_url": "https://api.github.com/users/cy89/following{/other_user}", "gists_url": "https://api.github.com/users/cy89/gists{/gist_id}", "starred_url": "https://api.github.com/users/cy89/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cy89/subscriptions", "organizations_url": "https://api.github.com/users/cy89/orgs", "repos_url": "https://api.github.com/users/cy89/repos", "events_url": "https://api.github.com/users/cy89/events{/privacy}", "received_events_url": "https://api.github.com/users/cy89/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "cy89", "id": 29663194, "node_id": "MDQ6VXNlcjI5NjYzMTk0", "avatar_url": "https://avatars0.githubusercontent.com/u/29663194?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cy89", "html_url": "https://github.com/cy89", "followers_url": "https://api.github.com/users/cy89/followers", "following_url": "https://api.github.com/users/cy89/following{/other_user}", "gists_url": "https://api.github.com/users/cy89/gists{/gist_id}", "starred_url": "https://api.github.com/users/cy89/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cy89/subscriptions", "organizations_url": "https://api.github.com/users/cy89/orgs", "repos_url": "https://api.github.com/users/cy89/repos", "events_url": "https://api.github.com/users/cy89/events{/privacy}", "received_events_url": "https://api.github.com/users/cy89/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 7, "created_at": "2018-04-18T09:28:23Z", "updated_at": "2018-12-14T18:52:31Z", "closed_at": null, "author_association": "NONE", "body": "### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**: Yes\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**: Mac OS X 10.13.4\r\n- **TensorFlow installed from (source or binary)**: from pip\r\n- **TensorFlow version (use command below)**: 1.7.0, 1.6.0, 1.8.0rc0\r\n- **Python version**: Anaconda, python 3.6\r\n- **Bazel version (if compiling from source)**: no\r\n- **GCC/Compiler version (if compiling from source)**: no\r\n- **CUDA/cuDNN version**: no\r\n- **GPU model and memory**: no\r\n- **Exact command to reproduce**:\r\n```python\r\nimport tensorflow as tf\r\n\r\nv = tf.get_variable(\r\n    name='a',\r\n    shape=(550 * 1000 * 1000,),\r\n    dtype=tf.float32,\r\n    initializer=tf.zeros_initializer(),\r\n)\r\nsaver = tf.train.Saver()\r\nwith tf.Session() as s:\r\n    s.run(tf.global_variables_initializer())\r\n    saver.save(s, 'tmp.tf/a')\r\n    saver.restore(s, 'tmp.tf/a')\r\n```\r\n\r\n### Describe the problem\r\nWhen saving and then restoring variable >2GB on macOS tensorflow throws InvalidArgumentError\r\n\r\n### Source code / logs\r\n```\r\n2018-04-18 12:25:50.620884: I tensorflow/core/platform/cpu_feature_guard.cc:140] Your CPU supports instructions that this TensorFlow binary was not compiled to use: AVX2 FMA\r\n'tmp.tf/a'\r\nINFO:tensorflow:Restoring parameters from tmp.tf/a\r\n2018-04-18 12:26:00.866457: W tensorflow/core/framework/op_kernel.cc:1273] OP_REQUIRES failed at save_restore_v2_ops.cc:184 : Invalid argument: tmp.tf/a.data-00000-of-00001; Invalid argument\r\nTraceback (most recent call last):\r\n  File \"/Users/alyaxey/anaconda/envs/myenv/lib/python3.6/site-packages/tensorflow/python/client/session.py\", line 1327, in _do_call\r\n    return fn(*args)\r\n  File \"/Users/alyaxey/anaconda/envs/myenv/lib/python3.6/site-packages/tensorflow/python/client/session.py\", line 1312, in _run_fn\r\n    options, feed_dict, fetch_list, target_list, run_metadata)\r\n  File \"/Users/alyaxey/anaconda/envs/myenv/lib/python3.6/site-packages/tensorflow/python/client/session.py\", line 1420, in _call_tf_sessionrun\r\n    status, run_metadata)\r\n  File \"/Users/alyaxey/anaconda/envs/myenv/lib/python3.6/site-packages/tensorflow/python/framework/errors_impl.py\", line 516, in __exit__\r\n    c_api.TF_GetCode(self.status.status))\r\ntensorflow.python.framework.errors_impl.InvalidArgumentError: tmp.tf/a.data-00000-of-00001; Invalid argument\r\n\t [[Node: save/RestoreV2 = RestoreV2[dtypes=[DT_FLOAT], _device=\"/job:localhost/replica:0/task:0/device:CPU:0\"](_arg_save/Const_0_0, save/RestoreV2/tensor_names, save/RestoreV2/shape_and_slices)]]\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 4, in <module>\r\n  File \"/Users/alyaxey/anaconda/envs/myenv/lib/python3.6/site-packages/tensorflow/python/training/saver.py\", line 1775, in restore\r\n    {self.saver_def.filename_tensor_name: save_path})\r\n  File \"/Users/alyaxey/anaconda/envs/myenv/lib/python3.6/site-packages/tensorflow/python/client/session.py\", line 905, in run\r\n    run_metadata_ptr)\r\n  File \"/Users/alyaxey/anaconda/envs/myenv/lib/python3.6/site-packages/tensorflow/python/client/session.py\", line 1140, in _run\r\n    feed_dict_tensor, options, run_metadata)\r\n  File \"/Users/alyaxey/anaconda/envs/myenv/lib/python3.6/site-packages/tensorflow/python/client/session.py\", line 1321, in _do_run\r\n    run_metadata)\r\n  File \"/Users/alyaxey/anaconda/envs/myenv/lib/python3.6/site-packages/tensorflow/python/client/session.py\", line 1340, in _do_call\r\n    raise type(e)(node_def, op, message)\r\ntensorflow.python.framework.errors_impl.InvalidArgumentError: tmp.tf/a.data-00000-of-00001; Invalid argument\r\n\t [[Node: save/RestoreV2 = RestoreV2[dtypes=[DT_FLOAT], _device=\"/job:localhost/replica:0/task:0/device:CPU:0\"](_arg_save/Const_0_0, save/RestoreV2/tensor_names, save/RestoreV2/shape_and_slices)]]\r\n\r\nCaused by op 'save/RestoreV2', defined at:\r\n  File \"<stdin>\", line 1, in <module>\r\n  File \"/Users/alyaxey/anaconda/envs/myenv/lib/python3.6/site-packages/tensorflow/python/training/saver.py\", line 1311, in __init__\r\n    self.build()\r\n  File \"/Users/alyaxey/anaconda/envs/myenv/lib/python3.6/site-packages/tensorflow/python/training/saver.py\", line 1320, in build\r\n    self._build(self._filename, build_save=True, build_restore=True)\r\n  File \"/Users/alyaxey/anaconda/envs/myenv/lib/python3.6/site-packages/tensorflow/python/training/saver.py\", line 1357, in _build\r\n    build_save=build_save, build_restore=build_restore)\r\n  File \"/Users/alyaxey/anaconda/envs/myenv/lib/python3.6/site-packages/tensorflow/python/training/saver.py\", line 809, in _build_internal\r\n    restore_sequentially, reshape)\r\n  File \"/Users/alyaxey/anaconda/envs/myenv/lib/python3.6/site-packages/tensorflow/python/training/saver.py\", line 448, in _AddRestoreOps\r\n    restore_sequentially)\r\n  File \"/Users/alyaxey/anaconda/envs/myenv/lib/python3.6/site-packages/tensorflow/python/training/saver.py\", line 860, in bulk_restore\r\n    return io_ops.restore_v2(filename_tensor, names, slices, dtypes)\r\n  File \"/Users/alyaxey/anaconda/envs/myenv/lib/python3.6/site-packages/tensorflow/python/ops/gen_io_ops.py\", line 1458, in restore_v2\r\n    shape_and_slices=shape_and_slices, dtypes=dtypes, name=name)\r\n  File \"/Users/alyaxey/anaconda/envs/myenv/lib/python3.6/site-packages/tensorflow/python/framework/op_def_library.py\", line 787, in _apply_op_helper\r\n    op_def=op_def)\r\n  File \"/Users/alyaxey/anaconda/envs/myenv/lib/python3.6/site-packages/tensorflow/python/framework/ops.py\", line 3290, in create_op\r\n    op_def=op_def)\r\n  File \"/Users/alyaxey/anaconda/envs/myenv/lib/python3.6/site-packages/tensorflow/python/framework/ops.py\", line 1654, in __init__\r\n    self._traceback = self._graph._extract_stack()  # pylint: disable=protected-access\r\n\r\nInvalidArgumentError (see above for traceback): tmp.tf/a.data-00000-of-00001; Invalid argument\r\n\t [[Node: save/RestoreV2 = RestoreV2[dtypes=[DT_FLOAT], _device=\"/job:localhost/replica:0/task:0/device:CPU:0\"](_arg_save/Const_0_0, save/RestoreV2/tensor_names, save/RestoreV2/shape_and_slices)]]\r\n```"}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/18635", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/18635/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/18635/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/18635/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/18635", "id": 315367989, "node_id": "MDU6SXNzdWUzMTUzNjc5ODk=", "number": 18635, "title": "Strange result of float division", "user": {"login": "weichiche", "id": 7419189, "node_id": "MDQ6VXNlcjc0MTkxODk=", "avatar_url": "https://avatars2.githubusercontent.com/u/7419189?v=4", "gravatar_id": "", "url": "https://api.github.com/users/weichiche", "html_url": "https://github.com/weichiche", "followers_url": "https://api.github.com/users/weichiche/followers", "following_url": "https://api.github.com/users/weichiche/following{/other_user}", "gists_url": "https://api.github.com/users/weichiche/gists{/gist_id}", "starred_url": "https://api.github.com/users/weichiche/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/weichiche/subscriptions", "organizations_url": "https://api.github.com/users/weichiche/orgs", "repos_url": "https://api.github.com/users/weichiche/repos", "events_url": "https://api.github.com/users/weichiche/events{/privacy}", "received_events_url": "https://api.github.com/users/weichiche/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 404586558, "node_id": "MDU6TGFiZWw0MDQ1ODY1NTg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:community%20support", "name": "stat:community support", "color": "f4b400", "default": false, "description": ""}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2018-04-18T07:48:58Z", "updated_at": "2018-05-29T18:16:46Z", "closed_at": null, "author_association": "NONE", "body": "### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**:\r\nYes\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**:\r\nLinux Ubuntu 16.04\r\n- **TensorFlow installed from (source or binary)**:\r\nbinary\r\n- **TensorFlow version (use command below)**:\r\n1.5.0\r\n- **Python version**: \r\n3.5.2\r\n- **CUDA/cuDNN version**:\r\n9.0\r\n- **GPU model and memory**:\r\nGTX 1080Ti\r\n\r\n### Describe the problem\r\n\r\nThe below Numpy and TensorFlow codelets produce different results, while I suppose they should be the same.\r\n\r\n```python\r\nimport numpy as np\r\nimport tensorflow as tf\r\n\r\nx = np.array([247.], dtype=np.float32)\r\ny = x / 255.\r\nprint('{:12.10f}'.format(y[0]))\r\n# 0.9686274529\r\n\r\na = tf.placeholder(tf.float32)\r\nb = a / 255.\r\nwith tf.Session() as sess:\r\n    _b = sess.run(b, feed_dict={a: x})\r\nprint('{:12.10f}'.format(_b[0]))\r\n# 0.9686275125\r\n```\r\n\r\nRunning on CPU gives the same issue.\r\n\r\nHowever, if I use `a = tf.constant(x, dtype=tf.float32)` instead of `tf.placeholder`, the result seems correct.\r\n\r\nIs this an issue about `tf.placeholder` or something else? Does this affect other operations?"}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/18543", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/18543/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/18543/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/18543/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/18543", "id": 314508495, "node_id": "MDU6SXNzdWUzMTQ1MDg0OTU=", "number": 18543, "title": "saved_model.pb, saved_model.pbtxt missing google cloud", "user": {"login": "mistaguy", "id": 416610, "node_id": "MDQ6VXNlcjQxNjYxMA==", "avatar_url": "https://avatars2.githubusercontent.com/u/416610?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mistaguy", "html_url": "https://github.com/mistaguy", "followers_url": "https://api.github.com/users/mistaguy/followers", "following_url": "https://api.github.com/users/mistaguy/following{/other_user}", "gists_url": "https://api.github.com/users/mistaguy/gists{/gist_id}", "starred_url": "https://api.github.com/users/mistaguy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mistaguy/subscriptions", "organizations_url": "https://api.github.com/users/mistaguy/orgs", "repos_url": "https://api.github.com/users/mistaguy/repos", "events_url": "https://api.github.com/users/mistaguy/events{/privacy}", "received_events_url": "https://api.github.com/users/mistaguy/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": {"login": "rhaertel80", "id": 25178593, "node_id": "MDQ6VXNlcjI1MTc4NTkz", "avatar_url": "https://avatars0.githubusercontent.com/u/25178593?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rhaertel80", "html_url": "https://github.com/rhaertel80", "followers_url": "https://api.github.com/users/rhaertel80/followers", "following_url": "https://api.github.com/users/rhaertel80/following{/other_user}", "gists_url": "https://api.github.com/users/rhaertel80/gists{/gist_id}", "starred_url": "https://api.github.com/users/rhaertel80/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rhaertel80/subscriptions", "organizations_url": "https://api.github.com/users/rhaertel80/orgs", "repos_url": "https://api.github.com/users/rhaertel80/repos", "events_url": "https://api.github.com/users/rhaertel80/events{/privacy}", "received_events_url": "https://api.github.com/users/rhaertel80/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "rhaertel80", "id": 25178593, "node_id": "MDQ6VXNlcjI1MTc4NTkz", "avatar_url": "https://avatars0.githubusercontent.com/u/25178593?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rhaertel80", "html_url": "https://github.com/rhaertel80", "followers_url": "https://api.github.com/users/rhaertel80/followers", "following_url": "https://api.github.com/users/rhaertel80/following{/other_user}", "gists_url": "https://api.github.com/users/rhaertel80/gists{/gist_id}", "starred_url": "https://api.github.com/users/rhaertel80/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rhaertel80/subscriptions", "organizations_url": "https://api.github.com/users/rhaertel80/orgs", "repos_url": "https://api.github.com/users/rhaertel80/repos", "events_url": "https://api.github.com/users/rhaertel80/events{/privacy}", "received_events_url": "https://api.github.com/users/rhaertel80/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 7, "created_at": "2018-04-16T05:42:48Z", "updated_at": "2018-12-19T18:45:11Z", "closed_at": null, "author_association": "NONE", "body": "My model has finished training but i can not see the `saved_model.pb, saved_model.pbtxt` in the training directory. or any of my bucket folders"}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/18539", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/18539/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/18539/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/18539/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/18539", "id": 314463453, "node_id": "MDU6SXNzdWUzMTQ0NjM0NTM=", "number": 18539, "title": "Unable to convert MRCNN model to .tflite model", "user": {"login": "Cpruce", "id": 2712171, "node_id": "MDQ6VXNlcjI3MTIxNzE=", "avatar_url": "https://avatars1.githubusercontent.com/u/2712171?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Cpruce", "html_url": "https://github.com/Cpruce", "followers_url": "https://api.github.com/users/Cpruce/followers", "following_url": "https://api.github.com/users/Cpruce/following{/other_user}", "gists_url": "https://api.github.com/users/Cpruce/gists{/gist_id}", "starred_url": "https://api.github.com/users/Cpruce/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Cpruce/subscriptions", "organizations_url": "https://api.github.com/users/Cpruce/orgs", "repos_url": "https://api.github.com/users/Cpruce/repos", "events_url": "https://api.github.com/users/Cpruce/events{/privacy}", "received_events_url": "https://api.github.com/users/Cpruce/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 750616506, "node_id": "MDU6TGFiZWw3NTA2MTY1MDY=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/comp:lite", "name": "comp:lite", "color": "0052cc", "default": false, "description": ""}], "state": "open", "locked": false, "assignee": {"login": "aselle", "id": 326106, "node_id": "MDQ6VXNlcjMyNjEwNg==", "avatar_url": "https://avatars1.githubusercontent.com/u/326106?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aselle", "html_url": "https://github.com/aselle", "followers_url": "https://api.github.com/users/aselle/followers", "following_url": "https://api.github.com/users/aselle/following{/other_user}", "gists_url": "https://api.github.com/users/aselle/gists{/gist_id}", "starred_url": "https://api.github.com/users/aselle/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aselle/subscriptions", "organizations_url": "https://api.github.com/users/aselle/orgs", "repos_url": "https://api.github.com/users/aselle/repos", "events_url": "https://api.github.com/users/aselle/events{/privacy}", "received_events_url": "https://api.github.com/users/aselle/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "aselle", "id": 326106, "node_id": "MDQ6VXNlcjMyNjEwNg==", "avatar_url": "https://avatars1.githubusercontent.com/u/326106?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aselle", "html_url": "https://github.com/aselle", "followers_url": "https://api.github.com/users/aselle/followers", "following_url": "https://api.github.com/users/aselle/following{/other_user}", "gists_url": "https://api.github.com/users/aselle/gists{/gist_id}", "starred_url": "https://api.github.com/users/aselle/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aselle/subscriptions", "organizations_url": "https://api.github.com/users/aselle/orgs", "repos_url": "https://api.github.com/users/aselle/repos", "events_url": "https://api.github.com/users/aselle/events{/privacy}", "received_events_url": "https://api.github.com/users/aselle/received_events", "type": "User", "site_admin": false}, {"login": "suharshs", "id": 1450614, "node_id": "MDQ6VXNlcjE0NTA2MTQ=", "avatar_url": "https://avatars1.githubusercontent.com/u/1450614?v=4", "gravatar_id": "", "url": "https://api.github.com/users/suharshs", "html_url": "https://github.com/suharshs", "followers_url": "https://api.github.com/users/suharshs/followers", "following_url": "https://api.github.com/users/suharshs/following{/other_user}", "gists_url": "https://api.github.com/users/suharshs/gists{/gist_id}", "starred_url": "https://api.github.com/users/suharshs/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/suharshs/subscriptions", "organizations_url": "https://api.github.com/users/suharshs/orgs", "repos_url": "https://api.github.com/users/suharshs/repos", "events_url": "https://api.github.com/users/suharshs/events{/privacy}", "received_events_url": "https://api.github.com/users/suharshs/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 17, "created_at": "2018-04-15T23:39:30Z", "updated_at": "2019-01-30T09:31:16Z", "closed_at": null, "author_association": "NONE", "body": "### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**: Yes\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**: macOS High Sierra 10.13.4\r\n- **TensorFlow installed from (source or binary)**: source\r\n- **TensorFlow version (use command below)**:\r\n`python3 -c \"import tensorflow as tf; print(tf.GIT_VERSION, tf.VERSION)\"\r\n/anaconda3/lib/python3.5/site-packages/h5py/__init__.py:34: FutureWarning: Conversion of the second argument of issubdtype from `float` to `np.floating` is deprecated. In future, it will be treated as `np.float64 == np.dtype(float).type`.\r\n  from ._conv import register_converters as _register_converters\r\nb'v1.7.0-1844-ga0edcf60f7' 1.7.0`\r\n- **Python version**: 3.5\r\n- **Bazel version (if compiling from source)**:\r\n`bazel version\r\nBuild label: 0.10.0-homebrew\r\nBuild target: bazel-out/darwin-opt/bin/src/main/java/com/google/devtools/build/lib/bazel/BazelServer_deploy.jar\r\nBuild time: Wed Jan 10 02:02:06 +50057 (1517480013726)\r\nBuild timestamp: 1517480013726\r\nBuild timestamp as int: 1517480013726`\r\n- **GCC/Compiler version (if compiling from source)**:\r\n`gcc --version\r\nConfigured with: --prefix=/Applications/Xcode.app/Contents/Developer/usr --with-gxx-include-dir=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.13.sdk/usr/include/c++/4.2.1\r\nApple LLVM version 9.0.0 (clang-900.0.39.2)\r\nTarget: x86_64-apple-darwin17.5.0\r\nThread model: posix\r\nInstalledDir: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin`\r\n- **CUDA/cuDNN version**:\r\nN/A\r\n- **GPU model and memory**:\r\nN/A\r\n- **Exact command to reproduce**:\r\n`bazel-bin/tensorflow/contrib/lite/toco/toco   --input_file=./mobile_mrcnn.pb --input_format=TENSORFLOW_GRAPHDEF  --output_format=TFLITE --output_file=/tmp/mobilenet_v1_1.0_224.tflite --inference_type=FLOAT --input_arrays=input_image,input_image_meta --output_arrays=output_node0,output_node1,output_node2,output_node3,output_node4,output_node5,output_node6 --input_shapes=1,224,224,3:1,89`\r\n\r\nYou can collect some of this information using our environment capture script:\r\n\r\nhttps://github.com/tensorflow/tensorflow/tree/master/tools/tf_env_collect.sh\r\n\r\nYou can obtain the TensorFlow version with\r\n\r\npython -c \"import tensorflow as tf; print(tf.GIT_VERSION, tf.VERSION)\"\r\n\r\n### Describe the problem\r\nWhen trying to convert an MRCNN from a frozen graph (.pb) file to (.tflite) using the tensorflow toco script, I get an `Abort trap: 6` error with no explanation. Any advice on how to debug/add unsupported ops/functionality or just what went wrong would be great.\r\n\r\n### Source code / logs\r\nError:\r\n`bazel-bin/tensorflow/contrib/lite/toco/toco   --input_file=./mobile_mrcnn.pb --input_format=TENSORFLOW_GRAPHDEF  --output_format=TFLITE --output_file=/tmp/mobilenet_v1_1.0_224.tflite --inference_type=FLOAT --input_arrays=input_image,input_image_meta --output_arrays=output_node0,output_node1,output_node2,output_node3,output_node4,output_node5,output_node6 --input_shapes=1,224,224,3:1,89 \r\n2018-04-15 15:48:31.302680: I tensorflow/contrib/lite/toco/import_tensorflow.cc:1268] Converting unsupported operation: ResizeNearestNeighbor\r\n2018-04-15 15:48:31.303544: I tensorflow/contrib/lite/toco/import_tensorflow.cc:1268] Converting unsupported operation: ResizeNearestNeighbor\r\n2018-04-15 15:48:31.303972: I tensorflow/contrib/lite/toco/import_tensorflow.cc:1268] Converting unsupported operation: ResizeNearestNeighbor\r\n2018-04-15 15:48:31.319684: I tensorflow/contrib/lite/toco/import_tensorflow.cc:1268] Converting unsupported operation: NonMaxSuppression\r\n2018-04-15 15:48:31.319847: I tensorflow/contrib/lite/toco/import_tensorflow.cc:1268] Converting unsupported operation: Round\r\n2018-04-15 15:48:31.319897: I tensorflow/contrib/lite/toco/import_tensorflow.cc:1268] Converting unsupported operation: Equal\r\n2018-04-15 15:48:31.319908: I tensorflow/contrib/lite/toco/import_tensorflow.cc:1268] Converting unsupported operation: Where\r\n2018-04-15 15:48:31.319921: I tensorflow/contrib/lite/toco/import_tensorflow.cc:1268] Converting unsupported operation: GatherNd\r\n2018-04-15 15:48:31.319966: I tensorflow/contrib/lite/toco/import_tensorflow.cc:1268] Converting unsupported operation: CropAndResize\r\n2018-04-15 15:48:31.319983: I tensorflow/contrib/lite/toco/import_tensorflow.cc:1268] Converting unsupported operation: Equal\r\n2018-04-15 15:48:31.319993: I tensorflow/contrib/lite/toco/import_tensorflow.cc:1268] Converting unsupported operation: Where\r\n2018-04-15 15:48:31.320006: I tensorflow/contrib/lite/toco/import_tensorflow.cc:1268] Converting unsupported operation: GatherNd\r\n2018-04-15 15:48:31.320048: I tensorflow/contrib/lite/toco/import_tensorflow.cc:1268] Converting unsupported operation: CropAndResize\r\n2018-04-15 15:48:31.320065: I tensorflow/contrib/lite/toco/import_tensorflow.cc:1268] Converting unsupported operation: Equal\r\n2018-04-15 15:48:31.320074: I tensorflow/contrib/lite/toco/import_tensorflow.cc:1268] Converting unsupported operation: Where\r\n2018-04-15 15:48:31.320087: I tensorflow/contrib/lite/toco/import_tensorflow.cc:1268] Converting unsupported operation: GatherNd\r\n2018-04-15 15:48:31.320131: I tensorflow/contrib/lite/toco/import_tensorflow.cc:1268] Converting unsupported operation: CropAndResize\r\n2018-04-15 15:48:31.320149: I tensorflow/contrib/lite/toco/import_tensorflow.cc:1268] Converting unsupported operation: Equal\r\n2018-04-15 15:48:31.320159: I tensorflow/contrib/lite/toco/import_tensorflow.cc:1268] Converting unsupported operation: Where\r\n2018-04-15 15:48:31.320180: I tensorflow/contrib/lite/toco/import_tensorflow.cc:1268] Converting unsupported operation: GatherNd\r\n2018-04-15 15:48:31.320370: I tensorflow/contrib/lite/toco/import_tensorflow.cc:1268] Converting unsupported operation: CropAndResize\r\n2018-04-15 15:48:31.416940: I tensorflow/contrib/lite/toco/import_tensorflow.cc:1268] Converting unsupported operation: GatherNd\r\n2018-04-15 15:48:31.416977: I tensorflow/contrib/lite/toco/import_tensorflow.cc:1268] Converting unsupported operation: GatherNd\r\n2018-04-15 15:48:31.417344: I tensorflow/contrib/lite/toco/import_tensorflow.cc:1268] Converting unsupported operation: Rint\r\n2018-04-15 15:48:31.417372: I tensorflow/contrib/lite/toco/import_tensorflow.cc:1268] Converting unsupported operation: Where\r\n2018-04-15 15:48:31.417419: I tensorflow/contrib/lite/toco/import_tensorflow.cc:1268] Converting unsupported operation: Unique\r\n2018-04-15 15:48:31.417470: I tensorflow/contrib/lite/toco/import_tensorflow.cc:1268] Converting unsupported operation: TensorArrayV3\r\n2018-04-15 15:48:31.417531: I tensorflow/contrib/lite/toco/import_tensorflow.cc:1268] Converting unsupported operation: TensorArrayScatterV3\r\n2018-04-15 15:48:31.417551: I tensorflow/contrib/lite/toco/import_tensorflow.cc:1268] Converting unsupported operation: TensorArrayV3\r\n2018-04-15 15:48:31.417578: I tensorflow/contrib/lite/toco/import_tensorflow.cc:1268] Converting unsupported operation: Enter\r\n2018-04-15 15:48:31.417590: I tensorflow/contrib/lite/toco/import_tensorflow.cc:1268] Converting unsupported operation: Enter\r\n2018-04-15 15:48:31.417621: I tensorflow/contrib/lite/toco/import_tensorflow.cc:1268] Converting unsupported operation: Enter\r\n2018-04-15 15:48:31.417635: I tensorflow/contrib/lite/toco/import_tensorflow.cc:1268] Converting unsupported operation: LoopCond\r\n2018-04-15 15:48:31.417673: I tensorflow/contrib/lite/toco/import_tensorflow.cc:1268] Converting unsupported operation: Enter\r\n2018-04-15 15:48:31.417685: I tensorflow/contrib/lite/toco/import_tensorflow.cc:1268] Converting unsupported operation: Enter\r\n2018-04-15 15:48:31.417709: I tensorflow/contrib/lite/toco/import_tensorflow.cc:1268] Converting unsupported operation: TensorArrayReadV3\r\n2018-04-15 15:48:31.417719: I tensorflow/contrib/lite/toco/import_tensorflow.cc:1268] Converting unsupported operation: Enter\r\n2018-04-15 15:48:31.417729: I tensorflow/contrib/lite/toco/import_tensorflow.cc:1268] Converting unsupported operation: Equal\r\n2018-04-15 15:48:31.417738: I tensorflow/contrib/lite/toco/import_tensorflow.cc:1268] Converting unsupported operation: Where\r\n2018-04-15 15:48:31.417785: I tensorflow/contrib/lite/toco/import_tensorflow.cc:1268] Converting unsupported operation: Enter\r\n2018-04-15 15:48:31.417807: I tensorflow/contrib/lite/toco/import_tensorflow.cc:1268] Converting unsupported operation: Enter\r\n2018-04-15 15:48:31.417838: I tensorflow/contrib/lite/toco/import_tensorflow.cc:1268] Converting unsupported operation: NonMaxSuppression\r\n2018-04-15 15:48:31.417853: I tensorflow/contrib/lite/toco/import_tensorflow.cc:1268] Converting unsupported operation: Enter\r\n2018-04-15 15:48:31.417942: I tensorflow/contrib/lite/toco/import_tensorflow.cc:1268] Converting unsupported operation: PadV2\r\n2018-04-15 15:48:31.417955: I tensorflow/contrib/lite/toco/import_tensorflow.cc:1268] Converting unsupported operation: Enter\r\n2018-04-15 15:48:31.417969: I tensorflow/contrib/lite/toco/import_tensorflow.cc:1268] Converting unsupported operation: TensorArrayWriteV3\r\n2018-04-15 15:48:31.418017: I tensorflow/contrib/lite/toco/import_tensorflow.cc:1268] Converting unsupported operation: Exit\r\n2018-04-15 15:48:31.418028: I tensorflow/contrib/lite/toco/import_tensorflow.cc:1268] Converting unsupported operation: TensorArraySizeV3\r\n2018-04-15 15:48:31.418069: I tensorflow/contrib/lite/toco/import_tensorflow.cc:1268] Converting unsupported operation: TensorArrayGatherV3\r\n2018-04-15 15:48:31.418957: I tensorflow/contrib/lite/toco/import_tensorflow.cc:1268] Converting unsupported operation: Where\r\n2018-04-15 15:48:31.419022: I tensorflow/contrib/lite/toco/import_tensorflow.cc:1268] Converting unsupported operation: DenseToDenseSetOperation\r\n2018-04-15 15:48:31.419054: I tensorflow/contrib/lite/toco/import_tensorflow.cc:1268] Converting unsupported operation: SparseToDense\r\n2018-04-15 15:48:31.419385: I tensorflow/contrib/lite/toco/import_tensorflow.cc:1268] Converting unsupported operation: Round\r\n2018-04-15 15:48:31.419425: I tensorflow/contrib/lite/toco/import_tensorflow.cc:1268] Converting unsupported operation: Equal\r\n2018-04-15 15:48:31.419434: I tensorflow/contrib/lite/toco/import_tensorflow.cc:1268] Converting unsupported operation: Where\r\n2018-04-15 15:48:31.419445: I tensorflow/contrib/lite/toco/import_tensorflow.cc:1268] Converting unsupported operation: GatherNd\r\n2018-04-15 15:48:31.419498: I tensorflow/contrib/lite/toco/import_tensorflow.cc:1268] Converting unsupported operation: CropAndResize\r\n2018-04-15 15:48:31.419525: I tensorflow/contrib/lite/toco/import_tensorflow.cc:1268] Converting unsupported operation: Equal\r\n2018-04-15 15:48:31.419545: I tensorflow/contrib/lite/toco/import_tensorflow.cc:1268] Converting unsupported operation: Where\r\n2018-04-15 15:48:31.419557: I tensorflow/contrib/lite/toco/import_tensorflow.cc:1268] Converting unsupported operation: GatherNd\r\n2018-04-15 15:48:31.419597: I tensorflow/contrib/lite/toco/import_tensorflow.cc:1268] Converting unsupported operation: CropAndResize\r\n2018-04-15 15:48:31.419612: I tensorflow/contrib/lite/toco/import_tensorflow.cc:1268] Converting unsupported operation: Equal\r\n2018-04-15 15:48:31.419620: I tensorflow/contrib/lite/toco/import_tensorflow.cc:1268] Converting unsupported operation: Where\r\n2018-04-15 15:48:31.419654: I tensorflow/contrib/lite/toco/import_tensorflow.cc:1268] Converting unsupported operation: GatherNd\r\n2018-04-15 15:48:31.419725: I tensorflow/contrib/lite/toco/import_tensorflow.cc:1268] Converting unsupported operation: CropAndResize\r\n2018-04-15 15:48:31.419756: I tensorflow/contrib/lite/toco/import_tensorflow.cc:1268] Converting unsupported operation: Equal\r\n2018-04-15 15:48:31.419766: I tensorflow/contrib/lite/toco/import_tensorflow.cc:1268] Converting unsupported operation: Where\r\n2018-04-15 15:48:31.419793: I tensorflow/contrib/lite/toco/import_tensorflow.cc:1268] Converting unsupported operation: GatherNd\r\n2018-04-15 15:48:31.419850: I tensorflow/contrib/lite/toco/import_tensorflow.cc:1268] Converting unsupported operation: CropAndResize\r\n2018-04-15 15:48:31.445467: F tensorflow/contrib/lite/toco/tooling_util.cc:822] Check failed: d >= 1 (0 vs. 1)\r\nAbort trap: 6`\r\n\r\nSource:\r\nhttps://github.com/matterport/Mask_RCNN/blob/master/mrcnn/model.py"}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/18537", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/18537/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/18537/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/18537/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/18537", "id": 314440496, "node_id": "MDU6SXNzdWUzMTQ0NDA0OTY=", "number": 18537, "title": "Slow matrix multiplication using Tensorflow 1.7.0 on a GPU", "user": {"login": "gskulkarni", "id": 4792573, "node_id": "MDQ6VXNlcjQ3OTI1NzM=", "avatar_url": "https://avatars1.githubusercontent.com/u/4792573?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gskulkarni", "html_url": "https://github.com/gskulkarni", "followers_url": "https://api.github.com/users/gskulkarni/followers", "following_url": "https://api.github.com/users/gskulkarni/following{/other_user}", "gists_url": "https://api.github.com/users/gskulkarni/gists{/gist_id}", "starred_url": "https://api.github.com/users/gskulkarni/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gskulkarni/subscriptions", "organizations_url": "https://api.github.com/users/gskulkarni/orgs", "repos_url": "https://api.github.com/users/gskulkarni/repos", "events_url": "https://api.github.com/users/gskulkarni/events{/privacy}", "received_events_url": "https://api.github.com/users/gskulkarni/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2018-04-15T18:42:56Z", "updated_at": "2020-02-08T01:15:16Z", "closed_at": null, "author_association": "NONE", "body": "Please go to Stack Overflow for help and support:\r\n\r\nhttps://stackoverflow.com/questions/tagged/tensorflow\r\n\r\nIf you open a GitHub issue, here is our policy:\r\n\r\n1. It must be a bug, a feature request, or a significant problem with documentation (for small docs fixes please send a PR instead).\r\n2. The form below must be filled out.\r\n3. It shouldn't be a TensorBoard issue. Those go [here](https://github.com/tensorflow/tensorboard/issues).\r\n\r\n**Here's why we have that policy**: TensorFlow developers respond to issues. We want to focus on work that benefits the whole community, e.g., fixing bugs and adding features. Support only helps individuals. GitHub also notifies thousands of people when issues are filed. We want them to see you communicating an interesting problem, rather than being redirected to Stack Overflow.\r\n\r\n------------------------\r\n\r\n### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**:\r\nYes\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**:\r\nWindows 10 Home (64 bit) Version 1709 OS Build 16299.371\r\n- **TensorFlow installed from (source or binary)**:\r\nBinary (Tensorflow GPU)\r\n- **TensorFlow version (use command below)**:\r\nPS C:\\Users\\gautam> python\r\nPython 3.6.4 (v3.6.4:d48eceb, Dec 19 2017, 06:54:40) [MSC v.1900 64 bit (AMD64)] on win32\r\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\r\n>>> import tensorflow as tf\r\n>>> print(tf.__version__)\r\n1.7.0\r\n- **Python version**: \r\n3.6.4\r\n- **Bazel version (if compiling from source)**:\r\n- **GCC/Compiler version (if compiling from source)**:\r\n- **CUDA/cuDNN version**:\r\n**CUDA:**\r\nPS C:\\Users\\gautam> nvcc --version\r\nnvcc: NVIDIA (R) Cuda compiler driver\r\nCopyright (c) 2005-2017 NVIDIA Corporation\r\nBuilt on Fri_Sep__1_21:08:32_Central_Daylight_Time_2017\r\nCuda compilation tools, release 9.0, V9.0.176\r\n**cuDNN:**\r\n#define CUDNN_MAJOR 7\r\n#define CUDNN_MINOR 0\r\n#define CUDNN_PATCHLEVEL 5\r\n\r\n- **GPU model and memory**:\r\nNvidia GTX 1050, 4GB\r\n- **Exact command to reproduce**:\r\n\r\n### Describe the problem\r\nI have tensorflow-gpu installed on my Dell XPS 15 laptop running Windows 10 (environment specified above). I tried to compare matrix multiplication performance between np.matmul() and tf.matmul() for the graph mode of execution. The numpy method returns the result in about 13.5 seconds whereas the tensorflow method takes a long time and eventually fails.\r\n\r\n### Source code / logs\r\nI generated input matrices in the following way:\r\nx = np.random.random((10000,10000))\r\ny = np.random.random((10000,10000))\r\n\r\nHere are the results:\r\n1. np.matmul(x,y) takes about 13.5 seconds\r\n2. The following takes a long time and eventually errors out:\r\nwith tf.Session() as sess:\r\n    z = tf.matmul(x,y).eval()\r\n2018-04-15 11:35:05.157088: I T:\\src\\github\\tensorflow\\tensorflow\\core\\common_runtime\\gpu\\gpu_device.cc:1344] Found device 0 with properties:\r\nname: GeForce GTX 1050 major: 6 minor: 1 memoryClockRate(GHz): 1.493\r\npciBusID: 0000:01:00.0\r\ntotalMemory: 4.00GiB freeMemory: 3.30GiB\r\n2018-04-15 11:35:05.163665: I T:\\src\\github\\tensorflow\\tensorflow\\core\\common_runtime\\gpu\\gpu_device.cc:1423] Adding visible gpu devices: 0\r\n2018-04-15 11:35:07.338162: I T:\\src\\github\\tensorflow\\tensorflow\\core\\common_runtime\\gpu\\gpu_device.cc:911] Device interconnect StreamExecutor with strength 1 edge matrix:\r\n2018-04-15 11:35:07.348029: I T:\\src\\github\\tensorflow\\tensorflow\\core\\common_runtime\\gpu\\gpu_device.cc:917]      0\r\n2018-04-15 11:35:07.353379: I T:\\src\\github\\tensorflow\\tensorflow\\core\\common_runtime\\gpu\\gpu_device.cc:930] 0:   N\r\n2018-04-15 11:35:07.363613: I T:\\src\\github\\tensorflow\\tensorflow\\core\\common_runtime\\gpu\\gpu_device.cc:1041] Created TensorFlow device (/job:localhost/replica:0/task:0/device:GPU:0 with 3033 MB memory) -> physical GPU (device: 0, name: GeForce GTX 1050, pci bus id: 0000:01:00.0, compute capability: 6.1)\r\n2018-04-15 11:36:56.906874: E T:\\src\\github\\tensorflow\\tensorflow\\stream_executor\\cuda\\cuda_driver.cc:1110] could not synchronize on CUDA context: CUDA_ERROR_LAUNCH_FAILED ::\r\n2018-04-15 11:36:56.906874: E T:\\src\\github\\tensorflow\\tensorflow\\stream_executor\\cuda\\cuda_event.cc:49] Error polling for event status: failed to query event: CUDA_ERROR_LAUNCH_FAILED\r\n2018-04-15 11:36:56.915430: F T:\\src\\github\\tensorflow\\tensorflow\\core\\common_runtime\\gpu\\gpu_event_mgr.cc:203] Unexpected Event status: 1\r\n"}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/18491", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/18491/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/18491/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/18491/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/18491", "id": 314079712, "node_id": "MDU6SXNzdWUzMTQwNzk3MTI=", "number": 18491, "title": "crf_log_likelihood become 2x slower after upgrade TensorFlow from 1.4 to 1.7", "user": {"login": "SimpleJian", "id": 5996147, "node_id": "MDQ6VXNlcjU5OTYxNDc=", "avatar_url": "https://avatars1.githubusercontent.com/u/5996147?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SimpleJian", "html_url": "https://github.com/SimpleJian", "followers_url": "https://api.github.com/users/SimpleJian/followers", "following_url": "https://api.github.com/users/SimpleJian/following{/other_user}", "gists_url": "https://api.github.com/users/SimpleJian/gists{/gist_id}", "starred_url": "https://api.github.com/users/SimpleJian/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SimpleJian/subscriptions", "organizations_url": "https://api.github.com/users/SimpleJian/orgs", "repos_url": "https://api.github.com/users/SimpleJian/repos", "events_url": "https://api.github.com/users/SimpleJian/events{/privacy}", "received_events_url": "https://api.github.com/users/SimpleJian/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": {"login": "rmlarsen", "id": 16907534, "node_id": "MDQ6VXNlcjE2OTA3NTM0", "avatar_url": "https://avatars2.githubusercontent.com/u/16907534?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rmlarsen", "html_url": "https://github.com/rmlarsen", "followers_url": "https://api.github.com/users/rmlarsen/followers", "following_url": "https://api.github.com/users/rmlarsen/following{/other_user}", "gists_url": "https://api.github.com/users/rmlarsen/gists{/gist_id}", "starred_url": "https://api.github.com/users/rmlarsen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rmlarsen/subscriptions", "organizations_url": "https://api.github.com/users/rmlarsen/orgs", "repos_url": "https://api.github.com/users/rmlarsen/repos", "events_url": "https://api.github.com/users/rmlarsen/events{/privacy}", "received_events_url": "https://api.github.com/users/rmlarsen/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "rmlarsen", "id": 16907534, "node_id": "MDQ6VXNlcjE2OTA3NTM0", "avatar_url": "https://avatars2.githubusercontent.com/u/16907534?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rmlarsen", "html_url": "https://github.com/rmlarsen", "followers_url": "https://api.github.com/users/rmlarsen/followers", "following_url": "https://api.github.com/users/rmlarsen/following{/other_user}", "gists_url": "https://api.github.com/users/rmlarsen/gists{/gist_id}", "starred_url": "https://api.github.com/users/rmlarsen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rmlarsen/subscriptions", "organizations_url": "https://api.github.com/users/rmlarsen/orgs", "repos_url": "https://api.github.com/users/rmlarsen/repos", "events_url": "https://api.github.com/users/rmlarsen/events{/privacy}", "received_events_url": "https://api.github.com/users/rmlarsen/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 4, "created_at": "2018-04-13T12:00:14Z", "updated_at": "2018-12-14T18:52:22Z", "closed_at": null, "author_association": "NONE", "body": "### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**: yes\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**: CentOS Linux release 7.4.1708\r\n- **TensorFlow installed from (source or binary)**: pip install tensorflow-gpu==1.4.0, pip install tensorflow-gpu==1.7.0\r\n- **TensorFlow version (use command below)**: 1.4 and 1.7\r\n- **Python version**:  2.7.5\r\n- **Bazel version (if compiling from source)**: N/A (not compiled from source)\r\n- **GCC/Compiler version (if compiling from source)**: N/A (not compiled from source)\r\n- **CUDA/cuDNN version**: CUDA8.0 + cuDNN6.0 for Tensorflow 1.4, CUDA9 + cuDNN7.0 for Tensorflow 1.7\r\n- **GPU model and memory**: GeForce GTX 1080 Ti, 11178MiB\r\n- **Exact command to reproduce**: python profile_crf.py\r\n\r\n### Describe the problem\r\nAfter upgrade TensorFlow from 1.4 to 1.7,  crf become 2x slower.\r\n\r\nWhen run in TF1.4, it cost about 19 seconds every 100 steps, but about 43 seconds every 100 steps in TF1.7, the source code are the same, see below.\r\n### Source code / logs\r\nthe source code are modified from \r\nhttps://github.com/tensorflow/tensorflow/tree/master/tensorflow/contrib/crf\r\n```\r\nimport numpy as np\r\nimport tensorflow as tf\r\nimport time\r\n\r\n# Data settings.\r\nnum_examples = 1000\r\nnum_words = 100\r\nnum_features = 1000\r\nnum_tags = 50\r\n\r\n# Random features.\r\nx = np.random.rand(num_examples, num_words, num_features).astype(np.float32)\r\n\r\n# Random tag indices representing the gold sequence.\r\ny = np.random.randint(num_tags, size=[num_examples, num_words]).astype(np.int32)\r\n\r\n# All sequences in this example have the same length, but they can be variable in a real model.\r\n# sequence_lengths = np.full(num_examples, num_words - 1, dtype=np.int32)\r\nsequence_lengths = np.full(num_examples, num_words, dtype=np.int32)\r\n\r\n# Train and evaluate the model.\r\nwith tf.Graph().as_default():\r\n  with tf.Session() as session:\r\n    # Add the data to the TensorFlow graph.\r\n    x_t = tf.constant(x)\r\n    y_t = tf.constant(y)\r\n    sequence_lengths_t = tf.constant(sequence_lengths)\r\n\r\n    # Compute unary scores from a linear layer.\r\n    weights = tf.get_variable(\"weights\", [num_features, num_tags])\r\n    matricized_x_t = tf.reshape(x_t, [-1, num_features])\r\n    matricized_unary_scores = tf.matmul(matricized_x_t, weights)\r\n    unary_scores = tf.reshape(matricized_unary_scores,\r\n                              [num_examples, num_words, num_tags])\r\n\r\n    # Compute the log-likelihood of the gold sequences and keep the transition\r\n    # params for inference at test time.\r\n    log_likelihood, transition_params = tf.contrib.crf.crf_log_likelihood(\r\n        unary_scores, y_t, sequence_lengths_t)\r\n\r\n    # Compute the viterbi sequence and score.\r\n    viterbi_sequence, viterbi_score = tf.contrib.crf.crf_decode(\r\n        unary_scores, transition_params, sequence_lengths_t)\r\n\r\n    # Add a training op to tune the parameters.\r\n    loss = tf.reduce_mean(-log_likelihood)\r\n    train_op = tf.train.GradientDescentOptimizer(0.01).minimize(loss)\r\n\r\n    session.run(tf.global_variables_initializer())\r\n\r\n    mask = (np.expand_dims(np.arange(num_words), axis=0) <\r\n            np.expand_dims(sequence_lengths, axis=1))\r\n    total_labels = np.sum(sequence_lengths)\r\n\r\n    # Train for a fixed number of iterations.\r\n    seconds = 0\r\n    for i in range(500):\r\n      start_time = time.time()\r\n      tf_viterbi_sequence, _ = session.run([viterbi_sequence, train_op])\r\n      seconds += time.time() - start_time\r\n      if i>0 and i % 100 == 0:\r\n        print('time elapsed: {}'.format(seconds))\r\n        seconds = 0\r\n        correct_labels = np.sum((y == tf_viterbi_sequence) * mask)\r\n        accuracy = 100.0 * correct_labels / float(total_labels)\r\n        print(\"Accuracy: %.2f%%\" % accuracy)\r\n```"}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/18480", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/18480/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/18480/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/18480/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/18480", "id": 313937585, "node_id": "MDU6SXNzdWUzMTM5Mzc1ODU=", "number": 18480, "title": "Remove Python dep on 'enum'", "user": {"login": "jart", "id": 49262, "node_id": "MDQ6VXNlcjQ5MjYy", "avatar_url": "https://avatars1.githubusercontent.com/u/49262?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jart", "html_url": "https://github.com/jart", "followers_url": "https://api.github.com/users/jart/followers", "following_url": "https://api.github.com/users/jart/following{/other_user}", "gists_url": "https://api.github.com/users/jart/gists{/gist_id}", "starred_url": "https://api.github.com/users/jart/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jart/subscriptions", "organizations_url": "https://api.github.com/users/jart/orgs", "repos_url": "https://api.github.com/users/jart/repos", "events_url": "https://api.github.com/users/jart/events{/privacy}", "received_events_url": "https://api.github.com/users/jart/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": {"login": "caisq", "id": 16824702, "node_id": "MDQ6VXNlcjE2ODI0NzAy", "avatar_url": "https://avatars2.githubusercontent.com/u/16824702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/caisq", "html_url": "https://github.com/caisq", "followers_url": "https://api.github.com/users/caisq/followers", "following_url": "https://api.github.com/users/caisq/following{/other_user}", "gists_url": "https://api.github.com/users/caisq/gists{/gist_id}", "starred_url": "https://api.github.com/users/caisq/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/caisq/subscriptions", "organizations_url": "https://api.github.com/users/caisq/orgs", "repos_url": "https://api.github.com/users/caisq/repos", "events_url": "https://api.github.com/users/caisq/events{/privacy}", "received_events_url": "https://api.github.com/users/caisq/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "caisq", "id": 16824702, "node_id": "MDQ6VXNlcjE2ODI0NzAy", "avatar_url": "https://avatars2.githubusercontent.com/u/16824702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/caisq", "html_url": "https://github.com/caisq", "followers_url": "https://api.github.com/users/caisq/followers", "following_url": "https://api.github.com/users/caisq/following{/other_user}", "gists_url": "https://api.github.com/users/caisq/gists{/gist_id}", "starred_url": "https://api.github.com/users/caisq/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/caisq/subscriptions", "organizations_url": "https://api.github.com/users/caisq/orgs", "repos_url": "https://api.github.com/users/caisq/repos", "events_url": "https://api.github.com/users/caisq/events{/privacy}", "received_events_url": "https://api.github.com/users/caisq/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 11, "created_at": "2018-04-13T01:15:47Z", "updated_at": "2019-12-13T10:09:35Z", "closed_at": null, "author_association": "CONTRIBUTOR", "body": "Python enum is only used by a couple files, and has caused a lot of pain. Maybe we shouldn't use it?\r\n\r\nPython enum is used by a couple files in TensorFlow. It's not portable. It was only quite recently backported to Python 2.7. For example, TensorFlow won't compile on Debian 8 without `sudo apt-get install python-enum34` however `sudo apt-get install python-enum` will break the build.\r\n\r\n- https://github.com/tensorflow/tensorflow/issues/12491\r\n- https://github.com/tensorflow/tensorflow/issues/15136"}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/18415", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/18415/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/18415/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/18415/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/18415", "id": 313285449, "node_id": "MDU6SXNzdWUzMTMyODU0NDk=", "number": 18415, "title": "A bug related to conv2d_transpose and tf.cond", "user": {"login": "fengyang0317", "id": 7965501, "node_id": "MDQ6VXNlcjc5NjU1MDE=", "avatar_url": "https://avatars3.githubusercontent.com/u/7965501?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fengyang0317", "html_url": "https://github.com/fengyang0317", "followers_url": "https://api.github.com/users/fengyang0317/followers", "following_url": "https://api.github.com/users/fengyang0317/following{/other_user}", "gists_url": "https://api.github.com/users/fengyang0317/gists{/gist_id}", "starred_url": "https://api.github.com/users/fengyang0317/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fengyang0317/subscriptions", "organizations_url": "https://api.github.com/users/fengyang0317/orgs", "repos_url": "https://api.github.com/users/fengyang0317/repos", "events_url": "https://api.github.com/users/fengyang0317/events{/privacy}", "received_events_url": "https://api.github.com/users/fengyang0317/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 404586594, "node_id": "MDU6TGFiZWw0MDQ1ODY1OTQ=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:awaiting%20tensorflower", "name": "stat:awaiting tensorflower", "color": "f4b400", "default": false, "description": ""}], "state": "open", "locked": false, "assignee": {"login": "skye", "id": 88808, "node_id": "MDQ6VXNlcjg4ODA4", "avatar_url": "https://avatars1.githubusercontent.com/u/88808?v=4", "gravatar_id": "", "url": "https://api.github.com/users/skye", "html_url": "https://github.com/skye", "followers_url": "https://api.github.com/users/skye/followers", "following_url": "https://api.github.com/users/skye/following{/other_user}", "gists_url": "https://api.github.com/users/skye/gists{/gist_id}", "starred_url": "https://api.github.com/users/skye/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/skye/subscriptions", "organizations_url": "https://api.github.com/users/skye/orgs", "repos_url": "https://api.github.com/users/skye/repos", "events_url": "https://api.github.com/users/skye/events{/privacy}", "received_events_url": "https://api.github.com/users/skye/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "skye", "id": 88808, "node_id": "MDQ6VXNlcjg4ODA4", "avatar_url": "https://avatars1.githubusercontent.com/u/88808?v=4", "gravatar_id": "", "url": "https://api.github.com/users/skye", "html_url": "https://github.com/skye", "followers_url": "https://api.github.com/users/skye/followers", "following_url": "https://api.github.com/users/skye/following{/other_user}", "gists_url": "https://api.github.com/users/skye/gists{/gist_id}", "starred_url": "https://api.github.com/users/skye/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/skye/subscriptions", "organizations_url": "https://api.github.com/users/skye/orgs", "repos_url": "https://api.github.com/users/skye/repos", "events_url": "https://api.github.com/users/skye/events{/privacy}", "received_events_url": "https://api.github.com/users/skye/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 2, "created_at": "2018-04-11T11:35:18Z", "updated_at": "2018-12-07T18:50:09Z", "closed_at": null, "author_association": "NONE", "body": "### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**: Yes\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**: Ubuntu 16.04\r\n- **TensorFlow installed from (source or binary)**: binary\r\n- **TensorFlow version (use command below)**: 1.7.0\r\n- **Python version**: 2.7\r\n- **Bazel version (if compiling from source)**:\r\n- **GCC/Compiler version (if compiling from source)**:\r\n- **CUDA/cuDNN version**: 7.0\r\n- **GPU model and memory**: GTX 980M / 4G\r\n- **Exact command to reproduce**: python the_following_code.py\r\n\r\n### Describe the problem\r\nI am trying to implement a model named progressive GAN. I met some very weird problems. My problems could be reproduced by the following code. I believe it is a bug of tensorflow because removing any trivial tf.cond or removing conv2d_transpose will make the code work.\r\n\r\n\r\n```\r\n  File \"/home/yfeng23/test/tf/cond_test1.py\", line 38, in <module>\r\n    net = upscale2d(net_out[0])                                                   # net.shape = [16, 16, 16, 512]\r\n  File \"/home/yfeng23/test/tf/cond_test1.py\", line 12, in upscale2d\r\n\r\nInvalidArgumentError (see above for traceback): Input to reshape is a tensor with 2097152 values, but the requested shape has 524288\r\n\t [[Node: Upscale2D_1/Reshape = Reshape[T=DT_FLOAT, Tshape=DT_INT32, _device=\"/job:localhost/replica:0/task:0/device:GPU:0\"](Upscale2D_1/Tile, Upscale2D_1/Reshape/shape)]]\r\n```\r\n\r\n### Source code / logs\r\n```\r\nimport tensorflow as tf\r\nimport tensorflow.contrib.slim as slim\r\n\r\n\r\ndef upscale2d(x, factor=2):\r\n  \"\"\"increase the resolution\"\"\"\r\n  with tf.variable_scope('Upscale2D'):\r\n    channels = x.shape[-1]\r\n    s = tf.shape(x)\r\n    x = tf.expand_dims(tf.expand_dims(x, axis=3), axis=2)\r\n    x = tf.tile(x, [1, 1, factor, 1, factor, 1])\r\n    x = tf.reshape(x, [s[0], s[1] * factor, s[2] * factor, channels])\r\n    return x\r\n\r\n\r\ndef to_rgb(x, lod, num_outputs):\r\n  \"\"\"generate image output\"\"\"\r\n  with tf.variable_scope('ToRGB_lod%d' % lod):\r\n    return slim.conv2d(x, num_outputs, 1, activation_fn=None)\r\n\r\n\r\nbatch_size = 16\r\nnum_outputs = 3\r\nnoise = tf.random_normal([batch_size, 128])\r\nwith slim.arg_scope([slim.conv2d, slim.conv2d_transpose],\r\n                    activation_fn=tf.nn.leaky_relu):\r\n  net = tf.expand_dims(tf.expand_dims(noise, 1), 1)\r\n  net = slim.conv2d_transpose(net, 512, kernel_size=4, padding='VALID')         # net.shape = [16, 4, 4, 512]\r\n  net0 = net\r\n  net_out = (net, tf.zeros([batch_size, 2, 2, 3]))                              # ([16, 4, 4, 512], [16, 2, 2, 3])\r\n\r\n  out = to_rgb(net_out[0], 1, num_outputs)                                      # out.shape = [16, 4, 4, 3]\r\n  net = upscale2d(net_out[0])                                                   # net.shape = [16, 8, 8, 512]\r\n  net_out = tf.cond(tf.less(0, 1), lambda: (net, out), lambda: net_out)         # ([16, 8, 8, 512], [16, 4, 4, 3])\r\n\r\n  with tf.control_dependencies([tf.assert_equal(tf.shape(net_out[0])[1], 8)]):\r\n    out = to_rgb(net_out[0], 2, num_outputs)                                    # out.shape = [16, 8, 8, 3]\r\n  net = upscale2d(net_out[0])                                                   # net.shape = [16, 16, 16, 512]\r\n  net = slim.conv2d(net, 512, 3, scope='conv1')\r\n  #net_out = tf.cond(tf.less(3, 4), lambda: net_out, lambda: (net, out))\r\n  net_out = tf.cond(tf.less(3, 1), lambda: (net, out), lambda: net_out)         # ([16, 8, 8, 512], [16, 4, 4, 3])\r\n\r\n  out = to_rgb(net_out[0], 3, num_outputs)                                      # out.shape = [16, 8, 8, 3]\r\n  up_out = upscale2d(net_out[1])                                                # out_up.shape = [16, 8, 8, 3]\r\n  net = tf.cond(tf.equal(0.0, 0.0), lambda: out, lambda: up_out + out)\r\n\r\nloss = tf.reduce_mean(net)\r\ngrad0 = tf.gradients(loss, net0)[0]\r\ngrad1 = tf.gradients(loss, noise)[0]\r\nwith tf.Session() as sess:\r\n  sess.run(tf.global_variables_initializer())\r\n  print(sess.run(net).shape)\r\n  print(sess.run(grad0).shape)\r\n  print(sess.run(grad1).shape)\r\n```\r\n"}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/18405", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/18405/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/18405/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/18405/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/18405", "id": 313119778, "node_id": "MDU6SXNzdWUzMTMxMTk3Nzg=", "number": 18405, "title": "Reopening #9294 error in RNN tutorial", "user": {"login": "numericlee", "id": 32748976, "node_id": "MDQ6VXNlcjMyNzQ4OTc2", "avatar_url": "https://avatars2.githubusercontent.com/u/32748976?v=4", "gravatar_id": "", "url": "https://api.github.com/users/numericlee", "html_url": "https://github.com/numericlee", "followers_url": "https://api.github.com/users/numericlee/followers", "following_url": "https://api.github.com/users/numericlee/following{/other_user}", "gists_url": "https://api.github.com/users/numericlee/gists{/gist_id}", "starred_url": "https://api.github.com/users/numericlee/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/numericlee/subscriptions", "organizations_url": "https://api.github.com/users/numericlee/orgs", "repos_url": "https://api.github.com/users/numericlee/repos", "events_url": "https://api.github.com/users/numericlee/events{/privacy}", "received_events_url": "https://api.github.com/users/numericlee/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": {"login": "MarkDaoust", "id": 1414837, "node_id": "MDQ6VXNlcjE0MTQ4Mzc=", "avatar_url": "https://avatars1.githubusercontent.com/u/1414837?v=4", "gravatar_id": "", "url": "https://api.github.com/users/MarkDaoust", "html_url": "https://github.com/MarkDaoust", "followers_url": "https://api.github.com/users/MarkDaoust/followers", "following_url": "https://api.github.com/users/MarkDaoust/following{/other_user}", "gists_url": "https://api.github.com/users/MarkDaoust/gists{/gist_id}", "starred_url": "https://api.github.com/users/MarkDaoust/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/MarkDaoust/subscriptions", "organizations_url": "https://api.github.com/users/MarkDaoust/orgs", "repos_url": "https://api.github.com/users/MarkDaoust/repos", "events_url": "https://api.github.com/users/MarkDaoust/events{/privacy}", "received_events_url": "https://api.github.com/users/MarkDaoust/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "MarkDaoust", "id": 1414837, "node_id": "MDQ6VXNlcjE0MTQ4Mzc=", "avatar_url": "https://avatars1.githubusercontent.com/u/1414837?v=4", "gravatar_id": "", "url": "https://api.github.com/users/MarkDaoust", "html_url": "https://github.com/MarkDaoust", "followers_url": "https://api.github.com/users/MarkDaoust/followers", "following_url": "https://api.github.com/users/MarkDaoust/following{/other_user}", "gists_url": "https://api.github.com/users/MarkDaoust/gists{/gist_id}", "starred_url": "https://api.github.com/users/MarkDaoust/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/MarkDaoust/subscriptions", "organizations_url": "https://api.github.com/users/MarkDaoust/orgs", "repos_url": "https://api.github.com/users/MarkDaoust/repos", "events_url": "https://api.github.com/users/MarkDaoust/events{/privacy}", "received_events_url": "https://api.github.com/users/MarkDaoust/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 2, "created_at": "2018-04-10T23:08:28Z", "updated_at": "2018-12-21T18:50:34Z", "closed_at": null, "author_association": "NONE", "body": "Thanks to @kevinashaw for pointing out [various](https://github.com/tensorflow/tensorflow/issues/9294) problems with the RNN tensorflow tutorial\r\n\r\nAlthough the issue was closed, as far as I can see @MarkDaoust @drpngx @ebrevdo @martinwicke \r\nthe tutorial code posted here and at TF site still has the same errors after nearly 12 months\r\n\r\nI did try making some of the modifications suggested in the thread, they don't appear to solve the issue\r\n\r\nHave I written custom code: NO\r\n\r\nOS Platform and Distribution: Windows 10; \r\nPython v. 3.5 \r\nTensorFlow installed from: Anaconda\r\nTensorFlow version 1.2.0\r\nGPU model and memory: CPU 16GB of RAM\r\nExact command to reproduce (see below)\r\n```\r\nXin =tf.random_normal((100,100))\r\n\r\nbatch_size_var  = tf.shape(Xin)[0]\r\nlstm = tf.nn.rnn_cell.LSTMCell(lstm_size)\r\nhidden_state = lstm_cells.zero_state(batch_size_var, tf.float32) \r\ncurrent_state = lstm_cells.zero_state(batch_size_var, tf.float32)\r\n```\r\n\r\nThere was a suggestion to use  dynamic rnn . It wasnt fully explained but using  dynamic rnn renders the reference to .LSTMCell  invalid\r\n\r\nIs there another RNN tutorial or a revised version anyone can recommend?\r\n\r\n\r\n\r\n"}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/18383", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/18383/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/18383/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/18383/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/18383", "id": 312970246, "node_id": "MDU6SXNzdWUzMTI5NzAyNDY=", "number": 18383, "title": "Feature Request: Slice replacement operation", "user": {"login": "javidcf", "id": 1098280, "node_id": "MDQ6VXNlcjEwOTgyODA=", "avatar_url": "https://avatars1.githubusercontent.com/u/1098280?v=4", "gravatar_id": "", "url": "https://api.github.com/users/javidcf", "html_url": "https://github.com/javidcf", "followers_url": "https://api.github.com/users/javidcf/followers", "following_url": "https://api.github.com/users/javidcf/following{/other_user}", "gists_url": "https://api.github.com/users/javidcf/gists{/gist_id}", "starred_url": "https://api.github.com/users/javidcf/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/javidcf/subscriptions", "organizations_url": "https://api.github.com/users/javidcf/orgs", "repos_url": "https://api.github.com/users/javidcf/repos", "events_url": "https://api.github.com/users/javidcf/events{/privacy}", "received_events_url": "https://api.github.com/users/javidcf/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 299643928, "node_id": "MDU6TGFiZWwyOTk2NDM5Mjg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:contributions%20welcome", "name": "stat:contributions welcome", "color": "f4b400", "default": false, "description": ""}, {"id": 473173272, "node_id": "MDU6TGFiZWw0NzMxNzMyNzI=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:feature", "name": "type:feature", "color": "159b2e", "default": false, "description": ""}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 23, "created_at": "2018-04-10T15:16:58Z", "updated_at": "2019-12-14T18:18:57Z", "closed_at": null, "author_association": "CONTRIBUTOR", "body": "### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**: No\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**: Windows 10\r\n- **TensorFlow installed from (source or binary)**: binary\r\n- **TensorFlow version (use command below)**: b'unknown' 1.4.0\r\n- **Python version**: 3.6.3 Anaconda\r\n- **Bazel version (if compiling from source)**: N/A\r\n- **GCC/Compiler version (if compiling from source)**: N/A\r\n- **CUDA/cuDNN version**: N/A\r\n- **GPU model and memory**: N/A\r\n- **Exact command to reproduce**: N/A\r\n\r\n### Describe the problem\r\n\r\nIn the last couple of weeks I have answered up to three questions in Stack Overflow ([this](https://stackoverflow.com/questions/49493444/tensorflow-set-block-within-2d-tensor-to-constant-value/49493702), [this](https://stackoverflow.com/questions/49487647/how-to-assign-a-value-to-a-tf-variable-in-tensorflow-without-using-tf-assign/49534185) and [this](https://stackoverflow.com/questions/49755316/best-way-to-mimic-pytorch-sliced-assignment-with-keras-tensorflow/49756271)) solving essentially the same problem, namely how to replace a slice in one tensor with the contents of (a slice of) another tensor. On the one hand, newer users try to solve it with a slice assignment to a variable, which is easy and intuitive but wrong. On the other hand, even for experience users it can be quite a hassle (my approaches are either to concatenate thing after thing or make comprehensive masks and use `tf.where`, both of them, I suspect, take more resources than the operation should require).\r\n\r\nI think everyone would benefit from a slice replacement operation that returns a tensor with a slice replaced with some values. I do not know about the technical challenges of this (e.g. to keep gradient propagation and so on), but syntactically there is the problem that one cannot use slicing syntax with functions. Like in `tf.slice`, a couple of `begin` and `size` tensors could be passed:\r\n\r\n    tf.replace_slice(my_tensor, [1, 2], [3, 4], new_values)\r\n\r\nBut, similarly to how `tf.Tensor` implements `__getitem__` for easy slicing, it would be neat to have a simplified syntax for this. Maybe (not necessarily) something like:\r\n\r\n    my_tensor = my_tensor.replace[1:4, 2:6].with_values(new_values) \r\n\r\n(I was going to say ` .with(new_values)`, but that's a keyword)\r\n\r\nIt could also be just:\r\n\r\n    my_tensor = my_tensor[1:4, 2:6].replace_with(new_values) \r\n\r\nWhich is more similar to how slice assignment works for variables, but that seems harder to implement consistently (the slicing should return not just a regular tensor, and the slicing operation would be created anyway even if it's not necessary).\r\n\r\n### Source code / logs\r\n\r\nN/A"}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/18360", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/18360/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/18360/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/18360/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/18360", "id": 312674992, "node_id": "MDU6SXNzdWUzMTI2NzQ5OTI=", "number": 18360, "title": "Include C and C++ APIs with binary distributions", "user": {"login": "peastman", "id": 4379786, "node_id": "MDQ6VXNlcjQzNzk3ODY=", "avatar_url": "https://avatars3.githubusercontent.com/u/4379786?v=4", "gravatar_id": "", "url": "https://api.github.com/users/peastman", "html_url": "https://github.com/peastman", "followers_url": "https://api.github.com/users/peastman/followers", "following_url": "https://api.github.com/users/peastman/following{/other_user}", "gists_url": "https://api.github.com/users/peastman/gists{/gist_id}", "starred_url": "https://api.github.com/users/peastman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/peastman/subscriptions", "organizations_url": "https://api.github.com/users/peastman/orgs", "repos_url": "https://api.github.com/users/peastman/repos", "events_url": "https://api.github.com/users/peastman/events{/privacy}", "received_events_url": "https://api.github.com/users/peastman/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 404586558, "node_id": "MDU6TGFiZWw0MDQ1ODY1NTg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:community%20support", "name": "stat:community support", "color": "f4b400", "default": false, "description": ""}, {"id": 473173272, "node_id": "MDU6TGFiZWw0NzMxNzMyNzI=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:feature", "name": "type:feature", "color": "159b2e", "default": false, "description": ""}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 13, "created_at": "2018-04-09T20:26:44Z", "updated_at": "2019-07-02T19:00:42Z", "closed_at": null, "author_association": "NONE", "body": "### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**: Yes\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**: Any\r\n- **TensorFlow installed from (source or binary)**: see below\r\n- **TensorFlow version (use command below)**: Any\r\n- **Python version**:  Any\r\n- **Bazel version (if compiling from source)**:\r\n- **GCC/Compiler version (if compiling from source)**:\r\n- **CUDA/cuDNN version**:\r\n- **GPU model and memory**:\r\n- **Exact command to reproduce**:\r\n\r\nWhen you install a precompiled Tensorflow binary with pip or conda, it doesn't include the C and C++ interfaces.  To use it from those languages, you need to compile Tensorflow for source and build a special version of it that includes the needed API (see #2412).  I suggest including them in the standard binaries.  This would have multiple benefits.\r\n\r\nFirst, it would make development in other languages much easier.  You could just `pip install tensorflow` and link against the library it installed.  Having to build a special version of Tensorflow from source adds an unnecessary barrier to getting started.\r\n\r\nSecond, it would eliminate a problem that so far I've been unable to resolve.  I want to create a C++ library that uses Tensorflow.  That library will be usable directly from C++, but I'll also use SWIG to create a Python wrapper for it.  For example, a user should be able to write Python code to build a Graph, then pass it directly to my library.\r\n\r\nThat won't work right now, because there are two separate versions of Tensorflow involved, one that Python is linked against and a different one that my library is linked against.  When the user is building a Graph in Python, they're working with one Tensorflow library.  But when they try to pass it to my library, they're suddenly switching to a completely different copy of Tensorflow, so it doesn't have access to memory allocated by the first copy.  I haven't found any solution to this problem."}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/18338", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/18338/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/18338/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/18338/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/18338", "id": 312367671, "node_id": "MDU6SXNzdWUzMTIzNjc2NzE=", "number": 18338, "title": "SeparableConv2D from tf.keras.layers and tf.layers gives different results", "user": {"login": "hsm207", "id": 2398765, "node_id": "MDQ6VXNlcjIzOTg3NjU=", "avatar_url": "https://avatars0.githubusercontent.com/u/2398765?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hsm207", "html_url": "https://github.com/hsm207", "followers_url": "https://api.github.com/users/hsm207/followers", "following_url": "https://api.github.com/users/hsm207/following{/other_user}", "gists_url": "https://api.github.com/users/hsm207/gists{/gist_id}", "starred_url": "https://api.github.com/users/hsm207/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hsm207/subscriptions", "organizations_url": "https://api.github.com/users/hsm207/orgs", "repos_url": "https://api.github.com/users/hsm207/repos", "events_url": "https://api.github.com/users/hsm207/events{/privacy}", "received_events_url": "https://api.github.com/users/hsm207/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": {"login": "shivaniag", "id": 16565716, "node_id": "MDQ6VXNlcjE2NTY1NzE2", "avatar_url": "https://avatars1.githubusercontent.com/u/16565716?v=4", "gravatar_id": "", "url": "https://api.github.com/users/shivaniag", "html_url": "https://github.com/shivaniag", "followers_url": "https://api.github.com/users/shivaniag/followers", "following_url": "https://api.github.com/users/shivaniag/following{/other_user}", "gists_url": "https://api.github.com/users/shivaniag/gists{/gist_id}", "starred_url": "https://api.github.com/users/shivaniag/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/shivaniag/subscriptions", "organizations_url": "https://api.github.com/users/shivaniag/orgs", "repos_url": "https://api.github.com/users/shivaniag/repos", "events_url": "https://api.github.com/users/shivaniag/events{/privacy}", "received_events_url": "https://api.github.com/users/shivaniag/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "shivaniag", "id": 16565716, "node_id": "MDQ6VXNlcjE2NTY1NzE2", "avatar_url": "https://avatars1.githubusercontent.com/u/16565716?v=4", "gravatar_id": "", "url": "https://api.github.com/users/shivaniag", "html_url": "https://github.com/shivaniag", "followers_url": "https://api.github.com/users/shivaniag/followers", "following_url": "https://api.github.com/users/shivaniag/following{/other_user}", "gists_url": "https://api.github.com/users/shivaniag/gists{/gist_id}", "starred_url": "https://api.github.com/users/shivaniag/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/shivaniag/subscriptions", "organizations_url": "https://api.github.com/users/shivaniag/orgs", "repos_url": "https://api.github.com/users/shivaniag/repos", "events_url": "https://api.github.com/users/shivaniag/events{/privacy}", "received_events_url": "https://api.github.com/users/shivaniag/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 2, "created_at": "2018-04-09T02:07:20Z", "updated_at": "2018-12-07T18:50:00Z", "closed_at": null, "author_association": "CONTRIBUTOR", "body": "Please go to Stack Overflow for help and support:\r\n\r\nhttps://stackoverflow.com/questions/tagged/tensorflow\r\n\r\nIf you open a GitHub issue, here is our policy:\r\n\r\n1. It must be a bug, a feature request, or a significant problem with documentation (for small docs fixes please send a PR instead).\r\n2. The form below must be filled out.\r\n3. It shouldn't be a TensorBoard issue. Those go [here](https://github.com/tensorflow/tensorboard/issues).\r\n\r\n**Here's why we have that policy**: TensorFlow developers respond to issues. We want to focus on work that benefits the whole community, e.g., fixing bugs and adding features. Support only helps individuals. GitHub also notifies thousands of people when issues are filed. We want them to see you communicating an interesting problem, rather than being redirected to Stack Overflow.\r\n\r\n------------------------\r\n\r\n### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**: No\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**: Windows 10\r\n- **TensorFlow installed from (source or binary)**: binary\r\n- **TensorFlow version (use command below)**: 1.7.0\r\n- **Python version**: 3.6.5\r\n- **Bazel version (if compiling from source)**: NA\r\n- **GCC/Compiler version (if compiling from source)**: NA\r\n- **CUDA/cuDNN version**: NA\r\n- **GPU model and memory**: NA\r\n- **Exact command to reproduce**: See source code\r\n\r\nYou can collect some of this information using our environment capture script:\r\n\r\nhttps://github.com/tensorflow/tensorflow/tree/master/tools/tf_env_collect.sh\r\n\r\nYou can obtain the TensorFlow version with\r\n\r\npython -c \"import tensorflow as tf; print(tf.GIT_VERSION, tf.VERSION)\"\r\n\r\n### Describe the problem\r\nDescribe the problem clearly here. Be sure to convey here why it's a bug in TensorFlow or a feature request.\r\n\r\nThe shape of the weight matrices of a SeparableConv2D using tf.keras.layers and tf.layers is different even when using the same arguments. It looks like the SeparableConv2D class from tf.keras.layers is ignoring the `depth_multiplier` argument.\r\n\r\n### Source code / logs\r\nInclude any logs or source code that would be helpful to diagnose the problem. If including tracebacks, please include the full traceback. Large logs and files should be attached. Try to provide a reproducible test case that is the bare minimum necessary to generate the problem.\r\n\r\n```\r\nimport tensorflow as tf\r\n\r\nsess = tf.InteractiveSession()\r\n\r\nsep_conv1 = tf.keras.layers.SeparableConv2D(filters=2, kernel_size=2, strides=1, padding='same', depth_multiplier=5)\r\nsep_conv2 = tf.layers.SeparableConv2D(filters=2, kernel_size=2, strides=1, padding='same', depth_multiplier=5)\r\n\r\nx = tf.random_uniform((1, 4, 4, 3), minval=1, maxval=10, dtype=tf.int32)\r\nx = tf.cast(x, tf.float32)\r\n\r\ny1 = sep_conv1(x)\r\ny2 = sep_conv2(x)\r\n\r\ninit = tf.global_variables_initializer()\r\nsess.run(init)\r\nsess.run([y1, y2])\r\n\r\n# the shape of the depthwise_kernel is (2, 2, 3, 1) and the shape of the pointwise_kernel is (1, 1, 3, 2)\r\nfor w in sep_conv1.variables:\r\n    print(w)\r\n\r\n# the shape of the depthwise_kernel is (2, 2, 3, 5) and the shape of the pointwise_kernel is (1, 1, 15, 2)\r\nfor w in sep_conv2.variables:\r\n    print(w)\r\n```\r\n"}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/18323", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/18323/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/18323/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/18323/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/18323", "id": 312287659, "node_id": "MDU6SXNzdWUzMTIyODc2NTk=", "number": 18323, "title": "The LSTM does not generate reproducible results, but GRU does", "user": {"login": "VanitarNordic", "id": 18719591, "node_id": "MDQ6VXNlcjE4NzE5NTkx", "avatar_url": "https://avatars0.githubusercontent.com/u/18719591?v=4", "gravatar_id": "", "url": "https://api.github.com/users/VanitarNordic", "html_url": "https://github.com/VanitarNordic", "followers_url": "https://api.github.com/users/VanitarNordic/followers", "following_url": "https://api.github.com/users/VanitarNordic/following{/other_user}", "gists_url": "https://api.github.com/users/VanitarNordic/gists{/gist_id}", "starred_url": "https://api.github.com/users/VanitarNordic/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/VanitarNordic/subscriptions", "organizations_url": "https://api.github.com/users/VanitarNordic/orgs", "repos_url": "https://api.github.com/users/VanitarNordic/repos", "events_url": "https://api.github.com/users/VanitarNordic/events{/privacy}", "received_events_url": "https://api.github.com/users/VanitarNordic/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": {"login": "fchollet", "id": 710255, "node_id": "MDQ6VXNlcjcxMDI1NQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/710255?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fchollet", "html_url": "https://github.com/fchollet", "followers_url": "https://api.github.com/users/fchollet/followers", "following_url": "https://api.github.com/users/fchollet/following{/other_user}", "gists_url": "https://api.github.com/users/fchollet/gists{/gist_id}", "starred_url": "https://api.github.com/users/fchollet/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fchollet/subscriptions", "organizations_url": "https://api.github.com/users/fchollet/orgs", "repos_url": "https://api.github.com/users/fchollet/repos", "events_url": "https://api.github.com/users/fchollet/events{/privacy}", "received_events_url": "https://api.github.com/users/fchollet/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "fchollet", "id": 710255, "node_id": "MDQ6VXNlcjcxMDI1NQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/710255?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fchollet", "html_url": "https://github.com/fchollet", "followers_url": "https://api.github.com/users/fchollet/followers", "following_url": "https://api.github.com/users/fchollet/following{/other_user}", "gists_url": "https://api.github.com/users/fchollet/gists{/gist_id}", "starred_url": "https://api.github.com/users/fchollet/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fchollet/subscriptions", "organizations_url": "https://api.github.com/users/fchollet/orgs", "repos_url": "https://api.github.com/users/fchollet/repos", "events_url": "https://api.github.com/users/fchollet/events{/privacy}", "received_events_url": "https://api.github.com/users/fchollet/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 32, "created_at": "2018-04-08T09:03:37Z", "updated_at": "2018-12-14T18:52:18Z", "closed_at": null, "author_association": "NONE", "body": "I can not get reproducible results by just using the LSTM, but GRU is Okay.\r\n\r\nLet me explain what happens.\r\n\r\nif I train an identical LSTM, 10 times in a loop, for the first 6 run it handles MSE equal to value `a` and for the rest 4 run it handles MSE value `b`. weird isn't? \r\nJust value `a` OR `b`. it means an identical LSTM can handle two MSEs by random and just two MSE values.\r\n\r\nand if I just replace the LSTM with GRU, all 10 runs handle identical MSEs.\r\n\r\nI use Tensorflow 1.7 and Keras 2.1.5, I run on the CPU."}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/18311", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/18311/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/18311/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/18311/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/18311", "id": 312214611, "node_id": "MDU6SXNzdWUzMTIyMTQ2MTE=", "number": 18311, "title": "[Feature request] unsquashing unsorted_segment_x", "user": {"login": "roya0045", "id": 12854129, "node_id": "MDQ6VXNlcjEyODU0MTI5", "avatar_url": "https://avatars1.githubusercontent.com/u/12854129?v=4", "gravatar_id": "", "url": "https://api.github.com/users/roya0045", "html_url": "https://github.com/roya0045", "followers_url": "https://api.github.com/users/roya0045/followers", "following_url": "https://api.github.com/users/roya0045/following{/other_user}", "gists_url": "https://api.github.com/users/roya0045/gists{/gist_id}", "starred_url": "https://api.github.com/users/roya0045/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/roya0045/subscriptions", "organizations_url": "https://api.github.com/users/roya0045/orgs", "repos_url": "https://api.github.com/users/roya0045/repos", "events_url": "https://api.github.com/users/roya0045/events{/privacy}", "received_events_url": "https://api.github.com/users/roya0045/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": {"login": "rmlarsen", "id": 16907534, "node_id": "MDQ6VXNlcjE2OTA3NTM0", "avatar_url": "https://avatars2.githubusercontent.com/u/16907534?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rmlarsen", "html_url": "https://github.com/rmlarsen", "followers_url": "https://api.github.com/users/rmlarsen/followers", "following_url": "https://api.github.com/users/rmlarsen/following{/other_user}", "gists_url": "https://api.github.com/users/rmlarsen/gists{/gist_id}", "starred_url": "https://api.github.com/users/rmlarsen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rmlarsen/subscriptions", "organizations_url": "https://api.github.com/users/rmlarsen/orgs", "repos_url": "https://api.github.com/users/rmlarsen/repos", "events_url": "https://api.github.com/users/rmlarsen/events{/privacy}", "received_events_url": "https://api.github.com/users/rmlarsen/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "rmlarsen", "id": 16907534, "node_id": "MDQ6VXNlcjE2OTA3NTM0", "avatar_url": "https://avatars2.githubusercontent.com/u/16907534?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rmlarsen", "html_url": "https://github.com/rmlarsen", "followers_url": "https://api.github.com/users/rmlarsen/followers", "following_url": "https://api.github.com/users/rmlarsen/following{/other_user}", "gists_url": "https://api.github.com/users/rmlarsen/gists{/gist_id}", "starred_url": "https://api.github.com/users/rmlarsen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rmlarsen/subscriptions", "organizations_url": "https://api.github.com/users/rmlarsen/orgs", "repos_url": "https://api.github.com/users/rmlarsen/repos", "events_url": "https://api.github.com/users/rmlarsen/events{/privacy}", "received_events_url": "https://api.github.com/users/rmlarsen/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 7, "created_at": "2018-04-07T15:06:11Z", "updated_at": "2018-12-14T18:52:13Z", "closed_at": null, "author_association": "NONE", "body": "Have I written custom code? No\r\nOS Platform and Distribution? Win10\r\nTensorFlow installed from? pip\r\nTensorFlow version? 1.7\r\nBazel version? N/A\r\nCUDA/cuDNN version? N/A\r\nGPU model and memory? N/A\r\nExact command to reproduce: unsorted_segment_sum\r\n\r\n### Describe the problem\r\nLet's say you have 3 sequences of 12 values (shape (3,12)) with 5 segments and you have an input of shape (None,12,3) transposed to (3,12,None)\r\nusing any function with unsorted_segement_x the output will be (5,None).\r\n\r\nWould it be possible to have a function that does the same but still keep the first dimention.\r\nSomething equivalent to:\r\n```python\r\ninput.shape==(None,12,3)\r\nsegment.shape==(3,12)\r\n\r\noutputs=[]\r\nfor ix, val in enumerate(tf.unstack(input)):\r\n    ouputs.append(tf.unsorted_segment_sum(val,sequence[ix],5)\r\noutput=tf.stack(outputs)\r\noutput.shape==(3,5,None)\r\n```\r\nThe use of such a thing would be to iterate over a weighted input and without having to loop over the data or using reshape. I think this should be somewhat straightforward to implement; not concatenate together all the sequences for the superior dimensions and use \"keep_dims\" similar to reduce_sum to trigger that behaviour.\r\n\r\n\r\n\r\n"}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/18297", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/18297/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/18297/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/18297/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/18297", "id": 312076776, "node_id": "MDU6SXNzdWUzMTIwNzY3NzY=", "number": 18297, "title": "Tensorflow-gpu performance drop", "user": {"login": "TwoRice", "id": 9116671, "node_id": "MDQ6VXNlcjkxMTY2NzE=", "avatar_url": "https://avatars2.githubusercontent.com/u/9116671?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TwoRice", "html_url": "https://github.com/TwoRice", "followers_url": "https://api.github.com/users/TwoRice/followers", "following_url": "https://api.github.com/users/TwoRice/following{/other_user}", "gists_url": "https://api.github.com/users/TwoRice/gists{/gist_id}", "starred_url": "https://api.github.com/users/TwoRice/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TwoRice/subscriptions", "organizations_url": "https://api.github.com/users/TwoRice/orgs", "repos_url": "https://api.github.com/users/TwoRice/repos", "events_url": "https://api.github.com/users/TwoRice/events{/privacy}", "received_events_url": "https://api.github.com/users/TwoRice/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": {"login": "tatianashp", "id": 986732, "node_id": "MDQ6VXNlcjk4NjczMg==", "avatar_url": "https://avatars2.githubusercontent.com/u/986732?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tatianashp", "html_url": "https://github.com/tatianashp", "followers_url": "https://api.github.com/users/tatianashp/followers", "following_url": "https://api.github.com/users/tatianashp/following{/other_user}", "gists_url": "https://api.github.com/users/tatianashp/gists{/gist_id}", "starred_url": "https://api.github.com/users/tatianashp/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tatianashp/subscriptions", "organizations_url": "https://api.github.com/users/tatianashp/orgs", "repos_url": "https://api.github.com/users/tatianashp/repos", "events_url": "https://api.github.com/users/tatianashp/events{/privacy}", "received_events_url": "https://api.github.com/users/tatianashp/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "tatianashp", "id": 986732, "node_id": "MDQ6VXNlcjk4NjczMg==", "avatar_url": "https://avatars2.githubusercontent.com/u/986732?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tatianashp", "html_url": "https://github.com/tatianashp", "followers_url": "https://api.github.com/users/tatianashp/followers", "following_url": "https://api.github.com/users/tatianashp/following{/other_user}", "gists_url": "https://api.github.com/users/tatianashp/gists{/gist_id}", "starred_url": "https://api.github.com/users/tatianashp/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tatianashp/subscriptions", "organizations_url": "https://api.github.com/users/tatianashp/orgs", "repos_url": "https://api.github.com/users/tatianashp/repos", "events_url": "https://api.github.com/users/tatianashp/events{/privacy}", "received_events_url": "https://api.github.com/users/tatianashp/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 11, "created_at": "2018-04-06T18:40:22Z", "updated_at": "2018-12-14T18:52:04Z", "closed_at": null, "author_association": "NONE", "body": "### System information\r\n- **Have I written custom code**: No\r\n- **OS Platform and Distribution**: Windows 10 64-bit \r\n- **TensorFlow installed from**: binary\r\n- **TensorFlow version**: 1.6.0\r\n- **Python version**: 3.6.3\r\n- **CUDA/cuDNN version**: 9.0\r\n- **GPU model and memory**: GeForce GTX 780, 3Gb\r\n\r\nUsing Keras in Python with tensorflow-gpu backend. Worked fine for weeks until a few days ago, when I have suffered a huge performance drop.\r\n\r\nWhen Tensorflow is initialising, it all appears to work correctly and finds my GPU as normal. Output:\r\n\r\n    2018-04-05 02:08:32.791893: I C:\\tf_jenkins\\workspace\\rel-win\\M\\windows-gpu\\PY\\36\\tensorflow\\core\\common_runtime\\gpu\\gpu_device.cc:1212] Found device 0 with properties: \r\n    name: GeForce GTX 780 major: 3 minor: 5 memoryClockRate(GHz): 1.0195\r\n    pciBusID: 0000:01:00.0\r\n    totalMemory: 3.00GiB freeMemory: 2.46GiB\r\n    2018-04-05 02:08:32.792360: I C:\\tf_jenkins\\workspace\\rel-win\\M\\windows-gpu\\PY\\36\\tensorflow\\core\\common_runtime\\gpu\\gpu_device.cc:1312] Adding visible gpu devices: 0\r\n    2018-04-05 02:08:33.132555: I C:\\tf_jenkins\\workspace\\rel-win\\M\\windows-gpu\\PY\\36\\tensorflow\\core\\common_runtime\\gpu\\gpu_device.cc:993] Creating TensorFlow device (/job:localhost/replica:0/task:0/device:GPU:0 with 2187 MB memory) -> physical GPU (device: 0, name: GeForce GTX 780, pci bus id: 0000:01:00.0, compute capability: 3.5)\r\n\r\nBut whereas before with exactly the same model on the same data, each epoch took about 2-3 seconds, they now take ~17 seconds.\r\n\r\nI had a look in Task Manager, and my IDE shows to be using GPU Engine - \"GPU 0 - Copy\". Also at the beginning of each epoch, the GPU will go under ~70% load for about a second, but then the load switches over to my CPU and Memory for the remaining 15 seconds or so and the GPU goes back down to its idle load around 2%."}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/18280", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/18280/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/18280/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/18280/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/18280", "id": 311789716, "node_id": "MDU6SXNzdWUzMTE3ODk3MTY=", "number": 18280, "title": "[feature] js_func (for javascript) equivalent of py_func", "user": {"login": "cancan101", "id": 51059, "node_id": "MDQ6VXNlcjUxMDU5", "avatar_url": "https://avatars1.githubusercontent.com/u/51059?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cancan101", "html_url": "https://github.com/cancan101", "followers_url": "https://api.github.com/users/cancan101/followers", "following_url": "https://api.github.com/users/cancan101/following{/other_user}", "gists_url": "https://api.github.com/users/cancan101/gists{/gist_id}", "starred_url": "https://api.github.com/users/cancan101/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cancan101/subscriptions", "organizations_url": "https://api.github.com/users/cancan101/orgs", "repos_url": "https://api.github.com/users/cancan101/repos", "events_url": "https://api.github.com/users/cancan101/events{/privacy}", "received_events_url": "https://api.github.com/users/cancan101/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 473173272, "node_id": "MDU6TGFiZWw0NzMxNzMyNzI=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:feature", "name": "type:feature", "color": "159b2e", "default": false, "description": ""}], "state": "open", "locked": false, "assignee": {"login": "andrewharp", "id": 3376817, "node_id": "MDQ6VXNlcjMzNzY4MTc=", "avatar_url": "https://avatars1.githubusercontent.com/u/3376817?v=4", "gravatar_id": "", "url": "https://api.github.com/users/andrewharp", "html_url": "https://github.com/andrewharp", "followers_url": "https://api.github.com/users/andrewharp/followers", "following_url": "https://api.github.com/users/andrewharp/following{/other_user}", "gists_url": "https://api.github.com/users/andrewharp/gists{/gist_id}", "starred_url": "https://api.github.com/users/andrewharp/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/andrewharp/subscriptions", "organizations_url": "https://api.github.com/users/andrewharp/orgs", "repos_url": "https://api.github.com/users/andrewharp/repos", "events_url": "https://api.github.com/users/andrewharp/events{/privacy}", "received_events_url": "https://api.github.com/users/andrewharp/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "andrewharp", "id": 3376817, "node_id": "MDQ6VXNlcjMzNzY4MTc=", "avatar_url": "https://avatars1.githubusercontent.com/u/3376817?v=4", "gravatar_id": "", "url": "https://api.github.com/users/andrewharp", "html_url": "https://github.com/andrewharp", "followers_url": "https://api.github.com/users/andrewharp/followers", "following_url": "https://api.github.com/users/andrewharp/following{/other_user}", "gists_url": "https://api.github.com/users/andrewharp/gists{/gist_id}", "starred_url": "https://api.github.com/users/andrewharp/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/andrewharp/subscriptions", "organizations_url": "https://api.github.com/users/andrewharp/orgs", "repos_url": "https://api.github.com/users/andrewharp/repos", "events_url": "https://api.github.com/users/andrewharp/events{/privacy}", "received_events_url": "https://api.github.com/users/andrewharp/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 5, "created_at": "2018-04-05T22:23:45Z", "updated_at": "2018-12-14T18:52:00Z", "closed_at": null, "author_association": "CONTRIBUTOR", "body": "### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**:\r\nn/a\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**:\r\niOS, Android\r\n- **TensorFlow installed from (source or binary)**:\r\nn/a\r\n- **TensorFlow version (use command below)**:\r\nn/a\r\n- **Python version**: \r\nn/a\r\n- **Bazel version (if compiling from source)**:\r\nn/a\r\n- **GCC/Compiler version (if compiling from source)**:\r\nn/a\r\n- **CUDA/cuDNN version**:\r\nn/a\r\n- **GPU model and memory**:\r\nn/a\r\n- **Exact command to reproduce**:\r\nn/a\r\n\r\n### Describe the problem\r\nI suggest adding a `js_func` that allows defining nodes in javascript. This would be similar to the existing `py_func`. There are many systems (ie iOS and Android) that have JS runtimes but do not have python runtimes."}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/18257", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/18257/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/18257/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/18257/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/18257", "id": 311575765, "node_id": "MDU6SXNzdWUzMTE1NzU3NjU=", "number": 18257, "title": "tf.while example is not working in eager mode", "user": {"login": "arogozhnikov", "id": 6318811, "node_id": "MDQ6VXNlcjYzMTg4MTE=", "avatar_url": "https://avatars3.githubusercontent.com/u/6318811?v=4", "gravatar_id": "", "url": "https://api.github.com/users/arogozhnikov", "html_url": "https://github.com/arogozhnikov", "followers_url": "https://api.github.com/users/arogozhnikov/followers", "following_url": "https://api.github.com/users/arogozhnikov/following{/other_user}", "gists_url": "https://api.github.com/users/arogozhnikov/gists{/gist_id}", "starred_url": "https://api.github.com/users/arogozhnikov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/arogozhnikov/subscriptions", "organizations_url": "https://api.github.com/users/arogozhnikov/orgs", "repos_url": "https://api.github.com/users/arogozhnikov/repos", "events_url": "https://api.github.com/users/arogozhnikov/events{/privacy}", "received_events_url": "https://api.github.com/users/arogozhnikov/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": {"login": "saxenasaurabh", "id": 3967488, "node_id": "MDQ6VXNlcjM5Njc0ODg=", "avatar_url": "https://avatars0.githubusercontent.com/u/3967488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/saxenasaurabh", "html_url": "https://github.com/saxenasaurabh", "followers_url": "https://api.github.com/users/saxenasaurabh/followers", "following_url": "https://api.github.com/users/saxenasaurabh/following{/other_user}", "gists_url": "https://api.github.com/users/saxenasaurabh/gists{/gist_id}", "starred_url": "https://api.github.com/users/saxenasaurabh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/saxenasaurabh/subscriptions", "organizations_url": "https://api.github.com/users/saxenasaurabh/orgs", "repos_url": "https://api.github.com/users/saxenasaurabh/repos", "events_url": "https://api.github.com/users/saxenasaurabh/events{/privacy}", "received_events_url": "https://api.github.com/users/saxenasaurabh/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "saxenasaurabh", "id": 3967488, "node_id": "MDQ6VXNlcjM5Njc0ODg=", "avatar_url": "https://avatars0.githubusercontent.com/u/3967488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/saxenasaurabh", "html_url": "https://github.com/saxenasaurabh", "followers_url": "https://api.github.com/users/saxenasaurabh/followers", "following_url": "https://api.github.com/users/saxenasaurabh/following{/other_user}", "gists_url": "https://api.github.com/users/saxenasaurabh/gists{/gist_id}", "starred_url": "https://api.github.com/users/saxenasaurabh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/saxenasaurabh/subscriptions", "organizations_url": "https://api.github.com/users/saxenasaurabh/orgs", "repos_url": "https://api.github.com/users/saxenasaurabh/repos", "events_url": "https://api.github.com/users/saxenasaurabh/events{/privacy}", "received_events_url": "https://api.github.com/users/saxenasaurabh/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 4, "created_at": "2018-04-05T11:39:04Z", "updated_at": "2020-02-12T07:21:18Z", "closed_at": null, "author_association": "NONE", "body": "\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**: yes, see below\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**: Ubuntu 16.04\r\n- **TensorFlow installed from (source or binary)**: pip\r\n- **TensorFlow version (use command below)**: 1.7, release\r\n- **Python version**: 3.6\r\n- **Bazel version (if compiling from source)**: NA\r\n- **GCC/Compiler version (if compiling from source)**: NA\r\n- **CUDA/cuDNN version**: 9.0 / 7.0\r\n- **GPU model and memory**:  GTX TITAN, 6GB\r\n- **Exact command to reproduce**: see below\r\n\r\n### Describe the problem\r\n\r\n`tf.while` example is not working in eager mode\r\n\r\n### Source code / logs\r\n\r\nHere is the code \r\n```python\r\nimport tensorflow as tf\r\ntf.enable_eager_execution() # the only line added to the example\r\n\r\ni = tf.constant(0)\r\nc = lambda i: tf.less(i, 10)\r\nb = lambda i: tf.add(i, 1)\r\nr = tf.while_loop(c, b, [i])\r\n```\r\n\r\nresult:\r\nTypeError: Cannot iterate over a scalar tensor.\r\n\r\n### Reason\r\n\r\n```python\r\nb = lambda i: tf.add(i, 1)       # original\r\nb = lambda i: (tf.add(i, 1), )   # fixed, working \r\n```\r\n\r\n- Body code (`b`) returns a single scalar, which code later tries to unpack.\r\n- Eager code doesn't support auto-wrapping single item to tuple\r\n\r\nPossible solutions:\r\n- require body function to always return tuple\r\n- always check if body output is a single variable"}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/18254", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/18254/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/18254/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/18254/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/18254", "id": 311542223, "node_id": "MDU6SXNzdWUzMTE1NDIyMjM=", "number": 18254, "title": "can tensorflow/compiler/aot/libruntime.so be renamed?", "user": {"login": "VinInn", "id": 4143702, "node_id": "MDQ6VXNlcjQxNDM3MDI=", "avatar_url": "https://avatars2.githubusercontent.com/u/4143702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/VinInn", "html_url": "https://github.com/VinInn", "followers_url": "https://api.github.com/users/VinInn/followers", "following_url": "https://api.github.com/users/VinInn/following{/other_user}", "gists_url": "https://api.github.com/users/VinInn/gists{/gist_id}", "starred_url": "https://api.github.com/users/VinInn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/VinInn/subscriptions", "organizations_url": "https://api.github.com/users/VinInn/orgs", "repos_url": "https://api.github.com/users/VinInn/repos", "events_url": "https://api.github.com/users/VinInn/events{/privacy}", "received_events_url": "https://api.github.com/users/VinInn/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 473173272, "node_id": "MDU6TGFiZWw0NzMxNzMyNzI=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:feature", "name": "type:feature", "color": "159b2e", "default": false, "description": ""}], "state": "open", "locked": false, "assignee": {"login": "tatatodd", "id": 5453737, "node_id": "MDQ6VXNlcjU0NTM3Mzc=", "avatar_url": "https://avatars3.githubusercontent.com/u/5453737?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tatatodd", "html_url": "https://github.com/tatatodd", "followers_url": "https://api.github.com/users/tatatodd/followers", "following_url": "https://api.github.com/users/tatatodd/following{/other_user}", "gists_url": "https://api.github.com/users/tatatodd/gists{/gist_id}", "starred_url": "https://api.github.com/users/tatatodd/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tatatodd/subscriptions", "organizations_url": "https://api.github.com/users/tatatodd/orgs", "repos_url": "https://api.github.com/users/tatatodd/repos", "events_url": "https://api.github.com/users/tatatodd/events{/privacy}", "received_events_url": "https://api.github.com/users/tatatodd/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "tatatodd", "id": 5453737, "node_id": "MDQ6VXNlcjU0NTM3Mzc=", "avatar_url": "https://avatars3.githubusercontent.com/u/5453737?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tatatodd", "html_url": "https://github.com/tatatodd", "followers_url": "https://api.github.com/users/tatatodd/followers", "following_url": "https://api.github.com/users/tatatodd/following{/other_user}", "gists_url": "https://api.github.com/users/tatatodd/gists{/gist_id}", "starred_url": "https://api.github.com/users/tatatodd/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tatatodd/subscriptions", "organizations_url": "https://api.github.com/users/tatatodd/orgs", "repos_url": "https://api.github.com/users/tatatodd/repos", "events_url": "https://api.github.com/users/tatatodd/events{/privacy}", "received_events_url": "https://api.github.com/users/tatatodd/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 2, "created_at": "2018-04-05T09:47:20Z", "updated_at": "2018-12-20T18:46:29Z", "closed_at": null, "author_association": "NONE", "body": "### Describe the problem\r\nlinking -lruntime is a bit too generic (and prone to conflicts) for a large project\r\n\r\nfor instance -lxla_compiled_cpu_function\r\nfor\r\n/tensorflow/compiler/tf2xla/libxla_compiled_cpu_function.so\r\nis already more acceptable\r\n\r\nIn general would be useful for any library required to be linked in user applications to have a more descriptive name that associate it to tensorflow"}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/18243", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/18243/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/18243/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/18243/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/18243", "id": 311349846, "node_id": "MDU6SXNzdWUzMTEzNDk4NDY=", "number": 18243, "title": "TensorFlow verbose logging is too verbose even at level 1", "user": {"login": "samikama", "id": 10539540, "node_id": "MDQ6VXNlcjEwNTM5NTQw", "avatar_url": "https://avatars0.githubusercontent.com/u/10539540?v=4", "gravatar_id": "", "url": "https://api.github.com/users/samikama", "html_url": "https://github.com/samikama", "followers_url": "https://api.github.com/users/samikama/followers", "following_url": "https://api.github.com/users/samikama/following{/other_user}", "gists_url": "https://api.github.com/users/samikama/gists{/gist_id}", "starred_url": "https://api.github.com/users/samikama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/samikama/subscriptions", "organizations_url": "https://api.github.com/users/samikama/orgs", "repos_url": "https://api.github.com/users/samikama/repos", "events_url": "https://api.github.com/users/samikama/events{/privacy}", "received_events_url": "https://api.github.com/users/samikama/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 299643928, "node_id": "MDU6TGFiZWwyOTk2NDM5Mjg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:contributions%20welcome", "name": "stat:contributions welcome", "color": "f4b400", "default": false, "description": ""}, {"id": 473173272, "node_id": "MDU6TGFiZWw0NzMxNzMyNzI=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:feature", "name": "type:feature", "color": "159b2e", "default": false, "description": ""}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2018-04-04T18:55:05Z", "updated_at": "2018-04-11T17:30:58Z", "closed_at": null, "author_association": "CONTRIBUTOR", "body": "Hello,\r\n\r\nThis is more of a feature request than an issue. Currently there is no convention on verbose logging of TensorFlow with VLOG() levels. This is making it pretty useless for development purposes. For example at  TF_CPP_MIN_VLOG_LEVEL=1, tensorflow/core/framework/log_memory.cc is printing all allocations and de-allocations which are spamming the log with hundreds of messages if not thousands per second. on the other hand tensorflow/core/common_runtime/graph_execution_state.cc is dumping nodedefs to the log file which sometimes contain the input data, creating hundreds of megabytes of strings as outputs . Similarly extremely verbose output is printed even at the verbosity level 1 making levels useless and logs unusable other than a few tiny example cases probably. \r\n\r\nIt would be nice to establish some conventions for logging levels on number of messages per second or amount of data printed to the log. Something in the lines of\r\n0 < level 1 <= 0.1 msg/s\r\n0.1 msg/s <= level 2 <= ~1-2 msg/s\r\n1-2msg/s <= level 3 <= ~5-10 msg/s\r\n.... and similarly for amount of information printed in the logs.\r\n\r\nBut the best solution would be to have a more advanced logging structure that would allow users to selectively enable or disable different logging levels for each module but I don't know how hard would it be to implement. \r\n\r\nI am creating this issue to bring this feature/improvement request into attention.\r\n\r\nThanks,\r\nSami\r\n"}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/18237", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/18237/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/18237/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/18237/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/18237", "id": 311235291, "node_id": "MDU6SXNzdWUzMTEyMzUyOTE=", "number": 18237, "title": "ImportError: libcublas.so.9.0: cannot open shared object file: No such file or directory", "user": {"login": "OlofNiko", "id": 38075248, "node_id": "MDQ6VXNlcjM4MDc1MjQ4", "avatar_url": "https://avatars2.githubusercontent.com/u/38075248?v=4", "gravatar_id": "", "url": "https://api.github.com/users/OlofNiko", "html_url": "https://github.com/OlofNiko", "followers_url": "https://api.github.com/users/OlofNiko/followers", "following_url": "https://api.github.com/users/OlofNiko/following{/other_user}", "gists_url": "https://api.github.com/users/OlofNiko/gists{/gist_id}", "starred_url": "https://api.github.com/users/OlofNiko/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/OlofNiko/subscriptions", "organizations_url": "https://api.github.com/users/OlofNiko/orgs", "repos_url": "https://api.github.com/users/OlofNiko/repos", "events_url": "https://api.github.com/users/OlofNiko/events{/privacy}", "received_events_url": "https://api.github.com/users/OlofNiko/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 473184161, "node_id": "MDU6TGFiZWw0NzMxODQxNjE=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:support", "name": "type:support", "color": "159b2e", "default": false, "description": ""}], "state": "open", "locked": false, "assignee": {"login": "chsigg", "id": 7523982, "node_id": "MDQ6VXNlcjc1MjM5ODI=", "avatar_url": "https://avatars3.githubusercontent.com/u/7523982?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chsigg", "html_url": "https://github.com/chsigg", "followers_url": "https://api.github.com/users/chsigg/followers", "following_url": "https://api.github.com/users/chsigg/following{/other_user}", "gists_url": "https://api.github.com/users/chsigg/gists{/gist_id}", "starred_url": "https://api.github.com/users/chsigg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chsigg/subscriptions", "organizations_url": "https://api.github.com/users/chsigg/orgs", "repos_url": "https://api.github.com/users/chsigg/repos", "events_url": "https://api.github.com/users/chsigg/events{/privacy}", "received_events_url": "https://api.github.com/users/chsigg/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "chsigg", "id": 7523982, "node_id": "MDQ6VXNlcjc1MjM5ODI=", "avatar_url": "https://avatars3.githubusercontent.com/u/7523982?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chsigg", "html_url": "https://github.com/chsigg", "followers_url": "https://api.github.com/users/chsigg/followers", "following_url": "https://api.github.com/users/chsigg/following{/other_user}", "gists_url": "https://api.github.com/users/chsigg/gists{/gist_id}", "starred_url": "https://api.github.com/users/chsigg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chsigg/subscriptions", "organizations_url": "https://api.github.com/users/chsigg/orgs", "repos_url": "https://api.github.com/users/chsigg/repos", "events_url": "https://api.github.com/users/chsigg/events{/privacy}", "received_events_url": "https://api.github.com/users/chsigg/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 10, "created_at": "2018-04-04T13:42:24Z", "updated_at": "2019-01-11T07:24:48Z", "closed_at": null, "author_association": "NONE", "body": "I had installed CUDA toolkit version 9.1.85, cuDNN v7.1.2  for CUDA 9.1 and tensorflow 1.6 from [this link](https://storage.googleapis.com/tensorflow/linux/gpu/tensorflow_gpu-1.6.0-cp36-cp36m-linux_x86_64.whl\r\n)\r\n\r\nWhen i try import tensorflow i get the following error.\r\n\r\n(tensorflow) akshith@Akshith:~$ python\r\nPython 3.6.4 |Anaconda, Inc.| (default, Jan 16 2018, 18:10:19) \r\n[GCC 7.2.0] on linux\r\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\r\n>>> import tensorflow\r\nTraceback (most recent call last):\r\n  File \"/home/akshith/anaconda3/lib/python3.6/site-packages/tensorflow/python/pywrap_tensorflow.py\", line 58, in <module>\r\n    from tensorflow.python.pywrap_tensorflow_internal import *\r\n  File \"/home/akshith/anaconda3/lib/python3.6/site-packages/tensorflow/python/pywrap_tensorflow_internal.py\", line 28, in <module>\r\n    _pywrap_tensorflow_internal = swig_import_helper()\r\n  File \"/home/akshith/anaconda3/lib/python3.6/site-packages/tensorflow/python/pywrap_tensorflow_internal.py\", line 24, in swig_import_helper\r\n    _mod = imp.load_module('_pywrap_tensorflow_internal', fp, pathname, description)\r\n  File \"/home/akshith/anaconda3/lib/python3.6/imp.py\", line 243, in load_module\r\n    return load_dynamic(name, filename, file)\r\n  File \"/home/akshith/anaconda3/lib/python3.6/imp.py\", line 343, in load_dynamic\r\n    return _load(spec)\r\nImportError: libcublas.so.9.0: cannot open shared object file: No such file or directory\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\n  File \"/home/akshith/anaconda3/lib/python3.6/site-packages/tensorflow/__init__.py\", line 24, in <module>\r\n    from tensorflow.python import *\r\n  File \"/home/akshith/anaconda3/lib/python3.6/site-packages/tensorflow/python/__init__.py\", line 49, in <module>\r\n    from tensorflow.python import pywrap_tensorflow\r\n  File \"/home/akshith/anaconda3/lib/python3.6/site-packages/tensorflow/python/pywrap_tensorflow.py\", line 74, in <module>\r\n    raise ImportError(msg)\r\nImportError: Traceback (most recent call last):\r\n  File \"/home/akshith/anaconda3/lib/python3.6/site-packages/tensorflow/python/pywrap_tensorflow.py\", line 58, in <module>\r\n    from tensorflow.python.pywrap_tensorflow_internal import *\r\n  File \"/home/akshith/anaconda3/lib/python3.6/site-packages/tensorflow/python/pywrap_tensorflow_internal.py\", line 28, in <module>\r\n    _pywrap_tensorflow_internal = swig_import_helper()\r\n  File \"/home/akshith/anaconda3/lib/python3.6/site-packages/tensorflow/python/pywrap_tensorflow_internal.py\", line 24, in swig_import_helper\r\n    _mod = imp.load_module('_pywrap_tensorflow_internal', fp, pathname, description)\r\n  File \"/home/akshith/anaconda3/lib/python3.6/imp.py\", line 243, in load_module\r\n    return load_dynamic(name, filename, file)\r\n  File \"/home/akshith/anaconda3/lib/python3.6/imp.py\", line 343, in load_dynamic\r\n    return _load(spec)\r\nImportError: libcublas.so.9.0: cannot open shared object file: No such file or directory\r\n\r\n\r\nFailed to load the native TensorFlow runtime.\r\n\r\nSee https://www.tensorflow.org/install/install_sources#common_installation_problems\r\n\r\nfor some common reasons and solutions.  Include the entire stack trace\r\nabove this error message when asking for help.\r\n>>> \r\n\r\nhow to solve this?\r\nTIA"}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/18219", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/18219/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/18219/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/18219/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/18219", "id": 311013276, "node_id": "MDU6SXNzdWUzMTEwMTMyNzY=", "number": 18219, "title": "Feature Request:  OutputProjectionWrapper compatible with tf.nn.bidirectional_dynamic_rnn", "user": {"login": "Novak3", "id": 2293807, "node_id": "MDQ6VXNlcjIyOTM4MDc=", "avatar_url": "https://avatars0.githubusercontent.com/u/2293807?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Novak3", "html_url": "https://github.com/Novak3", "followers_url": "https://api.github.com/users/Novak3/followers", "following_url": "https://api.github.com/users/Novak3/following{/other_user}", "gists_url": "https://api.github.com/users/Novak3/gists{/gist_id}", "starred_url": "https://api.github.com/users/Novak3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Novak3/subscriptions", "organizations_url": "https://api.github.com/users/Novak3/orgs", "repos_url": "https://api.github.com/users/Novak3/repos", "events_url": "https://api.github.com/users/Novak3/events{/privacy}", "received_events_url": "https://api.github.com/users/Novak3/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 473173272, "node_id": "MDU6TGFiZWw0NzMxNzMyNzI=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:feature", "name": "type:feature", "color": "159b2e", "default": false, "description": ""}], "state": "open", "locked": false, "assignee": {"login": "tatatodd", "id": 5453737, "node_id": "MDQ6VXNlcjU0NTM3Mzc=", "avatar_url": "https://avatars3.githubusercontent.com/u/5453737?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tatatodd", "html_url": "https://github.com/tatatodd", "followers_url": "https://api.github.com/users/tatatodd/followers", "following_url": "https://api.github.com/users/tatatodd/following{/other_user}", "gists_url": "https://api.github.com/users/tatatodd/gists{/gist_id}", "starred_url": "https://api.github.com/users/tatatodd/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tatatodd/subscriptions", "organizations_url": "https://api.github.com/users/tatatodd/orgs", "repos_url": "https://api.github.com/users/tatatodd/repos", "events_url": "https://api.github.com/users/tatatodd/events{/privacy}", "received_events_url": "https://api.github.com/users/tatatodd/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "tatatodd", "id": 5453737, "node_id": "MDQ6VXNlcjU0NTM3Mzc=", "avatar_url": "https://avatars3.githubusercontent.com/u/5453737?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tatatodd", "html_url": "https://github.com/tatatodd", "followers_url": "https://api.github.com/users/tatatodd/followers", "following_url": "https://api.github.com/users/tatatodd/following{/other_user}", "gists_url": "https://api.github.com/users/tatatodd/gists{/gist_id}", "starred_url": "https://api.github.com/users/tatatodd/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tatatodd/subscriptions", "organizations_url": "https://api.github.com/users/tatatodd/orgs", "repos_url": "https://api.github.com/users/tatatodd/repos", "events_url": "https://api.github.com/users/tatatodd/events{/privacy}", "received_events_url": "https://api.github.com/users/tatatodd/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 2, "created_at": "2018-04-03T21:57:44Z", "updated_at": "2018-12-20T18:46:25Z", "closed_at": null, "author_association": "NONE", "body": "### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**:  Yes\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**:  Tensorflow 1.4 Docker under CentOS 7.3\r\n- **TensorFlow installed from (source or binary)**:  Tensorflow 1.4 Docker\r\n- **TensorFlow version (use command below)**:  1.4\r\n- **Python version**: 3.6\r\n- **Bazel version (if compiling from source)**: N/A\r\n- **GCC/Compiler version (if compiling from source)**: N/A\r\n- **CUDA/cuDNN version**: 8.0\r\n- **GPU model and memory**: Quadro M4000\r\n- **Exact command to reproduce**: N/A (feature request, not bug report)\r\n\r\n### Describe the problem\r\nFeature request:  OutputProjectionWrappers for use with tf.nn.bidirectional_dynamic_rnn.  I don't think this is a bug report, per se, because I don't think the wrapper was designed for Bidirectional RNNs. \r\n\r\ntf.nn.bidirectional_dynamic_rnn wants a forward and backward RNN cell, and provides a tuple of tuples:  forward and backward outputs, forward and backward output_states.  \r\n\r\nThe outputProjectionWrapper just wants a cell as input, and returns another cell as an output.\r\n\r\nSo while we can wrap both the forward and backward layers in their own outputProjectionWrappers and send those on to tf.nn.bidirectional_dynamic_rnn -- syntactically, it works -- it's not at all what we want conceptually.  All we've done is project the forward and backward layers independently.\r\n\r\n"}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/18213", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/18213/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/18213/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/18213/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/18213", "id": 310962298, "node_id": "MDU6SXNzdWUzMTA5NjIyOTg=", "number": 18213, "title": "Request a new padding mode", "user": {"login": "ppwwyyxx", "id": 1381301, "node_id": "MDQ6VXNlcjEzODEzMDE=", "avatar_url": "https://avatars3.githubusercontent.com/u/1381301?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ppwwyyxx", "html_url": "https://github.com/ppwwyyxx", "followers_url": "https://api.github.com/users/ppwwyyxx/followers", "following_url": "https://api.github.com/users/ppwwyyxx/following{/other_user}", "gists_url": "https://api.github.com/users/ppwwyyxx/gists{/gist_id}", "starred_url": "https://api.github.com/users/ppwwyyxx/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ppwwyyxx/subscriptions", "organizations_url": "https://api.github.com/users/ppwwyyxx/orgs", "repos_url": "https://api.github.com/users/ppwwyyxx/repos", "events_url": "https://api.github.com/users/ppwwyyxx/events{/privacy}", "received_events_url": "https://api.github.com/users/ppwwyyxx/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 404586594, "node_id": "MDU6TGFiZWw0MDQ1ODY1OTQ=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:awaiting%20tensorflower", "name": "stat:awaiting tensorflower", "color": "f4b400", "default": false, "description": ""}], "state": "open", "locked": false, "assignee": {"login": "reedwm", "id": 6510203, "node_id": "MDQ6VXNlcjY1MTAyMDM=", "avatar_url": "https://avatars2.githubusercontent.com/u/6510203?v=4", "gravatar_id": "", "url": "https://api.github.com/users/reedwm", "html_url": "https://github.com/reedwm", "followers_url": "https://api.github.com/users/reedwm/followers", "following_url": "https://api.github.com/users/reedwm/following{/other_user}", "gists_url": "https://api.github.com/users/reedwm/gists{/gist_id}", "starred_url": "https://api.github.com/users/reedwm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/reedwm/subscriptions", "organizations_url": "https://api.github.com/users/reedwm/orgs", "repos_url": "https://api.github.com/users/reedwm/repos", "events_url": "https://api.github.com/users/reedwm/events{/privacy}", "received_events_url": "https://api.github.com/users/reedwm/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "reedwm", "id": 6510203, "node_id": "MDQ6VXNlcjY1MTAyMDM=", "avatar_url": "https://avatars2.githubusercontent.com/u/6510203?v=4", "gravatar_id": "", "url": "https://api.github.com/users/reedwm", "html_url": "https://github.com/reedwm", "followers_url": "https://api.github.com/users/reedwm/followers", "following_url": "https://api.github.com/users/reedwm/following{/other_user}", "gists_url": "https://api.github.com/users/reedwm/gists{/gist_id}", "starred_url": "https://api.github.com/users/reedwm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/reedwm/subscriptions", "organizations_url": "https://api.github.com/users/reedwm/orgs", "repos_url": "https://api.github.com/users/reedwm/repos", "events_url": "https://api.github.com/users/reedwm/events{/privacy}", "received_events_url": "https://api.github.com/users/reedwm/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 7, "created_at": "2018-04-03T19:14:29Z", "updated_at": "2018-12-19T18:44:57Z", "closed_at": null, "author_association": "CONTRIBUTOR", "body": "### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**: no\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**: n/a\r\n- **TensorFlow installed from (source or binary)**: n/a\r\n- **TensorFlow version (use command below)**: n/a\r\n- **Python version**: n/a\r\n- **Bazel version (if compiling from source)**: n/a\r\n- **GCC/Compiler version (if compiling from source)**: n/a\r\n- **CUDA/cuDNN version**: n/a\r\n- **GPU model and memory**: n/a\r\n- **Exact command to reproduce**: n/a\r\n\r\nAccording to https://www.tensorflow.org/api_guides/python/nn#Convolution, the current padding mode \"SAME\" will depend on the input size to determine how many pixels to pad, for example:\r\n\r\ninput=225, kernel=7, stride=2  ---> padding = [3, 3]\r\ninput=224, kernel=7, stride=2  ---> padding = [2, 3]\r\n\r\nHowever, in most other CNN implementations, (and also, historically), padding does not depend on the input size. For kernel=7 and stride=2, padding usually will be [3, 3] (which is actually equivalent to [3, 2] when input=224).\r\n\r\nPotential issues:\r\n1. Inconsistent with models trained in other frameworks. It's not the first time I have to manually fix the padding when loading a model released by others, e.g. [here](https://github.com/ppwwyyxx/tensorpack/blob/1139854d7e286b56f87a92f96fe8f1b70789d794/examples/ResNet/load-resnet.py#L40-L42). This also causes pain for multi-backend framework such as Keras, because \"SAME\" does not mean the same thing for each backend. One example Keras issue [here](https://github.com/keras-team/keras/pull/9473). Also Keras has to explicit pad the image in its ResNet50 model: [here](https://github.com/keras-team/keras/blob/ef13db05731bfd53fa0a877637c99c1734be933b/keras/applications/resnet50.py#L213).\r\n\r\n2. Due to how padding is computed (by `left=total_padding//2, right=total_padding-left`), the number of pixels padded on __left or top__ of the image may change with different input size, as shown by the example above. This is not a good default and in particular harmful for pixel-level tasks, such as detection&segmentation, where all the annotations have an offset starting from the top-left corner of the image.\r\n\r\nIn fact, many of TF team's own code has to fix this manually by `tf.pad`, for example:\r\n1. tensorflow/benchmarks has a new mode called \"SAME_RESNET\": https://github.com/tensorflow/benchmarks/blob/bab8a61aaca3d2b94072ae2b87f0aafe1797b165/scripts/tf_cnn_benchmarks/convnet_builder.py#L183-L199\r\n2. The recent tpu training code has a function called \"conv2d_fixed_padding\": https://github.com/tensorflow/tpu/blob/b189540102d6b5b40b1730d7e5ad5c884bae323c/models/experimental/resnet_bfloat16/resnet_model.py#L102-L107\r\n3. slim has a function called `conv2d_same`: https://github.com/tensorflow/models/blob/696b69a498b43f8e6a1ecb24bb82f7b9db87c570/research/slim/nets/resnet_utils.py#L77-L122\r\n\r\nGiven all these I think it's reasonable to add a new mode to make things easier."}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/18177", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/18177/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/18177/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/18177/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/18177", "id": 310485119, "node_id": "MDU6SXNzdWUzMTA0ODUxMTk=", "number": 18177, "title": "pip install tensorflow in anaconda,can't use it in pycharm", "user": {"login": "CUGfred", "id": 32841220, "node_id": "MDQ6VXNlcjMyODQxMjIw", "avatar_url": "https://avatars1.githubusercontent.com/u/32841220?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CUGfred", "html_url": "https://github.com/CUGfred", "followers_url": "https://api.github.com/users/CUGfred/followers", "following_url": "https://api.github.com/users/CUGfred/following{/other_user}", "gists_url": "https://api.github.com/users/CUGfred/gists{/gist_id}", "starred_url": "https://api.github.com/users/CUGfred/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CUGfred/subscriptions", "organizations_url": "https://api.github.com/users/CUGfred/orgs", "repos_url": "https://api.github.com/users/CUGfred/repos", "events_url": "https://api.github.com/users/CUGfred/events{/privacy}", "received_events_url": "https://api.github.com/users/CUGfred/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": {"login": "shivaniag", "id": 16565716, "node_id": "MDQ6VXNlcjE2NTY1NzE2", "avatar_url": "https://avatars1.githubusercontent.com/u/16565716?v=4", "gravatar_id": "", "url": "https://api.github.com/users/shivaniag", "html_url": "https://github.com/shivaniag", "followers_url": "https://api.github.com/users/shivaniag/followers", "following_url": "https://api.github.com/users/shivaniag/following{/other_user}", "gists_url": "https://api.github.com/users/shivaniag/gists{/gist_id}", "starred_url": "https://api.github.com/users/shivaniag/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/shivaniag/subscriptions", "organizations_url": "https://api.github.com/users/shivaniag/orgs", "repos_url": "https://api.github.com/users/shivaniag/repos", "events_url": "https://api.github.com/users/shivaniag/events{/privacy}", "received_events_url": "https://api.github.com/users/shivaniag/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "shivaniag", "id": 16565716, "node_id": "MDQ6VXNlcjE2NTY1NzE2", "avatar_url": "https://avatars1.githubusercontent.com/u/16565716?v=4", "gravatar_id": "", "url": "https://api.github.com/users/shivaniag", "html_url": "https://github.com/shivaniag", "followers_url": "https://api.github.com/users/shivaniag/followers", "following_url": "https://api.github.com/users/shivaniag/following{/other_user}", "gists_url": "https://api.github.com/users/shivaniag/gists{/gist_id}", "starred_url": "https://api.github.com/users/shivaniag/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/shivaniag/subscriptions", "organizations_url": "https://api.github.com/users/shivaniag/orgs", "repos_url": "https://api.github.com/users/shivaniag/repos", "events_url": "https://api.github.com/users/shivaniag/events{/privacy}", "received_events_url": "https://api.github.com/users/shivaniag/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2018-04-02T13:30:06Z", "updated_at": "2018-12-09T18:40:02Z", "closed_at": null, "author_association": "NONE", "body": "\r\ni use anaconda environment with \"pip install tensorflow-gpu==1.0\" to install tensorflow.i can use it in console,while i wanted to create a project,i chose the interpreter \"home/anaconda2/envs/tensorflow/bin/python\",and it occur a error\"encodings.CodecRegistryError: incompatible codecs in module \"encodings.utf_8\" (/home/red/anaconda2/envs/tensorflow/lib/python2.7/encodings/utf_8.pyc)\"\r\n------------------------\r\n\r\n### System information\r\nyes,a very easy hello code- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**:\r\nLinux 16.04- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**:\r\nsource- **TensorFlow installed from (source or binary)**:\r\n1.0- **TensorFlow version (use command below)**:\r\n2.7.14- **Python version**: \r\n- **Bazel version (if compiling from source)**:\r\ngcc version 5.4.0 20160609 (Ubuntu 5.4.0-6ubuntu1~16.04.9) - **GCC/Compiler version (if compiling from source)**:\r\n8.0/5.1- **CUDA/cuDNN version**:\r\ngtx1060/3gb- **GPU model and memory**:\r\n- **Exact command to reproduce**:\r\n\r\nYou can collect some of this information using our environment capture script:\r\n\r\nhttps://github.com/tensorflow/tensorflow/tree/master/tools/tf_env_collect.sh\r\n\r\nYou can obtain the TensorFlow version with\r\n\r\npython -c \"import tensorflow as tf; print(tf.GIT_VERSION, tf.VERSION)\"\r\n\r\n### Describe the problem\r\nencodings.utf_8\" (/home/red/anaconda2/envs/tensorflow/lib/python2.7/encodings/utf_8.pyc)\r\n\r\n### Source code / logs\r\nhello = tf.constant(\"hello,world\")\r\nprint(sess.run(hello))\r\n"}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/18149", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/18149/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/18149/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/18149/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/18149", "id": 310260133, "node_id": "MDU6SXNzdWUzMTAyNjAxMzM=", "number": 18149, "title": "C++ Const and Assign to initialize variable causes a segfault depending on the Const constructor used", "user": {"login": "rajha-korithrien", "id": 8145476, "node_id": "MDQ6VXNlcjgxNDU0NzY=", "avatar_url": "https://avatars3.githubusercontent.com/u/8145476?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rajha-korithrien", "html_url": "https://github.com/rajha-korithrien", "followers_url": "https://api.github.com/users/rajha-korithrien/followers", "following_url": "https://api.github.com/users/rajha-korithrien/following{/other_user}", "gists_url": "https://api.github.com/users/rajha-korithrien/gists{/gist_id}", "starred_url": "https://api.github.com/users/rajha-korithrien/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rajha-korithrien/subscriptions", "organizations_url": "https://api.github.com/users/rajha-korithrien/orgs", "repos_url": "https://api.github.com/users/rajha-korithrien/repos", "events_url": "https://api.github.com/users/rajha-korithrien/events{/privacy}", "received_events_url": "https://api.github.com/users/rajha-korithrien/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 404586594, "node_id": "MDU6TGFiZWw0MDQ1ODY1OTQ=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:awaiting%20tensorflower", "name": "stat:awaiting tensorflower", "color": "f4b400", "default": false, "description": ""}], "state": "open", "locked": false, "assignee": {"login": "skye", "id": 88808, "node_id": "MDQ6VXNlcjg4ODA4", "avatar_url": "https://avatars1.githubusercontent.com/u/88808?v=4", "gravatar_id": "", "url": "https://api.github.com/users/skye", "html_url": "https://github.com/skye", "followers_url": "https://api.github.com/users/skye/followers", "following_url": "https://api.github.com/users/skye/following{/other_user}", "gists_url": "https://api.github.com/users/skye/gists{/gist_id}", "starred_url": "https://api.github.com/users/skye/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/skye/subscriptions", "organizations_url": "https://api.github.com/users/skye/orgs", "repos_url": "https://api.github.com/users/skye/repos", "events_url": "https://api.github.com/users/skye/events{/privacy}", "received_events_url": "https://api.github.com/users/skye/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "skye", "id": 88808, "node_id": "MDQ6VXNlcjg4ODA4", "avatar_url": "https://avatars1.githubusercontent.com/u/88808?v=4", "gravatar_id": "", "url": "https://api.github.com/users/skye", "html_url": "https://github.com/skye", "followers_url": "https://api.github.com/users/skye/followers", "following_url": "https://api.github.com/users/skye/following{/other_user}", "gists_url": "https://api.github.com/users/skye/gists{/gist_id}", "starred_url": "https://api.github.com/users/skye/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/skye/subscriptions", "organizations_url": "https://api.github.com/users/skye/orgs", "repos_url": "https://api.github.com/users/skye/repos", "events_url": "https://api.github.com/users/skye/events{/privacy}", "received_events_url": "https://api.github.com/users/skye/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 3, "created_at": "2018-03-31T18:09:53Z", "updated_at": "2019-01-29T09:41:04Z", "closed_at": null, "author_association": "NONE", "body": "### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**:\r\nYes see a very short example below.\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**:\r\nmacOS 10.13.3 clang 900.0.39.2 and CentOS Linux 7 gcc-4.8.5\r\n- **TensorFlow installed from (source or binary)**:\r\nSource from the 1.7.0 release tag\r\n- **TensorFlow version (use command below)**:\r\nI have not actually installed the python pip package, but the source tree came from:\r\nhttps://github.com/tensorflow/tensorflow/archive/v1.7.0.tar.gz\r\n\r\n- **Python version**: \r\nN/A using the C++ API\r\n- **Bazel version (if compiling from source)**:\r\nmacOS Build label: 0.11.1-homebrew and Centos Linux 7 Build label: 0.11.1- (@non-git)\r\n- **GCC/Compiler version (if compiling from source)**:\r\nmacOS clang 900.0.39.2 and CentOS Linux 7 gcc-4.8.5\r\n- **CUDA/cuDNN version**:\r\nN/A\r\n- **GPU model and memory**:\r\nN/A\r\n- **Exact command to reproduce**:\r\nextract the sources/configure\r\n`tar -xzvf v1.7.0.tar.gz`\r\n`cd tensorflow-1.7.0`\r\n`./configure`\r\n\r\nThen add the following directory to hold the work:\r\n`mkdir tensorflow/basic-example`\r\n\r\nPut into basic-example the following BUILD file:\r\n```\r\nload(\"//tensorflow:tensorflow.bzl\", \"tf_cc_binary\")\r\n\r\ntf_cc_binary(\r\n    name = \"basic-example\",\r\n    srcs = [\r\n        \"basic-example.cc\",\r\n    ],\r\n    deps = [\r\n        \"//tensorflow/cc:cc_ops\",\r\n        \"//tensorflow/cc:client_session\",\r\n        \"//tensorflow/core:tensorflow\"\r\n    ]\r\n)\r\n```\r\nPut into basic-example the following C++ source file:\r\n```c++\r\n#include \"tensorflow/cc/client/client_session.h\"\r\n#include \"tensorflow/cc/ops/standard_ops.h\"\r\n#include \"tensorflow/core/framework/tensor.h\"\r\n\r\nusing namespace tensorflow;\r\nusing namespace tensorflow::ops;\r\nusing namespace std;\r\n\r\nint main() {\r\n\r\n  Scope scope = Scope::NewRootScope();\r\n \r\n  auto c = Const(scope.WithOpName(\"const_c\"), {1.0, 2.0, 3.0, 4.0, 5.0, 6.0, 7.0, 8.0, 9.0}, {3,3});\r\n\r\n  auto v = Variable(scope.WithOpName(\"var1\"), {3, 3}, DT_FLOAT);\r\n  auto init_v = Assign(scope.WithOpName(\"init_v\"), v, c);\r\n\r\n  std::vector<Tensor> outputs;\r\n  ClientSession session(scope);\r\n\r\n  TF_CHECK_OK(session.Run({init_v}, &outputs));\r\n}\r\n```\r\nNow compile and run the resulting program:\r\n`bazel build -c dbg //tensorflow/basic-example`\r\n`./bazel-bin/tensorflow/basic-example/basic-example`\r\n\r\nObserve the following behavior:\r\n```\r\n./bazel-bin/tensorflow/basic-example/basic-example\r\n2018-03-31 11:47:57.135532: I tensorflow/core/platform/cpu_feature_guard.cc:140] Your CPU supports instructions that this TensorFlow binary was not compiled to use: SSE4.2 AVX\r\nSegmentation fault: 11\r\n```\r\n### Describe the problem\r\nThe code given above causes a segfault when the session runner tries to get the name of a node because the node is nullptr. I have included a stacktrace using lldb below (a trace showing the same information can be created using gdb on Linux).\r\n\r\nHowever the following slightly modified C++ program works fine:\r\n```c++\r\n#include \"tensorflow/cc/client/client_session.h\"\r\n#include \"tensorflow/cc/ops/standard_ops.h\"\r\n#include \"tensorflow/core/framework/tensor.h\"\r\n\r\nusing namespace tensorflow;\r\nusing namespace tensorflow::ops;\r\nusing namespace std;\r\n\r\nint main() {\r\n\r\n  std::vector<float> initConstData = {1.0, 2.0, 3.0, 4.0, 5.0, 6.0, 7.0, 8.0, 9.0};\r\n\r\n  Scope scope = Scope::NewRootScope();\r\n\r\n  Tensor initConstT(DT_FLOAT, TensorShape({3,3}));\r\n  std::copy_n(initConstData.begin(), initConstData.size(), initConstT.flat<float>().data());\r\n\r\n  auto c = Const(scope.WithOpName(\"const_c\"), initConstT);\r\n\r\n  auto v = Variable(scope.WithOpName(\"var1\"), {3, 3}, DT_FLOAT);\r\n  auto init_v = Assign(scope.WithOpName(\"init_v\"), v, c);\r\n\r\n  std::vector<Tensor> outputs;\r\n  ClientSession session(scope);\r\n\r\n  TF_CHECK_OK(session.Run({init_v}, &outputs));\r\n}\r\n```\r\nThe difference between the code that works and the code that doesn't:\r\na) the explicit creation of a tensor initConstT\r\nb) calling Const with a Tensor rather than an Input::Initializer\r\n\r\nThe behavior is identical if I omit the use of scope.WithOpName and just pass scope.\r\nI have been able to test this back as far as Tensorflow 1.4 I can not build Tensorflow 1.3.1 with my installed version of bazel.\r\n\r\nIf I have done something wrong, please point it out. Otherwise I feel that because there is no semantic difference between the two programs and the API allows the former program to compile then they should both work.\r\n\r\n### Source code / logs\r\nStacktrace of the problem:\r\n```\r\n(lldb) bt\r\n* thread #1, queue = 'com.apple.main-thread', stop reason = EXC_BAD_ACCESS (code=1, address=0x60)\r\n  * frame #0: 0x0000000126e677bc libtensorflow_framework.so`tensorflow::Node::name() const [inlined] std::__1::shared_ptr<tensorflow::NodeProperties>::operator->(this=0x0000000000000060) const at memory:4071\r\n    frame #1: 0x0000000126e677bc libtensorflow_framework.so`tensorflow::Node::name(this=0x0000000000000000) const at graph.cc:140\r\n    frame #2: 0x000000010018592f basic-example`tensorflow::Output::name(this=0x000000012bc020f0) const at ops.h:76\r\n    frame #3: 0x0000000100184e7a basic-example`tensorflow::ClientSession::Run(this=0x00007ffeefbff4a8, run_options=0x00007ffeefbfefd0, inputs=size=0, fetch_outputs=size=1, run_outputs=size=1, outputs=0x00007ffeefbff4b0 size=1, run_metadata=0x0000000000000000) const at client_session.cc:118\r\n    frame #4: 0x0000000100184145 basic-example`tensorflow::ClientSession::Run(this=0x00007ffeefbff4a8, inputs=size=0, fetch_outputs=size=1, run_outputs=size=1, outputs=0x00007ffeefbff4b0 size=1) const at client_session.cc:89\r\n    frame #5: 0x000000010018408a basic-example`tensorflow::ClientSession::Run(this=0x00007ffeefbff4a8, fetch_outputs=size=1, outputs=0x00007ffeefbff4b0 size=1) const at client_session.cc:76\r\n    frame #6: 0x0000000100002bfc basic-example`main at basic-example.cc:22\r\n    frame #7: 0x00007fff76249115 libdyld.dylib`start + 1\r\n    frame #8: 0x00007fff76249115 libdyld.dylib`start + 1\r\n(lldb)\r\n```\r\n"}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/18112", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/18112/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/18112/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/18112/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/18112", "id": 309988487, "node_id": "MDU6SXNzdWUzMDk5ODg0ODc=", "number": 18112, "title": "Why is tf.images.resize_bicubic different from misc.imresize with bicubic method", "user": {"login": "linchuming", "id": 8861423, "node_id": "MDQ6VXNlcjg4NjE0MjM=", "avatar_url": "https://avatars2.githubusercontent.com/u/8861423?v=4", "gravatar_id": "", "url": "https://api.github.com/users/linchuming", "html_url": "https://github.com/linchuming", "followers_url": "https://api.github.com/users/linchuming/followers", "following_url": "https://api.github.com/users/linchuming/following{/other_user}", "gists_url": "https://api.github.com/users/linchuming/gists{/gist_id}", "starred_url": "https://api.github.com/users/linchuming/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/linchuming/subscriptions", "organizations_url": "https://api.github.com/users/linchuming/orgs", "repos_url": "https://api.github.com/users/linchuming/repos", "events_url": "https://api.github.com/users/linchuming/events{/privacy}", "received_events_url": "https://api.github.com/users/linchuming/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 473173272, "node_id": "MDU6TGFiZWw0NzMxNzMyNzI=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:feature", "name": "type:feature", "color": "159b2e", "default": false, "description": ""}], "state": "open", "locked": false, "assignee": {"login": "rmlarsen", "id": 16907534, "node_id": "MDQ6VXNlcjE2OTA3NTM0", "avatar_url": "https://avatars2.githubusercontent.com/u/16907534?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rmlarsen", "html_url": "https://github.com/rmlarsen", "followers_url": "https://api.github.com/users/rmlarsen/followers", "following_url": "https://api.github.com/users/rmlarsen/following{/other_user}", "gists_url": "https://api.github.com/users/rmlarsen/gists{/gist_id}", "starred_url": "https://api.github.com/users/rmlarsen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rmlarsen/subscriptions", "organizations_url": "https://api.github.com/users/rmlarsen/orgs", "repos_url": "https://api.github.com/users/rmlarsen/repos", "events_url": "https://api.github.com/users/rmlarsen/events{/privacy}", "received_events_url": "https://api.github.com/users/rmlarsen/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "rmlarsen", "id": 16907534, "node_id": "MDQ6VXNlcjE2OTA3NTM0", "avatar_url": "https://avatars2.githubusercontent.com/u/16907534?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rmlarsen", "html_url": "https://github.com/rmlarsen", "followers_url": "https://api.github.com/users/rmlarsen/followers", "following_url": "https://api.github.com/users/rmlarsen/following{/other_user}", "gists_url": "https://api.github.com/users/rmlarsen/gists{/gist_id}", "starred_url": "https://api.github.com/users/rmlarsen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rmlarsen/subscriptions", "organizations_url": "https://api.github.com/users/rmlarsen/orgs", "repos_url": "https://api.github.com/users/rmlarsen/repos", "events_url": "https://api.github.com/users/rmlarsen/events{/privacy}", "received_events_url": "https://api.github.com/users/rmlarsen/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 5, "created_at": "2018-03-30T06:37:18Z", "updated_at": "2019-10-27T03:47:27Z", "closed_at": null, "author_association": "NONE", "body": "Have I written custom code (as opposed to using a stock example script provided in TensorFlow): N\r\nOS Platform and Distribution (e.g., Linux Ubuntu 16.04): Win 10\r\nTensorFlow installed from (source or binary): binary \r\nTensorFlow version (use command below): 1.6\r\nPython version: 3.6\r\nBazel version (if compiling from source): \r\nGCC/Compiler version (if compiling from source):\r\nCUDA/cuDNN version: 9.0  cudnn 7.0\r\nGPU model and memory: GTX 1080ti\r\nExact command to reproduce: N\r\n\r\nI consider the implement of tf.images.resize_bicubic is similar to opencv resize method, but it has problem.\r\nThe opencv resize has more noise and less soomth. If we use opencv to resize image and process image super-resolution, it will degrade the performance.\r\nThere are some visual results generated by tensorflow and scipy.misc:\r\ntersorflow:\r\n![res2](https://user-images.githubusercontent.com/8861423/38127143-649f5e44-3427-11e8-8bcc-3c0c4f46b617.png)\r\nmisc:\r\n![res1](https://user-images.githubusercontent.com/8861423/38127136-592109fa-3427-11e8-800e-1e0ad4fe61a7.png)\r\n\r\nI wish the tensorflow can offer the implement of misc (or PIL, MATLAB)  resize method. Thanks!\r\n\r\n"}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/18096", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/18096/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/18096/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/18096/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/18096", "id": 309853231, "node_id": "MDU6SXNzdWUzMDk4NTMyMzE=", "number": 18096, "title": "Feature Request: Support for configuring deterministic options of cudNN Conv routines", "user": {"login": "yoavz", "id": 2341691, "node_id": "MDQ6VXNlcjIzNDE2OTE=", "avatar_url": "https://avatars1.githubusercontent.com/u/2341691?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yoavz", "html_url": "https://github.com/yoavz", "followers_url": "https://api.github.com/users/yoavz/followers", "following_url": "https://api.github.com/users/yoavz/following{/other_user}", "gists_url": "https://api.github.com/users/yoavz/gists{/gist_id}", "starred_url": "https://api.github.com/users/yoavz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yoavz/subscriptions", "organizations_url": "https://api.github.com/users/yoavz/orgs", "repos_url": "https://api.github.com/users/yoavz/repos", "events_url": "https://api.github.com/users/yoavz/events{/privacy}", "received_events_url": "https://api.github.com/users/yoavz/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 299643928, "node_id": "MDU6TGFiZWwyOTk2NDM5Mjg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:contributions%20welcome", "name": "stat:contributions welcome", "color": "f4b400", "default": false, "description": ""}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 17, "created_at": "2018-03-29T18:14:04Z", "updated_at": "2019-10-08T21:47:50Z", "closed_at": null, "author_association": "NONE", "body": "Please go to Stack Overflow for help and support:\r\n\r\nhttps://stackoverflow.com/questions/tagged/tensorflow\r\n\r\nIf you open a GitHub issue, here is our policy:\r\n\r\n1. It must be a bug, a feature request, or a significant problem with documentation (for small docs fixes please send a PR instead).\r\n2. The form below must be filled out.\r\n3. It shouldn't be a TensorBoard issue. Those go [here](https://github.com/tensorflow/tensorboard/issues).\r\n\r\n**Here's why we have that policy**: TensorFlow developers respond to issues. We want to focus on work that benefits the whole community, e.g., fixing bugs and adding features. Support only helps individuals. GitHub also notifies thousands of people when issues are filed. We want them to see you communicating an interesting problem, rather than being redirected to Stack Overflow.\r\n\r\n------------------------\r\n\r\n### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**: Yes\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**: Linux Ubuntu 16.04\r\n- **TensorFlow installed from (source or binary)**: binary\r\n- **TensorFlow version (use command below)**: 1.6\r\n- **Python version**: 3.6\r\n- **Bazel version (if compiling from source)**:\r\n- **GCC/Compiler version (if compiling from source)**:\r\n- **CUDA/cuDNN version**: 7.1\r\n- **GPU model and memory**: GPU\r\n- **Exact command to reproduce**: N/A\r\n\r\nYou can collect some of this information using our environment capture script:\r\n\r\nhttps://github.com/tensorflow/tensorflow/tree/master/tools/tf_env_collect.sh\r\n\r\nYou can obtain the TensorFlow version with\r\n\r\npython -c \"import tensorflow as tf; print(tf.GIT_VERSION, tf.VERSION)\"\r\n\r\n### Describe the problem\r\n\r\nhttp://docs.nvidia.com/deeplearning/sdk/cudnn-developer-guide/index.html#reproducibility\r\ncudNN documentation indicates that there are several routine options for `cudnnConvolutionBackwardFilter`, `cudnnConvolutionBackwardData`, and `cudnnPoolingBackward` operations. They default to non-deterministic atomic operations, but have the option to run in a deterministic mode. To achieve determinism on TensorFlow GPU, I would like to be able to make this performance trade-off, but currently cannot find a way to enable these options in TensorFlow.\r\n\r\nCan a user-facing option be added, perhaps in `tf.ConfigProto`, to configurate these cudNN routines? This could be configured in a similar way as `inter_op_parallelism_threads` and `intra_op_parallelism_threads` are set to 1 to achieve determinism on CPU (https://stackoverflow.com/questions/41233635/meaning-of-inter-op-parallelism-threads-and-intra-op-parallelism-threads)\r\n\r\n### Source code / logs\r\n\r\nN/A"}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/18092", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/18092/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/18092/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/18092/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/18092", "id": 309842317, "node_id": "MDU6SXNzdWUzMDk4NDIzMTc=", "number": 18092, "title": "Distributed TensorFlow got error message with the MPI collective Ops units test", "user": {"login": "jianyinglang", "id": 30543987, "node_id": "MDQ6VXNlcjMwNTQzOTg3", "avatar_url": "https://avatars1.githubusercontent.com/u/30543987?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jianyinglang", "html_url": "https://github.com/jianyinglang", "followers_url": "https://api.github.com/users/jianyinglang/followers", "following_url": "https://api.github.com/users/jianyinglang/following{/other_user}", "gists_url": "https://api.github.com/users/jianyinglang/gists{/gist_id}", "starred_url": "https://api.github.com/users/jianyinglang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jianyinglang/subscriptions", "organizations_url": "https://api.github.com/users/jianyinglang/orgs", "repos_url": "https://api.github.com/users/jianyinglang/repos", "events_url": "https://api.github.com/users/jianyinglang/events{/privacy}", "received_events_url": "https://api.github.com/users/jianyinglang/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 404586558, "node_id": "MDU6TGFiZWw0MDQ1ODY1NTg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:community%20support", "name": "stat:community support", "color": "f4b400", "default": false, "description": ""}, {"id": 473184161, "node_id": "MDU6TGFiZWw0NzMxODQxNjE=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:support", "name": "type:support", "color": "159b2e", "default": false, "description": ""}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 12, "created_at": "2018-03-29T17:37:51Z", "updated_at": "2019-04-18T19:42:52Z", "closed_at": null, "author_association": "NONE", "body": "Have I written custom code:  None\r\nOS Platform and Distribution: Linux Ubuntu 16.04\r\nOpen MPI version: 3.0.0\r\nTensorFlow installed from: b'v1.7.0-rc1-816-g1712002ad0' 1.7.0-rc1\r\nBazel version: 0.11.1 \r\nPython version: 3.5.2\r\nGCC version: 6.3.0\r\nCUDA/cuDNN version: N/A\r\nGPU model and memory: N/A\r\nExact command to reproduce: `mpirun -np 1 python mpi_allreduce_test.py` under directory `tensorflow/tensorflow/contrib/mpi_collectives`\r\n\r\nI ran the unit test under directory `tensorflow/tensorflow/contrib/mpi_collectives` and the run command is `mpirun -np 1 python mpi_allreduce_test.py` . I got the following error message:\r\nCould someone please help me take a look at this? Thanks!\r\n\r\n```\r\nWARNING:tensorflow:From /ec/fm/disks/nrv_algo_home01/langjian/.tf_17/lib/python3.5/site-packages/tensorflow/contrib/learn/python/learn/datasets/base.py:198: retry (from tensorflow.contrib.learn.python.learn.datasets.base) is deprecated and will be removed in a future version.\r\nInstructions for updating:\r\nUse the retry module or similar alternatives.\r\nTraceback (most recent call last):\r\n  File \"mpi_allreduce_test.py\", line 23, in <module>\r\n    import tensorflow.contrib.mpi_collectives as mpi\r\n  File \"$HOME/.tf_17/lib/python3.5/site-packages/tensorflow/contrib/mpi_collectives/__init__.py\", line 128, in <module>\r\n    from tensorflow.contrib.mpi_collectives.python.ops.mpi_ops import init\r\n  File \"$HOME/.tf_17/lib/python3.5/site-packages/tensorflow/contrib/mpi_collectives/python/ops/mpi_ops.py\", line 29, in <module>\r\n    resource_loader.get_path_to_datafile('_mpi_ops.so'))\r\n  File \"$HOME/.tf_17/lib/python3.5/site-packages/tensorflow/contrib/util/loader.py\", line 55, in load_op_library\r\n    ret = load_library.load_op_library(path)\r\n  File \"$HOME/.tf_17/lib/python3.5/site-packages/tensorflow/python/framework/load_library.py\", line 58, in load_op_library\r\n    lib_handle = py_tf.TF_LoadLibrary(library_filename, status)\r\n  File \"$HOME/.tf_17/lib/python3.5/site-packages/tensorflow/python/framework/errors_impl.py\", line 516, in __exit__\r\n    c_api.TF_GetCode(self.status.status))\r\ntensorflow.python.framework.errors_impl.NotFoundError: $HOME/.tf_17/lib/python3.5/site-packages/tensorflow/contrib/mpi_collectives/python/ops/_mpi_ops.so: undefined symbol: _ZN10tensorflow7contrib15mpi_collectives7MPITypeIiEEP15ompi_datatype_tv\r\n-------------------------------------------------------\r\nPrimary job  terminated normally, but 1 process returned\r\na non-zero exit code. Per user-direction, the job has been aborted.\r\n-------------------------------------------------------\r\n--------------------------------------------------------------------------\r\nmpirun detected that one or more processes exited with non-zero status, thus causing\r\nthe job to be terminated. The first process to do so was:\r\n\r\n  Process name: [[18657,1],0]\r\n  Exit code:    1\r\n--------------------------------------------------------------------------\r\n```\r\n"}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/18083", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/18083/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/18083/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/18083/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/18083", "id": 309650465, "node_id": "MDU6SXNzdWUzMDk2NTA0NjU=", "number": 18083, "title": "No equivalent to theano.tensor.slinalg.Eigvalsh", "user": {"login": "tchaton", "id": 12861981, "node_id": "MDQ6VXNlcjEyODYxOTgx", "avatar_url": "https://avatars0.githubusercontent.com/u/12861981?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tchaton", "html_url": "https://github.com/tchaton", "followers_url": "https://api.github.com/users/tchaton/followers", "following_url": "https://api.github.com/users/tchaton/following{/other_user}", "gists_url": "https://api.github.com/users/tchaton/gists{/gist_id}", "starred_url": "https://api.github.com/users/tchaton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tchaton/subscriptions", "organizations_url": "https://api.github.com/users/tchaton/orgs", "repos_url": "https://api.github.com/users/tchaton/repos", "events_url": "https://api.github.com/users/tchaton/events{/privacy}", "received_events_url": "https://api.github.com/users/tchaton/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 404586594, "node_id": "MDU6TGFiZWw0MDQ1ODY1OTQ=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:awaiting%20tensorflower", "name": "stat:awaiting tensorflower", "color": "f4b400", "default": false, "description": ""}], "state": "open", "locked": false, "assignee": {"login": "fchollet", "id": 710255, "node_id": "MDQ6VXNlcjcxMDI1NQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/710255?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fchollet", "html_url": "https://github.com/fchollet", "followers_url": "https://api.github.com/users/fchollet/followers", "following_url": "https://api.github.com/users/fchollet/following{/other_user}", "gists_url": "https://api.github.com/users/fchollet/gists{/gist_id}", "starred_url": "https://api.github.com/users/fchollet/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fchollet/subscriptions", "organizations_url": "https://api.github.com/users/fchollet/orgs", "repos_url": "https://api.github.com/users/fchollet/repos", "events_url": "https://api.github.com/users/fchollet/events{/privacy}", "received_events_url": "https://api.github.com/users/fchollet/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "fchollet", "id": 710255, "node_id": "MDQ6VXNlcjcxMDI1NQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/710255?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fchollet", "html_url": "https://github.com/fchollet", "followers_url": "https://api.github.com/users/fchollet/followers", "following_url": "https://api.github.com/users/fchollet/following{/other_user}", "gists_url": "https://api.github.com/users/fchollet/gists{/gist_id}", "starred_url": "https://api.github.com/users/fchollet/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fchollet/subscriptions", "organizations_url": "https://api.github.com/users/fchollet/orgs", "repos_url": "https://api.github.com/users/fchollet/repos", "events_url": "https://api.github.com/users/fchollet/events{/privacy}", "received_events_url": "https://api.github.com/users/fchollet/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 5, "created_at": "2018-03-29T07:40:10Z", "updated_at": "2018-12-07T18:49:42Z", "closed_at": null, "author_association": "NONE", "body": "Good morning,\r\n\r\nI have been trying to reproduce DeepLDA loss function implementation in Tensorflow \r\n(https://github.com/VahidooX/DeepLDA/blob/master/code/objectives.py theano version).\r\nIn order to solve a gep, in theano we use T.slinalg.eigvalsh to compute eigenvalues\r\nevals_t = T.slinalg.eigvalsh(Sb_t, St_t)\r\n\r\nTensorflow doesn't provide something similar and approximation are very unstable.\r\nI tried both to solve the gep Aei = Bviei\r\ncho = tf.cholesky(B_t + tf.eye(dim) * r ) \r\ninv_cho = tf.matrix_inverse(cho)\r\nevals_t = tf.linalg.eigvalsh(inv_cho * A * tf.transpose(inv_cho)) \r\n\r\nevals_t =tf.linalg.eigvalsh(tf.matrix_inverse(B) * A )\r\nIf you have a solution, please tell me :)\r\n\r\n\r\n"}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/18065", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/18065/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/18065/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/18065/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/18065", "id": 309533816, "node_id": "MDU6SXNzdWUzMDk1MzM4MTY=", "number": 18065, "title": "Feature request : warning for feeding unused values", "user": {"login": "yurijvolkov", "id": 16668275, "node_id": "MDQ6VXNlcjE2NjY4Mjc1", "avatar_url": "https://avatars1.githubusercontent.com/u/16668275?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yurijvolkov", "html_url": "https://github.com/yurijvolkov", "followers_url": "https://api.github.com/users/yurijvolkov/followers", "following_url": "https://api.github.com/users/yurijvolkov/following{/other_user}", "gists_url": "https://api.github.com/users/yurijvolkov/gists{/gist_id}", "starred_url": "https://api.github.com/users/yurijvolkov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yurijvolkov/subscriptions", "organizations_url": "https://api.github.com/users/yurijvolkov/orgs", "repos_url": "https://api.github.com/users/yurijvolkov/repos", "events_url": "https://api.github.com/users/yurijvolkov/events{/privacy}", "received_events_url": "https://api.github.com/users/yurijvolkov/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": {"login": "shivaniag", "id": 16565716, "node_id": "MDQ6VXNlcjE2NTY1NzE2", "avatar_url": "https://avatars1.githubusercontent.com/u/16565716?v=4", "gravatar_id": "", "url": "https://api.github.com/users/shivaniag", "html_url": "https://github.com/shivaniag", "followers_url": "https://api.github.com/users/shivaniag/followers", "following_url": "https://api.github.com/users/shivaniag/following{/other_user}", "gists_url": "https://api.github.com/users/shivaniag/gists{/gist_id}", "starred_url": "https://api.github.com/users/shivaniag/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/shivaniag/subscriptions", "organizations_url": "https://api.github.com/users/shivaniag/orgs", "repos_url": "https://api.github.com/users/shivaniag/repos", "events_url": "https://api.github.com/users/shivaniag/events{/privacy}", "received_events_url": "https://api.github.com/users/shivaniag/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "shivaniag", "id": 16565716, "node_id": "MDQ6VXNlcjE2NTY1NzE2", "avatar_url": "https://avatars1.githubusercontent.com/u/16565716?v=4", "gravatar_id": "", "url": "https://api.github.com/users/shivaniag", "html_url": "https://github.com/shivaniag", "followers_url": "https://api.github.com/users/shivaniag/followers", "following_url": "https://api.github.com/users/shivaniag/following{/other_user}", "gists_url": "https://api.github.com/users/shivaniag/gists{/gist_id}", "starred_url": "https://api.github.com/users/shivaniag/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/shivaniag/subscriptions", "organizations_url": "https://api.github.com/users/shivaniag/orgs", "repos_url": "https://api.github.com/users/shivaniag/repos", "events_url": "https://api.github.com/users/shivaniag/events{/privacy}", "received_events_url": "https://api.github.com/users/shivaniag/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 0, "created_at": "2018-03-28T21:12:45Z", "updated_at": "2018-12-14T18:51:51Z", "closed_at": null, "author_association": "NONE", "body": "\r\n### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**: custom\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**: Ubuntu 16.04.4 LTS\r\n- **TensorFlow installed from (source or binary)**: binary\r\n- **TensorFlow version (use command below)**: 1.4.1\r\n- **Python version**:  3.6.3\r\n- **Bazel version (if compiling from source)**: N/A\r\n- **GCC/Compiler version (if compiling from source)**: N/A\r\n- **CUDA/cuDNN version**: N/A\r\n- **GPU model and memory**: N/A\r\n- **Exact command to reproduce**: N/A\r\n\r\n\r\n### Describe the problem\r\n(It's not a bug. Just a feature discussion)\r\n\r\nProbably it would be reasonable to add some kind of warnings for situations when the value you feed, is never used within computation?\r\n\r\nExample:\r\n\r\n```\r\na = tf.abs(2)\r\nb = 2 * a\r\n#a = tf.identity(a, name='a')\r\n\r\nwith tf.Session() as sess:\r\n    print(sess.run([a, b], feed_dict={a: 3}))\r\n```\r\nIn this everything works fine.  However if 3d line will be uncommented the feeded value will be useless. It can lead to hard debugging.\r\nProbably it would we useful to add some warnings?\r\n\r\nThanx\r\n"}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/18058", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/18058/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/18058/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/18058/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/18058", "id": 309461083, "node_id": "MDU6SXNzdWUzMDk0NjEwODM=", "number": 18058, "title": "Large multinomial sampling on GPU causes OOM", "user": {"login": "mbarnes1", "id": 6663112, "node_id": "MDQ6VXNlcjY2NjMxMTI=", "avatar_url": "https://avatars3.githubusercontent.com/u/6663112?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mbarnes1", "html_url": "https://github.com/mbarnes1", "followers_url": "https://api.github.com/users/mbarnes1/followers", "following_url": "https://api.github.com/users/mbarnes1/following{/other_user}", "gists_url": "https://api.github.com/users/mbarnes1/gists{/gist_id}", "starred_url": "https://api.github.com/users/mbarnes1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mbarnes1/subscriptions", "organizations_url": "https://api.github.com/users/mbarnes1/orgs", "repos_url": "https://api.github.com/users/mbarnes1/repos", "events_url": "https://api.github.com/users/mbarnes1/events{/privacy}", "received_events_url": "https://api.github.com/users/mbarnes1/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": {"login": "cy89", "id": 29663194, "node_id": "MDQ6VXNlcjI5NjYzMTk0", "avatar_url": "https://avatars0.githubusercontent.com/u/29663194?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cy89", "html_url": "https://github.com/cy89", "followers_url": "https://api.github.com/users/cy89/followers", "following_url": "https://api.github.com/users/cy89/following{/other_user}", "gists_url": "https://api.github.com/users/cy89/gists{/gist_id}", "starred_url": "https://api.github.com/users/cy89/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cy89/subscriptions", "organizations_url": "https://api.github.com/users/cy89/orgs", "repos_url": "https://api.github.com/users/cy89/repos", "events_url": "https://api.github.com/users/cy89/events{/privacy}", "received_events_url": "https://api.github.com/users/cy89/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "cy89", "id": 29663194, "node_id": "MDQ6VXNlcjI5NjYzMTk0", "avatar_url": "https://avatars0.githubusercontent.com/u/29663194?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cy89", "html_url": "https://github.com/cy89", "followers_url": "https://api.github.com/users/cy89/followers", "following_url": "https://api.github.com/users/cy89/following{/other_user}", "gists_url": "https://api.github.com/users/cy89/gists{/gist_id}", "starred_url": "https://api.github.com/users/cy89/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cy89/subscriptions", "organizations_url": "https://api.github.com/users/cy89/orgs", "repos_url": "https://api.github.com/users/cy89/repos", "events_url": "https://api.github.com/users/cy89/events{/privacy}", "received_events_url": "https://api.github.com/users/cy89/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 8, "created_at": "2018-03-28T17:31:40Z", "updated_at": "2018-12-11T18:51:11Z", "closed_at": null, "author_association": "NONE", "body": "Sampling m samples from `tf.multinomial` with support n allocates an unnecessarily large n x m tensor when running on a GPU. For large n and m, this causes out of memory errors. It should be possible to sample from a multinomial distribution without allocating such a large tensor (output tensor is only b x m, where b is the batch size).\r\n\r\n### Example and traceback:\r\n```\r\nsample_indices = tf.multinomial(tf.ones([1, 1e6]), 10000, output_dtype=tf.int32)  # sample_indices has shape [1 x 1e4]\r\nwith tf.Session() as sess:\r\n    output = sess.run([sample_indices])\r\n```\r\n\r\nTraceback:\r\n\r\n> ResourceExhaustedError (see above for traceback): OOM when allocating tensor with shape[1,10000,1000000] and type float on /job:localhost/replica:0/task:0/device:GPU:0 by allocator GPU_0_bfc\r\n         [[Node: multinomial/Multinomial = Multinomial[T=DT_FLOAT, output_dtype=DT_INT32, seed=0, seed2=0,\r\n_device=\"/job:localhost/replica:0/task:0/device:GPU:0\"](ones, multinomial/Multinomial/num_samples)]]\r\n\r\n\r\n------------------------\r\n\r\n### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**: No\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**:  Springdale LInux 7.4 (Redhat)\r\n- **TensorFlow installed from (source or binary)**: Binary\r\n- **TensorFlow version (use command below)**: 1.6.0\r\n- **Python version**: 2.7.5\r\n- **Bazel version (if compiling from source)**: N/A\r\n- **GCC/Compiler version (if compiling from source)**: N/A\r\n- **CUDA/cuDNN version**: CUDA 9.0, cuDNN 7.0.5\r\n- **GPU model and memory**: TITAN X (Pascal) 12GB\r\n- **Exact command to reproduce**: (see above)"}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/18037", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/18037/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/18037/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/18037/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/18037", "id": 309198849, "node_id": "MDU6SXNzdWUzMDkxOTg4NDk=", "number": 18037, "title": "tf.sparse_tensor_dense_matmul makes small errors with tf.float32 matrices on GPU", "user": {"login": "Palazor", "id": 16420775, "node_id": "MDQ6VXNlcjE2NDIwNzc1", "avatar_url": "https://avatars2.githubusercontent.com/u/16420775?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Palazor", "html_url": "https://github.com/Palazor", "followers_url": "https://api.github.com/users/Palazor/followers", "following_url": "https://api.github.com/users/Palazor/following{/other_user}", "gists_url": "https://api.github.com/users/Palazor/gists{/gist_id}", "starred_url": "https://api.github.com/users/Palazor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Palazor/subscriptions", "organizations_url": "https://api.github.com/users/Palazor/orgs", "repos_url": "https://api.github.com/users/Palazor/repos", "events_url": "https://api.github.com/users/Palazor/events{/privacy}", "received_events_url": "https://api.github.com/users/Palazor/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": {"login": "chsigg", "id": 7523982, "node_id": "MDQ6VXNlcjc1MjM5ODI=", "avatar_url": "https://avatars3.githubusercontent.com/u/7523982?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chsigg", "html_url": "https://github.com/chsigg", "followers_url": "https://api.github.com/users/chsigg/followers", "following_url": "https://api.github.com/users/chsigg/following{/other_user}", "gists_url": "https://api.github.com/users/chsigg/gists{/gist_id}", "starred_url": "https://api.github.com/users/chsigg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chsigg/subscriptions", "organizations_url": "https://api.github.com/users/chsigg/orgs", "repos_url": "https://api.github.com/users/chsigg/repos", "events_url": "https://api.github.com/users/chsigg/events{/privacy}", "received_events_url": "https://api.github.com/users/chsigg/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "chsigg", "id": 7523982, "node_id": "MDQ6VXNlcjc1MjM5ODI=", "avatar_url": "https://avatars3.githubusercontent.com/u/7523982?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chsigg", "html_url": "https://github.com/chsigg", "followers_url": "https://api.github.com/users/chsigg/followers", "following_url": "https://api.github.com/users/chsigg/following{/other_user}", "gists_url": "https://api.github.com/users/chsigg/gists{/gist_id}", "starred_url": "https://api.github.com/users/chsigg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chsigg/subscriptions", "organizations_url": "https://api.github.com/users/chsigg/orgs", "repos_url": "https://api.github.com/users/chsigg/repos", "events_url": "https://api.github.com/users/chsigg/events{/privacy}", "received_events_url": "https://api.github.com/users/chsigg/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 4, "created_at": "2018-03-28T02:28:30Z", "updated_at": "2018-12-19T18:44:52Z", "closed_at": null, "author_association": "NONE", "body": "-----------------------\r\n\r\n### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**: Yes, simple short code\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**: both Ubuntu 14.04 / Centos 7\r\n- **TensorFlow installed from (source or binary)**: pip binary on Ubuntu, source  on Centos\r\n- **TensorFlow version (use command below)**: 1.4.1\r\n- **Python version**: 3.5.2\r\n- **Bazel version (if compiling from source)**: release 0.8.1\r\n- **GCC/Compiler version (if compiling from source)**: 4.8.5\r\n- **CUDA/cuDNN version**: 6.0.21\r\n- **GPU model and memory**: GTX 750 / GTX 1080\r\n- **Exact command to reproduce**: tf.sparse_tensor_dense_matmul\r\n\r\n### Describe the problem\r\n1. Given a sparse tensor sp and a dense tensor mat, both of tf.float32,\r\n2. Compute thier product with tf.sparse_tensor_dense_matmul(sp, mat),\r\n3. The product varies slightly.\r\n\r\n### Source code / logs\r\n``` python\r\nimport tensorflow as tf\r\nimport numpy as np\r\n\r\ns = tf.Session()\r\n\r\nnum = 10\r\ndim = 10\r\ntotal_out = 100\r\n\r\nindices = [\r\n    [1, 0],\r\n    [2, 0],\r\n    [3, 0],\r\n    [5, 0], [5, 1], [5, 2],\r\n    [6, 0], [6, 1], [6, 2], [6, 3], [6, 4], [6, 7],\r\n    [7, 0], [7, 1], [7, 2], [7, 7], [7, 8],\r\n    [8, 0],\r\n    [9, 0], [9, 1], [9, 2], [9, 7]\r\n]\r\nvalues = np.array([1.0] * len(indices), np.float32)\r\nfeature = tf.SparseTensor(indices, values, [tf.cast(num, tf.int64), tf.cast(dim, tf.int64)])\r\n\r\ndense = tf.sparse_tensor_to_dense(feature, validate_indices=False)\r\nmat = tf.contrib.stateless.stateless_random_uniform([dim, total_out], seed=[1, 2], dtype=tf.float32)\r\nprod = tf.sparse_tensor_dense_matmul(feature, mat)\r\n# prod2 = tf.sparse_matmul(dense, mat, False, True, True, False, name='cross_sum')\r\n\r\nT = ['dense', 'mat', 'prod']\r\nresults = s.run([dense, mat, prod])\r\n\r\ncomp0 = []\r\ncomp1 = []\r\nfor i, r in enumerate(results):\r\n    try:\r\n        comp0.append(np.sum(np.load('npy_{}.npy'.format(T[i]))) - np.sum(r))\r\n        comp1.append(np.load('npy_{}.npy'.format(T[i])) - r)\r\n    except:\r\n        np.save('npy_{}.npy'.format(T[i]), r)\r\nfor i in range(len(comp0)):\r\n    print(T[i])\r\n    print(comp0[i])\r\n    print(comp1[i])\r\n    print('\\n')\r\n```\r\nRun the code several times, you will see that the product will vary slightly. like this:\r\n```\r\ndense\r\n0.0\r\n[[0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]\r\n [0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]\r\n [0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]\r\n [0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]\r\n [0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]\r\n [0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]\r\n [0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]\r\n [0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]\r\n [0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]\r\n [0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]]\r\n\r\n\r\nmat\r\n0.0\r\n[[0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.\r\n  0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.\r\n  0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.\r\n  0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.\r\n  0. 0. 0. 0.]\r\n...\r\n [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.\r\n  0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.\r\n  0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.\r\n  0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.\r\n  0. 0. 0. 0.]]\r\n\r\n\r\nprod\r\n0.0\r\n[[ 0.0000000e+00  0.0000000e+00  0.0000000e+00  0.0000000e+00\r\n   2.3841858e-07 -4.7683716e-07  0.0000000e+00  0.0000000e+00\r\n   0.0000000e+00  0.0000000e+00  0.0000000e+00  0.0000000e+00\r\n  -4.7683716e-07  0.0000000e+00  0.0000000e+00  0.0000000e+00\r\n   2.3841858e-07  0.0000000e+00  0.0000000e+00  0.0000000e+00\r\n   0.0000000e+00  0.0000000e+00  0.0000000e+00  0.0000000e+00\r\n   0.0000000e+00  4.7683716e-07  0.0000000e+00  0.0000000e+00\r\n   0.0000000e+00  0.0000000e+00  0.0000000e+00 -2.3841858e-07\r\n   0.0000000e+00  0.0000000e+00  0.0000000e+00  0.0000000e+00\r\n   0.0000000e+00  0.0000000e+00  4.7683716e-07  0.0000000e+00\r\n   0.0000000e+00  0.0000000e+00  0.0000000e+00  0.0000000e+00\r\n   0.0000000e+00  2.3841858e-07  2.3841858e-07  0.0000000e+00\r\n   0.0000000e+00  2.3841858e-07  0.0000000e+00  0.0000000e+00\r\n   0.0000000e+00  0.0000000e+00  0.0000000e+00  2.3841858e-07\r\n  -2.3841858e-07  0.0000000e+00  0.0000000e+00  0.0000000e+00\r\n   0.0000000e+00  0.0000000e+00  0.0000000e+00  0.0000000e+00\r\n   0.0000000e+00  0.0000000e+00  0.0000000e+00  0.0000000e+00\r\n  -2.3841858e-07  0.0000000e+00  0.0000000e+00  0.0000000e+00\r\n   0.0000000e+00  0.0000000e+00 -2.3841858e-07  0.0000000e+00\r\n  -2.3841858e-07  4.7683716e-07  0.0000000e+00  0.0000000e+00\r\n   0.0000000e+00 -2.3841858e-07  2.3841858e-07  0.0000000e+00\r\n   2.3841858e-07  0.0000000e+00  4.7683716e-07  2.3841858e-07\r\n   0.0000000e+00  4.7683716e-07  2.3841858e-07  4.7683716e-07\r\n   0.0000000e+00  0.0000000e+00  0.0000000e+00  2.3841858e-07\r\n   0.0000000e+00  0.0000000e+00  0.0000000e+00  0.0000000e+00]\r\n [ 0.0000000e+00  0.0000000e+00  0.0000000e+00  2.3841858e-07\r\n   2.3841858e-07  0.0000000e+00  0.0000000e+00  0.0000000e+00\r\n   0.0000000e+00  0.0000000e+00  2.3841858e-07  0.0000000e+00\r\n   0.0000000e+00 -2.3841858e-07  2.3841858e-07  0.0000000e+00\r\n   0.0000000e+00 -2.3841858e-07  0.0000000e+00 -2.3841858e-07\r\n   0.0000000e+00  2.3841858e-07  0.0000000e+00  0.0000000e+00\r\n   0.0000000e+00  0.0000000e+00  0.0000000e+00 -2.3841858e-07\r\n   0.0000000e+00  0.0000000e+00  0.0000000e+00  4.7683716e-07\r\n   0.0000000e+00  0.0000000e+00  0.0000000e+00  0.0000000e+00\r\n   0.0000000e+00  0.0000000e+00  0.0000000e+00  0.0000000e+00\r\n   0.0000000e+00  2.3841858e-07  0.0000000e+00  0.0000000e+00\r\n   0.0000000e+00  0.0000000e+00  0.0000000e+00  0.0000000e+00\r\n   0.0000000e+00 -2.3841858e-07  0.0000000e+00  0.0000000e+00\r\n   0.0000000e+00 -4.7683716e-07  0.0000000e+00  0.0000000e+00\r\n   0.0000000e+00  0.0000000e+00  0.0000000e+00  0.0000000e+00\r\n   0.0000000e+00  0.0000000e+00  0.0000000e+00  0.0000000e+00\r\n   0.0000000e+00  0.0000000e+00  0.0000000e+00  0.0000000e+00\r\n   0.0000000e+00  0.0000000e+00  0.0000000e+00  0.0000000e+00\r\n   0.0000000e+00  0.0000000e+00  0.0000000e+00  0.0000000e+00\r\n   0.0000000e+00  0.0000000e+00  0.0000000e+00  0.0000000e+00\r\n   0.0000000e+00  0.0000000e+00  0.0000000e+00  0.0000000e+00\r\n   0.0000000e+00  0.0000000e+00  0.0000000e+00  0.0000000e+00\r\n   0.0000000e+00  0.0000000e+00  0.0000000e+00  0.0000000e+00\r\n   0.0000000e+00  0.0000000e+00  0.0000000e+00  0.0000000e+00\r\n   0.0000000e+00  0.0000000e+00  0.0000000e+00  2.3841858e-07]\r\n [ 0.0000000e+00  0.0000000e+00  0.0000000e+00  0.0000000e+00\r\n   0.0000000e+00  0.0000000e+00  0.0000000e+00  0.0000000e+00\r\n   0.0000000e+00  0.0000000e+00  0.0000000e+00  0.0000000e+00\r\n   0.0000000e+00  0.0000000e+00  0.0000000e+00  0.0000000e+00\r\n   0.0000000e+00  0.0000000e+00  0.0000000e+00  0.0000000e+00\r\n   0.0000000e+00  0.0000000e+00  0.0000000e+00  0.0000000e+00\r\n   0.0000000e+00  0.0000000e+00  0.0000000e+00  0.0000000e+00\r\n   0.0000000e+00  0.0000000e+00  0.0000000e+00  0.0000000e+00\r\n   0.0000000e+00  0.0000000e+00  0.0000000e+00  0.0000000e+00\r\n   0.0000000e+00  0.0000000e+00  0.0000000e+00  0.0000000e+00\r\n   0.0000000e+00  0.0000000e+00  0.0000000e+00  0.0000000e+00\r\n   0.0000000e+00  0.0000000e+00  0.0000000e+00  0.0000000e+00\r\n   0.0000000e+00  0.0000000e+00  0.0000000e+00  0.0000000e+00\r\n   0.0000000e+00  0.0000000e+00  0.0000000e+00  0.0000000e+00\r\n   0.0000000e+00  0.0000000e+00  0.0000000e+00  0.0000000e+00\r\n   0.0000000e+00  0.0000000e+00  0.0000000e+00  0.0000000e+00\r\n   0.0000000e+00  0.0000000e+00  0.0000000e+00  0.0000000e+00\r\n   0.0000000e+00  0.0000000e+00  0.0000000e+00  0.0000000e+00\r\n   0.0000000e+00  0.0000000e+00  0.0000000e+00  0.0000000e+00\r\n   0.0000000e+00  0.0000000e+00  0.0000000e+00  0.0000000e+00\r\n   0.0000000e+00  0.0000000e+00  0.0000000e+00  0.0000000e+00\r\n   0.0000000e+00  0.0000000e+00  0.0000000e+00  0.0000000e+00\r\n   0.0000000e+00  0.0000000e+00  0.0000000e+00  0.0000000e+00\r\n   0.0000000e+00  0.0000000e+00  0.0000000e+00  0.0000000e+00\r\n   0.0000000e+00  0.0000000e+00  0.0000000e+00  0.0000000e+00]\r\n...\r\n]\r\n```\r\nThis only happens on GPU with float32. It should be a bug I guess.\r\n"}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/17995", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/17995/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/17995/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/17995/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/17995", "id": 308414616, "node_id": "MDU6SXNzdWUzMDg0MTQ2MTY=", "number": 17995, "title": "tf.igamma (lower regularized incomplete Gamma function) returns the incorrect derivative", "user": {"login": "erikbern", "id": 1027979, "node_id": "MDQ6VXNlcjEwMjc5Nzk=", "avatar_url": "https://avatars2.githubusercontent.com/u/1027979?v=4", "gravatar_id": "", "url": "https://api.github.com/users/erikbern", "html_url": "https://github.com/erikbern", "followers_url": "https://api.github.com/users/erikbern/followers", "following_url": "https://api.github.com/users/erikbern/following{/other_user}", "gists_url": "https://api.github.com/users/erikbern/gists{/gist_id}", "starred_url": "https://api.github.com/users/erikbern/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/erikbern/subscriptions", "organizations_url": "https://api.github.com/users/erikbern/orgs", "repos_url": "https://api.github.com/users/erikbern/repos", "events_url": "https://api.github.com/users/erikbern/events{/privacy}", "received_events_url": "https://api.github.com/users/erikbern/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": {"login": "tatatodd", "id": 5453737, "node_id": "MDQ6VXNlcjU0NTM3Mzc=", "avatar_url": "https://avatars3.githubusercontent.com/u/5453737?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tatatodd", "html_url": "https://github.com/tatatodd", "followers_url": "https://api.github.com/users/tatatodd/followers", "following_url": "https://api.github.com/users/tatatodd/following{/other_user}", "gists_url": "https://api.github.com/users/tatatodd/gists{/gist_id}", "starred_url": "https://api.github.com/users/tatatodd/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tatatodd/subscriptions", "organizations_url": "https://api.github.com/users/tatatodd/orgs", "repos_url": "https://api.github.com/users/tatatodd/repos", "events_url": "https://api.github.com/users/tatatodd/events{/privacy}", "received_events_url": "https://api.github.com/users/tatatodd/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "tatatodd", "id": 5453737, "node_id": "MDQ6VXNlcjU0NTM3Mzc=", "avatar_url": "https://avatars3.githubusercontent.com/u/5453737?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tatatodd", "html_url": "https://github.com/tatatodd", "followers_url": "https://api.github.com/users/tatatodd/followers", "following_url": "https://api.github.com/users/tatatodd/following{/other_user}", "gists_url": "https://api.github.com/users/tatatodd/gists{/gist_id}", "starred_url": "https://api.github.com/users/tatatodd/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tatatodd/subscriptions", "organizations_url": "https://api.github.com/users/tatatodd/orgs", "repos_url": "https://api.github.com/users/tatatodd/repos", "events_url": "https://api.github.com/users/tatatodd/events{/privacy}", "received_events_url": "https://api.github.com/users/tatatodd/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 4, "created_at": "2018-03-26T02:32:59Z", "updated_at": "2018-12-19T18:44:48Z", "closed_at": null, "author_association": "NONE", "body": "### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**: yes\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**: Mac OS X 10.11.6\r\n- **TensorFlow installed from (source or binary)**: binary (pypi)\r\n- **TensorFlow version (use command below)**: v1.6.0-0-gd2e24b6039\r\n- **Python version**: 3.6\r\n- **Bazel version**: using a precompiled version, not sure\r\n- **CUDA/cuDNN version**: not using a GPU\r\n- **GPU model and memory**: not using a GPU\r\n- **Exact command to reproduce**: `python igamma_test.py`\r\n\r\n### Describe the problem\r\n\r\n`tf.igamma`, which is the lower regularized incomplete Gamma function, returns an incorrect derivative with respect to `a`\r\n\r\nThis is probably very low down on the list of things to fix, but I wanted to highlight it since I spent something like 5 hours trying to understand why my model wasn't converging. I was fitting a Gamma distribution, and deep into the code it turns out that `tf.igamma` doesn't return the right derivative.\r\n\r\nI suspect the derivative wrt `a` isn't supported, but I would have much rather seen an exception being thrown. \r\n\r\nMy workaround ended up being not fitting `a` with gradient descent, but instead just perturbing it by epsilon (luckily I only had one single value that I tried to fit)\r\n\r\nFiling this issue mostly in the hope that anyone in the future doesn't waste the same amount of time that I spent.\r\n\r\n### Source code / logs\r\n\r\n```\r\na = tf.placeholder(dtype=tf.float32, shape=[None])\r\nx = tf.placeholder(dtype=tf.float32, shape=[None])\r\ny = tf.igamma(a, x)\r\ny_grad_a = tf.gradients(y, a)  # returns None, should return a tensor\r\ny_grad_x = tf.gradients(y, x)  # returns a tensor\r\n```"}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/17980", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/17980/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/17980/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/17980/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/17980", "id": 308322191, "node_id": "MDU6SXNzdWUzMDgzMjIxOTE=", "number": 17980, "title": "tf.einsum doesn't perform common subgraph elimination", "user": {"login": "matt-chan", "id": 1048117, "node_id": "MDQ6VXNlcjEwNDgxMTc=", "avatar_url": "https://avatars3.githubusercontent.com/u/1048117?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matt-chan", "html_url": "https://github.com/matt-chan", "followers_url": "https://api.github.com/users/matt-chan/followers", "following_url": "https://api.github.com/users/matt-chan/following{/other_user}", "gists_url": "https://api.github.com/users/matt-chan/gists{/gist_id}", "starred_url": "https://api.github.com/users/matt-chan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matt-chan/subscriptions", "organizations_url": "https://api.github.com/users/matt-chan/orgs", "repos_url": "https://api.github.com/users/matt-chan/repos", "events_url": "https://api.github.com/users/matt-chan/events{/privacy}", "received_events_url": "https://api.github.com/users/matt-chan/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 299643928, "node_id": "MDU6TGFiZWwyOTk2NDM5Mjg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:contributions%20welcome", "name": "stat:contributions welcome", "color": "f4b400", "default": false, "description": ""}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2018-03-25T04:48:53Z", "updated_at": "2018-10-15T21:36:33Z", "closed_at": null, "author_association": "NONE", "body": "### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**: yes\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**: RHEL 7.4\r\n- **TensorFlow installed from (source or binary)**: Binary (pip)\r\n- **TensorFlow version (use command below)**: 'unknown' 1.6.0\r\n- **Python version**: 3.6\r\n- **Bazel version (if compiling from source)**:\r\n- **GCC/Compiler version (if compiling from source)**:\r\n- **CUDA/cuDNN version**: N/A\r\n- **GPU model and memory**: N/A\r\n- **Exact command to reproduce**: N/A\r\n\r\n\r\n### Describe the problem\r\nWhen I inspect the computation graph in tensorboard, there are two separate calls to einsum and no subgraphs (ie calls to matmul) are shared. I would have expected the \"jb,abcd\" tensors to be contracted once, then contracted with (ia + ai) afterwards. \r\n\r\n### Source code / logs\r\n```\r\ntf_eri = tf.constant(np.random.random([10,10,10,10])\r\ntf_ao = tf.constant(np.random.random([10,10])\r\n\r\ntf_foo = tf.einsum(\"ia,jb,abcd\", tf_ao, tf_ao, tf_eri)\r\ntf_bar = tf.einsum(\"ai,jb,abcd\", tf_ao, tf_ao, tf_eri)\r\ntf_res = tf_foo + tf_bar\r\n```\r\n\r\n![graph](https://user-images.githubusercontent.com/1048117/37871855-3a6564d0-2fc6-11e8-961b-a34d14175e50.png)\r\n"}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/17978", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/17978/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/17978/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/17978/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/17978", "id": 308319931, "node_id": "MDU6SXNzdWUzMDgzMTk5MzE=", "number": 17978, "title": "Tensorflow not working properly in Python sub-interperters", "user": {"login": "Lorsh", "id": 14949436, "node_id": "MDQ6VXNlcjE0OTQ5NDM2", "avatar_url": "https://avatars1.githubusercontent.com/u/14949436?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Lorsh", "html_url": "https://github.com/Lorsh", "followers_url": "https://api.github.com/users/Lorsh/followers", "following_url": "https://api.github.com/users/Lorsh/following{/other_user}", "gists_url": "https://api.github.com/users/Lorsh/gists{/gist_id}", "starred_url": "https://api.github.com/users/Lorsh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Lorsh/subscriptions", "organizations_url": "https://api.github.com/users/Lorsh/orgs", "repos_url": "https://api.github.com/users/Lorsh/repos", "events_url": "https://api.github.com/users/Lorsh/events{/privacy}", "received_events_url": "https://api.github.com/users/Lorsh/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": {"login": "shivaniag", "id": 16565716, "node_id": "MDQ6VXNlcjE2NTY1NzE2", "avatar_url": "https://avatars1.githubusercontent.com/u/16565716?v=4", "gravatar_id": "", "url": "https://api.github.com/users/shivaniag", "html_url": "https://github.com/shivaniag", "followers_url": "https://api.github.com/users/shivaniag/followers", "following_url": "https://api.github.com/users/shivaniag/following{/other_user}", "gists_url": "https://api.github.com/users/shivaniag/gists{/gist_id}", "starred_url": "https://api.github.com/users/shivaniag/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/shivaniag/subscriptions", "organizations_url": "https://api.github.com/users/shivaniag/orgs", "repos_url": "https://api.github.com/users/shivaniag/repos", "events_url": "https://api.github.com/users/shivaniag/events{/privacy}", "received_events_url": "https://api.github.com/users/shivaniag/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "shivaniag", "id": 16565716, "node_id": "MDQ6VXNlcjE2NTY1NzE2", "avatar_url": "https://avatars1.githubusercontent.com/u/16565716?v=4", "gravatar_id": "", "url": "https://api.github.com/users/shivaniag", "html_url": "https://github.com/shivaniag", "followers_url": "https://api.github.com/users/shivaniag/followers", "following_url": "https://api.github.com/users/shivaniag/following{/other_user}", "gists_url": "https://api.github.com/users/shivaniag/gists{/gist_id}", "starred_url": "https://api.github.com/users/shivaniag/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/shivaniag/subscriptions", "organizations_url": "https://api.github.com/users/shivaniag/orgs", "repos_url": "https://api.github.com/users/shivaniag/repos", "events_url": "https://api.github.com/users/shivaniag/events{/privacy}", "received_events_url": "https://api.github.com/users/shivaniag/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 3, "created_at": "2018-03-25T03:52:03Z", "updated_at": "2018-12-19T18:44:43Z", "closed_at": null, "author_association": "NONE", "body": "### System information\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**: Windows 10 64 bit Professional\r\n- **TensorFlow installed from (source or binary)**: binary\r\n- **TensorFlow version (use command below)**: 1.5.0\r\n- **Python version**:  3.6.3\r\n- **Bazel version (if compiling from source)**: N/A\r\n- **GCC/Compiler version (if compiling from source)**: N/A\r\n- **CUDA/cuDNN version**: None\r\n- **GPU model and memory**: None\r\n- **Exact command to reproduce**: import tensorflow as tf on a Python wsgi application written in Flask\r\n- **Have I written custom code**: N/A\r\n\r\n### Describe the problem\r\n\r\nThis is a follow-up to a problem that I described in a stackoverflow post today:\r\nhttps://stackoverflow.com/questions/49471240/slow-page-loading-on-apache-when-using-flask/49471633#49471633\r\n\r\nThe summary of the issue is that when trying to import tensorflow in a web application written in Flask and hosted on Apache, the page never loads up because of the tensorflow import. \r\n\r\nFrom the reply, they suggested that Tensorflow, being a C extension does not yet provide proper support to be run on python sub-interpreters. \r\n\r\nThey also suggested a workaround that worked for me, which was to force wsgi application to run on the primary python process.\r\n\r\nI admit that I don't really understand the scope of the problem, but I thought it might be worth mentioning this issue and understand if it is something that could be/should be fixed.\r\n\r\n"}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/17974", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/17974/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/17974/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/17974/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/17974", "id": 308296648, "node_id": "MDU6SXNzdWUzMDgyOTY2NDg=", "number": 17974, "title": "QuantizedConv2D dimension mismatch", "user": {"login": "elbaro", "id": 1851290, "node_id": "MDQ6VXNlcjE4NTEyOTA=", "avatar_url": "https://avatars3.githubusercontent.com/u/1851290?v=4", "gravatar_id": "", "url": "https://api.github.com/users/elbaro", "html_url": "https://github.com/elbaro", "followers_url": "https://api.github.com/users/elbaro/followers", "following_url": "https://api.github.com/users/elbaro/following{/other_user}", "gists_url": "https://api.github.com/users/elbaro/gists{/gist_id}", "starred_url": "https://api.github.com/users/elbaro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/elbaro/subscriptions", "organizations_url": "https://api.github.com/users/elbaro/orgs", "repos_url": "https://api.github.com/users/elbaro/repos", "events_url": "https://api.github.com/users/elbaro/events{/privacy}", "received_events_url": "https://api.github.com/users/elbaro/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 404586594, "node_id": "MDU6TGFiZWw0MDQ1ODY1OTQ=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:awaiting%20tensorflower", "name": "stat:awaiting tensorflower", "color": "f4b400", "default": false, "description": ""}, {"id": 473172988, "node_id": "MDU6TGFiZWw0NzMxNzI5ODg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:bug", "name": "type:bug", "color": "159b2e", "default": false, "description": ""}], "state": "open", "locked": false, "assignee": {"login": "suharshs", "id": 1450614, "node_id": "MDQ6VXNlcjE0NTA2MTQ=", "avatar_url": "https://avatars1.githubusercontent.com/u/1450614?v=4", "gravatar_id": "", "url": "https://api.github.com/users/suharshs", "html_url": "https://github.com/suharshs", "followers_url": "https://api.github.com/users/suharshs/followers", "following_url": "https://api.github.com/users/suharshs/following{/other_user}", "gists_url": "https://api.github.com/users/suharshs/gists{/gist_id}", "starred_url": "https://api.github.com/users/suharshs/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/suharshs/subscriptions", "organizations_url": "https://api.github.com/users/suharshs/orgs", "repos_url": "https://api.github.com/users/suharshs/repos", "events_url": "https://api.github.com/users/suharshs/events{/privacy}", "received_events_url": "https://api.github.com/users/suharshs/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "suharshs", "id": 1450614, "node_id": "MDQ6VXNlcjE0NTA2MTQ=", "avatar_url": "https://avatars1.githubusercontent.com/u/1450614?v=4", "gravatar_id": "", "url": "https://api.github.com/users/suharshs", "html_url": "https://github.com/suharshs", "followers_url": "https://api.github.com/users/suharshs/followers", "following_url": "https://api.github.com/users/suharshs/following{/other_user}", "gists_url": "https://api.github.com/users/suharshs/gists{/gist_id}", "starred_url": "https://api.github.com/users/suharshs/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/suharshs/subscriptions", "organizations_url": "https://api.github.com/users/suharshs/orgs", "repos_url": "https://api.github.com/users/suharshs/repos", "events_url": "https://api.github.com/users/suharshs/events{/privacy}", "received_events_url": "https://api.github.com/users/suharshs/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 7, "created_at": "2018-03-24T20:33:23Z", "updated_at": "2019-04-16T02:01:47Z", "closed_at": null, "author_association": "NONE", "body": "### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**: Y\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**: Arch\r\n- **TensorFlow installed from (source or binary)**: binary / source for transform_graph\r\n- **TensorFlow version (use command below)**:  1.6\r\n- **Python version**:  3.6\r\n- **Bazel version (if compiling from source)**: 0.11.1-1\r\n- **GCC/Compiler version (if compiling from source)**:\r\n- **CUDA/cuDNN version**: 9.1\r\n- **GPU model and memory**: GTX  1060\r\n- **Exact command to reproduce**: \r\n\r\nI have a frozen model (frozen.pb) and followed the guideline to produce `quantized.pb`.\r\nInference with frozen.pb is ok but with quantized.pb it crashes on `tf.import_graph_def`.\r\n\r\nIf the quantized model expects the same shape of input/output, just replacing frozen.pb with quantized.pb should work.\r\n\r\n- I followed https://www.tensorflow.org/performance/quantization\r\n- quantized with this command:\r\n```\r\n../tensorflow/bazel-bin/tensorflow/tools/graph_transforms/transform_graph \\\r\n  --in_graph=graph_def/frozen.pb \\\r\n  --out_graph=graph_def/quantized.pb \\\r\n  --inputs=img \\\r\n  --outputs=out1,out2,out3,out4,out5,out6 \\\r\n  --transforms='add_default_attributes strip_unused_nodes(type=float, shape=\"1,3,256,256\")\r\n    remove_nodes(op=Identity, op=CheckNumerics) fold_constants(ignore_errors=true)\r\n    fold_batch_norms fold_old_batch_norms quantize_weights quantize_nodes\r\n    strip_unused_nodes sort_by_execution_order'\r\n```\r\n- backtrace:\r\n```py\r\nTraceback (Most recent call last):\r\n8    test_tf.py                                                                    <module>                --> detector = Detector()                              \r\n114  /home/user/project/net_tf.py                                             __init__                --> tf.import_graph_def(graph_def, name='')            \r\n432  /usr/lib/python3.6/site-packages/tensorflow/python/util/deprecation.py        new_func                --> return func(*args, **kwargs)                       \r\n663  /usr/lib/python3.6/site-packages/tensorflow/python/framework/importer.py      import_graph_def        --> ops.set_shapes_for_outputs(op)                     \r\n2501 /usr/lib/python3.6/site-packages/tensorflow/python/framework/ops.py           set_shapes_for_outputs  --> return _set_shapes_for_outputs(op)                 \r\n2474 /usr/lib/python3.6/site-packages/tensorflow/python/framework/ops.py           _set_shapes_for_outputs --> shapes = shape_func(op)                            \r\n2404 /usr/lib/python3.6/site-packages/tensorflow/python/framework/ops.py           call_with_requiring     --> return call_cpp_shape_fn(op, require_shape_fn=True)\r\n627  /usr/lib/python3.6/site-packages/tensorflow/python/framework/common_shapes.py call_cpp_shape_fn       --> require_shape_fn)                                  \r\n691  /usr/lib/python3.6/site-packages/tensorflow/python/framework/common_shapes.py _call_cpp_shape_fn_impl --> raise ValueError(err.message)                      \r\nValueError: Dimensions must be equal, but are 32 and 64 for 'conv2_1/Conv2D/eightbit' (op: 'QuantizedConv2D') with input shapes: [1,3,?,32], [3,3,64,128], [], [], [], [].\r\n> /usr/lib/python3.6/site-packages/tensorflow/python/framework/common_shapes.py(691)_call_cpp_shape_fn_impl()\r\n```\r\n\r\n- related model code:\r\n```py\r\n    max_pool = tf.contrib.layers.max_pool2d\r\n\r\n    x = tf.placeholder(tf.float32, shape=[1, 3, None, None], name='img')\r\n\r\n    x = relu(conv2d(x, 64, kernel_size=3, padding='same', data_format='channels_first', name='conv1_1'))\r\n    x = relu(conv2d(x, 64, kernel_size=3, padding='same', data_format='channels_first', name='conv1_2'))\r\n    x = max_pool(x, kernel_size=2, data_format='NCHW')\r\n\r\n    x = relu(conv2d(x, 128, kernel_size=3, padding='same', data_format='channels_first', name='conv2_1'))\r\n    x = relu(conv2d(x, 128, kernel_size=3, padding='same', data_format='channels_first', name='conv2_2'))\r\n    x = max_pool(x, kernel_size=2, data_format='NCHW')\r\n...\r\n```\r\n\r\nThis is fully convolutional, and the channel number goes from 3 to 64 and 128.\r\nSo 32 in the error message comes out of nowhere. (Is [1,3,?,32] a NCHW shape or conv2d kernel shape?)\r\n\r\nCan it be related to NCHW? Somehow max_pool halves the channel number instead of spatial dimensions, then it explains how 32 appears (64/2=32).\r\n"}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/17968", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/17968/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/17968/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/17968/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/17968", "id": 308234976, "node_id": "MDU6SXNzdWUzMDgyMzQ5NzY=", "number": 17968, "title": "tensorflow process hangs with use of cudnn_rnn", "user": {"login": "harryxu-yscz", "id": 25258500, "node_id": "MDQ6VXNlcjI1MjU4NTAw", "avatar_url": "https://avatars1.githubusercontent.com/u/25258500?v=4", "gravatar_id": "", "url": "https://api.github.com/users/harryxu-yscz", "html_url": "https://github.com/harryxu-yscz", "followers_url": "https://api.github.com/users/harryxu-yscz/followers", "following_url": "https://api.github.com/users/harryxu-yscz/following{/other_user}", "gists_url": "https://api.github.com/users/harryxu-yscz/gists{/gist_id}", "starred_url": "https://api.github.com/users/harryxu-yscz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/harryxu-yscz/subscriptions", "organizations_url": "https://api.github.com/users/harryxu-yscz/orgs", "repos_url": "https://api.github.com/users/harryxu-yscz/repos", "events_url": "https://api.github.com/users/harryxu-yscz/events{/privacy}", "received_events_url": "https://api.github.com/users/harryxu-yscz/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 473172988, "node_id": "MDU6TGFiZWw0NzMxNzI5ODg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:bug", "name": "type:bug", "color": "159b2e", "default": false, "description": ""}], "state": "open", "locked": false, "assignee": {"login": "protoget", "id": 5117188, "node_id": "MDQ6VXNlcjUxMTcxODg=", "avatar_url": "https://avatars1.githubusercontent.com/u/5117188?v=4", "gravatar_id": "", "url": "https://api.github.com/users/protoget", "html_url": "https://github.com/protoget", "followers_url": "https://api.github.com/users/protoget/followers", "following_url": "https://api.github.com/users/protoget/following{/other_user}", "gists_url": "https://api.github.com/users/protoget/gists{/gist_id}", "starred_url": "https://api.github.com/users/protoget/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/protoget/subscriptions", "organizations_url": "https://api.github.com/users/protoget/orgs", "repos_url": "https://api.github.com/users/protoget/repos", "events_url": "https://api.github.com/users/protoget/events{/privacy}", "received_events_url": "https://api.github.com/users/protoget/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "protoget", "id": 5117188, "node_id": "MDQ6VXNlcjUxMTcxODg=", "avatar_url": "https://avatars1.githubusercontent.com/u/5117188?v=4", "gravatar_id": "", "url": "https://api.github.com/users/protoget", "html_url": "https://github.com/protoget", "followers_url": "https://api.github.com/users/protoget/followers", "following_url": "https://api.github.com/users/protoget/following{/other_user}", "gists_url": "https://api.github.com/users/protoget/gists{/gist_id}", "starred_url": "https://api.github.com/users/protoget/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/protoget/subscriptions", "organizations_url": "https://api.github.com/users/protoget/orgs", "repos_url": "https://api.github.com/users/protoget/repos", "events_url": "https://api.github.com/users/protoget/events{/privacy}", "received_events_url": "https://api.github.com/users/protoget/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 5, "created_at": "2018-03-24T06:53:30Z", "updated_at": "2019-01-10T09:49:42Z", "closed_at": null, "author_association": "NONE", "body": "### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**: yes\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**: Ubuntu 16.04\r\n- **TensorFlow installed from (source or binary)**: binary\r\n- **TensorFlow version (use command below)**: v1.4.0-rc1-11-g130a514 1.4.0\r\n- **Python version**: 3.6.2\r\n- **Bazel version (if compiling from source)**:\r\n- **GCC/Compiler version (if compiling from source)**:\r\n- **CUDA/cuDNN version**: 8.0.61/6.0.21\r\n- **GPU model and memory**: 1080 8GB\r\n- **Exact command to reproduce**:\r\n\r\n### Describe the problem\r\nI ran a RNN model with tensorflow.contrib.cudnn_rnn.CudnnLSTM. After some epochs, the process hangs and never respond, even with `ctrl + c`. I also observed the volatile gpu-util fixes at 100% after the hang. This was not a problem when I ran the RNN with tensorflow.contrib.rnn.LSTMCell\r\n\r\n### Source code / logs\r\ncall stacks of all Threads is here: \r\nhttps://pastebin.com/sNxC6fWC\r\n\r\n"}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/17965", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/17965/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/17965/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/17965/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/17965", "id": 308186516, "node_id": "MDU6SXNzdWUzMDgxODY1MTY=", "number": 17965, "title": "TensorArray does not work inside `else` clause of `tf.cond`", "user": {"login": "iganichev", "id": 9123400, "node_id": "MDQ6VXNlcjkxMjM0MDA=", "avatar_url": "https://avatars2.githubusercontent.com/u/9123400?v=4", "gravatar_id": "", "url": "https://api.github.com/users/iganichev", "html_url": "https://github.com/iganichev", "followers_url": "https://api.github.com/users/iganichev/followers", "following_url": "https://api.github.com/users/iganichev/following{/other_user}", "gists_url": "https://api.github.com/users/iganichev/gists{/gist_id}", "starred_url": "https://api.github.com/users/iganichev/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/iganichev/subscriptions", "organizations_url": "https://api.github.com/users/iganichev/orgs", "repos_url": "https://api.github.com/users/iganichev/repos", "events_url": "https://api.github.com/users/iganichev/events{/privacy}", "received_events_url": "https://api.github.com/users/iganichev/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 404586594, "node_id": "MDU6TGFiZWw0MDQ1ODY1OTQ=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:awaiting%20tensorflower", "name": "stat:awaiting tensorflower", "color": "f4b400", "default": false, "description": ""}], "state": "open", "locked": false, "assignee": {"login": "skye", "id": 88808, "node_id": "MDQ6VXNlcjg4ODA4", "avatar_url": "https://avatars1.githubusercontent.com/u/88808?v=4", "gravatar_id": "", "url": "https://api.github.com/users/skye", "html_url": "https://github.com/skye", "followers_url": "https://api.github.com/users/skye/followers", "following_url": "https://api.github.com/users/skye/following{/other_user}", "gists_url": "https://api.github.com/users/skye/gists{/gist_id}", "starred_url": "https://api.github.com/users/skye/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/skye/subscriptions", "organizations_url": "https://api.github.com/users/skye/orgs", "repos_url": "https://api.github.com/users/skye/repos", "events_url": "https://api.github.com/users/skye/events{/privacy}", "received_events_url": "https://api.github.com/users/skye/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "skye", "id": 88808, "node_id": "MDQ6VXNlcjg4ODA4", "avatar_url": "https://avatars1.githubusercontent.com/u/88808?v=4", "gravatar_id": "", "url": "https://api.github.com/users/skye", "html_url": "https://github.com/skye", "followers_url": "https://api.github.com/users/skye/followers", "following_url": "https://api.github.com/users/skye/following{/other_user}", "gists_url": "https://api.github.com/users/skye/gists{/gist_id}", "starred_url": "https://api.github.com/users/skye/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/skye/subscriptions", "organizations_url": "https://api.github.com/users/skye/orgs", "repos_url": "https://api.github.com/users/skye/repos", "events_url": "https://api.github.com/users/skye/events{/privacy}", "received_events_url": "https://api.github.com/users/skye/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 3, "created_at": "2018-03-23T21:38:49Z", "updated_at": "2018-12-14T18:51:43Z", "closed_at": null, "author_association": "MEMBER", "body": "\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**: Custom code\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**: Linux \r\n- **TensorFlow installed from (source or binary)**: binary\r\n- **TensorFlow version (use command below)**: 'v1.5.0-0-g37aa430', '1.5.0'\r\n- **Python version**:  2.7\r\n- **Exact command to reproduce**:\r\n\r\n```python\r\n    import tensorflow as tf\r\n    def body(v):\r\n        m = tf.constant([v, v])\r\n        ta = tf.TensorArray(dtype=tf.float32, size=1)\r\n        t = ta.write(0, m)\r\n        return t\r\n\r\n    cond = tf.constant(False)\r\n    t = tf.cond(cond, true_fn=lambda : body(2.0), false_fn=lambda : body(3.0))\r\n\r\n    with tf.Session() as ss:\r\n        print(ss.run(t.stack()))\r\n```\r\n\r\nThe code above leads to the following error:\r\n\r\nTraceback (most recent call last):\r\n  File \"./array_cond.py\", line 69, in <module>\r\n    print(ss.run(t.stack()))\r\n  File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/client/session.py\", line 895, in run\r\n    run_metadata_ptr)\r\n  File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/client/session.py\", line 1128, in _run\r\n    feed_dict_tensor, options, run_metadata)\r\n  File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/client/session.py\", line 1344, in _do_run\r\n    options, run_metadata)\r\n  File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/client/session.py\", line 1363, in _do_call\r\n    raise type(e)(node_def, op, message)\r\ntensorflow.python.framework.errors_impl.InvalidArgumentError: Retval[0] does not have value\r\n\r\nInterestingly if `False` is replace with `True` it works as expected."}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/17933", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/17933/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/17933/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/17933/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/17933", "id": 307808207, "node_id": "MDU6SXNzdWUzMDc4MDgyMDc=", "number": 17933, "title": "gRPC debug URL scheme support for Windows", "user": {"login": "rvfischione", "id": 11468916, "node_id": "MDQ6VXNlcjExNDY4OTE2", "avatar_url": "https://avatars0.githubusercontent.com/u/11468916?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rvfischione", "html_url": "https://github.com/rvfischione", "followers_url": "https://api.github.com/users/rvfischione/followers", "following_url": "https://api.github.com/users/rvfischione/following{/other_user}", "gists_url": "https://api.github.com/users/rvfischione/gists{/gist_id}", "starred_url": "https://api.github.com/users/rvfischione/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rvfischione/subscriptions", "organizations_url": "https://api.github.com/users/rvfischione/orgs", "repos_url": "https://api.github.com/users/rvfischione/repos", "events_url": "https://api.github.com/users/rvfischione/events{/privacy}", "received_events_url": "https://api.github.com/users/rvfischione/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 473173272, "node_id": "MDU6TGFiZWw0NzMxNzMyNzI=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:feature", "name": "type:feature", "color": "159b2e", "default": false, "description": ""}], "state": "open", "locked": false, "assignee": {"login": "caisq", "id": 16824702, "node_id": "MDQ6VXNlcjE2ODI0NzAy", "avatar_url": "https://avatars2.githubusercontent.com/u/16824702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/caisq", "html_url": "https://github.com/caisq", "followers_url": "https://api.github.com/users/caisq/followers", "following_url": "https://api.github.com/users/caisq/following{/other_user}", "gists_url": "https://api.github.com/users/caisq/gists{/gist_id}", "starred_url": "https://api.github.com/users/caisq/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/caisq/subscriptions", "organizations_url": "https://api.github.com/users/caisq/orgs", "repos_url": "https://api.github.com/users/caisq/repos", "events_url": "https://api.github.com/users/caisq/events{/privacy}", "received_events_url": "https://api.github.com/users/caisq/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "caisq", "id": 16824702, "node_id": "MDQ6VXNlcjE2ODI0NzAy", "avatar_url": "https://avatars2.githubusercontent.com/u/16824702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/caisq", "html_url": "https://github.com/caisq", "followers_url": "https://api.github.com/users/caisq/followers", "following_url": "https://api.github.com/users/caisq/following{/other_user}", "gists_url": "https://api.github.com/users/caisq/gists{/gist_id}", "starred_url": "https://api.github.com/users/caisq/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/caisq/subscriptions", "organizations_url": "https://api.github.com/users/caisq/orgs", "repos_url": "https://api.github.com/users/caisq/repos", "events_url": "https://api.github.com/users/caisq/events{/privacy}", "received_events_url": "https://api.github.com/users/caisq/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 18, "created_at": "2018-03-22T20:45:54Z", "updated_at": "2019-08-11T10:36:21Z", "closed_at": null, "author_association": "NONE", "body": "### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**: Yes (See below)\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**: Windows 10\r\n- **TensorFlow installed from (source or binary)**: binary\r\n- **TensorFlow version (use command below)**: 1.6.0\r\n- **Python version**: 3.6.1\r\n- **Bazel version (if compiling from source)**: N/A\r\n- **GCC/Compiler version (if compiling from source)**: N/A\r\n- **CUDA/cuDNN version**: N/A\r\n- **GPU model and memory**: N/A\r\n- **Exact command to reproduce**: See below\r\n\r\n### Describe the problem\r\nIncidentally, this is both a bug report and a feature request. \r\n\r\nTo reproduce the bug, run the following:\r\n\r\n```python\r\nimport tensorflow as tf\r\nfrom tensorflow.python import debug as tf_debug\r\n\r\nsession = tf.Session()\r\nsession = tf_debug.TensorBoardDebugWrapperSession(session, \"localhost:9898\")\r\n\r\ncurrent_epoch = tf.Variable(0, trainable=False, name='current_epoch')\r\nincrement_epoch = tf.assign(current_epoch, current_epoch + 1)\r\n\r\nstart_epoch = current_epoch.eval(session)\r\nprint(\"start_epoch:\", start_epoch)\r\nfor cur_epoch in range(start_epoch, 10):\r\n    session.run(increment_epoch)\r\n\r\n```\r\n\r\nThe following is the output:\r\n```\r\nTraceback (most recent call last):\r\n  File \"C:/workspace/test.py\", line 12, in <module>\r\n    for cur_epoch in range(start_epoch, 10):\r\nTypeError: 'UnimplementedError' object cannot be interpreted as an integer\r\nstart_epoch: grpc:// debug URL scheme is not implemented on Windows yet.\r\n```\r\n\r\nIt's clear that the error is being assigned to a variable instead of being raised. Furthermore, the behavior is only present when evaluating a variable; this is unexpected, as it has nothing to do with the session itself.\r\n\r\nI came across this while trying to enable debugging via TensorBoard. After some digging, it appears that the error message originates from [TensorFlow core code](https://github.com/tensorflow/tensorflow/blob/master/tensorflow/core/debug/debug_io_utils.cc#L390), so that's why this issue is here and not in the TensorBoard project. Is there any status on implementation of this feature? If not, could there be a log warning or some sort of feedback to reflect this? The TensorBoard modal at http://localhost:6006/#debugger gives no indication that it is platform-dependent.\r\n"}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/17930", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/17930/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/17930/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/17930/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/17930", "id": 307773904, "node_id": "MDU6SXNzdWUzMDc3NzM5MDQ=", "number": 17930, "title": "Memory Leak in SavedModelBundle.load() in the TensorFlow Java API", "user": {"login": "chrisrsipes", "id": 5429005, "node_id": "MDQ6VXNlcjU0MjkwMDU=", "avatar_url": "https://avatars2.githubusercontent.com/u/5429005?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chrisrsipes", "html_url": "https://github.com/chrisrsipes", "followers_url": "https://api.github.com/users/chrisrsipes/followers", "following_url": "https://api.github.com/users/chrisrsipes/following{/other_user}", "gists_url": "https://api.github.com/users/chrisrsipes/gists{/gist_id}", "starred_url": "https://api.github.com/users/chrisrsipes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chrisrsipes/subscriptions", "organizations_url": "https://api.github.com/users/chrisrsipes/orgs", "repos_url": "https://api.github.com/users/chrisrsipes/repos", "events_url": "https://api.github.com/users/chrisrsipes/events{/privacy}", "received_events_url": "https://api.github.com/users/chrisrsipes/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": {"login": "asimshankar", "id": 16018, "node_id": "MDQ6VXNlcjE2MDE4", "avatar_url": "https://avatars2.githubusercontent.com/u/16018?v=4", "gravatar_id": "", "url": "https://api.github.com/users/asimshankar", "html_url": "https://github.com/asimshankar", "followers_url": "https://api.github.com/users/asimshankar/followers", "following_url": "https://api.github.com/users/asimshankar/following{/other_user}", "gists_url": "https://api.github.com/users/asimshankar/gists{/gist_id}", "starred_url": "https://api.github.com/users/asimshankar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/asimshankar/subscriptions", "organizations_url": "https://api.github.com/users/asimshankar/orgs", "repos_url": "https://api.github.com/users/asimshankar/repos", "events_url": "https://api.github.com/users/asimshankar/events{/privacy}", "received_events_url": "https://api.github.com/users/asimshankar/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "asimshankar", "id": 16018, "node_id": "MDQ6VXNlcjE2MDE4", "avatar_url": "https://avatars2.githubusercontent.com/u/16018?v=4", "gravatar_id": "", "url": "https://api.github.com/users/asimshankar", "html_url": "https://github.com/asimshankar", "followers_url": "https://api.github.com/users/asimshankar/followers", "following_url": "https://api.github.com/users/asimshankar/following{/other_user}", "gists_url": "https://api.github.com/users/asimshankar/gists{/gist_id}", "starred_url": "https://api.github.com/users/asimshankar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/asimshankar/subscriptions", "organizations_url": "https://api.github.com/users/asimshankar/orgs", "repos_url": "https://api.github.com/users/asimshankar/repos", "events_url": "https://api.github.com/users/asimshankar/events{/privacy}", "received_events_url": "https://api.github.com/users/asimshankar/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 19, "created_at": "2018-03-22T18:58:25Z", "updated_at": "2019-12-30T12:22:40Z", "closed_at": null, "author_association": "NONE", "body": "### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**: Yes\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**: Linux Ubuntu 16.04\r\n- **TensorFlow installed from (source or binary)**: Source\r\n- **TensorFlow version (use command below)**: 1.6.0\r\n- **Python version**: 2.7.12\r\n- **Java version**: OpenJDK 1.8.0_151\r\n- **Bazel version (if compiling from source)**: 0.6.1\r\n- **GCC/Compiler version (if compiling from source)**: gcc 5.4.0\r\n- **CUDA/cuDNN version**: CUDA 9.0 / cuDNN 7.0\r\n- **GPU model and memory**: name: TITAN Xp, compute capability: 6.1, total memory: 11.90GiB\r\n- **Exact command to reproduce**: SavedModelBundle.load() and Runner.run() from Java API\r\n\r\n### Describe the problem\r\n\r\nThere seems to be a memory leak when using the Tensorflow Java API when executing the load static method of SavedModelBundle class and the run method of the Runner class.  In the process of debugging, I've attached the VisualVM profiler and a remote Java debugger to step through code execution.  Additionally, I've been using `htop` to monitor the memory usage from active processes running on the server hosting the API.  \r\n\r\nFrom this, I've been able to observe\r\n- each time the inference is invoked, it increases my total memory consumption by about 0.18G - 0.19G, which is approximately the size of my saved model files being loaded.  \r\n- my Java heap memory is not permanently increasing; after the inference has finished all heap memory returns to the amount before the inference started.\r\n\r\nI've been sure to invoke the close method of each class that extends AutoCloseable that I've used.  I do not explicitly invoke the close method on the Session and Graph managed by the SavedModelBundle, as its close method invokes the close methods of its Session and Graph.  This is reflected in the code example provided below.\r\n\r\nThis memory leak occurs whether I'm building with GPU acceleration or not.\r\n\r\nTo build the native libraries and Java API from source with GPU acceleration, I'm using the following bazel command (from the 1.6.0 release tag):\r\n\r\n```\r\nbazel build --verbose_failures --action_env=\"LD_LIBRARY_PATH=${LD_LIBRARY_PATH}\" --cxxopt=\"-D_GLIBCXX_USE_CXX11_ABI=0\"  --config=opt --config=cuda //tensorflow/java:tensorflow //tensorflow/java:libtensorflow_jni\r\n```\r\n\r\nTo build the native libraries and Java API from source without GPU acceleration, I'm using the following bazel command (from the 1.6.0 release tag):\r\n\r\n```\r\nbazel build --verbose_failures --action_env=\"LD_LIBRARY_PATH=${LD_LIBRARY_PATH}\" --cxxopt=\"-D_GLIBCXX_USE_CXX11_ABI=0\"    //tensorflow/java:tensorflow //tensorflow/java:libtensorflow_jni\r\n```\r\n\r\nIn an attempt to get more information about the execution of the native code, I've tried to enable debug mode while building the native libraries by repliacing `--config=opt` with `-c dbg --strip=never --compilation_mode=dbg`, however this causes the following exception:\r\n\r\n```\r\nexternal/eigen_archive/unsupported/Eigen/CXX11/src/Tensor/TensorExecutor.h:262: static void Eigen::internal::TensorExecutor<Expression, Eigen::GpuDevice, Vectorizable>::run(const Expression&, const Eigen::GpuDevice&) [with Expression = const Eigen::TensorAssignOp<Eigen::TensorMap<Eigen::Tensor<float, 1, 1, long int>, 16, Eigen::MakePointer>, const Eigen::TensorCwiseBinaryOp<Eigen::internal::scalar_max_op<const float, const float>, const Eigen::TensorMap<Eigen::Tensor<const float, 1, 1, long int>, 16, Eigen::MakePointer>, const Eigen::TensorCwiseNullaryOp<Eigen::internal::scalar_constant_op, const Eigen::TensorMap<Eigen::Tensor<const float, 1, 1, long int>, 16, Eigen::MakePointer> > > >; bool Vectorizable = true]: Assertion `cudaGetLastError() == cudaSuccess' failed.\r\n```\r\n\r\nI originally found the memory leak while using TensorFlow 1.4.0, CUDA 8.0, and cuDNN 6.0.  Before updating the versions, each inference was retaining about 1.4-1.5G of memory; by updating, I managed to reduce this significantly, however still need to eliminate the memory leak altogether.\r\n\r\nI've spent hours trying to figure out how to profile the native code execution, most recently by following these answers from Stack Overflow:\r\n1. [How to profile Native JNI library](https://stackoverflow.com/questions/14752459/how-to-profile-native-jni-library)\r\n2. [gprof : How to generate call graph for functions in shared library that is linked to main program](https://stackoverflow.com/questions/1838989/gprof-how-to-generate-call-graph-for-functions-in-shared-library-that-is-linke/4959168#4959168)\r\n\r\nI've been unable to successfully compile the native libraries with the debug flag (`-g`) to profile.  I've poked around the bazel build scripts a bit, as I don't believe that the debug mode indicated by the `--compilation_mode=dbg` flag actually compiles the libraries for debugging, however have been unable to locate where I'd add the `-g` compilation flag.\r\n\r\n\r\n### Source code / logs\r\n\r\nHere is my configuration output when configuring with GPU acceleration.\r\n```\r\nilats-admin$ ./configure\r\nYou have bazel 0.6.1 installed.\r\nPlease specify the location of python. [Default is /usr/bin/python]: \r\n\r\n\r\nFound possible Python library paths:\r\n  /usr/local/lib/python2.7/dist-packages\r\n  /usr/lib/python2.7/dist-packages\r\nPlease input the desired Python library path to use.  Default is [/usr/local/lib/python2.7/dist-packages]\r\n\r\nDo you wish to build TensorFlow with jemalloc as malloc support? [Y/n]: N\r\nNo jemalloc as malloc support will be enabled for TensorFlow.\r\n\r\nDo you wish to build TensorFlow with Google Cloud Platform support? [Y/n]: N\r\nNo Google Cloud Platform support will be enabled for TensorFlow.\r\n\r\nDo you wish to build TensorFlow with Hadoop File System support? [Y/n]: N\r\nNo Hadoop File System support will be enabled for TensorFlow.\r\n\r\nDo you wish to build TensorFlow with Amazon S3 File System support? [Y/n]: N\r\nNo Amazon S3 File System support will be enabled for TensorFlow.\r\n\r\nDo you wish to build TensorFlow with Apache Kafka Platform support? [y/N]: N\r\nNo Apache Kafka Platform support will be enabled for TensorFlow.\r\n\r\nDo you wish to build TensorFlow with XLA JIT support? [y/N]: N\r\nNo XLA JIT support will be enabled for TensorFlow.\r\n\r\nDo you wish to build TensorFlow with GDR support? [y/N]: N\r\nNo GDR support will be enabled for TensorFlow.\r\n\r\nDo you wish to build TensorFlow with VERBS support? [y/N]: N\r\nNo VERBS support will be enabled for TensorFlow.\r\n\r\nDo you wish to build TensorFlow with OpenCL SYCL support? [y/N]: N\r\nNo OpenCL SYCL support will be enabled for TensorFlow.\r\n\r\nDo you wish to build TensorFlow with CUDA support? [y/N]: Y\r\nCUDA support will be enabled for TensorFlow.\r\n\r\nPlease specify the CUDA SDK version you want to use, e.g. 7.0. [Leave empty to default to CUDA 9.0]: \r\n\r\n\r\nPlease specify the location where CUDA 9.0 toolkit is installed. Refer to README.md for more details. [Default is /usr/local/cuda]: /usr/local/cuda-9.0\r\n\r\n\r\nPlease specify the cuDNN version you want to use. [Leave empty to default to cuDNN 7.0]: \r\n\r\n\r\nPlease specify the location where cuDNN 7 library is installed. Refer to README.md for more details. [Default is /usr/local/cuda-9.0]:\r\n\r\n\r\nDo you wish to build TensorFlow with TensorRT support? [y/N]: N\r\nNo TensorRT support will be enabled for TensorFlow.\r\n\r\nPlease specify a list of comma-separated Cuda compute capabilities you want to build with.\r\nYou can find the compute capability of your device at: https://developer.nvidia.com/cuda-gpus.\r\nPlease note that each additional compute capability significantly increases your build time and binary size. [Default is: 6.1]\r\n\r\n\r\nDo you want to use clang as CUDA compiler? [y/N]: N\r\nnvcc will be used as CUDA compiler.\r\n\r\nPlease specify which gcc should be used by nvcc as the host compiler. [Default is /usr/bin/gcc]: \r\n\r\n\r\nDo you wish to build TensorFlow with MPI support? [y/N]: N\r\nNo MPI support will be enabled for TensorFlow.\r\n\r\nPlease specify optimization flags to use during compilation when bazel option \"--config=opt\" is specified [Default is -march=native]: \r\n\r\n\r\nWould you like to interactively configure ./WORKSPACE for Android builds? [y/N]: N\r\nNot configuring the WORKSPACE for Android builds.\r\n\r\nPreconfigured Bazel build configs. You can use any of the below by adding \"--config=<>\" to your build command. See tools/bazel.rc for more details.\r\n\t--config=mkl         \t# Build with MKL support.\r\n\t--config=monolithic  \t# Config for mostly static monolithic build.\r\n\t--config=tensorrt    \t# Build with TensorRT support.\r\nConfiguration finished\r\n```\r\n\r\nI've created a sample application below that is a minimal version of my custom code, and still causes the memory leak to occur.  I've used a simple while loop to perform an inference whenever a character is entered from `stdin`, to demonstrate the memory being used not released while the application is still running.\r\n\r\nThis code is used for inference against a trained version of Object Detection model architecture found [here](https://github.com/tensorflow/models/tree/master/research/object_detection).  I've prepared a custom dataset and performed training similar to the [Quick Start guide for Training a Pet Detector](https://github.com/tensorflow/models/blob/master/research/object_detection/g3doc/running_pets.md).  Following this guide through the section titled **Exporting the Tensorflow Graph** should produce a saved model that can be used with this code sample.  You'll need to adjust the path to the saved model, the labels to those used for the guide, and the file path to the image to detect objects in, which are all captured as static final variables towards the top of the class.\r\n\r\n```\r\nimport java.io.*;\r\nimport org.tensorflow.Tensor;\r\nimport org.tensorflow.SavedModelBundle;\r\nimport org.tensorflow.types.UInt8;\r\nimport java.awt.image.BufferedImage;\r\nimport java.awt.image.DataBufferByte;\r\nimport javax.imageio.ImageIO;\r\nimport java.nio.ByteBuffer;\r\nimport java.nio.ByteOrder;\r\nimport java.util.List;\r\n\r\npublic class Main {\r\n  private static final String[] LABELS = {\"label1\", \"label2\", \"label3\", \"label4\", \"label5\", \"label6\", \"label7\"};\r\n  private static final String SAVED_MODEL_PATH = \"/usr/repositories/resources/models/ilats-targets-4/saved_model\";\r\n  private static final String FILE_PATH = \"/tmp/inference_image.jpeg\";\r\n\r\n  // Definite input and output Tensors for detection_graph\r\n  private static final String IMAGE_TENSOR_NAME = \"image_tensor:0\";\r\n\r\n  // Each box represents a part of the image where a particular object was detected.\r\n  private static final String DETECTION_BOXES_NAME = \"detection_boxes:0\";\r\n\r\n  // Each score represent how level of confidence for each of the objects.\r\n  // Score is shown on the result image, together with the class label.\r\n  private static final String DETECTION_SCORES_NAME = \"detection_scores:0\";\r\n\r\n  private static final String DETECTION_CLASSES_NAME = \"detection_classes:0\";\r\n\r\n  public static void main(String[] args) {\r\n    int ch;\r\n    try {\r\n\r\n      while ((ch = System.in.read()) != -1) {\r\n        performInference();\r\n      }\r\n\r\n    } catch (Exception e) {\r\n    }\r\n  }\r\n\r\n  public static void performInference() {\r\n    SavedModelBundle model = null;\r\n    Tensor<UInt8> imageTensor = null;\r\n    List<Tensor<?>> outputs = null;\r\n\r\n    try {\r\n      model = SavedModelBundle.load(SAVED_MODEL_PATH, \"serve\");\r\n      imageTensor = makeImageTensor(FILE_PATH);\r\n      \r\n      outputs = model\r\n        .session()\r\n        .runner()\r\n        .feed(IMAGE_TENSOR_NAME, imageTensor)\r\n        .fetch(DETECTION_SCORES_NAME)\r\n        .fetch(DETECTION_CLASSES_NAME)\r\n        .fetch(DETECTION_BOXES_NAME)\r\n        .run();\r\n\r\n    } catch (Exception e) {\r\n      throw new RuntimeException(e.getMessage(), e);\r\n    } finally {\r\n      // this closes Session and Graph that belongs to model as well\r\n      if (model != null) {\r\n        model.close();\r\n      }\r\n\r\n      if (imageTensor != null) {\r\n        imageTensor.close();\r\n      }\r\n\r\n      if (outputs != null) {\r\n        for (Tensor output : outputs) {\r\n          if (output != null) {\r\n            output.close();\r\n          }\r\n        }\r\n      }\r\n    }\r\n    \r\n\r\n  }\r\n\r\n  public static Tensor<UInt8> makeImageTensor(String filename) throws IOException {\r\n    BufferedImage img = ImageIO.read(new File(filename));\r\n    if (img.getType() != BufferedImage.TYPE_3BYTE_BGR) {\r\n      throw new IOException(\r\n        String.format(\"Expected 3-byte BGR encoding in BufferedImage, found %d (file: %s). This code could be made more robust\", img.getType(), filename)\r\n      );\r\n    }\r\n\r\n    byte[] data = ((DataBufferByte) img.getData().getDataBuffer()).getData();\r\n    // ImageIO.read seems to produce BGR-encoded images, but the model expects RGB.\r\n    bgr2rgb(data);\r\n    final long BATCH_SIZE = 1;\r\n    final long CHANNELS = 3;\r\n    long[] shape = new long[] {BATCH_SIZE, img.getHeight(), img.getWidth(), CHANNELS};\r\n    Tensor<UInt8> imageTensor = Tensor.create(UInt8.class, shape, ByteBuffer.wrap(data));\r\n    img.flush();\r\n    return imageTensor;\r\n  }\r\n\r\n  public static void bgr2rgb(byte[] data) {\r\n    for (int i = 0; i < data.length; i += 3) {\r\n      byte tmp = data[i];\r\n      data[i] = data[i + 2];\r\n      data[i + 2] = tmp;\r\n    }\r\n  }\r\n\r\n}\r\n```\r\n\r\nThe instructions to compile and run this are similar to those found in the [TensorFlow for Java Readme](https://github.com/tensorflow/tensorflow/blob/master/tensorflow/java/README.md).\r\n\r\n```\r\n$ GENFILE_DIR=/usr/repositories/tensorflow/bazel-bin/tensorflow/java\r\n$ javac -cp ./:$GENFILE_DIR/libtensorflow.jar Main.java\r\n$ java -cp ./:$GENFILE_DIR/libtensorflow.jar \\\r\n  -Djava.library.path=$GENFILE_DIR \\\r\n  Main\r\n```\r\n"}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/17910", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/17910/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/17910/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/17910/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/17910", "id": 307447679, "node_id": "MDU6SXNzdWUzMDc0NDc2Nzk=", "number": 17910, "title": "Timeline Logging Duplicates of Operations", "user": {"login": "xilenteyex", "id": 10864603, "node_id": "MDQ6VXNlcjEwODY0NjAz", "avatar_url": "https://avatars1.githubusercontent.com/u/10864603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/xilenteyex", "html_url": "https://github.com/xilenteyex", "followers_url": "https://api.github.com/users/xilenteyex/followers", "following_url": "https://api.github.com/users/xilenteyex/following{/other_user}", "gists_url": "https://api.github.com/users/xilenteyex/gists{/gist_id}", "starred_url": "https://api.github.com/users/xilenteyex/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/xilenteyex/subscriptions", "organizations_url": "https://api.github.com/users/xilenteyex/orgs", "repos_url": "https://api.github.com/users/xilenteyex/repos", "events_url": "https://api.github.com/users/xilenteyex/events{/privacy}", "received_events_url": "https://api.github.com/users/xilenteyex/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 404586594, "node_id": "MDU6TGFiZWw0MDQ1ODY1OTQ=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:awaiting%20tensorflower", "name": "stat:awaiting tensorflower", "color": "f4b400", "default": false, "description": ""}], "state": "open", "locked": false, "assignee": {"login": "prb12", "id": 11547801, "node_id": "MDQ6VXNlcjExNTQ3ODAx", "avatar_url": "https://avatars1.githubusercontent.com/u/11547801?v=4", "gravatar_id": "", "url": "https://api.github.com/users/prb12", "html_url": "https://github.com/prb12", "followers_url": "https://api.github.com/users/prb12/followers", "following_url": "https://api.github.com/users/prb12/following{/other_user}", "gists_url": "https://api.github.com/users/prb12/gists{/gist_id}", "starred_url": "https://api.github.com/users/prb12/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/prb12/subscriptions", "organizations_url": "https://api.github.com/users/prb12/orgs", "repos_url": "https://api.github.com/users/prb12/repos", "events_url": "https://api.github.com/users/prb12/events{/privacy}", "received_events_url": "https://api.github.com/users/prb12/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "prb12", "id": 11547801, "node_id": "MDQ6VXNlcjExNTQ3ODAx", "avatar_url": "https://avatars1.githubusercontent.com/u/11547801?v=4", "gravatar_id": "", "url": "https://api.github.com/users/prb12", "html_url": "https://github.com/prb12", "followers_url": "https://api.github.com/users/prb12/followers", "following_url": "https://api.github.com/users/prb12/following{/other_user}", "gists_url": "https://api.github.com/users/prb12/gists{/gist_id}", "starred_url": "https://api.github.com/users/prb12/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/prb12/subscriptions", "organizations_url": "https://api.github.com/users/prb12/orgs", "repos_url": "https://api.github.com/users/prb12/repos", "events_url": "https://api.github.com/users/prb12/events{/privacy}", "received_events_url": "https://api.github.com/users/prb12/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 5, "created_at": "2018-03-21T22:59:52Z", "updated_at": "2018-12-07T18:49:28Z", "closed_at": null, "author_association": "NONE", "body": "### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**: No\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**: Linux Ubuntu 16.04\r\n- **TensorFlow installed from (source or binary)**: source\r\n- **TensorFlow version (use command below)**: 1.6.0-rc1\r\n- **Python version**: 2.7\r\n- **Bazel version (if compiling from source)**: 0.11.0\r\n- **GCC/Compiler version (if compiling from source)**: 5.4\r\n- **CUDA/cuDNN version**: 9.1/7.0\r\n- **GPU model and memory**: Tesla k80 (11441MiB)\r\n- **Exact command to reproduce**: python cifar10_train.py\r\n\r\n\r\n### Describe the problem\r\nI used timeline to profile the time taken by each operation of the standard cifar10 model available in tensorflow/models repo. After looking at the logfile, it looks like logs of some of the operations are duplicated i.e. it looks like some of the operations in the graph are ran multiple times over the single run of the complete graph. For example, Operation \"gradients/conv2/Conv2D_grad/Conv2DBackpropFilter\" (link to logfile : https://gist.github.com/xilenteyex/d54305e0448e1aa3d878872c45b8ed3a#file-timeline-1-json-L2270) is logged multiple times. Is this some sort of bug or am I missing something? \r\n\r\nThanks a lot for looking into this issue!  \r\n\r\n\r\n### Source code / logs\r\ncifar10 example : https://github.com/tensorflow/models/tree/master/tutorials/image/cifar10\r\nhere is a the link to my modified version of cifar10_train.py in which I added logging : \r\nhttps://gist.github.com/xilenteyex/b6fab3a5abdb65bf674aa7d0a4ec4b5c\r\none of the sample log files is : https://gist.github.com/xilenteyex/d54305e0448e1aa3d878872c45b8ed3a\r\n\r\n"}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/17860", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/17860/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/17860/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/17860/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/17860", "id": 306879469, "node_id": "MDU6SXNzdWUzMDY4Nzk0Njk=", "number": 17860, "title": "Failed assert in the TF native code kills JVM", "user": {"login": "sabi0", "id": 11509875, "node_id": "MDQ6VXNlcjExNTA5ODc1", "avatar_url": "https://avatars3.githubusercontent.com/u/11509875?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sabi0", "html_url": "https://github.com/sabi0", "followers_url": "https://api.github.com/users/sabi0/followers", "following_url": "https://api.github.com/users/sabi0/following{/other_user}", "gists_url": "https://api.github.com/users/sabi0/gists{/gist_id}", "starred_url": "https://api.github.com/users/sabi0/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sabi0/subscriptions", "organizations_url": "https://api.github.com/users/sabi0/orgs", "repos_url": "https://api.github.com/users/sabi0/repos", "events_url": "https://api.github.com/users/sabi0/events{/privacy}", "received_events_url": "https://api.github.com/users/sabi0/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 404586594, "node_id": "MDU6TGFiZWw0MDQ1ODY1OTQ=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:awaiting%20tensorflower", "name": "stat:awaiting tensorflower", "color": "f4b400", "default": false, "description": ""}], "state": "open", "locked": false, "assignee": {"login": "bignamehyp", "id": 3474655, "node_id": "MDQ6VXNlcjM0NzQ2NTU=", "avatar_url": "https://avatars2.githubusercontent.com/u/3474655?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bignamehyp", "html_url": "https://github.com/bignamehyp", "followers_url": "https://api.github.com/users/bignamehyp/followers", "following_url": "https://api.github.com/users/bignamehyp/following{/other_user}", "gists_url": "https://api.github.com/users/bignamehyp/gists{/gist_id}", "starred_url": "https://api.github.com/users/bignamehyp/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bignamehyp/subscriptions", "organizations_url": "https://api.github.com/users/bignamehyp/orgs", "repos_url": "https://api.github.com/users/bignamehyp/repos", "events_url": "https://api.github.com/users/bignamehyp/events{/privacy}", "received_events_url": "https://api.github.com/users/bignamehyp/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "bignamehyp", "id": 3474655, "node_id": "MDQ6VXNlcjM0NzQ2NTU=", "avatar_url": "https://avatars2.githubusercontent.com/u/3474655?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bignamehyp", "html_url": "https://github.com/bignamehyp", "followers_url": "https://api.github.com/users/bignamehyp/followers", "following_url": "https://api.github.com/users/bignamehyp/following{/other_user}", "gists_url": "https://api.github.com/users/bignamehyp/gists{/gist_id}", "starred_url": "https://api.github.com/users/bignamehyp/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bignamehyp/subscriptions", "organizations_url": "https://api.github.com/users/bignamehyp/orgs", "repos_url": "https://api.github.com/users/bignamehyp/repos", "events_url": "https://api.github.com/users/bignamehyp/events{/privacy}", "received_events_url": "https://api.github.com/users/bignamehyp/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 5, "created_at": "2018-03-20T14:04:14Z", "updated_at": "2018-12-07T18:49:24Z", "closed_at": null, "author_association": "NONE", "body": "### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**:\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**: Windows 7, Java 1.8.0_161 x64\r\n- **TensorFlow installed from (source or binary)**: binaries downloaded from Maven repo\r\n- **TensorFlow version (use command below)**: both org.tensorflow:tensorflow:1.4.0 and org.tensorflow:tensorflow:1.5.0\r\n- **Python version**: N/A\r\n- **Bazel version (if compiling from source)**: N/A\r\n- **GCC/Compiler version (if compiling from source)**: N/A\r\n- **CUDA/cuDNN version**: N/A\r\n- **GPU model and memory**: N/A\r\n- **Exact command to reproduce**:\r\n\r\n### Describe the problem\r\n\r\nI am running some experiments calling TensorFlow from Java.\r\nAnd in case my code hits some assertion in the TF native code the JVM terminates immediately.\r\n\r\nThis I believe closes the door for running TensorFlow in any kind of Java server environment.\r\n\r\nInstead the internal assertions should be propagated to JNI layer and thrown as normal Java exceptions (`IllegalStateException`, `AssertionError` and the likes).\r\n\r\n### Source code / logs\r\n\r\nHere are two cases of the assertions I ran into yesterday with TF 1.4.0\r\n\r\n```\r\n2018-03-19 17:56:00.364932: F .\\tensorflow/core/lib/core/refcount.h:82] Check failed: ref_.load() >= 1 (0 vs. 1)\r\n\r\n2018-03-19 18:30:22.390146: F .\\tensorflow/core/framework/tensor_shape.h:130] Check failed: static_cast<uint32>(dt) < 256u (374 vs. 256)\r\n```\r\n\r\nThe errors above are reproducible more or less consistently when using the same input `Tensor<Float>` in three different `Graph`'s sequentially.\r\nIt it probably not the right way to do that. But the issue in general still stands - assertions in the native code must not kill the hosting JVM.\r\n\r\nI've been trying to reproduce the problem in an isolated minimal test project. But hasn't been able to do that so far. I believe however that this is not strictly necessary to illustrate the core problem.\r\nIt should be possible to reproduce the JVM death by adding some \"always fail\" assertion to the TF native code."}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/17859", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/17859/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/17859/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/17859/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/17859", "id": 306831404, "node_id": "MDU6SXNzdWUzMDY4MzE0MDQ=", "number": 17859, "title": "`Datasets` sometimes resamples stochastic Tensors during multiple transformations", "user": {"login": "joel-shor", "id": 6020988, "node_id": "MDQ6VXNlcjYwMjA5ODg=", "avatar_url": "https://avatars1.githubusercontent.com/u/6020988?v=4", "gravatar_id": "", "url": "https://api.github.com/users/joel-shor", "html_url": "https://github.com/joel-shor", "followers_url": "https://api.github.com/users/joel-shor/followers", "following_url": "https://api.github.com/users/joel-shor/following{/other_user}", "gists_url": "https://api.github.com/users/joel-shor/gists{/gist_id}", "starred_url": "https://api.github.com/users/joel-shor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/joel-shor/subscriptions", "organizations_url": "https://api.github.com/users/joel-shor/orgs", "repos_url": "https://api.github.com/users/joel-shor/repos", "events_url": "https://api.github.com/users/joel-shor/events{/privacy}", "received_events_url": "https://api.github.com/users/joel-shor/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 299643928, "node_id": "MDU6TGFiZWwyOTk2NDM5Mjg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:contributions%20welcome", "name": "stat:contributions welcome", "color": "f4b400", "default": false, "description": ""}, {"id": 473172988, "node_id": "MDU6TGFiZWw0NzMxNzI5ODg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:bug", "name": "type:bug", "color": "159b2e", "default": false, "description": ""}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 11, "created_at": "2018-03-20T11:45:19Z", "updated_at": "2018-07-29T00:44:10Z", "closed_at": null, "author_association": "CONTRIBUTOR", "body": "### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**:\r\nYes, to demonstrate the bug\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**:\r\nMac OS X 10.13.3\r\n- **TensorFlow installed from (source or binary)**:\r\nBinary\r\n- **TensorFlow version (use command below)**:\r\n1.5.0\r\n- **Python version**: \r\n2.7\r\n\r\n### Describe the problem\r\nDatasets can involve stochastic transformations. Sometimes random Tensors are resampled, and sometimes they're not. It's not clear when one happens and when another happens. This is likely a subtle Datasets bug, but at a minimum is a documentation bug. This is the root cause of Issue #16606, which is fixed in the resampling code by PR #17858.\r\n\r\n### Source code / logs\r\nThe following short snippet demonstrates that `Dataset.zip` causes the random Tensors to be resampled, while a seemingly-equivalent `map` statement does not:\r\n\r\n```\r\ndef _test_ds_consistency(tup_ds):\r\n  get_next = tup_ds.make_one_shot_iterator().get_next()\r\n\r\n  with tf.Session() as sess:\r\n    while True:\r\n      try:\r\n        tup = sess.run(get_next)\r\n        assert tup[0] == tup[1]\r\n      except tf.errors.OutOfRangeError:\r\n        break\r\n\r\ndef _get_random_0s_and_1s(num_elements):\r\n  const_ds = tf.data.Dataset.from_tensor_slices([0] * num_elements)\r\n  return const_ds.map(lambda _: tf.cast(tf.random_uniform([]) * 2, dtype=tf.int32))\r\n\r\ndef doesnt_work(num_elements=10):\r\n  rand_ds = _get_random_0s_and_1s(num_elements)\r\n  index_ds = rand_ds.map(lambda i: tf.gather([0, 1], i))\r\n  return tf.data.Dataset.zip((index_ds, rand_ds))\r\n\r\ndef works(num_elements=10):\r\n  rand_ds = _get_random_0s_and_1s(num_elements)\r\n  tup_ds = rand_ds.map(lambda i: (tf.gather([0, 1], i), i))\r\n  return tup_ds\r\n\r\n_test_ds_consistency(works())  # works\r\n_test_ds_consistency(doesnt_work())  # raises assert\r\n```\r\n"}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/17851", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/17851/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/17851/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/17851/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/17851", "id": 306717552, "node_id": "MDU6SXNzdWUzMDY3MTc1NTI=", "number": 17851, "title": "[Feature Request] Multiple GPU Training using Eager Execution", "user": {"login": "Purpleslz", "id": 15375842, "node_id": "MDQ6VXNlcjE1Mzc1ODQy", "avatar_url": "https://avatars2.githubusercontent.com/u/15375842?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Purpleslz", "html_url": "https://github.com/Purpleslz", "followers_url": "https://api.github.com/users/Purpleslz/followers", "following_url": "https://api.github.com/users/Purpleslz/following{/other_user}", "gists_url": "https://api.github.com/users/Purpleslz/gists{/gist_id}", "starred_url": "https://api.github.com/users/Purpleslz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Purpleslz/subscriptions", "organizations_url": "https://api.github.com/users/Purpleslz/orgs", "repos_url": "https://api.github.com/users/Purpleslz/repos", "events_url": "https://api.github.com/users/Purpleslz/events{/privacy}", "received_events_url": "https://api.github.com/users/Purpleslz/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": {"login": "guptapriya", "id": 14104855, "node_id": "MDQ6VXNlcjE0MTA0ODU1", "avatar_url": "https://avatars1.githubusercontent.com/u/14104855?v=4", "gravatar_id": "", "url": "https://api.github.com/users/guptapriya", "html_url": "https://github.com/guptapriya", "followers_url": "https://api.github.com/users/guptapriya/followers", "following_url": "https://api.github.com/users/guptapriya/following{/other_user}", "gists_url": "https://api.github.com/users/guptapriya/gists{/gist_id}", "starred_url": "https://api.github.com/users/guptapriya/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/guptapriya/subscriptions", "organizations_url": "https://api.github.com/users/guptapriya/orgs", "repos_url": "https://api.github.com/users/guptapriya/repos", "events_url": "https://api.github.com/users/guptapriya/events{/privacy}", "received_events_url": "https://api.github.com/users/guptapriya/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "guptapriya", "id": 14104855, "node_id": "MDQ6VXNlcjE0MTA0ODU1", "avatar_url": "https://avatars1.githubusercontent.com/u/14104855?v=4", "gravatar_id": "", "url": "https://api.github.com/users/guptapriya", "html_url": "https://github.com/guptapriya", "followers_url": "https://api.github.com/users/guptapriya/followers", "following_url": "https://api.github.com/users/guptapriya/following{/other_user}", "gists_url": "https://api.github.com/users/guptapriya/gists{/gist_id}", "starred_url": "https://api.github.com/users/guptapriya/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/guptapriya/subscriptions", "organizations_url": "https://api.github.com/users/guptapriya/orgs", "repos_url": "https://api.github.com/users/guptapriya/repos", "events_url": "https://api.github.com/users/guptapriya/events{/privacy}", "received_events_url": "https://api.github.com/users/guptapriya/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 18, "created_at": "2018-03-20T03:36:25Z", "updated_at": "2019-11-22T14:23:19Z", "closed_at": null, "author_association": "NONE", "body": "I'm a starter in eager execution and not familiar in DL framework. However, in practice, multiple GPUs training is an important feature. PyTorch has nn.DataParallel and distributed package to support distributed training. Recently, I'm working on training model using eager execution with multiple gpus, and I have noticed that in https://hn.svelte.technology/item/15595123 @alextp said:\r\n\r\n> We're still fairly early in the project, so _for now threading is the only supported way_.\r\n\r\nI have two questions about it:\r\n1. If there is an example about using threading to train with multiple gpus in eager execution? It will help a lot to starters.\r\n2. I have concerns about performance using threading(only one thread can run python at one time in Cython implementation). Could threading speed up the training process? For example, if I have some python operations betweens tf operations(eg. [*DenseLayer*, *some operations using numpy, python list, etc.*, *DenseLayer*]), those tf operations(DenseLayer) in different threads could be parallelized, but those numpy operations in different threads are not going to be parallelizable?\r\n\r\nSorry for my poor english, please correct me if I'm wrong. Thank you!"}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/17844", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/17844/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/17844/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/17844/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/17844", "id": 306637195, "node_id": "MDU6SXNzdWUzMDY2MzcxOTU=", "number": 17844, "title": "Dropout training placeholder fails in tf.while_loop ", "user": {"login": "gongzhitaao", "id": 704995, "node_id": "MDQ6VXNlcjcwNDk5NQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/704995?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gongzhitaao", "html_url": "https://github.com/gongzhitaao", "followers_url": "https://api.github.com/users/gongzhitaao/followers", "following_url": "https://api.github.com/users/gongzhitaao/following{/other_user}", "gists_url": "https://api.github.com/users/gongzhitaao/gists{/gist_id}", "starred_url": "https://api.github.com/users/gongzhitaao/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gongzhitaao/subscriptions", "organizations_url": "https://api.github.com/users/gongzhitaao/orgs", "repos_url": "https://api.github.com/users/gongzhitaao/repos", "events_url": "https://api.github.com/users/gongzhitaao/events{/privacy}", "received_events_url": "https://api.github.com/users/gongzhitaao/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 404586594, "node_id": "MDU6TGFiZWw0MDQ1ODY1OTQ=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:awaiting%20tensorflower", "name": "stat:awaiting tensorflower", "color": "f4b400", "default": false, "description": ""}], "state": "open", "locked": false, "assignee": {"login": "skye", "id": 88808, "node_id": "MDQ6VXNlcjg4ODA4", "avatar_url": "https://avatars1.githubusercontent.com/u/88808?v=4", "gravatar_id": "", "url": "https://api.github.com/users/skye", "html_url": "https://github.com/skye", "followers_url": "https://api.github.com/users/skye/followers", "following_url": "https://api.github.com/users/skye/following{/other_user}", "gists_url": "https://api.github.com/users/skye/gists{/gist_id}", "starred_url": "https://api.github.com/users/skye/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/skye/subscriptions", "organizations_url": "https://api.github.com/users/skye/orgs", "repos_url": "https://api.github.com/users/skye/repos", "events_url": "https://api.github.com/users/skye/events{/privacy}", "received_events_url": "https://api.github.com/users/skye/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "skye", "id": 88808, "node_id": "MDQ6VXNlcjg4ODA4", "avatar_url": "https://avatars1.githubusercontent.com/u/88808?v=4", "gravatar_id": "", "url": "https://api.github.com/users/skye", "html_url": "https://github.com/skye", "followers_url": "https://api.github.com/users/skye/followers", "following_url": "https://api.github.com/users/skye/following{/other_user}", "gists_url": "https://api.github.com/users/skye/gists{/gist_id}", "starred_url": "https://api.github.com/users/skye/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/skye/subscriptions", "organizations_url": "https://api.github.com/users/skye/orgs", "repos_url": "https://api.github.com/users/skye/repos", "events_url": "https://api.github.com/users/skye/events{/privacy}", "received_events_url": "https://api.github.com/users/skye/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 3, "created_at": "2018-03-19T21:11:38Z", "updated_at": "2018-12-07T18:49:20Z", "closed_at": null, "author_association": "NONE", "body": " If I pass a placeholder to `training` parameter in `tf.layers.dropout`, then the model fails in `tf.while_loop`.  If I directly pass a boolean value, it works fine.  \r\n\r\n- OS Platform and Distribution: Linux Ubuntu 17.10\r\n- TensorFlow installed from: pip\r\n- TensorFlow version: v1.6.0:\r\n- Python version: 3.6\r\n- Have I written custom code: yes\r\n- Bazel version: N/A\r\n- CUDA/cuDNN version: N/A\r\n- GPU model and memory: N/A\r\n- Exact command to reproduce: N/A\r\n\r\nSee the following code.\r\n```py\r\nimport os\r\n\r\nimport numpy as np\r\nimport tensorflow as tf\r\n\r\n\r\nos.environ['TF_CPP_MIN_LOG_LEVEL'] = '3'\r\n\r\n\r\nprint(tf.__version__)\r\n\r\n\r\nclass Config:\r\n    def __init__(self):\r\n        self.units = 10\r\n        self.n_classes = 2\r\n        self.drop_rate = 0.5\r\n\r\n\r\nclass Model:\r\n    def __init__(self, cfg):\r\n        self.cfg = cfg\r\n        self.mlp = tf.layers.Dense(cfg.units)\r\n        self.resize = tf.layers.Dense(cfg.n_classes)\r\n\r\n    def predict(self, x):\r\n        z = self.mlp(x)\r\n        z = tf.layers.dropout(z, rate=self.cfg.drop_rate,\r\n                              training=self.cfg.training)\r\n        z = self.resize(z)\r\n        return z\r\n\r\n\r\ncfg = Config()\r\n# training = tf.placeholder_with_default(False, (), 'mode')\r\ntraining = False\r\ncfg.training = training\r\n\r\nmodel = Model(cfg)\r\n\r\n\r\ndef _cond(x, i):\r\n    return tf.less(i, 20)\r\n\r\n\r\ndef _body(x, i):\r\n    y = model.predict(x)\r\n    dy_dx = tf.gradients(y, x)[0]\r\n    x = dy_dx\r\n    return x, i+1\r\n\r\n\r\nx = tf.placeholder(tf.float32, (None, 3))\r\ny = model.predict(x)\r\nxx, ind = tf.while_loop(_cond, _body, [x, 0])\r\n\r\nsess = tf.Session()\r\nsess.run(tf.global_variables_initializer())\r\n\r\nval = sess.run(xx, feed_dict={x: np.random.random((1, 3))})\r\nprint(val)\r\n\r\nsess.close()\r\n```\r\n"}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/17833", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/17833/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/17833/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/17833/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/17833", "id": 306532672, "node_id": "MDU6SXNzdWUzMDY1MzI2NzI=", "number": 17833, "title": "Create/Init a curl handler each time it's expensive. ", "user": {"login": "diiiego83", "id": 11553486, "node_id": "MDQ6VXNlcjExNTUzNDg2", "avatar_url": "https://avatars1.githubusercontent.com/u/11553486?v=4", "gravatar_id": "", "url": "https://api.github.com/users/diiiego83", "html_url": "https://github.com/diiiego83", "followers_url": "https://api.github.com/users/diiiego83/followers", "following_url": "https://api.github.com/users/diiiego83/following{/other_user}", "gists_url": "https://api.github.com/users/diiiego83/gists{/gist_id}", "starred_url": "https://api.github.com/users/diiiego83/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/diiiego83/subscriptions", "organizations_url": "https://api.github.com/users/diiiego83/orgs", "repos_url": "https://api.github.com/users/diiiego83/repos", "events_url": "https://api.github.com/users/diiiego83/events{/privacy}", "received_events_url": "https://api.github.com/users/diiiego83/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 404586594, "node_id": "MDU6TGFiZWw0MDQ1ODY1OTQ=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:awaiting%20tensorflower", "name": "stat:awaiting tensorflower", "color": "f4b400", "default": false, "description": ""}], "state": "open", "locked": false, "assignee": {"login": "bignamehyp", "id": 3474655, "node_id": "MDQ6VXNlcjM0NzQ2NTU=", "avatar_url": "https://avatars2.githubusercontent.com/u/3474655?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bignamehyp", "html_url": "https://github.com/bignamehyp", "followers_url": "https://api.github.com/users/bignamehyp/followers", "following_url": "https://api.github.com/users/bignamehyp/following{/other_user}", "gists_url": "https://api.github.com/users/bignamehyp/gists{/gist_id}", "starred_url": "https://api.github.com/users/bignamehyp/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bignamehyp/subscriptions", "organizations_url": "https://api.github.com/users/bignamehyp/orgs", "repos_url": "https://api.github.com/users/bignamehyp/repos", "events_url": "https://api.github.com/users/bignamehyp/events{/privacy}", "received_events_url": "https://api.github.com/users/bignamehyp/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "bignamehyp", "id": 3474655, "node_id": "MDQ6VXNlcjM0NzQ2NTU=", "avatar_url": "https://avatars2.githubusercontent.com/u/3474655?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bignamehyp", "html_url": "https://github.com/bignamehyp", "followers_url": "https://api.github.com/users/bignamehyp/followers", "following_url": "https://api.github.com/users/bignamehyp/following{/other_user}", "gists_url": "https://api.github.com/users/bignamehyp/gists{/gist_id}", "starred_url": "https://api.github.com/users/bignamehyp/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bignamehyp/subscriptions", "organizations_url": "https://api.github.com/users/bignamehyp/orgs", "repos_url": "https://api.github.com/users/bignamehyp/repos", "events_url": "https://api.github.com/users/bignamehyp/events{/privacy}", "received_events_url": "https://api.github.com/users/bignamehyp/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 3, "created_at": "2018-03-19T16:20:06Z", "updated_at": "2018-12-07T18:49:15Z", "closed_at": null, "author_association": "NONE", "body": "Hi,\r\nNice wrapper around libcurl but... initialize/clean_up a curl handler every time can be expensive especially if you need to perform multiple call on small data chunk. I'll suggest to update the \"LibCurl\" wrapper by adding a \"static\" cache where store the connection handlers once have been initialized (and reuse it). this will really impact the performances. \r\n\r\nBest,\r\nDiego"}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/17832", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/17832/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/17832/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/17832/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/17832", "id": 306527723, "node_id": "MDU6SXNzdWUzMDY1Mjc3MjM=", "number": 17832, "title": "tf.contrib.estimator.add_metrics does not pass label_ids to tf.estimator.DNNClassifier evaluation", "user": {"login": "jprosevear", "id": 699616, "node_id": "MDQ6VXNlcjY5OTYxNg==", "avatar_url": "https://avatars3.githubusercontent.com/u/699616?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jprosevear", "html_url": "https://github.com/jprosevear", "followers_url": "https://api.github.com/users/jprosevear/followers", "following_url": "https://api.github.com/users/jprosevear/following{/other_user}", "gists_url": "https://api.github.com/users/jprosevear/gists{/gist_id}", "starred_url": "https://api.github.com/users/jprosevear/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jprosevear/subscriptions", "organizations_url": "https://api.github.com/users/jprosevear/orgs", "repos_url": "https://api.github.com/users/jprosevear/repos", "events_url": "https://api.github.com/users/jprosevear/events{/privacy}", "received_events_url": "https://api.github.com/users/jprosevear/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 299643928, "node_id": "MDU6TGFiZWwyOTk2NDM5Mjg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:contributions%20welcome", "name": "stat:contributions welcome", "color": "f4b400", "default": false, "description": ""}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2018-03-19T16:07:35Z", "updated_at": "2018-09-17T16:25:09Z", "closed_at": null, "author_association": "NONE", "body": "### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**:\r\nYes\r\n\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**:\r\nOSX 10.12.6\r\n\r\n- **TensorFlow installed from (source or binary)**:\r\nBinary\r\n\r\n- **TensorFlow version (use command below)**:\r\n('v1.6.0-0-gd2e24b6039', '1.6.0')\r\n\r\n- **Python version**: \r\n2.7.13\r\n\r\n- **Bazel version (if compiling from source)**:\r\nN/A\r\n\r\n- **GCC/Compiler version (if compiling from source)**:\r\nN/A\r\n\r\n- **CUDA/cuDNN version**:\r\n- **GPU model and memory**:\r\n- **Exact command to reproduce**:\r\n\r\n\r\n### Describe the problem\r\nUsing tf.estimator.DNNClassifier as a multi-class estimator with a string label_vocabulary, tf.contrib.estimator.add_metrics will enable additional metrics functions as designed, however the label set pass to the metrics function will be the string tensor of labels, not the internal integer 'label_ids' of  DNNClassifier.  \r\n\r\nThis means the metrics do not have access to the labels used in the prediction tensor 'class_ids' (the tensor 'classes' does have the string labels).  This is a particular problem when trying to construct a confusion_matrix metric, as the confusion matrix tries to cast the labels to int64.\r\n\r\nWith the canned metrics, DNNClassifier  will simply pass in label_ids/class_ids:\r\nhttps://github.com/tensorflow/tensorflow/blob/9054c9b2ac303cbd1538166d0821f389cbc75894/tensorflow/python/estimator/canned/head.py#L776\r\n\r\n\r\n"}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/17823", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/17823/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/17823/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/17823/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/17823", "id": 306468020, "node_id": "MDU6SXNzdWUzMDY0NjgwMjA=", "number": 17823, "title": "[Feature Request] GPU ops for strided_slice/pad on uint8, int8 and bool", "user": {"login": "voegtlel", "id": 5764745, "node_id": "MDQ6VXNlcjU3NjQ3NDU=", "avatar_url": "https://avatars0.githubusercontent.com/u/5764745?v=4", "gravatar_id": "", "url": "https://api.github.com/users/voegtlel", "html_url": "https://github.com/voegtlel", "followers_url": "https://api.github.com/users/voegtlel/followers", "following_url": "https://api.github.com/users/voegtlel/following{/other_user}", "gists_url": "https://api.github.com/users/voegtlel/gists{/gist_id}", "starred_url": "https://api.github.com/users/voegtlel/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/voegtlel/subscriptions", "organizations_url": "https://api.github.com/users/voegtlel/orgs", "repos_url": "https://api.github.com/users/voegtlel/repos", "events_url": "https://api.github.com/users/voegtlel/events{/privacy}", "received_events_url": "https://api.github.com/users/voegtlel/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": {"login": "aselle", "id": 326106, "node_id": "MDQ6VXNlcjMyNjEwNg==", "avatar_url": "https://avatars1.githubusercontent.com/u/326106?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aselle", "html_url": "https://github.com/aselle", "followers_url": "https://api.github.com/users/aselle/followers", "following_url": "https://api.github.com/users/aselle/following{/other_user}", "gists_url": "https://api.github.com/users/aselle/gists{/gist_id}", "starred_url": "https://api.github.com/users/aselle/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aselle/subscriptions", "organizations_url": "https://api.github.com/users/aselle/orgs", "repos_url": "https://api.github.com/users/aselle/repos", "events_url": "https://api.github.com/users/aselle/events{/privacy}", "received_events_url": "https://api.github.com/users/aselle/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "aselle", "id": 326106, "node_id": "MDQ6VXNlcjMyNjEwNg==", "avatar_url": "https://avatars1.githubusercontent.com/u/326106?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aselle", "html_url": "https://github.com/aselle", "followers_url": "https://api.github.com/users/aselle/followers", "following_url": "https://api.github.com/users/aselle/following{/other_user}", "gists_url": "https://api.github.com/users/aselle/gists{/gist_id}", "starred_url": "https://api.github.com/users/aselle/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aselle/subscriptions", "organizations_url": "https://api.github.com/users/aselle/orgs", "repos_url": "https://api.github.com/users/aselle/repos", "events_url": "https://api.github.com/users/aselle/events{/privacy}", "received_events_url": "https://api.github.com/users/aselle/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 3, "created_at": "2018-03-19T13:43:42Z", "updated_at": "2019-02-11T17:32:51Z", "closed_at": null, "author_association": "CONTRIBUTOR", "body": "### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**: Yes\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**: Windows 10 and Linux Ubuntu 16.04\r\n- **TensorFlow installed from (source or binary)**: binary\r\n- **TensorFlow version (use command below)**: 1.6.0\r\n- **Python version**: 3.6\r\n- **Bazel version (if compiling from source)**: N/A\r\n- **GCC/Compiler version (if compiling from source)**: N/A\r\n- **CUDA/cuDNN version**: N/A\r\n- **GPU model and memory**: GeForce GTX 1080 Ti\r\n- **Exact command to reproduce**: See below\r\n\r\n### Introduction\r\n\r\nWe are trying to move the preprocessing of our tensorflow network to GPU in order to gain performance. Unfortunately it does not allow to run `strided_slice` or `pad` on GPU, thus either memcpy from/to GPU/CPU is required or everything must be computed on CPU. Also we wish not to convert these to other datatypes, because the tensors are quite large (thus every operation very memory consuming).\r\n\r\n### Request\r\nImplement GPU ops for datatypes such as `DT_UIN8`, `DT_INT8`, `DT_BOOL` for `strided_slice` and `pad`.\r\n### Example\r\n\r\n    import tensorflow as tf\r\n\r\n    x = tf.constant(0, dtype=tf.uint8, shape=(1,))\r\n    with tf.device('GPU:0'):\r\n        y = x[0]\r\n        # Or for padding:\r\n        #y = tf.pad(x, [[0, 0]])\r\n\r\n    # This works, because the cpu op is taken as fallback.\r\n    #with tf.Session(config=tf.ConfigProto(allow_soft_placement=True)).as_default():\r\n    # This doesn't work, because the GPU op doesn't exist.\r\n    with tf.Session().as_default():\r\n        print(y.eval())\r\n\r\n\r\nThis example fails with the following error for slicing (as defined in [strided_slice_op_gpu.cu.cc](https://github.com/tensorflow/tensorflow/blob/3c3c0481ec087aca4fa875d6d936f19b31191fc1/tensorflow/core/kernels/strided_slice_op_gpu.cu.cc) also via [TF_CALL_GPU_NUMBER_TYPES](https://github.com/tensorflow/tensorflow/blob/1752d9c8fac5f6cf85a41e77d92e2743adbfc446/tensorflow/core/framework/register_types.h#L188)):\r\n\r\n    InvalidArgumentError (see above for traceback): Cannot assign a device for operation 'strided_slice': Could not satisfy explicit device specification '/device:GPU:0' because no supported kernel for GPU devices is available.\r\n    Registered kernels:\r\n      device='CPU'; T in [DT_INT64]\r\n      device='CPU'; T in [DT_INT32]\r\n      device='CPU'; T in [DT_UINT16]\r\n      device='CPU'; T in [DT_INT16]\r\n      device='CPU'; T in [DT_UINT8]\r\n      device='CPU'; T in [DT_INT8]\r\n      device='CPU'; T in [DT_HALF]\r\n      device='CPU'; T in [DT_BFLOAT16]\r\n      device='CPU'; T in [DT_FLOAT]\r\n      device='CPU'; T in [DT_DOUBLE]\r\n      device='CPU'; T in [DT_COMPLEX64]\r\n      device='CPU'; T in [DT_COMPLEX128]\r\n      device='CPU'; T in [DT_BOOL]\r\n      device='CPU'; T in [DT_STRING]\r\n      device='CPU'; T in [DT_RESOURCE]\r\n      device='CPU'; T in [DT_VARIANT]\r\n      device='GPU'; T in [DT_HALF]\r\n      device='GPU'; T in [DT_FLOAT]\r\n      device='GPU'; T in [DT_DOUBLE]\r\n      device='GPU'; T in [DT_COMPLEX64]\r\n      device='GPU'; T in [DT_COMPLEX128]\r\n      device='GPU'; T in [DT_INT64]\r\n      device='GPU'; T in [DT_INT32]\r\n\r\n    \t [[Node: strided_slice = StridedSlice[Index=DT_INT32, T=DT_UINT8, begin_mask=0, ellipsis_mask=0, end_mask=0, new_axis_mask=0, shrink_axis_mask=1, _device=\"/device:GPU:0\"](Const, strided_slice/stack, strided_slice/stack_1, strided_slice/stack_2)]]\r\n\r\nFor padding (as defined in [pad_op_gpu.cu.cc](https://github.com/tensorflow/tensorflow/blob/3c3c0481ec087aca4fa875d6d936f19b31191fc1/tensorflow/core/kernels/pad_op_gpu.cu.cc) via [TF_CALL_GPU_NUMBER_TYPES](https://github.com/tensorflow/tensorflow/blob/1752d9c8fac5f6cf85a41e77d92e2743adbfc446/tensorflow/core/framework/register_types.h#L188)):\r\n\r\n    InvalidArgumentError (see above for traceback): Cannot assign a device for operation 'Pad': Could not satisfy explicit device specification '/device:GPU:0' because no supported kernel for GPU devices is available.\r\n    Registered kernels:\r\n      device='CPU'; T in [DT_INT64]; Tpaddings in [DT_INT32]\r\n      device='CPU'; T in [DT_INT64]; Tpaddings in [DT_INT64]\r\n      device='CPU'; T in [DT_INT32]; Tpaddings in [DT_INT32]\r\n      device='CPU'; T in [DT_INT32]; Tpaddings in [DT_INT64]\r\n      device='CPU'; T in [DT_UINT16]; Tpaddings in [DT_INT32]\r\n      device='CPU'; T in [DT_UINT16]; Tpaddings in [DT_INT64]\r\n      device='CPU'; T in [DT_INT16]; Tpaddings in [DT_INT32]\r\n      device='CPU'; T in [DT_INT16]; Tpaddings in [DT_INT64]\r\n      device='CPU'; T in [DT_UINT8]; Tpaddings in [DT_INT32]\r\n      device='CPU'; T in [DT_UINT8]; Tpaddings in [DT_INT64]\r\n      device='CPU'; T in [DT_INT8]; Tpaddings in [DT_INT32]\r\n      device='CPU'; T in [DT_INT8]; Tpaddings in [DT_INT64]\r\n      device='CPU'; T in [DT_HALF]; Tpaddings in [DT_INT32]\r\n      device='CPU'; T in [DT_HALF]; Tpaddings in [DT_INT64]\r\n      device='CPU'; T in [DT_BFLOAT16]; Tpaddings in [DT_INT32]\r\n      device='CPU'; T in [DT_BFLOAT16]; Tpaddings in [DT_INT64]\r\n      device='CPU'; T in [DT_FLOAT]; Tpaddings in [DT_INT32]\r\n      device='CPU'; T in [DT_FLOAT]; Tpaddings in [DT_INT64]\r\n      device='CPU'; T in [DT_DOUBLE]; Tpaddings in [DT_INT32]\r\n      device='CPU'; T in [DT_DOUBLE]; Tpaddings in [DT_INT64]\r\n      device='CPU'; T in [DT_COMPLEX64]; Tpaddings in [DT_INT32]\r\n      device='CPU'; T in [DT_COMPLEX64]; Tpaddings in [DT_INT64]\r\n      device='CPU'; T in [DT_COMPLEX128]; Tpaddings in [DT_INT32]\r\n      device='CPU'; T in [DT_COMPLEX128]; Tpaddings in [DT_INT64]\r\n      device='CPU'; T in [DT_BOOL]; Tpaddings in [DT_INT32]\r\n      device='CPU'; T in [DT_BOOL]; Tpaddings in [DT_INT64]\r\n      device='GPU'; T in [DT_HALF]; Tpaddings in [DT_INT32]\r\n      device='GPU'; T in [DT_HALF]; Tpaddings in [DT_INT64]\r\n      device='GPU'; T in [DT_FLOAT]; Tpaddings in [DT_INT32]\r\n      device='GPU'; T in [DT_FLOAT]; Tpaddings in [DT_INT64]\r\n      device='GPU'; T in [DT_DOUBLE]; Tpaddings in [DT_INT32]\r\n      device='GPU'; T in [DT_DOUBLE]; Tpaddings in [DT_INT64]\r\n      device='GPU'; T in [DT_INT32]; Tpaddings in [DT_INT32]\r\n      device='GPU'; T in [DT_INT32]; Tpaddings in [DT_INT64]\r\n\r\n    \t [[Node: Pad = Pad[T=DT_UINT8, Tpaddings=DT_INT32, _device=\"/device:GPU:0\"](Const, Pad/paddings)]]"}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/17783", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/17783/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/17783/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/17783/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/17783", "id": 306068048, "node_id": "MDU6SXNzdWUzMDYwNjgwNDg=", "number": 17783, "title": "Segmentation fault in Eigen::internal::InnerMostDimReducer<...>::reduce when passing large tensor to sparse_softmax_cross_entropy_with_logits", "user": {"login": "qtdaniel", "id": 21170884, "node_id": "MDQ6VXNlcjIxMTcwODg0", "avatar_url": "https://avatars2.githubusercontent.com/u/21170884?v=4", "gravatar_id": "", "url": "https://api.github.com/users/qtdaniel", "html_url": "https://github.com/qtdaniel", "followers_url": "https://api.github.com/users/qtdaniel/followers", "following_url": "https://api.github.com/users/qtdaniel/following{/other_user}", "gists_url": "https://api.github.com/users/qtdaniel/gists{/gist_id}", "starred_url": "https://api.github.com/users/qtdaniel/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/qtdaniel/subscriptions", "organizations_url": "https://api.github.com/users/qtdaniel/orgs", "repos_url": "https://api.github.com/users/qtdaniel/repos", "events_url": "https://api.github.com/users/qtdaniel/events{/privacy}", "received_events_url": "https://api.github.com/users/qtdaniel/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": {"login": "ebrevdo", "id": 1794715, "node_id": "MDQ6VXNlcjE3OTQ3MTU=", "avatar_url": "https://avatars0.githubusercontent.com/u/1794715?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ebrevdo", "html_url": "https://github.com/ebrevdo", "followers_url": "https://api.github.com/users/ebrevdo/followers", "following_url": "https://api.github.com/users/ebrevdo/following{/other_user}", "gists_url": "https://api.github.com/users/ebrevdo/gists{/gist_id}", "starred_url": "https://api.github.com/users/ebrevdo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ebrevdo/subscriptions", "organizations_url": "https://api.github.com/users/ebrevdo/orgs", "repos_url": "https://api.github.com/users/ebrevdo/repos", "events_url": "https://api.github.com/users/ebrevdo/events{/privacy}", "received_events_url": "https://api.github.com/users/ebrevdo/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "ebrevdo", "id": 1794715, "node_id": "MDQ6VXNlcjE3OTQ3MTU=", "avatar_url": "https://avatars0.githubusercontent.com/u/1794715?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ebrevdo", "html_url": "https://github.com/ebrevdo", "followers_url": "https://api.github.com/users/ebrevdo/followers", "following_url": "https://api.github.com/users/ebrevdo/following{/other_user}", "gists_url": "https://api.github.com/users/ebrevdo/gists{/gist_id}", "starred_url": "https://api.github.com/users/ebrevdo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ebrevdo/subscriptions", "organizations_url": "https://api.github.com/users/ebrevdo/orgs", "repos_url": "https://api.github.com/users/ebrevdo/repos", "events_url": "https://api.github.com/users/ebrevdo/events{/privacy}", "received_events_url": "https://api.github.com/users/ebrevdo/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 9, "created_at": "2018-03-16T20:33:57Z", "updated_at": "2018-12-07T18:49:11Z", "closed_at": null, "author_association": "NONE", "body": "### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**: I have written custom code. A simple reproduction script is included below.\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**: Linux Ubuntu 16.04 (also occurring on Linux Ubuntu 14.04)\r\n- **TensorFlow installed from (source or binary)**: TensorFlow installed from binary (also occurring after building from source)\r\n- **TensorFlow version (use command below)**: TensorFlow v1.6 (also occurring on v1.4, v1.5, v1.7rc0)\r\n- **Python version**: Python 2.7 (Ubuntu base and also occurring on Anaconda Python 2.7)\r\n- **Bazel version (if compiling from source)**: Bazel version: 0.11.1\r\n- **GCC/Compiler version (if compiling from source)**: GCC 4.9.4\r\n- **CUDA/cuDNN version**: CUDA not used, CPU only\r\n- **GPU model and memory**: GPU not used, CPU only (Intel(R) Xeon(R) CPU E5-2650 and Intel(R) Xeon(R) Platinum 8175M)\r\n- **Exact command to reproduce**: Command to reproduce using script given below: \"python sfi.py 300000\"\r\n\r\n### Describe the problem\r\nA segmentation fault is occurring with the following gdb backtrace when a \"logits\" tensor of sufficient size is passed to `sparse_softmax_cross_entropy_with_logits`. The single argument to the demonstration code below adjusts the size. I have found that there is a point below which the SegFault does not seem to ever occur and above which the SegFault always seems to occur, but around that point (e.g. within +/- 2) the SegFault behaviour is intermittent. Right on the change point I can run the same code with the same argument and it will sometimes generate a SegFault and sometimes not (though the random data generated in the demo code may be causing this randomness).\r\n\r\n```\r\nProgram received signal SIGSEGV, Segmentation fault.\r\n[Switching to Thread 0x7fffcdffb700 (LWP 2440)]\r\n0x00007fffef12a590 in Eigen::internal::InnerMostDimReducer<Eigen::TensorEvaluator<Eigen::TensorReductionOp<Eigen::internal::MaxReducer<float>, Eigen::IndexList<Eigen::type2index<1l>> const, Eigen::TensorMap<Eigen::Tensor<float const, 2, 1, int>, 16, Eigen::MakePointer> const, Eigen::MakePointer> const, Eigen::ThreadPoolDevice>, Eigen::internal::MaxReducer<float>, true>::reduce(Eigen::TensorEvaluator<Eigen::TensorReductionOp<Eigen::internal::MaxReducer<float>, Eigen::IndexList<Eigen::type2index<1l>> const, Eigen::TensorMap<Eigen::Tensor<float const, 2, 1, int>, 16, Eigen::MakePointer> const, Eigen::MakePointer> const, Eigen::ThreadPoolDevice> const&, int, int, Eigen::internal::MaxReducer<float>&) ()\r\n   from <home_dir>/.conda/envs/research/lib/python2.7/site-packages/tensorflow/python/_pywrap_tensorflow_internal.so\r\n(gdb) bt\r\n#0  0x00007fffef12a590 in Eigen::internal::InnerMostDimReducer<Eigen::TensorEvaluator<Eigen::TensorReductionOp<Eigen::internal::MaxReducer<float>, Eigen::IndexList<Eigen::type2index<1l>> const, Eigen::TensorMap<Eigen::Tensor<float const, 2, 1, int>, 16, Eigen::MakePointer> const, Eigen::MakePointer> const, Eigen::ThreadPoolDevice>, Eigen::internal::MaxReducer<float>, true>::reduce(Eigen::TensorEvaluator<Eigen::TensorReductionOp<Eigen::internal::MaxReducer<float>, Eigen::IndexList<Eigen::type2index<1l>> const, Eigen::TensorMap<Eigen::Tensor<float const, 2, 1, int>, 16, Eigen::MakePointer> const, Eigen::MakePointer> const, Eigen::ThreadPoolDevice> const&, int, int, Eigen::internal::MaxReducer<float>&) ()\r\n   from <home_dir>/.conda/envs/research/lib/python2.7/site-packages/tensorflow/python/_pywrap_tensorflow_internal.so\r\n#1  0x00007fffef12a90f in Eigen::internal::EvalRange<Eigen::TensorEvaluator<Eigen::TensorAssignOp<Eigen::TensorMap<Eigen::Tensor<float, 1, 1, int>, 16, Eigen::MakePointer>, Eigen::TensorReductionOp<Eigen::internal::MaxReducer<float>, Eigen::IndexList<Eigen::type2index<1l>> const, Eigen::TensorMap<Eigen::Tensor<float const, 2, 1, int>, 16, Eigen::MakePointer> const, Eigen::MakePointer> const> const, Eigen::ThreadPoolDevice>, int, true>::run(Eigen::TensorEvaluator<Eigen::TensorAssignOp<Eigen::TensorMap<Eigen::Tensor<float, 1, 1, int>, 16, Eigen::MakePointer>, Eigen::TensorReductionOp<Eigen::internal::MaxReducer<float>, Eigen::IndexList<Eigen::type2index<1l>> const, Eigen::TensorMap<Eigen::Tensor<float const, 2, 1, int>, 16, Eigen::MakePointer> const, Eigen::MakePointer> const> const, Eigen::ThreadPoolDevice>*, int, int) () from <home_dir>/.conda/envs/research/lib/python2.7/site-packages/tensorflow/python/_pywrap_tensorflow_internal.so\r\n#2  0x00007fffedcd5541 in Eigen::ThreadPoolDevice::parallelFor(long, Eigen::TensorOpCost const&, std::function<long (long)>, std::function<void (long, long)>) const::{lambda(long, long)#1}::operator()(long, long) const () from <home_dir>/.conda/envs/research/lib/python2.7/site-packages/tensorflow/python/_pywrap_tensorflow_internal.so\r\n#3  0x00007fffedcd5511 in Eigen::ThreadPoolDevice::parallelFor(long, Eigen::TensorOpCost const&, std::function<long (long)>, std::function<void (long, long)>) const::{lambda(long, long)#1}::operator()(long, long) const () from <home_dir>/.conda/envs/research/lib/python2.7/site-packages/tensorflow/python/_pywrap_tensorflow_internal.so\r\n#4  0x00007fffedcd5511 in Eigen::ThreadPoolDevice::parallelFor(long, Eigen::TensorOpCost const&, std::function<long (long)>, std::function<void (long, long)>) const::{lambda(long, long)#1}::operator()(long, long) const () from <home_dir>/.conda/envs/research/lib/python2.7/site-packages/tensorflow/python/_pywrap_tensorflow_internal.so\r\n#5  0x00007fffedcd5511 in Eigen::ThreadPoolDevice::parallelFor(long, Eigen::TensorOpCost const&, std::function<long (long)>, std::function<void (long, long)>) const::{lambda(long, long)#1}::operator()(long, long) const () from <home_dir>/.conda/envs/research/lib/python2.7/site-packages/tensorflow/python/_pywrap_tensorflow_internal.so\r\n#6  0x00007fffedcd5511 in Eigen::ThreadPoolDevice::parallelFor(long, Eigen::TensorOpCost const&, std::function<long (long)>, std::function<void (long, long)>) const::{lambda(long, long)#1}::operator()(long, long) const () from <home_dir>/.conda/envs/research/lib/python2.7/site-packages/tensorflow/python/_pywrap_tensorflow_internal.so\r\n#7  0x00007fffedcd5511 in Eigen::ThreadPoolDevice::parallelFor(long, Eigen::TensorOpCost const&, std::function<long (long)>, std::function<void (long, long)>) const::{lambda(long, long)#1}::operator()(long, long) const () from <home_dir>/.conda/envs/research/lib/python2.7/site-packages/tensorflow/python/_pywrap_tensorflow_internal.so\r\n#8  0x00007fffedcd5511 in Eigen::ThreadPoolDevice::parallelFor(long, Eigen::TensorOpCost const&, std::function<long (long)>, std::function<void (long, long)>) const::{lambda(long, long)#1}::operator()(long, long) const () from <home_dir>/.conda/envs/research/lib/python2.7/site-packages/tensorflow/python/_pywrap_tensorflow_internal.so\r\n#9  0x00007fffedcd5511 in Eigen::ThreadPoolDevice::parallelFor(long, Eigen::TensorOpCost const&, std::function<long (long)>, std::function<void (long, long)>) const::{lambda(long, long)#1}::operator()(long, long) const () from <home_dir>/.conda/envs/research/lib/python2.7/site-packages/tensorflow/python/_pywrap_tensorflow_internal.so\r\n#10 0x00007fffebcecb70 in Eigen::NonBlockingThreadPoolTempl<tensorflow::thread::EigenEnvironment>::WorkerLoop(int) ()\r\n   from <home_dir>/.conda/envs/research/lib/python2.7/site-packages/tensorflow/python/../libtensorflow_framework.so\r\n#11 0x00007fffebceb8e2 in std::_Function_handler<void (), tensorflow::thread::EigenEnvironment::CreateThread(std::function<void ()>)::{lambda()#1}>::_M_invoke(std::_Any_data const&) ()\r\n   from <home_dir>/.conda/envs/research/lib/python2.7/site-packages/tensorflow/python/../libtensorflow_framework.so\r\n#12 0x00007fffe20355b0 in ?? () from /usr/lib/x86_64-linux-gnu/libstdc++.so.6\r\n#13 0x00007ffff77e7184 in start_thread (arg=0x7fffcdffb700) at pthread_create.c:312\r\n#14 0x00007ffff6e0703d in clone () at ../sysdeps/unix/sysv/linux/x86_64/clone.S:111\r\n```\r\n\r\nThe problem occurs in all of these configurations:\r\n\r\n- Binary CPU-only install of TF: v1.4, v1.5, v1.6, and v1.7\r\n- Build from source code: v1.6, v1.7\r\n- Building with MKL and without MKL\r\n- Ubuntu Python and Anaconda Python (but only Python 2.7 in both cases)\r\n- In clean virtual/conda envs with only the minimum TF dependencies installed\r\n\r\n### Source code / logs\r\n\r\nI've been able to distil the problem down to the following code which reliably reproduces the problem for me on my local hardware and also on a m5.2xlarge EC2 instance running Ubuntu 16.04 Server or Amazon Linux. The following code has no external data or code dependencies other than tensorflow.\r\n\r\nThe script has a single argument which sets the \"vocabulary size\" (this was originally an RNN LM); if this value is large enough a SegFault occurs. The only operation of note is the `sparse_softmax_cross_entropy_with_logits`.\r\n\r\n```\r\n#!/usr/bin/env python\r\nfrom __future__ import absolute_import, division, print_function, unicode_literals\r\nimport sys\r\nimport tensorflow as tf\r\n\r\ndef main():\r\n    vocabulary_size = int(sys.argv[1])\r\n    batch_size = 256\r\n    step_size = 32\r\n\r\n    print(\"Vocabulary size:\", vocabulary_size)\r\n\r\n    labels = tf.get_variable(\"labels\", shape=[batch_size, step_size], dtype=tf.int32)\r\n    logits = tf.get_variable(\"logits\", shape=[batch_size, step_size, vocabulary_size])\r\n    costs = tf.nn.sparse_softmax_cross_entropy_with_logits(labels=labels, logits=logits)\r\n\r\n    with tf.Session() as session:\r\n        session.run(tf.global_variables_initializer())\r\n\r\n        print(\"Executing...\")\r\n        session.run(costs)\r\n        print(\"SUCCESS!\")\r\n\r\n\r\nif __name__ == \"__main__\":\r\n    main()\r\n```\r\n"}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/17778", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/17778/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/17778/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/17778/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/17778", "id": 306049832, "node_id": "MDU6SXNzdWUzMDYwNDk4MzI=", "number": 17778, "title": "Bad_alloc when building standalone project in Debug", "user": {"login": "jtavrisov", "id": 7612877, "node_id": "MDQ6VXNlcjc2MTI4Nzc=", "avatar_url": "https://avatars2.githubusercontent.com/u/7612877?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jtavrisov", "html_url": "https://github.com/jtavrisov", "followers_url": "https://api.github.com/users/jtavrisov/followers", "following_url": "https://api.github.com/users/jtavrisov/following{/other_user}", "gists_url": "https://api.github.com/users/jtavrisov/gists{/gist_id}", "starred_url": "https://api.github.com/users/jtavrisov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jtavrisov/subscriptions", "organizations_url": "https://api.github.com/users/jtavrisov/orgs", "repos_url": "https://api.github.com/users/jtavrisov/repos", "events_url": "https://api.github.com/users/jtavrisov/events{/privacy}", "received_events_url": "https://api.github.com/users/jtavrisov/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 404586558, "node_id": "MDU6TGFiZWw0MDQ1ODY1NTg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:community%20support", "name": "stat:community support", "color": "f4b400", "default": false, "description": ""}, {"id": 473173351, "node_id": "MDU6TGFiZWw0NzMxNzMzNTE=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:build/install", "name": "type:build/install", "color": "159b2e", "default": false, "description": ""}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2018-03-16T19:26:10Z", "updated_at": "2018-05-07T18:04:18Z", "closed_at": null, "author_association": "NONE", "body": "### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**: Yes\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**: Windows 10\r\n- **TensorFlow installed from (source or binary)**: Source\r\n- **TensorFlow version (use command below)**: Most recent, pulled from github\r\n- **GCC/Compiler version (if compiling from source)**: VS 2015\r\n- **CUDA/cuDNN version**: CPU Only\r\n- **Bazel version**:  NA\r\n- **GPU model and memory**:  NA\r\n- **Exact command to reproduce**: Practically any  tensorflow command in debug\r\n\r\nI have a large project (C++) that uses a CNN for a small part of the code. I have built tensorflow from sources as a shared library using the cmake instructions. I have linked against this built library and integrated it in our code. The project uses QTCreator and Qmake.\r\n\r\nIn currently works perfect in Release mode, however as it is a larger project there is needs to occasionally build in debug. When doing a debug build I get an exception thrown on basically the first instance of tensorflow (currently a call to ReadBinaryProto). If you comment that line out it will break on the next tensorflow call.\r\n\r\nI have built a standalone project in visual studio 2015 that isolates the tensorflow part of the project and it behaves exactly the same way.\r\n\r\nThe exception is Microsoft C++ exception: std::bad_alloc at memory location 0x00000071F8AFC730.\r\n\r\nI know there is no supported way to build a debug version of the library, but I need to use this library like this. I have no pressing need to debug tensorflow related code just the rest of it.\r\n\r\nThank you\r\n\r\n"}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/17746", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/17746/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/17746/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/17746/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/17746", "id": 305714926, "node_id": "MDU6SXNzdWUzMDU3MTQ5MjY=", "number": 17746, "title": "tf.contrib.crf.crf_decode fails when sequence_length is 0", "user": {"login": "riklopfer", "id": 413300, "node_id": "MDQ6VXNlcjQxMzMwMA==", "avatar_url": "https://avatars0.githubusercontent.com/u/413300?v=4", "gravatar_id": "", "url": "https://api.github.com/users/riklopfer", "html_url": "https://github.com/riklopfer", "followers_url": "https://api.github.com/users/riklopfer/followers", "following_url": "https://api.github.com/users/riklopfer/following{/other_user}", "gists_url": "https://api.github.com/users/riklopfer/gists{/gist_id}", "starred_url": "https://api.github.com/users/riklopfer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/riklopfer/subscriptions", "organizations_url": "https://api.github.com/users/riklopfer/orgs", "repos_url": "https://api.github.com/users/riklopfer/repos", "events_url": "https://api.github.com/users/riklopfer/events{/privacy}", "received_events_url": "https://api.github.com/users/riklopfer/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": {"login": "shivaniag", "id": 16565716, "node_id": "MDQ6VXNlcjE2NTY1NzE2", "avatar_url": "https://avatars1.githubusercontent.com/u/16565716?v=4", "gravatar_id": "", "url": "https://api.github.com/users/shivaniag", "html_url": "https://github.com/shivaniag", "followers_url": "https://api.github.com/users/shivaniag/followers", "following_url": "https://api.github.com/users/shivaniag/following{/other_user}", "gists_url": "https://api.github.com/users/shivaniag/gists{/gist_id}", "starred_url": "https://api.github.com/users/shivaniag/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/shivaniag/subscriptions", "organizations_url": "https://api.github.com/users/shivaniag/orgs", "repos_url": "https://api.github.com/users/shivaniag/repos", "events_url": "https://api.github.com/users/shivaniag/events{/privacy}", "received_events_url": "https://api.github.com/users/shivaniag/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "shivaniag", "id": 16565716, "node_id": "MDQ6VXNlcjE2NTY1NzE2", "avatar_url": "https://avatars1.githubusercontent.com/u/16565716?v=4", "gravatar_id": "", "url": "https://api.github.com/users/shivaniag", "html_url": "https://github.com/shivaniag", "followers_url": "https://api.github.com/users/shivaniag/followers", "following_url": "https://api.github.com/users/shivaniag/following{/other_user}", "gists_url": "https://api.github.com/users/shivaniag/gists{/gist_id}", "starred_url": "https://api.github.com/users/shivaniag/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/shivaniag/subscriptions", "organizations_url": "https://api.github.com/users/shivaniag/orgs", "repos_url": "https://api.github.com/users/shivaniag/repos", "events_url": "https://api.github.com/users/shivaniag/events{/privacy}", "received_events_url": "https://api.github.com/users/shivaniag/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 3, "created_at": "2018-03-15T20:51:17Z", "updated_at": "2018-12-14T18:51:30Z", "closed_at": null, "author_association": "CONTRIBUTOR", "body": "These links are similar, \r\n* https://stackoverflow.com/questions/42798518/how-can-i-pass-sequences-of-length-1-to-tf-contrib-crf-in-tensorflow\r\n* #7751\r\n------------------------\r\n\r\n### System information\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**: Ubuntu\r\n- **TensorFlow installed from (source or binary)**: source\r\n- **TensorFlow version (use command below)**: ('v1.6.0-0-gd2e24b6', '1.6.0')\r\n- **Python version**: 2.7\r\n- **Bazel version (if compiling from source)**: Build label: 0.10.0\r\n\r\n### Describe the problem\r\n`crf_decode` fails when sequence length == 0. This will happen when I am doing batch evaluation and one sequence is exhausted before the others. \r\n\r\n### Source code / logs\r\n```\r\n  File \"/usr/local/lib/python2.7/dist-packages/tensorflow/contrib/crf/python/ops/crf.py\", line 517, in crf_decode\r\n    fn2=_multi_seq_fn)\r\n  File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/layers/utils.py\", line 209, in smart_cond\r\n    return fn2()\r\n  File \"/usr/local/lib/python2.7/dist-packages/tensorflow/contrib/crf/python/ops/crf.py\", line 490, in _multi_seq_fn\r\n    backpointers, sequence_length - 1, seq_dim=1)\r\n  File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/ops/gen_array_ops.py\", line 4145, in reverse_sequence\r\n    seq_dim=seq_dim, batch_dim=batch_dim, name=name)\r\n  File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/framework/op_def_library.py\", line 787, in _apply_op_helper\r\n    op_def=op_def)\r\n  File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/framework/ops.py\", line 3271, in create_op\r\n    op_def=op_def)\r\n  File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/framework/ops.py\", line 1650, in __init__\r\n    self._traceback = self._graph._extract_stack()  # pylint: disable=protected-access\r\n\r\nInvalidArgumentError (see above for traceback): seq_lens(90) < 0\r\n```"}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/17707", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/17707/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/17707/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/17707/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/17707", "id": 305102766, "node_id": "MDU6SXNzdWUzMDUxMDI3NjY=", "number": 17707, "title": "Centered padded batch on tf.data.dataset with image-features and bounding boxes", "user": {"login": "StphMe", "id": 37112607, "node_id": "MDQ6VXNlcjM3MTEyNjA3", "avatar_url": "https://avatars1.githubusercontent.com/u/37112607?v=4", "gravatar_id": "", "url": "https://api.github.com/users/StphMe", "html_url": "https://github.com/StphMe", "followers_url": "https://api.github.com/users/StphMe/followers", "following_url": "https://api.github.com/users/StphMe/following{/other_user}", "gists_url": "https://api.github.com/users/StphMe/gists{/gist_id}", "starred_url": "https://api.github.com/users/StphMe/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/StphMe/subscriptions", "organizations_url": "https://api.github.com/users/StphMe/orgs", "repos_url": "https://api.github.com/users/StphMe/repos", "events_url": "https://api.github.com/users/StphMe/events{/privacy}", "received_events_url": "https://api.github.com/users/StphMe/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 299643928, "node_id": "MDU6TGFiZWwyOTk2NDM5Mjg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:contributions%20welcome", "name": "stat:contributions welcome", "color": "f4b400", "default": false, "description": ""}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-03-14T10:33:43Z", "updated_at": "2018-03-15T19:45:47Z", "closed_at": null, "author_association": "NONE", "body": "Hello everyone,\r\n\r\nI have a feature request to the `tf.data.dataset` API which might also benefit many other users.\r\nThe use case is this:\r\nSuppose you have a regular instance based segmentation dataset containing images features, image-targets (for segmentation), bounding boxes, and a class- and instance id to each bounding box. ([Mapillary](https://blog.mapillary.com/product/2017/05/03/mapillary-vistas-dataset.html) is a nice example for that, even though it natively does not contain bounding boxes, but they can be inferred, because it has pixel wise instances)\r\n\r\nIf you use the `tf.data.dataset` API to create a dataset in one or another way (for instance use a `generator` and then create the dataset with `tf.data.Dataset.from_generator`), you can create a dataset including the feature_images, target_images and bounding boxes.\r\n\r\nNow you want to batch them together.\r\nThe problem is, that the images may have different sizes and the number of bounding boxes per image may be different for each entry of the dataset. Therefore you can not batch them unless you make sure they have the same size. To keep the aspect ratio in the images one could consider padding the images according to the biggest size in the batch. Also the bounding boxes can be padded, according to the maximum number of bounding boxes in the batch. And there already is a function that does that: `tf.data.dataset.padded_batch`. Unfortunately the padding is always applied to the end of the dimension:\r\nA picture with\r\n```\r\n[[1,1,1,1]\r\n [1,1,1,1]\r\n [1,1,1,1]\r\n [1,1,1,1]]\r\n```\r\n\r\npadded by 2 would look like:\r\n```\r\n[[1,1,1,1,0,0]\r\n [1,1,1,1,0,0]\r\n [1,1,1,1,0,0]\r\n [1,1,1,1,0,0]\r\n [0,0,0,0,0,0]\r\n [0,0,0,0,0,0]]\r\n```\r\n\r\nThis would likely lead to dead or irrelevant neurons within the receptive field at the right or bottom of the image. Therefore a centered padding would be nice:\r\n```\r\n[[0,0,0,0,0,0]\r\n [0,1,1,1,1,0]\r\n [0,1,1,1,1,0]\r\n [0,1,1,1,1,0]\r\n [0,1,1,1,1,0]\r\n [0,0,0,0,0,0]]\r\n```\r\n\r\nUp until here there already exists an issue that covers the behaviour [here](https://github.com/tensorflow/tensorflow/issues/13969#issuecomment-370902365) . But now comes the tricky part: If we pad the image at the top or the left, we need an offset to the bounding boxes according to the padding because the edges of the bounding boxes are in image coordinates and shift when the image is padded.\r\n\r\nSo here is my suggestion:\r\nOne could extend the `tf.data.dataset.padded_patch` to perform centered padding on each dimension with an additional `centered` flag or so, similar as suggested in the issue above, but also returns the maximum dimension within each element of the batch. This information can then be used to adjust the bounding box location.\r\n\r\nAlternative:\r\nOne could also consider an operator to return the maximum dimensions within the bath to use that information for padding. I could imagine, to have a `self written padding function` and use `tf.data.map` and the maximum batch dimensions information to incorporate the padding to the dataset per element using `tf.pad` or similar. The nice thing about this alternative approach is, that the users can build the padding as they want since `tf.pad` already can do central padding and other styles.\r\n\r\nI had a little dive into the functionality of `padded_batch` and it seems that the calculation of the maximum dimension is done in `tensorflow/core/kernels/data/padded_batch_dataset_op.cc` line 264 ff. This however is in the iterator class, which I presume is called when the data is actually passed through. So I'm not sure if or how to return the maximum batch dimensions from there to the point where I can use it to pad the images. If this is indeed not possible, I'd appreciate other suggestions because the way it is, the `tf.data.dataset` can not be used for this kind of data.\r\n\r\n"}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/17691", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/17691/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/17691/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/17691/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/17691", "id": 304926508, "node_id": "MDU6SXNzdWUzMDQ5MjY1MDg=", "number": 17691, "title": "tf 1.4 and tf1.5 and tf1.6 ", "user": {"login": "iyukuni", "id": 29640501, "node_id": "MDQ6VXNlcjI5NjQwNTAx", "avatar_url": "https://avatars2.githubusercontent.com/u/29640501?v=4", "gravatar_id": "", "url": "https://api.github.com/users/iyukuni", "html_url": "https://github.com/iyukuni", "followers_url": "https://api.github.com/users/iyukuni/followers", "following_url": "https://api.github.com/users/iyukuni/following{/other_user}", "gists_url": "https://api.github.com/users/iyukuni/gists{/gist_id}", "starred_url": "https://api.github.com/users/iyukuni/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/iyukuni/subscriptions", "organizations_url": "https://api.github.com/users/iyukuni/orgs", "repos_url": "https://api.github.com/users/iyukuni/repos", "events_url": "https://api.github.com/users/iyukuni/events{/privacy}", "received_events_url": "https://api.github.com/users/iyukuni/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": {"login": "tatatodd", "id": 5453737, "node_id": "MDQ6VXNlcjU0NTM3Mzc=", "avatar_url": "https://avatars3.githubusercontent.com/u/5453737?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tatatodd", "html_url": "https://github.com/tatatodd", "followers_url": "https://api.github.com/users/tatatodd/followers", "following_url": "https://api.github.com/users/tatatodd/following{/other_user}", "gists_url": "https://api.github.com/users/tatatodd/gists{/gist_id}", "starred_url": "https://api.github.com/users/tatatodd/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tatatodd/subscriptions", "organizations_url": "https://api.github.com/users/tatatodd/orgs", "repos_url": "https://api.github.com/users/tatatodd/repos", "events_url": "https://api.github.com/users/tatatodd/events{/privacy}", "received_events_url": "https://api.github.com/users/tatatodd/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "tatatodd", "id": 5453737, "node_id": "MDQ6VXNlcjU0NTM3Mzc=", "avatar_url": "https://avatars3.githubusercontent.com/u/5453737?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tatatodd", "html_url": "https://github.com/tatatodd", "followers_url": "https://api.github.com/users/tatatodd/followers", "following_url": "https://api.github.com/users/tatatodd/following{/other_user}", "gists_url": "https://api.github.com/users/tatatodd/gists{/gist_id}", "starred_url": "https://api.github.com/users/tatatodd/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tatatodd/subscriptions", "organizations_url": "https://api.github.com/users/tatatodd/orgs", "repos_url": "https://api.github.com/users/tatatodd/repos", "events_url": "https://api.github.com/users/tatatodd/events{/privacy}", "received_events_url": "https://api.github.com/users/tatatodd/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2018-03-13T20:37:46Z", "updated_at": "2018-12-14T18:51:25Z", "closed_at": null, "author_association": "NONE", "body": "### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**:  No\r\n\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**:  \r\nMac OS\r\n\r\n- **TensorFlow installed from (source or binary)**:\r\npip install from binary\r\n\r\n- **TensorFlow version (use command below)**:\r\n1.4 and 1.6 \r\n\r\n- **Python version**: \r\n2.7 \r\n\r\n- **Bazel version (if compiling from source)**:\r\nN/A\r\n- **GCC/Compiler version (if compiling from source)**:\r\nN/A\r\n- **CUDA/cuDNN version**:\r\nN/A\r\n- **GPU model and memory**:\r\nN/A\r\n\r\n\r\n### Describe the problem\r\nI had a model trained (with multiple days) using tf1.4, and I want to load it in tf1.6.  and the error occurs as below: \r\n\r\n  File \"/Users/iyukun/anaconda/lib/python2.7/site-packages/tensorflow/python/framework/ops.py\", line 2427, in set_shapes_for_outputs\r\n    return _set_shapes_for_outputs(op)\r\n  File \"/Users/iyukun/anaconda/lib/python2.7/site-packages/tensorflow/python/framework/ops.py\", line 2400, in _set_shapes_for_outputs\r\n    shapes = shape_func(op)\r\n  File \"/Users/iyukun/anaconda/lib/python2.7/site-packages/tensorflow/python/framework/ops.py\", line 2330, in call_with_requiring\r\n    return call_cpp_shape_fn(op, require_shape_fn=True)\r\n  File \"/Users/iyukun/anaconda/lib/python2.7/site-packages/tensorflow/python/framework/common_shapes.py\", line 627, in call_cpp_shape_fn\r\n    require_shape_fn)\r\n  File \"/Users/iyukun/anaconda/lib/python2.7/site-packages/tensorflow/python/framework/common_shapes.py\", line 691, in _call_cpp_shape_fn_impl\r\n    raise ValueError(err.message)\r\nValueError: Dimensions must be equal, but are 900 and 600 for 'dynamic_seq2seq/decoder/decoder/while/BeamSearchDecoderStep/multi_rnn_cell/cell_1/basic_lstm_cell/MatMul' (op: 'MatMul') with input shapes: [?,900], [600,1200].\r\n\r\nLooks like the MatMul op is changed from float16 to float32 in tf 1.5+?  If so,  is there a way to load the model in tf1.5+? \r\n"}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/17650", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/17650/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/17650/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/17650/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/17650", "id": 304452589, "node_id": "MDU6SXNzdWUzMDQ0NTI1ODk=", "number": 17650, "title": "Allow tf.estimator.train_and_evaluate evaluation frequency in steps", "user": {"login": "skycoop", "id": 8099614, "node_id": "MDQ6VXNlcjgwOTk2MTQ=", "avatar_url": "https://avatars1.githubusercontent.com/u/8099614?v=4", "gravatar_id": "", "url": "https://api.github.com/users/skycoop", "html_url": "https://github.com/skycoop", "followers_url": "https://api.github.com/users/skycoop/followers", "following_url": "https://api.github.com/users/skycoop/following{/other_user}", "gists_url": "https://api.github.com/users/skycoop/gists{/gist_id}", "starred_url": "https://api.github.com/users/skycoop/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/skycoop/subscriptions", "organizations_url": "https://api.github.com/users/skycoop/orgs", "repos_url": "https://api.github.com/users/skycoop/repos", "events_url": "https://api.github.com/users/skycoop/events{/privacy}", "received_events_url": "https://api.github.com/users/skycoop/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1097545817, "node_id": "MDU6TGFiZWwxMDk3NTQ1ODE3", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/comp:apis", "name": "comp:apis", "color": "0052cc", "default": false, "description": ""}, {"id": 404586594, "node_id": "MDU6TGFiZWw0MDQ1ODY1OTQ=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:awaiting%20tensorflower", "name": "stat:awaiting tensorflower", "color": "f4b400", "default": false, "description": ""}], "state": "open", "locked": false, "assignee": {"login": "xiejw", "id": 1184671, "node_id": "MDQ6VXNlcjExODQ2NzE=", "avatar_url": "https://avatars1.githubusercontent.com/u/1184671?v=4", "gravatar_id": "", "url": "https://api.github.com/users/xiejw", "html_url": "https://github.com/xiejw", "followers_url": "https://api.github.com/users/xiejw/followers", "following_url": "https://api.github.com/users/xiejw/following{/other_user}", "gists_url": "https://api.github.com/users/xiejw/gists{/gist_id}", "starred_url": "https://api.github.com/users/xiejw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/xiejw/subscriptions", "organizations_url": "https://api.github.com/users/xiejw/orgs", "repos_url": "https://api.github.com/users/xiejw/repos", "events_url": "https://api.github.com/users/xiejw/events{/privacy}", "received_events_url": "https://api.github.com/users/xiejw/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "xiejw", "id": 1184671, "node_id": "MDQ6VXNlcjExODQ2NzE=", "avatar_url": "https://avatars1.githubusercontent.com/u/1184671?v=4", "gravatar_id": "", "url": "https://api.github.com/users/xiejw", "html_url": "https://github.com/xiejw", "followers_url": "https://api.github.com/users/xiejw/followers", "following_url": "https://api.github.com/users/xiejw/following{/other_user}", "gists_url": "https://api.github.com/users/xiejw/gists{/gist_id}", "starred_url": "https://api.github.com/users/xiejw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/xiejw/subscriptions", "organizations_url": "https://api.github.com/users/xiejw/orgs", "repos_url": "https://api.github.com/users/xiejw/repos", "events_url": "https://api.github.com/users/xiejw/events{/privacy}", "received_events_url": "https://api.github.com/users/xiejw/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 24, "created_at": "2018-03-12T16:47:38Z", "updated_at": "2019-11-12T04:38:27Z", "closed_at": null, "author_association": "NONE", "body": "### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**: Yes\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**: Ubuntu 16.04\r\n- **TensorFlow installed from (source or binary)**: Binary\r\n- **TensorFlow version (use command below)**:  `v1.6.0-0-gd2e24b6039 1.6.0`\r\n- **Python version**: Python 3.5.2\r\n- **Bazel version (if compiling from source)**: N/A\r\n- **GCC/Compiler version (if compiling from source)**: N/A\r\n- **CUDA/cuDNN version**: 9.0/7.0\r\n- **GPU model and memory**: GTX 1080/1080Ti, P100\r\n- **Exact command to reproduce**: N/A\r\n\r\n### Describe the problem\r\nWe're using `tf.estimator.train_and_evaluate` for running our training, but we're running into an issue with getting it to run evaluation at the correct frequency. Because the training input pipeline is fully reset after evaluation, we're attempting to follow the docs recommendation of running evaluation after an epoch or two. \r\n\r\nThis is a problem for us because we can only figure out how to set the evaluation frequency using `tf.estimator.EvalSpec.throttle_secs`, which runs evaluation every `throttle_secs` seconds (since our evaluation takes less time than `throttle_secs`).  We run on a few different hardware platforms and configurations that all alter the training speed, so the only way to ensure that we perform evaluation after finishing an epoch is to calculate a value for `throttle_secs` that incorporates that training's training speed. This is obviously suboptimal compared to setting the evaluation frequency in steps rather than seconds.\r\n\r\nHere are the approaches to solving this problem that I've been able to find after a little poking around:\r\n\r\n1. Prevent evaluations triggered by `throttle_secs` passing from saving a new checkpoint, and only run if there is a new checkpoint. This lets the user specify `tf.estimator.RunConfig.save_checkpoints_steps` to set the evaluation frequency. This is actually how I thought `throttle_secs` worked based on my reading of the documentation\r\n2. Allow the user to set `throttle_steps` as a part of the `EvalSpec`. This value would could be used by the `SecondOrStepTimer` to run the evaluation based on how many steps have elapsed instead of seconds.\r\n\r\n\r\nI'd be willing to submit a PR with either fix, but I'm not sure which one would be correct/best, so I'd appreciate any feedback or alternate solutions :smile: "}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/17628", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/17628/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/17628/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/17628/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/17628", "id": 304152012, "node_id": "MDU6SXNzdWUzMDQxNTIwMTI=", "number": 17628, "title": "iOS error: Running model failed:Invalid argument: NodeDef mentions attr 'dilations' not in Op<name=Conv2D; signature=input:T, filter:T ->", "user": {"login": "hanspond", "id": 26591418, "node_id": "MDQ6VXNlcjI2NTkxNDE4", "avatar_url": "https://avatars2.githubusercontent.com/u/26591418?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hanspond", "html_url": "https://github.com/hanspond", "followers_url": "https://api.github.com/users/hanspond/followers", "following_url": "https://api.github.com/users/hanspond/following{/other_user}", "gists_url": "https://api.github.com/users/hanspond/gists{/gist_id}", "starred_url": "https://api.github.com/users/hanspond/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hanspond/subscriptions", "organizations_url": "https://api.github.com/users/hanspond/orgs", "repos_url": "https://api.github.com/users/hanspond/repos", "events_url": "https://api.github.com/users/hanspond/events{/privacy}", "received_events_url": "https://api.github.com/users/hanspond/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 473172988, "node_id": "MDU6TGFiZWw0NzMxNzI5ODg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:bug", "name": "type:bug", "color": "159b2e", "default": false, "description": ""}], "state": "open", "locked": false, "assignee": {"login": "miaout17", "id": 22063, "node_id": "MDQ6VXNlcjIyMDYz", "avatar_url": "https://avatars0.githubusercontent.com/u/22063?v=4", "gravatar_id": "", "url": "https://api.github.com/users/miaout17", "html_url": "https://github.com/miaout17", "followers_url": "https://api.github.com/users/miaout17/followers", "following_url": "https://api.github.com/users/miaout17/following{/other_user}", "gists_url": "https://api.github.com/users/miaout17/gists{/gist_id}", "starred_url": "https://api.github.com/users/miaout17/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/miaout17/subscriptions", "organizations_url": "https://api.github.com/users/miaout17/orgs", "repos_url": "https://api.github.com/users/miaout17/repos", "events_url": "https://api.github.com/users/miaout17/events{/privacy}", "received_events_url": "https://api.github.com/users/miaout17/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "miaout17", "id": 22063, "node_id": "MDQ6VXNlcjIyMDYz", "avatar_url": "https://avatars0.githubusercontent.com/u/22063?v=4", "gravatar_id": "", "url": "https://api.github.com/users/miaout17", "html_url": "https://github.com/miaout17", "followers_url": "https://api.github.com/users/miaout17/followers", "following_url": "https://api.github.com/users/miaout17/following{/other_user}", "gists_url": "https://api.github.com/users/miaout17/gists{/gist_id}", "starred_url": "https://api.github.com/users/miaout17/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/miaout17/subscriptions", "organizations_url": "https://api.github.com/users/miaout17/orgs", "repos_url": "https://api.github.com/users/miaout17/repos", "events_url": "https://api.github.com/users/miaout17/events{/privacy}", "received_events_url": "https://api.github.com/users/miaout17/received_events", "type": "User", "site_admin": false}, {"login": "shivaniag", "id": 16565716, "node_id": "MDQ6VXNlcjE2NTY1NzE2", "avatar_url": "https://avatars1.githubusercontent.com/u/16565716?v=4", "gravatar_id": "", "url": "https://api.github.com/users/shivaniag", "html_url": "https://github.com/shivaniag", "followers_url": "https://api.github.com/users/shivaniag/followers", "following_url": "https://api.github.com/users/shivaniag/following{/other_user}", "gists_url": "https://api.github.com/users/shivaniag/gists{/gist_id}", "starred_url": "https://api.github.com/users/shivaniag/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/shivaniag/subscriptions", "organizations_url": "https://api.github.com/users/shivaniag/orgs", "repos_url": "https://api.github.com/users/shivaniag/repos", "events_url": "https://api.github.com/users/shivaniag/events{/privacy}", "received_events_url": "https://api.github.com/users/shivaniag/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 18, "created_at": "2018-03-11T11:53:20Z", "updated_at": "2018-12-11T18:51:01Z", "closed_at": null, "author_association": "NONE", "body": "\r\n### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**:\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**: MacOS\r\n- **TensorFlow installed from (source or binary)**: pip\r\n- **TensorFlow version (use command below)**: 1.6\r\n- **Python version**: 3.6\r\n- **Bazel version (if compiling from source)**:\r\n- **GCC/Compiler version (if compiling from source)**:\r\n- **CUDA/cuDNN version**: none\r\n- **GPU model and memory**:none\r\n- **Exact command to reproduce**:\r\n\r\n### Describe the problem\r\nI was just trying to make a classifier iOS app by simply replacing the inception pb file to my pb file for my classifier.\r\nThe iOS app example I was using is camera. It worked well with the original inception.\r\nBut when I changed the pb file I got an error as listed below. The pb file was generated with [tensorflow-for-poest-2](https://github.com/googlecodelabs/tensorflow-for-poets-2). \r\nThen the model doesn't work. The camera is working but no classification message.\r\n\r\nI assume there is some mismatch between versions of TF?\r\n\r\n### Source code / logs\r\n2018-03-11 20:33:41.906421: E /Users/apple/OneDrive/P/tensorflow/tensorflow/examples/ios/camera/CameraExampleViewController.mm:327] Running model failed:Invalid argument: NodeDef mentions attr 'dilations' not in Op<name=Conv2D; signature=input:T, filter:T -> output:T; attr=T:type,allowed=[DT_HALF, DT_FLOAT, DT_DOUBLE]; attr=strides:list(int); attr=use_cudnn_on_gpu:bool,default=true; attr=padding:string,allowed=[\"SAME\", \"VALID\"]; attr=data_format:string,default=\"NHWC\",allowed=[\"NHWC\", \"NCHW\"]>; NodeDef: conv/Conv2D = Conv2D[T=DT_FLOAT, data_format=\"NHWC\", dilations=[1, 1, 1, 1], padding=\"VALID\", strides=[1, 2, 2, 1], use_cudnn_on_gpu=true, _device=\"/job:localhost/replica:0/task:0/cpu:0\"](_recv_Mul_0, conv/conv2d_params). (Check whether your GraphDef-interpreting binary is up to date with your GraphDef-generating binary.).\r\n\t [[Node: conv/Conv2D = Conv2D[T=DT_FLOAT, data_format=\"NHWC\", dilations=[1, 1, 1, 1], padding=\"VALID\", strides=[1, 2, 2, 1], use_cudnn_on_gpu=true, _device=\"/job:localhost/replica:0/task:0/cpu:0\"](_recv_Mul_0, conv/conv2d_params)]]\r\n"}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/17586", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/17586/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/17586/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/17586/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/17586", "id": 303743071, "node_id": "MDU6SXNzdWUzMDM3NDMwNzE=", "number": 17586, "title": "Not found: FeedInputs: unable to find feed output ", "user": {"login": "billtiger", "id": 28770891, "node_id": "MDQ6VXNlcjI4NzcwODkx", "avatar_url": "https://avatars1.githubusercontent.com/u/28770891?v=4", "gravatar_id": "", "url": "https://api.github.com/users/billtiger", "html_url": "https://github.com/billtiger", "followers_url": "https://api.github.com/users/billtiger/followers", "following_url": "https://api.github.com/users/billtiger/following{/other_user}", "gists_url": "https://api.github.com/users/billtiger/gists{/gist_id}", "starred_url": "https://api.github.com/users/billtiger/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/billtiger/subscriptions", "organizations_url": "https://api.github.com/users/billtiger/orgs", "repos_url": "https://api.github.com/users/billtiger/repos", "events_url": "https://api.github.com/users/billtiger/events{/privacy}", "received_events_url": "https://api.github.com/users/billtiger/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": {"login": "shivaniag", "id": 16565716, "node_id": "MDQ6VXNlcjE2NTY1NzE2", "avatar_url": "https://avatars1.githubusercontent.com/u/16565716?v=4", "gravatar_id": "", "url": "https://api.github.com/users/shivaniag", "html_url": "https://github.com/shivaniag", "followers_url": "https://api.github.com/users/shivaniag/followers", "following_url": "https://api.github.com/users/shivaniag/following{/other_user}", "gists_url": "https://api.github.com/users/shivaniag/gists{/gist_id}", "starred_url": "https://api.github.com/users/shivaniag/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/shivaniag/subscriptions", "organizations_url": "https://api.github.com/users/shivaniag/orgs", "repos_url": "https://api.github.com/users/shivaniag/repos", "events_url": "https://api.github.com/users/shivaniag/events{/privacy}", "received_events_url": "https://api.github.com/users/shivaniag/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "shivaniag", "id": 16565716, "node_id": "MDQ6VXNlcjE2NTY1NzE2", "avatar_url": "https://avatars1.githubusercontent.com/u/16565716?v=4", "gravatar_id": "", "url": "https://api.github.com/users/shivaniag", "html_url": "https://github.com/shivaniag", "followers_url": "https://api.github.com/users/shivaniag/followers", "following_url": "https://api.github.com/users/shivaniag/following{/other_user}", "gists_url": "https://api.github.com/users/shivaniag/gists{/gist_id}", "starred_url": "https://api.github.com/users/shivaniag/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/shivaniag/subscriptions", "organizations_url": "https://api.github.com/users/shivaniag/orgs", "repos_url": "https://api.github.com/users/shivaniag/repos", "events_url": "https://api.github.com/users/shivaniag/events{/privacy}", "received_events_url": "https://api.github.com/users/shivaniag/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 4, "created_at": "2018-03-09T06:56:57Z", "updated_at": "2018-12-15T18:38:33Z", "closed_at": null, "author_association": "NONE", "body": "@GeorgeBohw\r\nhello,i also meet this problem.could you tell me how do you solve this problem?\r\n@tensorflowbutler \r\ni have use the the summarize_graph tool to guesses about likely input and output nodes,this is the command:bazel-bin/tensorflow/tools/graph_transforms/summarize_graph --in_graph=/home/biao/test/occ_detect.pb\r\nhere is the message:\r\n\r\nNo inputs spotted.\r\nNo variables spotted.\r\nFound 1 possible outputs: (name=softmax_linear/softmax_linear_1, op=Add) \r\nFound 850090 (850.09k) const parameters, 0 (0) variable parameters, and 0 control_edges\r\nOp types used: 18 Const, 13 Identity, 5 Add, 5 Relu, 3 BiasAdd, 3 MaxPool, 3 MatMul, 3 LRN, 3 Conv2D, 2 Mul, 1 Floor, 1 QueueDequeueManyV2, 1 RandomShuffleQueueV2, 1 RandomUniform, 1 RealDiv, 1 Reshape, 1 Sub\r\nTo use with tensorflow/tools/benchmark:benchmark_model try these arguments:\r\nbazel run tensorflow/tools/benchmark:benchmark_model -- --graph=/home/biao/test/occ_detect.pb --show_flops --input_layer= --input_layer_type= --input_layer_shape= --output_layer=softmax_linear/softmax_linear_1\r\n\r\ni guess the problem is my .pb file is fault?\r\n\r\n"}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/17502", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/17502/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/17502/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/17502/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/17502", "id": 303019600, "node_id": "MDU6SXNzdWUzMDMwMTk2MDA=", "number": 17502, "title": "Tensorflow failed when build with MSVC + /permissive-", "user": {"login": "PhoebeHui", "id": 20694052, "node_id": "MDQ6VXNlcjIwNjk0MDUy", "avatar_url": "https://avatars2.githubusercontent.com/u/20694052?v=4", "gravatar_id": "", "url": "https://api.github.com/users/PhoebeHui", "html_url": "https://github.com/PhoebeHui", "followers_url": "https://api.github.com/users/PhoebeHui/followers", "following_url": "https://api.github.com/users/PhoebeHui/following{/other_user}", "gists_url": "https://api.github.com/users/PhoebeHui/gists{/gist_id}", "starred_url": "https://api.github.com/users/PhoebeHui/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/PhoebeHui/subscriptions", "organizations_url": "https://api.github.com/users/PhoebeHui/orgs", "repos_url": "https://api.github.com/users/PhoebeHui/repos", "events_url": "https://api.github.com/users/PhoebeHui/events{/privacy}", "received_events_url": "https://api.github.com/users/PhoebeHui/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 299643928, "node_id": "MDU6TGFiZWwyOTk2NDM5Mjg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:contributions%20welcome", "name": "stat:contributions welcome", "color": "f4b400", "default": false, "description": ""}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2018-03-07T09:17:23Z", "updated_at": "2018-03-30T18:45:15Z", "closed_at": null, "author_association": "NONE", "body": "System information\r\n\u2022\tHave I written custom code (as opposed to using a stock example script provided in TensorFlow):\r\nN/A \r\n\u2022\tOS Platform and Distribution (e.g., Linux Ubuntu 16.04):\r\nWindows server 2016\r\n\u2022\tTensorFlow installed from (source or binary):\r\nSource\r\n\u2022\tTensorFlow version (use command below):\r\nMaster branch latest revison\r\n\u2022\tPython version:\r\nAnaconda 4.1.1 (Python 3.5 64-bit) \r\n\u2022\tBazel version (if compiling from source):\r\nN/A\r\n\u2022\tGCC/Compiler version (if compiling from source):\r\nVS2017 15.5.7\r\n\u2022\tCUDA/cuDNN version:\r\nNVidia CUDA Toolkit 8.0\r\nNVidia CUDNN 5.1\r\n\u2022\tGPU model and memory:\r\nN/A\r\n\u2022\tExact command to reproduce:\r\nN/A\r\n\r\nDescribe the problem\r\nTensorflow failed when build with /permissive- by using msvc on windows. This should be tensorflow source issue, could you help fix it?\r\n\r\nThe failures like:\r\nD:\\Tensorflow\\src\\tensorflow/core/util/memmapped_file_system.h(61): error C2440: 'initializing': cannot convert from 'const char [21]' to 'char *const '\r\nD:\\Tensorflow\\src\\tensorflow/core/util/memmapped_file_system.h(61): note: Conversion from string literal loses const qualifier (see /Zc:strictStrings)\r\nD:\\Tensorflow\\src\\tensorflow/core/util/memmapped_file_system.h(69): error C2440: 'initializing': cannot convert from 'const char [22]' to 'char *const '\r\nD:\\Tensorflow\\src\\tensorflow/core/util/memmapped_file_system.h(69): note: Conversion from string literal loses const qualifier (see /Zc:strictStrings)\r\nD:\\Tensorflow\\src\\tensorflow\\core\\util\\memmapped_file_system.cc(182): error C2737: 'tensorflow::MemmappedFileSystem::kMemmappedPackagePrefix': 'constexpr' object must be initialized\r\nD:\\Tensorflow\\src\\tensorflow\\core\\util\\memmapped_file_system.cc(182): error C2734: 'tensorflow::MemmappedFileSystem::kMemmappedPackagePrefix': 'const' object must be initialized if not 'extern'\r\nD:\\Tensorflow\\src\\tensorflow\\core\\util\\memmapped_file_system.cc(183): error C2737: 'tensorflow::MemmappedFileSystem::kMemmappedPackageDefaultGraphDef': 'constexpr' object must be initialized\r\nD:\\Tensorflow\\src\\tensorflow\\core\\util\\memmapped_file_system.cc(183): error C2734: 'tensorflow::MemmappedFileSystem::kMemmappedPackageDefaultGraphDef': 'const' object must be initialized if not 'extern'\r\n\r\nRepro steps:\r\n1.\tgit clone  https://github.com/tensorflow/tensorflow D:\\Tensorflow\\src\r\n2.\tpushd D:\\Tensorflow\r\n3.\tset PreferredToolArchitecture=x64\r\n4.\tset rel=Release\r\n5.\tset CUDNN_HOME=\"C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v9.0\\cuda\"\r\n6.\tset PY=C:\\ProgramData\\Anaconda3\r\n7.\tset _CL_=/FS /permissive-\r\n8.\tcmake D:\\Tensorflow\\src\\tensorflow\\contrib\\cmake -A x64 -DCMAKE_BUILD_TYPE=Release -DPYTHON_EXECUTABLE=C:\\ProgramData\\Anaconda3\\python.exe -DPYTHON_LIBRARIES=C:\\ProgramData\\Anaconda3\\libs\\python36.lib -DSWIG_EXECUTABLE=D:\\Tensorflow\\swigwin-3.0.12\\swig.exe -Dtensorflow_BUILD_PYTHON_TESTS=ON -Dtensorflow_BUILD_SHARED_LIB=ON\r\n9. MSBuild /m /p:Configuration=Release;Platform=x64 /p:WindowsTargetPlatformVersion=10.0.16299.0 tensorflow.sln /t:Rebuild\r\n"}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/17493", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/17493/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/17493/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/17493/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/17493", "id": 302895063, "node_id": "MDU6SXNzdWUzMDI4OTUwNjM=", "number": 17493, "title": "tensorflow macOS build failed", "user": {"login": "lightingghost", "id": 13108255, "node_id": "MDQ6VXNlcjEzMTA4MjU1", "avatar_url": "https://avatars3.githubusercontent.com/u/13108255?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lightingghost", "html_url": "https://github.com/lightingghost", "followers_url": "https://api.github.com/users/lightingghost/followers", "following_url": "https://api.github.com/users/lightingghost/following{/other_user}", "gists_url": "https://api.github.com/users/lightingghost/gists{/gist_id}", "starred_url": "https://api.github.com/users/lightingghost/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lightingghost/subscriptions", "organizations_url": "https://api.github.com/users/lightingghost/orgs", "repos_url": "https://api.github.com/users/lightingghost/repos", "events_url": "https://api.github.com/users/lightingghost/events{/privacy}", "received_events_url": "https://api.github.com/users/lightingghost/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 404586558, "node_id": "MDU6TGFiZWw0MDQ1ODY1NTg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:community%20support", "name": "stat:community support", "color": "f4b400", "default": false, "description": ""}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 19, "created_at": "2018-03-06T22:37:59Z", "updated_at": "2019-03-20T09:27:38Z", "closed_at": null, "author_association": "NONE", "body": "### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**: \r\nN/A\r\n\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**:\r\nmacOS 10.13\r\n\r\n- **TensorFlow installed from (source or binary)**:\r\nbuild from source branch r1.6\r\n\r\n- **TensorFlow version (use command below)**:\r\n1.6\r\n\r\n- **Python version**: \r\n3.6\r\n\r\n- **Bazel version (if compiling from source)**:\r\n0.11.0-homebrew\r\n\r\n- **GCC/Compiler version (if compiling from source)**:\r\nApple LLVM version 9.0.0 (clang-900.0.39.2)\r\n\r\n- **CUDA/cuDNN version**:\r\n9.1/7.0.5\r\n\r\n- **GPU model and memory**:\r\nTitan X Pascal\r\n\r\n- **Exact command to reproduce**:\r\n`bazel build --config=opt --config=cuda --config=mkl //tensorflow/tools/pip_package:build_pip_package`\r\n\r\n\r\n### Describe the problem\r\nTrying to build from source, but failed with the error below\r\n\r\n### Source code / logs\r\n```\r\nINFO: From Compiling tensorflow/contrib/rnn/kernels/gru_ops_gpu.cu.cc:\r\nexternal/eigen_archive/unsupported/Eigen/CXX11/../../../Eigen/src/Core/arch/CUDA/Half.h(508): error: explicit specialization of class \"std::__1::numeric_limits<Eigen::half>\" must precede its first use (\r\n(388): here)\r\n\r\n1 error detected in the compilation of \"/var/folders/4z/2frllwtj73b9vg25g4m9sxsc0000gn/T//tmpxft_00002f28_00000000-6_gru_ops_gpu.cu.cpp1.ii\".\r\nERROR: /Users/odin/local/tensorflow/tensorflow/contrib/rnn/BUILD:240:1: output 'tensorflow/contrib/rnn/_objs/python/ops/_gru_ops_gpu/tensorflow/contrib/rnn/kernels/gru_ops_gpu.cu.pic.o' was not created\r\nERROR: /Users/odin/local/tensorflow/tensorflow/contrib/rnn/BUILD:240:1: not all outputs were created or valid\r\n```\r\n"}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/17471", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/17471/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/17471/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/17471/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/17471", "id": 302599565, "node_id": "MDU6SXNzdWUzMDI1OTk1NjU=", "number": 17471, "title": "Feature request: tf.data.Dataset.unordered_merge()", "user": {"login": "deasuke", "id": 1057390, "node_id": "MDQ6VXNlcjEwNTczOTA=", "avatar_url": "https://avatars0.githubusercontent.com/u/1057390?v=4", "gravatar_id": "", "url": "https://api.github.com/users/deasuke", "html_url": "https://github.com/deasuke", "followers_url": "https://api.github.com/users/deasuke/followers", "following_url": "https://api.github.com/users/deasuke/following{/other_user}", "gists_url": "https://api.github.com/users/deasuke/gists{/gist_id}", "starred_url": "https://api.github.com/users/deasuke/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/deasuke/subscriptions", "organizations_url": "https://api.github.com/users/deasuke/orgs", "repos_url": "https://api.github.com/users/deasuke/repos", "events_url": "https://api.github.com/users/deasuke/events{/privacy}", "received_events_url": "https://api.github.com/users/deasuke/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 299643928, "node_id": "MDU6TGFiZWwyOTk2NDM5Mjg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:contributions%20welcome", "name": "stat:contributions welcome", "color": "f4b400", "default": false, "description": ""}, {"id": 473173272, "node_id": "MDU6TGFiZWw0NzMxNzMyNzI=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:feature", "name": "type:feature", "color": "159b2e", "default": false, "description": ""}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2018-03-06T08:03:01Z", "updated_at": "2018-03-16T09:19:34Z", "closed_at": null, "author_association": "NONE", "body": "We're dealing with sequence models and we are bucketing training data by using\r\n`tf.contrib.data.group_by_window.`\r\nHowever, it's sequential by nature and too slow. \r\nSo we want to call it in parallel giving up completeness of shuffle. The `tf.data.Dataset` API has\r\n`shard` operation, however, it doesn't have `unordered_merge.` The `zip` operation waits all coming datasets and so isn't useful for this purpose. unordered_merge takes data from any comming dataset ready. It can be used to parallelize data flows.\r\n\r\n\r\nFollowing is only for satisfying the format; This request is independent of the System Information.\r\n------------------------\r\n\r\n### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**: YES\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**: Ubuntu 16.04\r\n- **TensorFlow installed from (source or binary)**: source, HEAD of master 20180226\r\n- **TensorFlow version (use command below)**:source, HEAD of master 20180226\r\n- **Python version**: 3.5.2\r\n- **Bazel version (if compiling from source)**: 0.10.0; installed by bazel-0.10.0-installer-linux-x86_64.sh\r\n- **GCC/Compiler version (if compiling from source)**:4.8.5\r\n- **CUDA/cuDNN version**:V9.1.85\r\n- **GPU model and memory**:Tesla V100/16GB\r\n- **Exact command to reproduce**:N/A\r\n\r\n"}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/17463", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/17463/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/17463/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/17463/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/17463", "id": 302550399, "node_id": "MDU6SXNzdWUzMDI1NTAzOTk=", "number": 17463, "title": "Could the periodic resample operation be accelerated?", "user": {"login": "hengchuan", "id": 18345541, "node_id": "MDQ6VXNlcjE4MzQ1NTQx", "avatar_url": "https://avatars0.githubusercontent.com/u/18345541?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hengchuan", "html_url": "https://github.com/hengchuan", "followers_url": "https://api.github.com/users/hengchuan/followers", "following_url": "https://api.github.com/users/hengchuan/following{/other_user}", "gists_url": "https://api.github.com/users/hengchuan/gists{/gist_id}", "starred_url": "https://api.github.com/users/hengchuan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hengchuan/subscriptions", "organizations_url": "https://api.github.com/users/hengchuan/orgs", "repos_url": "https://api.github.com/users/hengchuan/repos", "events_url": "https://api.github.com/users/hengchuan/events{/privacy}", "received_events_url": "https://api.github.com/users/hengchuan/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": {"login": "tatatodd", "id": 5453737, "node_id": "MDQ6VXNlcjU0NTM3Mzc=", "avatar_url": "https://avatars3.githubusercontent.com/u/5453737?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tatatodd", "html_url": "https://github.com/tatatodd", "followers_url": "https://api.github.com/users/tatatodd/followers", "following_url": "https://api.github.com/users/tatatodd/following{/other_user}", "gists_url": "https://api.github.com/users/tatatodd/gists{/gist_id}", "starred_url": "https://api.github.com/users/tatatodd/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tatatodd/subscriptions", "organizations_url": "https://api.github.com/users/tatatodd/orgs", "repos_url": "https://api.github.com/users/tatatodd/repos", "events_url": "https://api.github.com/users/tatatodd/events{/privacy}", "received_events_url": "https://api.github.com/users/tatatodd/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "tatatodd", "id": 5453737, "node_id": "MDQ6VXNlcjU0NTM3Mzc=", "avatar_url": "https://avatars3.githubusercontent.com/u/5453737?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tatatodd", "html_url": "https://github.com/tatatodd", "followers_url": "https://api.github.com/users/tatatodd/followers", "following_url": "https://api.github.com/users/tatatodd/following{/other_user}", "gists_url": "https://api.github.com/users/tatatodd/gists{/gist_id}", "starred_url": "https://api.github.com/users/tatatodd/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tatatodd/subscriptions", "organizations_url": "https://api.github.com/users/tatatodd/orgs", "repos_url": "https://api.github.com/users/tatatodd/repos", "events_url": "https://api.github.com/users/tatatodd/events{/privacy}", "received_events_url": "https://api.github.com/users/tatatodd/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 3, "created_at": "2018-03-06T03:24:08Z", "updated_at": "2018-12-20T18:46:06Z", "closed_at": null, "author_association": "NONE", "body": "### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**:  No\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**: Linux Ubuntu 16.10\r\n- **TensorFlow installed from (source or binary)**: binary\r\n- **TensorFlow version (use command below)**: ('v1.5.0-0-g37aa430d84', '1.5.0')\r\n- **Python version**: 2.7.12\r\n- **Bazel version (if compiling from source)**: N/A\r\n- **GCC/Compiler version (if compiling from source)**: N/A\r\n- **CUDA/cuDNN version**: 9.0/7.0\r\n- **GPU model and memory**: NVIDIA GeForce GTX 1080, 8 GB\r\n- **Exact command to reproduce**: python periodic_resample.py\r\n\r\n### Describe the problem\r\nThe [periodic resample](https://www.tensorflow.org/api_docs/python/tf/contrib/periodic_resample/periodic_resample) operation costs about 700ms when tansforming a tensor from 1x360x640x27 to 1x1080x1920x3. Could it be accelerated by GPU in the future or did I miss something?\r\n\r\n### Source code / logs\r\n```python\r\nimport tensorflow as tf\r\nimport time\r\n\r\na = tf.Variable(tf.random_normal([1, 360, 640, 27], stddev=0.3))\r\nb = tf.contrib.periodic_resample.periodic_resample(a, [1, 1080, 1920, None])\r\n\r\nwith tf.Session() as sess:\r\n    tf.global_variables_initializer().run()\r\n    start = time.time()\r\n    _ = sess.run(b)\r\n    print 'time: %f'%(time.time() - start)\r\n```\r\n```\r\n2018-03-06 10:13:31.817568: I tensorflow/core/platform/cpu_feature_guard.cc:137] Your CPU supports instructions that this TensorFlow binary was not compiled to use: SSE4.1 SSE4.2 AVX AVX2 FMA\r\n2018-03-06 10:13:31.949888: I tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:895] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero\r\n2018-03-06 10:13:31.950167: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1105] Found device 0 with properties: \r\nname: GeForce GTX 1080 major: 6 minor: 1 memoryClockRate(GHz): 1.873\r\npciBusID: 0000:01:00.0\r\ntotalMemory: 7.92GiB freeMemory: 6.50GiB\r\n2018-03-06 10:13:31.950194: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1195] Creating TensorFlow device (/device:GPU:0) -> (device: 0, name: GeForce GTX 1080, pci bus id: 0000:01:00.0, compute capability: 6.1)\r\ntime: 0.798653\r\n```\r\n"}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/17417", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/17417/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/17417/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/17417/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/17417", "id": 302131201, "node_id": "MDU6SXNzdWUzMDIxMzEyMDE=", "number": 17417, "title": "embed_sequence and embedding_lookup behave differently on CPU vs. GPU", "user": {"login": "eisenjulian", "id": 7776575, "node_id": "MDQ6VXNlcjc3NzY1NzU=", "avatar_url": "https://avatars0.githubusercontent.com/u/7776575?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eisenjulian", "html_url": "https://github.com/eisenjulian", "followers_url": "https://api.github.com/users/eisenjulian/followers", "following_url": "https://api.github.com/users/eisenjulian/following{/other_user}", "gists_url": "https://api.github.com/users/eisenjulian/gists{/gist_id}", "starred_url": "https://api.github.com/users/eisenjulian/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eisenjulian/subscriptions", "organizations_url": "https://api.github.com/users/eisenjulian/orgs", "repos_url": "https://api.github.com/users/eisenjulian/repos", "events_url": "https://api.github.com/users/eisenjulian/events{/privacy}", "received_events_url": "https://api.github.com/users/eisenjulian/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 299643928, "node_id": "MDU6TGFiZWwyOTk2NDM5Mjg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:contributions%20welcome", "name": "stat:contributions welcome", "color": "f4b400", "default": false, "description": ""}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2018-03-04T22:51:58Z", "updated_at": "2018-04-24T21:01:31Z", "closed_at": null, "author_association": "CONTRIBUTOR", "body": "### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**: Yes\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**: Windows 10\r\n- **TensorFlow installed from (source or binary)**: binary\r\n- **TensorFlow version (use command below)**: 1.6\r\n- **Python version**: 3.6.3\r\n- **Bazel version (if compiling from source)**:\r\n- **GCC/Compiler version (if compiling from source)**:\r\n- **CUDA/cuDNN version**:\r\n- **GPU model and memory**:\r\n- **Exact command to reproduce**:\r\n\r\n### Describe the problem\r\nWhen using `tf.nn.embedding_lookup` or `tf.contrib.layers.embed_sequence` with -1 in the indexes the corresponding embeddings should be 0 vectors, in the same way that `tf.feature_column.categorical_column_with_identity` ignores negative values. This works correctly when trying on Colaboratory but fails on my Windows installation using the same Tensorflow version v1.6.\r\n\r\n### Source code / logs\r\nBoth ways of initializing the embeddings produce the same error, only on Windows, may it be related to the version of the `gather` function being used from `python\\ops\\array_ops.py`?\r\n```python\r\ntf.reset_default_graph()\r\na = tf.constant(np.array([[0, 1, 2, -1, 4]]))\r\n# b = tf.contrib.layers.embed_sequence(a, 5, 3, initializer=tf.random_uniform_initializer(-1.0, 1.0))\r\nb = tf.nn.embedding_lookup(tf.get_variable('embeddings', [5, 3], initializer=tf.random_uniform_initializer(-1.0, 1.0)), a)\r\nwith tf.Session() as sess:\r\n    sess.run(tf.global_variables_initializer())\r\n    print(sess.run(b))\r\n```\r\n\r\nThe error goes like this\r\n> InvalidArgumentError: indices[..] = -1 is not in [0, ..)"}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/17356", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/17356/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/17356/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/17356/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/17356", "id": 301415236, "node_id": "MDU6SXNzdWUzMDE0MTUyMzY=", "number": 17356, "title": "[suggestion][tf.estimator] model with multiple labels", "user": {"login": "yanghoonkim", "id": 9985986, "node_id": "MDQ6VXNlcjk5ODU5ODY=", "avatar_url": "https://avatars2.githubusercontent.com/u/9985986?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yanghoonkim", "html_url": "https://github.com/yanghoonkim", "followers_url": "https://api.github.com/users/yanghoonkim/followers", "following_url": "https://api.github.com/users/yanghoonkim/following{/other_user}", "gists_url": "https://api.github.com/users/yanghoonkim/gists{/gist_id}", "starred_url": "https://api.github.com/users/yanghoonkim/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yanghoonkim/subscriptions", "organizations_url": "https://api.github.com/users/yanghoonkim/orgs", "repos_url": "https://api.github.com/users/yanghoonkim/repos", "events_url": "https://api.github.com/users/yanghoonkim/events{/privacy}", "received_events_url": "https://api.github.com/users/yanghoonkim/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 299643928, "node_id": "MDU6TGFiZWwyOTk2NDM5Mjg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:contributions%20welcome", "name": "stat:contributions welcome", "color": "f4b400", "default": false, "description": ""}, {"id": 473173272, "node_id": "MDU6TGFiZWw0NzMxNzMyNzI=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:feature", "name": "type:feature", "color": "159b2e", "default": false, "description": ""}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-03-01T14:03:09Z", "updated_at": "2018-11-12T11:39:06Z", "closed_at": null, "author_association": "NONE", "body": "How about let `labels` provided to `def model_fn(features, labels, mode, params):` be `dict` but not a tensor.\r\nI'm now modeling a model with multiple outputs to be optimized, however, I can only use `features` to substitute `labels` because it only allow a tensor. I'm using version 1.4"}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/17353", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/17353/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/17353/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/17353/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/17353", "id": 301382585, "node_id": "MDU6SXNzdWUzMDEzODI1ODU=", "number": 17353, "title": "Error indices[0] = 0 is not in [0, 0) while training an object-detection model with tensorflow", "user": {"login": "valiok98", "id": 8811946, "node_id": "MDQ6VXNlcjg4MTE5NDY=", "avatar_url": "https://avatars2.githubusercontent.com/u/8811946?v=4", "gravatar_id": "", "url": "https://api.github.com/users/valiok98", "html_url": "https://github.com/valiok98", "followers_url": "https://api.github.com/users/valiok98/followers", "following_url": "https://api.github.com/users/valiok98/following{/other_user}", "gists_url": "https://api.github.com/users/valiok98/gists{/gist_id}", "starred_url": "https://api.github.com/users/valiok98/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/valiok98/subscriptions", "organizations_url": "https://api.github.com/users/valiok98/orgs", "repos_url": "https://api.github.com/users/valiok98/repos", "events_url": "https://api.github.com/users/valiok98/events{/privacy}", "received_events_url": "https://api.github.com/users/valiok98/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": {"login": "jch1", "id": 1811449, "node_id": "MDQ6VXNlcjE4MTE0NDk=", "avatar_url": "https://avatars2.githubusercontent.com/u/1811449?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jch1", "html_url": "https://github.com/jch1", "followers_url": "https://api.github.com/users/jch1/followers", "following_url": "https://api.github.com/users/jch1/following{/other_user}", "gists_url": "https://api.github.com/users/jch1/gists{/gist_id}", "starred_url": "https://api.github.com/users/jch1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jch1/subscriptions", "organizations_url": "https://api.github.com/users/jch1/orgs", "repos_url": "https://api.github.com/users/jch1/repos", "events_url": "https://api.github.com/users/jch1/events{/privacy}", "received_events_url": "https://api.github.com/users/jch1/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "jch1", "id": 1811449, "node_id": "MDQ6VXNlcjE4MTE0NDk=", "avatar_url": "https://avatars2.githubusercontent.com/u/1811449?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jch1", "html_url": "https://github.com/jch1", "followers_url": "https://api.github.com/users/jch1/followers", "following_url": "https://api.github.com/users/jch1/following{/other_user}", "gists_url": "https://api.github.com/users/jch1/gists{/gist_id}", "starred_url": "https://api.github.com/users/jch1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jch1/subscriptions", "organizations_url": "https://api.github.com/users/jch1/orgs", "repos_url": "https://api.github.com/users/jch1/repos", "events_url": "https://api.github.com/users/jch1/events{/privacy}", "received_events_url": "https://api.github.com/users/jch1/received_events", "type": "User", "site_admin": false}, {"login": "pkulzc", "id": 35853368, "node_id": "MDQ6VXNlcjM1ODUzMzY4", "avatar_url": "https://avatars3.githubusercontent.com/u/35853368?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pkulzc", "html_url": "https://github.com/pkulzc", "followers_url": "https://api.github.com/users/pkulzc/followers", "following_url": "https://api.github.com/users/pkulzc/following{/other_user}", "gists_url": "https://api.github.com/users/pkulzc/gists{/gist_id}", "starred_url": "https://api.github.com/users/pkulzc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pkulzc/subscriptions", "organizations_url": "https://api.github.com/users/pkulzc/orgs", "repos_url": "https://api.github.com/users/pkulzc/repos", "events_url": "https://api.github.com/users/pkulzc/events{/privacy}", "received_events_url": "https://api.github.com/users/pkulzc/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 24, "created_at": "2018-03-01T12:13:09Z", "updated_at": "2019-11-13T06:14:47Z", "closed_at": null, "author_association": "NONE", "body": "### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**: No\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**: Ubuntu 16.04\r\n- **TensorFlow installed from (source or binary)**:\r\n- **TensorFlow version (use command below)**: 1.5\r\n- **Python version**:  3.6\r\n- **Bazel version (if compiling from source)**: \r\n- **GCC/Compiler version (if compiling from source)**:\r\n- **CUDA/cuDNN version**: 8\r\n- **GPU model and memory**:   Tesla K80 major: 3 minor: 7 memoryClockRate(GHz): 0.8755 , 11GB\r\n- **Exact command to reproduce**: \r\nfloyd run --gpu --env tensorflow-1.5 --data valiok98/datasets/raspberrypi2/3:/data --data valiok98/datasets/raspberrypi2/8:/mobilenet --data valiok98/datasets/raspberrypi2/9:/images --data valiok98/datasets/raspberrypi2/10:test_ckpt 'python train.py --logtostderr --train_dir=training/ --pipeline_config_path=training/ssd_mobilenet_v1_pets.config'\r\n\r\nFor the record I tried with previous TF versions and it did not make  a diffrence.\r\nSo I am currently attempting to train a custom object-detection model on tensorflow to recognize images of a raspberrypi2. Everything is already set up and running on my hardware,but due to limitations of my gpu I settled for the cloud. I have uploaded my data(train & test records ans csv-files) and my checkpoint model. That is what I get from the logs:\r\n\r\ntensorflow:Restoring parameters from /mobilenet/model.ckpt\r\n\r\ntensorflow:Starting Session.\r\n\r\ntensorflow:Saving checkpoint to path training/model.ckpt\r\n\r\ntensorflow:Starting Queues.\r\n\r\ntensorflow:Error reported to Coordinator: <class tensorflow.python.framework.errors_impl.InvalidArgumentError'>,\r\nindices[0] = 0 is not in [0, 0)\r\n\r\nI also have a folder called images with the actual .jpg files and it is also on the cloud, but for some reason I must specify every directory with a preceeding forward slash / and that might be a problem, as I currently do not know whether some of the files are trying to import these images ,but could not find the path because of the missing /. If any of you happens to share a solution I would be really thankful.\r\n\r\nAnd so here are my full logs:\r\n\r\n\r\nPSTINFO:tensorflow:Restoring parameters from /mobilenet/model.ckpt\r\nPSTINFO:tensorflow:Starting Session.\r\nPSTINFO:tensorflow:Saving checkpoint to path training/model.ckpt\r\nPSTINFO:tensorflow:Starting Queues.\r\nPSTINFO:tensorflow:Error reported to Coordinator: <class 'tensorflow.python.framework.errors_impl.InvalidArgumentError'>, indices[0] = 0 is not in [0, 0)\r\nPST[[Node: cond_4/RandomCropImage/Gather = Gather[Tindices=DT_INT64, Tparams=DT_BOOL, validate_indices=true, _device=\"/job:localhost/replica:0/task:0/device:CPU:0\"](cond_4/Switch_4:1, cond_4/RandomCropImage/PruneCompleteleyOutsideWindow/Reshape)]]\r\nPSTINFO:tensorflow:global_step/sec: 0\r\nPSTINFO:tensorflow:Caught OutOfRangeError. Stopping Training.\r\nPSTINFO:tensorflow:Finished training! Saving model to disk.\r\nPSTTraceback (most recent call last):\r\nPSTFile \"train.py\", line 167, in <module>\r\nPSTtf.app.run()\r\nPSTFile \"/usr/local/lib/python3.6/site-packages/tensorflow/python/platform/app.py\", line 124, in run\r\nPST_sys.exit(main(argv))\r\nPSTFile \"train.py\", line 163, in main\r\nPSTworker_job_name, is_chief, FLAGS.train_dir)\r\nPSTFile \"/code/trainer.py\", line 359, in train\r\nPSTsaver=saver)\r\nPSTFile \"/usr/local/lib/python3.6/site-packages/tensorflow/contrib/slim/python/slim/learning.py\", line 782, in train\r\nPSTignore_live_threads=ignore_live_threads)\r\nPSTFile \"/usr/local/lib/python3.6/site-packages/tensorflow/python/training/supervisor.py\", line 826, in stop\r\nPSTignore_live_threads=ignore_live_threads)\r\nPSTFile \"/usr/local/lib/python3.6/site-packages/tensorflow/python/training/coordinator.py\", line 387, in join\r\nPSTsix.reraise(*self._exc_info_to_raise)\r\n"}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/17316", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/17316/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/17316/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/17316/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/17316", "id": 300869991, "node_id": "MDU6SXNzdWUzMDA4Njk5OTE=", "number": 17316, "title": "ABI for `tensorflow::core::RefCounted` is error-prone", "user": {"login": "mrry", "id": 192142, "node_id": "MDQ6VXNlcjE5MjE0Mg==", "avatar_url": "https://avatars1.githubusercontent.com/u/192142?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mrry", "html_url": "https://github.com/mrry", "followers_url": "https://api.github.com/users/mrry/followers", "following_url": "https://api.github.com/users/mrry/following{/other_user}", "gists_url": "https://api.github.com/users/mrry/gists{/gist_id}", "starred_url": "https://api.github.com/users/mrry/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mrry/subscriptions", "organizations_url": "https://api.github.com/users/mrry/orgs", "repos_url": "https://api.github.com/users/mrry/repos", "events_url": "https://api.github.com/users/mrry/events{/privacy}", "received_events_url": "https://api.github.com/users/mrry/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 299643928, "node_id": "MDU6TGFiZWwyOTk2NDM5Mjg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:contributions%20welcome", "name": "stat:contributions welcome", "color": "f4b400", "default": false, "description": ""}, {"id": 473172988, "node_id": "MDU6TGFiZWw0NzMxNzI5ODg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:bug", "name": "type:bug", "color": "159b2e", "default": false, "description": ""}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-02-28T02:43:03Z", "updated_at": "2018-07-23T21:17:27Z", "closed_at": null, "author_association": "MEMBER", "body": "### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**: Yes\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**: Linux Ubuntu 16.04\r\n- **TensorFlow installed from (source or binary)**: Binary\r\n- **TensorFlow version (use command below)**: tf-nightly\r\n- **Python version**: 2.7\r\n- **Bazel version (if compiling from source)**: N/A\r\n- **GCC/Compiler version (if compiling from source)**: N/A\r\n- **CUDA/cuDNN version**: N/A\r\n- **GPU model and memory**: N/A\r\n- **Exact command to reproduce**: (see above)\r\n\r\n### Describe the problem\r\n\r\nFor performance, the implementation of `RefCounted` comprises a set of inline methods. Furthermore, it contains a cunning optimization that avoids updating the refcount when the caller to `Unref()` is the only owner:\r\n\r\nhttps://github.com/tensorflow/tensorflow/blob/3ba1f72f8829c566372208062fcea04ab5695dc6/tensorflow/core/lib/core/refcount.h#L88-L89\r\n\r\nIt also includes some `DCHECK` macros to ensure that various invariants hold:\r\n\r\nhttps://github.com/tensorflow/tensorflow/blob/3ba1f72f8829c566372208062fcea04ab5695dc6/tensorflow/core/lib/core/refcount.h#L79\r\n\r\nhttps://github.com/tensorflow/tensorflow/blob/3ba1f72f8829c566372208062fcea04ab5695dc6/tensorflow/core/lib/core/refcount.h#L90-L92\r\n\r\nNote that that second `DCHECK` performs a side-effect to make the first one succeed. \r\n\r\nThe release build is built with `NDEBUG` defined, so the `DCHECK` code doesn't execute. However, the default flags you get when following the [Adding an New Op](https://www.tensorflow.org/versions/r1.6/extend/adding_an_op) tutorial to build an extension do not include `-DNDEBUG`. \r\n\r\nRecall that the methods are marked `inline`.  This means that some code in the release binary might call (an inlined version of) `Unref()` and the store to `ref_` will be elided, but some code in an extension (e.g. one that creates a custom `ResourceBase`, which inherits from `RefCounted`) might call `~RefCounted()` and the `DCHECK` will be performed, leading to a failure.\r\n\r\nThe workaround is to add `-DNDEBUG` to the compiler flags when adding a new op. Should we update the documentation, update the `tf.sysconfig.get_compile_flags()` implementation, or modify how `RefCounted` is implemented to avoid this problem altogether? \r\n"}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/17274", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/17274/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/17274/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/17274/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/17274", "id": 300241667, "node_id": "MDU6SXNzdWUzMDAyNDE2Njc=", "number": 17274, "title": "Unable to get FLOPs on model with tf.nn.bidirectional_dynamic_rnn", "user": {"login": "lissyx", "id": 1645737, "node_id": "MDQ6VXNlcjE2NDU3Mzc=", "avatar_url": "https://avatars0.githubusercontent.com/u/1645737?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lissyx", "html_url": "https://github.com/lissyx", "followers_url": "https://api.github.com/users/lissyx/followers", "following_url": "https://api.github.com/users/lissyx/following{/other_user}", "gists_url": "https://api.github.com/users/lissyx/gists{/gist_id}", "starred_url": "https://api.github.com/users/lissyx/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lissyx/subscriptions", "organizations_url": "https://api.github.com/users/lissyx/orgs", "repos_url": "https://api.github.com/users/lissyx/repos", "events_url": "https://api.github.com/users/lissyx/events{/privacy}", "received_events_url": "https://api.github.com/users/lissyx/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": {"login": "tatianashp", "id": 986732, "node_id": "MDQ6VXNlcjk4NjczMg==", "avatar_url": "https://avatars2.githubusercontent.com/u/986732?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tatianashp", "html_url": "https://github.com/tatianashp", "followers_url": "https://api.github.com/users/tatianashp/followers", "following_url": "https://api.github.com/users/tatianashp/following{/other_user}", "gists_url": "https://api.github.com/users/tatianashp/gists{/gist_id}", "starred_url": "https://api.github.com/users/tatianashp/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tatianashp/subscriptions", "organizations_url": "https://api.github.com/users/tatianashp/orgs", "repos_url": "https://api.github.com/users/tatianashp/repos", "events_url": "https://api.github.com/users/tatianashp/events{/privacy}", "received_events_url": "https://api.github.com/users/tatianashp/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "tatianashp", "id": 986732, "node_id": "MDQ6VXNlcjk4NjczMg==", "avatar_url": "https://avatars2.githubusercontent.com/u/986732?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tatianashp", "html_url": "https://github.com/tatianashp", "followers_url": "https://api.github.com/users/tatianashp/followers", "following_url": "https://api.github.com/users/tatianashp/following{/other_user}", "gists_url": "https://api.github.com/users/tatianashp/gists{/gist_id}", "starred_url": "https://api.github.com/users/tatianashp/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tatianashp/subscriptions", "organizations_url": "https://api.github.com/users/tatianashp/orgs", "repos_url": "https://api.github.com/users/tatianashp/repos", "events_url": "https://api.github.com/users/tatianashp/events{/privacy}", "received_events_url": "https://api.github.com/users/tatianashp/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 13, "created_at": "2018-02-26T13:38:47Z", "updated_at": "2018-12-19T18:44:29Z", "closed_at": null, "author_association": "CONTRIBUTOR", "body": "### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**: yes\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**: Debian/Sid\r\n- **TensorFlow installed from (source or binary)**: binary, tensorflow-gpu\r\n- **TensorFlow version (use command below)**: 1.5.0\r\n- **Python version**: 2.7\r\n- **Bazel version (if compiling from source)**: N/A\r\n- **GCC/Compiler version (if compiling from source)**: N/A\r\n- **CUDA/cuDNN version**: CUDA 9.0/CuDNN v7\r\n- **GPU model and memory**: GTX1080, 8GB\r\n\r\nRunning the model under `benchmark_model`, I'm unable to get any FLOPs value, and there are several strange pieces in the output:\r\n```\r\n2018-02-26 14:37:55.738267: W tensorflow/core/util/stat_summarizer.cc:78] Output tensor changed between runs for 'bidirectional_rnn/fw/fw/while/Switch\r\n2018-02-26 14:37:55.738500: W tensorflow/core/util/stat_summarizer.cc:78] Output tensor changed between runs for 'bidirectional_rnn/bw/bw/while/Switch_1\r\n2018-02-26 14:37:55.738507: W tensorflow/core/util/stat_summarizer.cc:78] Output tensor changed between runs for 'bidirectional_rnn/bw/bw/while/Switch\r\n2018-02-26 14:37:55.739153: W tensorflow/core/util/stat_summarizer.cc:78] Output tensor changed between runs for 'bidirectional_rnn/fw/fw/while/Switch_3\r\n2018-02-26 14:37:55.739165: W tensorflow/core/util/stat_summarizer.cc:78] Output tensor changed between runs for 'bidirectional_rnn/fw/fw/while/Switch_2\r\n2018-02-26 14:37:55.739171: W tensorflow/core/util/stat_summarizer.cc:78] Output tensor changed between runs for 'bidirectional_rnn/fw/fw/while/Switch_4\r\n2018-02-26 14:37:55.739300: W tensorflow/core/util/stat_summarizer.cc:78] Output tensor changed between runs for 'bidirectional_rnn/bw/bw/while/Switch_3\r\n2018-02-26 14:37:55.739307: W tensorflow/core/util/stat_summarizer.cc:78] Output tensor changed between runs for 'bidirectional_rnn/bw/bw/while/Switch_4\r\n2018-02-26 14:37:55.739311: W tensorflow/core/util/stat_summarizer.cc:78] Output tensor changed between runs for 'bidirectional_rnn/bw/bw/while/Switch_2\r\n```\r\n\r\nAnd\r\n```\r\n2018-02-26 14:38:33.921383: E tensorflow/tools/benchmark/benchmark_model.cc:579] FLOPs calculation failed with Internal: Retval[4] has already been set.\r\n```"}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/17267", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/17267/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/17267/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/17267/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/17267", "id": 300125361, "node_id": "MDU6SXNzdWUzMDAxMjUzNjE=", "number": 17267, "title": "CMP0002 error when building TensorFlow cc unit tests", "user": {"login": "baozi-lala", "id": 21255466, "node_id": "MDQ6VXNlcjIxMjU1NDY2", "avatar_url": "https://avatars3.githubusercontent.com/u/21255466?v=4", "gravatar_id": "", "url": "https://api.github.com/users/baozi-lala", "html_url": "https://github.com/baozi-lala", "followers_url": "https://api.github.com/users/baozi-lala/followers", "following_url": "https://api.github.com/users/baozi-lala/following{/other_user}", "gists_url": "https://api.github.com/users/baozi-lala/gists{/gist_id}", "starred_url": "https://api.github.com/users/baozi-lala/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/baozi-lala/subscriptions", "organizations_url": "https://api.github.com/users/baozi-lala/orgs", "repos_url": "https://api.github.com/users/baozi-lala/repos", "events_url": "https://api.github.com/users/baozi-lala/events{/privacy}", "received_events_url": "https://api.github.com/users/baozi-lala/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 404586558, "node_id": "MDU6TGFiZWw0MDQ1ODY1NTg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:community%20support", "name": "stat:community support", "color": "f4b400", "default": false, "description": ""}, {"id": 299643928, "node_id": "MDU6TGFiZWwyOTk2NDM5Mjg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:contributions%20welcome", "name": "stat:contributions welcome", "color": "f4b400", "default": false, "description": ""}, {"id": 473173351, "node_id": "MDU6TGFiZWw0NzMxNzMzNTE=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:build/install", "name": "type:build/install", "color": "159b2e", "default": false, "description": ""}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2018-02-26T06:40:54Z", "updated_at": "2018-03-12T08:24:06Z", "closed_at": null, "author_association": "NONE", "body": "Please go to Stack Overflow for help and support:\r\n\r\nhttps://stackoverflow.com/questions/tagged/tensorflow\r\n\r\nIf you open a GitHub issue, here is our policy:\r\n\r\n1. It must be a bug, a feature request, or a significant problem with documentation (for small docs fixes please send a PR instead).\r\n2. The form below must be filled out.\r\n3. It shouldn't be a TensorBoard issue. Those go [here](https://github.com/tensorflow/tensorboard/issues).\r\n\r\n**Here's why we have that policy**: TensorFlow developers respond to issues. We want to focus on work that benefits the whole community, e.g., fixing bugs and adding features. Support only helps individuals. GitHub also notifies thousands of people when issues are filed. We want them to see you communicating an interesting problem, rather than being redirected to Stack Overflow.\r\n\r\n------------------------\r\n\r\n### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**:No\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**:Window 10\r\n- **TensorFlow installed from (source or binary)**:source\r\n- **TensorFlow version (use command below)**:\r\n- **Python version**: 3.6\r\n- **Bazel version (if compiling from source)**:\r\n- **GCC/Compiler version (if compiling from source)**:VS2015 x64\r\n- **CUDA/cuDNN version**:\r\n- **GPU model and memory**:\r\n- **Exact command to reproduce**:\r\n\r\nYou can collect some of this information using our environment capture script:\r\n\r\nhttps://github.com/tensorflow/tensorflow/tree/master/tools/tf_env_collect.sh\r\n\r\nYou can obtain the TensorFlow version with\r\n\r\npython -c \"import tensorflow as tf; print(tf.GIT_VERSION, tf.VERSION)\"\r\n\r\n### Describe the problem\r\nWhen I tried to do TensorFlow CMake build on Window 10 like [this](https://github.com/tensorflow/tensorflow/tree/master/tensorflow/contrib/cmake),there is no error.\r\n\r\nThen I tried to build cc unit tests. I added -Dtensorflow_BUILD_CC_TESTS=ON to the command\r\n\r\n`cmake .. -A x64 -DCMAKE_BUILD_TYPE=Release -DSWIG_EXECUTABLE=C:\\swigwin-3.0.12\\swigwin-3.0.12\\swig.exe -DPYTHON_EXECUTABLE=D:\\Local\\anaconda3\\python.exe -DPYTHON_LIBRARIES=D:\\Local\\anaconda3\\libs\\python36.lib -Dtensorflow_BUILD_SHARED_LIB=ON -Dtensorflow_BUILD_CC_TESTS=ON`\r\n\r\nThe cmake infomation is as following:\r\n\r\n```\r\n-- Building for: Visual Studio 14 2015\r\n-- Selecting Windows SDK version 10.0.14393.0 to target Windows 10.0.16299.\r\n-- The C compiler identification is MSVC 19.0.24215.1\r\n-- The CXX compiler identification is MSVC 19.0.24215.1\r\n-- Check for working C compiler: C:/Program Files (x86)/Microsoft Visual Studio 14.0/VC/bin/x86_amd64/cl.exe\r\n-- Check for working C compiler: C:/Program Files (x86)/Microsoft Visual Studio 14.0/VC/bin/x86_amd64/cl.exe -- works\r\n-- Detecting C compiler ABI info\r\n-- Detecting C compiler ABI info - done\r\n-- Check for working CXX compiler: C:/Program Files (x86)/Microsoft Visual Studio 14.0/VC/bin/x86_amd64/cl.exe\r\n-- Check for working CXX compiler: C:/Program Files (x86)/Microsoft Visual Studio 14.0/VC/bin/x86_amd64/cl.exe -- works\r\n-- Detecting CXX compiler ABI info\r\n-- Detecting CXX compiler ABI info - done\r\n-- Detecting CXX compile features\r\n-- Detecting CXX compile features - done\r\n-- Performing Test COMPILER_OPT_ARCH_NATIVE_SUPPORTED\r\n-- Performing Test COMPILER_OPT_ARCH_NATIVE_SUPPORTED - Failed\r\n-- Found PythonInterp: D:/Local/anaconda3/python.exe (found version \"3.6.3\")\r\n-- Found PythonLibs: D:/Local/anaconda3/libs/python36.lib (found version \"3.6.3\")\r\n-- Found SWIG: C:/swigwin-3.0.12/swigwin-3.0.12/swig.exe (found version \"3.0.12\")\r\n\r\n```\r\nbut I got several errors like the following\r\n\r\n```\r\nCMake Error at tf_tests.cmake:73 (add_executable):\r\n  add_executable cannot create target\r\n  \"tensorflow_core_profiler_internal_tfprof_show_test\" because another target\r\n  with the same name already exists.  The existing target is an executable\r\n  created in source directory \"D:/yinb_6/1.4/tensorflow/contrib/cmake\".  See\r\n  documentation for policy CMP0002 for more details.\r\nCall Stack (most recent call first):\r\n  tf_tests.cmake:46 (AddTest)\r\n  tf_tests.cmake:529 (AddTests)\r\n  CMakeLists.txt:325 (include)\r\n```\r\n\r\n### Source code / logs\r\nInclude any logs or source code that would be helpful to diagnose the problem. If including tracebacks, please include the full traceback. Large logs and files should be attached. Try to provide a reproducible test case that is the bare minimum necessary to generate the problem.\r\n"}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/17266", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/17266/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/17266/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/17266/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/17266", "id": 300124249, "node_id": "MDU6SXNzdWUzMDAxMjQyNDk=", "number": 17266, "title": "'num' must be either a scalar or vector in tf.unstack?", "user": {"login": "Imorton-zd", "id": 13865086, "node_id": "MDQ6VXNlcjEzODY1MDg2", "avatar_url": "https://avatars1.githubusercontent.com/u/13865086?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Imorton-zd", "html_url": "https://github.com/Imorton-zd", "followers_url": "https://api.github.com/users/Imorton-zd/followers", "following_url": "https://api.github.com/users/Imorton-zd/following{/other_user}", "gists_url": "https://api.github.com/users/Imorton-zd/gists{/gist_id}", "starred_url": "https://api.github.com/users/Imorton-zd/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Imorton-zd/subscriptions", "organizations_url": "https://api.github.com/users/Imorton-zd/orgs", "repos_url": "https://api.github.com/users/Imorton-zd/repos", "events_url": "https://api.github.com/users/Imorton-zd/events{/privacy}", "received_events_url": "https://api.github.com/users/Imorton-zd/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 299643928, "node_id": "MDU6TGFiZWwyOTk2NDM5Mjg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:contributions%20welcome", "name": "stat:contributions welcome", "color": "f4b400", "default": false, "description": ""}, {"id": 473173272, "node_id": "MDU6TGFiZWw0NzMxNzMyNzI=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:feature", "name": "type:feature", "color": "159b2e", "default": false, "description": ""}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2018-02-26T06:33:59Z", "updated_at": "2018-05-14T06:21:27Z", "closed_at": null, "author_association": "NONE", "body": "```\r\nbatch_size = tf.placeholder([],dtype=tf.int32) \r\ntf_x = tf.placeholder(tf.float32, [None,timestep_size,input_size])     \r\n  \r\nlstm_cell = rnn.BasicLSTMCell(num_units=hidden_size, forget_bias=1.0, state_is_tuple=True)\r\ninit_state = lstm_cell.zero_state(batch_size, dtype=tf.float32)\r\n\r\ninputs = tf.unstack(tf_x,num=batch_size,axis=0)\r\n\r\nValueError: 'num' must be either a scalar or vector, but saw tensor\r\n```\r\n\r\nWhen training and test, I want to use the different batch size. But in `unstack` function, the `num` parameter doesn't support a tensor as input. However, in `zero_state` function, the first parameter can support a tensor as input. I think the new version should support this practical feature. Thanks!"}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/17203", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/17203/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/17203/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/17203/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/17203", "id": 299536902, "node_id": "MDU6SXNzdWUyOTk1MzY5MDI=", "number": 17203, "title": "Modify distributed TF examples to take kubeflow's TF_CONFIG as well as command line arguments.", "user": {"login": "elsonrodriguez", "id": 193030, "node_id": "MDQ6VXNlcjE5MzAzMA==", "avatar_url": "https://avatars3.githubusercontent.com/u/193030?v=4", "gravatar_id": "", "url": "https://api.github.com/users/elsonrodriguez", "html_url": "https://github.com/elsonrodriguez", "followers_url": "https://api.github.com/users/elsonrodriguez/followers", "following_url": "https://api.github.com/users/elsonrodriguez/following{/other_user}", "gists_url": "https://api.github.com/users/elsonrodriguez/gists{/gist_id}", "starred_url": "https://api.github.com/users/elsonrodriguez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/elsonrodriguez/subscriptions", "organizations_url": "https://api.github.com/users/elsonrodriguez/orgs", "repos_url": "https://api.github.com/users/elsonrodriguez/repos", "events_url": "https://api.github.com/users/elsonrodriguez/events{/privacy}", "received_events_url": "https://api.github.com/users/elsonrodriguez/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 299643928, "node_id": "MDU6TGFiZWwyOTk2NDM5Mjg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:contributions%20welcome", "name": "stat:contributions welcome", "color": "f4b400", "default": false, "description": ""}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 11, "created_at": "2018-02-22T22:47:24Z", "updated_at": "2018-05-05T00:53:58Z", "closed_at": null, "author_association": "CONTRIBUTOR", "body": "Currently most of the examples under `tensorflow/tools/dist_test` require command line arguments to be passed in to construct the cluster spec.\r\n\r\nThe tensorflow operator is standardizing under a representation of the cluster spec within a variable called `TF_CONFIG`, which looks like this:\r\n\r\n```\r\n{\"cluster\":{\"master\":[\"myjob237-master-06pz-0:2222\"],\"ps\":[\"myjob237-ps-06pz-0:2222\",\"myjob237-ps-06pz-1:2222\"],\"worker\":[\"myjob237-worker-06pz-0:2222\"]},\"task\":{\"type\":\"master\",\"index\":0},\"environment\":\"cloud\"}\r\n```\r\n\r\nIt would be ideal of the examples were modified to take this variable so we can reduce the shimming required in Kubeflow related efforts, without breaking backward compatibility and keeping the command line args."}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/17169", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/17169/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/17169/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/17169/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/17169", "id": 299028711, "node_id": "MDU6SXNzdWUyOTkwMjg3MTE=", "number": 17169, "title": "tf.contrib.layers output_collections inconsistency", "user": {"login": "anadodik", "id": 5052480, "node_id": "MDQ6VXNlcjUwNTI0ODA=", "avatar_url": "https://avatars1.githubusercontent.com/u/5052480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/anadodik", "html_url": "https://github.com/anadodik", "followers_url": "https://api.github.com/users/anadodik/followers", "following_url": "https://api.github.com/users/anadodik/following{/other_user}", "gists_url": "https://api.github.com/users/anadodik/gists{/gist_id}", "starred_url": "https://api.github.com/users/anadodik/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/anadodik/subscriptions", "organizations_url": "https://api.github.com/users/anadodik/orgs", "repos_url": "https://api.github.com/users/anadodik/repos", "events_url": "https://api.github.com/users/anadodik/events{/privacy}", "received_events_url": "https://api.github.com/users/anadodik/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 299643928, "node_id": "MDU6TGFiZWwyOTk2NDM5Mjg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:contributions%20welcome", "name": "stat:contributions welcome", "color": "f4b400", "default": false, "description": ""}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2018-02-21T16:05:00Z", "updated_at": "2018-03-28T20:26:13Z", "closed_at": null, "author_association": "NONE", "body": "Please correct me if I'm wrong, but there seems to be an inconsistency between the pooling and the convolution layers in `tf.contrib.layers` when it comes to adding variables to the `outputs_collection`, and using `tf.get_variable_scope().reuse_variables()`.\r\n\r\nHere is the relevant part of the model definition.\r\n```\r\ndef build_network(input):\r\n    with tf.variable_scope('scope') as sc:\r\n        ...\r\n        net = slim.max_pool2d(net, [2, 2], scope='pool')\r\n        ...\r\n        end_points = slim.utils.convert_collection_to_dict(end_points_collection)\r\n        ...\r\n        skip = slim.conv2d(end_points[sc.name + '/pool'], out_channels, [1, 1], scope='skip')\r\n        ...\r\n        end_points = slim.utils.convert_collection_to_dict(end_points_collection)\r\n        return net, end_points\r\n```\r\n\r\nAnd here is my test, which fails:\r\n```\r\nnetwork, end_points = build_network(input)\r\ntf.get_variable_scope().reuse_variables()\r\nnetwork, end_points = build_network(input)\r\n```\r\n\r\nThe reason the test fails is that whereas my convolutions all end up with the same names in the `end_points` dictionary both times (e.g. `scope/conv1/conv1_1`), the max_pooling layers end up with different names (e.g. the first time the network is built we get `scope/pool`, and the second time we get `scope_1/pool`). This means that the `end_points['scope/pool']` fails since the dictionary contains `'scope_1/pool'` as a key.\r\n\r\nI've done some breakpoint digging and it turns out that the behavior [here](https://github.com/tensorflow/tensorflow/blob/d100729c309cb22baf1630d9f39cf60516c58cdf/tensorflow/contrib/layers/python/layers/layers.py#L1063) and [here](https://github.com/tensorflow/tensorflow/blob/d100729c309cb22baf1630d9f39cf60516c58cdf/tensorflow/contrib/layers/python/layers/layers.py#L2266) differs due to convolutions using variable scopes and pooling using name scopes.\r\n\r\nNow I can potentially fix my code by using `sc.original_name_scope` instead of `sc.name`, but then the end_points dictionary is still wrong. I could manually fix the dictionary, but this seems hacky. I feel like it could be made such that the behaviour is consistent across the different layers. What do you think?"}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/17158", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/17158/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/17158/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/17158/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/17158", "id": 298748702, "node_id": "MDU6SXNzdWUyOTg3NDg3MDI=", "number": 17158, "title": "Feature Request: Better error reporting for tflite conversion", "user": {"login": "smoosh911", "id": 15962464, "node_id": "MDQ6VXNlcjE1OTYyNDY0", "avatar_url": "https://avatars2.githubusercontent.com/u/15962464?v=4", "gravatar_id": "", "url": "https://api.github.com/users/smoosh911", "html_url": "https://github.com/smoosh911", "followers_url": "https://api.github.com/users/smoosh911/followers", "following_url": "https://api.github.com/users/smoosh911/following{/other_user}", "gists_url": "https://api.github.com/users/smoosh911/gists{/gist_id}", "starred_url": "https://api.github.com/users/smoosh911/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/smoosh911/subscriptions", "organizations_url": "https://api.github.com/users/smoosh911/orgs", "repos_url": "https://api.github.com/users/smoosh911/repos", "events_url": "https://api.github.com/users/smoosh911/events{/privacy}", "received_events_url": "https://api.github.com/users/smoosh911/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 750616506, "node_id": "MDU6TGFiZWw3NTA2MTY1MDY=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/comp:lite", "name": "comp:lite", "color": "0052cc", "default": false, "description": ""}, {"id": 473173272, "node_id": "MDU6TGFiZWw0NzMxNzMyNzI=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:feature", "name": "type:feature", "color": "159b2e", "default": false, "description": ""}], "state": "open", "locked": false, "assignee": {"login": "aselle", "id": 326106, "node_id": "MDQ6VXNlcjMyNjEwNg==", "avatar_url": "https://avatars1.githubusercontent.com/u/326106?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aselle", "html_url": "https://github.com/aselle", "followers_url": "https://api.github.com/users/aselle/followers", "following_url": "https://api.github.com/users/aselle/following{/other_user}", "gists_url": "https://api.github.com/users/aselle/gists{/gist_id}", "starred_url": "https://api.github.com/users/aselle/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aselle/subscriptions", "organizations_url": "https://api.github.com/users/aselle/orgs", "repos_url": "https://api.github.com/users/aselle/repos", "events_url": "https://api.github.com/users/aselle/events{/privacy}", "received_events_url": "https://api.github.com/users/aselle/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "aselle", "id": 326106, "node_id": "MDQ6VXNlcjMyNjEwNg==", "avatar_url": "https://avatars1.githubusercontent.com/u/326106?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aselle", "html_url": "https://github.com/aselle", "followers_url": "https://api.github.com/users/aselle/followers", "following_url": "https://api.github.com/users/aselle/following{/other_user}", "gists_url": "https://api.github.com/users/aselle/gists{/gist_id}", "starred_url": "https://api.github.com/users/aselle/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aselle/subscriptions", "organizations_url": "https://api.github.com/users/aselle/orgs", "repos_url": "https://api.github.com/users/aselle/repos", "events_url": "https://api.github.com/users/aselle/events{/privacy}", "received_events_url": "https://api.github.com/users/aselle/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 7, "created_at": "2018-02-20T21:07:30Z", "updated_at": "2018-12-19T18:44:11Z", "closed_at": null, "author_association": "NONE", "body": "### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**:Yes\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**:MacOS\r\n- **TensorFlow installed from (source or binary)**:source\r\n- **TensorFlow version (use command below)**:1.5.0\r\n- **Python version**: 2.7.10\r\n- **Bazel version (if compiling from source)**:\r\n- **GCC/Compiler version (if compiling from source)**:\r\n- **CUDA/cuDNN version**: Not using\r\n- **GPU model and memory**: Radeon Pro 455\r\n- **Exact command to reproduce**: In macOS terminal: bazel-bin/tensorflow/contrib/lite/toco/toco \\\r\n  --input_file=../adventures-in-ml-code/tensorflow_word2vec/frozen_graph.pb \\\r\n  --input_format=TENSORFLOW_GRAPHDEF \\\r\n  --output_format=TFLITE \\\r\n  --output_file=../adventures-in-ml-code/tensorflow_word2vec/word2vec.lite \\\r\n  --inference_type=FLOAT \\\r\n  --input_arrays=input \\\r\n  --output_arrays=output \\\r\n  --input_shapes=1 \\\r\n  --output_shapes=1\r\n\r\nYou can collect some of this information using our environment capture script:\r\n\r\nhttps://github.com/tensorflow/tensorflow/tree/master/tools/tf_env_collect.sh\r\n\r\nYou can obtain the TensorFlow version with\r\n\r\npython -c \"import tensorflow as tf; print(tf.GIT_VERSION, tf.VERSION)\"\r\n\r\n### Describe the problem\r\n\r\nOverview\r\nI have been trying to convert a word2vec custom model into tensorflow lite. I am using the code in the tensorflow documentation that was provided as a simple word2vec example.The conversion process up to the freeze_graph.py works fine and I can use that file to run inference no problem in a python script on my desktop. My problem is when I try to convert to lite. \r\n\r\nModel conversation seems to work\r\nWhen I run the command I listed above I get a .tflite file. I can even visualize this file using bazel-bin/tensorflow/contrib/lite/tools/visualize /Users/miperry/Documents/adventures-in-ml-code/tensorflow_word2vec/word2vec.tflite /Users/miperry/Documents/adventures-in-ml-code/tensorflow_word2vec/word2vec_model_viz.html. The model looks fine in the visualizer too.\r\n\r\nUse on mobile doesn't work\r\nWhen I implement my tflite model into an iOS app and try to grab a node with \r\n````\r\nfloat* out = interpreter->typed_tensor<float>();\r\n````\r\nI sometimes get a valid pointer back but other times I get a null pointer depending on the node. \r\n\r\nAfter retraining my model with different shapes of inputs and outputs I finally noticed documentation at the end of the page https://github.com/tensorflow/tensorflow/blob/master/tensorflow/contrib/lite/g3doc/tf_ops_compatibility.md that states some operations that are present but not ready for custom models. I am using a couple of these operations and I'm guessing this is the reason my lite model isn't working. \r\n\r\nMy reqeust\r\nPlease update the errors available for tflite conversion. I don't understand why it would have been difficult to throw an error on tflite conversion that specifies a node and states that tflite doesn't support its operation. Videos posted by google employees and the introduction to tflite make it sound like this product is ready to make life easier when converting for mobile which is what encouraged me to give it a shot. Now I see that this isn't the case yet. If nothing else I would ask for the sanity of your users that tensorflow documentation more clearly warns about the limitations on mobile. \r\n\r\nTensorflow is a cool concept and the parts that are ready are awesome. Thanks for the great work!\r\n\r\nMy graph code:\r\n````\r\nvalid_dataset = tf.constant(valid_examples, dtype=tf.int32,name=\"input\")\r\n\r\nembeddings = tf.Variable(tf.random_uniform([vocabulary_size, embedding_size], -1.0, 1.0),name=\"embeddings\")\r\n\r\nnorm = tf.sqrt(tf.reduce_sum(tf.square(embeddings), 1, keep_dims=True),name=\"norm\")\r\nnormalized_embeddings = tf.div(embeddings, norm, 'normalized_embeddings')\r\nvalid_embeddings = tf.nn.embedding_lookup(normalized_embeddings, valid_dataset,name=\"valid_embeddings\")\r\nsimilarity = tf.matmul(valid_embeddings, tf.transpose(normalized_embeddings), transpose_b=False,name=\"similarity\")\r\noutput = tf.reshape(similarity, [-1], name=\"output\")\r\n````\r\n\r\n### Source code / logs\r\nInclude any logs or source code that would be helpful to diagnose the problem. If including tracebacks, please include the full traceback. Large logs and files should be attached. Try to provide a reproducible test case that is the bare minimum necessary to generate the problem.\r\n\r\nOutput from tflite conversion:\r\n````\r\n(adventures-in-ml-code) miperry-macOS:tensorflow miperry$ bazel-bin/tensorflow/contrib/lite/toco/toco   --input_file=../adventures-in-ml-code/tensorflow_word2vec/frozen_graph.pb   --input_format=TENSORFLOW_GRAPHDEF   --output_format=TFLITE   --output_file=../adventures-in-ml-code/tensorflow_word2vec/word2vec.tflite   --inference_type=FLOAT   --input_arrays=input   --output_arrays=output   --input_shapes=1   --output_shapes=1000\r\n2018-02-20 13:06:59.037245: I tensorflow/contrib/lite/toco/graph_transformations/graph_transformations.cc:39] Before Removing unused ops: 14 operators, 21 arrays (0 quantized)\r\n2018-02-20 13:06:59.038319: I tensorflow/contrib/lite/toco/graph_transformations/graph_transformations.cc:39] Before general graph transformations: 14 operators, 21 arrays (0 quantized)\r\n2018-02-20 13:06:59.072631: I tensorflow/contrib/lite/toco/graph_transformations/graph_transformations.cc:39] After general graph transformations pass 1: 5 operators, 11 arrays (0 quantized)\r\n2018-02-20 13:06:59.072687: I tensorflow/contrib/lite/toco/graph_transformations/graph_transformations.cc:39] Before dequantization graph transformations: 5 operators, 11 arrays (0 quantized)\r\n2018-02-20 13:06:59.072731: I tensorflow/contrib/lite/toco/allocate_transient_arrays.cc:311] Total transient array allocated size: 2401216 bytes, theoretical optimal value: 240000\r\n````"}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/17150", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/17150/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/17150/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/17150/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/17150", "id": 298567973, "node_id": "MDU6SXNzdWUyOTg1Njc5NzM=", "number": 17150, "title": "Problem with Keras sparse_categorical_crossentropy", "user": {"login": "Hvass-Labs", "id": 13588114, "node_id": "MDQ6VXNlcjEzNTg4MTE0", "avatar_url": "https://avatars2.githubusercontent.com/u/13588114?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Hvass-Labs", "html_url": "https://github.com/Hvass-Labs", "followers_url": "https://api.github.com/users/Hvass-Labs/followers", "following_url": "https://api.github.com/users/Hvass-Labs/following{/other_user}", "gists_url": "https://api.github.com/users/Hvass-Labs/gists{/gist_id}", "starred_url": "https://api.github.com/users/Hvass-Labs/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Hvass-Labs/subscriptions", "organizations_url": "https://api.github.com/users/Hvass-Labs/orgs", "repos_url": "https://api.github.com/users/Hvass-Labs/repos", "events_url": "https://api.github.com/users/Hvass-Labs/events{/privacy}", "received_events_url": "https://api.github.com/users/Hvass-Labs/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 473172988, "node_id": "MDU6TGFiZWw0NzMxNzI5ODg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:bug", "name": "type:bug", "color": "159b2e", "default": false, "description": ""}], "state": "open", "locked": false, "assignee": {"login": "fchollet", "id": 710255, "node_id": "MDQ6VXNlcjcxMDI1NQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/710255?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fchollet", "html_url": "https://github.com/fchollet", "followers_url": "https://api.github.com/users/fchollet/followers", "following_url": "https://api.github.com/users/fchollet/following{/other_user}", "gists_url": "https://api.github.com/users/fchollet/gists{/gist_id}", "starred_url": "https://api.github.com/users/fchollet/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fchollet/subscriptions", "organizations_url": "https://api.github.com/users/fchollet/orgs", "repos_url": "https://api.github.com/users/fchollet/repos", "events_url": "https://api.github.com/users/fchollet/events{/privacy}", "received_events_url": "https://api.github.com/users/fchollet/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "fchollet", "id": 710255, "node_id": "MDQ6VXNlcjcxMDI1NQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/710255?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fchollet", "html_url": "https://github.com/fchollet", "followers_url": "https://api.github.com/users/fchollet/followers", "following_url": "https://api.github.com/users/fchollet/following{/other_user}", "gists_url": "https://api.github.com/users/fchollet/gists{/gist_id}", "starred_url": "https://api.github.com/users/fchollet/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fchollet/subscriptions", "organizations_url": "https://api.github.com/users/fchollet/orgs", "repos_url": "https://api.github.com/users/fchollet/repos", "events_url": "https://api.github.com/users/fchollet/events{/privacy}", "received_events_url": "https://api.github.com/users/fchollet/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 15, "created_at": "2018-02-20T11:58:34Z", "updated_at": "2019-05-07T14:24:06Z", "closed_at": null, "author_association": "CONTRIBUTOR", "body": "### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**: Yes.\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**: Ubuntu 16.04\r\n- **TensorFlow installed from (source or binary)**: binary (pip install)\r\n- **TensorFlow version (use command below)**: 1.5.0 (Keras 2.1.2-tf)\r\n- **Python version**: 3.6\r\n- **Bazel version (if compiling from source)**: NA\r\n- **GCC/Compiler version (if compiling from source)**: NA\r\n- **CUDA/cuDNN version**: Can't remember.\r\n- **GPU model and memory**: GTX 1070\r\n- **Exact command to reproduce**: See below.\r\n\r\n### Background\r\n\r\nThis issue seems to be specifically about Keras with TensorFlow so I have posted it here.\r\n\r\nI have a Keras model for doing Machine Translation of human languages. It has an encoder and decoder each of which use the `Embedding` and `GRU` layers from Keras. The output of the decoder is a one-hot encoded array.\r\n\r\nMy data-set is from Europarl so it is very large already and converting the target-data from integer-tokens to one-hot-encoded labels would be extremely wasteful and take many GB of memory.\r\n\r\nOne solution would be to write my own data-generator and only convert integer-tokens to one-hot-labels for a batch at a time. But that's not a very elegant solution.\r\n\r\nThe correct solution is of course to use a sparse version of the crossentropy-loss which automatically converts the integer-tokens to a one-hot-encoded label for comparison to the model's output. Keras' has a built-in loss-function for doing exactly this called `sparse_categorical_crossentropy`. However, it doesn't seem to work as intended.\r\n\r\n### Error\r\n\r\nThe following shows the essential parts of the code.\r\n\r\n    # (Omitted code for building neural network ...)\r\n\r\n    # Output of the decoder-part of the neural network.\r\n    decoder_dense = Dense(num_words,\r\n                          activation='softmax',\r\n                          name='decoder_output')\r\n    decoder_output = decoder_dense(decoder_gru_output)\r\n\r\n    model = Model(inputs=[encoder_input, decoder_input],\r\n                  outputs=[decoder_output])\r\n\r\n    model.compile(optimizer='adam',\r\n                  loss='sparse_categorical_crossentropy')\r\n\r\n    model.fit(x=x_data, y=y_data, batch_size=128, epochs=3)\r\n\r\nEverything runs fine except `model.fit()` at the end which gives this error:\r\n\r\n    ValueError: Error when checking target: expected decoder_output to have 3 dimensions, but got array with shape (20000, 67)\r\n\r\nThis is the shape of the model's output:\r\n\r\n    >>> decoder_output.get_shape()\r\n    TensorShape([Dimension(None), Dimension(None), Dimension(10000)])\r\n\r\nThis is the shape of the target-data, which is a 2-dim array of integer-values:\r\n\r\n    y_data['decoder_output'].shape\r\n    >>> (20000, 67)\r\n\r\nNote that I only allow sequences of length 67 for the decoder's output.\r\n\r\n### Working Solution\r\n\r\nWe can use TensorFlow's implementation of sparse cross-entropy, which seems to work as intended.\r\n\r\nFirst we need to have a linear activation on the output of the decoder:\r\n\r\n    decoder_dense = Dense(num_words,\r\n                          activation='linear', # NOTE: changed from 'softmax'\r\n                          name='decoder_output')\r\n\r\nThen we need a wrapper-function for the loss that is compatible with Keras:\r\n\r\n    def sparse_loss(y_true, y_pred):\r\n        return tf.nn.sparse_softmax_cross_entropy_with_logits(labels=y_true,\r\n                                                              logits=y_pred)\r\n\r\nThen we need to create a placeholder variable for the batch of target-values. Once again I only allow sequences of length 67 (this is of course a variable in my own code).\r\n\r\n    decoder_target = tf.placeholder(dtype='int32', shape=(None, 67))\r\n\r\n    model_train.compile(optimizer='adam,\r\n                        loss=sparse_loss,\r\n                        target_tensors=[decoder_target])\r\n\r\nThis works fine and we can train it by calling:\r\n\r\n    model.fit(x=x_data, y=y_data, batch_size=128, epochs=3)\r\n\r\nMaybe Keras should use TensorFlow's sparse-cross-entropy more directly, because it seems to handle higher-dim data better?\r\n\r\n### Documentation\r\n\r\nLooking at the implementation of `sparse_categorical_crossentropy` in Keras there is actually some reshaping going on there, but the doc-string doesn't make clear what is assumed of the input/output dims and when/how reshaping is supposed to be done, so it's impossible to know whether it is a bug or a feature I am experiencing, and how to deal with it properly.\r\n\r\nThe doc-string needs to be made more clear by someone who understands the intention of this code.\r\n\r\nFurthermore, the doc-string needs to be \"exported\" somehow to the online docs because it is not shown here: https://keras.io/losses/#sparse_categorical_crossentropy\r\n"}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/17136", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/17136/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/17136/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/17136/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/17136", "id": 298385116, "node_id": "MDU6SXNzdWUyOTgzODUxMTY=", "number": 17136, "title": "Feature Request: Make beam_search_decoder use multiple CPU threads.", "user": {"login": "haotianteng", "id": 11155295, "node_id": "MDQ6VXNlcjExMTU1Mjk1", "avatar_url": "https://avatars3.githubusercontent.com/u/11155295?v=4", "gravatar_id": "", "url": "https://api.github.com/users/haotianteng", "html_url": "https://github.com/haotianteng", "followers_url": "https://api.github.com/users/haotianteng/followers", "following_url": "https://api.github.com/users/haotianteng/following{/other_user}", "gists_url": "https://api.github.com/users/haotianteng/gists{/gist_id}", "starred_url": "https://api.github.com/users/haotianteng/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/haotianteng/subscriptions", "organizations_url": "https://api.github.com/users/haotianteng/orgs", "repos_url": "https://api.github.com/users/haotianteng/repos", "events_url": "https://api.github.com/users/haotianteng/events{/privacy}", "received_events_url": "https://api.github.com/users/haotianteng/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 299643928, "node_id": "MDU6TGFiZWwyOTk2NDM5Mjg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:contributions%20welcome", "name": "stat:contributions welcome", "color": "f4b400", "default": false, "description": ""}, {"id": 473173272, "node_id": "MDU6TGFiZWw0NzMxNzMyNzI=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:feature", "name": "type:feature", "color": "159b2e", "default": false, "description": ""}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-02-19T19:51:25Z", "updated_at": "2020-01-02T09:31:22Z", "closed_at": null, "author_association": "NONE", "body": "------------------------\r\n\r\n### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**: No\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**: Linux Ubuntu 14.04\r\n- **TensorFlow installed from (source or binary)**: source\r\n- **TensorFlow version (use command below)**: 1.3.0\r\n- **Python version**: 2.7\r\n- **Bazel version (if compiling from source)**:N.A.\r\n- **GCC/Compiler version (if compiling from source)**:4.9.4\r\n- **CUDA/cuDNN version**: 8.0/6.0\r\n- **GPU model and memory**: GTX 1080Ti\r\n- **Exact command to reproduce**: N.A.\r\n\r\n### Describe the problem\r\nAdd multiple threads support for tf.nn.ctc_beam_search_decoder, for now the tf.nn.ctc_beam_search_decoder is using CPU and only run on 1 thread(although multiple threads has been provided), make it use several CPU threads to run would be very useful as the decoding process of the beam_search_decoder is now the bottleneck of the inference.\r\n### Source code / logs\r\nInclude any logs or source code that would be helpful to diagnose the problem. If including tracebacks, please include the full traceback. Large logs and files should be attached. Try to provide a reproducible test case that is the bare minimum necessary to generate the problem.\r\nI use the nvidia-smi and htop to observe the CPU and GPU usage when running a test CTC decoding process, only 1 CPU thread is used and 0 GPU-Utilitiy has been observed during decoding."}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/17097", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/17097/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/17097/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/17097/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/17097", "id": 298028356, "node_id": "MDU6SXNzdWUyOTgwMjgzNTY=", "number": 17097, "title": "Feature request: complex support in initializers", "user": {"login": "carlthome", "id": 1595907, "node_id": "MDQ6VXNlcjE1OTU5MDc=", "avatar_url": "https://avatars3.githubusercontent.com/u/1595907?v=4", "gravatar_id": "", "url": "https://api.github.com/users/carlthome", "html_url": "https://github.com/carlthome", "followers_url": "https://api.github.com/users/carlthome/followers", "following_url": "https://api.github.com/users/carlthome/following{/other_user}", "gists_url": "https://api.github.com/users/carlthome/gists{/gist_id}", "starred_url": "https://api.github.com/users/carlthome/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/carlthome/subscriptions", "organizations_url": "https://api.github.com/users/carlthome/orgs", "repos_url": "https://api.github.com/users/carlthome/repos", "events_url": "https://api.github.com/users/carlthome/events{/privacy}", "received_events_url": "https://api.github.com/users/carlthome/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 299643928, "node_id": "MDU6TGFiZWwyOTk2NDM5Mjg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:contributions%20welcome", "name": "stat:contributions welcome", "color": "f4b400", "default": false, "description": ""}, {"id": 473173272, "node_id": "MDU6TGFiZWw0NzMxNzMyNzI=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:feature", "name": "type:feature", "color": "159b2e", "default": false, "description": ""}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2018-02-17T19:08:36Z", "updated_at": "2019-03-28T15:41:47Z", "closed_at": null, "author_association": "CONTRIBUTOR", "body": "AFAIK no initializers work with tf.complex64 and tf.complex128 (is there a mathematical reason for this?).\r\n\r\nMy current workaround is to call them twice (once for the real part and once for the imaginary), as\r\n```py\r\ndef complex_initializer(base_initializer):\r\n    f = base_initializer()\r\n\r\n    def initializer(*args, dtype=tf.complex64, **kwargs):\r\n        real = f(*args, **kwargs)\r\n        imag = f(*args, **kwargs)\r\n        return tf.complex(real, imag)\r\n\r\n    return initializer\r\n\r\n\r\ntf.get_variable(\r\n        name='my_complex_variable',\r\n        shape=[1],\r\n        dtype=tf.complex64,\r\n        initializer=complex_initializer(tf.random_normal_initializer))\r\n```\r\nwhich seems to work fine so I'm wondering why this isn't built-in already?\r\n"}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/17076", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/17076/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/17076/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/17076/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/17076", "id": 297925798, "node_id": "MDU6SXNzdWUyOTc5MjU3OTg=", "number": 17076, "title": "Sample for report_tensor_allocations_upon_oom and RunOptions", "user": {"login": "Yagun", "id": 34515418, "node_id": "MDQ6VXNlcjM0NTE1NDE4", "avatar_url": "https://avatars2.githubusercontent.com/u/34515418?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Yagun", "html_url": "https://github.com/Yagun", "followers_url": "https://api.github.com/users/Yagun/followers", "following_url": "https://api.github.com/users/Yagun/following{/other_user}", "gists_url": "https://api.github.com/users/Yagun/gists{/gist_id}", "starred_url": "https://api.github.com/users/Yagun/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Yagun/subscriptions", "organizations_url": "https://api.github.com/users/Yagun/orgs", "repos_url": "https://api.github.com/users/Yagun/repos", "events_url": "https://api.github.com/users/Yagun/events{/privacy}", "received_events_url": "https://api.github.com/users/Yagun/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 299643928, "node_id": "MDU6TGFiZWwyOTk2NDM5Mjg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:contributions%20welcome", "name": "stat:contributions welcome", "color": "f4b400", "default": false, "description": ""}, {"id": 284443156, "node_id": "MDU6TGFiZWwyODQ0NDMxNTY=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:docs", "name": "type:docs", "color": "159b2e", "default": false, "description": ""}], "state": "open", "locked": false, "assignee": {"login": "poxvoculi", "id": 15676913, "node_id": "MDQ6VXNlcjE1Njc2OTEz", "avatar_url": "https://avatars2.githubusercontent.com/u/15676913?v=4", "gravatar_id": "", "url": "https://api.github.com/users/poxvoculi", "html_url": "https://github.com/poxvoculi", "followers_url": "https://api.github.com/users/poxvoculi/followers", "following_url": "https://api.github.com/users/poxvoculi/following{/other_user}", "gists_url": "https://api.github.com/users/poxvoculi/gists{/gist_id}", "starred_url": "https://api.github.com/users/poxvoculi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/poxvoculi/subscriptions", "organizations_url": "https://api.github.com/users/poxvoculi/orgs", "repos_url": "https://api.github.com/users/poxvoculi/repos", "events_url": "https://api.github.com/users/poxvoculi/events{/privacy}", "received_events_url": "https://api.github.com/users/poxvoculi/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "poxvoculi", "id": 15676913, "node_id": "MDQ6VXNlcjE1Njc2OTEz", "avatar_url": "https://avatars2.githubusercontent.com/u/15676913?v=4", "gravatar_id": "", "url": "https://api.github.com/users/poxvoculi", "html_url": "https://github.com/poxvoculi", "followers_url": "https://api.github.com/users/poxvoculi/followers", "following_url": "https://api.github.com/users/poxvoculi/following{/other_user}", "gists_url": "https://api.github.com/users/poxvoculi/gists{/gist_id}", "starred_url": "https://api.github.com/users/poxvoculi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/poxvoculi/subscriptions", "organizations_url": "https://api.github.com/users/poxvoculi/orgs", "repos_url": "https://api.github.com/users/poxvoculi/repos", "events_url": "https://api.github.com/users/poxvoculi/events{/privacy}", "received_events_url": "https://api.github.com/users/poxvoculi/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 6, "created_at": "2018-02-16T21:30:26Z", "updated_at": "2018-12-07T18:48:54Z", "closed_at": null, "author_association": "NONE", "body": "This is a feature request.\r\n\r\nPlease add some example to the docs describing how to use report_tensor_allocations_upon_oom and other options of RunOptions\r\n\r\nAll I could find is this file:\r\nhttps://github.com/tensorflow/tensorflow/blob/master/tensorflow/python/profiler/model_analyzer_test.py\r\n\r\nBut it is not obvious. For example, it contains:\r\n\r\n    from tensorflow.core.protobuf import config_pb2\r\n\r\nand then\r\n\r\n    with session.Session() as sess:\r\n        sess.run(c, options=config_pb2.RunOptions(\r\n            report_tensor_allocations_upon_oom=True))\r\n\r\nAnd more questions arise like: \"What is config_pb2?\" etc.\r\n\r\nThanks."}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/17064", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/17064/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/17064/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/17064/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/17064", "id": 297752052, "node_id": "MDU6SXNzdWUyOTc3NTIwNTI=", "number": 17064, "title": "Allocating C++ types instead of Tensors in a new Op - Feature Request", "user": {"login": "MiguelMonteiro", "id": 29569659, "node_id": "MDQ6VXNlcjI5NTY5NjU5", "avatar_url": "https://avatars3.githubusercontent.com/u/29569659?v=4", "gravatar_id": "", "url": "https://api.github.com/users/MiguelMonteiro", "html_url": "https://github.com/MiguelMonteiro", "followers_url": "https://api.github.com/users/MiguelMonteiro/followers", "following_url": "https://api.github.com/users/MiguelMonteiro/following{/other_user}", "gists_url": "https://api.github.com/users/MiguelMonteiro/gists{/gist_id}", "starred_url": "https://api.github.com/users/MiguelMonteiro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/MiguelMonteiro/subscriptions", "organizations_url": "https://api.github.com/users/MiguelMonteiro/orgs", "repos_url": "https://api.github.com/users/MiguelMonteiro/repos", "events_url": "https://api.github.com/users/MiguelMonteiro/events{/privacy}", "received_events_url": "https://api.github.com/users/MiguelMonteiro/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 299643928, "node_id": "MDU6TGFiZWwyOTk2NDM5Mjg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:contributions%20welcome", "name": "stat:contributions welcome", "color": "f4b400", "default": false, "description": ""}, {"id": 473173272, "node_id": "MDU6TGFiZWw0NzMxNzMyNzI=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:feature", "name": "type:feature", "color": "159b2e", "default": false, "description": ""}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 11, "created_at": "2018-02-16T11:15:36Z", "updated_at": "2019-11-05T07:15:50Z", "closed_at": null, "author_association": "NONE", "body": "### System information\r\n- Have I written custom code (as opposed to using a stock example script provided in TensorFlow): No\r\n- OS Platform and Distribution (e.g., Linux Ubuntu 16.04): macOS\r\n- TensorFlow installed from (source or binary): No\r\n- TensorFlow version: 1.5\r\n- Python version: 2.7\r\n- Bazel version (if compiling from source): N/A\r\n- GCC/Compiler version (if compiling from source): N/A\r\n- CUDA/cuDNN version: N/A\r\n- GPU model and memory: N/A\r\n- Exact command to reproduce: N/A\r\n\r\n### Feature Request\r\n##### Feature requested: the ability to allocate memory in a new op as C++ types and not only as tensors;\r\n\r\nI have been implementing a new op on Tensorflow following the [guide](https://www.tensorflow.org/extend/adding_an_op) and have noticed what could be a useful feature for people implementing new ops in C++/CUDA.\r\n\r\nCurrently using `OpKernelConstruction* context` it is only possible to allocate memory (CPU or GPU) in the form of tensors. For basic  C++ types you can obtain  a pointer for that type easily, for example:\r\n\r\n```\r\nTensor tensor;\r\nOP_REQUIRES_OK(context, context->allocate_temp(DT_FLOAT,  TensorShape({5}), &tensor));\r\nfloat * ptr = tensor.flat<float>.data();\r\n```\r\n\r\nHowever, for more complex types like `structs` this is not possible (or at least not direct). Why not have something like:\r\n\r\n```\r\nstruct A {\r\n    int a;\r\n    int b;\r\n};\r\nA * a = nullptr;\r\nOP_REQUIRES_OK(context, context->allocate_bytes(n_bytes=sizeof(A), address = a));\r\n```\r\n\r\nI think this could be useful when porting C++ code from elsewhere and simplifies memory allocation of non-tensor types in C++.\r\nCould this be a useful feature or is there a good reason it's not implemented?\r\n\r\n### Note:\r\nOne possible work-around with the current system is to allocate a tensor of type `UINT_8`with the number of bytes required and then used `reinterpret_cast `:\r\n\r\n```\r\nstruct A {\r\n    int a;\r\n    int b;\r\n};\r\nA * a = nullptr;\r\nTensor tensor;\r\nOP_REQUIRES_OK(context, context->allocate_temp(DT_UINT8, TensorShape({sizeof(A)}), &tensor));\r\na = reinterpret_cast<A*>(tensor.flat<unsigned char>().data());\r\n```\r\nThis kind of feels like cheating and over complex just for allocating memory.\r\n"}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/17056", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/17056/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/17056/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/17056/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/17056", "id": 297620671, "node_id": "MDU6SXNzdWUyOTc2MjA2NzE=", "number": 17056, "title": "tf.reduce_min([inf, nan]).eval() == inf, should be nan", "user": {"login": "girving", "id": 70511, "node_id": "MDQ6VXNlcjcwNTEx", "avatar_url": "https://avatars1.githubusercontent.com/u/70511?v=4", "gravatar_id": "", "url": "https://api.github.com/users/girving", "html_url": "https://github.com/girving", "followers_url": "https://api.github.com/users/girving/followers", "following_url": "https://api.github.com/users/girving/following{/other_user}", "gists_url": "https://api.github.com/users/girving/gists{/gist_id}", "starred_url": "https://api.github.com/users/girving/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/girving/subscriptions", "organizations_url": "https://api.github.com/users/girving/orgs", "repos_url": "https://api.github.com/users/girving/repos", "events_url": "https://api.github.com/users/girving/events{/privacy}", "received_events_url": "https://api.github.com/users/girving/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": {"login": "rmlarsen", "id": 16907534, "node_id": "MDQ6VXNlcjE2OTA3NTM0", "avatar_url": "https://avatars2.githubusercontent.com/u/16907534?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rmlarsen", "html_url": "https://github.com/rmlarsen", "followers_url": "https://api.github.com/users/rmlarsen/followers", "following_url": "https://api.github.com/users/rmlarsen/following{/other_user}", "gists_url": "https://api.github.com/users/rmlarsen/gists{/gist_id}", "starred_url": "https://api.github.com/users/rmlarsen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rmlarsen/subscriptions", "organizations_url": "https://api.github.com/users/rmlarsen/orgs", "repos_url": "https://api.github.com/users/rmlarsen/repos", "events_url": "https://api.github.com/users/rmlarsen/events{/privacy}", "received_events_url": "https://api.github.com/users/rmlarsen/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "rmlarsen", "id": 16907534, "node_id": "MDQ6VXNlcjE2OTA3NTM0", "avatar_url": "https://avatars2.githubusercontent.com/u/16907534?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rmlarsen", "html_url": "https://github.com/rmlarsen", "followers_url": "https://api.github.com/users/rmlarsen/followers", "following_url": "https://api.github.com/users/rmlarsen/following{/other_user}", "gists_url": "https://api.github.com/users/rmlarsen/gists{/gist_id}", "starred_url": "https://api.github.com/users/rmlarsen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rmlarsen/subscriptions", "organizations_url": "https://api.github.com/users/rmlarsen/orgs", "repos_url": "https://api.github.com/users/rmlarsen/repos", "events_url": "https://api.github.com/users/rmlarsen/events{/privacy}", "received_events_url": "https://api.github.com/users/rmlarsen/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 11, "created_at": "2018-02-15T22:32:23Z", "updated_at": "2018-12-20T18:45:52Z", "closed_at": null, "author_association": "CONTRIBUTOR", "body": "### Describe the problem\r\n\r\n`tf.reduce_min` and `tf.reduce_max` do not propagate nans correctly.  E.g.,\r\n\r\n    >>> tf.reduce_min([inf, nan]).eval()\r\n    inf\r\n\r\nbut the correct answer (the one most useful for debugging) is `nan`.  This is presumably due to a backwards comparison, similar to the old `tf.nn.relu(nan) == 0` bug that @alexalemi found.\r\n\r\n### Source code / logs\r\nHere's a colab illustrating the problem with TensorFlow 1.6.0-rc1: https://drive.google.com/file/d/1nDA0Q48PveBlx_D5Zurchbw8l7eczRSB/view?usp=sharing"}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/17043", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/17043/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/17043/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/17043/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/17043", "id": 297462000, "node_id": "MDU6SXNzdWUyOTc0NjIwMDA=", "number": 17043, "title": "seg fault in 1.6rc0 and master on skylake cpu (avx512 related probably)", "user": {"login": "bioothod", "id": 1847575, "node_id": "MDQ6VXNlcjE4NDc1NzU=", "avatar_url": "https://avatars1.githubusercontent.com/u/1847575?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bioothod", "html_url": "https://github.com/bioothod", "followers_url": "https://api.github.com/users/bioothod/followers", "following_url": "https://api.github.com/users/bioothod/following{/other_user}", "gists_url": "https://api.github.com/users/bioothod/gists{/gist_id}", "starred_url": "https://api.github.com/users/bioothod/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bioothod/subscriptions", "organizations_url": "https://api.github.com/users/bioothod/orgs", "repos_url": "https://api.github.com/users/bioothod/repos", "events_url": "https://api.github.com/users/bioothod/events{/privacy}", "received_events_url": "https://api.github.com/users/bioothod/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 299643928, "node_id": "MDU6TGFiZWwyOTk2NDM5Mjg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:contributions%20welcome", "name": "stat:contributions welcome", "color": "f4b400", "default": false, "description": ""}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 20, "created_at": "2018-02-15T14:19:38Z", "updated_at": "2018-12-12T14:19:42Z", "closed_at": null, "author_association": "CONTRIBUTOR", "body": "### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**:\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**:\r\nLinux Ubuntu 16.04\r\n- **TensorFlow installed from (source or binary)**:\r\nBuilt from source\r\n- **TensorFlow version (use command below)**:\r\nv1.6.0-rc0-19-gecec1d8 1.6.0-rc1\r\nmaster\r\n- **Python version**: 3.5.2\r\n- **Bazel version (if compiling from source)**: 0.10.0\r\n- **GCC/Compiler version (if compiling from source)**: 5.4.0\r\n- **CUDA/cuDNN version**: 9.1.85/7.0.5.15\r\n- **GPU model and memory**:\r\nGeForce GTX 1080 Ti\r\ntotalMemory: 10.91GiB freeMemory: 8.36GiB\r\n\r\n### Describe the problem\r\n\r\nIf tf1.6 is compiled with `--march=native` then running inference on a large model ends up with crash with cryptic stack trace, 100% reproducible, no matter with or without CUDA (whether CUDA_VISIBLE_DEVICES=\"\" or absent).\r\n\r\nIf compiled **without** avx512 support (i.e. `-O3 -msse4.2 -mavx2 -mfma` only), then everything works fine.\r\nTF emits a warning though:\r\n```\r\n2018-02-15 14:03:54.237530: I tensorflow/core/platform/cpu_feature_guard.cc:140] Your CPU supports instructions that this TensorFlow binary was not compiled to use: AVX512F\r\n```\r\n\r\nI checked another issue with 64 byte alignment (https://github.com/tensorflow/tensorflow/issues/15588), but it does not help.\r\n\r\nHere is a crash trace, if it may help.\r\n```\r\n(gdb) bt\r\n#0  0x00007fdea3c5c9d5 in Eigen::internal::gemm_pack_lhs<float, long, Eigen::internal::TensorContractionSubMapper<float, long, 1, Eigen::TensorEvaluator<Eigen::TensorMap<Eigen::Tensor<float const, 2, 1, long>, 16, Eigen::MakePointer> const, Eigen::ThreadPoolDevice>, Eigen::array<long, 1ul>, Eigen::array<long, 1ul>, 16, true, false, 0, Eigen::MakePointer>, 48, 16, 0, false, false>::operator()(float*, Eigen::internal::TensorContractionSubMapper<float, long, 1, Eigen::TensorEvaluator<Eigen::TensorMap<Eigen::Tensor<float const, 2, 1, long>, 16, Eigen::MakePointer> const, Eigen::ThreadPoolDevice>, Eigen::array<long, 1ul>, Eigen::array<long, 1ul>, 16, true, false, 0, Eigen::MakePointer> const&, long, long, long, long) () from /home/zbr/.local/lib/python3.5/site-packages/tensorflow/python/_pywrap_tensorflow_internal.so\r\n#1  0x00007fdea3cd0fc4 in Eigen::TensorEvaluator<Eigen::TensorContractionOp<Eigen::array<Eigen::IndexPair<long>, 1ul> const, Eigen::TensorMap<Eigen::Tensor<float const, 2, 1, long>, 16, Eigen::MakePointer> const, Eigen::TensorMap<Eigen::Tensor<float const, 2, 1, long>, 16, Eigen::MakePointer> const> const, Eigen::ThreadPoolDevice>::Context<Eigen::internal::gemm_pack_lhs<float, long, Eigen::internal::TensorContractionSubMapper<float, long, 1, Eigen::TensorEvaluator<Eigen::TensorMap<Eigen::Tensor<float const, 2, 1, long>, 16, Eigen::MakePointer> const, Eigen::ThreadPoolDevice>, Eigen::array<long, 1ul>, Eigen::array<long, 1ul>, 16, true, false, 0, Eigen::MakePointer>, 48, 16, 0, false, false>, Eigen::internal::gemm_pack_rhs<float, long, Eigen::internal::TensorContractionSubMapper<float, long, 0, Eigen::TensorEvaluator<Eigen::TensorMap<Eigen::Tensor<float const, 2, 1, long>, 16, Eigen::MakePointer> const, Eigen::ThreadPoolDevice>, Eigen::array<long, 1ul>, Eigen::array<long, 1ul>, 16, true, false, 0, Eigen::MakePointer>, 4, 0, false, false>, Eigen::internal::gebp_kernel<float, float, long, Eigen::internal::blas_data_mapper<float, long, 0, 0>, 48, 4, false, false>, Eigen::internal::TensorContractionInputMapper<float, long, 1, Eigen::TensorEvaluator<Eigen::TensorMap<Eigen::Tensor<float const, 2, 1, long>, 16, Eigen::MakePointer> const, Eigen::ThreadPoolDevice>, Eigen::array<long, 1ul>, Eigen::array<long, 1ul>, 16, true, false, 0, Eigen::MakePointer>, Eigen::internal::TensorContractionInputMapper<float, long, 0, Eigen::TensorEvaluator<Eigen::TensorMap<Eigen::Tensor<float const, 2, 1, long>, 16, Eigen::MakePointer> const, Eigen::ThreadPoolDevice>, Eigen::array<long, 1ul>, Eigen::array<long, 1ul>, 16, true, false, 0, Eigen::MakePointer>, Eigen::internal::blas_data_mapper<float, long, 0, 0> >::enqueue_packing_helper(long, long, long, bool) ()\r\n   from /home/zbr/.local/lib/python3.5/site-packages/tensorflow/python/_pywrap_tensorflow_internal.so\r\n#2  0x00007fdea06232d1 in Eigen::NonBlockingThreadPoolTempl<tensorflow::thread::EigenEnvironment>::WorkerLoop(int) ()\r\n   from /home/zbr/.local/lib/python3.5/site-packages/tensorflow/python/../libtensorflow_framework.so\r\n#3  0x00007fdea06210e7 in std::_Function_handler<void (), tensorflow::thread::EigenEnvironment::CreateThread(std::function<void ()>)::{lambda()#1}>::_M_invoke(std::_Any_data const&) ()\r\n   from /home/zbr/.local/lib/python3.5/site-packages/tensorflow/python/../libtensorflow_framework.so\r\n#4  0x00007fde96afbc80 in ?? () from /usr/lib/x86_64-linux-gnu/libstdc++.so.6\r\n#5  0x00007fded77d76ba in start_thread (arg=0x7fdeb87d8700) at pthread_create.c:333\r\n#6  0x00007fded750d41d in clone () at ../sysdeps/unix/sysv/linux/x86_64/clone.S:109\r\n(gdb)\r\n```"}]