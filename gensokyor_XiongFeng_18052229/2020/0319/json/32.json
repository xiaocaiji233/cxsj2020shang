[{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/17018", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/17018/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/17018/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/17018/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/17018", "id": 297234645, "node_id": "MDU6SXNzdWUyOTcyMzQ2NDU=", "number": 17018, "title": "Feature/PR Idea - mean IoU for vector of thresholds", "user": {"login": "petermetz", "id": 1583231, "node_id": "MDQ6VXNlcjE1ODMyMzE=", "avatar_url": "https://avatars3.githubusercontent.com/u/1583231?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petermetz", "html_url": "https://github.com/petermetz", "followers_url": "https://api.github.com/users/petermetz/followers", "following_url": "https://api.github.com/users/petermetz/following{/other_user}", "gists_url": "https://api.github.com/users/petermetz/gists{/gist_id}", "starred_url": "https://api.github.com/users/petermetz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petermetz/subscriptions", "organizations_url": "https://api.github.com/users/petermetz/orgs", "repos_url": "https://api.github.com/users/petermetz/repos", "events_url": "https://api.github.com/users/petermetz/events{/privacy}", "received_events_url": "https://api.github.com/users/petermetz/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 299643928, "node_id": "MDU6TGFiZWwyOTk2NDM5Mjg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:contributions%20welcome", "name": "stat:contributions welcome", "color": "f4b400", "default": false, "description": ""}, {"id": 473173272, "node_id": "MDU6TGFiZWw0NzMxNzMyNzI=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:feature", "name": "type:feature", "color": "159b2e", "default": false, "description": ""}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-02-14T20:29:32Z", "updated_at": "2018-02-15T17:29:19Z", "closed_at": null, "author_association": "NONE", "body": "### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**: `False`\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**: macOS Sierra 10.12.6\r\n- **TensorFlow installed from (source or binary)**: binary\r\n- **TensorFlow version (use command below)**: 1.0.0\r\n- **Python version**: 3.6\r\n- **Bazel version (if compiling from source)**: `None`\r\n- **GCC/Compiler version (if compiling from source)**: `None`\r\n- **CUDA/cuDNN version**: `None`\r\n- **GPU model and memory**: Radeon Pro 560 4096 MB - Intel HD Graphics 630 1536 MB\r\n- **Exact command to reproduce**: `None`\r\n\r\n### Summary\r\nI'd love to have a convenient, clean API for expressing the calculation of mean IoU for a set of thresholds instead of a single value. \r\nLike the way it's described here: https://www.kaggle.com/c/data-science-bowl-2018#evaluation\r\n\r\nI'm planning on submitting a PR with a solution unless I get told here that the idea is explicitly being opposed by the decision-makers. Please let me know if you'd consider merging something like this in and I'll move to the next phase.\r\n\r\nI'm assuming that the implementation is possible without having to get knee deep in CUDA C/C++ given that there's already a mean IoU feature here and I would (hopefully) just need to extend that in a backward compatible way so that it takes some optional extra information in the form of a vector of thresholds =>\r\n https://github.com/tensorflow/tensorflow/blob/master/tensorflow/python/ops/metrics_impl.py#L948:\r\n\r\nTips and guidance are most welcome, thank you in advance for any help and the verdict as well.\r\n"}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/17012", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/17012/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/17012/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/17012/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/17012", "id": 297137462, "node_id": "MDU6SXNzdWUyOTcxMzc0NjI=", "number": 17012, "title": "LNK2019\tunresolved external symbol __std_reverse_trivially_swappable_8  when compiling proto_text.vcxproj", "user": {"login": "MennoK", "id": 3978425, "node_id": "MDQ6VXNlcjM5Nzg0MjU=", "avatar_url": "https://avatars0.githubusercontent.com/u/3978425?v=4", "gravatar_id": "", "url": "https://api.github.com/users/MennoK", "html_url": "https://github.com/MennoK", "followers_url": "https://api.github.com/users/MennoK/followers", "following_url": "https://api.github.com/users/MennoK/following{/other_user}", "gists_url": "https://api.github.com/users/MennoK/gists{/gist_id}", "starred_url": "https://api.github.com/users/MennoK/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/MennoK/subscriptions", "organizations_url": "https://api.github.com/users/MennoK/orgs", "repos_url": "https://api.github.com/users/MennoK/repos", "events_url": "https://api.github.com/users/MennoK/events{/privacy}", "received_events_url": "https://api.github.com/users/MennoK/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 404586558, "node_id": "MDU6TGFiZWw0MDQ1ODY1NTg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:community%20support", "name": "stat:community support", "color": "f4b400", "default": false, "description": ""}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-02-14T15:29:29Z", "updated_at": "2018-07-02T14:47:32Z", "closed_at": null, "author_association": "NONE", "body": "### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**:  N/A\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**: Windows 10\r\n- **TensorFlow installed from (source or binary)**: source\r\n- **TensorFlow version (use command below)**: 1.4\r\n- **Python version**: 3.5\r\n- **Bazel version (if compiling from source)**: N/A\r\n- **GCC/Compiler version (if compiling from source)**: Cmake 3.10.2, swigwin 3.0.12, Visual studio 2017, but toolset 2015 v140\r\n- **CUDA/cuDNN version**: N/A\r\n- **GPU model and memory**: N/A\r\n- **Exact command to reproduce**:\r\n\r\nI'm following the CMake guide as described here: https://github.com/tensorflow/tensorflow/blob/fbddebee0bf07dadfb2b15ec678291dd5730ca99/tensorflow/contrib/cmake/README.md.\r\n\r\nError appears after following command:\r\n`MSBuild /p:Configuration=Release tf_tutorials_example_trainer.vcxproj`\r\n\r\n### Describe the problem\r\nError when compiling the proto_text.vcxproj\r\n\r\n### Source code / logs\r\n```\r\n\"C:\\tensorflow\\tensorflow\\contrib\\cmake\\build\\tf_tutorials_example_trainer.vcxproj\" (default target) (1) ->\r\n\"C:\\tensorflow\\tensorflow\\contrib\\cmake\\build\\tf_cc_framework.vcxproj\" (default target) (3) ->\r\n\"C:\\tensorflow\\tensorflow\\contrib\\cmake\\build\\tf_core_framework.vcxproj\" (default target) (4) ->\r\n\"C:\\tensorflow\\tensorflow\\contrib\\cmake\\build\\proto_text.vcxproj\" (default target) (5) ->\r\n(Link target) ->\r\n  libprotobuf.lib(text_format.obj) : error LNK2019: unresolved external symbol __std_reverse_trivially_swappable_8 referenced in function \"void __cdecl std::_Buffered_inplace_merge_d\r\nivide_and_conquer2<class google::protobuf::Message const * *,__int64,class google::protobuf::Message const *,class google::protobuf::MapEntryMessageComparator>(class google::protobuf\r\n::Message const * *,class google::protobuf::Message const * *,class google::protobuf::Message const * *,__int64,__int64,struct std::_Temporary_buffer<class google::protobuf::Message\r\nconst *> &,class google::protobuf::MapEntryMessageComparator,class google::protobuf::Message const * *,class google::protobuf::Message const * *,__int64,__int64)\" (??$_Buffered_inpla\r\nce_merge_divide_and_conquer2@PEAPEBVMessage@protobuf@google@@_JPEBV123@VMapEntryMessageComparator@23@@std@@YAXPEAPEBVMessage@protobuf@google@@00_J1AEAU?$_Temporary_buffer@PEBVMessage\r\n@protobuf@google@@@0@VMapEntryMessageComparator@23@0011@Z) [C:\\tensorflow\\tensorflow\\contrib\\cmake\\build\\proto_text.vcxproj]\r\n  C:\\tensorflow\\tensorflow\\contrib\\cmake\\build\\Release\\proto_text.exe : fatal error LNK1120: 1 unresolved externals [C:\\tensorflow\\tensorflow\\contrib\\cmake\\build\\proto_text.vcxproj]\r\n```\r\n\r\n"}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/17009", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/17009/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/17009/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/17009/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/17009", "id": 297092223, "node_id": "MDU6SXNzdWUyOTcwOTIyMjM=", "number": 17009, "title": "Failed to call cudnnRNNBackwardData: CUDNN_STATUS_INTERNAL_ERROR", "user": {"login": "burglarhobbit", "id": 15987266, "node_id": "MDQ6VXNlcjE1OTg3MjY2", "avatar_url": "https://avatars2.githubusercontent.com/u/15987266?v=4", "gravatar_id": "", "url": "https://api.github.com/users/burglarhobbit", "html_url": "https://github.com/burglarhobbit", "followers_url": "https://api.github.com/users/burglarhobbit/followers", "following_url": "https://api.github.com/users/burglarhobbit/following{/other_user}", "gists_url": "https://api.github.com/users/burglarhobbit/gists{/gist_id}", "starred_url": "https://api.github.com/users/burglarhobbit/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/burglarhobbit/subscriptions", "organizations_url": "https://api.github.com/users/burglarhobbit/orgs", "repos_url": "https://api.github.com/users/burglarhobbit/repos", "events_url": "https://api.github.com/users/burglarhobbit/events{/privacy}", "received_events_url": "https://api.github.com/users/burglarhobbit/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": {"login": "protoget", "id": 5117188, "node_id": "MDQ6VXNlcjUxMTcxODg=", "avatar_url": "https://avatars1.githubusercontent.com/u/5117188?v=4", "gravatar_id": "", "url": "https://api.github.com/users/protoget", "html_url": "https://github.com/protoget", "followers_url": "https://api.github.com/users/protoget/followers", "following_url": "https://api.github.com/users/protoget/following{/other_user}", "gists_url": "https://api.github.com/users/protoget/gists{/gist_id}", "starred_url": "https://api.github.com/users/protoget/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/protoget/subscriptions", "organizations_url": "https://api.github.com/users/protoget/orgs", "repos_url": "https://api.github.com/users/protoget/repos", "events_url": "https://api.github.com/users/protoget/events{/privacy}", "received_events_url": "https://api.github.com/users/protoget/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "protoget", "id": 5117188, "node_id": "MDQ6VXNlcjUxMTcxODg=", "avatar_url": "https://avatars1.githubusercontent.com/u/5117188?v=4", "gravatar_id": "", "url": "https://api.github.com/users/protoget", "html_url": "https://github.com/protoget", "followers_url": "https://api.github.com/users/protoget/followers", "following_url": "https://api.github.com/users/protoget/following{/other_user}", "gists_url": "https://api.github.com/users/protoget/gists{/gist_id}", "starred_url": "https://api.github.com/users/protoget/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/protoget/subscriptions", "organizations_url": "https://api.github.com/users/protoget/orgs", "repos_url": "https://api.github.com/users/protoget/repos", "events_url": "https://api.github.com/users/protoget/events{/privacy}", "received_events_url": "https://api.github.com/users/protoget/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 14, "created_at": "2018-02-14T13:17:55Z", "updated_at": "2019-11-25T16:59:22Z", "closed_at": null, "author_association": "NONE", "body": "### System information\r\n- **Have I written custom code**: Yes\r\n- **OS Platform and Distribution**: Ubuntu 16.04\r\n- **TensorFlow installed from**: binary\r\n- **TensorFlow version**: 1.4.1\r\n- **Python version**: 3.5.2\r\n- **Bazel version:** Not compiled from source\r\n- **GCC/Compiler version**: Not compiled from source\r\n- **CUDA/cuDNN version**: 8.0/v6\r\n- **GPU model and memory**: GeForce GTX 1080 (8GB x 4)\r\n- **Exact command to reproduce**: Code as per below\r\n\r\nThe code starts training and after an arbitrary number of iterations on batches, it gives the following error:\r\n\r\n```\r\n2018-02-14 23:51:31.591963: E tensorflow/stream_executor/cuda/cuda_event.cc:49] Error polling for event status: failed to query event: CUDA_ERROR_ILLEGAL_ADDRESS\r\n2018-02-14 23:51:31.592000: F tensorflow/core/common_runtime/gpu/gpu_event_mgr.cc:203] Unexpected Event status: 1\r\n2018-02-14 23:51:31.592023: E tensorflow/stream_executor/cuda/cuda_dnn.cc:1679] Failed to call cudnnRNNBackwardData: CUDNN_STATUS_INTERNAL_ERROR\r\nAborted (core dumped)\r\n```\r\n\r\nI'm using `cudnn_gru` in a `tf.while_loop` control flow operation and using initializers from outside the `tf.while` scope since variables aren't allowed to be instantiated within the `tf.while` scope:\r\n\r\n```\r\nimport tensorflow as tf\r\n\r\ngru_fw = tf.contrib.cudnn_rnn.CudnnGRU(num_layers=1, num_units=150, input_size=500)\r\ngru_fw_1 = tf.contrib.cudnn_rnn.CudnnGRU(num_layers=1, num_units=150, input_size=1800)\r\ne = tf.random_uniform([gru_fw.params_size()], -0.1, 0.1)\r\nf = tf.random_uniform([gru_fw.params_size()], -0.1, 0.1)\r\ng = tf.zeros([1, 4, 150])\r\nh = tf.zeros([1, 4, 150])\r\nzeros_i = tf.zeros([4, 150])\r\n\r\nclass cudnn_gru:\r\n\tdef __init__(self, num_layers, num_units, batch_size, input_size, keep_prob=1.0, is_train=None, scope=None):\r\n\t\tself.num_layers = num_layers\r\n\t\tself.grus = []\r\n\t\tself.params = []\r\n\t\tself.inits = []\r\n\t\tself.dropout_mask = []\r\n\t\tfor layer in range(num_layers):\r\n\t\t\tinput_size_ = input_size if layer == 0 else 2 * num_units\r\n\t\t\tgru_fw = tf.contrib.cudnn_rnn.CudnnGRU(\r\n\t\t\t\tnum_layers=1, num_units=num_units, input_size=input_size_)\r\n\t\t\tgru_bw = tf.contrib.cudnn_rnn.CudnnGRU(\r\n\t\t\t\tnum_layers=1, num_units=num_units, input_size=input_size_)\r\n\t\t\twith tf.variable_scope('CUDNN_GRU', reuse=tf.AUTO_REUSE):\r\n\t\t\t\tparam_fw = tf.get_variable(\"param_fw\",initializer=e,validate_shape=False)\r\n\t\t\t\tparam_bw = tf.get_variable(\"param_bw\",initializer=f,validate_shape=False)\r\n\t\t\t\tinit_fw = tf.get_variable(\"init_fw\", initializer=g)\r\n\t\t\t\tinit_bw = tf.get_variable(\"init_bw\", initializer=h)\r\n\tdef __call__(self, inputs, seq_len, keep_prob=1.0, is_train=None, concat_layers=True):\r\n\t\toutputs = [tf.transpose(inputs, [1, 0, 2])]\r\n\t\tfor layer in range(self.num_layers):\r\n\t\t\tgru_fw, gru_bw = self.grus[layer]\r\n\t\t\tparam_fw, param_bw = self.params[layer]\r\n\t\t\tinit_fw, init_bw = self.inits[layer]\r\n\t\t\tmask_fw, mask_bw = self.dropout_mask[layer]\r\n\t\t\twith tf.variable_scope(\"fw\"):\r\n\t\t\t\tout_fw, _ = gru_fw(outputs[-1] * mask_fw, init_fw, param_fw)\r\n\t\t\twith tf.variable_scope(\"bw\"):\r\n\t\t\t\tinputs_bw = tf.reverse_sequence(\r\n\t\t\t\t\toutputs[-1] * mask_bw, seq_lengths=seq_len, seq_dim=0, batch_dim=1)\r\n\t\t\t\tout_bw, _ = gru_bw(inputs_bw, init_bw, param_bw)\r\n\t\t\t\tout_bw = tf.reverse_sequence(\r\n\t\t\t\t\tout_bw, seq_lengths=seq_len, seq_dim=0, batch_dim=1)\r\n\t\t\toutputs.append(tf.concat([out_fw, out_bw], axis=2))\r\n\t\tif concat_layers:\r\n\t\t\tres = tf.concat(outputs[1:], axis=2)\r\n\t\telse:\r\n\t\t\tres = outputs[-1]\r\n\t\tres = tf.transpose(res, [1, 0, 2])\r\n\t\treturn res\r\n\r\nclass native_gru:\r\n\tdef __init__(self, num_layers, num_units, batch_size, input_size, keep_prob=1.0, is_train=None, scope=\"native_gru\"):\r\n\t\tself.num_layers = num_layers\r\n\t\tself.grus = []\r\n\t\tself.inits = []\r\n\t\tself.dropout_mask = []\r\n\t\tself.scope = scope\r\n\t\tfor layer in range(num_layers):\r\n\t\t\tinput_size_ = input_size if layer == 0 else 2 * num_units\r\n\t\t\tgru_fw = tf.contrib.rnn.GRUCell(num_units)\r\n\t\t\tgru_bw = tf.contrib.rnn.GRUCell(num_units)\r\n\t\t\twith tf.variable_scope('native_GRU', reuse=tf.AUTO_REUSE):\r\n\r\n\t\t\t\tinit_fw = tf.get_variable(\"init_fw\", initializer=zeros_i)\r\n\t\t\t\tinit_bw = tf.get_variable(\"init_bw\", initializer=zeros_i)\r\n\t\t\t\t\r\n\t\t\t#init_fw = tf.Variable(tf.zeros([batch_size, num_units]))\r\n\t\t\t#init_bw = tf.Variable(tf.zeros([batch_size, num_units]))\r\n\t\t\tmask_fw = dropout(tf.ones([batch_size, 1, input_size_], dtype=tf.float32),\r\n\t\t\t\t\t\t\t  keep_prob=keep_prob, is_train=is_train, mode=None)\r\n\t\t\tmask_bw = dropout(tf.ones([batch_size, 1, input_size_], dtype=tf.float32),\r\n\t\t\t\t\t\t\t  keep_prob=keep_prob, is_train=is_train, mode=None)\r\n\t\t\tself.grus.append((gru_fw, gru_bw, ))\r\n\t\t\tself.inits.append((init_fw, init_bw, ))\r\n\t\t\tself.dropout_mask.append((mask_fw, mask_bw, ))\r\n\r\n\tdef __call__(self, inputs, seq_len, keep_prob=1.0, is_train=None, concat_layers=True):\r\n\t\toutputs = [inputs]\r\n\t\twith tf.variable_scope(self.scope):\r\n\t\t\tfor layer in range(self.num_layers):\r\n\t\t\t\tgru_fw, gru_bw = self.grus[layer]\r\n\t\t\t\tinit_fw, init_bw = self.inits[layer]\r\n\t\t\t\tmask_fw, mask_bw = self.dropout_mask[layer]\r\n\t\t\t\twith tf.variable_scope(\"fw_{}\".format(layer)):\r\n\t\t\t\t\tout_fw, _ = tf.nn.dynamic_rnn(\r\n\t\t\t\t\t\tgru_fw, outputs[-1] * mask_fw, seq_len, initial_state=init_fw, dtype=tf.float32)\r\n\t\t\t\twith tf.variable_scope(\"bw_{}\".format(layer)):\r\n\t\t\t\t\tinputs_bw = tf.reverse_sequence(\r\n\t\t\t\t\t\toutputs[-1] * mask_bw, seq_lengths=seq_len, seq_dim=1, batch_dim=0)\r\n\t\t\t\t\tout_bw, _ = tf.nn.dynamic_rnn(\r\n\t\t\t\t\t\tgru_fw, inputs_bw, seq_len, initial_state=init_bw, dtype=tf.float32)\r\n\t\t\t\t\tout_bw = tf.reverse_sequence(\r\n\t\t\t\t\t\tout_bw, seq_lengths=seq_len, seq_dim=1, batch_dim=0)\r\n\t\t\t\toutputs.append(tf.concat([out_fw, out_bw], axis=2))\r\n\t\tif concat_layers:\r\n\t\t\tres = tf.concat(outputs[1:], axis=2)\r\n\t\telse:\r\n\t\t\tres = outputs[-1]\r\n\t\treturn res\r\n```\r\nThis has not happened before, when the project structure was sequential and not within a control flow mechanism. Also, if I change the implementation to use native GRU instead of cudnn_gru, it works perfectly fine."}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/16944", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/16944/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/16944/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/16944/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/16944", "id": 296298176, "node_id": "MDU6SXNzdWUyOTYyOTgxNzY=", "number": 16944, "title": "Tensorflow (0.11.0) returns error while running training and testing scripts. ", "user": {"login": "sainisanjay", "id": 25616511, "node_id": "MDQ6VXNlcjI1NjE2NTEx", "avatar_url": "https://avatars0.githubusercontent.com/u/25616511?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sainisanjay", "html_url": "https://github.com/sainisanjay", "followers_url": "https://api.github.com/users/sainisanjay/followers", "following_url": "https://api.github.com/users/sainisanjay/following{/other_user}", "gists_url": "https://api.github.com/users/sainisanjay/gists{/gist_id}", "starred_url": "https://api.github.com/users/sainisanjay/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sainisanjay/subscriptions", "organizations_url": "https://api.github.com/users/sainisanjay/orgs", "repos_url": "https://api.github.com/users/sainisanjay/repos", "events_url": "https://api.github.com/users/sainisanjay/events{/privacy}", "received_events_url": "https://api.github.com/users/sainisanjay/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 404586558, "node_id": "MDU6TGFiZWw0MDQ1ODY1NTg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:community%20support", "name": "stat:community support", "color": "f4b400", "default": false, "description": ""}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-02-12T08:39:27Z", "updated_at": "2018-02-13T20:14:58Z", "closed_at": null, "author_association": "NONE", "body": "Due to some constraint i am using Tensorflow version 0.11.0, which i installed using bellow commands:\r\nexport TF_BINARY_URL=https://storage.googleapis.com/tensorflow/linux/cpu/tensorflow-0.11.0-cp27-none-linux_x86_64.whl\r\npip install --ignore-installed --upgrade $TF_BINARY_URL\r\n\r\nAfter installation i am successfully able to import Tensorflow in python:\r\n```\r\ncvsion@cvsion:~$ python -c 'import tensorflow as tf; print(tf.__version__)'\r\n0.11.0\r\n\r\ncvsion@cvsion:~/Deeplearning/DeepTensorFlow/tensorlayer$ python \r\nPython 2.7.12 (default, Dec  4 2017, 14:50:18) \r\n[GCC 5.4.0 20160609] on linux2\r\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\r\n>>> import tensorflow as tf\r\n>>> \r\n```\r\n\r\nbut when i am running my training script its giving error:\r\n\r\n> Traceback (most recent call last):\r\n>   File \"./testing_nvidia.py\", line 8, in <module>\r\n>     import tensorlayer as tl\r\n>   File \"/home/cvsion/Deeplearning/DeepTensorFlow/tensorlayer/tensorlayer/__init__.py\", line 23, in <module>\r\n>     from . import distributed\r\n>   File \"/home/cvsion/Deeplearning/DeepTensorFlow/tensorlayer/tensorlayer/distributed.py\", line 9, in <module>\r\n>     from tensorflow.python.training import session_run_hook\r\n> ImportError: cannot import name session_run_hook\r\n\r\nAny idea to resolve above issue"}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/16919", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/16919/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/16919/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/16919/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/16919", "id": 296131552, "node_id": "MDU6SXNzdWUyOTYxMzE1NTI=", "number": 16919, "title": "libhdfs3 instead of libhdfs", "user": {"login": "superbobry", "id": 185856, "node_id": "MDQ6VXNlcjE4NTg1Ng==", "avatar_url": "https://avatars1.githubusercontent.com/u/185856?v=4", "gravatar_id": "", "url": "https://api.github.com/users/superbobry", "html_url": "https://github.com/superbobry", "followers_url": "https://api.github.com/users/superbobry/followers", "following_url": "https://api.github.com/users/superbobry/following{/other_user}", "gists_url": "https://api.github.com/users/superbobry/gists{/gist_id}", "starred_url": "https://api.github.com/users/superbobry/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/superbobry/subscriptions", "organizations_url": "https://api.github.com/users/superbobry/orgs", "repos_url": "https://api.github.com/users/superbobry/repos", "events_url": "https://api.github.com/users/superbobry/events{/privacy}", "received_events_url": "https://api.github.com/users/superbobry/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 299643928, "node_id": "MDU6TGFiZWwyOTk2NDM5Mjg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:contributions%20welcome", "name": "stat:contributions welcome", "color": "f4b400", "default": false, "description": ""}, {"id": 473173351, "node_id": "MDU6TGFiZWw0NzMxNzMzNTE=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:build/install", "name": "type:build/install", "color": "159b2e", "default": false, "description": ""}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 15, "created_at": "2018-02-10T20:33:22Z", "updated_at": "2018-07-25T19:19:48Z", "closed_at": null, "author_association": "MEMBER", "body": "### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**: Yes, see diff below.\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**: N/A\r\n- **TensorFlow installed from (source or binary)**: N/A\r\n- **TensorFlow version (use command below)**: N/A\r\n- **Python version**: N/A\r\n- **Bazel version (if compiling from source)**: N/A\r\n- **GCC/Compiler version (if compiling from source)**: N/A\r\n- **CUDA/cuDNN version**: N/A\r\n- **GPU model and memory**: N/A\r\n- **Exact command to reproduce**: N/A\r\n\r\n### Describe the problem\r\n\r\nCurrent HDFS support in TensorFlow is based on [`libhdfs`](https://wiki.apache.org/hadoop/LibHDFS), a JNI wrapper for the HDFS client implemented in Java. Due to this design choice, users of `libhdfs` (and transitively TensorFlow) \r\n\r\n* need to keep in mind an implicit dependency on the JVM runtime,\r\n* have to do quite a bit of [trickery](https://www.tensorflow.org/deploy/hadoop) to setup the environment expected by `libhdfs`.\r\n\r\n[`libhdfs3`](http://pivotal-data-attic.github.io/attic-c-hdfs-client) is a native implementation of an HDFS client, which could potentially free the users from the two issues mentioned above. The documentation of `libhdfs3` claims that its C API is \"almost the same\" as that of `libhdfs`. I've verified this on the `master` version of TensorFlow and the diff is indeed negligible:\r\n\r\n```diff\r\nindex 5f2b222622..0f168fe0dd 100644\r\n--- a/tensorflow/core/platform/hadoop/hadoop_file_system.h\r\n+++ b/tensorflow/core/platform/hadoop/hadoop_file_system.h\r\n@@ -19,8 +19,8 @@ limitations under the License.\r\n #include \"tensorflow/core/platform/env.h\"\r\n\r\n extern \"C\" {\r\n-struct hdfs_internal;\r\n-typedef hdfs_internal* hdfsFS;\r\n+struct HdfsFileSystemInternalWrapper;\r\n+typedef HdfsFileSystemInternalWrapper* hdfsFS;\r\n }\r\n```\r\n\r\nWhat do you think?"}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/16889", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/16889/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/16889/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/16889/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/16889", "id": 295856975, "node_id": "MDU6SXNzdWUyOTU4NTY5NzU=", "number": 16889, "title": "Problems Getting TensorFlow to behave Deterministically", "user": {"login": "rundembear", "id": 7693798, "node_id": "MDQ6VXNlcjc2OTM3OTg=", "avatar_url": "https://avatars0.githubusercontent.com/u/7693798?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rundembear", "html_url": "https://github.com/rundembear", "followers_url": "https://api.github.com/users/rundembear/followers", "following_url": "https://api.github.com/users/rundembear/following{/other_user}", "gists_url": "https://api.github.com/users/rundembear/gists{/gist_id}", "starred_url": "https://api.github.com/users/rundembear/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rundembear/subscriptions", "organizations_url": "https://api.github.com/users/rundembear/orgs", "repos_url": "https://api.github.com/users/rundembear/repos", "events_url": "https://api.github.com/users/rundembear/events{/privacy}", "received_events_url": "https://api.github.com/users/rundembear/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 473172988, "node_id": "MDU6TGFiZWw0NzMxNzI5ODg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:bug", "name": "type:bug", "color": "159b2e", "default": false, "description": ""}], "state": "open", "locked": false, "assignee": {"login": "ebrevdo", "id": 1794715, "node_id": "MDQ6VXNlcjE3OTQ3MTU=", "avatar_url": "https://avatars0.githubusercontent.com/u/1794715?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ebrevdo", "html_url": "https://github.com/ebrevdo", "followers_url": "https://api.github.com/users/ebrevdo/followers", "following_url": "https://api.github.com/users/ebrevdo/following{/other_user}", "gists_url": "https://api.github.com/users/ebrevdo/gists{/gist_id}", "starred_url": "https://api.github.com/users/ebrevdo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ebrevdo/subscriptions", "organizations_url": "https://api.github.com/users/ebrevdo/orgs", "repos_url": "https://api.github.com/users/ebrevdo/repos", "events_url": "https://api.github.com/users/ebrevdo/events{/privacy}", "received_events_url": "https://api.github.com/users/ebrevdo/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "ebrevdo", "id": 1794715, "node_id": "MDQ6VXNlcjE3OTQ3MTU=", "avatar_url": "https://avatars0.githubusercontent.com/u/1794715?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ebrevdo", "html_url": "https://github.com/ebrevdo", "followers_url": "https://api.github.com/users/ebrevdo/followers", "following_url": "https://api.github.com/users/ebrevdo/following{/other_user}", "gists_url": "https://api.github.com/users/ebrevdo/gists{/gist_id}", "starred_url": "https://api.github.com/users/ebrevdo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ebrevdo/subscriptions", "organizations_url": "https://api.github.com/users/ebrevdo/orgs", "repos_url": "https://api.github.com/users/ebrevdo/repos", "events_url": "https://api.github.com/users/ebrevdo/events{/privacy}", "received_events_url": "https://api.github.com/users/ebrevdo/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 8, "created_at": "2018-02-09T12:36:18Z", "updated_at": "2019-10-08T22:11:27Z", "closed_at": null, "author_association": "NONE", "body": "Please go to Stack Overflow for help and support:\r\n\r\nhttps://stackoverflow.com/questions/tagged/tensorflow\r\n\r\nIf you open a GitHub issue, here is our policy:\r\n\r\n1. It must be a bug, a feature request, or a significant problem with documentation (for small docs fixes please send a PR instead).\r\n2. The form below must be filled out.\r\n3. It shouldn't be a TensorBoard issue. Those go [here](https://github.com/tensorflow/tensorboard/issues).\r\n\r\n**Here's why we have that policy**: TensorFlow developers respond to issues. We want to focus on work that benefits the whole community, e.g., fixing bugs and adding features. Support only helps individuals. GitHub also notifies thousands of people when issues are filed. We want them to see you communicating an interesting problem, rather than being redirected to Stack Overflow.\r\n\r\n------------------------\r\n\r\n### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**:\r\n\r\nYes, the code I am working with is company proprietary. If you need an example I will need to try to extract something that I can share. \r\n\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**:\r\n\r\nMac OS 10.13.2\r\n\r\n- **TensorFlow installed from (source or binary)**:\r\n\r\nbinary\r\n\r\n- **TensorFlow version (use command below)**:\r\n\r\nv1.3.0-rc2-20-g0787eee 1.3.0\r\n\r\n- **Python version**: \r\n\r\n3.6.4\r\n\r\n- **Bazel version (if compiling from source)**:\r\n- **GCC/Compiler version (if compiling from source)**:\r\n- **CUDA/cuDNN version**:\r\n\r\nRunning on CPU.\r\n\r\n- **GPU model and memory**:\r\n\r\n- **Exact command to reproduce**:\r\n\r\nPlease see description of problem. I don't currently have an example I can give you but I am hoping that the information I am providing is enough to get at least some idea about what is going on.\r\n\r\nYou can collect some of this information using our environment capture script:\r\n\r\nhttps://github.com/tensorflow/tensorflow/tree/master/tools/tf_env_collect.sh\r\n\r\nYou can obtain the TensorFlow version with\r\n\r\npython -c \"import tensorflow as tf; print(tf.GIT_VERSION, tf.VERSION)\"\r\n\r\n### Describe the problem\r\nDescribe the problem clearly here. Be sure to convey here why it's a bug in TensorFlow or a feature request.\r\n\r\nI am having a major struggle trying to get TensorFlow to behave in a deterministic manner. I started out trying to compare two different versions of my source code, but the numeric differences from one execution to the next were large enough to make comparisons problematic.\r\n\r\nSo I went to trying to run exactly the same code in two different shells. And this is where things got weird.\r\n\r\nI went through the code, and everywhere where TensorFlow is imported, everywhere I did operations using the form \"with graph as default:\", and prior to each call to run I added in a call to     tf.set_random_seed(42) [and yes, I used 42 in all of the calls].\r\n\r\nI also placed breakpoints before anything in my code which was a tf call with 'random' in the name (I even searched the docs to see if there were random calls that didn't have random in the name, I found a couple but I am not using them). In all of the random calls that I am using I added in a seed=42 argument. So as far as I can tell I have covered all of the bases.\r\n\r\nSo what happens? I run the code in one shell, get a set of numbers. Run code in a second shell, get identical numbers. Good. Run the code a few more times, keep getting the same numbers. Better.\r\nRun the code again, get completely different numbers!!! If I keep running the code in the different shells sometimes I get the same numbers from execution to execution. Sometimes I get different numbers. Sometimes it goes on to completely new numbers. Sometimes it goes back to an older set of numbers.\r\n\r\nSo I am getting something that is consistent enough that it feels like I haven't missed any places where I need to set the seed, but not consistent enough to say that it is deterministic.\r\n\r\nI really want to be able to run the code over and over again and get exactly the same numeric result. Is this an unreasonable expectation? \r\n\r\nCan anyone offer an explanation as to why the code would generate exactly the same result (and I'm looking down to 8 decimal places so this is fairly precise) five times in a row, and then switch to a completely different result and then repeat that result multiple times in a row?\r\n\r\nI can certainly try to reduce this into an example I can share (the model I am using is a toy model we use for unit testing). I wanted to see if anyone had any insight into the general problem before I put the time into that.\r\n\r\n\r\n\r\n\r\n### Source code / logs\r\nInclude any logs or source code that would be helpful to diagnose the problem. If including tracebacks, please include the full traceback. Large logs and files should be attached. Try to provide a reproducible test case that is the bare minimum necessary to generate the problem.\r\n\r\nI will include two examples of the numeric output I am getting. This data is part of the returned result from Session.run().\r\n\r\nExample A:\r\n\r\nout_node_weights [[ 9.09113979  9.09934711  9.09535408  9.09768963  9.11262989  9.09756184\r\n   9.10322666  9.09527016  9.10811996  9.09029293]\r\n [ 9.34178257  9.34915924  9.34216785  9.34740925  9.32617569  9.34794617\r\n   9.34459496  9.35203457  9.34202194  9.34494209]\r\n [ 9.09113979  9.09934711  9.09535408  9.09768963  9.11262989  9.09756184\r\n   9.10322666  9.09527016  9.10811996  9.09029293]\r\n [ 9.09113979  9.09934711  9.09535408  9.09768963  9.11262989  9.09756184\r\n   9.10322666  9.09527016  9.10811996  9.09029293]\r\n [ 9.59115124  9.59841442  9.59205914  9.59892082  9.58935356  9.59801197\r\n   9.59655094  9.5970974   9.5989027   9.59136868]\r\n [ 9.39457417  9.39968395  9.39309788  9.4028101   9.40468502  9.39697838\r\n   9.39671326  9.39805126  9.39696026  9.39565849]]\r\n\r\nExample B:\r\n\r\nout_node_weights [[ 9.04592514  9.05451775  9.05065632  9.05263042  9.06681919  9.05208111\r\n   9.05834484  9.05059719  9.06315136  9.04525948]\r\n [ 9.25311852  9.26151276  9.25516319  9.25806046  9.23816681  9.26067734\r\n   9.25860214  9.26416397  9.25700569  9.25596619]\r\n [ 9.27453995  9.28063679  9.27472687  9.28252983  9.28667641  9.27761269\r\n   9.27913475  9.27859116  9.28033924  9.27534485]\r\n [ 9.27453995  9.28063679  9.27472687  9.28252983  9.28667641  9.27761269\r\n   9.27913475  9.27859116  9.28033924  9.27534485]\r\n [ 9.50198936  9.51004601  9.50419044  9.50922203  9.50067139  9.50993729\r\n   9.50946426  9.5085659   9.51255226  9.50196838]\r\n [ 9.27453995  9.28063679  9.27472687  9.28252983  9.28667641  9.27761269\r\n   9.27913475  9.27859116  9.28033924  9.27534485]]"}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/16888", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/16888/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/16888/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/16888/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/16888", "id": 295829873, "node_id": "MDU6SXNzdWUyOTU4Mjk4NzM=", "number": 16888, "title": "tfcompile fails with Executor failed to create kernel. Not found: No registered 'ResizeNearestNeighbor' ", "user": {"login": "thefiddler", "id": 3104289, "node_id": "MDQ6VXNlcjMxMDQyODk=", "avatar_url": "https://avatars3.githubusercontent.com/u/3104289?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thefiddler", "html_url": "https://github.com/thefiddler", "followers_url": "https://api.github.com/users/thefiddler/followers", "following_url": "https://api.github.com/users/thefiddler/following{/other_user}", "gists_url": "https://api.github.com/users/thefiddler/gists{/gist_id}", "starred_url": "https://api.github.com/users/thefiddler/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thefiddler/subscriptions", "organizations_url": "https://api.github.com/users/thefiddler/orgs", "repos_url": "https://api.github.com/users/thefiddler/repos", "events_url": "https://api.github.com/users/thefiddler/events{/privacy}", "received_events_url": "https://api.github.com/users/thefiddler/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 299643928, "node_id": "MDU6TGFiZWwyOTk2NDM5Mjg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:contributions%20welcome", "name": "stat:contributions welcome", "color": "f4b400", "default": false, "description": ""}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-02-09T10:51:57Z", "updated_at": "2018-02-11T11:27:04Z", "closed_at": null, "author_association": "NONE", "body": "### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**: yes, very simple CNN (attached)\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**: Mac OS 10.13.3\r\n- **TensorFlow installed from (source or binary)**: source\r\n- **TensorFlow version (use command below)**: 926fc13\r\n- **Python version**: python 3.6.4\r\n- **Bazel version (if compiling from source)**: 0.10\r\n- **GCC/Compiler version (if compiling from source)**: Apple LLVM version 9.0.0 (clang-900.0.39.2\r\n- **CUDA/cuDNN version**: none\r\n- **GPU model and memory**: none\r\n- **Exact command to reproduce**: ./bazel-bin/tensorflow/compiler/aot/tfcompile  --graph=\"/data/models/tensorflow/testmodel.pb\" --config=\"/data/models/tensorflow/testmodel.pbtxt\"\r\n\r\n### Describe the problem\r\nTrying to compile a trivial model, consisting of a single nearest-neighbour resize layer, I get an abort trap 6. The model graph and config can be [found here](https://github.com/tensorflow/tensorflow/files/1710673/testmodel.zip).\r\n\r\n### Source code / logs\r\n```bash\r\n./bazel-bin/tensorflow/compiler/aot/tfcompile  --graph=\"/data/models/tensorflow/testmodel.pb\" --\r\nconfig=\"/data/models/tensorflow/testmodel.pbtxt\"\r\n2018-02-09 11:45:13.215728: E tensorflow/compiler/tf2xla/graph_compiler.cc:115] Executor failed to create kernel. Not found: No registered 'ResizeNearestNeighbor' OpKernel for XLA_CPU_JIT devices compatible with node out/ResizeNearestNeighbor = ResizeNearestNeighbor[T=DT_FLOAT, align_corners=false](aot_feed_0/in, out/mul)\r\n        .  Registered:  <no registered kernels>\r\n\r\n         [[Node: out/ResizeNearestNeighbor = ResizeNearestNeighbor[T=DT_FLOAT, align_corners=false](aot_feed_0/in, out/mul)]]\r\n2018-02-09 11:45:13.216094: F tensorflow/compiler/aot/tfcompile_main.cc:148] Non-OK-status: status status: Not found: No registered 'ResizeNearestNeighbor' OpKernel for XLA_CPU_JIT devices compatible with node out/ResizeNearestNeighbor = ResizeNearestNeighbor[T=DT_FLOAT,\r\nalign_corners=false](aot_feed_0/in, out/mul)\r\n        .  Registered:  <no registered kernels>\r\n\r\n         [[Node: out/ResizeNearestNeighbor = ResizeNearestNeighbor[T=DT_FLOAT, align_corners=false](aot_feed_0/in, out/mul)]]\r\nAbort trap: 6\r\n```"}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/16864", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/16864/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/16864/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/16864/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/16864", "id": 295502049, "node_id": "MDU6SXNzdWUyOTU1MDIwNDk=", "number": 16864, "title": "CPU execution of ops after gradient clipping on windows", "user": {"login": "Dhruv-Mohan", "id": 11293826, "node_id": "MDQ6VXNlcjExMjkzODI2", "avatar_url": "https://avatars2.githubusercontent.com/u/11293826?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Dhruv-Mohan", "html_url": "https://github.com/Dhruv-Mohan", "followers_url": "https://api.github.com/users/Dhruv-Mohan/followers", "following_url": "https://api.github.com/users/Dhruv-Mohan/following{/other_user}", "gists_url": "https://api.github.com/users/Dhruv-Mohan/gists{/gist_id}", "starred_url": "https://api.github.com/users/Dhruv-Mohan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Dhruv-Mohan/subscriptions", "organizations_url": "https://api.github.com/users/Dhruv-Mohan/orgs", "repos_url": "https://api.github.com/users/Dhruv-Mohan/repos", "events_url": "https://api.github.com/users/Dhruv-Mohan/events{/privacy}", "received_events_url": "https://api.github.com/users/Dhruv-Mohan/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": {"login": "rmlarsen", "id": 16907534, "node_id": "MDQ6VXNlcjE2OTA3NTM0", "avatar_url": "https://avatars2.githubusercontent.com/u/16907534?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rmlarsen", "html_url": "https://github.com/rmlarsen", "followers_url": "https://api.github.com/users/rmlarsen/followers", "following_url": "https://api.github.com/users/rmlarsen/following{/other_user}", "gists_url": "https://api.github.com/users/rmlarsen/gists{/gist_id}", "starred_url": "https://api.github.com/users/rmlarsen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rmlarsen/subscriptions", "organizations_url": "https://api.github.com/users/rmlarsen/orgs", "repos_url": "https://api.github.com/users/rmlarsen/repos", "events_url": "https://api.github.com/users/rmlarsen/events{/privacy}", "received_events_url": "https://api.github.com/users/rmlarsen/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "rmlarsen", "id": 16907534, "node_id": "MDQ6VXNlcjE2OTA3NTM0", "avatar_url": "https://avatars2.githubusercontent.com/u/16907534?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rmlarsen", "html_url": "https://github.com/rmlarsen", "followers_url": "https://api.github.com/users/rmlarsen/followers", "following_url": "https://api.github.com/users/rmlarsen/following{/other_user}", "gists_url": "https://api.github.com/users/rmlarsen/gists{/gist_id}", "starred_url": "https://api.github.com/users/rmlarsen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rmlarsen/subscriptions", "organizations_url": "https://api.github.com/users/rmlarsen/orgs", "repos_url": "https://api.github.com/users/rmlarsen/repos", "events_url": "https://api.github.com/users/rmlarsen/events{/privacy}", "received_events_url": "https://api.github.com/users/rmlarsen/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 5, "created_at": "2018-02-08T12:56:53Z", "updated_at": "2018-12-14T18:50:49Z", "closed_at": null, "author_association": "NONE", "body": "### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**:Yes\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**: Windows10\r\n- **TensorFlow installed from (source or binary)**: Binary\r\n- **TensorFlow version (use command below)**:1.5.0\r\n- **Python version**: 3.6\r\n- **Bazel version (if compiling from source)**:N/A\r\n- **GCC/Compiler version (if compiling from source)**:N/A\r\n- **CUDA/cuDNN version**:CUDA 9.0, cuDNN 7\r\n- **GPU model and memory**: Titan xp, 12gb\r\n- **Exact command to reproduce**: Script attached below\r\n\r\n### Describe the problem\r\nAdding gradient clipping as follows places certain ops on the CPU greatly increasing training time on windows.\r\n```python\r\n    grads = tf.gradients(loss, tf.trainable_variables())\r\n    omnomed_grads, _ = tf.clip_by_global_norm(grads, 0.5)\r\n    train_op = optimizer.apply_gradients(zip(omnomed_grads,  tf.trainable_variables()))\r\n```\r\nI worte a [script](https://github.com/Dhruv-Mohan/G_clip_issue/blob/master/Gptest.py)  to perform a few tests:\r\n\r\n| OS        | TF Version           | Gradient clipping  | Average runtime (m:s.ms) |\r\n| :-------------: |:-------------:| :-----:| :--------: |\r\n| Windows10           | 1.6  | True   | 2:13.57    |\r\n| Windows10           | 1.6  |  False | 0:16.24    |\r\n| Windows10           | 1.5  | True   | 2:13.46    |\r\n| Windows10           | 1.5  |  False | 0:16.52    |\r\n| Windows10           | 1.2  |  True  | 0:24.64    |\r\n| Windows10           | 1.2  |  False | 0:23.80    |\r\n| Linux mint 18.1     | 1.5  | True   | 0:23.45    |\r\n|Linux mint 18.1      | 1.5  |  False | 0:21.29    |\r\n\r\nCuriously the issue isn't present on TF1.2\r\n\r\nForcing operation placement on the GPU:\r\n```python\r\n    with tf.device('/gpu:0'):\r\n        grads = tf.gradients(loss, tf.trainable_variables())\r\n        omnomed_grads, _ = tf.clip_by_global_norm(grads, 0.5)\r\n        train_op = optimizer.apply_gradients(zip(omnomed_grads,  tf.trainable_variables()))\r\n```\r\nresults in the following error on windows:\r\n `Cannot assign a device for operation 'gradients/softmax_cross_entropy_with_logits_grad/LogSoftmax': Could not satisfy explicit device specification '/device:GPU:0' because no supported kernel for GPU devices is available.`\r\nThe error generated is similar to [#2803](https://github.com/tensorflow/models/issues/2803) and [#3118](https://github.com/tensorflow/models/issues/3118)\r\n\r\nSetting soft device placement in session configuration results in similar runtime.\r\n\r\n### Source code / logs\r\nI have attached the device placement logs of windows 10 running TF 1.6 [with](https://github.com/tensorflow/tensorflow/files/1707039/Windows_gradclip.txt) and [without](https://github.com/tensorflow/tensorflow/files/1707040/Windows_nogradclip.txt) gradient clipping as well as the device placement logs from Linux mint [with](https://github.com/tensorflow/tensorflow/files/1707038/Mint_gradclip.txt) gradient clipping\r\n\r\n\r\n\r\nA few discrepancies with respect to op placement while gradient clipping are highlighted below:\r\n\r\n| Windows10        |  Linux mint        |\r\n| :-------------: |:-------------:| \r\n| gradients/softmax_cross_entropy_with_logits_grad/LogSoftmax: (LogSoftmax): /job:localhost/replica:0/task:0/device:CPU:0     | gradients/softmax_cross_entropy_with_logits_grad/LogSoftmax: (LogSoftmax): /job:localhost/replica:0/task:0/device:GPU:0 | \r\n| global_norm/L2Loss_6: (L2Loss): /job:localhost/replica:0/task:0/device:CPU:0      | global_norm/L2Loss_6: (L2Loss): /job:localhost/replica:0/task:0/device:GPU:0      | \r\n|gradients/conv2d/Conv2D_grad/Conv2DBackpropFilter: (Conv2DBackpropFilter): /job:localhost/replica:0/task:0/device:CPU:0 | gradients/conv2d/Conv2D_grad/Conv2DBackpropFilter: (Conv2DBackpropFilter): /job:localhost/replica:0/task:0/device:GPU:0      | \r\n| gradients/conv2d/BiasAdd_grad/BiasAddGrad: (BiasAddGrad): /job:localhost/replica:0/task:0/device:CPU:0   | gradients/conv2d/BiasAdd_grad/BiasAddGrad: (BiasAddGrad): /job:localhost/replica:0/task:0/device:GPU:0   |\r\n| clip_by_global_norm/mul_8: (Mul): /job:localhost/replica:0/task:0/device:CPU:0 | clip_by_global_norm/mul_8: (Mul): /job:localhost/replica:0/task:0/device:GPU:0 |\r\n\r\n\r\n\r\n\r\n"}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/16856", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/16856/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/16856/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/16856/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/16856", "id": 295414601, "node_id": "MDU6SXNzdWUyOTU0MTQ2MDE=", "number": 16856, "title": "Loading model from local in RNN prediction is slower than from HDFS due to page fault ", "user": {"login": "kdmxen", "id": 36218095, "node_id": "MDQ6VXNlcjM2MjE4MDk1", "avatar_url": "https://avatars0.githubusercontent.com/u/36218095?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kdmxen", "html_url": "https://github.com/kdmxen", "followers_url": "https://api.github.com/users/kdmxen/followers", "following_url": "https://api.github.com/users/kdmxen/following{/other_user}", "gists_url": "https://api.github.com/users/kdmxen/gists{/gist_id}", "starred_url": "https://api.github.com/users/kdmxen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kdmxen/subscriptions", "organizations_url": "https://api.github.com/users/kdmxen/orgs", "repos_url": "https://api.github.com/users/kdmxen/repos", "events_url": "https://api.github.com/users/kdmxen/events{/privacy}", "received_events_url": "https://api.github.com/users/kdmxen/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 404586558, "node_id": "MDU6TGFiZWw0MDQ1ODY1NTg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:community%20support", "name": "stat:community support", "color": "f4b400", "default": false, "description": ""}, {"id": 299643928, "node_id": "MDU6TGFiZWwyOTk2NDM5Mjg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:contributions%20welcome", "name": "stat:contributions welcome", "color": "f4b400", "default": false, "description": ""}, {"id": 473172988, "node_id": "MDU6TGFiZWw0NzMxNzI5ODg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:bug", "name": "type:bug", "color": "159b2e", "default": false, "description": ""}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2018-02-08T07:49:10Z", "updated_at": "2018-07-12T14:18:08Z", "closed_at": null, "author_association": "NONE", "body": "We have trained a RNN model and use it to predict. We feed some data and calculate QPS in prediction. We find that when CPU usage is above than 30%, the QPS always stayed in 900+. And not increasing linearly by CPU usage. But if we put the model in HDFS, The QPS can reach 2400+.\r\n\r\nOur system infomation:\r\n```\r\n    OS:  RedHat 7.2\r\n    CPU:  2 * 16 core * 2 thread\r\n    Memory: 512G in 1 node\r\n```\r\n\r\nIn local model case, we use performance tool to trace function call time and find nearly 20% time hanged in page fault which lead to spin_lock.  Those page fault occurs less than 1% in hdfs situation. \r\n\r\nOur performance result listed as below:\r\n\r\n**model loading from local**:\r\n![local](https://user-images.githubusercontent.com/36218095/35960886-6ab0bbf6-0ce6-11e8-9923-63fc9257112f.png)\r\n\r\n**model loading from hdfs**:\r\n![hdfs](https://user-images.githubusercontent.com/36218095/35960906-7e8d9158-0ce6-11e8-896e-a52fced8c02a.png)\r\n\r\nWe check the source code (both eigen and tensorflow ) again and again and can not find any suspectable code which lead to page fault. we test loading model (wide and deep, cnn), page fault not happened. In RNN model we modify the code use HDFS file sytem instead of posix file system. page fault not happend too. we print log in every function in core/platform/posix/posix_file_system.cc. The log is only displayed in model loading, not occurs in prediction process. \r\n\r\nIs anyone can help us to find out this problem? Thank you!\r\n\r\n\r\n"}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/16850", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/16850/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/16850/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/16850/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/16850", "id": 295353664, "node_id": "MDU6SXNzdWUyOTUzNTM2NjQ=", "number": 16850, "title": "concurrent.futures for Python 2 installed with tensorflow-gpu with pip3 ", "user": {"login": "thiell", "id": 1494929, "node_id": "MDQ6VXNlcjE0OTQ5Mjk=", "avatar_url": "https://avatars1.githubusercontent.com/u/1494929?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thiell", "html_url": "https://github.com/thiell", "followers_url": "https://api.github.com/users/thiell/followers", "following_url": "https://api.github.com/users/thiell/following{/other_user}", "gists_url": "https://api.github.com/users/thiell/gists{/gist_id}", "starred_url": "https://api.github.com/users/thiell/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thiell/subscriptions", "organizations_url": "https://api.github.com/users/thiell/orgs", "repos_url": "https://api.github.com/users/thiell/repos", "events_url": "https://api.github.com/users/thiell/events{/privacy}", "received_events_url": "https://api.github.com/users/thiell/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": {"login": "caisq", "id": 16824702, "node_id": "MDQ6VXNlcjE2ODI0NzAy", "avatar_url": "https://avatars2.githubusercontent.com/u/16824702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/caisq", "html_url": "https://github.com/caisq", "followers_url": "https://api.github.com/users/caisq/followers", "following_url": "https://api.github.com/users/caisq/following{/other_user}", "gists_url": "https://api.github.com/users/caisq/gists{/gist_id}", "starred_url": "https://api.github.com/users/caisq/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/caisq/subscriptions", "organizations_url": "https://api.github.com/users/caisq/orgs", "repos_url": "https://api.github.com/users/caisq/repos", "events_url": "https://api.github.com/users/caisq/events{/privacy}", "received_events_url": "https://api.github.com/users/caisq/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "caisq", "id": 16824702, "node_id": "MDQ6VXNlcjE2ODI0NzAy", "avatar_url": "https://avatars2.githubusercontent.com/u/16824702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/caisq", "html_url": "https://github.com/caisq", "followers_url": "https://api.github.com/users/caisq/followers", "following_url": "https://api.github.com/users/caisq/following{/other_user}", "gists_url": "https://api.github.com/users/caisq/gists{/gist_id}", "starred_url": "https://api.github.com/users/caisq/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/caisq/subscriptions", "organizations_url": "https://api.github.com/users/caisq/orgs", "repos_url": "https://api.github.com/users/caisq/repos", "events_url": "https://api.github.com/users/caisq/events{/privacy}", "received_events_url": "https://api.github.com/users/caisq/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 9, "created_at": "2018-02-08T01:26:49Z", "updated_at": "2018-12-07T18:48:36Z", "closed_at": null, "author_association": "NONE", "body": "We noticed an issue with the tensorflow-gpu package available in pip for Python 3: it leads to `concurrent.futures` for Python 2 being installed as a dependency.\r\n\r\n```\r\n$ jupyter-notebook --no-browser\r\nTraceback (most recent call last):\r\n  File \"/share/software/user/open/py-jupyter/1.0.0_py36/bin/jupyter-notebook\", line 7, in <module>\r\n    from notebook.notebookapp import main\r\n  File \"/share/software/user/open/py-jupyter/1.0.0_py36/lib/python3.6/site-packages/notebook/notebookapp.py\", line 35, in <module>\r\n    from jinja2 import Environment, FileSystemLoader\r\n  File \"/share/software/user/open/py-jupyter/1.0.0_py36/lib/python3.6/site-packages/jinja2/__init__.py\", line 81, in <module>\r\n    _patch_async()\r\n  File \"/share/software/user/open/py-jupyter/1.0.0_py36/lib/python3.6/site-packages/jinja2/__init__.py\", line 77, in _patch_async\r\n    from jinja2.asyncsupport import patch_all\r\n  File \"/share/software/user/open/py-jupyter/1.0.0_py36/lib/python3.6/site-packages/jinja2/asyncsupport.py\", line 13, in <module>\r\n    import asyncio\r\n  File \"/share/software/user/open/python/3.6.1/lib/python3.6/asyncio/__init__.py\", line 21, in <module>\r\n    from .base_events import *\r\n  File \"/share/software/user/open/python/3.6.1/lib/python3.6/asyncio/base_events.py\", line 17, in <module>\r\n    import concurrent.futures\r\n  File \"/share/software/user/open/py-tensorflow/1.5.0_py36/lib/python3.6/site-packages/concurrent/futures/__init__.py\", line 8, in <module>\r\n    from concurrent.futures._base import (FIRST_COMPLETED,\r\n  File \"/share/software/user/open/py-tensorflow/1.5.0_py36/lib/python3.6/site-packages/concurrent/futures/_base.py\", line 381\r\n    raise exception_type, self._exception, self._traceback\r\n                        ^\r\nSyntaxError: invalid syntax\r\n```\r\n\r\nThe workaround is to remove concurrent.futures as it is already included in Python 3 standard library.\r\n"}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/16845", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/16845/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/16845/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/16845/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/16845", "id": 295312005, "node_id": "MDU6SXNzdWUyOTUzMTIwMDU=", "number": 16845, "title": "ImportError: DLL load failed: Die angegebene Prozedur wurde nicht gefunden.", "user": {"login": "pyBlob", "id": 10408403, "node_id": "MDQ6VXNlcjEwNDA4NDAz", "avatar_url": "https://avatars3.githubusercontent.com/u/10408403?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pyBlob", "html_url": "https://github.com/pyBlob", "followers_url": "https://api.github.com/users/pyBlob/followers", "following_url": "https://api.github.com/users/pyBlob/following{/other_user}", "gists_url": "https://api.github.com/users/pyBlob/gists{/gist_id}", "starred_url": "https://api.github.com/users/pyBlob/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pyBlob/subscriptions", "organizations_url": "https://api.github.com/users/pyBlob/orgs", "repos_url": "https://api.github.com/users/pyBlob/repos", "events_url": "https://api.github.com/users/pyBlob/events{/privacy}", "received_events_url": "https://api.github.com/users/pyBlob/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 404586558, "node_id": "MDU6TGFiZWw0MDQ1ODY1NTg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:community%20support", "name": "stat:community support", "color": "f4b400", "default": false, "description": ""}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-02-07T22:12:12Z", "updated_at": "2018-09-13T10:40:33Z", "closed_at": null, "author_association": "NONE", "body": "### System information\r\n- Have I written custom code: no\r\n- OS Platform and Distribution: Windows 7, 64-bit\r\n- Tensorflow installed from: Anaconda 5.0.1 via pip 9.0.1\r\n(conda create -p C:\\temp\\tensorflow-gpu; pip install tensorflow-gpu)\r\n- Python 3.5.2\r\n- TensorFlow 1.5.0\r\n- CUDA 9.0\r\n- cuDNN 7.0\r\n- Bazel: N/A\r\n- GPU model and memory: NVIDIA Quadro K620, 2GB\r\n\r\n\r\n### Describe the problem\r\nCommands to reproduce:\r\n```\r\nconda create -p C:\\temp\\tensorflow-gpu\r\nactivate C:\\temp\\tensorflow-gpu\r\npip install tensorflow-gpu\r\npython\r\n> import tensorflow\r\n```\r\n\r\nAfter installing all dependencies, tensorflow fails to import. Exactly the same error occurs with other Tf/CUDA/cuDNN versions (tried TF 1.4.0 + CUDA 7.0 + cuDNN 5.1 and TF 1.4.0 + CUDA 8.0 + cuDNN 6.0).\r\n\r\nWhile searching, I discovered a similar bug, but it contains a different error message: https://github.com/tensorflow/tensorflow/issues/5949\r\n\r\n\r\n### Source code / logs\r\n```\r\n(C:\\temp\\tensorflow-gpu) C:\\temp>python\r\nPython 3.5.2 |Continuum Analytics, Inc.| (default, Jul  5 2016, 11:41:13) [MSC v\r\n.1900 64 bit (AMD64)] on win32\r\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\r\n>>> import tensorflow\r\nTraceback (most recent call last):\r\n  File \"C:\\temp\\tensorflow-gpu\\lib\\site-packages\\tensorflow\\python\\pywrap_tensor\r\nflow_internal.py\", line 18, in swig_import_helper\r\n    return importlib.import_module(mname)\r\n  File \"C:\\temp\\tensorflow-gpu\\lib\\importlib\\__init__.py\", line 126, in import_m\r\nodule\r\n    return _bootstrap._gcd_import(name[level:], package, level)\r\n  File \"<frozen importlib._bootstrap>\", line 986, in _gcd_import\r\n  File \"<frozen importlib._bootstrap>\", line 969, in _find_and_load\r\n  File \"<frozen importlib._bootstrap>\", line 958, in _find_and_load_unlocked\r\n  File \"<frozen importlib._bootstrap>\", line 666, in _load_unlocked\r\n  File \"<frozen importlib._bootstrap>\", line 577, in module_from_spec\r\n  File \"<frozen importlib._bootstrap_external>\", line 906, in create_module\r\n  File \"<frozen importlib._bootstrap>\", line 222, in _call_with_frames_removed\r\nImportError: DLL load failed: Die angegebene Prozedur wurde nicht gefunden.\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTraceback (most recent call last):\r\n  File \"C:\\temp\\tensorflow-gpu\\lib\\site-packages\\tensorflow\\python\\pywrap_tensor\r\nflow.py\", line 58, in <module>\r\n    from tensorflow.python.pywrap_tensorflow_internal import *\r\n  File \"C:\\temp\\tensorflow-gpu\\lib\\site-packages\\tensorflow\\python\\pywrap_tensor\r\nflow_internal.py\", line 21, in <module>\r\n    _pywrap_tensorflow_internal = swig_import_helper()\r\n  File \"C:\\temp\\tensorflow-gpu\\lib\\site-packages\\tensorflow\\python\\pywrap_tensor\r\nflow_internal.py\", line 20, in swig_import_helper\r\n    return importlib.import_module('_pywrap_tensorflow_internal')\r\n  File \"C:\\temp\\tensorflow-gpu\\lib\\importlib\\__init__.py\", line 126, in import_m\r\nodule\r\n    return _bootstrap._gcd_import(name[level:], package, level)\r\nImportError: No module named '_pywrap_tensorflow_internal'\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\n  File \"C:\\temp\\tensorflow-gpu\\lib\\site-packages\\tensorflow\\__init__.py\", line 2\r\n4, in <module>\r\n    from tensorflow.python import *\r\n  File \"C:\\temp\\tensorflow-gpu\\lib\\site-packages\\tensorflow\\python\\__init__.py\",\r\n line 49, in <module>\r\n    from tensorflow.python import pywrap_tensorflow\r\n  File \"C:\\temp\\tensorflow-gpu\\lib\\site-packages\\tensorflow\\python\\pywrap_tensor\r\nflow.py\", line 74, in <module>\r\n    raise ImportError(msg)\r\nImportError: Traceback (most recent call last):\r\n  File \"C:\\temp\\tensorflow-gpu\\lib\\site-packages\\tensorflow\\python\\pywrap_tensor\r\nflow_internal.py\", line 18, in swig_import_helper\r\n    return importlib.import_module(mname)\r\n  File \"C:\\temp\\tensorflow-gpu\\lib\\importlib\\__init__.py\", line 126, in import_m\r\nodule\r\n    return _bootstrap._gcd_import(name[level:], package, level)\r\n  File \"<frozen importlib._bootstrap>\", line 986, in _gcd_import\r\n  File \"<frozen importlib._bootstrap>\", line 969, in _find_and_load\r\n  File \"<frozen importlib._bootstrap>\", line 958, in _find_and_load_unlocked\r\n  File \"<frozen importlib._bootstrap>\", line 666, in _load_unlocked\r\n  File \"<frozen importlib._bootstrap>\", line 577, in module_from_spec\r\n  File \"<frozen importlib._bootstrap_external>\", line 906, in create_module\r\n  File \"<frozen importlib._bootstrap>\", line 222, in _call_with_frames_removed\r\nImportError: DLL load failed: Die angegebene Prozedur wurde nicht gefunden.\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTraceback (most recent call last):\r\n  File \"C:\\temp\\tensorflow-gpu\\lib\\site-packages\\tensorflow\\python\\pywrap_tensor\r\nflow.py\", line 58, in <module>\r\n    from tensorflow.python.pywrap_tensorflow_internal import *\r\n  File \"C:\\temp\\tensorflow-gpu\\lib\\site-packages\\tensorflow\\python\\pywrap_tensor\r\nflow_internal.py\", line 21, in <module>\r\n    _pywrap_tensorflow_internal = swig_import_helper()\r\n  File \"C:\\temp\\tensorflow-gpu\\lib\\site-packages\\tensorflow\\python\\pywrap_tensor\r\nflow_internal.py\", line 20, in swig_import_helper\r\n    return importlib.import_module('_pywrap_tensorflow_internal')\r\n  File \"C:\\temp\\tensorflow-gpu\\lib\\importlib\\__init__.py\", line 126, in import_m\r\nodule\r\n    return _bootstrap._gcd_import(name[level:], package, level)\r\nImportError: No module named '_pywrap_tensorflow_internal'\r\n\r\n\r\nFailed to load the native TensorFlow runtime.\r\n\r\nSee https://www.tensorflow.org/install/install_sources#common_installation_probl\r\nems\r\n\r\nfor some common reasons and solutions.  Include the entire stack trace\r\nabove this error message when asking for help.\r\n>>>\r\n```\r\n\r\nWhen doing \"import tensorflow\", these dlls are loaded:\r\n```\r\n23:09:18,4934154\tpython.exe\t4848\tLoad Image\tC:\\temp\\tensorflow-gpu\\python.exe\tSUCCESS\tImage Base: 0x1ce20000, Image Size: 0xd000\r\n23:09:18,4935443\tpython.exe\t4848\tLoad Image\tC:\\Windows\\System32\\ntdll.dll\tSUCCESS\tImage Base: 0x77190000, Image Size: 0x1aa000\r\n23:09:18,4940523\tpython.exe\t4848\tLoad Image\tC:\\Windows\\System32\\kernel32.dll\tSUCCESS\tImage Base: 0x77070000, Image Size: 0x11f000\r\n23:09:18,4942051\tpython.exe\t4848\tLoad Image\tC:\\Windows\\System32\\KernelBase.dll\tSUCCESS\tImage Base: 0x7fefd010000, Image Size: 0x6a000\r\n23:09:18,4954354\tpython.exe\t4848\tLoad Image\tC:\\temp\\tensorflow-gpu\\python35.dll\tSUCCESS\tImage Base: 0x60840000, Image Size: 0x3e4000\r\n23:09:18,4962254\tpython.exe\t4848\tLoad Image\tC:\\Windows\\System32\\ws2_32.dll\tSUCCESS\tImage Base: 0x7fefe860000, Image Size: 0x4d000\r\n23:09:18,4963049\tpython.exe\t4848\tLoad Image\tC:\\Windows\\System32\\msvcrt.dll\tSUCCESS\tImage Base: 0x7fefec80000, Image Size: 0x9f000\r\n23:09:18,4965005\tpython.exe\t4848\tLoad Image\tC:\\Windows\\System32\\rpcrt4.dll\tSUCCESS\tImage Base: 0x7fefe560000, Image Size: 0x12d000\r\n23:09:18,4967902\tpython.exe\t4848\tLoad Image\tC:\\Windows\\System32\\nsi.dll\tSUCCESS\tImage Base: 0x7fefed20000, Image Size: 0x8000\r\n23:09:18,4969281\tpython.exe\t4848\tLoad Image\tC:\\Windows\\System32\\advapi32.dll\tSUCCESS\tImage Base: 0x7fefed30000, Image Size: 0xdb000\r\n23:09:18,4975579\tpython.exe\t4848\tLoad Image\tC:\\Windows\\System32\\sechost.dll\tSUCCESS\tImage Base: 0x7fefefc0000, Image Size: 0x1f000\r\n23:09:18,4980934\tpython.exe\t4848\tLoad Image\tC:\\temp\\tensorflow-gpu\\vcruntime140.dll\tSUCCESS\tImage Base: 0x7fef9f20000, Image Size: 0x17000\r\n23:09:18,4985102\tpython.exe\t4848\tLoad Image\tC:\\temp\\tensorflow-gpu\\api-ms-win-crt-runtime-l1-1-0.dll\tSUCCESS\tImage Base: 0x7fefae30000, Image Size: 0x4000\r\n23:09:18,4990202\tpython.exe\t4848\tLoad Image\tC:\\temp\\tensorflow-gpu\\ucrtbase.dll\tSUCCESS\tImage Base: 0x7fef1980000, Image Size: 0xf6000\r\n23:09:18,4993831\tpython.exe\t4848\tLoad Image\tC:\\temp\\tensorflow-gpu\\api-ms-win-core-localization-l1-2-0.dll\tSUCCESS\tImage Base: 0x7fef9f10000, Image Size: 0x3000\r\n23:09:18,4997199\tpython.exe\t4848\tLoad Image\tC:\\temp\\tensorflow-gpu\\api-ms-win-core-processthreads-l1-1-1.dll\tSUCCESS\tImage Base: 0x7fef9f00000, Image Size: 0x3000\r\n23:09:18,5000873\tpython.exe\t4848\tLoad Image\tC:\\temp\\tensorflow-gpu\\api-ms-win-core-file-l1-2-0.dll\tSUCCESS\tImage Base: 0x7fef9c80000, Image Size: 0x3000\r\n23:09:18,5004132\tpython.exe\t4848\tLoad Image\tC:\\temp\\tensorflow-gpu\\api-ms-win-core-timezone-l1-1-0.dll\tSUCCESS\tImage Base: 0x7fef9c50000, Image Size: 0x3000\r\n23:09:18,5007251\tpython.exe\t4848\tLoad Image\tC:\\temp\\tensorflow-gpu\\api-ms-win-core-file-l2-1-0.dll\tSUCCESS\tImage Base: 0x7fef78f0000, Image Size: 0x3000\r\n23:09:18,5010347\tpython.exe\t4848\tLoad Image\tC:\\temp\\tensorflow-gpu\\api-ms-win-core-synch-l1-2-0.dll\tSUCCESS\tImage Base: 0x7fef78e0000, Image Size: 0x3000\r\n23:09:18,5013723\tpython.exe\t4848\tLoad Image\tC:\\temp\\tensorflow-gpu\\api-ms-win-crt-string-l1-1-0.dll\tSUCCESS\tImage Base: 0x7fef7290000, Image Size: 0x4000\r\n23:09:18,5017053\tpython.exe\t4848\tLoad Image\tC:\\temp\\tensorflow-gpu\\api-ms-win-crt-heap-l1-1-0.dll\tSUCCESS\tImage Base: 0x7fef5b80000, Image Size: 0x3000\r\n23:09:18,5020326\tpython.exe\t4848\tLoad Image\tC:\\temp\\tensorflow-gpu\\api-ms-win-crt-stdio-l1-1-0.dll\tSUCCESS\tImage Base: 0x7fef5b20000, Image Size: 0x4000\r\n23:09:18,5023556\tpython.exe\t4848\tLoad Image\tC:\\temp\\tensorflow-gpu\\api-ms-win-crt-convert-l1-1-0.dll\tSUCCESS\tImage Base: 0x7fef5a00000, Image Size: 0x4000\r\n23:09:18,5027163\tpython.exe\t4848\tLoad Image\tC:\\temp\\tensorflow-gpu\\api-ms-win-crt-math-l1-1-0.dll\tSUCCESS\tImage Base: 0x7fef5680000, Image Size: 0x5000\r\n23:09:18,5030972\tpython.exe\t4848\tLoad Image\tC:\\temp\\tensorflow-gpu\\api-ms-win-crt-locale-l1-1-0.dll\tSUCCESS\tImage Base: 0x7fef5670000, Image Size: 0x3000\r\n23:09:18,5035867\tpython.exe\t4848\tLoad Image\tC:\\temp\\tensorflow-gpu\\api-ms-win-crt-time-l1-1-0.dll\tSUCCESS\tImage Base: 0x7fef5660000, Image Size: 0x3000\r\n23:09:18,5040232\tpython.exe\t4848\tLoad Image\tC:\\temp\\tensorflow-gpu\\api-ms-win-crt-environment-l1-1-0.dll\tSUCCESS\tImage Base: 0x7fef5650000, Image Size: 0x3000\r\n23:09:18,5043476\tpython.exe\t4848\tLoad Image\tC:\\temp\\tensorflow-gpu\\api-ms-win-crt-process-l1-1-0.dll\tSUCCESS\tImage Base: 0x7fef5640000, Image Size: 0x3000\r\n23:09:18,5049748\tpython.exe\t4848\tLoad Image\tC:\\temp\\tensorflow-gpu\\api-ms-win-crt-conio-l1-1-0.dll\tSUCCESS\tImage Base: 0x7fef5630000, Image Size: 0x3000\r\n23:09:18,5053460\tpython.exe\t4848\tLoad Image\tC:\\temp\\tensorflow-gpu\\api-ms-win-crt-filesystem-l1-1-0.dll\tSUCCESS\tImage Base: 0x7fef5620000, Image Size: 0x3000\r\n23:09:18,5100964\tpython.exe\t4848\tLoad Image\tC:\\Windows\\System32\\cryptsp.dll\tSUCCESS\tImage Base: 0x7fefc6b0000, Image Size: 0x18000\r\n23:09:18,5144867\tpython.exe\t4848\tLoad Image\tC:\\Windows\\System32\\rsaenh.dll\tSUCCESS\tImage Base: 0x7fefc3b0000, Image Size: 0x47000\r\n23:09:18,5156094\tpython.exe\t4848\tLoad Image\tC:\\Windows\\System32\\cryptbase.dll\tSUCCESS\tImage Base: 0x7fefccc0000, Image Size: 0xf000\r\n23:09:22,2812159\tpython.exe\t4848\tLoad Image\tC:\\temp\\tensorflow-gpu\\DLLs\\_ctypes.pyd\tSUCCESS\tImage Base: 0x6dae0000, Image Size: 0x23000\r\n23:09:22,2818451\tpython.exe\t4848\tLoad Image\tC:\\Windows\\System32\\ole32.dll\tSUCCESS\tImage Base: 0x7fefe1b0000, Image Size: 0x1fc000\r\n23:09:22,2819936\tpython.exe\t4848\tLoad Image\tC:\\Windows\\System32\\gdi32.dll\tSUCCESS\tImage Base: 0x7fefee10000, Image Size: 0x67000\r\n23:09:22,2821573\tpython.exe\t4848\tLoad Image\tC:\\Windows\\System32\\user32.dll\tSUCCESS\tImage Base: 0x76f70000, Image Size: 0xfa000\r\n23:09:22,2823988\tpython.exe\t4848\tLoad Image\tC:\\Windows\\System32\\lpk.dll\tSUCCESS\tImage Base: 0x7fefef90000, Image Size: 0xe000\r\n23:09:22,2825875\tpython.exe\t4848\tLoad Image\tC:\\Windows\\System32\\usp10.dll\tSUCCESS\tImage Base: 0x7fefe3b0000, Image Size: 0xcb000\r\n23:09:22,2828244\tpython.exe\t4848\tLoad Image\tC:\\Windows\\System32\\oleaut32.dll\tSUCCESS\tImage Base: 0x7fefe480000, Image Size: 0xda000\r\n23:09:22,2852213\tpython.exe\t4848\tLoad Image\tC:\\Windows\\System32\\imm32.dll\tSUCCESS\tImage Base: 0x7fefe7d0000, Image Size: 0x2e000\r\n23:09:22,2854622\tpython.exe\t4848\tLoad Image\tC:\\Windows\\System32\\msctf.dll\tSUCCESS\tImage Base: 0x7fefee80000, Image Size: 0x109000\r\n23:09:22,2873239\tpython.exe\t4848\tLoad Image\tC:\\Windows\\System32\\psapi.dll\tSUCCESS\tImage Base: 0x77350000, Image Size: 0x7000\r\n23:09:22,3305458\tpython.exe\t4848\tLoad Image\tC:\\temp\\tensorflow-gpu\\Lib\\site-packages\\numpy\\core\\multiarray.cp35-win_amd64.pyd\tSUCCESS\tImage Base: 0x7fee9230000, Image Size: 0x1a6000\r\n23:09:22,3403641\tpython.exe\t4848\tLoad Image\tC:\\temp\\tensorflow-gpu\\Lib\\site-packages\\numpy\\.libs\\libopenblas.BNVRK7633HSX7YVO2TADGR4A5KEKXJAW.gfortran-win_amd64.dll\tSUCCESS\tImage Base: 0x65600000, Image Size: 0x2457000\r\n23:09:22,3413041\tpython.exe\t4848\tLoad Image\tC:\\Windows\\System32\\api-ms-win-crt-utility-l1-1-0.dll\tSUCCESS\tImage Base: 0x7fef5310000, Image Size: 0x3000\r\n23:09:22,3504746\tpython.exe\t4848\tLoad Image\tC:\\temp\\tensorflow-gpu\\Lib\\site-packages\\numpy\\core\\umath.cp35-win_amd64.pyd\tSUCCESS\tImage Base: 0x7fef1500000, Image Size: 0xcb000\r\n23:09:22,4512966\tpython.exe\t4848\tLoad Image\tC:\\temp\\tensorflow-gpu\\DLLs\\_bz2.pyd\tSUCCESS\tImage Base: 0x6da10000, Image Size: 0x1a000\r\n23:09:22,4549442\tpython.exe\t4848\tLoad Image\tC:\\temp\\tensorflow-gpu\\DLLs\\_lzma.pyd\tSUCCESS\tImage Base: 0x7fef43d0000, Image Size: 0x29000\r\n23:09:22,4646128\tpython.exe\t4848\tLoad Image\tC:\\temp\\tensorflow-gpu\\DLLs\\_hashlib.pyd\tSUCCESS\tImage Base: 0x7fee9c80000, Image Size: 0x167000\r\n23:09:22,4963274\tpython.exe\t4848\tLoad Image\tC:\\temp\\tensorflow-gpu\\Lib\\site-packages\\numpy\\linalg\\lapack_lite.cp35-win_amd64.pyd\tSUCCESS\tImage Base: 0x7fef4670000, Image Size: 0xb000\r\n23:09:22,4978504\tpython.exe\t4848\tLoad Image\tC:\\temp\\tensorflow-gpu\\Lib\\site-packages\\numpy\\linalg\\_umath_linalg.cp35-win_amd64.pyd\tSUCCESS\tImage Base: 0x7fef41a0000, Image Size: 0x21000\r\n23:09:22,5099393\tpython.exe\t4848\tLoad Image\tC:\\temp\\tensorflow-gpu\\DLLs\\_decimal.pyd\tSUCCESS\tImage Base: 0x6d930000, Image Size: 0x52000\r\n23:09:22,5235329\tpython.exe\t4848\tLoad Image\tC:\\temp\\tensorflow-gpu\\Lib\\site-packages\\numpy\\fft\\fftpack_lite.cp35-win_amd64.pyd\tSUCCESS\tImage Base: 0x7fef4620000, Image Size: 0x18000\r\n23:09:22,5429263\tpython.exe\t4848\tLoad Image\tC:\\temp\\tensorflow-gpu\\Lib\\site-packages\\numpy\\random\\mtrand.cp35-win_amd64.pyd\tSUCCESS\tImage Base: 0x7feef130000, Image Size: 0xaa000\r\n23:09:22,5610733\tpython.exe\t4848\tLoad Image\tC:\\temp\\tensorflow-gpu\\msvcp140.dll\tSUCCESS\tImage Base: 0x7fef1460000, Image Size: 0x9e000\r\n23:09:22,5617687\tpython.exe\t4848\tLoad Image\tC:\\temp\\tensorflow-gpu\\api-ms-win-crt-multibyte-l1-1-0.dll\tSUCCESS\tImage Base: 0x7fef4660000, Image Size: 0x5000\r\n23:09:22,5628030\tpython.exe\t4848\tLoad Image\tC:\\Windows\\System32\\nvcuda.dll\tSUCCESS\tImage Base: 0x7fed7080000, Image Size: 0xd4c000\r\n23:09:22,5629974\tpython.exe\t4848\tLoad Image\tC:\\Windows\\System32\\setupapi.dll\tSUCCESS\tImage Base: 0x7fefdfd0000, Image Size: 0x1d7000\r\n23:09:22,5631437\tpython.exe\t4848\tLoad Image\tC:\\Windows\\System32\\cfgmgr32.dll\tSUCCESS\tImage Base: 0x7fefcfc0000, Image Size: 0x36000\r\n23:09:22,5633367\tpython.exe\t4848\tLoad Image\tC:\\Windows\\System32\\devobj.dll\tSUCCESS\tImage Base: 0x7fefd210000, Image Size: 0x1a000\r\n23:09:22,5634824\tpython.exe\t4848\tLoad Image\tC:\\Windows\\System32\\shell32.dll\tSUCCESS\tImage Base: 0x7fefd240000, Image Size: 0xd8a000\r\n23:09:22,5636238\tpython.exe\t4848\tLoad Image\tC:\\Windows\\System32\\shlwapi.dll\tSUCCESS\tImage Base: 0x7fefeb80000, Image Size: 0x71000\r\n23:09:22,5670519\tpython.exe\t4848\tLoad Image\tC:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v9.0\\bin\\cudart64_90.dll\tSUCCESS\tImage Base: 0x7fef3320000, Image Size: 0x61000\r\n23:09:22,5767031\tpython.exe\t4848\tLoad Image\tC:\\temp\\cudnn\\cuda\\bin\\cudnn64_7.dll\tSUCCESS\tImage Base: 0x7fec4ba0000, Image Size: 0x111e9000\r\n23:09:22,5836291\tpython.exe\t4848\tLoad Image\tC:\\temp\\tensorflow-gpu\\Lib\\site-packages\\tensorflow\\python\\_pywrap_tensorflow_internal.pyd\tSUCCESS\tImage Base: 0x7feb5630000, Image Size: 0xf564000\r\n23:09:22,5848467\tpython.exe\t4848\tLoad Image\tC:\\Windows\\System32\\wsock32.dll\tSUCCESS\tImage Base: 0x7fef89d0000, Image Size: 0x9000\r\n```"}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/16839", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/16839/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/16839/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/16839/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/16839", "id": 295248968, "node_id": "MDU6SXNzdWUyOTUyNDg5Njg=", "number": 16839, "title": "Feature request: Enable validate_args for all distributions based on a global parameter", "user": {"login": "lazypanda1", "id": 35884075, "node_id": "MDQ6VXNlcjM1ODg0MDc1", "avatar_url": "https://avatars0.githubusercontent.com/u/35884075?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lazypanda1", "html_url": "https://github.com/lazypanda1", "followers_url": "https://api.github.com/users/lazypanda1/followers", "following_url": "https://api.github.com/users/lazypanda1/following{/other_user}", "gists_url": "https://api.github.com/users/lazypanda1/gists{/gist_id}", "starred_url": "https://api.github.com/users/lazypanda1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lazypanda1/subscriptions", "organizations_url": "https://api.github.com/users/lazypanda1/orgs", "repos_url": "https://api.github.com/users/lazypanda1/repos", "events_url": "https://api.github.com/users/lazypanda1/events{/privacy}", "received_events_url": "https://api.github.com/users/lazypanda1/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 299643928, "node_id": "MDU6TGFiZWwyOTk2NDM5Mjg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:contributions%20welcome", "name": "stat:contributions welcome", "color": "f4b400", "default": false, "description": ""}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-02-07T18:43:05Z", "updated_at": "2018-02-07T22:40:12Z", "closed_at": null, "author_association": "CONTRIBUTOR", "body": "The probability distributions in Tensorflow have a `validate_args` argument that is initially set to `False`. This is a request for a feature that initializes the value of `validate_args` to the value of a global flag (that can be set from the command line or the preferences).\r\n\r\nRationale: Currently, when the user sets up the model incorrectly e.g. wrong parameter values are provided for the distributions, or data values don't match the support for the distribution, the program silently fails and produces nans in the output (or worse, wrong values). The user has no way to debug this easily because `validate_args` is `False` by default, and manually adding `validate_args=True` while initializing each distribution can be tedious for the user.\r\n\r\nI would be happy to contribute this feature to tensorflow if this seems reasonable. Do you have any suggestions on how to go forward?"}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/16835", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/16835/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/16835/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/16835/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/16835", "id": 295178229, "node_id": "MDU6SXNzdWUyOTUxNzgyMjk=", "number": 16835, "title": "Optimized einsum", "user": {"login": "Bonnevie", "id": 5861991, "node_id": "MDQ6VXNlcjU4NjE5OTE=", "avatar_url": "https://avatars2.githubusercontent.com/u/5861991?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Bonnevie", "html_url": "https://github.com/Bonnevie", "followers_url": "https://api.github.com/users/Bonnevie/followers", "following_url": "https://api.github.com/users/Bonnevie/following{/other_user}", "gists_url": "https://api.github.com/users/Bonnevie/gists{/gist_id}", "starred_url": "https://api.github.com/users/Bonnevie/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Bonnevie/subscriptions", "organizations_url": "https://api.github.com/users/Bonnevie/orgs", "repos_url": "https://api.github.com/users/Bonnevie/repos", "events_url": "https://api.github.com/users/Bonnevie/events{/privacy}", "received_events_url": "https://api.github.com/users/Bonnevie/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 299643928, "node_id": "MDU6TGFiZWwyOTk2NDM5Mjg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:contributions%20welcome", "name": "stat:contributions welcome", "color": "f4b400", "default": false, "description": ""}, {"id": 473173272, "node_id": "MDU6TGFiZWw0NzMxNzMyNzI=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:feature", "name": "type:feature", "color": "159b2e", "default": false, "description": ""}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-02-07T15:24:03Z", "updated_at": "2018-04-14T16:07:40Z", "closed_at": null, "author_association": "NONE", "body": "In Numpy, it's my understanding that the np.einsum function has been extended with the functionality of\r\n[opt_einsum](https://github.com/dgasmith/opt_einsum), \r\nwhich computes an optimal (or near-optimal) way to perform the tensor contractions.\r\nAs far as I've heard, the Tensorflow einsum is a lot more basic (but extremely convenient), and cannot be relied upon for performance. Also, even though `opt_einsum` can give allegedly perfect decomposition paths, these optimizations appear to not always work well in Tensorflow - which might be down to memory order, available numerical routines, views vs reshapes, etc. \r\n\r\nAs a feature request, I think it would be hugely beneficial to have a high-performing version of `tf.einsum` in Tensorflow, as it makes it easy to handle many complicated linear algebra tasks compactly.\r\n\r\n------------------------\r\n\r\n### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**: no\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**: Linux Ubuntu 16.04 LTS\r\n- **TensorFlow installed from (source or binary)**: binary\r\n- **TensorFlow version (use command below)**: 1.5\r\n- **Python version**: 3.6\r\n- **Bazel version (if compiling from source)**: N/A\r\n- **GCC/Compiler version (if compiling from source)**: N/A\r\n- **CUDA/cuDNN version**: N/A\r\n- **GPU model and memory**: N/A\r\n- **Exact command to reproduce**: N/A\r\n\r\n"}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/16779", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/16779/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/16779/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/16779/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/16779", "id": 294491341, "node_id": "MDU6SXNzdWUyOTQ0OTEzNDE=", "number": 16779, "title": "Cross-Compiling the TensorFlow wheel for NVIDIA Jetson with CUDA support", "user": {"login": "ljanyst", "id": 126975, "node_id": "MDQ6VXNlcjEyNjk3NQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/126975?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ljanyst", "html_url": "https://github.com/ljanyst", "followers_url": "https://api.github.com/users/ljanyst/followers", "following_url": "https://api.github.com/users/ljanyst/following{/other_user}", "gists_url": "https://api.github.com/users/ljanyst/gists{/gist_id}", "starred_url": "https://api.github.com/users/ljanyst/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ljanyst/subscriptions", "organizations_url": "https://api.github.com/users/ljanyst/orgs", "repos_url": "https://api.github.com/users/ljanyst/repos", "events_url": "https://api.github.com/users/ljanyst/events{/privacy}", "received_events_url": "https://api.github.com/users/ljanyst/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 299643928, "node_id": "MDU6TGFiZWwyOTk2NDM5Mjg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:contributions%20welcome", "name": "stat:contributions welcome", "color": "f4b400", "default": false, "description": ""}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-02-05T18:15:14Z", "updated_at": "2018-02-09T17:55:06Z", "closed_at": null, "author_association": "NONE", "body": "### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**: Yes\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**: Linux Ubuntu 16.04\r\n- **TensorFlow installed from (source or binary)**: Source\r\n- **TensorFlow version (use command below)**: 1.5.0\r\n- **Python version**:  3.5.2\r\n- **Bazel version (if compiling from source)**: 0.10.0\r\n- **GCC/Compiler version (if compiling from source)**: gcc version 5.4.0 20160609\r\n- **CUDA/cuDNN version**: 8.0/6.0\r\n- **GPU model and memory**: Irrelevant\r\n- **Exact command to reproduce**:\r\n\r\n* Install gcc cross-compiler: `sudo apt-get install gcc-aarch64-linux-gnu g++-aarch64-linux-gnu`\r\n* Install the CUDA `cross-aarch64` packages\r\n* Build Python 3.5.2 for the target\r\n* I wrote a short blog post with the details: https://jany.st/post/2018-02-05-cross-compiling-tensorflow-for-jetson-tx1-with-bazel.html\r\n\r\n```\r\ngit clone https://github.com/ljanyst/tensorflow.git\r\ncd tensorflow\r\ngit checkout v1.5.0-cross-jetson-tx1\r\ncd third_party/toolchains/cpus/aarch64\r\n./configure.py\r\ncd ../../../..\r\n./configure\r\nbazel build  --config=opt --config=cuda \\\r\n   --crosstool_top=//third_party/toolchains/cpus/aarch64:toolchain \\\r\n    --cpu=arm  --compiler=cuda \\\r\n    //tensorflow/tools/pip_package:build_pip_package\r\n```\r\n### Describe the problem\r\nI have succeeded, but I encountered a bunch of issues on the way. Due to my unfamiliarity with Bazel, my solution is rather hacky. It looks to me like properly fixing it is a rather low hanging fruit for a person familiar with Bazel, so I document what I have discovered here.\r\n\r\n#### 1. Configuring CUDA for the target\r\n\r\nI could not find a way in the to check CUDA configuration script whether the source is supposed to be configured for a cross build, so I ended up changing the hardcoded paths: https://github.com/ljanyst/tensorflow/commit/1a2a75fed9a9576c4e9e8f89ee556263cf22deaf If there was a way to check if we're building for a platform that is different from the one of the build host, this could be easily turned into some sort of an if statement.\r\n\r\n#### 2. Specifying target Python installation\r\n\r\nI could not find an easy way to patch that through, so I ended up putting it in the [CROSSTOOL](https://github.com/ljanyst/tensorflow/blob/v1.5.0-cross-jetson-tx1/third_party/toolchains/cpus/aarch64/CROSSTOOL.in) file:\r\n\r\n```\r\ncxx_flag: \"-isystem\"\r\ncxx_flag: \"__TARGET_PYTHON_INCLUDES__\"\r\n```\r\n\r\n#### 3. Code generators depend on `libtensorflow_framework.so` which, in turn, depends on CUDA\r\n\r\nThis means that I needed to have the CUDA and cuDNN libraries for the build host and needed to pass the relevant library paths to the compiler [in a wrapper script](https://github.com/ljanyst/tensorflow/blob/v1.5.0-cross-jetson-tx1/third_party/toolchains/cpus/aarch64/crosstool_wrapper_host_tf_framework#L41).\r\n\r\n#### 4. Linking of the code generators fails on the build-host side\r\n\r\nBazel builds both the code generators and `libtensorflow_framework.so` for the host, but does not link the binaries against the framework library.\r\n\r\nI have worked around the two above issues by writing a compiler wrapper scripts doing the following:\r\n\r\n```python\r\nif ofile is not None:\r\n    is_gen = ofile.endswith('py_wrappers_cc') or ofile.endswith('gen_cc')\r\n    if is_cuda == 'yes' and (ofile.endswith('libtensorflow_framework.so') or is_gen):\r\n        cuda_libdirs = [\r\n            '-L', '{}/targets/x86_64-linux/lib'.format(cuda_dir),\r\n            '-L', '{}/targets/x86_64-linux/lib/stubs'.format(cuda_dir),\r\n            '-L', '{}/lib64'.format(cudnn_dir),\r\n        ]\r\n\r\n    if is_gen:\r\n        tf_libs += [\r\n            '-L', 'bazel-out/host/bin/tensorflow',\r\n            '-ltensorflow_framework'\r\n]\r\n\r\ncall([find_executable('gcc')] + cuda_libdirs + args + tf_libs)\r\n```\r\n\r\n#### 5. Incomplete RPATH in the target-side `libtensorflow_framwork.so`\r\n\r\nThe library gets linked using a bunch of RPATH parameters, but one seems to be missing. It causes linking errors down the road. I have added the following to the original `crosstool_wrapper_driver_is_not_gcc` script to fix the problem:\r\n\r\n```python\r\n  ofile = GetOptionValue(sys.argv[1:], 'o')\r\n  if ofile and ofile[0].endswith('libtensorflow_framework.so'):\r\n    cpu_compiler_flags += [\r\n        '-Wl,-rpath,'+os.getcwd()+'/bazel-out/arm-py3-opt/genfiles/external/local_config_cuda/cuda/cuda/lib',\r\n    ]\r\n```\r\n\r\n#### 6. Platform metadata of the resulting wheel package\r\n\r\nSince the build host platform is `linux_x86_64`, this ends up being written in the wheel metadata. The issue can be fixed by manually passing the `--plat-name` parameter to distutils. I have, therefore, added https://github.com/ljanyst/tensorflow/commit/a9b952e3850b0c416a37f4f4b488adf8189638a7 to `build_pip_package.sh`. Please let me know if you'd like a pull request.\r\n\r\nIt hope it's helpful.\r\n"}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/16772", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/16772/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/16772/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/16772/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/16772", "id": 294374498, "node_id": "MDU6SXNzdWUyOTQzNzQ0OTg=", "number": 16772, "title": "XLA with frozen protobuf: Tuples do not have a rank error", "user": {"login": "ALEXKIRNAS", "id": 17690151, "node_id": "MDQ6VXNlcjE3NjkwMTUx", "avatar_url": "https://avatars3.githubusercontent.com/u/17690151?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ALEXKIRNAS", "html_url": "https://github.com/ALEXKIRNAS", "followers_url": "https://api.github.com/users/ALEXKIRNAS/followers", "following_url": "https://api.github.com/users/ALEXKIRNAS/following{/other_user}", "gists_url": "https://api.github.com/users/ALEXKIRNAS/gists{/gist_id}", "starred_url": "https://api.github.com/users/ALEXKIRNAS/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ALEXKIRNAS/subscriptions", "organizations_url": "https://api.github.com/users/ALEXKIRNAS/orgs", "repos_url": "https://api.github.com/users/ALEXKIRNAS/repos", "events_url": "https://api.github.com/users/ALEXKIRNAS/events{/privacy}", "received_events_url": "https://api.github.com/users/ALEXKIRNAS/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": {"login": "shivaniag", "id": 16565716, "node_id": "MDQ6VXNlcjE2NTY1NzE2", "avatar_url": "https://avatars1.githubusercontent.com/u/16565716?v=4", "gravatar_id": "", "url": "https://api.github.com/users/shivaniag", "html_url": "https://github.com/shivaniag", "followers_url": "https://api.github.com/users/shivaniag/followers", "following_url": "https://api.github.com/users/shivaniag/following{/other_user}", "gists_url": "https://api.github.com/users/shivaniag/gists{/gist_id}", "starred_url": "https://api.github.com/users/shivaniag/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/shivaniag/subscriptions", "organizations_url": "https://api.github.com/users/shivaniag/orgs", "repos_url": "https://api.github.com/users/shivaniag/repos", "events_url": "https://api.github.com/users/shivaniag/events{/privacy}", "received_events_url": "https://api.github.com/users/shivaniag/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "shivaniag", "id": 16565716, "node_id": "MDQ6VXNlcjE2NTY1NzE2", "avatar_url": "https://avatars1.githubusercontent.com/u/16565716?v=4", "gravatar_id": "", "url": "https://api.github.com/users/shivaniag", "html_url": "https://github.com/shivaniag", "followers_url": "https://api.github.com/users/shivaniag/followers", "following_url": "https://api.github.com/users/shivaniag/following{/other_user}", "gists_url": "https://api.github.com/users/shivaniag/gists{/gist_id}", "starred_url": "https://api.github.com/users/shivaniag/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/shivaniag/subscriptions", "organizations_url": "https://api.github.com/users/shivaniag/orgs", "repos_url": "https://api.github.com/users/shivaniag/repos", "events_url": "https://api.github.com/users/shivaniag/events{/privacy}", "received_events_url": "https://api.github.com/users/shivaniag/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 2, "created_at": "2018-02-05T12:22:53Z", "updated_at": "2018-12-14T18:50:44Z", "closed_at": null, "author_association": "NONE", "body": "### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**: Yes, model inference script.\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**: 16.04.3 LTS (Xenial Xerus)\r\n- **TensorFlow installed from (source or binary)**: Source **with XLA support**\r\n- **TensorFlow version (use command below)**: 1.4.1\r\n- **Python version**: 3.6\r\n- **Bazel version (if compiling from source)**: 0.5.4\r\n- **GCC/Compiler version (if compiling from source)**: c++ (Ubuntu 5.4.0-6ubuntu1~16.04.4) 5.4.0 20160609\r\n- **CUDA/cuDNN version**: cuda-8.0/cuDNN-6.0.21\r\n- **GPU model and memory**: Tesla K80, 12 Gb\r\n- **Exact command to reproduce**: `CUDA_VISIBLE_DEVICES='0'  TF_XLA_FLAGS=--xla_generate_hlo_graph=.* python name_of_script.py`\r\n\r\n### Describe the problem\r\nI am trying to run model (SSD with MobileNetV1 from [tf-models](https://github.com/tensorflow/models/tree/master/research/object_detection)) with XLA optimization. I am trained this model on my own data set and generated **frozen** protobuf file with provide script [export_inference_graph.py](https://github.com/tensorflow/models/blob/master/research/object_detection/export_inference_graph.py). \r\n**Note**: Script that run inference works fine **without** XLA. Models from `keras.application` works fine **with** XLA, so I think there are some problems with support of frozen protobufs. \r\n\r\n### Source code / logs\r\nSource code:\r\nAll test completed with next session config:\r\n```\r\ngpu_options = tf.GPUOptions(\r\n            allocator_type='BFC',\r\n            allow_growth=True,\r\n            per_process_gpu_memory_fraction=True\r\n        )\r\n\r\nconfig = tf.ConfigProto(\r\n            allow_soft_placement=True,\r\n            gpu_options=gpu_options\r\n       )\r\n\r\nconfig.graph_options.optimizer_options.global_jit_level = tf.OptimizerOptions.ON_1\r\n```\r\n\r\nLog:\r\n```\r\n(tf-models-env) alexkirnas@host:~/scrips/tfDetector$ CUDA_VISIBLE_DEVICES='0'  TF_XLA_FLAGS=--xla_generate_hlo_graph=.* python ssd_model_inference_time_test_random.py              \r\n/tf-models-env/lib/python3.6/site-packages/h5py/__init__.py:36: FutureWarning: Conversion of the second argument of issubdtype from `float` to `n\r\np.floating` is deprecated. In future, it will be treated as `np.float64 == np.dtype(float).type`.\r\n  from ._conv import register_converters as _register_converters\r\n2018-02-05 10:55:01.159354: I tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:892] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning\r\n NUMA node zero\r\n2018-02-05 10:55:01.160137: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1030] Found device 0 with properties:\r\nname: Tesla K80 major: 3 minor: 7 memoryClockRate(GHz): 0.8235\r\npciBusID: 0000:00:1e.0\r\ntotalMemory: 11.17GiB freeMemory: 11.11GiB\r\n2018-02-05 10:55:01.160163: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1120] Creating TensorFlow device (/device:GPU:0) -> (device: 0, name: Tesla K80, pci bus id: 0000:00:1e.0, compute capability\r\n: 3.7)\r\n2018-02-05 10:55:03.544862: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1120] Creating TensorFlow device (/device:GPU:0) -> (device: 0, name: Tesla K80, pci bus id: 0000:00:1e.0, compute capability\r\n: 3.7)\r\n2018-02-05 10:55:06.752946: I tensorflow/compiler/xla/service/service.cc:162] XLA service 0x7f6454024500 executing computations on platform CUDA. Devices:\r\n2018-02-05 10:55:06.752997: I tensorflow/compiler/xla/service/service.cc:170]   StreamExecutor device (0): Tesla K80, Compute Capability 3.7\r\n2018-02-05 10:55:06.757697: I tensorflow/compiler/xla/service/hlo_graph_dumper.cc:1254] computation cluster_22[_XlaCompiledKernel=true,_XlaNumConstantArgs=1,_XlaNumResourceArgs=0].v9 [optimization: pipeli\r\nne start, before CallInliner]: /tmp/hlo_graph_0.GS9qJI.dot\r\n2018-02-05 10:55:06.757963: I tensorflow/compiler/xla/service/hlo_graph_dumper.cc:1254] computation cluster_22[_XlaCompiledKernel=true,_XlaNumConstantArgs=1,_XlaNumResourceArgs=0].v9 [optimization: after\r\nCallInliner, before simplification]: /tmp/hlo_graph_1.KFEf5N.dot\r\n\r\n....\r\nLot of such lines as above\r\n.... \r\n\r\n2018-02-05 10:55:45.106105: I tensorflow/compiler/xla/service/hlo_graph_dumper.cc:1254] computation cluster_9[_XlaCompiledKernel=true,_XlaNumConstantArgs=1,_XlaNumResourceArgs=0].v163 [optimization: after\r\n cse, before dce]: /tmp/hlo_graph_401.V0lBLH.dot\r\n2018-02-05 10:55:45.112071: I tensorflow/compiler/xla/service/hlo_graph_dumper.cc:1254] computation cluster_9[_XlaCompiledKernel=true,_XlaNumConstantArgs=1,_XlaNumResourceArgs=0].v163 [optimization: after\r\n dce, pipeline end]: /tmp/hlo_graph_402.I2Gnpl.dot\r\n2018-02-05 10:55:45.117834: I tensorflow/compiler/xla/service/hlo_graph_dumper.cc:1254] computation cluster_9[_XlaCompiledKernel=true,_XlaNumConstantArgs=1,_XlaNumResourceArgs=0].v163 [fusion: pipeline st\r\nart, before fusion]: /tmp/hlo_graph_403.Jmq33Y.dot\r\n2018-02-05 10:55:45.122108: F tensorflow/compiler/xla/shape_util.cc:118] Check failed: !ShapeUtil::IsTuple(shape) Tuples do not have a rank\r\nAborted (core dumped)\r\n```"}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/16771", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/16771/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/16771/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/16771/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/16771", "id": 294370820, "node_id": "MDU6SXNzdWUyOTQzNzA4MjA=", "number": 16771, "title": "core dump is occured using reduce_sum", "user": {"login": "funwarioisii", "id": 20943066, "node_id": "MDQ6VXNlcjIwOTQzMDY2", "avatar_url": "https://avatars3.githubusercontent.com/u/20943066?v=4", "gravatar_id": "", "url": "https://api.github.com/users/funwarioisii", "html_url": "https://github.com/funwarioisii", "followers_url": "https://api.github.com/users/funwarioisii/followers", "following_url": "https://api.github.com/users/funwarioisii/following{/other_user}", "gists_url": "https://api.github.com/users/funwarioisii/gists{/gist_id}", "starred_url": "https://api.github.com/users/funwarioisii/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/funwarioisii/subscriptions", "organizations_url": "https://api.github.com/users/funwarioisii/orgs", "repos_url": "https://api.github.com/users/funwarioisii/repos", "events_url": "https://api.github.com/users/funwarioisii/events{/privacy}", "received_events_url": "https://api.github.com/users/funwarioisii/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 404586594, "node_id": "MDU6TGFiZWw0MDQ1ODY1OTQ=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:awaiting%20tensorflower", "name": "stat:awaiting tensorflower", "color": "f4b400", "default": false, "description": ""}, {"id": 473172988, "node_id": "MDU6TGFiZWw0NzMxNzI5ODg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:bug", "name": "type:bug", "color": "159b2e", "default": false, "description": ""}], "state": "open", "locked": false, "assignee": {"login": "rmlarsen", "id": 16907534, "node_id": "MDQ6VXNlcjE2OTA3NTM0", "avatar_url": "https://avatars2.githubusercontent.com/u/16907534?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rmlarsen", "html_url": "https://github.com/rmlarsen", "followers_url": "https://api.github.com/users/rmlarsen/followers", "following_url": "https://api.github.com/users/rmlarsen/following{/other_user}", "gists_url": "https://api.github.com/users/rmlarsen/gists{/gist_id}", "starred_url": "https://api.github.com/users/rmlarsen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rmlarsen/subscriptions", "organizations_url": "https://api.github.com/users/rmlarsen/orgs", "repos_url": "https://api.github.com/users/rmlarsen/repos", "events_url": "https://api.github.com/users/rmlarsen/events{/privacy}", "received_events_url": "https://api.github.com/users/rmlarsen/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "rmlarsen", "id": 16907534, "node_id": "MDQ6VXNlcjE2OTA3NTM0", "avatar_url": "https://avatars2.githubusercontent.com/u/16907534?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rmlarsen", "html_url": "https://github.com/rmlarsen", "followers_url": "https://api.github.com/users/rmlarsen/followers", "following_url": "https://api.github.com/users/rmlarsen/following{/other_user}", "gists_url": "https://api.github.com/users/rmlarsen/gists{/gist_id}", "starred_url": "https://api.github.com/users/rmlarsen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rmlarsen/subscriptions", "organizations_url": "https://api.github.com/users/rmlarsen/orgs", "repos_url": "https://api.github.com/users/rmlarsen/repos", "events_url": "https://api.github.com/users/rmlarsen/events{/privacy}", "received_events_url": "https://api.github.com/users/rmlarsen/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 3, "created_at": "2018-02-05T12:08:48Z", "updated_at": "2018-12-08T18:39:39Z", "closed_at": null, "author_association": "NONE", "body": "Core dump is occured when I tried thus code `tf.reduce_sum(tf.constant([1, 2, 3], dtype=tf.uint8))`.\r\nI consider reduction function is not supported tf.uint8, so please `raise TypeError`.\r\nThe code I linked looks relevant the problem. (I couldn't send Pull Request and propose good code.)\r\nI snipped a part of the error message.\r\nPlease fix.\r\n\r\n\u65e5\u672c\u8a9e\uff1a\r\n `tf.reduce_sum(tf.constant([1, 2, 3], dtype=tf.uint8))`\u3092\u5b9f\u884c\u3057\u305f\u969b\u306b\u30b3\u30a2\u30c0\u30f3\u30d7\u304c\u767a\u751f\u3057\u307e\u3057\u305f\r\n\u6050\u3089\u304freduce\u7cfb\u306e\u95a2\u6570\u3067tf.uint8\u3092\u30b5\u30dd\u30fc\u30c8\u3057\u3066\u3044\u306a\u3044\u304b\u3089\u3060\u3068\u601d\u3044\u307e\u3059\u3000\u305d\u306e\u305f\u3081`raise TypeError`\u306a\u3069\u3057\u3066\u307b\u3057\u3044\u3067\u3059\r\n\u3046\u307e\u3044\u30b3\u30fc\u30c9\u3082\u601d\u3044\u3064\u304b\u305a\u30d7\u30eb\u30ea\u30af\u30a8\u30b9\u30c8\u3082\u51fa\u305b\u306a\u304b\u3063\u305f\u306e\u3067\uff0c\u3053\u306e\u554f\u984c\u306b\u95a2\u9023\u3059\u308b\u3068\u601d\u308f\u308c\u308b\u30b3\u30fc\u30c9\u3092\u30ea\u30f3\u30af\u3057\u307e\u3057\u305f\uff0e\r\n\u30a8\u30e9\u30fc\u30e1\u30c3\u30bb\u30fc\u30b8\u306e\u4e00\u90e8\u3092\u8cbc\u308a\u4ed8\u3051\u307e\u3057\u305f\u3000\u4fee\u6b63\u304a\u9858\u3044\u3057\u307e\u3059\r\n\r\n## Environment\r\ntf.__version__ -> '1.4.1'\r\ncv2.__version__ -> '3.3.1'\r\nnp.__version__ -> '1.14.0'\r\n\r\n\r\nhttps://github.com/tensorflow/tensorflow/blob/bd0d204700df1a1a245b0593a11efd8ede139311/tensorflow/python/ops/math_ops.py#L1318\r\n\r\npython test.py\r\n2018-02-05 19:23:40.942499: I tensorflow/core/platform/cpu_feature_guard.cc:137] Your CPU supports instructions that this TensorFlow binary was not compiled to use: SSE4.1 SSE4.2 AVX AVX2 FMA\r\n*** Error in `/home/dl-box/miniconda2/envs/onyx/bin/python': double free or corruption (!prev): 0x00005636654f79f0 ***\r\n======= Backtrace: =========\r\n/lib/x86_64-linux-gnu/libc.so.6(+0x777e5)[0x7f7371da17e5]\r\n/lib/x86_64-linux-gnu/libc.so.6(+0x8037a)[0x7f7371daa37a]\r\n/lib/x86_64-linux-gnu/libc.so.6(cfree+0x4c)[0x7f7371dae53c]\r\n/usr/lib/x86_64-linux-gnu/libcuda.so.1(+0x30c906)[0x7f731ee39906]\r\n/usr/lib/x86_64-linux-gnu/libcuda.so.1(+0x30c974)[0x7f731ee39974]\r\n/usr/lib/x86_64-linux-gnu/libcuda.so.1(+0x1ef281)[0x7f731ed1c281]\r\n/usr/lib/x86_64-linux-gnu/libcuda.so.1(+0x1c79fb)[0x7f731ecf49fb]\r\n/usr/lib/x86_64-linux-gnu/libcuda.so.1(cuInit+0x4d)[0x7f731ed47abd]\r\n/home/dl-box/miniconda2/envs/onyx/lib/python3.6/site-packages/tensorflow/python/../libtensorflow_framework.so(+0x89b796)[0x7f73268a4796]\r\n/home/dl-box/miniconda2/envs/onyx/lib/python3.6/site-packages/tensorflow/python/../libtensorflow_framework.so(_ZN9perftools8gputools4cuda10CUDADriver4InitEv+0x5d)[0x7f73268a495d]\r\n/home/dl-box/miniconda2/envs/onyx/lib/python3.6/site-packages/tensorflow/python/../libtensorflow_framework.so(_ZNK9perftools8gputools4cuda12CudaPlatform18VisibleDeviceCountEv+0x12)[0x7f73268b48a8]\r\n/home/dl-box/miniconda2/envs/onyx/lib/python3.6/site-packages/tensorflow/python/../libtensorflow_framework.so(_ZN10tensorflow20BaseGPUDeviceFactory17GetValidDeviceIdsERKSsPSt6vectorIiSaIiEE+0xf0)[0x7f73267d86b0]\r\n/home/dl-box/miniconda2/envs/onyx/lib/python3.6/site-packages/tensorflow/python/../libtensorflow_framework.so(_ZN10tensorflow20BaseGPUDeviceFactory13CreateDevicesERKNS_14SessionOptionsERKSsPSt6vectorIPNS_6DeviceESaIS8_EE+0x1b1)[0x7f73267db3b3]\r\n/home/dl-box/miniconda2/envs/onyx/lib/python3.6/site-packages/tensorflow/python/../libtensorflow_framework.so(_ZN10tensorflow13DeviceFactory10AddDevicesERKNS_14SessionOptionsERKSsPSt6vectorIPNS_6DeviceESaIS8_EE+0x159)[0x7f73267f8ddd]\r\n/home/dl-box/miniconda2/envs/onyx/lib/python3.6/site-packages/tensorflow/python/_pywrap_tensorflow_internal.so(_ZN10tensorflow20DirectSessionFactory10NewSessionERKNS_14SessionOptionsE+0x98)[0x7f732a1be5ba]\r\n/home/dl-box/miniconda2/envs/onyx/lib/python3.6/site-packages/tensorflow/python/../libtensorflow_framework.so(_ZN10tensorflow10NewSessionERKNS_14SessionOptionsEPPNS_7SessionE+0xfb)[0x7f732683666c]\r\n/home/dl-box/miniconda2/envs/onyx/lib/python3.6/site-packages/tensorflow/python/_pywrap_tensorflow_internal.so(TF_NewDeprecatedSession+0x21)[0x7f732807e03f]\r\n/home/dl-box/miniconda2/envs/onyx/lib/python3.6/site-packages/tensorflow/python/_pywrap_tensorflow_internal.so(+0xfa3267)[0x7f7327d5e267]\r\n/home/dl-box/miniconda2/envs/onyx/bin/python(_PyCFunction_FastCallDict+0x91)[0x56366192b7d1]\r\n/home/dl-box/miniconda2/envs/onyx/bin/python(+0x19e17c)[0x5636619bb17c]\r\n/home/dl-box/miniconda2/envs/onyx/bin/python(_PyEval_EvalFrameDefault+0x30a)[0x5636619ddbba]\r\n/home/dl-box/miniconda2/envs/onyx/bin/python(+0x197354)[0x5636619b4354]\r\n/home/dl-box/miniconda2/envs/onyx/bin/python(+0x19824f)[0x5636619b524f]\r\n/home/dl-box/miniconda2/envs/onyx/bin/python(+0x19e255)[0x5636619bb255]\r\n/home/dl-box/miniconda2/envs/onyx/bin/python(_PyEval_EvalFrameDefault+0x10b8)[0x5636619de968]\r\n/home/dl-box/miniconda2/envs/onyx/bin/python(+0x1974f6)[0x5636619b44f6]\r\n/home/dl-box/miniconda2/envs/onyx/bin/python(_PyFunction_FastCallDict+0x1bc)[0x5636619b56fc]\r\n/home/dl-box/miniconda2/envs/onyx/bin/python(_PyObject_FastCallDict+0x26f)[0x56366192bc5f]\r\n/home/dl-box/miniconda2/envs/onyx/bin/python(_PyObject_Call_Prepend+0x63)[0x5636619308c3]\r\n/home/dl-box/miniconda2/envs/onyx/bin/python(PyObject_Call+0x3e)[0x56366192b69e]\r\n/home/dl-box/miniconda2/envs/onyx/bin/python(+0x16a80b)[0x56366198780b]\r\n/home/dl-box/miniconda2/envs/onyx/bin/python(+0x19e4b7)[0x5636619bb4b7]\r\n/home/dl-box/miniconda2/envs/onyx/bin/python(_PyObject_FastCallDict+0x8b)[0x56366192ba7b]\r\n/home/dl-box/miniconda2/envs/onyx/bin/python(+0x19e2ce)[0x5636619bb2ce]\r\n/home/dl-box/miniconda2/envs/onyx/bin/python(_PyEval_EvalFrameDefault+0x30a)[0x5636619ddbba]\r\n/home/dl-box/miniconda2/envs/onyx/bin/python(PyEval_EvalCodeEx+0x329)[0x5636619b5d39]\r\n/home/dl-box/miniconda2/envs/onyx/bin/python(PyEval_EvalCode+0x1c)[0x5636619b6adc]\r\n/home/dl-box/miniconda2/envs/onyx/bin/python(+0x214be4)[0x563661a31be4]\r\n/home/dl-box/miniconda2/envs/onyx/bin/python(PyRun_FileExFlags+0xa1)[0x563661a31fe1]\r\n/home/dl-box/miniconda2/envs/onyx/bin/python(PyRun_SimpleFileExFlags+0x1c4)[0x563661a321e4]\r\n/home/dl-box/miniconda2/envs/onyx/bin/python(Py_Main+0x5ff)[0x563661a35cbf]\r\n/home/dl-box/miniconda2/envs/onyx/bin/python(main+0xee)[0x5636618fcdbe]\r\n/lib/x86_64-linux-gnu/libc.so.6(__libc_start_main+0xf0)[0x7f7371d4a830]\r\n/home/dl-box/miniconda2/envs/onyx/bin/python(+0x1c75eb)[0x5636619e45eb]\r\n======= Memory map: ========\r\n56366181d000-563661adb000 r-xp 00000000 08:01 4994230                    /home/dl-box/miniconda2/envs/onyx/bin/python3.6\r\n563661cdb000-563661cde000 r--p 002be000 08:01 4994230                    /home/dl-box/miniconda2/envs/onyx/bin/python3.6\r\n563661cde000-563661d41000 rw-p 002c1000 08:01 4994230                    /home/dl-box/miniconda2/envs/onyx/bin/python3.6\r\n563661d41000-563661d72000 rw-p 00000000 00:00 0 \r\n56366386c000-5636659ec000 rw-p 00000000 00:00 0                          [heap]\r\n7f72b4000000-7f72b4021000 rw-p 00000000 00:00 0 \r\n7f72b4021000-7f72b8000000 ---p 00000000 00:00 0 \r\n.\r\n\r\n7f7370df8000-7f7370dfb000 r-xp 00000000 08:01 4988702                    /home/dl-box/miniconda2/envs/onyx/lib/python3.6/lib-dynload/_heapq.cpython-36m-x86_64-linux-gnu.so\r\n7f7370dfb000-7f7370ffa000 ---p 00003000 08:01 4988702                    /home/dl-box/miniconda2/envs/onyx/lib/python3.6/lib-dynload/_heapq.cpython-36m-x86_64-linux-gnu.so\r\n7f7370ffa000-7f7370ffb000 r--p 00002000 08:01 4988702                    /home/dl-box/miniconda2/envs/onyx/lib/python3.6/lib-dynload/_heapq.cpython-36m-x86_64-linux-gnu.so\r\n7f7370ffb000-7f7370ffd000 rw-p 00003000 08:01 4988702                    /home/dl-box/miniconda2/envs/onyx/lib/python3.6/lib-dynload/_heapq.cpython-36m-x86_64-linux-gnu.so\r\n7f7370ffd000-7f737103d000 rw-p 00000000 00:00 0 \r\n7f737103d000-7f7371412000 r--p 00000000 08:01 1837470                    /usr/lib/locale/locale-archive\r\n7f7371412000-7f737151a000 r-xp 00000000 08:01 131145                     /lib/x86_64-linux-gnu/libm-2.23.so\r\n7f737151a000-7f7371719000 ---p 00108000 08:01 131145                     /lib/x86_64-linux-gnu/libm-2.23.so\r\n7f7371719000-7f737171a000 r--p 00107000 08:01 131145                     /lib/x86_64-linux-gnu/libm-2.23.so\r\n7f737171a000-7f737171b000 rw-p 00108000 08:01 131145                     /lib/x86_64-linux-gnu/libm-2.23.so\r\n7f737171b000-7f7371722000 r-xp 00000000 08:01 131862                     /lib/x86_64-linux-gnu/librt-2.23.so\r\n7f7371722000-7f7371921000 ---p 00007000 08:01 131862                     /lib/x86_64-linux-gnu/librt-2.23.so\r\n7f7371921000-7f7371922000 r--p 00006000 08:01 131862                     /lib/x86_64-linux-gnu/librt-2.23.so\r\n7f7371922000-7f7371923000 rw-p 00007000 08:01 131862                     /lib/x86_64-linux-gnu/librt-2.23.so\r\n7f7371923000-7f7371925000 r-xp 00000000 08:01 131483                     /lib/x86_64-linux-gnu/libutil-2.23.so\r\n7f7371925000-7f7371b24000 ---p 00002000 08:01 131483                     /lib/x86_64-linux-gnu/libutil-2.23.so\r\n7f7371b24000-7f7371b25000 r--p 00001000 08:01 131483                     /lib/x86_64-linux-gnu/libutil-2.23.so\r\n7f7371b25000-7f7371b26000 rw-p 00002000 08:01 131483                     /lib/x86_64-linux-gnu/libutil-2.23.so\r\n7f7371b26000-7f7371b29000 r-xp 00000000 08:01 131431                     /lib/x86_64-linux-gnu/libdl-2.23.so\r\n7f7371b29000-7f7371d28000 ---p 00003000 08:01 131431                     /lib/x86_64-linux-gnu/libdl-2.23.so\r\n7f7371d28000-7f7371d29000 r--p 00002000 08:01 131431                     /lib/x86_64-linux-gnu/libdl-2.23.so\r\n7f7371d29000-7f7371d2a000 rw-p 00003000 08:01 131431                     /lib/x86_64-linux-gnu/libdl-2.23.so\r\n7f7371d2a000-7f7371eea000 r-xp 00000000 08:01 131427                     /lib/x86_64-linux-gnu/libc-2.23.so\r\n7f7371eea000-7f73720ea000 ---p 001c0000 08:01 131427                     /lib/x86_64-linux-gnu/libc-2.23.so\r\n7f73720ea000-7f73720ee000 r--p 001c0000 08:01 131427                     /lib/x86_64-linux-gnu/libc-2.23.so\r\n7f73720ee000-7f73720f0000 rw-p 001c4000 08:01 131427                     /lib/x86_64-linux-gnu/libc-2.23.so\r\n7f73720f0000-7f73720f4000 rw-p 00000000 00:00 0 \r\n7f73720f4000-7f737210c000 r-xp 00000000 08:01 131426                     /lib/x86_64-linux-gnu/libpthread-2.23.so\r\n7f737210c000-7f737230b000 ---p 00018000 08:01 131426                     /lib/x86_64-linux-gnu/libpthread-2.23.so\r\n7f737230b000-7f737230c000 r--p 00017000 08:01 131426                     /lib/x86_64-linux-gnu/libpthread-2.23.so\r\n7f737230c000-7f737230d000 rw-p 00018000 08:01 131426                     /lib/x86_64-linux-gnu/libpthread-2.23.so\r\n7f737230d000-7f7372311000 rw-p 00000000 00:00 0 \r\n7f7372311000-7f7372337000 r-xp 00000000 08:01 131335                     /lib/x86_64-linux-gnu/ld-2.23.so\r\n7f7372344000-7f7372509000 rw-p 00000000 00:00 0 \r\n7f737252d000-7f737252e000 rw-p 00000000 00:00 0 \r\n7f737252e000-7f737252f000 rwxp 00000000 00:00 0 \r\n7f737252f000-7f7372536000 r--s 00000000 08:01 2230848                    /usr/lib/x86_64-linux-gnu/gconv/gconv-modules.cache\r\n7f7372536000-7f7372537000 r--p 00025000 08:01 131335                     /lib/x86_64-linux-gnu/ld-2.23.so\r\n7f7372537000-7f7372538000 rw-p 00026000 08:01 131335                     /lib/x86_64-linux-gnu/ld-2.23.so\r\n7f7372538000-7f7372539000 rw-p 00000000 00:00 0 \r\n7ffdfa56f000-7ffdfa58f000 rwxp 00000000 00:00 0                          [stack]\r\n7ffdfa58f000-7ffdfa590000 rw-p 00000000 00:00 0 \r\n7ffdfa5c0000-7ffdfa5c3000 r--p 00000000 00:00 0                          [vvar]\r\n7ffdfa5c3000-7ffdfa5c5000 r-xp 00000000 00:00 0                          [vdso]\r\nffffffffff600000-ffffffffff601000 r-xp 00000000 00:00 0                  [vsyscall]\r\nAborted (core dumped)"}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/16751", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/16751/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/16751/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/16751/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/16751", "id": 294178144, "node_id": "MDU6SXNzdWUyOTQxNzgxNDQ=", "number": 16751, "title": "CUDA Fail in Tensorflow Inference on Jetson TX2", "user": {"login": "pvaezi", "id": 2073051, "node_id": "MDQ6VXNlcjIwNzMwNTE=", "avatar_url": "https://avatars3.githubusercontent.com/u/2073051?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pvaezi", "html_url": "https://github.com/pvaezi", "followers_url": "https://api.github.com/users/pvaezi/followers", "following_url": "https://api.github.com/users/pvaezi/following{/other_user}", "gists_url": "https://api.github.com/users/pvaezi/gists{/gist_id}", "starred_url": "https://api.github.com/users/pvaezi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pvaezi/subscriptions", "organizations_url": "https://api.github.com/users/pvaezi/orgs", "repos_url": "https://api.github.com/users/pvaezi/repos", "events_url": "https://api.github.com/users/pvaezi/events{/privacy}", "received_events_url": "https://api.github.com/users/pvaezi/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 299643928, "node_id": "MDU6TGFiZWwyOTk2NDM5Mjg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:contributions%20welcome", "name": "stat:contributions welcome", "color": "f4b400", "default": false, "description": ""}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2018-02-04T07:49:41Z", "updated_at": "2018-04-17T15:04:11Z", "closed_at": null, "author_association": "NONE", "body": "Hi,\r\n\r\nI am getting CUDA fail error for model inference on Jetson TX2 aarch64. I have built the TF source (Version 1.3) for python 3.5 from this github repo:\r\nhttps://github.com/jetsonhacks/installTensorFlowTX2\r\n\r\n- Ubuntu 16.04\r\n- Bazel 0.5.2\r\n- CUDA 8 \r\n- cuDNN 6. \r\n\r\nThe relevant discussion on NVIDIA dev forum directed me to post this here:\r\nhttps://devtalk.nvidia.com/default/topic/1029256/jetson-tx2/cuda-fail-when-running-tensorflow-inference/post/5236860/\r\n\r\nTF does work for smaller sized models, but for larger sized models the inference fails. I appreciate if you can please take look at this.\r\n\r\n"}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/16689", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/16689/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/16689/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/16689/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/16689", "id": 293829720, "node_id": "MDU6SXNzdWUyOTM4Mjk3MjA=", "number": 16689, "title": "Feature request: Support SparseTensor in Dataset.from_generator ", "user": {"login": "rasmusbergpalm", "id": 206013, "node_id": "MDQ6VXNlcjIwNjAxMw==", "avatar_url": "https://avatars0.githubusercontent.com/u/206013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rasmusbergpalm", "html_url": "https://github.com/rasmusbergpalm", "followers_url": "https://api.github.com/users/rasmusbergpalm/followers", "following_url": "https://api.github.com/users/rasmusbergpalm/following{/other_user}", "gists_url": "https://api.github.com/users/rasmusbergpalm/gists{/gist_id}", "starred_url": "https://api.github.com/users/rasmusbergpalm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rasmusbergpalm/subscriptions", "organizations_url": "https://api.github.com/users/rasmusbergpalm/orgs", "repos_url": "https://api.github.com/users/rasmusbergpalm/repos", "events_url": "https://api.github.com/users/rasmusbergpalm/events{/privacy}", "received_events_url": "https://api.github.com/users/rasmusbergpalm/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 299643928, "node_id": "MDU6TGFiZWwyOTk2NDM5Mjg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:contributions%20welcome", "name": "stat:contributions welcome", "color": "f4b400", "default": false, "description": ""}, {"id": 473173272, "node_id": "MDU6TGFiZWw0NzMxNzMyNzI=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:feature", "name": "type:feature", "color": "159b2e", "default": false, "description": ""}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2018-02-02T09:48:22Z", "updated_at": "2019-10-04T22:51:14Z", "closed_at": null, "author_association": "NONE", "body": "### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**: No\r\n\r\n== cat /etc/issue ===============================================\r\nDarwin c02ql2p2fvh7-c 16.7.0 Darwin Kernel Version 16.7.0: Mon Nov 13 21:56:25 PST 2017; root:xnu-3789.72.11~1/RELEASE_X86_64 x86_64\r\nMac OS X 10.12.6\r\n\r\n== are we in docker =============================================\r\nNo\r\n\r\n== compiler =====================================================\r\nApple LLVM version 9.0.0 (clang-900.0.39.2)\r\nTarget: x86_64-apple-darwin16.7.0\r\nThread model: posix\r\nInstalledDir: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin\r\n\r\n== uname -a =====================================================\r\nDarwin c02ql2p2fvh7-c 16.7.0 Darwin Kernel Version 16.7.0: Mon Nov 13 21:56:25 PST 2017; root:xnu-3789.72.11~1/RELEASE_X86_64 x86_64\r\n\r\n== check pips ===================================================\r\nnumpy (1.14.0)\r\nprotobuf (3.5.1)\r\ntensorflow (1.5.0)\r\ntensorflow-tensorboard (1.5.0)\r\n\r\n== check for virtualenv =========================================\r\nFalse\r\n\r\n== tensorflow import ============================================\r\ntf.VERSION = 1.5.0\r\ntf.GIT_VERSION = v1.5.0-0-g37aa430d84\r\ntf.COMPILER_VERSION = v1.5.0-0-g37aa430d84\r\nSanity check: array([1], dtype=int32)\r\n/Users/rbp/anaconda/envs/python3/lib/python3.5/importlib/_bootstrap.py:222: RuntimeWarning: compiletime version 3.6 of module 'tensorflow.python.framework.fast_tensor_util' does not match runtime version 3.5\r\n  return f(*args, **kwds)\r\n/Users/rbp/anaconda/envs/python3/lib/python3.5/site-packages/h5py/__init__.py:36: FutureWarning: Conversion of the second argument of issubdtype from `float` to `np.floating` is deprecated. In future, it will be treated as `np.float64 == np.dtype(float).type`.\r\n  from ._conv import register_converters as _register_converters\r\n\r\n== env ==========================================================\r\nLD_LIBRARY_PATH is unset\r\nDYLD_LIBRARY_PATH is unset\r\n\r\n== nvidia-smi ===================================================\r\n./tf_env_collect.sh: line 105: nvidia-smi: command not found\r\n\r\n- **Exact command to reproduce**:\r\n\r\n```\r\n        def generator():\r\n            indices = [(1, 1)]\r\n            values = (1.,)\r\n            shape = (3, 3)\r\n            while True:\r\n                yield tf.SparseTensor(indices, values, shape)\r\n\r\n        iterator = tf.data.Dataset.from_generator(generator, tf.float32, (3,3)).make_one_shot_iterator()\r\n\r\n        sample = iterator.get_next()\r\n        ss = tf.sparse_reduce_sum(sample)\r\n        with tf.Session() as sess:\r\n            _ss = sess.run(ss)\r\n```\r\n\r\n### Describe the problem\r\n\r\nAbove code throws `AttributeError: 'Tensor' object has no attribute 'indices'`\r\n\r\nIt seems the `from_generator` always expects Tensors as output."}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/16641", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/16641/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/16641/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/16641/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/16641", "id": 293394306, "node_id": "MDU6SXNzdWUyOTMzOTQzMDY=", "number": 16641, "title": "ImportError after compiling", "user": {"login": "webprogrammingsolutions", "id": 5549215, "node_id": "MDQ6VXNlcjU1NDkyMTU=", "avatar_url": "https://avatars2.githubusercontent.com/u/5549215?v=4", "gravatar_id": "", "url": "https://api.github.com/users/webprogrammingsolutions", "html_url": "https://github.com/webprogrammingsolutions", "followers_url": "https://api.github.com/users/webprogrammingsolutions/followers", "following_url": "https://api.github.com/users/webprogrammingsolutions/following{/other_user}", "gists_url": "https://api.github.com/users/webprogrammingsolutions/gists{/gist_id}", "starred_url": "https://api.github.com/users/webprogrammingsolutions/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/webprogrammingsolutions/subscriptions", "organizations_url": "https://api.github.com/users/webprogrammingsolutions/orgs", "repos_url": "https://api.github.com/users/webprogrammingsolutions/repos", "events_url": "https://api.github.com/users/webprogrammingsolutions/events{/privacy}", "received_events_url": "https://api.github.com/users/webprogrammingsolutions/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 299643928, "node_id": "MDU6TGFiZWwyOTk2NDM5Mjg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:contributions%20welcome", "name": "stat:contributions welcome", "color": "f4b400", "default": false, "description": ""}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-02-01T03:46:41Z", "updated_at": "2018-02-24T07:02:14Z", "closed_at": null, "author_association": "NONE", "body": "### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**:\r\n\r\nYes. I followed this guide in an attempt to gain GPU support under macOS. (https://tweakmind.com/tensorflow-1-5-macos-10-13-2/). The code changes are made by these commands:\r\n\r\nsed -i.bu 's/__align__(sizeof(T)) //g' tensorflow/core/kernels/depthwise_conv_op_gpu.cu.cc\r\nsed -i.bu 's/__align__(sizeof(T)) //g' tensorflow/core/kernels/split_lib_gpu.cu.cc\r\nsed -i.bu 's/__align__(sizeof(T)) //g' tensorflow/core/kernels/concat_lib_gpu_impl.cu.cc\r\n\r\n\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**:\r\nmacOS 10.13.2 High Sierra\r\n\r\n- **TensorFlow installed from (source or binary)**:\r\nSource\r\n\r\n- **TensorFlow version (use command below)**:\r\n1.5\r\n\r\n- **Python version**: \r\n3.6.4\r\n\r\n- **Bazel version (if compiling from source)**:\r\n0.9.0-homebrew\r\n\r\n- **GCC/Compiler version (if compiling from source)**:\r\nxcode 8.3.3\r\n\r\n- **CUDA/cuDNN version**:\r\n9.1 / 7\r\n\r\n- **GPU model and memory**:\r\nNvidia GTX 1080 Ti\r\n\r\n- **Exact command to reproduce**:\r\npython\r\nimport tensorflow as tf\r\n\r\n\r\n### Describe the problem\r\nAfter following the guide at the URL above, building w/bazel and creating the wheel, I installed the tensorflow package with pip3 install --upgrade --force-reinstall <package name> and was successful. However, when I try to import tensorflow, I get an ImportError, Symbol not found: _PyCObject_Type\r\n\r\n### Source code / logs\r\n\r\npython -c \"import tensorflow as tf; print(tf.GIT_VERSION, tf.VERSION)\"\r\nTraceback (most recent call last):\r\n  File \"/Library/Frameworks/Python.framework/Versions/3.6/lib/python3.6/site-packages/tensorflow/python/pywrap_tensorflow.py\", line 58, in <module>\r\n    from tensorflow.python.pywrap_tensorflow_internal import *\r\n  File \"/Library/Frameworks/Python.framework/Versions/3.6/lib/python3.6/site-packages/tensorflow/python/pywrap_tensorflow_internal.py\", line 28, in <module>\r\n    _pywrap_tensorflow_internal = swig_import_helper()\r\n  File \"/Library/Frameworks/Python.framework/Versions/3.6/lib/python3.6/site-packages/tensorflow/python/pywrap_tensorflow_internal.py\", line 24, in swig_import_helper\r\n    _mod = imp.load_module('_pywrap_tensorflow_internal', fp, pathname, description)\r\n  File \"/Library/Frameworks/Python.framework/Versions/3.6/lib/python3.6/imp.py\", line 243, in load_module\r\n    return load_dynamic(name, filename, file)\r\n  File \"/Library/Frameworks/Python.framework/Versions/3.6/lib/python3.6/imp.py\", line 343, in load_dynamic\r\n    return _load(spec)\r\nImportError: dlopen(/Library/Frameworks/Python.framework/Versions/3.6/lib/python3.6/site-packages/tensorflow/python/_pywrap_tensorflow_internal.so, 6): Symbol not found: _PyCObject_Type\r\n  Referenced from: /Library/Frameworks/Python.framework/Versions/3.6/lib/python3.6/site-packages/tensorflow/python/_pywrap_tensorflow_internal.so\r\n  Expected in: flat namespace\r\n in /Library/Frameworks/Python.framework/Versions/3.6/lib/python3.6/site-packages/tensorflow/python/_pywrap_tensorflow_internal.so\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTraceback (most recent call last):\r\n  File \"<string>\", line 1, in <module>\r\n  File \"/Library/Frameworks/Python.framework/Versions/3.6/lib/python3.6/site-packages/tensorflow/__init__.py\", line 24, in <module>\r\n    from tensorflow.python import *\r\n  File \"/Library/Frameworks/Python.framework/Versions/3.6/lib/python3.6/site-packages/tensorflow/python/__init__.py\", line 49, in <module>\r\n    from tensorflow.python import pywrap_tensorflow\r\n  File \"/Library/Frameworks/Python.framework/Versions/3.6/lib/python3.6/site-packages/tensorflow/python/pywrap_tensorflow.py\", line 74, in <module>\r\n    raise ImportError(msg)\r\nImportError: Traceback (most recent call last):\r\n  File \"/Library/Frameworks/Python.framework/Versions/3.6/lib/python3.6/site-packages/tensorflow/python/pywrap_tensorflow.py\", line 58, in <module>\r\n    from tensorflow.python.pywrap_tensorflow_internal import *\r\n  File \"/Library/Frameworks/Python.framework/Versions/3.6/lib/python3.6/site-packages/tensorflow/python/pywrap_tensorflow_internal.py\", line 28, in <module>\r\n    _pywrap_tensorflow_internal = swig_import_helper()\r\n  File \"/Library/Frameworks/Python.framework/Versions/3.6/lib/python3.6/site-packages/tensorflow/python/pywrap_tensorflow_internal.py\", line 24, in swig_import_helper\r\n    _mod = imp.load_module('_pywrap_tensorflow_internal', fp, pathname, description)\r\n  File \"/Library/Frameworks/Python.framework/Versions/3.6/lib/python3.6/imp.py\", line 243, in load_module\r\n    return load_dynamic(name, filename, file)\r\n  File \"/Library/Frameworks/Python.framework/Versions/3.6/lib/python3.6/imp.py\", line 343, in load_dynamic\r\n    return _load(spec)\r\nImportError: dlopen(/Library/Frameworks/Python.framework/Versions/3.6/lib/python3.6/site-packages/tensorflow/python/_pywrap_tensorflow_internal.so, 6): Symbol not found: _PyCObject_Type\r\n  Referenced from: /Library/Frameworks/Python.framework/Versions/3.6/lib/python3.6/site-packages/tensorflow/python/_pywrap_tensorflow_internal.so\r\n  Expected in: flat namespace\r\n in /Library/Frameworks/Python.framework/Versions/3.6/lib/python3.6/site-packages/tensorflow/python/_pywrap_tensorflow_internal.so\r\n\r\n\r\nFailed to load the native TensorFlow runtime.\r\n"}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/16629", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/16629/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/16629/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/16629/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/16629", "id": 293312351, "node_id": "MDU6SXNzdWUyOTMzMTIzNTE=", "number": 16629, "title": "How to get RunMetadata for tf.data.Dataset ops?", "user": {"login": "sleighsoft", "id": 9438971, "node_id": "MDQ6VXNlcjk0Mzg5NzE=", "avatar_url": "https://avatars3.githubusercontent.com/u/9438971?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sleighsoft", "html_url": "https://github.com/sleighsoft", "followers_url": "https://api.github.com/users/sleighsoft/followers", "following_url": "https://api.github.com/users/sleighsoft/following{/other_user}", "gists_url": "https://api.github.com/users/sleighsoft/gists{/gist_id}", "starred_url": "https://api.github.com/users/sleighsoft/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sleighsoft/subscriptions", "organizations_url": "https://api.github.com/users/sleighsoft/orgs", "repos_url": "https://api.github.com/users/sleighsoft/repos", "events_url": "https://api.github.com/users/sleighsoft/events{/privacy}", "received_events_url": "https://api.github.com/users/sleighsoft/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 299643928, "node_id": "MDU6TGFiZWwyOTk2NDM5Mjg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:contributions%20welcome", "name": "stat:contributions welcome", "color": "f4b400", "default": false, "description": ""}, {"id": 473173272, "node_id": "MDU6TGFiZWw0NzMxNzMyNzI=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:feature", "name": "type:feature", "color": "159b2e", "default": false, "description": ""}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-01-31T21:09:45Z", "updated_at": "2018-02-03T02:07:25Z", "closed_at": null, "author_association": "CONTRIBUTOR", "body": "Tensorflow version: 1.5 (pip)\r\n\r\nI am interested in the runtime of ops when using the `tf.data.Dataset` api.\r\nInformation like how long shuffle, repeat or batch took.\r\nWhen running the code below and visualizing it in tensoboard the intersting ops are marked as \"unused substructure\".\r\n\r\nIs my approach the right one?\r\nI find it a little confusing that they show up, but are not traceable.\r\n\r\nExample code\r\n```python\r\nimport numpy as np\r\nimport tensorflow as tf\r\n\r\ntf.set_random_seed(0)\r\n\r\ndata = np.array([[10] * 10] * 3 + [[4] * 10]).astype(np.float32)\r\n\r\nwith tf.Graph().as_default():\r\n  dataset = tf.data.Dataset.from_tensor_slices(data)\r\n  sess = tf.Session()\r\n\r\n  dataset = dataset.cache()\r\n  dataset = dataset.shuffle(10, seed=0)\r\n  dataset = dataset.repeat(5)\r\n  dataset = dataset.batch(2)\r\n\r\n  iterator = tf.data.Iterator.from_structure(\r\n      output_types=tf.float32)\r\n  batch = iterator.get_next()\r\n\r\n  init1 = iterator.make_initializer(dataset)\r\n\r\n  sess.run(init1)\r\n\r\n  writer = tf.summary.FileWriter('tmp/datasettest/', sess.graph)\r\n  run_options = tf.RunOptions(trace_level=tf.RunOptions.FULL_TRACE)\r\n\r\n  i = 0\r\n  while True:\r\n    try:\r\n      run_metadata = tf.RunMetadata()\r\n      sess.run(batch, options=run_options, run_metadata=run_metadata)\r\n      writer.add_run_metadata(run_metadata, 'step{}'.format(i))\r\n      i += 1\r\n    except tf.errors.OutOfRangeError as ex:\r\n      break\r\n    except Exception as ex:\r\n      raise ex\r\n```\r\nThis will result in the following visualization in Tensorboard.\r\n\r\n![image](https://user-images.githubusercontent.com/9438971/35647492-054aa5b0-06d3-11e8-8394-9b821fb79603.png)\r\n"}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/16594", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/16594/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/16594/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/16594/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/16594", "id": 292890340, "node_id": "MDU6SXNzdWUyOTI4OTAzNDA=", "number": 16594, "title": "Layers created with tf.layers not listed with tf.contrib.framework.get_model_variables", "user": {"login": "Tauranis", "id": 9088856, "node_id": "MDQ6VXNlcjkwODg4NTY=", "avatar_url": "https://avatars3.githubusercontent.com/u/9088856?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Tauranis", "html_url": "https://github.com/Tauranis", "followers_url": "https://api.github.com/users/Tauranis/followers", "following_url": "https://api.github.com/users/Tauranis/following{/other_user}", "gists_url": "https://api.github.com/users/Tauranis/gists{/gist_id}", "starred_url": "https://api.github.com/users/Tauranis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Tauranis/subscriptions", "organizations_url": "https://api.github.com/users/Tauranis/orgs", "repos_url": "https://api.github.com/users/Tauranis/repos", "events_url": "https://api.github.com/users/Tauranis/events{/privacy}", "received_events_url": "https://api.github.com/users/Tauranis/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 299643928, "node_id": "MDU6TGFiZWwyOTk2NDM5Mjg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:contributions%20welcome", "name": "stat:contributions welcome", "color": "f4b400", "default": false, "description": ""}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2018-01-30T18:32:03Z", "updated_at": "2018-02-23T23:47:28Z", "closed_at": null, "author_association": "NONE", "body": "### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**: Yes\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**: Linux Ubuntu 16.04\r\n- **TensorFlow installed from (source or binary)**: binary\r\n- **TensorFlow version (use command below)**: 1.4.0\r\n- **Python version**: 2.7\r\n- **Bazel version (if compiling from source)**: Not Applicable\r\n- **GCC/Compiler version (if compiling from source)**: Not Applicable\r\n- **CUDA/cuDNN version**: 8/6\r\n- **GPU model and memory**: GeForce 940MX\r\n\r\n### Describe the problem\r\nCurrently I'm using [slim models](https://github.com/tensorflow/models/tree/master/research/slim#pre-trained-models) to build my networks, but for extra layers I'm using the [tf.layers](https://www.tensorflow.org/api_docs/python/tf/layers) API. When I try to retrieve the list of variables with the function [`tf.contrib.framework.get_model_variables`](https://www.tensorflow.org/versions/master/api_docs/python/tf/contrib/framework/get_model_variables)\r\nonly the layers created inside slim models are retrieved.\r\n\r\n### Minimal code to reproduce the issue\r\n\r\n```python\r\nimport tensorflow as tf\r\nx = tf.random_normal([2,5],name='x')\r\ny = tf.contrib.layers.fully_connected(x,10,scope='Contrib_Fully_Connected') # Retrieved\r\nz = tf.layers.dense(x,10, name='Layers_Fully_Connected') # Not Retrieved\r\nprint(tf.contrib.framework.get_model_variables())\r\n```\r\n\r\nOutput:\r\n\r\n```bash\r\n[<tf.Variable 'Contrib_Fully_Connected/weights:0' shape=(5, 10) dtype=float32_ref>, <tf.Variable 'Contrib_Fully_Connected/biases:0' shape=(10,) dtype=float32_ref>]\r\n```\r\n\r\n### Workaround:\r\n\r\nUse [`tf.get_collection`](https://www.tensorflow.org/api_docs/python/tf/get_collection)\r\n\r\n```python\r\nimport tensorflow as tf\r\nx = tf.random_normal([2,5],name='x')\r\ny = tf.contrib.layers.fully_connected(x,10,scope='Contrib_Fully_Connected') # Retrieved\r\nz = tf.layers.dense(x,10, name='Layers_Fully_Connected') # Not Retrieved\r\nprint(tf.get_collection(tf.GraphKeys.GLOBAL_VARIABLES))\r\n```\r\nthe output is:\r\n```bash\r\n[<tf.Variable 'Contrib_Fully_Connected/weights:0' shape=(5, 10) dtype=float32_ref>,\r\n <tf.Variable 'Contrib_Fully_Connected/biases:0' shape=(10,) dtype=float32_ref>,\r\n <tf.Variable 'Layers_Fully_Connected/kernel:0' shape=(5, 10) dtype=float32_ref>,\r\n <tf.Variable 'Layers_Fully_Connected/bias:0' shape=(10,) dtype=float32_ref>]\r\n```\r\n\r\nIs it worth to bring this issue as a bug and improve the funcionality of `tf.contrib.framework.get_model_variables` or will this contrib function be discontinued?"}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/16593", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/16593/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/16593/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/16593/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/16593", "id": 292876686, "node_id": "MDU6SXNzdWUyOTI4NzY2ODY=", "number": 16593, "title": "contrib.tfgan: batch_norm is_training=True for both training and inferencing, non-slim version", "user": {"login": "nxphi47", "id": 19323568, "node_id": "MDQ6VXNlcjE5MzIzNTY4", "avatar_url": "https://avatars3.githubusercontent.com/u/19323568?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nxphi47", "html_url": "https://github.com/nxphi47", "followers_url": "https://api.github.com/users/nxphi47/followers", "following_url": "https://api.github.com/users/nxphi47/following{/other_user}", "gists_url": "https://api.github.com/users/nxphi47/gists{/gist_id}", "starred_url": "https://api.github.com/users/nxphi47/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nxphi47/subscriptions", "organizations_url": "https://api.github.com/users/nxphi47/orgs", "repos_url": "https://api.github.com/users/nxphi47/repos", "events_url": "https://api.github.com/users/nxphi47/events{/privacy}", "received_events_url": "https://api.github.com/users/nxphi47/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": {"login": "joel-shor", "id": 6020988, "node_id": "MDQ6VXNlcjYwMjA5ODg=", "avatar_url": "https://avatars1.githubusercontent.com/u/6020988?v=4", "gravatar_id": "", "url": "https://api.github.com/users/joel-shor", "html_url": "https://github.com/joel-shor", "followers_url": "https://api.github.com/users/joel-shor/followers", "following_url": "https://api.github.com/users/joel-shor/following{/other_user}", "gists_url": "https://api.github.com/users/joel-shor/gists{/gist_id}", "starred_url": "https://api.github.com/users/joel-shor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/joel-shor/subscriptions", "organizations_url": "https://api.github.com/users/joel-shor/orgs", "repos_url": "https://api.github.com/users/joel-shor/repos", "events_url": "https://api.github.com/users/joel-shor/events{/privacy}", "received_events_url": "https://api.github.com/users/joel-shor/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "joel-shor", "id": 6020988, "node_id": "MDQ6VXNlcjYwMjA5ODg=", "avatar_url": "https://avatars1.githubusercontent.com/u/6020988?v=4", "gravatar_id": "", "url": "https://api.github.com/users/joel-shor", "html_url": "https://github.com/joel-shor", "followers_url": "https://api.github.com/users/joel-shor/followers", "following_url": "https://api.github.com/users/joel-shor/following{/other_user}", "gists_url": "https://api.github.com/users/joel-shor/gists{/gist_id}", "starred_url": "https://api.github.com/users/joel-shor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/joel-shor/subscriptions", "organizations_url": "https://api.github.com/users/joel-shor/orgs", "repos_url": "https://api.github.com/users/joel-shor/repos", "events_url": "https://api.github.com/users/joel-shor/events{/privacy}", "received_events_url": "https://api.github.com/users/joel-shor/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 15, "created_at": "2018-01-30T17:48:55Z", "updated_at": "2018-12-13T18:57:45Z", "closed_at": null, "author_association": "NONE", "body": "Hi, I am exploring contrib.tfgan, such a great work @joel-shor .\r\n\r\n### batch_norm is_training=True for both training and inferencing\r\nHowever, when I see the example in source code of both generator and discriminator of MNIST, as below.\r\n\r\nhttps://github.com/tensorflow/models/blob/master/research/gan/tutorial.ipynb\r\n\r\n`with slim.arg_scope(\r\n        [layers.fully_connected, layers.conv2d_transpose],\r\n        activation_fn=tf.nn.relu, normalizer_fn=layers.batch_norm,\r\n        weights_regularizer=layers.l2_regularizer(weight_decay)):\r\n        net = layers.fully_connected(noise, 1024)\r\n        net = layers.fully_connected(net, 7 * 7 * 256)\r\n        net = tf.reshape(net, [-1, 7, 7, 256])`\r\n\r\nThe default argument of layers.batch_norm is set to True, and this gen_fn and dis_fn are used for  both training phase and generating test images phase (inferencing).\r\n\r\nIs it a bug or it is intended? If it is intended, can you explain why is that?\r\n\r\n### non-slim implementation\r\nIn addition, I don't really like slim, and I believe some people don't either. Can I use other model construction libraries like tf.layers or keras to build the network. Is tfslim a must?\r\n\r\nThank you,\r\n\r\n### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**:\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**: MacOS\r\n- **TensorFlow installed from (source or binary)**:source\r\n- **TensorFlow version (use command below)**:1.5 and 1.4.1\r\n- **Python version**: 3.6\r\n- **Bazel version (if compiling from source)**: 0.7\r\n- **GCC/Compiler version (if compiling from source)**: 4.2\r\n- **CUDA/cuDNN version**:NA (CPU)\r\n- **GPU model and memory**:NA\r\n- **Exact command to reproduce**:"}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/16587", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/16587/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/16587/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/16587/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/16587", "id": 292832754, "node_id": "MDU6SXNzdWUyOTI4MzI3NTQ=", "number": 16587, "title": "Feature deprecated in h5py is used in TF1.5", "user": {"login": "feranick", "id": 35967, "node_id": "MDQ6VXNlcjM1OTY3", "avatar_url": "https://avatars1.githubusercontent.com/u/35967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/feranick", "html_url": "https://github.com/feranick", "followers_url": "https://api.github.com/users/feranick/followers", "following_url": "https://api.github.com/users/feranick/following{/other_user}", "gists_url": "https://api.github.com/users/feranick/gists{/gist_id}", "starred_url": "https://api.github.com/users/feranick/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/feranick/subscriptions", "organizations_url": "https://api.github.com/users/feranick/orgs", "repos_url": "https://api.github.com/users/feranick/repos", "events_url": "https://api.github.com/users/feranick/events{/privacy}", "received_events_url": "https://api.github.com/users/feranick/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 299643928, "node_id": "MDU6TGFiZWwyOTk2NDM5Mjg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:contributions%20welcome", "name": "stat:contributions welcome", "color": "f4b400", "default": false, "description": ""}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2018-01-30T15:48:47Z", "updated_at": "2018-04-12T18:25:07Z", "closed_at": null, "author_association": "NONE", "body": "### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**: No\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**: Linux, OS X\r\n- **TensorFlow installed from (source or binary)**: source and binary\r\n- **TensorFlow version (use command below)**: 1.5\r\n- **Python version**: 3.6.4\r\n- **Bazel version (if compiling from source)**: 0.9\r\n- **GCC/Compiler version (if compiling from source)**: \r\n- **CUDA/cuDNN version**: 9.0 - 7.0\r\n- **GPU model and memory**: GTX1060, GTX 1050Ti \r\n- **Exact command to reproduce**:\r\n`sudo pip3 install h5py`\r\nrun python3, from there, type:\r\n`import tensorflow as tf`\r\n\r\n\r\n### Describe the problem\r\nA feature of h5py used in TF 1.5 is deprecated, in particular: Conversion of the second argument of issubdtype from `float` to `np.floating` is deprecated.\r\n\r\n### Source code / logs\r\nWarning message: FutureWarning: Conversion of the second argument of issubdtype from `float` to `np.floating` is deprecated. In future, it will be treated as `np.float64 == np.dtype(float).type`.\r\n  from ._conv import register_converters as _register_converters\r\n"}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/16576", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/16576/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/16576/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/16576/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/16576", "id": 292710497, "node_id": "MDU6SXNzdWUyOTI3MTA0OTc=", "number": 16576, "title": "Feature request: tf.estimator hyperparameter tuning", "user": {"login": "carlthome", "id": 1595907, "node_id": "MDQ6VXNlcjE1OTU5MDc=", "avatar_url": "https://avatars3.githubusercontent.com/u/1595907?v=4", "gravatar_id": "", "url": "https://api.github.com/users/carlthome", "html_url": "https://github.com/carlthome", "followers_url": "https://api.github.com/users/carlthome/followers", "following_url": "https://api.github.com/users/carlthome/following{/other_user}", "gists_url": "https://api.github.com/users/carlthome/gists{/gist_id}", "starred_url": "https://api.github.com/users/carlthome/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/carlthome/subscriptions", "organizations_url": "https://api.github.com/users/carlthome/orgs", "repos_url": "https://api.github.com/users/carlthome/repos", "events_url": "https://api.github.com/users/carlthome/events{/privacy}", "received_events_url": "https://api.github.com/users/carlthome/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 299643928, "node_id": "MDU6TGFiZWwyOTk2NDM5Mjg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:contributions%20welcome", "name": "stat:contributions welcome", "color": "f4b400", "default": false, "description": ""}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 11, "created_at": "2018-01-30T09:31:55Z", "updated_at": "2018-08-27T03:19:04Z", "closed_at": null, "author_association": "CONTRIBUTOR", "body": "I'm making an issue here because I'm sure this is being worked on somewhere in this huge repo and I've failed to find it by search.\r\n\r\nAlmost all models have hyperparameters that cannot be set by gradient descent (number of layers, for example). These needs to be tuned, preferably programatically with a smart strategy.\r\n\r\n**What's the canonical way of doing hyperparameter tuning with the tf.estimator API?**\r\n\r\n(also, how can we do early stopping with tf.estimator?)\r\n\r\nI'm currently wrapping around scikit-optimize which is ok, but then I'll never be able to run parallel experiments across workers, and it's a bit tricky to know if the hyperparameters will lead to OOM aside from using tf.profile.\r\n\r\n```python\r\nimport os\r\n\r\nfrom skopt import gp_minimize\r\nfrom skopt.space import Real, Categorical, Integer\r\nfrom skopt.utils import use_named_args\r\n\r\nlogdir = 'tensorboard/'\r\nspace = [\r\n    Real(0.0, 0.1, name='learning_rate'),\r\n    Categorical([True, False], name='skip_connections'),\r\n    Integer(1, 9, name='layers')]\r\n\r\n\r\n@use_named_args(space)\r\ndef score(**params):\r\n    model_dir = os.path.join(logdir, str(params))\r\n    estimator = tf.estimator.Estimator(model_fn, model_dir, params=params)\r\n    trainspec = tf.estimator.TrainSpec(train_input_fn)\r\n    evalspec = tf.estimator.EvalSpec(eval_input_fn)\r\n    try:\r\n        tf.estimator.train_and_evaluate(estimator, trainspec, evalspec)\r\n        metrics = estimator.evaluate(test_input_fn)\r\n        return metrics['loss']\r\n    except (tf.errors.ResourceExhaustedError, tf.train.NanLossDuringTrainingError):\r\n        return 1e9\r\n\r\n\r\ngp_minimize(score, space)\r\n```"}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/16523", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/16523/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/16523/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/16523/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/16523", "id": 292227744, "node_id": "MDU6SXNzdWUyOTIyMjc3NDQ=", "number": 16523, "title": "Feature request: tf.Print should either print (not log), or accept a log level", "user": {"login": "nikhilk", "id": 14608, "node_id": "MDQ6VXNlcjE0NjA4", "avatar_url": "https://avatars0.githubusercontent.com/u/14608?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikhilk", "html_url": "https://github.com/nikhilk", "followers_url": "https://api.github.com/users/nikhilk/followers", "following_url": "https://api.github.com/users/nikhilk/following{/other_user}", "gists_url": "https://api.github.com/users/nikhilk/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikhilk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikhilk/subscriptions", "organizations_url": "https://api.github.com/users/nikhilk/orgs", "repos_url": "https://api.github.com/users/nikhilk/repos", "events_url": "https://api.github.com/users/nikhilk/events{/privacy}", "received_events_url": "https://api.github.com/users/nikhilk/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 299643928, "node_id": "MDU6TGFiZWwyOTk2NDM5Mjg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:contributions%20welcome", "name": "stat:contributions welcome", "color": "f4b400", "default": false, "description": ""}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2018-01-28T18:45:30Z", "updated_at": "2018-02-06T07:28:08Z", "closed_at": null, "author_association": "NONE", "body": "### System information\r\n- **Have I written custom code**: no\r\n- **OS Platform and Distribution**: Linux Ubuntu 16.04\r\n- **TensorFlow installed from**: binary\r\n- **TensorFlow version**: 1.4.1\r\n- **Python version**: 2.7.12\r\n- **Bazel version (if compiling from source)**: n/a\r\n- **GCC/Compiler version (if compiling from source)**: n/a\r\n- **CUDA/cuDNN version**: n/a\r\n- **GPU model and memory**: n/a\r\n- **Exact command to reproduce**: n/a\r\n\r\n### Feature Request\r\nCurrently tf.Print produces INFO logs.\r\nIf log level is set to get rid of INFO logs (given the noise level), it renders tf.Print as non-functional.\r\n\r\nIt would be nice to have tf.Print work either by making it actually work like print(), i.e. it is not a mechanism to generate logs, or if it should remain that way, then have it accept a log level optional parameter."}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/16518", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/16518/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/16518/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/16518/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/16518", "id": 292217227, "node_id": "MDU6SXNzdWUyOTIyMTcyMjc=", "number": 16518, "title": "./configure [--help|-h] does not work", "user": {"login": "alexanderkjeldaas", "id": 339369, "node_id": "MDQ6VXNlcjMzOTM2OQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/339369?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexanderkjeldaas", "html_url": "https://github.com/alexanderkjeldaas", "followers_url": "https://api.github.com/users/alexanderkjeldaas/followers", "following_url": "https://api.github.com/users/alexanderkjeldaas/following{/other_user}", "gists_url": "https://api.github.com/users/alexanderkjeldaas/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexanderkjeldaas/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexanderkjeldaas/subscriptions", "organizations_url": "https://api.github.com/users/alexanderkjeldaas/orgs", "repos_url": "https://api.github.com/users/alexanderkjeldaas/repos", "events_url": "https://api.github.com/users/alexanderkjeldaas/events{/privacy}", "received_events_url": "https://api.github.com/users/alexanderkjeldaas/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 299643928, "node_id": "MDU6TGFiZWwyOTk2NDM5Mjg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:contributions%20welcome", "name": "stat:contributions welcome", "color": "f4b400", "default": false, "description": ""}, {"id": 473173351, "node_id": "MDU6TGFiZWw0NzMxNzMzNTE=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:build/install", "name": "type:build/install", "color": "159b2e", "default": false, "description": ""}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-01-28T16:23:25Z", "updated_at": "2018-01-30T05:34:54Z", "closed_at": null, "author_association": "NONE", "body": "\r\n```\r\n./configure --help\r\n```\r\n\r\nstarts some interactive configuration.\r\n\r\nIt should output a list of possible configuration options or indicate where to find more information.\r\n\r\nIt should *not* start interactive configuration."}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/16466", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/16466/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/16466/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/16466/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/16466", "id": 291995940, "node_id": "MDU6SXNzdWUyOTE5OTU5NDA=", "number": 16466, "title": "[Feature request] Adding a PR curves to canned estimators for (binary) classifiers", "user": {"login": "eisenjulian", "id": 7776575, "node_id": "MDQ6VXNlcjc3NzY1NzU=", "avatar_url": "https://avatars0.githubusercontent.com/u/7776575?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eisenjulian", "html_url": "https://github.com/eisenjulian", "followers_url": "https://api.github.com/users/eisenjulian/followers", "following_url": "https://api.github.com/users/eisenjulian/following{/other_user}", "gists_url": "https://api.github.com/users/eisenjulian/gists{/gist_id}", "starred_url": "https://api.github.com/users/eisenjulian/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eisenjulian/subscriptions", "organizations_url": "https://api.github.com/users/eisenjulian/orgs", "repos_url": "https://api.github.com/users/eisenjulian/repos", "events_url": "https://api.github.com/users/eisenjulian/events{/privacy}", "received_events_url": "https://api.github.com/users/eisenjulian/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 473173272, "node_id": "MDU6TGFiZWw0NzMxNzMyNzI=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:feature", "name": "type:feature", "color": "159b2e", "default": false, "description": ""}], "state": "open", "locked": false, "assignee": {"login": "chihuahua", "id": 4221553, "node_id": "MDQ6VXNlcjQyMjE1NTM=", "avatar_url": "https://avatars0.githubusercontent.com/u/4221553?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chihuahua", "html_url": "https://github.com/chihuahua", "followers_url": "https://api.github.com/users/chihuahua/followers", "following_url": "https://api.github.com/users/chihuahua/following{/other_user}", "gists_url": "https://api.github.com/users/chihuahua/gists{/gist_id}", "starred_url": "https://api.github.com/users/chihuahua/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chihuahua/subscriptions", "organizations_url": "https://api.github.com/users/chihuahua/orgs", "repos_url": "https://api.github.com/users/chihuahua/repos", "events_url": "https://api.github.com/users/chihuahua/events{/privacy}", "received_events_url": "https://api.github.com/users/chihuahua/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "chihuahua", "id": 4221553, "node_id": "MDQ6VXNlcjQyMjE1NTM=", "avatar_url": "https://avatars0.githubusercontent.com/u/4221553?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chihuahua", "html_url": "https://github.com/chihuahua", "followers_url": "https://api.github.com/users/chihuahua/followers", "following_url": "https://api.github.com/users/chihuahua/following{/other_user}", "gists_url": "https://api.github.com/users/chihuahua/gists{/gist_id}", "starred_url": "https://api.github.com/users/chihuahua/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chihuahua/subscriptions", "organizations_url": "https://api.github.com/users/chihuahua/orgs", "repos_url": "https://api.github.com/users/chihuahua/repos", "events_url": "https://api.github.com/users/chihuahua/events{/privacy}", "received_events_url": "https://api.github.com/users/chihuahua/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 9, "created_at": "2018-01-26T18:49:27Z", "updated_at": "2019-01-31T06:20:01Z", "closed_at": null, "author_association": "CONTRIBUTOR", "body": "### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**: No\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**: Windows 10\r\n- **TensorFlow installed from (source or binary)**: binary\r\n- **TensorFlow version (use command below)**: 1.4\r\n- **Python version**: 3.6.3\r\n- **Bazel version (if compiling from source)**:\r\n- **GCC/Compiler version (if compiling from source)**:\r\n- **CUDA/cuDNN version**:\r\n- **GPU model and memory**:\r\n- **Exact command to reproduce**:\r\n\r\n### Describe the problem\r\nThis is a feature request, and I'd be happy to **contribute** if you think it's a valuable addition. \r\nI have been using estimators both pre-made and custom for classification tasks. I like that sharing the use of a `head`  as defined in [tensorflow/python/estimator/canned/head.py](https://github.com/tensorflow/tensorflow/blob/master/tensorflow/python/estimator/canned/head.py) allows both the canned models and the custom ones to share prediction and evaluation metrics for comparison, however currently it feels that some key metrics are missing, mainly PR curves which are fully supported by tensorboard.  Currently, the `head` constructor allows a list of thresholds, although they are not used by default. The problem is that when used, it creates scalar summaries for the precision and recall at each threshold, which is not that useful as in general one wants to compare how different models compare precision wise while fixing recall and the other way round.\r\n\r\nAdding the PR summary op from [here](https://github.com/tensorflow/tensorboard/tree/master/tensorboard/plugins/pr_curve) would make the eval metrics more informative IMO.\r\n\r\nThanks for taking the time to read this!\r\n\r\n### Source code / logs\r\nAny code that uses pre-made estimator classifiers relies on the same head. [This](https://github.com/tensorflow/models/blob/master/official/wide_deep/wide_deep.py) is one example."}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/16465", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/16465/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/16465/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/16465/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/16465", "id": 291987395, "node_id": "MDU6SXNzdWUyOTE5ODczOTU=", "number": 16465, "title": "bug with frame_step in tf.contrib.signal overlap_and_add inverse_stft", "user": {"login": "memo", "id": 144230, "node_id": "MDQ6VXNlcjE0NDIzMA==", "avatar_url": "https://avatars0.githubusercontent.com/u/144230?v=4", "gravatar_id": "", "url": "https://api.github.com/users/memo", "html_url": "https://github.com/memo", "followers_url": "https://api.github.com/users/memo/followers", "following_url": "https://api.github.com/users/memo/following{/other_user}", "gists_url": "https://api.github.com/users/memo/gists{/gist_id}", "starred_url": "https://api.github.com/users/memo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/memo/subscriptions", "organizations_url": "https://api.github.com/users/memo/orgs", "repos_url": "https://api.github.com/users/memo/repos", "events_url": "https://api.github.com/users/memo/events{/privacy}", "received_events_url": "https://api.github.com/users/memo/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1566679705, "node_id": "MDU6TGFiZWwxNTY2Njc5NzA1", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/comp:signal", "name": "comp:signal", "color": "0052cc", "default": false, "description": "tf.signal related issues"}], "state": "open", "locked": false, "assignee": {"login": "rryan", "id": 26527, "node_id": "MDQ6VXNlcjI2NTI3", "avatar_url": "https://avatars3.githubusercontent.com/u/26527?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rryan", "html_url": "https://github.com/rryan", "followers_url": "https://api.github.com/users/rryan/followers", "following_url": "https://api.github.com/users/rryan/following{/other_user}", "gists_url": "https://api.github.com/users/rryan/gists{/gist_id}", "starred_url": "https://api.github.com/users/rryan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rryan/subscriptions", "organizations_url": "https://api.github.com/users/rryan/orgs", "repos_url": "https://api.github.com/users/rryan/repos", "events_url": "https://api.github.com/users/rryan/events{/privacy}", "received_events_url": "https://api.github.com/users/rryan/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "rryan", "id": 26527, "node_id": "MDQ6VXNlcjI2NTI3", "avatar_url": "https://avatars3.githubusercontent.com/u/26527?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rryan", "html_url": "https://github.com/rryan", "followers_url": "https://api.github.com/users/rryan/followers", "following_url": "https://api.github.com/users/rryan/following{/other_user}", "gists_url": "https://api.github.com/users/rryan/gists{/gist_id}", "starred_url": "https://api.github.com/users/rryan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rryan/subscriptions", "organizations_url": "https://api.github.com/users/rryan/orgs", "repos_url": "https://api.github.com/users/rryan/repos", "events_url": "https://api.github.com/users/rryan/events{/privacy}", "received_events_url": "https://api.github.com/users/rryan/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 11, "created_at": "2018-01-26T18:16:59Z", "updated_at": "2020-03-18T10:34:54Z", "closed_at": null, "author_association": "CONTRIBUTOR", "body": "### System information\r\n- Based on example \r\n- Linux Ubuntu 16.04\r\n- installed from binary\r\n- v1.4.0-19-ga52c8d9, 1.4.1; also 1.5.0\r\n- Python 2.7.14 |Anaconda custom (64-bit)| (default, Oct 16 2017, 17:29:19). IPython 5.4.1\r\n- Cuda release 8.0, V8.0.61, cuDNN 6; also Cuda release 9.0, V9.0.176, cuDNN 7.0.5\r\n- Geforce GTX 970M, also GTX 1070, Driver Version: 384.111\r\n\r\n### Describe the problem\r\n\r\nA.) When I create frames from a signal with `frame_length=1024` and  `frame_step=256` (i.e. 25% hop size, 75% overlap) using a hann window (also tried hamming), and then I reconstruct with `overlap_and_add`, I'd expect the signal to be reconstructed correctly (because of COLA etc). But instead it comes out exactly double the amplitude. I need to divide the resulting signal by two for it to be correct. \r\n\r\nB.) If I use STFT to create a series of overlapping spectrograms, and then reconstruct with inverse STFT, again with `frame_length=1024` and `frame_step=256`, the signal is again reconstructed at double amplitude. \r\n\r\nI realise why these might be the case (unity gain at 50% overlap for hann, so 75% overlap will double the signal). But is it not normal for the reconstruction function to take this into account? E.g. librosa istft does return signal with correct amplitude while tensorflow returns double.\r\n\r\nC.) \r\nAt any other frame_step there is severe amplitude modulation going on. See images below. This doesn't seem right at all. \r\n\r\n**UPDATE**: If I explicitly set `window_fn=tf.contrib.signal.inverse_stft_window_fn(frame_step)` in `inverse_stft` the output is correct. So it seems the `frame_step` parameter in `inverse_stft` is not being passed into the window function (which is also what the results hint at).\r\n\r\n### Source code / logs\r\n\r\noriginal data:\r\n![22050 orig](https://user-images.githubusercontent.com/144230/35579363-64e51ef6-05de-11e8-8dc2-f4220265c2f8.png)\r\n\r\ntensorflow output from frames + overlap_and_add:\r\n![tensorflow 22050 frame l1024 s256](https://user-images.githubusercontent.com/144230/35579392-7907d798-05de-11e8-8971-64597d3e06d3.png)\r\n![tensorflow 22050 frame l1024 s512](https://user-images.githubusercontent.com/144230/35579393-792fb060-05de-11e8-93af-efc2bd30d058.png)\r\n![tensorflow 22050 frame l1024 s768](https://user-images.githubusercontent.com/144230/35579394-794b9898-05de-11e8-82e7-ecbb41feed9a.png)\r\n![tensorflow 22050 frame l1024 s1024](https://user-images.githubusercontent.com/144230/35579397-7a3116fc-05de-11e8-815d-d4df17e86dc5.png)\r\n\r\ntensorflow output from stft+istft:\r\n![tensorflow 22050 stft l1024 s256](https://user-images.githubusercontent.com/144230/35579401-7ed0727a-05de-11e8-9cf2-e8dd06df9e05.png)\r\n![tensorflow 22050 stft l1024 s512](https://user-images.githubusercontent.com/144230/35579402-7ee9d29c-05de-11e8-93e0-a6d676c7d5ae.png)\r\n![tensorflow 22050 stft l1024 s768](https://user-images.githubusercontent.com/144230/35579403-7f01f818-05de-11e8-8779-e50b824b8aec.png)\r\n![tensorflow 22050 stft l1024 s1024](https://user-images.githubusercontent.com/144230/35579404-7f272a34-05de-11e8-9b55-a41942db7eb1.png)\r\n\r\nlibrosa output from stft+istft:\r\n![librosa 22050 stft l1024 s256](https://user-images.githubusercontent.com/144230/35579408-834faee2-05de-11e8-8f44-e6ef0e797fb4.png)\r\n![librosa 22050 stft l1024 s512](https://user-images.githubusercontent.com/144230/35579409-8385fa6a-05de-11e8-8d36-b96c35ba862a.png)\r\n![librosa 22050 stft l1024 s768](https://user-images.githubusercontent.com/144230/35579410-83a5767e-05de-11e8-89bd-6d01c9a7cb8c.png)\r\n![librosa 22050 stft l1024 s1024](https://user-images.githubusercontent.com/144230/35579411-83c791c8-05de-11e8-8b6c-7ef5508a66e5.png)\r\n\r\ntensorflow code:\r\n\r\n    from __future__ import print_function\r\n    from __future__ import division\r\n    \r\n    import numpy as np\r\n    import scipy.io.wavfile\r\n    import math\r\n    import random\r\n    import matplotlib.pyplot as plt\r\n    \r\n    import tensorflow as tf\r\n    out_prefix = 'tensorflow'\r\n    \r\n    \r\n    def plot(data, title, do_save=True):\r\n        plt.figure(figsize=(20,5))\r\n        plt.plot(data[:3*frame_length])\r\n        plt.ylim([-1, 1])\r\n        plt.title(title)\r\n        plt.grid()\r\n        if do_save: plt.savefig(title + '.png')\r\n        plt.show()\r\n    \r\n    \r\n    def reconstruct_from_frames(x, frame_length, frame_step):\r\n        name = 'frame'\r\n        frames_T = tf.contrib.signal.frame(x, frame_length=frame_length, frame_step=frame_step)\r\n        windowed_frames_T = frames_T * tf.contrib.signal.hann_window(frame_length, periodic=True)\r\n        output_T = tf.contrib.signal.overlap_and_add(windowed_frames_T, frame_step=frame_step)\r\n        return name, output_T\r\n    \r\n    \r\n    def reconstruct_from_stft(x, frame_length, frame_step):\r\n        name = 'stft'\r\n        spectrograms_T = tf.contrib.signal.stft(x, frame_length, frame_step)\r\n        output_T = tf.contrib.signal.inverse_stft(spectrograms_T, frame_length, frame_step)\r\n        return name, output_T\r\n    \r\n    \r\n    def test(fn, input_data):\r\n        print('-'*80)\r\n        tf.reset_default_graph()\r\n        input_T = tf.placeholder(tf.float32, [None]) \r\n        name, output_T = fn(input_T, frame_length, frame_step)\r\n    \r\n        title = \"{}.{}.{}.l{}.s{}\".format(out_prefix, sample_rate, name, frame_length, frame_step)\r\n        print(title)\r\n    \r\n        with tf.Session():\r\n            output_data =  output_T.eval({input_T:input_data})\r\n    \r\n    #    output_data /= frame_length/frame_step/2 # tensorflow needs this to normalise amp\r\n        plot(output_data, title)\r\n        scipy.io.wavfile.write(title+'.wav', sample_rate, output_data)\r\n    \r\n    \r\n    def generate_data(duration_secs, sample_rate, num_sin, min_freq=10, max_freq=500, rnd_seed=0, max_val=0):\r\n        '''generate signal from multiple random sin waves'''\r\n        if rnd_seed>0: random.seed(rnd_seed)\r\n        data = np.zeros([duration_secs*sample_rate], np.float32)\r\n        for i in range(num_sin):\r\n            w = np.float32(np.sin(np.linspace(0, math.pi*2*random.randrange(min_freq, max_freq), num=duration_secs*sample_rate)))\r\n            data += random.random() * w\r\n        if max_val>0:\r\n            data *= max_val / np.max(np.abs(data))\r\n        return data\r\n        \r\n    \r\n    frame_length = 1024\r\n    sample_rate = 22050\r\n    \r\n    input_data = generate_data(duration_secs=1, sample_rate=sample_rate, num_sin=1, rnd_seed=2, max_val=0.5)\r\n    \r\n    title = \"{}.orig\".format(sample_rate)\r\n    plot(input_data, title)\r\n    scipy.io.wavfile.write(title+'.wav', sample_rate, input_data)\r\n    \r\n    for frame_step in [256, 512, 768, 1024]:\r\n        test(reconstruct_from_frames, input_data)\r\n        test(reconstruct_from_stft, input_data)\r\n    \r\n    print('done.')\r\n\r\nlibrosa code:\r\n\r\n    from __future__ import print_function\r\n    from __future__ import division\r\n    \r\n    import numpy as np\r\n    import scipy.io.wavfile\r\n    import math\r\n    import random\r\n    import matplotlib.pyplot as plt\r\n    \r\n    import librosa.core as lc\r\n    out_prefix = 'librosa'\r\n    \r\n    \r\n    def plot(data, title, do_save=True):\r\n        plt.figure(figsize=(20,5))\r\n        plt.plot(data[:3*frame_length])\r\n        plt.ylim([-1, 1])\r\n        plt.title(title)\r\n        plt.grid()\r\n        if do_save: plt.savefig(title + '.png')\r\n        plt.show()\r\n    \r\n    \r\n    def reconstruct_from_stft(x, frame_length, frame_step):\r\n        name = 'stft'\r\n        stft = lc.stft(x, n_fft=frame_length, hop_length=frame_step)\r\n        istft = lc.istft(stft, frame_step)\r\n        return name, istft\r\n    \r\n    \r\n    def test(fn, input_data):\r\n        print('-'*80)\r\n        name, output_data = fn(input_data, frame_length, frame_step)\r\n    \r\n        title = \"{}.{}.{}.l{}.s{}\".format(out_prefix, sample_rate, name, frame_length, frame_step)\r\n        print(title)\r\n    \r\n    #    output_data /= frame_length/frame_step/2 # tensorflow needs this to normalise amp\r\n        plot(output_data, title)\r\n        scipy.io.wavfile.write(title+'.wav', sample_rate, output_data)\r\n    \r\n    \r\n    def generate_data(duration_secs, sample_rate, num_sin, min_freq=10, max_freq=500, rnd_seed=0, max_val=0):\r\n        '''generate signal from multiple random sin waves'''\r\n        if rnd_seed>0: random.seed(rnd_seed)\r\n        data = np.zeros([duration_secs*sample_rate], np.float32)\r\n        for i in range(num_sin):\r\n            w = np.float32(np.sin(np.linspace(0, math.pi*2*random.randrange(min_freq, max_freq), num=duration_secs*sample_rate)))\r\n            data += random.random() * w\r\n        if max_val>0:\r\n            data *= max_val / np.max(np.abs(data))\r\n        return data\r\n        \r\n    \r\n    frame_length = 1024\r\n    sample_rate = 22050\r\n    \r\n    input_data = generate_data(duration_secs=1, sample_rate=sample_rate, num_sin=1, rnd_seed=2, max_val=0.5)\r\n    \r\n    title = \"{}.orig\".format(sample_rate)\r\n    plot(input_data, title)\r\n    scipy.io.wavfile.write(title+'.wav', sample_rate, input_data)\r\n    \r\n    for frame_step in [256, 512, 768, 1024]:\r\n        test(reconstruct_from_stft, input_data)\r\n    \r\n    print('done.')\r\n"}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/16381", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/16381/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/16381/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/16381/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/16381", "id": 291402215, "node_id": "MDU6SXNzdWUyOTE0MDIyMTU=", "number": 16381, "title": "Distributed TensorFlow without shared directory", "user": {"login": "mas-dse-greina", "id": 22306322, "node_id": "MDQ6VXNlcjIyMzA2MzIy", "avatar_url": "https://avatars0.githubusercontent.com/u/22306322?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mas-dse-greina", "html_url": "https://github.com/mas-dse-greina", "followers_url": "https://api.github.com/users/mas-dse-greina/followers", "following_url": "https://api.github.com/users/mas-dse-greina/following{/other_user}", "gists_url": "https://api.github.com/users/mas-dse-greina/gists{/gist_id}", "starred_url": "https://api.github.com/users/mas-dse-greina/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mas-dse-greina/subscriptions", "organizations_url": "https://api.github.com/users/mas-dse-greina/orgs", "repos_url": "https://api.github.com/users/mas-dse-greina/repos", "events_url": "https://api.github.com/users/mas-dse-greina/events{/privacy}", "received_events_url": "https://api.github.com/users/mas-dse-greina/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 299643928, "node_id": "MDU6TGFiZWwyOTk2NDM5Mjg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:contributions%20welcome", "name": "stat:contributions welcome", "color": "f4b400", "default": false, "description": ""}, {"id": 473173272, "node_id": "MDU6TGFiZWw0NzMxNzMyNzI=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:feature", "name": "type:feature", "color": "159b2e", "default": false, "description": ""}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 19, "created_at": "2018-01-24T23:49:37Z", "updated_at": "2018-07-11T00:04:32Z", "closed_at": null, "author_association": "NONE", "body": "It seems like there is an inherent assumption in Distributed TensorFlow that all nodes must share a common file system, such as google cloud or NFS. \r\n\r\nI've found in testing that models will train just fine without a common file system, but the final trained model doesn't save properly when you try something like: \r\n`builder = tf.saved_model_builder.SavedModelBuilder(export_dir) \r\n...\r\nbuilder.save()`\r\n\r\nThe issue seems to be that the parameter server has the variables and the chief node has the graph. \r\n\r\nIt'd be great if TensorFlow added a function to allow us to consolidate the graph and variables at the end of training onto the chief node in order to save the trained model. Right now there doesn't seem to be an easy way to do this.\r\n\r\nThanks."}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/16365", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/16365/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/16365/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/16365/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/16365", "id": 291224683, "node_id": "MDU6SXNzdWUyOTEyMjQ2ODM=", "number": 16365, "title": "Include grpc_tensorflow_std_server in Docker image", "user": {"login": "jlewi", "id": 777219, "node_id": "MDQ6VXNlcjc3NzIxOQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/777219?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jlewi", "html_url": "https://github.com/jlewi", "followers_url": "https://api.github.com/users/jlewi/followers", "following_url": "https://api.github.com/users/jlewi/following{/other_user}", "gists_url": "https://api.github.com/users/jlewi/gists{/gist_id}", "starred_url": "https://api.github.com/users/jlewi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jlewi/subscriptions", "organizations_url": "https://api.github.com/users/jlewi/orgs", "repos_url": "https://api.github.com/users/jlewi/repos", "events_url": "https://api.github.com/users/jlewi/events{/privacy}", "received_events_url": "https://api.github.com/users/jlewi/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 299643928, "node_id": "MDU6TGFiZWwyOTk2NDM5Mjg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:contributions%20welcome", "name": "stat:contributions welcome", "color": "f4b400", "default": false, "description": ""}, {"id": 473173272, "node_id": "MDU6TGFiZWw0NzMxNzMyNzI=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:feature", "name": "type:feature", "color": "159b2e", "default": false, "description": ""}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-01-24T14:17:45Z", "updated_at": "2018-02-15T09:08:38Z", "closed_at": null, "author_association": "NONE", "body": "It would be nice if the grpc_tensorflow_std_server was included in the Docker image.\r\n\r\nThis would prevent users from having to write code just to launch a parameter server because they could just run the stock binary.\r\n\r\nSome context in: tensorflow/k8s#16"}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/16363", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/16363/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/16363/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/16363/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/16363", "id": 291200010, "node_id": "MDU6SXNzdWUyOTEyMDAwMTA=", "number": 16363, "title": "Warning: Table trying to initialize from file ... is already initialized", "user": {"login": "sleighsoft", "id": 9438971, "node_id": "MDQ6VXNlcjk0Mzg5NzE=", "avatar_url": "https://avatars3.githubusercontent.com/u/9438971?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sleighsoft", "html_url": "https://github.com/sleighsoft", "followers_url": "https://api.github.com/users/sleighsoft/followers", "following_url": "https://api.github.com/users/sleighsoft/following{/other_user}", "gists_url": "https://api.github.com/users/sleighsoft/gists{/gist_id}", "starred_url": "https://api.github.com/users/sleighsoft/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sleighsoft/subscriptions", "organizations_url": "https://api.github.com/users/sleighsoft/orgs", "repos_url": "https://api.github.com/users/sleighsoft/repos", "events_url": "https://api.github.com/users/sleighsoft/events{/privacy}", "received_events_url": "https://api.github.com/users/sleighsoft/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": {"login": "ysuematsu", "id": 15674604, "node_id": "MDQ6VXNlcjE1Njc0NjA0", "avatar_url": "https://avatars3.githubusercontent.com/u/15674604?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ysuematsu", "html_url": "https://github.com/ysuematsu", "followers_url": "https://api.github.com/users/ysuematsu/followers", "following_url": "https://api.github.com/users/ysuematsu/following{/other_user}", "gists_url": "https://api.github.com/users/ysuematsu/gists{/gist_id}", "starred_url": "https://api.github.com/users/ysuematsu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ysuematsu/subscriptions", "organizations_url": "https://api.github.com/users/ysuematsu/orgs", "repos_url": "https://api.github.com/users/ysuematsu/repos", "events_url": "https://api.github.com/users/ysuematsu/events{/privacy}", "received_events_url": "https://api.github.com/users/ysuematsu/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "ysuematsu", "id": 15674604, "node_id": "MDQ6VXNlcjE1Njc0NjA0", "avatar_url": "https://avatars3.githubusercontent.com/u/15674604?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ysuematsu", "html_url": "https://github.com/ysuematsu", "followers_url": "https://api.github.com/users/ysuematsu/followers", "following_url": "https://api.github.com/users/ysuematsu/following{/other_user}", "gists_url": "https://api.github.com/users/ysuematsu/gists{/gist_id}", "starred_url": "https://api.github.com/users/ysuematsu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ysuematsu/subscriptions", "organizations_url": "https://api.github.com/users/ysuematsu/orgs", "repos_url": "https://api.github.com/users/ysuematsu/repos", "events_url": "https://api.github.com/users/ysuematsu/events{/privacy}", "received_events_url": "https://api.github.com/users/ysuematsu/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 8, "created_at": "2018-01-24T13:00:40Z", "updated_at": "2018-12-14T18:50:17Z", "closed_at": null, "author_association": "CONTRIBUTOR", "body": "Python: 3.6.2\r\nTensorflow: 1.5.0rc1 pip\r\nOS: Windows 10\r\nNo CUDA, just CPU\r\n\r\nI get this when creating a lookup table with `tf.contrib.lookup.index_table_from_file`.\r\nAs I have multiple graphs I create that table in each graph (from the same file) I need it in. This results in the warning from the title of this issue.\r\n\r\n1. Are tables shared across graphs?\r\n2. How to figure out if a table from a specific file is already existing/initialized?\r\n\r\nThis also occurs with `tensorflow/nmt`:\r\nhttps://github.com/tensorflow/nmt/issues/234"}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/16311", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/16311/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/16311/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/16311/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/16311", "id": 290699695, "node_id": "MDU6SXNzdWUyOTA2OTk2OTU=", "number": 16311, "title": "Segmentation fault in _pywrap_tensorflow_internal.so", "user": {"login": "mpkuse", "id": 10494231, "node_id": "MDQ6VXNlcjEwNDk0MjMx", "avatar_url": "https://avatars3.githubusercontent.com/u/10494231?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mpkuse", "html_url": "https://github.com/mpkuse", "followers_url": "https://api.github.com/users/mpkuse/followers", "following_url": "https://api.github.com/users/mpkuse/following{/other_user}", "gists_url": "https://api.github.com/users/mpkuse/gists{/gist_id}", "starred_url": "https://api.github.com/users/mpkuse/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mpkuse/subscriptions", "organizations_url": "https://api.github.com/users/mpkuse/orgs", "repos_url": "https://api.github.com/users/mpkuse/repos", "events_url": "https://api.github.com/users/mpkuse/events{/privacy}", "received_events_url": "https://api.github.com/users/mpkuse/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 404586594, "node_id": "MDU6TGFiZWw0MDQ1ODY1OTQ=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:awaiting%20tensorflower", "name": "stat:awaiting tensorflower", "color": "f4b400", "default": false, "description": ""}], "state": "open", "locked": false, "assignee": {"login": "skye", "id": 88808, "node_id": "MDQ6VXNlcjg4ODA4", "avatar_url": "https://avatars1.githubusercontent.com/u/88808?v=4", "gravatar_id": "", "url": "https://api.github.com/users/skye", "html_url": "https://github.com/skye", "followers_url": "https://api.github.com/users/skye/followers", "following_url": "https://api.github.com/users/skye/following{/other_user}", "gists_url": "https://api.github.com/users/skye/gists{/gist_id}", "starred_url": "https://api.github.com/users/skye/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/skye/subscriptions", "organizations_url": "https://api.github.com/users/skye/orgs", "repos_url": "https://api.github.com/users/skye/repos", "events_url": "https://api.github.com/users/skye/events{/privacy}", "received_events_url": "https://api.github.com/users/skye/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "skye", "id": 88808, "node_id": "MDQ6VXNlcjg4ODA4", "avatar_url": "https://avatars1.githubusercontent.com/u/88808?v=4", "gravatar_id": "", "url": "https://api.github.com/users/skye", "html_url": "https://github.com/skye", "followers_url": "https://api.github.com/users/skye/followers", "following_url": "https://api.github.com/users/skye/following{/other_user}", "gists_url": "https://api.github.com/users/skye/gists{/gist_id}", "starred_url": "https://api.github.com/users/skye/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/skye/subscriptions", "organizations_url": "https://api.github.com/users/skye/orgs", "repos_url": "https://api.github.com/users/skye/repos", "events_url": "https://api.github.com/users/skye/events{/privacy}", "received_events_url": "https://api.github.com/users/skye/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 15, "created_at": "2018-01-23T03:46:06Z", "updated_at": "2018-12-14T18:50:13Z", "closed_at": null, "author_association": "NONE", "body": "\r\n### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**: Yes\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**: Ubuntu 16.04.3 LTS (Xenial)\r\n- **TensorFlow installed from (source or binary)**: Binary\r\n- **TensorFlow version (use command below)**: ('v1.4.0-19-ga52c8d9', '1.4.1')\r\n- **Python version**: 2.7.12\r\n- **Bazel version (if compiling from source)**:\r\n- **GCC/Compiler version (if compiling from source)**:\r\n- **CUDA/cuDNN version**: Cuda8, cudnn6\r\n- **GPU model and memory**: Titan Xp (with driver 387.26)\r\n- **Exact command to reproduce**:\r\n\r\nYou can collect some of this information using our environment capture script:\r\n\r\nhttps://github.com/tensorflow/tensorflow/tree/master/tools/tf_env_collect.sh\r\n```\r\n== cat /etc/issue ===============================================\r\nLinux ubuntu 4.4.0-87-generic #110-Ubuntu SMP Tue Jul 18 12:55:35 UTC 2017 x86_64 x86_64 x86_64 GNU/Linux\r\nVERSION=\"16.04.3 LTS (Xenial Xerus)\"\r\nVERSION_ID=\"16.04\"\r\nVERSION_CODENAME=xenial\r\n\r\n== are we in docker =============================================\r\nNo\r\n\r\n== compiler =====================================================\r\nc++ (Ubuntu 5.4.0-6ubuntu1~16.04.5) 5.4.0 20160609\r\nCopyright (C) 2015 Free Software Foundation, Inc.\r\nThis is free software; see the source for copying conditions.  There is NO\r\nwarranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\r\n\r\n\r\n== uname -a =====================================================\r\nLinux ubuntu 4.4.0-87-generic #110-Ubuntu SMP Tue Jul 18 12:55:35 UTC 2017 x86_64 x86_64 x86_64 GNU/Linux\r\n\r\n== check pips ===================================================\r\nnumpy (1.14.0)\r\nprotobuf (3.5.1)\r\ntensorflow-gpu (1.4.1)\r\ntensorflow-tensorboard (0.4.0)\r\n\r\n== check for virtualenv =========================================\r\nFalse\r\n\r\n== tensorflow import ============================================\r\ntf.VERSION = 1.4.1\r\ntf.GIT_VERSION = v1.4.0-19-ga52c8d9\r\ntf.COMPILER_VERSION = v1.4.0-19-ga52c8d9\r\nSanity check: array([1], dtype=int32)\r\n\r\n== env ==========================================================\r\nLD_LIBRARY_PATH :/usr/local/cuda/lib64/\r\nDYLD_LIBRARY_PATH is unset\r\n\r\n== nvidia-smi ===================================================\r\nTue Jan 23 11:09:12 2018       \r\n+-----------------------------------------------------------------------------+\r\n| NVIDIA-SMI 387.26                 Driver Version: 387.26                    |\r\n|-------------------------------+----------------------+----------------------+\r\n| GPU  Name        Persistence-M| Bus-Id        Disp.A | Volatile Uncorr. ECC |\r\n| Fan  Temp  Perf  Pwr:Usage/Cap|         Memory-Usage | GPU-Util  Compute M. |\r\n|===============================+======================+======================|\r\n|   0  TITAN Xp            Off  | 00000000:04:00.0 Off |                  N/A |\r\n| 40%   66C    P2   182W / 250W |  11763MiB / 12189MiB |     73%      Default |\r\n+-------------------------------+----------------------+----------------------+\r\n|   1  TITAN Xp            Off  | 00000000:05:00.0 Off |                  N/A |\r\n| 23%   30C    P8     8W / 250W |  11591MiB / 12189MiB |      0%      Default |\r\n+-------------------------------+----------------------+----------------------+\r\n|   2  TITAN Xp            Off  | 00000000:06:00.0 Off |                  N/A |\r\n| 28%   48C    P0    62W / 250W |      0MiB / 12189MiB |      0%      Default |\r\n+-------------------------------+----------------------+----------------------+\r\n|   3  TITAN Xp            Off  | 00000000:07:00.0 Off |                  N/A |\r\n| 26%   46C    P0    63W / 250W |      0MiB / 12189MiB |      0%      Default |\r\n+-------------------------------+----------------------+----------------------+\r\n|   4  TITAN Xp            Off  | 00000000:08:00.0 Off |                  N/A |\r\n| 26%   46C    P0    63W / 250W |      0MiB / 12189MiB |      0%      Default |\r\n+-------------------------------+----------------------+----------------------+\r\n|   5  TITAN Xp            Off  | 00000000:0C:00.0 Off |                  N/A |\r\n| 23%   43C    P0    62W / 250W |      0MiB / 12189MiB |      0%      Default |\r\n+-------------------------------+----------------------+----------------------+\r\n|   6  TITAN Xp            Off  | 00000000:0E:00.0 Off |                  N/A |\r\n| 25%   44C    P0    62W / 250W |      0MiB / 12189MiB |      0%      Default |\r\n+-------------------------------+----------------------+----------------------+\r\n|   7  TITAN Xp            Off  | 00000000:0F:00.0 Off |                  N/A |\r\n| 42%   69C    P2   167W / 250W |  11833MiB / 12189MiB |     31%      Default |\r\n+-------------------------------+----------------------+----------------------+\r\n                                                                               \r\n+-----------------------------------------------------------------------------+\r\n| Processes:                                                       GPU Memory |\r\n|  GPU       PID   Type   Process name                             Usage      |\r\n|=============================================================================|\r\n|    0     19682      C   /home/peiliang/tensorflow/bin/python       11751MiB |\r\n|    1     19682      C   /home/peiliang/tensorflow/bin/python       11579MiB |\r\n|    7     27581      C   python                                     11823MiB |\r\n+-----------------------------------------------------------------------------+\r\n\r\n== cuda libs  ===================================================\r\n/usr/local/cuda-8.0/lib64/libcudart.so.8.0.61\r\n/usr/local/cuda-8.0/lib64/libcudart_static.a\r\n/usr/local/cuda-8.0/doc/man/man7/libcudart.so.7\r\n/usr/local/cuda-8.0/doc/man/man7/libcudart.7\r\n/usr/local/cuda-9.1/lib64/libcudart.so.9.1.85\r\n/usr/local/cuda-9.1/lib64/libcudart_static.a\r\n/usr/local/cuda-9.1/doc/man/man7/libcudart.so.7\r\n/usr/local/cuda-9.1/doc/man/man7/libcudart.7\r\n```\r\n\r\nYou can obtain the TensorFlow version with\r\n\r\npython -c \"import tensorflow as tf; print(tf.GIT_VERSION, tf.VERSION)\"\r\n\r\n### Describe the problem\r\nMy custom learning code works perfectly on my older workstation with 2 GPU cards. But am having issue with our new workstation which has 8 GPU cards. I get a Segmentation fault. \r\n\r\n\r\n### Source code / logs\r\n\r\nThe entire source code is: https://github.com/mpkuse/cartwheel_train/tree/config-files\r\n\r\nThe main-script is `train_netvlad.py`. Currently my learning data is private, \r\nif you really need it to test, I can provide the data as well (~100 GB). \r\n\r\nMy code basically builds a network with tf.slim. I have a custom operations to build a layer. Have a custom loss function. Can be found in `CartWheelFlow.py/ class VGGDescriptor`. It uses tf.while. \r\nData is managed by `class TimeMachineRender`\r\n\r\nstack trace for the crash. \r\n\r\n```\r\n$ gdb --args python train_netvlad.py -t tfsuper.logs/test \r\n(gdb) run\r\n.\r\n.\r\n.\r\nThread 1 \"python\" received signal SIGSEGV, Segmentation fault.\r\n0x00007ffef7f61a2c in std::__detail::_Map_base<std::string, std::pair<std::string const, unsigned long>, std::allocator<std::pair<std::string const, unsigned long> >, std::__detail::_Select1st, std::equal_to<std::string>, std::hash<std::string>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true>, true>::operator[](std::string const&) ()\r\n   from /usr/local/lib/python2.7/dist-packages/tensorflow/python/_pywrap_tensorflow_internal.so\r\n(gdb) where\r\n#0  0x00007ffef7f61a2c in std::__detail::_Map_base<std::string, std::pair<std::string const, unsigned long>, std::allocator<std::pair<std::string const, unsigned long> >, std::__detail::_Select1st, std::equal_to<std::string>, std::hash<std::string>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true>, true>::operator[](std::string const&) ()\r\n   from /usr/local/lib/python2.7/dist-packages/tensorflow/python/_pywrap_tensorflow_internal.so\r\n#1  0x00007ffef7f6c4d9 in tensorflow::DirectSession::Run(tensorflow::RunOptions const&, std::vector<std::pair<std::string, tensorflow::Tensor>, std::allocator<std::pair<std::string, tensorflow::Tensor> > > const&, std::vector<std::string, std::allocator<std::string> > const&, std::vector<std::string, std::allocator<std::string> > const&, std::vector<tensorflow::Tensor, std::allocator<tensorflow::Tensor> >*, tensorflow::RunMetadata*) ()\r\n   from /usr/local/lib/python2.7/dist-packages/tensorflow/python/_pywrap_tensorflow_internal.so\r\n#2  0x00007ffef5ed94ea in TF_Run_Helper(tensorflow::Session*, char const*, TF_Buffer const*, std::vector<std::pair<std::string, tensorflow::Tensor>, std::allocator<std::pair<std::string, tensorfl---Type <return> to continue, or q <return> to quit---\r\now::Tensor> > > const&, std::vector<std::string, std::allocator<std::string> > const&, TF_Tensor**, std::vector<std::string, std::allocator<std::string> > const&, TF_Buffer*, TF_Status*) ()\r\n   from /usr/local/lib/python2.7/dist-packages/tensorflow/python/_pywrap_tensorflow_internal.so\r\n#3  0x00007ffef5ed9824 in TF_Run ()\r\n   from /usr/local/lib/python2.7/dist-packages/tensorflow/python/_pywrap_tensorflow_internal.so\r\n#4  0x00007ffef5bf701a in tensorflow::TF_Run_wrapper_helper(TF_DeprecatedSession*, char const*, TF_Buffer const*, _object*, tensorflow::gtl::InlinedVector<char const*, 8> const&, tensorflow::gtl::InlinedVector<char const*, 8> const&, TF_Status*, tensorflow::gtl::InlinedVector<_object*, 8>*, TF_Buffer*) ()\r\n   from /usr/local/lib/python2.7/dist-packages/tensorflow/python/_pywrap_tensorflow_internal.so\r\n#5  0x00007ffef5bf7411 in tensorflow::TF_Run_wrapper(TF_DeprecatedSession*, TF_Buffer const*, _object*, tensorflow::gtl::InlinedVector<char const*, 8> const&, tensorflow::gtl::InlinedVector<char const*, 8> const&, TF_Status*, tensorflow::gtl::InlinedVector<_object*, 8>*, TF_Buffer*) ()\r\n   from /usr/local/lib/python2.7/dist-packages/tensorflow/python/---Type <return> to continue, or q <return> to quit---\r\n_pywrap_tensorflow_internal.so\r\n#6  0x00007ffef5bbb6f1 in _wrap_TF_Run ()\r\n   from /usr/local/lib/python2.7/dist-packages/tensorflow/python/_pywrap_tensorflow_internal.so\r\n#7  0x00000000004c45fa in PyEval_EvalFrameEx ()\r\n#8  0x00000000004c2705 in PyEval_EvalCodeEx ()\r\n#9  0x00000000004de69e in ?? ()\r\n#10 0x00000000004b0c93 in PyObject_Call ()\r\n#11 0x00000000004c6ef6 in PyEval_EvalFrameEx ()\r\n#12 0x00000000004c2705 in PyEval_EvalCodeEx ()\r\n#13 0x00000000004ca7df in PyEval_EvalFrameEx ()\r\n#14 0x00000000004c2705 in PyEval_EvalCodeEx ()\r\n#15 0x00000000004ca7df in PyEval_EvalFrameEx ()\r\n#16 0x00000000004c2705 in PyEval_EvalCodeEx ()\r\n#17 0x00000000004ca7df in PyEval_EvalFrameEx ()\r\n#18 0x00000000004c2705 in PyEval_EvalCodeEx ()\r\n#19 0x00000000004ca088 in PyEval_EvalFrameEx ()\r\n#20 0x00000000004c2705 in PyEval_EvalCodeEx ()\r\n#21 0x00000000004c24a9 in PyEval_EvalCode ()\r\n#22 0x00000000004f19ef in ?? ()\r\n#23 0x00000000004ec372 in PyRun_FileExFlags ()\r\n#24 0x00000000004eaaf1 in PyRun_SimpleFileExFlags ()\r\n#25 0x000000000049e208 in Py_Main ()\r\n#26 0x00007ffff7810830 in __libc_start_main (main=0x49db30 <main>, argc=4, \r\n    argv=0x7fffffffe558, init=<optimized out>, fini=<optimized out>, \r\n    rtld_fini=<optimized out>, stack_end=0x7fffffffe548) at ../csu/libc-start.c:291\r\n#27 0x000000000049da59 in _start ()\r\n```\r\n"}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/16276", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/16276/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/16276/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/16276/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/16276", "id": 290349375, "node_id": "MDU6SXNzdWUyOTAzNDkzNzU=", "number": 16276, "title": "Linking against system-installed cuda and cudnn", "user": {"login": "Celelibi", "id": 6136274, "node_id": "MDQ6VXNlcjYxMzYyNzQ=", "avatar_url": "https://avatars1.githubusercontent.com/u/6136274?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Celelibi", "html_url": "https://github.com/Celelibi", "followers_url": "https://api.github.com/users/Celelibi/followers", "following_url": "https://api.github.com/users/Celelibi/following{/other_user}", "gists_url": "https://api.github.com/users/Celelibi/gists{/gist_id}", "starred_url": "https://api.github.com/users/Celelibi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Celelibi/subscriptions", "organizations_url": "https://api.github.com/users/Celelibi/orgs", "repos_url": "https://api.github.com/users/Celelibi/repos", "events_url": "https://api.github.com/users/Celelibi/events{/privacy}", "received_events_url": "https://api.github.com/users/Celelibi/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 299643928, "node_id": "MDU6TGFiZWwyOTk2NDM5Mjg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:contributions%20welcome", "name": "stat:contributions welcome", "color": "f4b400", "default": false, "description": ""}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-01-22T04:42:06Z", "updated_at": "2018-01-31T02:36:35Z", "closed_at": null, "author_association": "NONE", "body": "### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**: No\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**: Debian sid\r\n- **TensorFlow installed from (source or binary)**: source (trying)\r\n- **TensorFlow version (use command below)**: git master (commit 9fb9ac66ce) or any version before.\r\n- **Python version**: 3.6\r\n- **Bazel version (if compiling from source)**: 0.9.0\r\n- **GCC/Compiler version (if compiling from source)**: 7.2.0\r\n- **CUDA/cuDNN version**: CUDA 9.0, cuDNN 6.0\r\n- **GPU model and memory**: GeForce GTX 1070\r\n- **Exact command to reproduce**:\r\n`bazel build --config=opt --config=mkl --config=cuda //tensorflow/tools/pip_package:build_pip_package`\r\n\r\n### Describe the problem\r\nThe build system currently require that all the libraries from the CUDA toolkit are stored in a specific directory called `cuda_toolkit_path`, both in the bazel scripts and in the `configure.py` script. However, some systems (like Debian) have a packaged version of CUDA which installs the libraries in the standard path which cannot be found by `configure.py`.\r\n\r\nThe compiler can find those libraries just right with nothing more than `-lcuda`. It would be nice if the build system could rely on the compiler's ability to find its libraries instead of relying on the knowledge of their full path.\r\n\r\n### Source code / logs\r\nAs a feature-request / enhancement-request, this section seems irrelevant."}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/16226", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/16226/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/16226/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/16226/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/16226", "id": 289745598, "node_id": "MDU6SXNzdWUyODk3NDU1OTg=", "number": 16226, "title": "Include netstat in the tensorflow docker container", "user": {"login": "jswelch", "id": 35576504, "node_id": "MDQ6VXNlcjM1NTc2NTA0", "avatar_url": "https://avatars3.githubusercontent.com/u/35576504?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jswelch", "html_url": "https://github.com/jswelch", "followers_url": "https://api.github.com/users/jswelch/followers", "following_url": "https://api.github.com/users/jswelch/following{/other_user}", "gists_url": "https://api.github.com/users/jswelch/gists{/gist_id}", "starred_url": "https://api.github.com/users/jswelch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jswelch/subscriptions", "organizations_url": "https://api.github.com/users/jswelch/orgs", "repos_url": "https://api.github.com/users/jswelch/repos", "events_url": "https://api.github.com/users/jswelch/events{/privacy}", "received_events_url": "https://api.github.com/users/jswelch/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 473173272, "node_id": "MDU6TGFiZWw0NzMxNzMyNzI=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:feature", "name": "type:feature", "color": "159b2e", "default": false, "description": ""}], "state": "open", "locked": false, "assignee": {"login": "caisq", "id": 16824702, "node_id": "MDQ6VXNlcjE2ODI0NzAy", "avatar_url": "https://avatars2.githubusercontent.com/u/16824702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/caisq", "html_url": "https://github.com/caisq", "followers_url": "https://api.github.com/users/caisq/followers", "following_url": "https://api.github.com/users/caisq/following{/other_user}", "gists_url": "https://api.github.com/users/caisq/gists{/gist_id}", "starred_url": "https://api.github.com/users/caisq/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/caisq/subscriptions", "organizations_url": "https://api.github.com/users/caisq/orgs", "repos_url": "https://api.github.com/users/caisq/repos", "events_url": "https://api.github.com/users/caisq/events{/privacy}", "received_events_url": "https://api.github.com/users/caisq/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "caisq", "id": 16824702, "node_id": "MDQ6VXNlcjE2ODI0NzAy", "avatar_url": "https://avatars2.githubusercontent.com/u/16824702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/caisq", "html_url": "https://github.com/caisq", "followers_url": "https://api.github.com/users/caisq/followers", "following_url": "https://api.github.com/users/caisq/following{/other_user}", "gists_url": "https://api.github.com/users/caisq/gists{/gist_id}", "starred_url": "https://api.github.com/users/caisq/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/caisq/subscriptions", "organizations_url": "https://api.github.com/users/caisq/orgs", "repos_url": "https://api.github.com/users/caisq/repos", "events_url": "https://api.github.com/users/caisq/events{/privacy}", "received_events_url": "https://api.github.com/users/caisq/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 6, "created_at": "2018-01-18T19:20:32Z", "updated_at": "2018-12-07T18:48:18Z", "closed_at": null, "author_association": "NONE", "body": "### Describe the problem\r\nThis is a feature request to add net-tools to the Tensorflow docker containers.  Having netstat in the Tensorflow container will make it easier to find open ports in a multi-tenant environment when launching Tensorflow Distributed or Tensorboard.\r\n\r\nNote, I have found how to add netstat (see URL below), but would prefer not having to change or maintain a modified version of the Tensorflow container.\r\n\r\nhttps://stackoverflow.com/questions/41961217/installing-netstat-on-docker-linux-container\r\n\r\n### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**:NA\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**:tensorflow/tensorflow:1.3.0 docker container\r\n- **TensorFlow installed from (source or binary)**:docker container\r\n- **TensorFlow version (use command below)**:1.3.0\r\n- **Python version**: 2.7.12\r\n- **Bazel version (if compiling from source)**:NA\r\n- **GCC/Compiler version (if compiling from source)**:NA\r\n- **CUDA/cuDNN version**:NA\r\n- **GPU model and memory**:NA\r\n- **Exact command to reproduce**:netstat\r\n"}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/16205", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/16205/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/16205/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/16205/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/16205", "id": 289479408, "node_id": "MDU6SXNzdWUyODk0Nzk0MDg=", "number": 16205, "title": "Graph Transform Tool unable to build in TF source r1.5?", "user": {"login": "kwotsin", "id": 11178344, "node_id": "MDQ6VXNlcjExMTc4MzQ0", "avatar_url": "https://avatars2.githubusercontent.com/u/11178344?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kwotsin", "html_url": "https://github.com/kwotsin", "followers_url": "https://api.github.com/users/kwotsin/followers", "following_url": "https://api.github.com/users/kwotsin/following{/other_user}", "gists_url": "https://api.github.com/users/kwotsin/gists{/gist_id}", "starred_url": "https://api.github.com/users/kwotsin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kwotsin/subscriptions", "organizations_url": "https://api.github.com/users/kwotsin/orgs", "repos_url": "https://api.github.com/users/kwotsin/repos", "events_url": "https://api.github.com/users/kwotsin/events{/privacy}", "received_events_url": "https://api.github.com/users/kwotsin/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 299643928, "node_id": "MDU6TGFiZWwyOTk2NDM5Mjg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:contributions%20welcome", "name": "stat:contributions welcome", "color": "f4b400", "default": false, "description": ""}, {"id": 473173351, "node_id": "MDU6TGFiZWw0NzMxNzMzNTE=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:build/install", "name": "type:build/install", "color": "159b2e", "default": false, "description": ""}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2018-01-18T02:06:22Z", "updated_at": "2018-02-01T17:29:43Z", "closed_at": null, "author_association": "CONTRIBUTOR", "body": "### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**: No\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**: Ubuntu 16.04\r\n- **TensorFlow installed from (source or binary)**: Source \r\n- **TensorFlow version (use command below)**: r1.5\r\n- **Python version**:  2.7.12\r\n- **Bazel version (if compiling from source)**: 0.8.1\r\n- **GCC/Compiler version (if compiling from source)**: 0.5.4\r\n- **CUDA/cuDNN version**: 9.0/7.0.5\r\n- **GPU model and memory**: 1080Ti\r\n- **Exact command to reproduce**:\r\n```\r\nsudo sh -c \"echo '/usr/local/cuda-8.0/lib64' >> /etc/ld.so.conf.d/nvidia.conf\"\r\nsudo ldconfig\r\nbazel clean\r\nbazel build tensorflow/tools/graph_transforms:transform_graph --verbose_failures\r\n```\r\n\r\n\r\n### Describe the problem\r\nI'm having issue trying to build the graph transform tool with bazel although I've look at existing solutions to similar problem such as #13481. I have been able to build the graph transform tool in previous versions but not in this version, so I'm not too sure what went wrong. Note that previously I got a similar problem when I installed TF from source but it was related to CUDA and I solved it after reinstalling nvcc.\r\n\r\nI also rebooted my comp just in case it was a temporary system error, but the error still persists.\r\n\r\nLooking at the error, does it have anything to do with \"JEMALLOC\"? I enabled this option when configuring tensorflow as seen in the official installation guide.\r\n\r\n\r\n### Source code / logs\r\n```\r\nERROR: /home/kwotsin/tensorflow/tensorflow/core/kernels/BUILD:3945:1: C++ compilation of rule '//tensorflow/core/kernels:scatter_nd_op' failed (Exit 1): crosstool_wrapper_driver_is_not_gcc failed: error executing command \r\n  (cd /home/kwotsin/.cache/bazel/_bazel_kwotsin/041f6cc3555a2d9f6211c6d126ede477/execroot/org_tensorflow && \\\r\n  exec env - \\\r\n    CUDA_TOOLKIT_PATH=/usr/local/cuda \\\r\n    CUDNN_INSTALL_PATH=/usr/local/cuda-9.0 \\\r\n    GCC_HOST_COMPILER_PATH=/usr/bin/gcc \\\r\n    PWD=/proc/self/cwd \\\r\n    PYTHON_BIN_PATH=/usr/bin/python \\\r\n    PYTHON_LIB_PATH=/usr/local/lib/python2.7/dist-packages \\\r\n    TF_CUDA_CLANG=0 \\\r\n    TF_CUDA_COMPUTE_CAPABILITIES=6.1 \\\r\n    TF_CUDA_VERSION=9.0 \\\r\n    TF_CUDNN_VERSION=7.0.5 \\\r\n    TF_NEED_CUDA=1 \\\r\n    TF_NEED_OPENCL_SYCL=0 \\\r\n\r\n  external/local_config_cuda/crosstool/clang/bin/crosstool_wrapper_driver_is_not_gcc -U_FORTIFY_SOURCE '-D_FORTIFY_SOURCE=1' -fstack-protector -fPIE -Wall -Wunused-but-set-parameter -Wno-free-nonheap-object -fno-omit-frame-pointer -g0 -O2 -DNDEBUG -ffunction-sections -fdata-sections -DGEMMLOWP_ALLOW_SLOW_SCALAR_FALLBACK '-std=c++11' -MD -MF bazel-out/k8-opt/bin/tensorflow/core/kernels/_objs/scatter_nd_op/tensorflow/core/kernels/scatter_nd_op_cpu_impl_5.d '-frandom-seed=bazel-out/k8-opt/bin/tensorflow/core/kernels/_objs/scatter_nd_op/tensorflow/core/kernels/scatter_nd_op_cpu_impl_5.o' -DEIGEN_MPL2_ONLY -D__CLANG_SUPPORT_DYN_ANNOTATION__ -DTENSORFLOW_USE_JEMALLOC -DTENSORFLOW_USE_ABSL -DTF_USE_SNAPPY -iquote . -iquote bazel-out/k8-opt/genfiles -iquote external/bazel_tools -iquote bazel-out/k8-opt/genfiles/external/bazel_tools -iquote external/eigen_archive -iquote bazel-out/k8-opt/genfiles/external/eigen_archive -iquote external/local_config_sycl -iquote bazel-out/k8-opt/genfiles/external/local_config_sycl -iquote external/com_google_absl -iquote bazel-out/k8-opt/genfiles/external/com_google_absl -iquote external/nsync -iquote bazel-out/k8-opt/genfiles/external/nsync -iquote external/jemalloc -iquote bazel-out/k8-opt/genfiles/external/jemalloc -iquote external/gif_archive -iquote bazel-out/k8-opt/genfiles/external/gif_archive -iquote external/jpeg -iquote bazel-out/k8-opt/genfiles/external/jpeg -iquote external/protobuf_archive -iquote bazel-out/k8-opt/genfiles/external/protobuf_archive -iquote external/com_googlesource_code_re2 -iquote bazel-out/k8-opt/genfiles/external/com_googlesource_code_re2 -iquote external/farmhash_archive -iquote bazel-out/k8-opt/genfiles/external/farmhash_archive -iquote external/fft2d -iquote bazel-out/k8-opt/genfiles/external/fft2d -iquote external/highwayhash -iquote bazel-out/k8-opt/genfiles/external/highwayhash -iquote external/png_archive -iquote bazel-out/k8-opt/genfiles/external/png_archive -iquote external/zlib_archive -iquote bazel-out/k8-opt/genfiles/external/zlib_archive -iquote external/local_config_cuda -iquote bazel-out/k8-opt/genfiles/external/local_config_cuda -isystem external/bazel_tools/tools/cpp/gcc3 -isystem external/eigen_archive -isystem bazel-out/k8-opt/genfiles/external/eigen_archive -isystem external/nsync/public -isystem bazel-out/k8-opt/genfiles/external/nsync/public -isystem external/jemalloc/include -isystem bazel-out/k8-opt/genfiles/external/jemalloc/include -isystem external/gif_archive/lib -isystem bazel-out/k8-opt/genfiles/external/gif_archive/lib -isystem external/protobuf_archive/src -isystem bazel-out/k8-opt/genfiles/external/protobuf_archive/src -isystem external/farmhash_archive/src -isystem bazel-out/k8-opt/genfiles/external/farmhash_archive/src -isystem external/png_archive -isystem bazel-out/k8-opt/genfiles/external/png_archive -isystem external/zlib_archive -isystem bazel-out/k8-opt/genfiles/external/zlib_archive -isystem external/local_config_cuda/cuda -isystem bazel-out/k8-opt/genfiles/external/local_config_cuda/cuda -isystem external/local_config_cuda/cuda/cuda/include -isystem bazel-out/k8-opt/genfiles/external/local_config_cuda/cuda/cuda/include -DEIGEN_AVOID_STL_ARRAY -Iexternal/gemmlowp -Wno-sign-compare -fno-exceptions '-ftemplate-depth=900' '-DGOOGLE_CUDA=1' -msse3 -pthread '-DGOOGLE_CUDA=1' -no-canonical-prefixes -Wno-builtin-macro-redefined '-D__DATE__=\"redacted\"' '-D__TIMESTAMP__=\"redacted\"' '-D__TIME__=\"redacted\"' -fno-canonical-system-headers -c tensorflow/core/kernels/scatter_nd_op_cpu_impl_5.cc -o bazel-out/k8-opt/bin/tensorflow/core/kernels/_objs/scatter_nd_op/tensorflow/core/kernels/scatter_nd_op_cpu_impl_5.o)\r\nIn file included from tensorflow/core/kernels/scatter_nd_op_cpu_impl_5.cc:18:0:\r\n./tensorflow/core/kernels/scatter_nd_op_cpu_impl.h: In instantiation of 'Index tensorflow::functor::ScatterNdFunctor<Eigen::ThreadPoolDevice, T, Index, OP, IXDIM>::operator()(const CPUDevice&, Index, Eigen::array<long int, IXDIM>, typename tensorflow::TTypes<T, 2>::Tensor, typename tensorflow::TTypes<T, 2>::ConstTensor, typename tensorflow::TTypes<T, 2>::ConstTensor, typename tensorflow::TTypes<T, 2>::Tensor) [with T = float; Index = int; tensorflow::scatter_nd_op::UpdateOp OP = (tensorflow::scatter_nd_op::UpdateOp)0; int IXDIM = 5; tensorflow::CPUDevice = Eigen::ThreadPoolDevice; typename tensorflow::TTypes<T, 2>::Tensor = Eigen::TensorMap<Eigen::Tensor<float, 2, 1, long int>, 16, Eigen::MakePointer>; typename tensorflow::TTypes<T, 2>::ConstTensor = Eigen::TensorMap<Eigen::Tensor<const int, 2, 1, long int>, 16, Eigen::MakePointer>; typename tensorflow::TTypes<T, 2>::ConstTensor = Eigen::TensorMap<Eigen::Tensor<const float, 2, 1, long int>, 16, Eigen::MakePointer>]':\r\n./tensorflow/core/kernels/scatter_nd_op_cpu_impl.h:162:1:   required from here\r\n./tensorflow/core/kernels/scatter_nd_op_cpu_impl.h:137:3: internal compiler error: Segmentation fault\r\n   }\r\n   ^\r\nPlease submit a full bug report,\r\nwith preprocessed source if appropriate.\r\nSee <file:///usr/share/doc/gcc-5/README.Bugs> for instructions.\r\nTarget //tensorflow/tools/graph_transforms:transform_graph failed to build\r\nINFO: Elapsed time: 147.229s, Critical Path: 24.74s\r\nFAILED: Build did NOT complete successfully\r\n\r\n```"}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/16187", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/16187/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/16187/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/16187/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/16187", "id": 289194443, "node_id": "MDU6SXNzdWUyODkxOTQ0NDM=", "number": 16187, "title": "Faster R-CNN: too many resources requested for launch", "user": {"login": "JesperChristensen89", "id": 15313473, "node_id": "MDQ6VXNlcjE1MzEzNDcz", "avatar_url": "https://avatars1.githubusercontent.com/u/15313473?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JesperChristensen89", "html_url": "https://github.com/JesperChristensen89", "followers_url": "https://api.github.com/users/JesperChristensen89/followers", "following_url": "https://api.github.com/users/JesperChristensen89/following{/other_user}", "gists_url": "https://api.github.com/users/JesperChristensen89/gists{/gist_id}", "starred_url": "https://api.github.com/users/JesperChristensen89/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JesperChristensen89/subscriptions", "organizations_url": "https://api.github.com/users/JesperChristensen89/orgs", "repos_url": "https://api.github.com/users/JesperChristensen89/repos", "events_url": "https://api.github.com/users/JesperChristensen89/events{/privacy}", "received_events_url": "https://api.github.com/users/JesperChristensen89/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 299643928, "node_id": "MDU6TGFiZWwyOTk2NDM5Mjg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:contributions%20welcome", "name": "stat:contributions welcome", "color": "f4b400", "default": false, "description": ""}, {"id": 473172988, "node_id": "MDU6TGFiZWw0NzMxNzI5ODg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:bug", "name": "type:bug", "color": "159b2e", "default": false, "description": ""}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 13, "created_at": "2018-01-17T09:24:26Z", "updated_at": "2019-05-10T09:04:24Z", "closed_at": null, "author_association": "NONE", "body": "I am trying to deploy the pretrained Faster-RCNN Inception V2 from the object detection API on a Jetson TX2. \r\nI am running CUDA 8, cuDNN 6 and have tested with both TF 1.3 and 1.5 in a Jupyter Notebook environment. \r\nWhen I monitor the GPU memory it starts out by having 4.8 GB free and when launching these fills up immediately. When I run on my GTX1060 6 GB GPU I have effectively the same amount of memory free but are having no issues running.\r\nSmaller models as SSD MobileNet runs without problems.\r\n\r\nFrom tests performed today, I can supply the following dumps.\r\n\r\nJupyter Notebook terminal output:\r\n\r\n```\r\n2018-01-17 16:16:19.584106: I tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:859] ARM64 does not support NUMA - returning NUMA node zero\r\n2018-01-17 16:16:19.584261: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1206] Found device 0 with properties: \r\nname: NVIDIA Tegra X2 major: 6 minor: 2 memoryClockRate(GHz): 1.3005\r\npciBusID: 0000:00:00.0\r\ntotalMemory: 7.67GiB freeMemory: 4.97GiB\r\n2018-01-17 16:16:19.584312: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1300] Adding visible gpu device 0\r\n2018-01-17 16:16:20.824479: I tensorflow/core/common_runtime/gpu/gpu_device.cc:987] Creating TensorFlow device (/job:localhost/replica:0/task:0/device:GPU:0 with 4437 MB memory) -> physical GPU (device: 0, name: NVIDIA Tegra X2, pci bus id: 0000:00:00.0, compute capability: 6.2)\r\n2018-01-17 16:17:09.816477: E tensorflow/stream_executor/cuda/cuda_driver.cc:1080] failed to synchronize the stop event: CUDA_ERROR_LAUNCH_FAILED\r\n2018-01-17 16:17:09.816703: E tensorflow/stream_executor/cuda/cuda_timer.cc:54] Internal: error destroying CUDA event in context 0x7f001959b0: CUDA_ERROR_LAUNCH_FAILED\r\n2018-01-17 16:17:09.816771: E tensorflow/stream_executor/cuda/cuda_timer.cc:59] Internal: error destroying CUDA event in context 0x7f001959b0: CUDA_ERROR_LAUNCH_FAILED\r\n2018-01-17 16:17:09.816912: E tensorflow/stream_executor/cuda/cuda_dnn.cc:2456] failed to enqueue convolution on stream: CUDNN_STATUS_EXECUTION_FAILED\r\n2018-01-17 16:17:10.174651: E tensorflow/stream_executor/event.cc:33] error destroying CUDA event in context 0x7f001959b0: CUDA_ERROR_LAUNCH_FAILED\r\n2018-01-17 16:17:10.174772: E tensorflow/stream_executor/event.cc:33] error destroying CUDA event in context 0x7f001959b0: CUDA_ERROR_LAUNCH_FAILED\r\n2018-01-17 16:17:10.174806: E tensorflow/stream_executor/event.cc:33] error destroying CUDA event in context 0x7f001959b0: CUDA_ERROR_LAUNCH_FAILED\r\n2018-01-17 16:17:10.174836: E tensorflow/stream_executor/event.cc:33] error destroying CUDA event in context 0x7f001959b0: CUDA_ERROR_LAUNCH_FAILED\r\n2018-01-17 16:17:10.174865: E tensorflow/stream_executor/event.cc:33] error destroying CUDA event in context 0x7f001959b0: CUDA_ERROR_LAUNCH_FAILED\r\n```\r\n\r\nError dump from printout inside the notebook:\r\n\r\n```\r\nException in thread Thread-4:\r\nTraceback (most recent call last):\r\n  File \"/usr/lib/python2.7/threading.py\", line 801, in __bootstrap_inner\r\n    self.run()\r\n  File \"/usr/lib/python2.7/threading.py\", line 754, in run\r\n    self.__target(*self.__args, **self.__kwargs)\r\n  File \"<ipython-input-5-a51933cd03d8>\", line 19, in worker\r\n    im, t_elapsed = detect_objects(frame_rgb, sess, detection_graph)\r\n  File \"<ipython-input-4-6c8da66803e2>\", line 19, in detect_objects\r\n    feed_dict={image_tensor: image_np_expanded})\r\n  File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/client/session.py\", line 895, in run\r\n    run_metadata_ptr)\r\n  File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/client/session.py\", line 1128, in _run\r\n    feed_dict_tensor, options, run_metadata)\r\n  File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/client/session.py\", line 1344, in _do_run\r\n    options, run_metadata)\r\n  File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/client/session.py\", line 1363, in _do_call\r\n    raise type(e)(node_def, op, message)\r\nInternalError: cuDNN launch failure : input shape([1,64,138,256]) filter shape([3,3,64,192])\r\n\t [[Node: FirstStageFeatureExtractor/InceptionV2/InceptionV2/Conv2d_2c_3x3/Conv2D = Conv2D[T=DT_FLOAT, data_format=\"NHWC\", dilations=[1, 1, 1, 1], padding=\"SAME\", strides=[1, 1, 1, 1], use_cudnn_on_gpu=true, _device=\"/job:localhost/replica:0/task:0/device:GPU:0\"](FirstStageFeatureExtractor/InceptionV2/InceptionV2/Conv2d_2b_1x1/Relu, FirstStageFeatureExtractor/InceptionV2/Conv2d_2c_3x3/weights/read/_47__cf__53)]]\r\n\t [[Node: BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/SortByField/Equal/_883 = _Recv[client_terminated=false, recv_device=\"/job:localhost/replica:0/task:0/device:CPU:0\", send_device=\"/job:localhost/replica:0/task:0/device:GPU:0\", send_device_incarnation=1, tensor_name=\"edge_10508...ield/Equal\", tensor_type=DT_BOOL, _device=\"/job:localhost/replica:0/task:0/device:CPU:0\"](^_cloopBatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/non_max_suppression/iou_threshold/_1)]]\r\n\r\nCaused by op u'FirstStageFeatureExtractor/InceptionV2/InceptionV2/Conv2d_2c_3x3/Conv2D', defined at:\r\n  File \"/usr/lib/python2.7/threading.py\", line 774, in __bootstrap\r\n    self.__bootstrap_inner()\r\n  File \"/usr/lib/python2.7/threading.py\", line 801, in __bootstrap_inner\r\n    self.run()\r\n  File \"/usr/lib/python2.7/threading.py\", line 754, in run\r\n    self.__target(*self.__args, **self.__kwargs)\r\n  File \"<ipython-input-5-a51933cd03d8>\", line 10, in worker\r\n    tf.import_graph_def(od_graph_def, name='')\r\n  File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/util/deprecation.py\", line 316, in new_func\r\n    return func(*args, **kwargs)\r\n  File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/framework/importer.py\", line 548, in import_graph_def\r\n    op_def=op_def)\r\n  File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/framework/ops.py\", line 3176, in create_op\r\n    op_def=op_def)\r\n  File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/framework/ops.py\", line 1617, in __init__\r\n    self._traceback = self._graph._extract_stack()  # pylint: disable=protected-access\r\n\r\nInternalError (see above for traceback): cuDNN launch failure : input shape([1,64,138,256]) filter shape([3,3,64,192])\r\n\t [[Node: FirstStageFeatureExtractor/InceptionV2/InceptionV2/Conv2d_2c_3x3/Conv2D = Conv2D[T=DT_FLOAT, data_format=\"NHWC\", dilations=[1, 1, 1, 1], padding=\"SAME\", strides=[1, 1, 1, 1], use_cudnn_on_gpu=true, _device=\"/job:localhost/replica:0/task:0/device:GPU:0\"](FirstStageFeatureExtractor/InceptionV2/InceptionV2/Conv2d_2b_1x1/Relu, FirstStageFeatureExtractor/InceptionV2/Conv2d_2c_3x3/weights/read/_47__cf__53)]]\r\n\t [[Node: BatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/SortByField/Equal/_883 = _Recv[client_terminated=false, recv_device=\"/job:localhost/replica:0/task:0/device:CPU:0\", send_device=\"/job:localhost/replica:0/task:0/device:GPU:0\", send_device_incarnation=1, tensor_name=\"edge_10508...ield/Equal\", tensor_type=DT_BOOL, _device=\"/job:localhost/replica:0/task:0/device:CPU:0\"](^_cloopBatchMultiClassNonMaxSuppression/map/while/MultiClassNonMaxSuppression/non_max_suppression/iou_threshold/_1)]]\r\n```\r\n\r\nOutput of tegrastats at the point of error:\r\n```\r\nRAM 3151/7851MB (lfb 915x4MB) cpu [2%@345,100%@2034,99%@2034,1%@348,3%@348,6%@349] EMC 5%@1866 APE 150 GR3D 0%@114\r\nRAM 3151/7851MB (lfb 915x4MB) cpu [0%@345,100%@1981,100%@1988,3%@348,5%@348,4%@349] EMC 5%@1866 APE 150 GR3D 0%@114\r\nRAM 3152/7851MB (lfb 915x4MB) cpu [2%@345,100%@2021,100%@2021,4%@348,5%@348,2%@349] EMC 5%@1866 APE 150 GR3D 0%@114\r\nRAM 3152/7851MB (lfb 915x4MB) cpu [2%@345,100%@2035,100%@2034,3%@349,4%@348,2%@348] EMC 5%@1866 APE 150 GR3D 0%@114\r\nRAM 3152/7851MB (lfb 915x4MB) cpu [1%@345,100%@2016,100%@2019,2%@345,1%@349,3%@348] EMC 5%@1866 APE 150 GR3D 0%@114\r\nRAM 3181/7851MB (lfb 898x4MB) cpu [21%@806,100%@2021,56%@2024,8%@499,10%@500,3%@500] EMC 5%@1866 APE 150 GR3D 24%@114\r\nRAM 3210/7851MB (lfb 887x4MB) cpu [8%@345,100%@2018,32%@2026,7%@345,24%@345,13%@349] EMC 5%@1866 APE 150 GR3D 99%@114\r\nRAM 3327/7851MB (lfb 838x4MB) cpu [2%@1573,100%@1987,31%@1992,35%@1574,13%@1575,5%@1573] EMC 5%@1866 APE 150 GR3D 8%@114\r\nRAM 3578/7851MB (lfb 758x4MB) cpu [19%@1806,100%@2080,0%@2035,7%@2035,2%@2035,56%@1727] EMC 5%@1866 APE 150 GR3D 10%@114\r\nRAM 3732/7851MB (lfb 715x4MB) cpu [2%@345,100%@2034,83%@2035,5%@348,21%@345,2%@346] EMC 7%@1866 APE 150 GR3D 99%@624\r\nRAM 3732/7851MB (lfb 715x4MB) cpu [94%@2036,100%@2035,97%@2034,87%@1987,13%@2035,1%@2035] EMC 4%@1866 APE 150 GR3D 43%@1032\r\nRAM 3659/7851MB (lfb 727x4MB) cpu [2%@653,81%@2022,20%@2027,28%@652,2%@655,4%@655] EMC 3%@1866 APE 150 GR3D 0%@114\r\nRAM 3661/7851MB (lfb 727x4MB) cpu [1%@345,100%@2033,0%@2035,1%@346,2%@348,3%@349] EMC 3%@1866 APE 150 GR3D 0%@114\r\nRAM 3661/7851MB (lfb 727x4MB) cpu [2%@345,100%@2035,0%@2034,0%@348,3%@348,0%@348] EMC 2%@1866 APE 150 GR3D 0%@114\r\nRAM 3661/7851MB (lfb 727x4MB) cpu [3%@345,100%@2034,0%@2035,1%@348,1%@348,3%@348] EMC 2%@1866 APE 150 GR3D 0%@114\r\nRAM 3661/7851MB (lfb 727x4MB) cpu [2%@345,100%@2034,0%@2034,2%@348,4%@348,1%@348] EMC 2%@1866 APE 150 GR3D 0%@114\r\nRAM 3661/7851MB (lfb 727x4MB) cpu [4%@345,100%@1988,0%@1987,2%@346,2%@345,1%@345] EMC 2%@1866 APE 150 GR3D 9%@114\r\nRAM 3661/7851MB (lfb 727x4MB) cpu [4%@345,100%@2026,0%@2026,1%@347,0%@348,3%@348] EMC 2%@1866 APE 150 GR3D 0%@114\r\nRAM 3661/7851MB (lfb 727x4MB) cpu [8%@345,100%@2024,0%@2028,5%@345,8%@345,1%@345] EMC 2%@1866 APE 150 GR3D 0%@114\r\n```\r\nAs you can see the RAM are nowhere near full at the moment of the error.\r\n\r\nCan anybody suggest a solution to this?"}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/16139", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/16139/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/16139/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/16139/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/16139", "id": 288732606, "node_id": "MDU6SXNzdWUyODg3MzI2MDY=", "number": 16139, "title": "Segmentation fault when running optimization step with 3d convolution", "user": {"login": "cericson", "id": 6691014, "node_id": "MDQ6VXNlcjY2OTEwMTQ=", "avatar_url": "https://avatars3.githubusercontent.com/u/6691014?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cericson", "html_url": "https://github.com/cericson", "followers_url": "https://api.github.com/users/cericson/followers", "following_url": "https://api.github.com/users/cericson/following{/other_user}", "gists_url": "https://api.github.com/users/cericson/gists{/gist_id}", "starred_url": "https://api.github.com/users/cericson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cericson/subscriptions", "organizations_url": "https://api.github.com/users/cericson/orgs", "repos_url": "https://api.github.com/users/cericson/repos", "events_url": "https://api.github.com/users/cericson/events{/privacy}", "received_events_url": "https://api.github.com/users/cericson/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 473172988, "node_id": "MDU6TGFiZWw0NzMxNzI5ODg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:bug", "name": "type:bug", "color": "159b2e", "default": false, "description": ""}], "state": "open", "locked": false, "assignee": {"login": "rmlarsen", "id": 16907534, "node_id": "MDQ6VXNlcjE2OTA3NTM0", "avatar_url": "https://avatars2.githubusercontent.com/u/16907534?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rmlarsen", "html_url": "https://github.com/rmlarsen", "followers_url": "https://api.github.com/users/rmlarsen/followers", "following_url": "https://api.github.com/users/rmlarsen/following{/other_user}", "gists_url": "https://api.github.com/users/rmlarsen/gists{/gist_id}", "starred_url": "https://api.github.com/users/rmlarsen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rmlarsen/subscriptions", "organizations_url": "https://api.github.com/users/rmlarsen/orgs", "repos_url": "https://api.github.com/users/rmlarsen/repos", "events_url": "https://api.github.com/users/rmlarsen/events{/privacy}", "received_events_url": "https://api.github.com/users/rmlarsen/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "rmlarsen", "id": 16907534, "node_id": "MDQ6VXNlcjE2OTA3NTM0", "avatar_url": "https://avatars2.githubusercontent.com/u/16907534?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rmlarsen", "html_url": "https://github.com/rmlarsen", "followers_url": "https://api.github.com/users/rmlarsen/followers", "following_url": "https://api.github.com/users/rmlarsen/following{/other_user}", "gists_url": "https://api.github.com/users/rmlarsen/gists{/gist_id}", "starred_url": "https://api.github.com/users/rmlarsen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rmlarsen/subscriptions", "organizations_url": "https://api.github.com/users/rmlarsen/orgs", "repos_url": "https://api.github.com/users/rmlarsen/repos", "events_url": "https://api.github.com/users/rmlarsen/events{/privacy}", "received_events_url": "https://api.github.com/users/rmlarsen/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 6, "created_at": "2018-01-15T22:29:25Z", "updated_at": "2018-12-19T18:43:57Z", "closed_at": null, "author_association": "NONE", "body": "### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**: Yes\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**: Arch Linux (4.14.13-1 linux kernel version)\r\n- **TensorFlow installed from (source or binary)**: source (using the package here: https://www.archlinux.org/packages/community/x86_64/python-tensorflow-cuda/)\r\n- **TensorFlow version (use command below)**: 1.4.1\r\n- **Python version**: 3.6.4\r\n- **Bazel version (if compiling from source)**: 0.9.0\r\n- **GCC/Compiler version (if compiling from source)**: 7.2.1\r\n- **CUDA/cuDNN version**: 9.1.85-1/7.0.5-2\r\n- **GPU model and memory**: NVidia Quadro K4200, 4028MiB\r\n- **Exact command to reproduce**: `python test.py`\r\nNote that the same code also fails in a Ubuntu docker container (Dockerfile attached).\r\n\r\n### Describe the problem\r\nI set up a computation graph with a 3d convolution. I can evaluate the result of this graph, but when I attempt to optimize the parameters of the graph (`train_step.run(feed_dict={x: sample, y_: label})`), tensorflow segfaults.\r\n\r\nIn a jupyterlab notebook running on Ubuntu, if I run the same code, the notebook hangs indefinitely at the same line. In both cases, the last line of the program is never run - \"ran train step\" is never printed.\r\n\r\nI also tried running this on my CPU with `os.environ['CUDA_VISIBLE_DEVICES'] = '-1'`. I get the same segfault.\r\n\r\nThe segfault goes away if I do any of the following:\r\n- Remove the 3d convolution\r\n- Reduce the input size significantly (e.g. 100x smaller to 1 x 41 x 96 x 128 x 1)\r\n- Reduce the kernel size significantly\r\n\r\n### Source code / logs\r\nMinimal example code (test.py):\r\n```python\r\nimport numpy as np\r\nimport tensorflow as tf\r\n\r\nsample = np.zeros((1, 41, 960, 1280, 1))\r\nlabel = np.zeros((1,))\r\n\r\nrc_kernel = np.ones((31,))\r\n\r\nx = tf.placeholder(tf.float64, shape=[None, 41, 960, 1280, 1])\r\ny_ = tf.placeholder(tf.float64, shape=[None])\r\n\r\nW_conv_r = tf.Variable(rc_kernel.reshape((1, -1, 1, 1, 1)))\r\nh_blur = tf.nn.conv3d(x, W_conv_r, [1, 1, 1, 1, 1], \"VALID\")\r\n\r\nh_sum = tf.reduce_sum(tf.reduce_sum(tf.reduce_sum(h_blur, axis=3), axis=2), axis=1)\r\ny = tf.sigmoid(h_sum)\r\n\r\nsq_err = (y - y_) ** 2\r\n\r\ntrain_step = tf.train.GradientDescentOptimizer(0.1).minimize(sq_err)\r\n\r\nwith tf.Session() as sess:\r\n    sess.run(tf.global_variables_initializer())\r\n    E = sq_err.eval(feed_dict={x: sample, y_: label})\r\n    print(f'E = {E}')\r\n    train_step.run(feed_dict={x: sample, y_: label})  # fails here\r\n    print('ran train step')\r\n```\r\n\r\nDockerfile:\r\n[Dockerfile.txt](https://github.com/tensorflow/tensorflow/files/1633128/Dockerfile.txt)"}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/16104", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/16104/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/16104/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/16104/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/16104", "id": 288348776, "node_id": "MDU6SXNzdWUyODgzNDg3NzY=", "number": 16104, "title": "Feature request: Allow the build to use the system-installed protobuf lib", "user": {"login": "svenstaro", "id": 1664, "node_id": "MDQ6VXNlcjE2NjQ=", "avatar_url": "https://avatars0.githubusercontent.com/u/1664?v=4", "gravatar_id": "", "url": "https://api.github.com/users/svenstaro", "html_url": "https://github.com/svenstaro", "followers_url": "https://api.github.com/users/svenstaro/followers", "following_url": "https://api.github.com/users/svenstaro/following{/other_user}", "gists_url": "https://api.github.com/users/svenstaro/gists{/gist_id}", "starred_url": "https://api.github.com/users/svenstaro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/svenstaro/subscriptions", "organizations_url": "https://api.github.com/users/svenstaro/orgs", "repos_url": "https://api.github.com/users/svenstaro/repos", "events_url": "https://api.github.com/users/svenstaro/events{/privacy}", "received_events_url": "https://api.github.com/users/svenstaro/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 299643928, "node_id": "MDU6TGFiZWwyOTk2NDM5Mjg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:contributions%20welcome", "name": "stat:contributions welcome", "color": "f4b400", "default": false, "description": ""}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 10, "created_at": "2018-01-13T18:23:27Z", "updated_at": "2018-05-29T09:23:55Z", "closed_at": null, "author_association": "NONE", "body": "### Describe the problem\r\nCurrently, it's impossible to use the system-installed protobuf library because the tensorflow build always uses the `protobuf_archive` version. There should be an option to use the one installed in the system.\r\n\r\nBackground: I package tensorflow for Arch Linux and we run into symbol conflicts if a user wants to use protobuf and tensorflow together in a binary because tensorflow's protobuf symbols conflict with the one installed in the system already.\r\n\r\nOriginal Arch bug report: https://bugs.archlinux.org/task/56943"}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/16087", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/16087/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/16087/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/16087/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/16087", "id": 288273727, "node_id": "MDU6SXNzdWUyODgyNzM3Mjc=", "number": 16087, "title": "  tf.estimator.train_and_evaluate list  of eval_spec", "user": {"login": "bhack", "id": 1710528, "node_id": "MDQ6VXNlcjE3MTA1Mjg=", "avatar_url": "https://avatars0.githubusercontent.com/u/1710528?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bhack", "html_url": "https://github.com/bhack", "followers_url": "https://api.github.com/users/bhack/followers", "following_url": "https://api.github.com/users/bhack/following{/other_user}", "gists_url": "https://api.github.com/users/bhack/gists{/gist_id}", "starred_url": "https://api.github.com/users/bhack/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bhack/subscriptions", "organizations_url": "https://api.github.com/users/bhack/orgs", "repos_url": "https://api.github.com/users/bhack/repos", "events_url": "https://api.github.com/users/bhack/events{/privacy}", "received_events_url": "https://api.github.com/users/bhack/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 404586594, "node_id": "MDU6TGFiZWw0MDQ1ODY1OTQ=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:awaiting%20tensorflower", "name": "stat:awaiting tensorflower", "color": "f4b400", "default": false, "description": ""}, {"id": 473173272, "node_id": "MDU6TGFiZWw0NzMxNzMyNzI=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:feature", "name": "type:feature", "color": "159b2e", "default": false, "description": ""}], "state": "open", "locked": false, "assignee": {"login": "karmel", "id": 667809, "node_id": "MDQ6VXNlcjY2NzgwOQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/667809?v=4", "gravatar_id": "", "url": "https://api.github.com/users/karmel", "html_url": "https://github.com/karmel", "followers_url": "https://api.github.com/users/karmel/followers", "following_url": "https://api.github.com/users/karmel/following{/other_user}", "gists_url": "https://api.github.com/users/karmel/gists{/gist_id}", "starred_url": "https://api.github.com/users/karmel/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/karmel/subscriptions", "organizations_url": "https://api.github.com/users/karmel/orgs", "repos_url": "https://api.github.com/users/karmel/repos", "events_url": "https://api.github.com/users/karmel/events{/privacy}", "received_events_url": "https://api.github.com/users/karmel/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "karmel", "id": 667809, "node_id": "MDQ6VXNlcjY2NzgwOQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/667809?v=4", "gravatar_id": "", "url": "https://api.github.com/users/karmel", "html_url": "https://github.com/karmel", "followers_url": "https://api.github.com/users/karmel/followers", "following_url": "https://api.github.com/users/karmel/following{/other_user}", "gists_url": "https://api.github.com/users/karmel/gists{/gist_id}", "starred_url": "https://api.github.com/users/karmel/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/karmel/subscriptions", "organizations_url": "https://api.github.com/users/karmel/orgs", "repos_url": "https://api.github.com/users/karmel/repos", "events_url": "https://api.github.com/users/karmel/events{/privacy}", "received_events_url": "https://api.github.com/users/karmel/received_events", "type": "User", "site_admin": false}, {"login": "xiejw", "id": 1184671, "node_id": "MDQ6VXNlcjExODQ2NzE=", "avatar_url": "https://avatars1.githubusercontent.com/u/1184671?v=4", "gravatar_id": "", "url": "https://api.github.com/users/xiejw", "html_url": "https://github.com/xiejw", "followers_url": "https://api.github.com/users/xiejw/followers", "following_url": "https://api.github.com/users/xiejw/following{/other_user}", "gists_url": "https://api.github.com/users/xiejw/gists{/gist_id}", "starred_url": "https://api.github.com/users/xiejw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/xiejw/subscriptions", "organizations_url": "https://api.github.com/users/xiejw/orgs", "repos_url": "https://api.github.com/users/xiejw/repos", "events_url": "https://api.github.com/users/xiejw/events{/privacy}", "received_events_url": "https://api.github.com/users/xiejw/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 10, "created_at": "2018-01-12T23:16:17Z", "updated_at": "2020-03-04T19:11:34Z", "closed_at": null, "author_association": "CONTRIBUTOR", "body": "Sometimes could be useful to evaluate on different clusters of the evaluation set with distinct metrics, summaries etc.\r\nDo you plan that this interface will accept a list of `eval_spec` in the future?"}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/16054", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/16054/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/16054/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/16054/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/16054", "id": 287939561, "node_id": "MDU6SXNzdWUyODc5Mzk1NjE=", "number": 16054, "title": "Lack of Complex64 support for Java API", "user": {"login": "rajha-korithrien", "id": 8145476, "node_id": "MDQ6VXNlcjgxNDU0NzY=", "avatar_url": "https://avatars3.githubusercontent.com/u/8145476?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rajha-korithrien", "html_url": "https://github.com/rajha-korithrien", "followers_url": "https://api.github.com/users/rajha-korithrien/followers", "following_url": "https://api.github.com/users/rajha-korithrien/following{/other_user}", "gists_url": "https://api.github.com/users/rajha-korithrien/gists{/gist_id}", "starred_url": "https://api.github.com/users/rajha-korithrien/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rajha-korithrien/subscriptions", "organizations_url": "https://api.github.com/users/rajha-korithrien/orgs", "repos_url": "https://api.github.com/users/rajha-korithrien/repos", "events_url": "https://api.github.com/users/rajha-korithrien/events{/privacy}", "received_events_url": "https://api.github.com/users/rajha-korithrien/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 299643928, "node_id": "MDU6TGFiZWwyOTk2NDM5Mjg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:contributions%20welcome", "name": "stat:contributions welcome", "color": "f4b400", "default": false, "description": ""}, {"id": 473173272, "node_id": "MDU6TGFiZWw0NzMxNzMyNzI=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:feature", "name": "type:feature", "color": "159b2e", "default": false, "description": ""}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-01-11T22:02:31Z", "updated_at": "2018-01-16T07:08:59Z", "closed_at": null, "author_association": "NONE", "body": "This issue is not about a bug, but I will fill in the form anyhow ;-)\r\n### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**:\r\nYes\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**:\r\nMac 10.13.2\r\n- **TensorFlow installed from (source or binary)**:\r\nsource\r\n- **TensorFlow version (use command below)**:\r\nmaster branch at commit: b86dc365ebbef64daceced37026518696ede5b7b\r\n- **Python version**:\r\nN/A Using Java version \"1.8.0_152\"\r\n- **Bazel version (if compiling from source)**:\r\nBuild label: 0.8.1-homebrew\r\nBuild target: bazel-out/darwin-opt/bin/src/main/java/com/google/devtools/build/lib/bazel/BazelServer_deploy.jar\r\nBuild time: Tue Dec 5 19:29:04 2017 (1512502144)\r\n- **GCC/Compiler version (if compiling from source)**:\r\nConfigured with: --prefix=/Applications/Xcode.app/Contents/Developer/usr --with-gxx-include-dir=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.13.sdk/usr/include/c++/4.2.1\r\nApple LLVM version 9.0.0 (clang-900.0.39.2)\r\nTarget: x86_64-apple-darwin17.3.0\r\nThread model: posix\r\nInstalledDir: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin\r\n- **CUDA/cuDNN version**:\r\nN/A not using CUDA\r\n- **GPU model and memory**:\r\nN/A not using GPU\r\n- **Exact command to reproduce**:\r\nThere is no bug to reproduce\r\n\r\n### Describe the problem\r\nThere is not really a problem. I have need to build TensorFlow computations in Java and have support for complex numbers. Because the C API already supports COMPLEX64 tensors, it was a straight forward effort to expose them in the Java API. Along with unit tests, I have also added a Java example based on the Python tutorial that builds an image that displays the Mandelbrot fractal to show that the complex number support works correctly.\r\n\r\n### Source code / logs\r\nHere is a very short example of using the API, clearly there are functions in the example that are not available defined in the example, but it gets the point across. This example is basically lifted from a new java example I created called MandelbrotExample.java\r\n```\r\nTensor<Complex64> resultZ = null;\r\ntry(Graph g = new Graph()) {\r\n    //We create a meshgrid based on two numeric ranges, by wrapping the ranges\r\n    //in Tensors and then pulling out sub grids to make complex numbers\r\n    try (Tensor<Float> meshGridT = buildMeshGrid(range1Spec, range2Spec);\r\n         Tensor<Integer> zeroT = Tensors.create(new int[]{0});\r\n         Tensor<Integer> oneT = Tensors.create(new int[]{1});\r\n         Tensor<Complex64> jTensor = Tensors.create(0.0f, 1.0f)) {\r\n    \r\n        Output<Integer> zero = buildConstant(g, \"0\", zeroT);\r\n        Output<Integer> one = buildConstant(g, \"1\", oneT);\r\n\r\n        Output<Float> meshGrid = buildConstant(g, \"meshgrid\", meshGridT);\r\n\r\n        Output<Complex64> j = buildConstant(g, \"imagUnit\", jTensor);\r\n\r\n        //We use GatherNd to pull out the two parts of the original mesh grid\r\n        //the Z complex tensor\r\n        Output<Float> Yfloat = g.opBuilder(\"GatherNd\", \"get_y\")\r\n                .addInput(meshGrid)\r\n                .addInput(zero) //use zero\r\n                .build().output(0);\r\n        Output<Float> Xfloat = g.opBuilder(\"GatherNd\", \"get_x\")\r\n                .addInput(meshGrid)\r\n                .addInput(one) //use one\r\n                .build().output(0);\r\n\r\n        Output<Complex64> Y = g.opBuilder(\"Cast\", \"castYtoComplex\")\r\n                .addInput(Yfloat)\r\n                .setAttr(\"DstT\", DataType.COMPLEX64)\r\n                .build().output(0);\r\n\r\n        Output<Complex64> X = g.opBuilder(\"Cast\", \"castXtoComplex\")\r\n                .addInput(Xfloat)\r\n                .setAttr(\"DstT\", DataType.COMPLEX64)\r\n                .build().output(0);\r\n\r\n        //Z is constructed by X + Yj\r\n        Output<Complex64> mulYj = g.opBuilder(\"Mul\", \"mulYj\")\r\n                .addInput(Y)\r\n                .addInput(j)\r\n                .build()\r\n                .output(0);\r\n        Output<Complex64> Z = g.opBuilder(\"Add\", \"addZ\")\r\n                .addInput(X)\r\n                .addInput(mulYj)\r\n                .build()\r\n                .output(0);\r\n\r\n        try(Session s = new Session(g)){\r\n            resultZ = s.runner().fetch(Z).run().get(0).expect(Complex64.class);\r\n        }\r\n    }\r\n}\r\n```\r\nI would like to get my local branched pushed to GitHub and then a pull request put in with these changes. I have attached a diff file for the curious. I am still working on getting a corporate CLA put into place.\r\nThanks for your time and consideration!\r\n[java-complex64.patch.txt](https://github.com/tensorflow/tensorflow/files/1624251/java-complex64.patch.txt)\r\n\r\n"}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/16028", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/16028/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/16028/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/16028/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/16028", "id": 287662816, "node_id": "MDU6SXNzdWUyODc2NjI4MTY=", "number": 16028, "title": "Optimzer: Better handling of gradients for min/max ops.", "user": {"login": "olegserov", "id": 129835, "node_id": "MDQ6VXNlcjEyOTgzNQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/129835?v=4", "gravatar_id": "", "url": "https://api.github.com/users/olegserov", "html_url": "https://github.com/olegserov", "followers_url": "https://api.github.com/users/olegserov/followers", "following_url": "https://api.github.com/users/olegserov/following{/other_user}", "gists_url": "https://api.github.com/users/olegserov/gists{/gist_id}", "starred_url": "https://api.github.com/users/olegserov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/olegserov/subscriptions", "organizations_url": "https://api.github.com/users/olegserov/orgs", "repos_url": "https://api.github.com/users/olegserov/repos", "events_url": "https://api.github.com/users/olegserov/events{/privacy}", "received_events_url": "https://api.github.com/users/olegserov/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 299643928, "node_id": "MDU6TGFiZWwyOTk2NDM5Mjg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:contributions%20welcome", "name": "stat:contributions welcome", "color": "f4b400", "default": false, "description": ""}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 21, "created_at": "2018-01-11T04:47:49Z", "updated_at": "2018-11-23T08:38:26Z", "closed_at": null, "author_association": "NONE", "body": "Please don't kick me too hard for this. If this ticket should not be here, please direct me to the proper place. It's not a help or support request, just a very naive idea/request/improvement.\r\n\r\nImage a model has this op in the graph: `y = tf.maximum(a, b)`. If `y` is contributing error to the loss (higher `y` higher is loss), then you are interested in minimizing both `a` and `b`. Otherwise, your optimizer will play whack-a-mole game forever. Especially, if you have something like this in your model: `b = 1 - a` and `y = tf.maximum(a, b)`\r\n\r\nI've researching how does optimizer works and looks like each op has a function that defines how to calculate its gradients. \r\nIn the current implementation for maximum/minimum (python's version) is located here: \r\nhttps://github.com/tensorflow/tensorflow/blob/master/tensorflow/python/ops/math_grad.py#L901\r\nhttps://github.com/tensorflow/tensorflow/blob/master/tensorflow/python/ops/math_grad.py#L883\r\n\r\nIn the current implementation, it discards gradients for `a`, if `b` is bigger than `a` and other way around. \r\n\r\nI think, that there is some place for improvement of training speed simply by considering gradients for all variables in min/max operations (including reduce_min/reduce_max and all max/min pooling). There are a lot of models with max pooling. It makes sense that they will train faster if they stop playing whack-a-feature each time it has max pooling layer.\r\n\r\nIf it make sense, I would like to do a small PoC.\r\n"}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/15997", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/15997/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/15997/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/15997/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/15997", "id": 287322094, "node_id": "MDU6SXNzdWUyODczMjIwOTQ=", "number": 15997, "title": "Allow tensorflow/tensorflow/workspace.bzl to customize dependencies", "user": {"login": "tadeegan", "id": 1289052, "node_id": "MDQ6VXNlcjEyODkwNTI=", "avatar_url": "https://avatars2.githubusercontent.com/u/1289052?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tadeegan", "html_url": "https://github.com/tadeegan", "followers_url": "https://api.github.com/users/tadeegan/followers", "following_url": "https://api.github.com/users/tadeegan/following{/other_user}", "gists_url": "https://api.github.com/users/tadeegan/gists{/gist_id}", "starred_url": "https://api.github.com/users/tadeegan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tadeegan/subscriptions", "organizations_url": "https://api.github.com/users/tadeegan/orgs", "repos_url": "https://api.github.com/users/tadeegan/repos", "events_url": "https://api.github.com/users/tadeegan/events{/privacy}", "received_events_url": "https://api.github.com/users/tadeegan/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 299643928, "node_id": "MDU6TGFiZWwyOTk2NDM5Mjg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:contributions%20welcome", "name": "stat:contributions welcome", "color": "f4b400", "default": false, "description": ""}, {"id": 473173272, "node_id": "MDU6TGFiZWw0NzMxNzMyNzI=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:feature", "name": "type:feature", "color": "159b2e", "default": false, "description": ""}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2018-01-10T05:51:04Z", "updated_at": "2018-02-06T23:54:19Z", "closed_at": null, "author_association": "CONTRIBUTOR", "body": "When including tensorflow as a dependency of a Bazel project, it requires you to take all the declared dependencies in  `tensorflow/tensorflow/workspace.bzl` or none of them. Some projects, like the closure_rules allow you to customize the dependencies:\r\nhttps://github.com/bazelbuild/rules_closure/blob/master/closure/repositories.bzl#L21\r\n\r\nThis allows you to use whatever versions you want for specific dependencies that may be different from what tensorflow's workspace.bzl declares."}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/15990", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/15990/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/15990/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/15990/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/15990", "id": 287289717, "node_id": "MDU6SXNzdWUyODcyODk3MTc=", "number": 15990, "title": "[Tracking bug] Building Tensorflow with Clang on Windows", "user": {"login": "rongjiecomputer", "id": 13115060, "node_id": "MDQ6VXNlcjEzMTE1MDYw", "avatar_url": "https://avatars2.githubusercontent.com/u/13115060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rongjiecomputer", "html_url": "https://github.com/rongjiecomputer", "followers_url": "https://api.github.com/users/rongjiecomputer/followers", "following_url": "https://api.github.com/users/rongjiecomputer/following{/other_user}", "gists_url": "https://api.github.com/users/rongjiecomputer/gists{/gist_id}", "starred_url": "https://api.github.com/users/rongjiecomputer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rongjiecomputer/subscriptions", "organizations_url": "https://api.github.com/users/rongjiecomputer/orgs", "repos_url": "https://api.github.com/users/rongjiecomputer/repos", "events_url": "https://api.github.com/users/rongjiecomputer/events{/privacy}", "received_events_url": "https://api.github.com/users/rongjiecomputer/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 404586558, "node_id": "MDU6TGFiZWw0MDQ1ODY1NTg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:community%20support", "name": "stat:community support", "color": "f4b400", "default": false, "description": ""}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-01-10T01:50:19Z", "updated_at": "2018-01-29T19:28:22Z", "closed_at": null, "author_association": "CONTRIBUTOR", "body": "### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**: no\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**: Windows 10 x64\r\n- **TensorFlow installed from (source or binary)**: binary\r\n- **TensorFlow version (use command below)**: 1.4.0\r\n- **Python version**: Python 3.6\r\n- **Bazel version (if compiling from source)**: 0.9.0\r\n- **GCC/Compiler version (if compiling from source)**: VS 2017 15.5\r\n- **CUDA/cuDNN version**: n/a\r\n- **GPU model and memory**: n/a\r\n- **Exact command to reproduce**: n/a\r\n\r\nThis is tracking bug to use Clang on Windows to build Tensorflow.\r\n\r\nBenefits:\r\n- Faster build (Clang does not suffer from `__forceinline` issue in pure MSVC #10521).\r\n- Mostly compatible with MSVC (`clang-cl` understands MSVC command flags, macros and even imitates some of the MSVC's bugs).\r\n- Cross compilation.\r\n- Unlock some runtime optimizations such as [crc32c acceleration](https://github.com/tensorflow/tensorflow/blob/master/tensorflow/core/lib/hash/crc32c_accelerate.cc) that relies on `__builtin_cpu_supports` (compiler-rt is required).\r\n- Better x64 code (according to one Chromium engineer)."}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/15920", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/15920/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/15920/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/15920/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/15920", "id": 286528239, "node_id": "MDU6SXNzdWUyODY1MjgyMzk=", "number": 15920, "title": "cmake CUDA include-path whitespaces not supported", "user": {"login": "SpeedPing", "id": 6959545, "node_id": "MDQ6VXNlcjY5NTk1NDU=", "avatar_url": "https://avatars3.githubusercontent.com/u/6959545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SpeedPing", "html_url": "https://github.com/SpeedPing", "followers_url": "https://api.github.com/users/SpeedPing/followers", "following_url": "https://api.github.com/users/SpeedPing/following{/other_user}", "gists_url": "https://api.github.com/users/SpeedPing/gists{/gist_id}", "starred_url": "https://api.github.com/users/SpeedPing/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SpeedPing/subscriptions", "organizations_url": "https://api.github.com/users/SpeedPing/orgs", "repos_url": "https://api.github.com/users/SpeedPing/repos", "events_url": "https://api.github.com/users/SpeedPing/events{/privacy}", "received_events_url": "https://api.github.com/users/SpeedPing/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 404586558, "node_id": "MDU6TGFiZWw0MDQ1ODY1NTg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:community%20support", "name": "stat:community support", "color": "f4b400", "default": false, "description": ""}, {"id": 299643928, "node_id": "MDU6TGFiZWwyOTk2NDM5Mjg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:contributions%20welcome", "name": "stat:contributions welcome", "color": "f4b400", "default": false, "description": ""}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2018-01-06T23:12:19Z", "updated_at": "2018-04-30T20:50:04Z", "closed_at": null, "author_association": "NONE", "body": "I'm not sure if this is intentional, but I just had some trouble with compiling tf_core_gpu_kernels due to a invalid include-dir path as command line argument given to nvcc (caused by a whitespace in the path).\r\n\r\nIn windows I was able to solve this by adding double quotes at line 277 in CMakeLists.txt:\r\n`set(CUDA_NVCC_FLAGS ${CUDA_NVCC_FLAGS};--include-path \\\"${PROJECT_BINARY_DIR}/$\\{build_configuration\\}\\\";--expt-relaxed-constexpr)`\r\n\r\nPossible errors when not using double quotes:\r\nnvcc fatal : A single input file is required for a non-link phase when an outputfile is specified\r\n\r\nAlso note that there will be problems because of CUDA not supporting some versions of msvc.\r\nThe current version for example is not yet supported.\r\nCUDA_HOST_COMPILER path is automatically set to $(VCInstallDir)/bin, what will cause problems on some systems. For VS2015 this works fine but not for VS2017 if you are using the recent compiler.\r\n\r\nThere are also several errors when using the intel compiler, as for example the typename TType<...> declarations, which are not really required. Either remove the typename keyword or use 'auto'.\r\nOther than that the master branch is compilable with ICC 18.\r\n"}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/15911", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/15911/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/15911/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/15911/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/15911", "id": 286487742, "node_id": "MDU6SXNzdWUyODY0ODc3NDI=", "number": 15911, "title": "Crash when using CUDA API while using Tensorflow. \"current context was not created by the StreamExecutor cuda_driver API\"", "user": {"login": "marcj", "id": 450980, "node_id": "MDQ6VXNlcjQ1MDk4MA==", "avatar_url": "https://avatars0.githubusercontent.com/u/450980?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marcj", "html_url": "https://github.com/marcj", "followers_url": "https://api.github.com/users/marcj/followers", "following_url": "https://api.github.com/users/marcj/following{/other_user}", "gists_url": "https://api.github.com/users/marcj/gists{/gist_id}", "starred_url": "https://api.github.com/users/marcj/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marcj/subscriptions", "organizations_url": "https://api.github.com/users/marcj/orgs", "repos_url": "https://api.github.com/users/marcj/repos", "events_url": "https://api.github.com/users/marcj/events{/privacy}", "received_events_url": "https://api.github.com/users/marcj/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 299643928, "node_id": "MDU6TGFiZWwyOTk2NDM5Mjg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:contributions%20welcome", "name": "stat:contributions welcome", "color": "f4b400", "default": false, "description": ""}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 10, "created_at": "2018-01-06T14:23:59Z", "updated_at": "2018-02-15T19:39:43Z", "closed_at": null, "author_association": "NONE", "body": "### Expected behavior\r\n\r\nI expect to work with the CUDA library by using libcudart directly in my Python script before and while Tensorflow is being used - without errors.\r\n\r\n### Actual behavior\r\n\r\nThe script crashes with following error as soon as I've used libcudart through ctypes before tensorflow is imported.\r\n\r\n```\r\n2018-01-06 14:45:50.641211: F tensorflow/stream_executor/cuda/cuda_driver.cc:232] current context was not created by the StreamExecutor cuda_driver API: 0x7fe122002400; a CUDA runtime call was likely performed without using a StreamExecutor context\r\n```\r\n\r\n### Environment\r\n\r\n| Name  | Value |\r\n| ------------- | ------------- |\r\n| OS  | Mac OS 10.12.4 |\r\n| tensorflow-gpu  | pip 1.1.0, v1.1.0-rc0-61-g1ec6ed5  |\r\n| Device  | GPU Titan X pascal  |\r\n| Python  | 2.7.12  |\r\n| Python  | 3.5.2 |\r\n| CUDA  | 8.0  |\r\n| cuDNN  | 5.1.5 |\r\n\r\n\r\n### Reproduce\r\n\r\n```python\r\nfrom __future__ import print_function\r\n\r\nimport ctypes\r\nimport platform\r\n\r\nsystem = platform.system()\r\n\r\nif system == \"Linux\":\r\n    libcudart = ctypes.cdll.LoadLibrary(\"libcudart.so\")\r\nelif system == \"Darwin\":\r\n    libcudart = ctypes.cdll.LoadLibrary(\"libcudart.dylib\")\r\nelif system == \"Windows\":\r\n    libcudart = ctypes.windll.LoadLibrary(\"libcudart.dll\")\r\nelse:\r\n    raise Exception(\"Cannot identify system.\")\r\n\r\nversion = ctypes.c_int()\r\nrc = libcudart.cudaRuntimeGetVersion(ctypes.byref(version))\r\nif rc != 0:\r\n    raise ValueError(\"Could not get version\")\r\nif version.value < 6050:\r\n    raise Exception(\"CUDA version must be >= 6.5\")\r\n\r\nlibcudart.cudaSetDevice(0)\r\n\r\nfree = ctypes.c_size_t()\r\ntotal = ctypes.c_size_t()\r\nrc = libcudart.cudaMemGetInfo(ctypes.byref(free), ctypes.byref(total))\r\n\r\nprint(\"Memory \" + str(free.value) +  \" of \" + str(total.value))\r\n\r\ndel libcudart\r\n\r\nimport tensorflow as tf\r\n\r\nhello = tf.constant('Hello, TensorFlow!')\r\n\r\n# Start tf session\r\nsess = tf.Session()\r\n\r\n# Run the op\r\nprint(sess.run(hello))\r\n````\r\n\r\nExecute \r\n\r\n```\r\n$ python3 tf-cuda-crash.py\r\n```\r\n\r\nOutput will be like\r\n\r\n```\r\n$ python3 tf-cuda-crash.py\r\nMemory 9916960768 of 12884574208\r\n2018-01-06 14:45:50.639837: W tensorflow/core/platform/cpu_feature_guard.cc:45] The TensorFlow library wasn't compiled to use SSE4.1 instructions, but these are available on your machine and could speed up CPU computations.\r\n2018-01-06 14:45:50.639863: W tensorflow/core/platform/cpu_feature_guard.cc:45] The TensorFlow library wasn't compiled to use SSE4.2 instructions, but these are available on your machine and could speed up CPU computations.\r\n2018-01-06 14:45:50.639870: W tensorflow/core/platform/cpu_feature_guard.cc:45] The TensorFlow library wasn't compiled to use AVX instructions, but these are available on your machine and could speed up CPU computations.\r\n2018-01-06 14:45:50.641211: F tensorflow/stream_executor/cuda/cuda_driver.cc:232] current context was not created by the StreamExecutor cuda_driver API: 0x7fe122002400; a CUDA runtime call was likely performed without using a StreamExecutor context\r\n[1]    4240 abort      python3 tf-cuda-crash.py\r\n```\r\n\r\nHappens with both Python2 and 3.\r\n  "}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/15910", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/15910/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/15910/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/15910/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/15910", "id": 286477026, "node_id": "MDU6SXNzdWUyODY0NzcwMjY=", "number": 15910, "title": "Feature Request: Sparse Cholesky decomposition", "user": {"login": "rwolst", "id": 3892689, "node_id": "MDQ6VXNlcjM4OTI2ODk=", "avatar_url": "https://avatars2.githubusercontent.com/u/3892689?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rwolst", "html_url": "https://github.com/rwolst", "followers_url": "https://api.github.com/users/rwolst/followers", "following_url": "https://api.github.com/users/rwolst/following{/other_user}", "gists_url": "https://api.github.com/users/rwolst/gists{/gist_id}", "starred_url": "https://api.github.com/users/rwolst/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rwolst/subscriptions", "organizations_url": "https://api.github.com/users/rwolst/orgs", "repos_url": "https://api.github.com/users/rwolst/repos", "events_url": "https://api.github.com/users/rwolst/events{/privacy}", "received_events_url": "https://api.github.com/users/rwolst/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 299643928, "node_id": "MDU6TGFiZWwyOTk2NDM5Mjg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:contributions%20welcome", "name": "stat:contributions welcome", "color": "f4b400", "default": false, "description": ""}, {"id": 473173272, "node_id": "MDU6TGFiZWw0NzMxNzMyNzI=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:feature", "name": "type:feature", "color": "159b2e", "default": false, "description": ""}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-01-06T11:02:11Z", "updated_at": "2018-01-08T15:53:41Z", "closed_at": null, "author_association": "NONE", "body": "### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**:\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**:\r\n- **TensorFlow installed from (source or binary)**:\r\n- **TensorFlow version (use command below)**:\r\n- **Python version**: \r\n- **Bazel version (if compiling from source)**:\r\n- **GCC/Compiler version (if compiling from source)**:\r\n- **CUDA/cuDNN version**:\r\n- **GPU model and memory**:\r\n- **Exact command to reproduce**:\r\n\r\n### Describe the problem\r\nTensorFlow has a Cholesky decomposition [kernel](https://github.com/tensorflow/tensorflow/blob/master/tensorflow/core/kernels/cholesky_op.cc) based on wrappers around the [Eigen](http://eigen.tuxfamily.org/index.php?title=Main_Page) and [cuSOLVER](http://docs.nvidia.com/cuda/cusolver/index.html#cusolver-intro) (for GPUs) libraries.\r\n\r\nFrom experience, a sparse solver can provide huge speedups in the right circumstances. The cuSOLVER library has the feature in their sparse LAPACK library, cuSolverSP, and the Eigen library in the SparseCholesky module.\r\n\r\nAlternatively, there is the [CHOLMOD](https://developer.nvidia.com/cholmod) library which is supported by Eigen in the CholmodSupport module. This CHOLMOD library supports both CPU and GPU sparse Cholesky factorisations.\r\n\r\nWould a Cholesky decomposition for sparse matrices be a feature of interest? \r\n  "}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/15880", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/15880/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/15880/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/15880/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/15880", "id": 286302443, "node_id": "MDU6SXNzdWUyODYzMDI0NDM=", "number": 15880, "title": "Allow full deallocation of GPU memory", "user": {"login": "dtegunov", "id": 10115886, "node_id": "MDQ6VXNlcjEwMTE1ODg2", "avatar_url": "https://avatars0.githubusercontent.com/u/10115886?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dtegunov", "html_url": "https://github.com/dtegunov", "followers_url": "https://api.github.com/users/dtegunov/followers", "following_url": "https://api.github.com/users/dtegunov/following{/other_user}", "gists_url": "https://api.github.com/users/dtegunov/gists{/gist_id}", "starred_url": "https://api.github.com/users/dtegunov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dtegunov/subscriptions", "organizations_url": "https://api.github.com/users/dtegunov/orgs", "repos_url": "https://api.github.com/users/dtegunov/repos", "events_url": "https://api.github.com/users/dtegunov/events{/privacy}", "received_events_url": "https://api.github.com/users/dtegunov/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 14, "created_at": "2018-01-05T14:24:39Z", "updated_at": "2020-01-13T21:32:13Z", "closed_at": null, "author_association": "NONE", "body": "When using the TF C++ library inside an application that also uses GPUs for other tasks (not implemented in TF), it would be useful to be able to deallocate all the GPU memory TF has allocated once the session is closed, and no further TF calls are expected for the time being. gpu_options.allow_growth keeps TF's allocated pool small, but it still can grow to several GB. Even after the session is deleted, the pool doesn't shrink. To free it up, the whole application must be restarted, if I'm not mistaken.\r\n\r\nBeing able to destroy the [ProcessState](https://github.com/tensorflow/tensorflow/blob/master/tensorflow/core/common_runtime/gpu/process_state.cc) singleton seems to solve it without breaking anything. However, its destructor is protected. Alternatively, getting the Allocator for each GPU from ProcessState and manually destroying them does the trick, but renders TF unusable for all future operations because ProcessState still thinks the Allocators exist and doesn't recreate them when they are required again.\r\n\r\nI think making the ProcessState destructor public (or adding a public method to invoke similar code) would be the best solution, but maybe I'm missing an obvious solution that already exists?"}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/15869", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/15869/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/15869/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/15869/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/15869", "id": 286186262, "node_id": "MDU6SXNzdWUyODYxODYyNjI=", "number": 15869, "title": "tensorflow/go for Windows?", "user": {"login": "moorage", "id": 8590, "node_id": "MDQ6VXNlcjg1OTA=", "avatar_url": "https://avatars3.githubusercontent.com/u/8590?v=4", "gravatar_id": "", "url": "https://api.github.com/users/moorage", "html_url": "https://github.com/moorage", "followers_url": "https://api.github.com/users/moorage/followers", "following_url": "https://api.github.com/users/moorage/following{/other_user}", "gists_url": "https://api.github.com/users/moorage/gists{/gist_id}", "starred_url": "https://api.github.com/users/moorage/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/moorage/subscriptions", "organizations_url": "https://api.github.com/users/moorage/orgs", "repos_url": "https://api.github.com/users/moorage/repos", "events_url": "https://api.github.com/users/moorage/events{/privacy}", "received_events_url": "https://api.github.com/users/moorage/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 404586558, "node_id": "MDU6TGFiZWw0MDQ1ODY1NTg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:community%20support", "name": "stat:community support", "color": "f4b400", "default": false, "description": ""}, {"id": 473173351, "node_id": "MDU6TGFiZWw0NzMxNzMzNTE=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:build/install", "name": "type:build/install", "color": "159b2e", "default": false, "description": ""}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2018-01-05T04:13:14Z", "updated_at": "2020-03-14T18:42:33Z", "closed_at": null, "author_association": "NONE", "body": "### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**: No\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**: Windows 10\r\n- **TensorFlow installed from (source or binary)**: either\r\n- **TensorFlow version (use command below)**: 1.4+\r\n- **Python version**: n/a\r\n- **Bazel version (if compiling from source)**: n/a\r\n- **GCC/Compiler version (if compiling from source)**: MINGW64\r\n- **CUDA/cuDNN version**: none\r\n- **GPU model and memory**: none\r\n- **Exact command to reproduce**: visit https://www.tensorflow.org/versions/master/install/install_go\r\n\r\nYou can collect some of this information using our environment capture script:\r\n\r\nhttps://github.com/tensorflow/tensorflow/tree/master/tools/tf_env_collect.sh\r\n\r\nYou can obtain the TensorFlow version with\r\n\r\npython -c \"import tensorflow as tf; print(tf.GIT_VERSION, tf.VERSION)\"\r\n\r\n### Describe the problem\r\nFeature request: https://www.tensorflow.org/versions/master/install/install_go doesn't have Windows 10 instructions.  I am curious if the tensorflow/go will be installable for windows\r\n\r\n### Source code / logs\r\nI currently get an error on the `ld.exe` phase of the go get . for github.com/tensorflow/tensorflow/tensorflow/go : `cannot find -ltensorflow`.  I'm not sure how to specify that the `tensorflow.dll` should be used. "}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/15847", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/15847/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/15847/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/15847/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/15847", "id": 285975577, "node_id": "MDU6SXNzdWUyODU5NzU1Nzc=", "number": 15847, "title": "Reinitializing an iterator throws an OutOfRangeError when using a MonitoredSession with NanTensorHook", "user": {"login": "Hackempluf", "id": 8088862, "node_id": "MDQ6VXNlcjgwODg4NjI=", "avatar_url": "https://avatars1.githubusercontent.com/u/8088862?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Hackempluf", "html_url": "https://github.com/Hackempluf", "followers_url": "https://api.github.com/users/Hackempluf/followers", "following_url": "https://api.github.com/users/Hackempluf/following{/other_user}", "gists_url": "https://api.github.com/users/Hackempluf/gists{/gist_id}", "starred_url": "https://api.github.com/users/Hackempluf/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Hackempluf/subscriptions", "organizations_url": "https://api.github.com/users/Hackempluf/orgs", "repos_url": "https://api.github.com/users/Hackempluf/repos", "events_url": "https://api.github.com/users/Hackempluf/events{/privacy}", "received_events_url": "https://api.github.com/users/Hackempluf/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 299643928, "node_id": "MDU6TGFiZWwyOTk2NDM5Mjg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:contributions%20welcome", "name": "stat:contributions welcome", "color": "f4b400", "default": false, "description": ""}, {"id": 473173272, "node_id": "MDU6TGFiZWw0NzMxNzMyNzI=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:feature", "name": "type:feature", "color": "159b2e", "default": false, "description": ""}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-01-04T12:47:10Z", "updated_at": "2018-01-11T18:39:16Z", "closed_at": null, "author_association": "NONE", "body": "### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**:\r\nyes\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**: \r\nWindows 10\r\n- **TensorFlow installed from (source or binary)**:\r\nbinary\r\n- **TensorFlow version (use command below)**:\r\n1.4.0\r\n- **Python version**: \r\n3.5.4\r\n- **Bazel version (if compiling from source)**:\r\n- **GCC/Compiler version (if compiling from source)**:\r\n- **CUDA/cuDNN version**:\r\nedit: none, using CPU only\r\n- **GPU model and memory**:\r\n- **Exact command to reproduce**:\r\nSee below under source code\r\n\r\n### Describe the problem\r\nWhen using a Monitored Training Session with a NanTensorHook and an Iterator from a Dataset, reinitializing the Iterator causes an OutOfRangeError. \r\nThis is likely because the NanTensorHook adds the loss value to the SessionRunArgs, but the evaluation of the loss-value then fails since no more data are available from the iterator.\r\n\r\nIdeally, there should be a way to reinitialize the iterator without the hooks beeing executed.\r\n\r\n### Source code / logs\r\nexample code to reproduce the problem\r\n```\r\nimport tensorflow as tf\r\n\r\ndataset = tf.data.Dataset.range(100)\r\ndataset = dataset.map(lambda x: (0, x))\r\ndataset = dataset.batch(64)\r\niterator = dataset.make_initializable_iterator()\r\n(label, element) = iterator.get_next()\r\n\r\n# pseudo loss for the NanTensorHook\r\nloss = tf.reduce_mean(1 - label)\r\n\r\nglobal_step = tf.train.get_or_create_global_step()\r\nscaffold = tf.train.Scaffold(local_init_op=iterator.initializer)\r\n\r\nwith tf.train.MonitoredTrainingSession(\r\n        scaffold=scaffold,\r\n        hooks=[tf.train.NanTensorHook(loss_tensor=loss)]) as sess:\r\n    # Compute for 5 epochs.\r\n    for epoch in range(5):\r\n        print('epoch: ' + str(epoch))\r\n        try:\r\n            while not sess.should_stop():\r\n                sess.run(element)\r\n        except tf.errors.OutOfRangeError:\r\n            print('end')\r\n\r\n        if sess.should_stop():\r\n            break\r\n\r\n        # the following line silently fails, since an OutOfRangeError is thrown\r\n        sess.run(iterator.initializer)\r\n```\r\nRemoving the NanTensorHook or placing the `sess.run(iterator.initializer)` call inside an try-except-statement provides a workaround for this problem\r\n```\r\n        try:\r\n            sess.run(iterator.initializer)\r\n        except tf.errors.OutOfRangeError:\r\n            print('Out of range errors occurs')\r\n```\r\n\r\n  "}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/15845", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/15845/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/15845/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/15845/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/15845", "id": 285956065, "node_id": "MDU6SXNzdWUyODU5NTYwNjU=", "number": 15845, "title": "Support RNNs and LSTMs", "user": {"login": "shradhab", "id": 5859265, "node_id": "MDQ6VXNlcjU4NTkyNjU=", "avatar_url": "https://avatars1.githubusercontent.com/u/5859265?v=4", "gravatar_id": "", "url": "https://api.github.com/users/shradhab", "html_url": "https://github.com/shradhab", "followers_url": "https://api.github.com/users/shradhab/followers", "following_url": "https://api.github.com/users/shradhab/following{/other_user}", "gists_url": "https://api.github.com/users/shradhab/gists{/gist_id}", "starred_url": "https://api.github.com/users/shradhab/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/shradhab/subscriptions", "organizations_url": "https://api.github.com/users/shradhab/orgs", "repos_url": "https://api.github.com/users/shradhab/repos", "events_url": "https://api.github.com/users/shradhab/events{/privacy}", "received_events_url": "https://api.github.com/users/shradhab/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 750616506, "node_id": "MDU6TGFiZWw3NTA2MTY1MDY=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/comp:lite", "name": "comp:lite", "color": "0052cc", "default": false, "description": ""}, {"id": 473173272, "node_id": "MDU6TGFiZWw0NzMxNzMyNzI=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:feature", "name": "type:feature", "color": "159b2e", "default": false, "description": ""}], "state": "open", "locked": false, "assignee": {"login": "aselle", "id": 326106, "node_id": "MDQ6VXNlcjMyNjEwNg==", "avatar_url": "https://avatars1.githubusercontent.com/u/326106?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aselle", "html_url": "https://github.com/aselle", "followers_url": "https://api.github.com/users/aselle/followers", "following_url": "https://api.github.com/users/aselle/following{/other_user}", "gists_url": "https://api.github.com/users/aselle/gists{/gist_id}", "starred_url": "https://api.github.com/users/aselle/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aselle/subscriptions", "organizations_url": "https://api.github.com/users/aselle/orgs", "repos_url": "https://api.github.com/users/aselle/repos", "events_url": "https://api.github.com/users/aselle/events{/privacy}", "received_events_url": "https://api.github.com/users/aselle/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "aselle", "id": 326106, "node_id": "MDQ6VXNlcjMyNjEwNg==", "avatar_url": "https://avatars1.githubusercontent.com/u/326106?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aselle", "html_url": "https://github.com/aselle", "followers_url": "https://api.github.com/users/aselle/followers", "following_url": "https://api.github.com/users/aselle/following{/other_user}", "gists_url": "https://api.github.com/users/aselle/gists{/gist_id}", "starred_url": "https://api.github.com/users/aselle/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aselle/subscriptions", "organizations_url": "https://api.github.com/users/aselle/orgs", "repos_url": "https://api.github.com/users/aselle/repos", "events_url": "https://api.github.com/users/aselle/events{/privacy}", "received_events_url": "https://api.github.com/users/aselle/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 10, "created_at": "2018-01-04T11:31:10Z", "updated_at": "2019-02-11T17:27:39Z", "closed_at": null, "author_association": "NONE", "body": "Feature Request for TF Lite - support for the following:\r\ntd_split\r\ntf_pad (Padding is something that an RNN needs de-facto unless tensorflow RNNs accept lists of variously shaped tensors.)\r\ntf_gather\r\ntf_slice\r\nLSTM Cells\r\nDynamic RNNs\r\nAre there alternatives to the above in TF Lite?\r\n\r\nHave I written custom code - No\r\nOS Platform and Distribution - Android\r\nTensorFlow installed from - https://github.com/tensorflow\r\nTensorFlow version - 1.4\r\nBazel version - 0.5.4\r\nCUDA/cuDNN version - NA\r\nGPU model and memory - Na\r\nExact command to reproduce - NA\r\n\r\n\r\n\r\n\r\n  "}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/15840", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/15840/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/15840/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/15840/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/15840", "id": 285921790, "node_id": "MDU6SXNzdWUyODU5MjE3OTA=", "number": 15840, "title": "Numerous ::`anonymous namespace':: Linking errors in Tensorflow 1.3.1 Windows build with GPU", "user": {"login": "ghost", "id": 10137, "node_id": "MDQ6VXNlcjEwMTM3", "avatar_url": "https://avatars3.githubusercontent.com/u/10137?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ghost", "html_url": "https://github.com/ghost", "followers_url": "https://api.github.com/users/ghost/followers", "following_url": "https://api.github.com/users/ghost/following{/other_user}", "gists_url": "https://api.github.com/users/ghost/gists{/gist_id}", "starred_url": "https://api.github.com/users/ghost/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ghost/subscriptions", "organizations_url": "https://api.github.com/users/ghost/orgs", "repos_url": "https://api.github.com/users/ghost/repos", "events_url": "https://api.github.com/users/ghost/events{/privacy}", "received_events_url": "https://api.github.com/users/ghost/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 404586558, "node_id": "MDU6TGFiZWw0MDQ1ODY1NTg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:community%20support", "name": "stat:community support", "color": "f4b400", "default": false, "description": ""}, {"id": 299643928, "node_id": "MDU6TGFiZWwyOTk2NDM5Mjg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:contributions%20welcome", "name": "stat:contributions welcome", "color": "f4b400", "default": false, "description": ""}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2018-01-04T09:11:04Z", "updated_at": "2018-02-09T22:03:38Z", "closed_at": null, "author_association": "NONE", "body": "\r\nBuilding with VS 2015 64bit and CUDA 8 and Cudnn v7 (cudnn64_7.dll).\r\n\r\nAll other projects in the solution got built. Even the project pywrap_tensorflow_internal_static got built. But, when building the project pywrap_tensorflow_internal for the dll one, it compiles successfully but gives numerous linking errors as below:\r\n\r\nI also see that (probably) all of them contain the anonymous namespace - ``class tensorflow::`anonymous namespace'::``.\r\n\r\n```\r\n1>pywrap_tensorflow_internal.exp : warning LNK4070: /OUT:_pywrap_tensorflow_internal.pyd directive in .EXP differs from output filename 'D:\\rough\\tensorflow-1.3.1\\tensorflow\\contrib\\cmake\\build\\Release\\pywrap_tensorflow_internal.dll'; ignoring directive\r\n1>pywrap_tensorflow_internal.exp : error LNK2001: unresolved external symbol \"int `public: void __cdecl tensorflow::`anonymous namespace'::SparseSlice<struct tensorflow::bfloat16>::Initialize<1>(class Eigen::TensorMap<class Eigen::Tensor<struct tensorflow::bfloat16 const ,2,1,__int64>,16,struct Eigen::MakePointer> const &,int)'::`2'::$TSS0\" (?$TSS0@?1???$Initialize@$00@?$SparseSlice@Ubfloat16@tensorflow@@@?A0x20ed32c2@tensorflow@@QEAAXAEBV?$TensorMap@V?$Tensor@$$CBUbfloat16@tensorflow@@$01$00_J@Eigen@@$0BA@UMakePointer@2@@Eigen@@H@Z@4HA)\r\n1>pywrap_tensorflow_internal.exp : error LNK2001: unresolved external symbol \"int `public: void __cdecl tensorflow::`anonymous namespace'::SparseSlice<struct tensorflow::bfloat16>::Initialize<0>(class Eigen::TensorMap<class Eigen::Tensor<struct tensorflow::bfloat16 const ,2,1,__int64>,16,struct Eigen::MakePointer> const &,int)'::`2'::$TSS0\" (?$TSS0@?1???$Initialize@$0A@@?$SparseSlice@Ubfloat16@tensorflow@@@?A0x20ed32c2@tensorflow@@QEAAXAEBV?$TensorMap@V?$Tensor@$$CBUbfloat16@tensorflow@@$01$00_J@Eigen@@$0BA@UMakePointer@2@@Eigen@@H@Z@4HA)\r\n1>pywrap_tensorflow_internal.exp : error LNK2001: unresolved external symbol \"TSS0<`template-parameter-2',tensorflow::`anonymous namespace'::M::cale_independent_strtonum,cointerface ?? :: ?? ::HA::tensorflow::Z::AMPEBDPEAPEBD>\" (?$TSS0@?1???$locale_independent_strtonum@M@?A0x77a2fbcf@tensorflow@@YAMPEBDPEAPEBD@Z@4HA)\r\n1>pywrap_tensorflow_internal.exp : error LNK2001: unresolved external symbol \"TSS0<`template-parameter-2',tensorflow::`anonymous namespace'::N::cale_independent_strtonum,cointerface ?? :: ?? ::HA::tensorflow::Z::ANPEBDPEAPEBD>\" (?$TSS0@?1???$locale_independent_strtonum@N@?A0x77a2fbcf@tensorflow@@YANPEBDPEAPEBD@Z@4HA)\r\n1>pywrap_tensorflow_internal.exp : error LNK2001: unresolved external symbol \"int `private: static void __cdecl tensorflow::SparseMatMul<float,float>::ComputeOutputBlock(class std::vector<struct tensorflow::`anonymous namespace'::SparseSlice<float> *,class std::allocator<struct tensorflow::`anonymous namespace'::SparseSlice<float> *> > const &,class Eigen::TensorMap<class Eigen::Tensor<float const ,2,1,__int64>,16,struct Eigen::MakePointer> const &,int,int,int,bool,bool,class Eigen::TensorMap<class Eigen::Tensor<float,2,1,__int64>,16,struct Eigen::MakePointer> *)'::`2'::$TSS0\" (?$TSS0@?1??ComputeOutputBlock@?$SparseMatMul@MM@tensorflow@@CAXAEBV?$vector@PEAU?$SparseSlice@M@?A0x20ed32c2@tensorflow@@V?$allocator@PEAU?$SparseSlice@M@?A0x20ed32c2@tensorflow@@@std@@@std@@AEBV?$TensorMap@V?$Tensor@$$CBM$01$00_J@Eigen@@$0BA@UMakePointer@2@@Eigen@@HHH_N2PEAV?$TensorMap@V?$Tensor@M$01$00_J@Eigen@@$0BA@UMakePointer@2@@7@@Z@4HA)\r\n1>pywrap_tensorflow_internal.exp : error LNK2001: unresolved external symbol \"int `private: static void __cdecl tensorflow::SparseMatMul<float,struct tensorflow::bfloat16>::ComputeOutputBlock(class std::vector<struct tensorflow::`anonymous namespace'::SparseSlice<float> *,class std::allocator<struct tensorflow::`anonymous namespace'::SparseSlice<float> *> > const &,class Eigen::TensorMap<class Eigen::Tensor<struct tensorflow::bfloat16 const ,2,1,__int64>,16,struct Eigen::MakePointer> const &,int,int,int,bool,bool,class Eigen::TensorMap<class Eigen::Tensor<float,2,1,__int64>,16,struct Eigen::MakePointer> *)'::`2'::$TSS0\" (?$TSS0@?1??ComputeOutputBlock@?$SparseMatMul@MUbfloat16@tensorflow@@@tensorflow@@CAXAEBV?$vector@PEAU?$SparseSlice@M@?A0x20ed32c2@tensorflow@@V?$allocator@PEAU?$SparseSlice@M@?A0x20ed32c2@tensorflow@@@std@@@std@@AEBV?$TensorMap@V?$Tensor@$$CBUbfloat16@tensorflow@@$01$00_J@Eigen@@$0BA@UMakePointer@2@@Eigen@@HHH_N2PEAV?$TensorMap@V?$Tensor@M$01$00_J@Eigen@@$0BA@UMakePointer@2@@7@@Z@4HA)\r\n1>pywrap_tensorflow_internal.exp : error LNK2001: unresolved external symbol \"int `private: static void __cdecl tensorflow::SparseMatMul<struct tensorflow::bfloat16,float>::ComputeOutputBlock(class std::vector<struct tensorflow::`anonymous namespace'::SparseSlice<struct tensorflow::bfloat16> *,class std::allocator<struct tensorflow::`anonymous namespace'::SparseSlice<struct tensorflow::bfloat16> *> > const &,class Eigen::TensorMap<class Eigen::Tensor<float const ,2,1,__int64>,16,struct Eigen::MakePointer> const &,int,int,int,bool,bool,class Eigen::TensorMap<class Eigen::Tensor<float,2,1,__int64>,16,struct Eigen::MakePointer> *)'::`2'::$TSS0\" (?$TSS0@?1??ComputeOutputBlock@?$SparseMatMul@Ubfloat16@tensorflow@@M@tensorflow@@CAXAEBV?$vector@PEAU?$SparseSlice@Ubfloat16@tensorflow@@@?A0x20ed32c2@tensorflow@@V?$allocator@PEAU?$SparseSlice@Ubfloat16@tensorflow@@@?A0x20ed32c2@tensorflow@@@std@@@std@@AEBV?$TensorMap@V?$Tensor@$$CBM$01$00_J@Eigen@@$0BA@UMakePointer@2@@Eigen@@HHH_N2PEAV?$TensorMap@V?$Tensor@M$01$00_J@Eigen@@$0BA@UMakePointer@2@@7@@Z@4HA)\r\n1>pywrap_tensorflow_internal.exp : error LNK2001: unresolved external symbol \"int `private: static void __cdecl tensorflow::SparseMatMul<struct tensorflow::bfloat16,struct tensorflow::bfloat16>::ComputeOutputBlock(class std::vector<struct tensorflow::`anonymous namespace'::SparseSlice<struct tensorflow::bfloat16> *,class std::allocator<struct tensorflow::`anonymous namespace'::SparseSlice<struct tensorflow::bfloat16> *> > const &,class Eigen::TensorMap<class Eigen::Tensor<struct tensorflow::bfloat16 const ,2,1,__int64>,16,struct Eigen::MakePointer> const &,int,int,int,bool,bool,class Eigen::TensorMap<class Eigen::Tensor<float,2,1,__int64>,16,struct Eigen::MakePointer> *)'::`2'::$TSS0\" (?$TSS0@?1??ComputeOutputBlock@?$SparseMatMul@Ubfloat16@tensorflow@@U12@@tensorflow@@CAXAEBV?$vector@PEAU?$SparseSlice@Ubfloat16@tensorflow@@@?A0x20ed32c2@tensorflow@@V?$allocator@PEAU?$SparseSlice@Ubfloat16@tensorflow@@@?A0x20ed32c2@tensorflow@@@std@@@std@@AEBV?$TensorMap@V?$Tensor@$$CBUbfloat16@tensorflow@@$01$00_J@Eigen@@$0BA@UMakePointer@2@@Eigen@@HHH_N2PEAV?$TensorMap@V?$Tensor@M$01$00_J@Eigen@@$0BA@UMakePointer@2@@7@@Z@4HA)\r\n1>pywrap_tensorflow_internal.exp : error LNK2001: unresolved external symbol \"int `bool __cdecl tensorflow::`anonymous namespace'::IsGradientNode(class tensorflow::Graph const *,class tensorflow::Node const *)'::`2'::$TSS0\" (?$TSS0@?1??IsGradientNode@?A0xd76da148@tensorflow@@YA_NPEBVGraph@3@PEBVNode@3@@Z@4HA)\r\n1>pywrap_tensorflow_internal.exp : error LNK2001: unresolved external symbol \"int `public: virtual class tensorflow::gtl::InlinedVector<enum tensorflow::DataType,4> const & __cdecl tensorflow::`anonymous namespace'::DenseToSparseBatchDatasetOp::Dataset<signed char>::output_dtypes(void)const '::`2'::$TSS0\" (?$TSS0@?1??output_dtypes@?$Dataset@C@DenseToSparseBatchDatasetOp@?A0x0fde61d7@tensorflow@@UEBAAEBV?$InlinedVector@W4DataType@tensorflow@@$03@gtl@5@XZ@4HA)\r\n1>pywrap_tensorflow_internal.exp : error LNK2001: unresolved external symbol \"int `public: virtual class tensorflow::gtl::InlinedVector<enum tensorflow::DataType,4> const & __cdecl tensorflow::`anonymous namespace'::DenseToSparseBatchDatasetOp::Dataset<unsigned char>::output_dtypes(void)const '::`2'::$TSS0\" (?$TSS0@?1??output_dtypes@?$Dataset@E@DenseToSparseBatchDatasetOp@?A0x0fde61d7@tensorflow@@UEBAAEBV?$InlinedVector@W4DataType@tensorflow@@$03@gtl@5@XZ@4HA)\r\n1>pywrap_tensorflow_internal.exp : error LNK2001: unresolved external symbol \"int `public: virtual class tensorflow::gtl::InlinedVector<enum tensorflow::DataType,4> const & __cdecl tensorflow::`anonymous namespace'::DenseToSparseBatchDatasetOp::Dataset<short>::output_dtypes(void)const '::`2'::$TSS0\" (?$TSS0@?1??output_dtypes@?$Dataset@F@DenseToSparseBatchDatasetOp@?A0x0fde61d7@tensorflow@@UEBAAEBV?$InlinedVector@W4DataType@tensorflow@@$03@gtl@5@XZ@4HA)\r\n1>pywrap_tensorflow_internal.exp : error LNK2001: unresolved external symbol \"int `public: virtual class tensorflow::gtl::InlinedVector<enum tensorflow::DataType,4> const & __cdecl tensorflow::`anonymous namespace'::DenseToSparseBatchDatasetOp::Dataset<int>::output_dtypes(void)const '::`2'::$TSS0\" (?$TSS0@?1??output_dtypes@?$Dataset@H@DenseToSparseBatchDatasetOp@?A0x0fde61d7@tensorflow@@UEBAAEBV?$InlinedVector@W4DataType@tensorflow@@$03@gtl@5@XZ@4HA)\r\n1>pywrap_tensorflow_internal.exp : error LNK2001: unresolved external symbol \"int `public: virtual class tensorflow::gtl::InlinedVector<enum tensorflow::DataType,4> const & __cdecl tensorflow::`anonymous namespace'::DenseToSparseBatchDatasetOp::Dataset<float>::output_dtypes(void)const '::`2'::$TSS0\" (?$TSS0@?1??output_dtypes@?$Dataset@M@DenseToSparseBatchDatasetOp@?A0x0fde61d7@tensorflow@@UEBAAEBV?$InlinedVector@W4DataType@tensorflow@@$03@gtl@5@XZ@4HA)\r\n1>pywrap_tensorflow_internal.exp : error LNK2001: unresolved external symbol \"int `public: virtual class tensorflow::gtl::InlinedVector<enum tensorflow::DataType,4> const & __cdecl tensorflow::`anonymous namespace'::DenseToSparseBatchDatasetOp::Dataset<double>::output_dtypes(void)const '::`2'::$TSS0\" (?$TSS0@?1??output_dtypes@?$Dataset@N@DenseToSparseBatchDatasetOp@?A0x0fde61d7@tensorflow@@UEBAAEBV?$InlinedVector@W4DataType@tensorflow@@$03@gtl@5@XZ@4HA)\r\n1>pywrap_tensorflow_internal.exp : error LNK2001: unresolved external symbol \"int `public: virtual class tensorflow::gtl::InlinedVector<enum tensorflow::DataType,4> const & __cdecl tensorflow::`anonymous namespace'::DenseToSparseBatchDatasetOp::Dataset<struct Eigen::QInt16>::output_dtypes(void)const '::`2'::$TSS0\" (?$TSS0@?1??output_dtypes@?$Dataset@UQInt16@Eigen@@@DenseToSparseBatchDatasetOp@?A0x0fde61d7@tensorflow@@UEBAAEBV?$InlinedVector@W4DataType@tensorflow@@$03@gtl@5@XZ@4HA)\r\n1>pywrap_tensorflow_internal.exp : error LNK2001: unresolved external symbol \"int `public: virtual class tensorflow::gtl::InlinedVector<enum tensorflow::DataType,4> const & __cdecl tensorflow::`anonymous namespace'::DenseToSparseBatchDatasetOp::Dataset<struct Eigen::QInt32>::output_dtypes(void)const '::`2'::$TSS0\" (?$TSS0@?1??output_dtypes@?$Dataset@UQInt32@Eigen@@@DenseToSparseBatchDatasetOp@?A0x0fde61d7@tensorflow@@UEBAAEBV?$InlinedVector@W4DataType@tensorflow@@$03@gtl@5@XZ@4HA)\r\n1>pywrap_tensorflow_internal.exp : error LNK2001: unresolved external symbol \"int `public: virtual class tensorflow::gtl::InlinedVector<enum tensorflow::DataType,4> const & __cdecl tensorflow::`anonymous namespace'::DenseToSparseBatchDatasetOp::Dataset<struct Eigen::QInt8>::output_dtypes(void)const '::`2'::$TSS0\" (?$TSS0@?1??output_dtypes@?$Dataset@UQInt8@Eigen@@@DenseToSparseBatchDatasetOp@?A0x0fde61d7@tensorflow@@UEBAAEBV?$InlinedVector@W4DataType@tensorflow@@$03@gtl@5@XZ@4HA)\r\n1>pywrap_tensorflow_internal.exp : error LNK2001: unresolved external symbol \"int `public: virtual class tensorflow::gtl::InlinedVector<enum tensorflow::DataType,4> const & __cdecl tensorflow::`anonymous namespace'::DenseToSparseBatchDatasetOp::Dataset<struct Eigen::QUInt16>::output_dtypes(void)const '::`2'::$TSS0\" (?$TSS0@?1??output_dtypes@?$Dataset@UQUInt16@Eigen@@@DenseToSparseBatchDatasetOp@?A0x0fde61d7@tensorflow@@UEBAAEBV?$InlinedVector@W4DataType@tensorflow@@$03@gtl@5@XZ@4HA)\r\n1>pywrap_tensorflow_internal.exp : error LNK2001: unresolved external symbol \"int `public: virtual class tensorflow::gtl::InlinedVector<enum tensorflow::DataType,4> const & __cdecl tensorflow::`anonymous namespace'::DenseToSparseBatchDatasetOp::Dataset<struct Eigen::QUInt8>::output_dtypes(void)const '::`2'::$TSS0\" (?$TSS0@?1??output_dtypes@?$Dataset@UQUInt8@Eigen@@@DenseToSparseBatchDatasetOp@?A0x0fde61d7@tensorflow@@UEBAAEBV?$InlinedVector@W4DataType@tensorflow@@$03@gtl@5@XZ@4HA)\r\n1>pywrap_tensorflow_internal.exp : error LNK2001: unresolved external symbol \"int `public: virtual class tensorflow::gtl::InlinedVector<enum tensorflow::DataType,4> const & __cdecl tensorflow::`anonymous namespace'::DenseToSparseBatchDatasetOp::Dataset<struct Eigen::half>::output_dtypes(void)const '::`2'::$TSS0\" (?$TSS0@?1??output_dtypes@?$Dataset@Uhalf@Eigen@@@DenseToSparseBatchDatasetOp@?A0x0fde61d7@tensorflow@@UEBAAEBV?$InlinedVector@W4DataType@tensorflow@@$03@gtl@5@XZ@4HA)\r\n1>pywrap_tensorflow_internal.exp : error LNK2001: unresolved external symbol \"int `public: virtual class tensorflow::gtl::InlinedVector<enum tensorflow::DataType,4> const & __cdecl tensorflow::`anonymous namespace'::DenseToSparseBatchDatasetOp::Dataset<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >::output_dtypes(void)const '::`2'::$TSS0\" (?$TSS0@?1??output_dtypes@?$Dataset@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@DenseToSparseBatchDatasetOp@?A0x0fde61d7@tensorflow@@UEBAAEBV?$InlinedVector@W4DataType@tensorflow@@$03@gtl@5@XZ@4HA)\r\n1>pywrap_tensorflow_internal.exp : error LNK2001: unresolved external symbol \"int `public: virtual class tensorflow::gtl::InlinedVector<enum tensorflow::DataType,4> const & __cdecl tensorflow::`anonymous namespace'::DenseToSparseBatchDatasetOp::Dataset<class std::complex<float> >::output_dtypes(void)const '::`2'::$TSS0\" (?$TSS0@?1??output_dtypes@?$Dataset@V?$complex@M@std@@@DenseToSparseBatchDatasetOp@?A0x0fde61d7@tensorflow@@UEBAAEBV?$InlinedVector@W4DataType@tensorflow@@$03@gtl@5@XZ@4HA)\r\n...\r\n...\r\n1>pywrap_tensorflow_internal.exp : error LNK2001: unresolved external symbol \"class Eigen::array<int,2> const `private: static void __cdecl tensorflow::SparseMatMul<struct tensorflow::bfloat16,float>::ComputeOutputBlock(class std::vector<struct tensorflow::`anonymous namespace'::SparseSlice<struct tensorflow::bfloat16> *,class std::allocator<struct tensorflow::`anonymous namespace'::SparseSlice<struct tensorflow::bfloat16> *> > const &,class Eigen::TensorMap<class Eigen::Tensor<float const ,2,1,__int64>,16,struct Eigen::MakePointer> const &,int,int,int,bool,bool,class Eigen::TensorMap<class Eigen::Tensor<float,2,1,__int64>,16,struct Eigen::MakePointer> *)'::`26'::zero\" (?zero@?BK@??ComputeOutputBlock@?$SparseMatMul@Ubfloat16@tensorflow@@M@tensorflow@@CAXAEBV?$vector@PEAU?$SparseSlice@Ubfloat16@tensorflow@@@?A0x20ed32c2@tensorflow@@V?$allocator@PEAU?$SparseSlice@Ubfloat16@tensorflow@@@?A0x20ed32c2@tensorflow@@@std@@@std@@AEBV?$TensorMap@V?$Tensor@$$CBM$01$00_J@Eigen@@$0BA@UMakePointer@2@@Eigen@@HHH_N2PEAV?$TensorMap@V?$Tensor@M$01$00_J@Eigen@@$0BA@UMakePointer@2@@7@@Z@4V?$array@H$01@7@B)\r\n1>pywrap_tensorflow_internal.exp : error LNK2001: unresolved external symbol \"class Eigen::array<int,2> const `private: static void __cdecl tensorflow::SparseMatMul<struct tensorflow::bfloat16,struct tensorflow::bfloat16>::ComputeOutputBlock(class std::vector<struct tensorflow::`anonymous namespace'::SparseSlice<struct tensorflow::bfloat16> *,class std::allocator<struct tensorflow::`anonymous namespace'::SparseSlice<struct tensorflow::bfloat16> *> > const &,class Eigen::TensorMap<class Eigen::Tensor<struct tensorflow::bfloat16 const ,2,1,__int64>,16,struct Eigen::MakePointer> const &,int,int,int,bool,bool,class Eigen::TensorMap<class Eigen::Tensor<float,2,1,__int64>,16,struct Eigen::MakePointer> *)'::`26'::zero\" (?zero@?BK@??ComputeOutputBlock@?$SparseMatMul@Ubfloat16@tensorflow@@U12@@tensorflow@@CAXAEBV?$vector@PEAU?$SparseSlice@Ubfloat16@tensorflow@@@?A0x20ed32c2@tensorflow@@V?$allocator@PEAU?$SparseSlice@Ubfloat16@tensorflow@@@?A0x20ed32c2@tensorflow@@@std@@@std@@AEBV?$TensorMap@V?$Tensor@$$CBUbfloat16@tensorflow@@$01$00_J@Eigen@@$0BA@UMakePointer@2@@Eigen@@HHH_N2PEAV?$TensorMap@V?$Tensor@M$01$00_J@Eigen@@$0BA@UMakePointer@2@@7@@Z@4V?$array@H$01@7@B)\r\n1>D:\\rough\\tensorflow-1.3.1\\tensorflow\\contrib\\cmake\\build\\Release\\pywrap_tensorflow_internal.dll : fatal error LNK1120: 1937 unresolved externals\r\n========== Build: 0 succeeded, 1 failed, 0 up-to-date, 0 skipped ==========\r\n\r\n```\r\nBy any chance, does anyone know what these errors are hinting towards?\r\n\r\nThanks in advance.\r\n\r\n\r\n  "}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/15805", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/15805/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/15805/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/15805/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/15805", "id": 285595483, "node_id": "MDU6SXNzdWUyODU1OTU0ODM=", "number": 15805, "title": "Unable to convert LSTM model to .tflite model", "user": {"login": "SullyChen", "id": 11732807, "node_id": "MDQ6VXNlcjExNzMyODA3", "avatar_url": "https://avatars1.githubusercontent.com/u/11732807?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SullyChen", "html_url": "https://github.com/SullyChen", "followers_url": "https://api.github.com/users/SullyChen/followers", "following_url": "https://api.github.com/users/SullyChen/following{/other_user}", "gists_url": "https://api.github.com/users/SullyChen/gists{/gist_id}", "starred_url": "https://api.github.com/users/SullyChen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SullyChen/subscriptions", "organizations_url": "https://api.github.com/users/SullyChen/orgs", "repos_url": "https://api.github.com/users/SullyChen/repos", "events_url": "https://api.github.com/users/SullyChen/events{/privacy}", "received_events_url": "https://api.github.com/users/SullyChen/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 750616506, "node_id": "MDU6TGFiZWw3NTA2MTY1MDY=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/comp:lite", "name": "comp:lite", "color": "0052cc", "default": false, "description": ""}], "state": "open", "locked": false, "assignee": {"login": "aselle", "id": 326106, "node_id": "MDQ6VXNlcjMyNjEwNg==", "avatar_url": "https://avatars1.githubusercontent.com/u/326106?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aselle", "html_url": "https://github.com/aselle", "followers_url": "https://api.github.com/users/aselle/followers", "following_url": "https://api.github.com/users/aselle/following{/other_user}", "gists_url": "https://api.github.com/users/aselle/gists{/gist_id}", "starred_url": "https://api.github.com/users/aselle/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aselle/subscriptions", "organizations_url": "https://api.github.com/users/aselle/orgs", "repos_url": "https://api.github.com/users/aselle/repos", "events_url": "https://api.github.com/users/aselle/events{/privacy}", "received_events_url": "https://api.github.com/users/aselle/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "aselle", "id": 326106, "node_id": "MDQ6VXNlcjMyNjEwNg==", "avatar_url": "https://avatars1.githubusercontent.com/u/326106?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aselle", "html_url": "https://github.com/aselle", "followers_url": "https://api.github.com/users/aselle/followers", "following_url": "https://api.github.com/users/aselle/following{/other_user}", "gists_url": "https://api.github.com/users/aselle/gists{/gist_id}", "starred_url": "https://api.github.com/users/aselle/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aselle/subscriptions", "organizations_url": "https://api.github.com/users/aselle/orgs", "repos_url": "https://api.github.com/users/aselle/repos", "events_url": "https://api.github.com/users/aselle/events{/privacy}", "received_events_url": "https://api.github.com/users/aselle/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 47, "created_at": "2018-01-03T04:08:53Z", "updated_at": "2019-12-23T08:24:33Z", "closed_at": null, "author_association": "NONE", "body": "### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**: Yes\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**: macOS High Sierra 10.13.2\r\n- **TensorFlow installed from (source or binary)**: Binary\r\n- **TensorFlow version (use command below)**: ('v1.3.0-rc2-20-g0787eee', '1.3.0')\r\n- **Python version**: 2.7.13\r\n- **Bazel version (if compiling from source)**: N/A\r\n- **GCC/Compiler version (if compiling from source)**: N/A\r\n- **CUDA/cuDNN version**: N/A, using CPU only\r\n- **GPU model and memory**: N/A\r\n- **Exact command to reproduce**: \r\n```\r\n~/tensorflow/bazel-bin/tensorflow/contrib/lite/toco/toco \\\r\n  --input_file=\"$(pwd)/lstm-model.pb\" \\\r\n  --input_format=TENSORFLOW_GRAPHDEF \\\r\n  --output_format=TFLITE \\\r\n  --output_file=\"$(pwd)/lstm-model.tflite\" --inference_type=FLOAT \\\r\n  --input_type=FLOAT --input_arrays=input \\\r\n  --output_arrays=output --input_shapes=28,28\r\n```\r\n### The Issue\r\nWhen trying to convert an LSTM from a frozen graph (.pb) file to (.tflite) using the tensorflow toco script, I get unsupported operations error.\r\n\r\n### Source code / logs\r\nThis is the source code for the mode:\r\n```\r\n'''\r\nEdited code from https://jasdeep06.github.io/posts/Understanding-LSTM-in-Tensorflow-MNIST/\r\n'''\r\n\r\nimport tensorflow as tf\r\nfrom tensorflow.contrib import rnn\r\n\r\n#import mnist dataset\r\nfrom tensorflow.examples.tutorials.mnist import input_data\r\nmnist=input_data.read_data_sets(\"/tmp/data/\",one_hot=True)\r\n\r\n#define constants\r\n#unrolled through 28 time steps\r\ntime_steps=28\r\n#hidden LSTM units\r\nnum_units=128\r\n#rows of 28 pixels\r\nn_input=28\r\n#learning rate for adam\r\nlearning_rate=0.001\r\n#mnist is meant to be classified in 10 classes(0-9).\r\nn_classes=10\r\n#size of batch\r\nbatch_size=128\r\n\r\n#weights and biases of appropriate shape to accomplish above task\r\nout_weights=tf.Variable(tf.random_normal([num_units,n_classes]))\r\nout_bias=tf.Variable(tf.random_normal([n_classes]))\r\n\r\n#defining placeholders\r\n#input image placeholder\r\nx=tf.placeholder(\"float\",[None,time_steps,n_input],name=\"input\")\r\n#input label placeholder\r\ny=tf.placeholder(\"float\",[None,n_classes])\r\n\r\n#processing the input tensor from [batch_size,n_steps,n_input] to \"time_steps\" number of [batch_size,n_input] tensors\r\ninput=tf.unstack(x ,time_steps,1)\r\n\r\n#defining the network\r\n#cell = rnn.BasicLSTMCell(num_units,forget_bias=0)\r\nlstm_layer = tf.nn.rnn_cell.MultiRNNCell([rnn.BasicLSTMCell(num_units) for _ in range(3)])\r\noutputs, _ = rnn.static_rnn(lstm_layer,input,dtype=\"float32\")\r\n\r\n#converting last output of dimension [batch_size,num_units] to [batch_size,n_classes] by out_weight multiplication\r\nprediction=tf.matmul(outputs[-1],out_weights,name=\"output\")+out_bias\r\n\r\n#loss_function\r\nloss=tf.reduce_mean(tf.nn.softmax_cross_entropy_with_logits(logits=prediction,labels=y))\r\n#optimization\r\nopt=tf.train.AdamOptimizer(learning_rate=learning_rate).minimize(loss)\r\n\r\n#model evaluation\r\ncorrect_prediction=tf.equal(tf.argmax(prediction,1),tf.argmax(y,1))\r\naccuracy=tf.reduce_mean(tf.cast(correct_prediction,tf.float32))\r\n\r\n#initialize variables\r\ninit=tf.global_variables_initializer()\r\n\r\nsaver = tf.train.Saver()\r\n\r\nwith tf.Session() as sess:\r\n    sess.run(init)\r\n    iter=1\r\n    while iter<800:\r\n        batch_x,batch_y=mnist.train.next_batch(batch_size=batch_size)\r\n\r\n        batch_x=batch_x.reshape((batch_size,time_steps,n_input))\r\n\r\n        sess.run(opt, feed_dict={x: batch_x, y: batch_y})\r\n\r\n        if iter %10==0:\r\n            acc=sess.run(accuracy,feed_dict={x:batch_x,y:batch_y})\r\n            los=sess.run(loss,feed_dict={x:batch_x,y:batch_y})\r\n            print(\"For iter \",iter)\r\n            print(\"Accuracy \",acc)\r\n            print(\"Loss \",los)\r\n            print(\"__________________\")\r\n\r\n        filename = saver.save(sess, \"model/model.ckpt\")\r\n\r\n        iter=iter+1\r\n\r\n#calculating test accuracy\r\ntest_data = mnist.test.images[:128].reshape((-1, time_steps, n_input))\r\ntest_label = mnist.test.labels[:128]\r\nprint(\"Testing Accuracy:\", sess.run(accuracy, feed_dict={x: test_data, y: test_label}))\r\n```\r\nThis is code I used for freezing the graph:\r\n```\r\n'''\r\nCode from https://blog.metaflow.fr/tensorflow-how-to-freeze-a-model-and-serve-it-with-a-python-api-d4f3596b3adc\r\n'''\r\n\r\nimport os, argparse\r\n\r\nimport tensorflow as tf\r\n\r\n# The original freeze_graph function\r\n# from tensorflow.python.tools.freeze_graph import freeze_graph\r\n\r\ndir = os.path.dirname(os.path.realpath(__file__))\r\n\r\ndef freeze_graph(model_dir, output_node_names):\r\n    \"\"\"Extract the sub graph defined by the output nodes and convert\r\n    all its variables into constant\r\n    Args:\r\n        model_dir: the root folder containing the checkpoint state file\r\n        output_node_names: a string, containing all the output node's names,\r\n                            comma separated\r\n    \"\"\"\r\n    if not tf.gfile.Exists(model_dir):\r\n        raise AssertionError(\r\n            \"Export directory doesn't exists. Please specify an export \"\r\n            \"directory: %s\" % model_dir)\r\n\r\n    if not output_node_names:\r\n        print(\"You need to supply the name of a node to --output_node_names.\")\r\n        return -1\r\n\r\n    # We retrieve our checkpoint fullpath\r\n    checkpoint = tf.train.get_checkpoint_state(model_dir)\r\n    input_checkpoint = checkpoint.model_checkpoint_path\r\n\r\n    # We precise the file fullname of our freezed graph\r\n    absolute_model_dir = \"/\".join(input_checkpoint.split('/')[:-1])\r\n    output_graph = absolute_model_dir + \"/frozen_model.pb\"\r\n\r\n    # We clear devices to allow TensorFlow to control on which device it will load operations\r\n    clear_devices = True\r\n\r\n    # We start a session using a temporary fresh Graph\r\n    with tf.Session(graph=tf.Graph()) as sess:\r\n        # We import the meta graph in the current default Graph\r\n        saver = tf.train.import_meta_graph(input_checkpoint + '.meta', clear_devices=clear_devices)\r\n\r\n        # We restore the weights\r\n        saver.restore(sess, input_checkpoint)\r\n\r\n        # We use a built-in TF helper to export variables to constants\r\n        output_graph_def = tf.graph_util.convert_variables_to_constants(\r\n            sess, # The session is used to retrieve the weights\r\n            tf.get_default_graph().as_graph_def(), # The graph_def is used to retrieve the nodes\r\n            output_node_names.split(\",\") # The output node names are used to select the usefull nodes\r\n        )\r\n\r\n        # Finally we serialize and dump the output graph to the filesystem\r\n        with tf.gfile.GFile(output_graph, \"wb\") as f:\r\n            f.write(output_graph_def.SerializeToString())\r\n        print(\"%d ops in the final graph.\" % len(output_graph_def.node))\r\n\r\n    return output_graph_def\r\n\r\nif __name__ == '__main__':\r\n    parser = argparse.ArgumentParser()\r\n    parser.add_argument(\"--model_dir\", type=str, default=\"\", help=\"Model folder to export\")\r\n    parser.add_argument(\"--output_node_names\", type=str, default=\"\", help=\"The name of the output nodes, comma separated.\")\r\n    args = parser.parse_args()\r\n\r\n    freeze_graph(args.model_dir, args.output_node_names)\r\n```\r\n\r\nThis is the output of the toco command:\r\n```\r\n2018-01-02 20:05:24.912921: W tensorflow/contrib/lite/toco/toco_cmdline_flags.cc:178] --input_type is deprecated. It was an ambiguous flag that set both --input_data_types and --inference_input_type. If you are trying to complement the input file with information about the type of input arrays, use --input_data_type. If you are trying to control the quantization/dequantization of real-numbers input arrays in the output file, use --inference_input_type.\r\n2018-01-02 20:05:24.973744: I tensorflow/contrib/lite/toco/import_tensorflow.cc:1099] Converting unsupported operation: Unpack\r\n2018-01-02 20:05:24.974315: I tensorflow/contrib/lite/toco/import_tensorflow.cc:1099] Converting unsupported operation: StridedSlice\r\n2018-01-02 20:05:25.041459: I tensorflow/contrib/lite/toco/graph_transformations/graph_transformations.cc:39] Before general graph transformations: 1209 operators, 1775 arrays (0 quantized)\r\n2018-01-02 20:05:25.118862: I tensorflow/contrib/lite/toco/graph_transformations/graph_transformations.cc:39] After general graph transformations pass 1: 1114 operators, 1672 arrays (0 quantized)\r\n2018-01-02 20:05:25.176555: I tensorflow/contrib/lite/toco/graph_transformations/graph_transformations.cc:39] Before dequantization graph transformations: 1114 operators, 1672 arrays (0 quantized)\r\n2018-01-02 20:05:25.208552: I tensorflow/contrib/lite/toco/allocate_transient_arrays.cc:313] Total transient array allocated size: 0 bytes, theoretical optimal value: 0 bytes.\r\n2018-01-02 20:05:25.234811: F tensorflow/contrib/lite/toco/tflite/export.cc:303] Some of the operators in the model are not supported by the standard TensorFlow Lite runtime. If you have a custom implementation for them you can disable this error with --allow_custom_ops. Here is a list of operators for which you will need custom implementations: ExpandDims, Fill, SPLIT, StridedSlice, TensorFlowShape, Unpack.\r\npbtotflite.sh: line 8:  8277 Abort trap: 6           ~/tensorflow/bazel-bin/tensorflow/contrib/lite/toco/toco --input_file=\"$(pwd)/lstm-model.pb\" --input_format=TENSORFLOW_GRAPHDEF --output_format=TFLITE --output_file=\"$(pwd)/lstm-model.tflite\" --inference_type=FLOAT --input_type=FLOAT --input_arrays=input --output_arrays=output --input_shapes=28,28\r\n```"}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/15793", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/15793/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/15793/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/15793/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/15793", "id": 285530290, "node_id": "MDU6SXNzdWUyODU1MzAyOTA=", "number": 15793, "title": "Feature Request: tf.train.MonitoredTrainingSession implementation for slim.learning.train", "user": {"login": "chahna107", "id": 27863001, "node_id": "MDQ6VXNlcjI3ODYzMDAx", "avatar_url": "https://avatars1.githubusercontent.com/u/27863001?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chahna107", "html_url": "https://github.com/chahna107", "followers_url": "https://api.github.com/users/chahna107/followers", "following_url": "https://api.github.com/users/chahna107/following{/other_user}", "gists_url": "https://api.github.com/users/chahna107/gists{/gist_id}", "starred_url": "https://api.github.com/users/chahna107/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chahna107/subscriptions", "organizations_url": "https://api.github.com/users/chahna107/orgs", "repos_url": "https://api.github.com/users/chahna107/repos", "events_url": "https://api.github.com/users/chahna107/events{/privacy}", "received_events_url": "https://api.github.com/users/chahna107/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 299643928, "node_id": "MDU6TGFiZWwyOTk2NDM5Mjg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:contributions%20welcome", "name": "stat:contributions welcome", "color": "f4b400", "default": false, "description": ""}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2018-01-02T20:32:41Z", "updated_at": "2018-01-30T00:54:04Z", "closed_at": null, "author_association": "NONE", "body": "### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**: N/A\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**: N/A\r\n- **TensorFlow installed from (source or binary)**: N/A\r\n- **TensorFlow version (use command below)**: N/A\r\n- **Python version**:  N/A\r\n- **Bazel version (if compiling from source)**: N/A\r\n- **GCC/Compiler version (if compiling from source)**: N/A\r\n- **CUDA/cuDNN version**: N/A\r\n- **GPU model and memory**: N/A\r\n- **Exact command to reproduce**: N/A\r\n\r\nThis is a feature request:\r\nIssue #6263 states that tf.train.Supervisor is to be deprecated. Since the slim.learning.train uses Supervisor internally, is it still advisable to use it?\r\nOr are there any chances to implement the slim.learning.train to use tf.train.MonitoredSession instead of Supervisor?\r\n\r\n@sguada \r\n\r\nThanks!\r\n  "}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/15783", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/15783/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/15783/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/15783/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/15783", "id": 285396750, "node_id": "MDU6SXNzdWUyODUzOTY3NTA=", "number": 15783, "title": "CUDA crashes during Cholesky_grad procedure", "user": {"login": "tom-a-horrocks", "id": 6022830, "node_id": "MDQ6VXNlcjYwMjI4MzA=", "avatar_url": "https://avatars2.githubusercontent.com/u/6022830?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tom-a-horrocks", "html_url": "https://github.com/tom-a-horrocks", "followers_url": "https://api.github.com/users/tom-a-horrocks/followers", "following_url": "https://api.github.com/users/tom-a-horrocks/following{/other_user}", "gists_url": "https://api.github.com/users/tom-a-horrocks/gists{/gist_id}", "starred_url": "https://api.github.com/users/tom-a-horrocks/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tom-a-horrocks/subscriptions", "organizations_url": "https://api.github.com/users/tom-a-horrocks/orgs", "repos_url": "https://api.github.com/users/tom-a-horrocks/repos", "events_url": "https://api.github.com/users/tom-a-horrocks/events{/privacy}", "received_events_url": "https://api.github.com/users/tom-a-horrocks/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 299643928, "node_id": "MDU6TGFiZWwyOTk2NDM5Mjg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:contributions%20welcome", "name": "stat:contributions welcome", "color": "f4b400", "default": false, "description": ""}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 14, "created_at": "2018-01-02T10:27:26Z", "updated_at": "2018-06-02T17:41:54Z", "closed_at": null, "author_association": "NONE", "body": "### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**: Yes (see command below)\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**: Windows 10\r\n- **TensorFlow installed from (source or binary)**: Binary (pip)\r\n- **TensorFlow version (use command below)**: 'unknown' 1.4.0\r\n- **Python version**: 3.5.2\r\n- **CUDA/cuDNN version**: Cuda: 8.0.61.2; cuDNN: 6.1\r\n- **GPU model and memory**: GeForce GTX 770M (3GB); NVIDIA driver 388.71\r\n- **Bazel version**: N/A\r\n- **Exact command to reproduce**:\r\n```\r\nimport tensorflow as tf\r\nimport numpy as np\r\n\r\nwith tf.Session() as sess:\r\n    x = tf.placeholder(tf.float64, [None, None])\r\n    f = tf.reduce_sum(tf.cholesky(x))\r\n    sess.run(tf.global_variables_initializer())\r\n    print(sess.run(tf.gradients(f, x), {x:np.array(1.).reshape(1, 1)}))\r\n```\r\n\r\n### Describe the problem\r\nPython crashes when running the code above. It was initially encountered when trying to perform a Cholesky decomposition during sparse Gaussian process regression (see https://github.com/GPflow/GPflow/issues/602). I am out of my depth here, but the following error messages seemed interesting:\r\n* Address 0x00000000 is out of bounds\r\n* Blas GEMV launch failed\r\n* failed to run cuBLAS routine cublasDgemv_v2: CUBLAS_STATUS_EXECUTION_FAILED\r\n\r\nI have run various CUDA profiling tests and have had no issues. The cholesky decomposition example that comes with CUDA could also execute just fine. I have tried both reducing the amount of GPU memory available to tensorflow _and_ setting it grow-able, to no effect.\r\n\r\n### Source code / logs\r\nSee above for source code.\r\n\r\nstdout/stderr:\r\n```\r\n2018-01-02 18:14:34.305556: I C:\\tf_jenkins\\home\\workspace\\rel-win\\M\\windows-gpu\\PY\\36\\tensorflow\\core\\platform\\cpu_feature_guard.cc:137] Your CPU supports instructions that this TensorFlow binary was not compiled to use: AVX AVX2\r\n2018-01-02 18:14:35.110794: I C:\\tf_jenkins\\home\\workspace\\rel-win\\M\\windows-gpu\\PY\\36\\tensorflow\\core\\common_runtime\\gpu\\gpu_device.cc:1030] Found device 0 with properties:\r\nname: GeForce GTX 770M major: 3 minor: 0 memoryClockRate(GHz): 0.797\r\npciBusID: 0000:01:00.0\r\ntotalMemory: 3.00GiB freeMemory: 2.50GiB\r\n2018-01-02 18:14:35.110932: I C:\\tf_jenkins\\home\\workspace\\rel-win\\M\\windows-gpu\\PY\\36\\tensorflow\\core\\common_runtime\\gpu\\gpu_device.cc:1120] Creating TensorFlow device (/device:GPU:0) -> (device: 0, name: GeForce GTX 770M, pci bus id: 0000:01:00.0, compute capability: 3.0)\r\n2018-01-02 18:14:35.290410: I C:\\tf_jenkins\\home\\workspace\\rel-win\\M\\windows-gpu\\PY\\36\\tensorflow\\core\\kernels\\cuda_solvers.cc:159] Creating CudaSolver handles for stream 00000189FC81C670\r\n2018-01-02 18:14:35.615695: E C:\\tf_jenkins\\home\\workspace\\rel-win\\M\\windows-gpu\\PY\\36\\tensorflow\\stream_executor\\cuda\\cuda_event.cc:49] Error polling for event status: failed to query event: CUDA_ERROR_ILLEGAL_ADDRESS\r\n2018-01-02 18:14:35.615847: F C:\\tf_jenkins\\home\\workspace\\rel-win\\M\\windows-gpu\\PY\\36\\tensorflow\\core\\common_runtime\\gpu\\gpu_event_mgr.cc:203] Unexpected Event status: 1\r\n2018-01-02 18:14:35.615695: E C:\\tf_jenkins\\home\\workspace\\rel-win\\M\\windows-gpu\\PY\\36\\tensorflow\\stream_executor\\cuda\\cuda_driver.cc:1110] could not synchronize on CUDA context: CUDA_ERROR_ILLEGAL_ADDRESS :: No stack trace available\r\n```\r\n\r\ncuda-memcheck:\r\n```\r\n========= CUDA-MEMCHECK\r\n2018-01-02 18:15:26.061068: I C:\\tf_jenkins\\home\\workspace\\rel-win\\M\\windows-gpu\\PY\\35\\tensorflow\\core\\platform\\cpu_feature_guard.cc:137] Your CPU supports instructions that this TensorFlow binary was not compiled to use: AVX AVX2\r\n2018-01-02 18:15:26.872851: I C:\\tf_jenkins\\home\\workspace\\rel-win\\M\\windows-gpu\\PY\\35\\tensorflow\\core\\common_runtime\\gpu\\gpu_device.cc:1030] Found device 0 with properties:\r\nname: GeForce GTX 770M major: 3 minor: 0 memoryClockRate(GHz): 0.797\r\npciBusID: 0000:01:00.0\r\ntotalMemory: 3.00GiB freeMemory: 2.52GiB\r\n2018-01-02 18:15:26.873028: I C:\\tf_jenkins\\home\\workspace\\rel-win\\M\\windows-gpu\\PY\\35\\tensorflow\\core\\common_runtime\\gpu\\gpu_device.cc:1120] Creating TensorFlow device (/device:GPU:0) -> (device: 0, name: GeForce GTX 770M, pci bus id: 0000:01:00.0, compute capability: 3.0)\r\n2018-01-02 18:15:27.425673: I C:\\tf_jenkins\\home\\workspace\\rel-win\\M\\windows-gpu\\PY\\35\\tensorflow\\core\\kernels\\cuda_solvers.cc:159] Creating CudaSolver handles for stream 00000162C1EBD150\r\n2018-01-02 18:15:30.721433: E C:\\tf_jenkins\\home\\workspace\\rel-win\\M\\windows-gpu\\PY\\35\\tensorflow\\stream_executor\\cuda\\cuda_blas.cc:551] failed to run cuBLAS routine cublasDgemv_v2: CUBLAS_STATUS_EXECUTION_FAILED\r\nTraceback (most recent call last):\r\n  File \"C:\\Users\\tomah\\AppData\\Local\\Programs\\Python\\Python35\\lib\\site-packages\\tensorflow\\python\\client\\session.py\", line 1323, in _do_call\r\n    return fn(*args)\r\n  File \"C:\\Users\\tomah\\AppData\\Local\\Programs\\Python\\Python35\\lib\\site-packages\\tensorflow\\python\\client\\session.py\", line 1302, in _run_fn\r\n    status, run_metadata)\r\n  File \"C:\\Users\\tomah\\AppData\\Local\\Programs\\Python\\Python35\\lib\\site-packages\\tensorflow\\python\\framework\\errors_impl.py\", line 473, in __exit__\r\n    c_api.TF_GetCode(self.status.status))\r\ntensorflow.python.framework.errors_impl.InternalError: Blas GEMV launch failed:  m=1, n=1\r\n         [[Node: gradients/Cholesky_grad/MatMul_1 = MatMul[T=DT_DOUBLE, transpose_a=true, transpose_b=false, _device=\"/job:localhost/replica:0/task:0/device:GPU:0\"](gradients/Cholesky_grad/MatrixTriangularSolve, gradients/Cholesky_grad/MatrixBandPart)]]\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTraceback (most recent call last):\r\n  File \"test2.py\", line 11, in <module>\r\n    print(sess.run(tf.gradients(f, x), {x:np.array(1.).reshape(1, 1)}))\r\n  File \"C:\\Users\\tomah\\AppData\\Local\\Programs\\Python\\Python35\\lib\\site-packages\\tensorflow\\python\\client\\session.py\", line 889, in run\r\n    run_metadata_ptr)\r\n  File \"C:\\Users\\tomah\\AppData\\Local\\Programs\\Python\\Python35\\lib\\site-packages\\tensorflow\\python\\client\\session.py\", line 1120, in _run\r\n    feed_dict_tensor, options, run_metadata)\r\n  File \"C:\\Users\\tomah\\AppData\\Local\\Programs\\Python\\Python35\\lib\\site-packages\\tensorflow\\python\\client\\session.py\", line 1317, in _do_run\r\n    options, run_metadata)\r\n  File \"C:\\Users\\tomah\\AppData\\Local\\Programs\\Python\\Python35\\lib\\site-packages\\tensorflow\\python\\client\\session.py\", line 1336, in _do_call\r\n    raise type(e)(node_def, op, message)\r\ntensorflow.python.framework.errors_impl.InternalError: Blas GEMV launch failed:  m=1, n=1\r\n         [[Node: gradients/Cholesky_grad/MatMul_1 = MatMul[T=DT_DOUBLE, transpose_a=true, transpose_b=false, _device=\"/job:localhost/replica:0/task:0/device:GPU:0\"](gradients/Cholesky_grad/MatrixTriangularSolve, gradients/Cholesky_grad/MatrixBandPart)]]\r\n\r\nCaused by op 'gradients/Cholesky_grad/MatMul_1', defined at:\r\n  File \"test2.py\", line 11, in <module>\r\n    print(sess.run(tf.gradients(f, x), {x:np.array(1.).reshape(1, 1)}))\r\n  File \"C:\\Users\\tomah\\AppData\\Local\\Programs\\Python\\Python35\\lib\\site-packages\\tensorflow\\python\\ops\\gradients_impl.py\", line 581, in gradients\r\n    grad_scope, op, func_call, lambda: grad_fn(op, *out_grads))\r\n  File \"C:\\Users\\tomah\\AppData\\Local\\Programs\\Python\\Python35\\lib\\site-packages\\tensorflow\\python\\ops\\gradients_impl.py\", line 353, in _MaybeCompile\r\n    return grad_fn()  # Exit early\r\n  File \"C:\\Users\\tomah\\AppData\\Local\\Programs\\Python\\Python35\\lib\\site-packages\\tensorflow\\python\\ops\\gradients_impl.py\", line 581, in <lambda>\r\n    grad_scope, op, func_call, lambda: grad_fn(op, *out_grads))\r\n  File \"C:\\Users\\tomah\\AppData\\Local\\Programs\\Python\\Python35\\lib\\site-packages\\tensorflow\\python\\ops\\linalg_grad.py\", line 77, in _CholeskyGrad\r\n    math_ops.matmul(l_inverse, middle, adjoint_a=True), l_inverse)\r\n  File \"C:\\Users\\tomah\\AppData\\Local\\Programs\\Python\\Python35\\lib\\site-packages\\tensorflow\\python\\ops\\math_ops.py\", line 1891, in matmul\r\n    a, b, transpose_a=transpose_a, transpose_b=transpose_b, name=name)\r\n  File \"C:\\Users\\tomah\\AppData\\Local\\Programs\\Python\\Python35\\lib\\site-packages\\tensorflow\\python\\ops\\gen_math_ops.py\", line 2436, in _mat_mul\r\n    name=name)\r\n  File \"C:\\Users\\tomah\\AppData\\Local\\Programs\\Python\\Python35\\lib\\site-packages\\tensorflow\\python\\framework\\op_def_library.py\", line 787, in _apply_op_helper\r\n    op_def=op_def)\r\n  File \"C:\\Users\\tomah\\AppData\\Local\\Programs\\Python\\Python35\\lib\\site-packages\\tensorflow\\python\\framework\\ops.py\", line 2956, in create_op\r\n    op_def=op_def)\r\n  File \"C:\\Users\\tomah\\AppData\\Local\\Programs\\Python\\Python35\\lib\\site-packages\\tensorflow\\python\\framework\\ops.py\", line 1470, in __init__\r\n    self._traceback = self._graph._extract_stack()  # pylint: disable=protected-access\r\n\r\n...which was originally created as op 'Cholesky', defined at:\r\n  File \"test2.py\", line 9, in <module>\r\n    f = tf.reduce_sum(tf.cholesky(x))\r\n  File \"C:\\Users\\tomah\\AppData\\Local\\Programs\\Python\\Python35\\lib\\site-packages\\tensorflow\\python\\ops\\gen_linalg_ops.py\", line 419, in cholesky\r\n    \"Cholesky\", input=input, name=name)\r\n  File \"C:\\Users\\tomah\\AppData\\Local\\Programs\\Python\\Python35\\lib\\site-packages\\tensorflow\\python\\framework\\op_def_library.py\", line 787, in _apply_op_helper\r\n    op_def=op_def)\r\n  File \"C:\\Users\\tomah\\AppData\\Local\\Programs\\Python\\Python35\\lib\\site-packages\\tensorflow\\python\\framework\\ops.py\", line 2956, in create_op\r\n    op_def=op_def)\r\n  File \"C:\\Users\\tomah\\AppData\\Local\\Programs\\Python\\Python35\\lib\\site-packages\\tensorflow\\python\\framework\\ops.py\", line 1470, in __init__\r\n    self._traceback = self._graph._extract_stack()  # pylint: disable=protected-access\r\n\r\nInternalError (see above for traceback): Blas GEMV launch failed:  m=1, n=1\r\n         [[Node: gradients/Cholesky_grad/MatMul_1 = MatMul[T=DT_DOUBLE, transpose_a=true, transpose_b=false, _device=\"/job:localhost/replica:0/task:0/device:GPU:0\"](gradients/Cholesky_grad/MatrixTriangularSolve, gradients/Cholesky_grad/MatrixBandPart)]]\r\n\r\n========= Invalid __global__ read of size 1\r\n=========     at 0x00000398 in void Eigen::internal::FullReductionKernel<int=256, int=128, Eigen::TensorEvaluator<Eigen::TensorReductionOp<Eigen::internal::SumReducer<double>, Eigen::DimensionList<__int64, unsigned __int64=2> const , Eigen::TensorGeneratorOp<tensorflow::generator::OverwriteDiagGenerator<double>, Eigen::TensorMap<Eigen::Tensor<double const , int=2, int=1, __int64>, int=16, Eigen::MakePointer> const > const , Eigen::MakePointer> const , Eigen::GpuDevice>, Eigen::internal::SumReducer<double>, __int64>(Eigen::internal::SumReducer<double>, double, __int64, Eigen::internal::SumReducer<double>::CoeffReturnType*, unsigned int*)\r\n=========     by thread (0,0,0) in block (0,0,0)\r\n=========     Address 0x00000000 is out of bounds\r\n=========     Saved host backtrace up to driver entry point at kernel launch time\r\n=========     Host Frame:C:\\WINDOWS\\SYSTEM32\\nvcuda.dll (cuTexRefSetAddress + 0x1aaaf3) [0x1b8145]\r\n=========     Host Frame:C:\\Users\\tomah\\AppData\\Local\\Programs\\Python\\Python35\\lib\\site-packages\\tensorflow\\python\\_pywrap_tensorflow_internal.pyd [0x35d2]\r\n=========     Host Frame:C:\\Users\\tomah\\AppData\\Local\\Programs\\Python\\Python35\\lib\\site-packages\\tensorflow\\python\\_pywrap_tensorflow_internal.pyd [0x2365]\r\n=========     Host Frame:C:\\Users\\tomah\\AppData\\Local\\Programs\\Python\\Python35\\lib\\site-packages\\tensorflow\\python\\_pywrap_tensorflow_internal.pyd (perftools::gputools::cuda::CUDATimer::Stop + 0x1cf760) [0x2202ba0]\r\n=========     Host Frame:C:\\Users\\tomah\\AppData\\Local\\Programs\\Python\\Python35\\lib\\site-packages\\tensorflow\\python\\_pywrap_tensorflow_internal.pyd (perftools::gputools::cuda::CUDATimer::Stop + 0x1d18f2) [0x2204d32]\r\n=========     Host Frame:C:\\Users\\tomah\\AppData\\Local\\Programs\\Python\\Python35\\lib\\site-packages\\tensorflow\\python\\_pywrap_tensorflow_internal.pyd (perftools::gputools::cuda::CUDATimer::Stop + 0x1ce985) [0x2201dc5]\r\n=========     Host Frame:C:\\Users\\tomah\\AppData\\Local\\Programs\\Python\\Python35\\lib\\site-packages\\tensorflow\\python\\_pywrap_tensorflow_internal.pyd (tensorflow::MatrixSetDiagOp<Eigen::GpuDevice,double>::Compute + 0x407) [0x13180d7]\r\n=========     Host Frame:C:\\Users\\tomah\\AppData\\Local\\Programs\\Python\\Python35\\lib\\site-packages\\tensorflow\\python\\_pywrap_tensorflow_internal.pyd (tensorflow::BaseGPUDevice::ComputeHelper + 0x4f4) [0x3aab84]\r\n=========     Host Frame:C:\\Users\\tomah\\AppData\\Local\\Programs\\Python\\Python35\\lib\\site-packages\\tensorflow\\python\\_pywrap_tensorflow_internal.pyd (tensorflow::BaseGPUDevice::Compute + 0x18a) [0x3aa3aa]\r\n=========     Host Frame:C:\\Users\\tomah\\AppData\\Local\\Programs\\Python\\Python35\\lib\\site-packages\\tensorflow\\python\\_pywrap_tensorflow_internal.pyd (tensorflow::NewLocalExecutor + 0xfdb) [0x2aefdb]\r\n=========     Host Frame:C:\\Users\\tomah\\AppData\\Local\\Programs\\Python\\Python35\\lib\\site-packages\\tensorflow\\python\\_pywrap_tensorflow_internal.pyd (?_Copy@?$_Func_impl@V?$_Binder@U_Unforced@std@@P8ExecutorState@?A0x4546b700@tensorflow@@EAAXUTaggedNode@345@_J@ZQEAV345@AEBU6345@AEA_J@std@@V?$allocator@H@2@X$$V@std@@EEBAPEAV?$_Func_base@X$$V@2@PEAX@Z + 0x78) [0x2b2548]\r\n=========     Host Frame:C:\\Users\\tomah\\AppData\\Local\\Programs\\Python\\Python35\\lib\\site-packages\\tensorflow\\python\\_pywrap_tensorflow_internal.pyd (Eigen::NonBlockingThreadPoolTempl<tensorflow::thread::EigenEnvironment>::WorkerLoop + 0x3d9) [0x247839]\r\n=========     Host Frame:C:\\Users\\tomah\\AppData\\Local\\Programs\\Python\\Python35\\lib\\site-packages\\tensorflow\\python\\_pywrap_tensorflow_internal.pyd (Eigen::NonBlockingThreadPoolTempl<tensorflow::thread::EigenEnvironment>::WorkerLoop + 0x560) [0x2479c0]\r\n=========     Host Frame:C:\\Users\\tomah\\AppData\\Local\\Programs\\Python\\Python35\\lib\\site-packages\\tensorflow\\python\\_pywrap_tensorflow_internal.pyd (tensorflow::WindowsFileSystem::Utf8ToWideChar + 0x175) [0x276795]\r\n=========     Host Frame:C:\\Users\\tomah\\AppData\\Local\\Programs\\Python\\Python35\\lib\\site-packages\\tensorflow\\python\\_pywrap_tensorflow_internal.pyd (tensorflow::WindowsFileSystem::Utf8ToWideChar + 0xc9) [0x2766e9]\r\n=========     Host Frame:C:\\WINDOWS\\System32\\ucrtbase.dll (iswascii + 0xa5) [0x1d885]\r\n=========     Host Frame:C:\\WINDOWS\\System32\\KERNEL32.DLL (BaseThreadInitThunk + 0x14) [0x11fe4]\r\n=========     Host Frame:C:\\WINDOWS\\SYSTEM32\\ntdll.dll (RtlUserThreadStart + 0x21) [0x6ef91]\r\n=========\r\n========= ERROR SUMMARY: 1 error\r\n```\r\n\r\n  "}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/15771", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/15771/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/15771/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/15771/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/15771", "id": 285312818, "node_id": "MDU6SXNzdWUyODUzMTI4MTg=", "number": 15771, "title": "Flexible input shape for map method in class RandomFourierFeatureMapper", "user": {"login": "dchatterjee172", "id": 10482742, "node_id": "MDQ6VXNlcjEwNDgyNzQy", "avatar_url": "https://avatars0.githubusercontent.com/u/10482742?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dchatterjee172", "html_url": "https://github.com/dchatterjee172", "followers_url": "https://api.github.com/users/dchatterjee172/followers", "following_url": "https://api.github.com/users/dchatterjee172/following{/other_user}", "gists_url": "https://api.github.com/users/dchatterjee172/gists{/gist_id}", "starred_url": "https://api.github.com/users/dchatterjee172/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dchatterjee172/subscriptions", "organizations_url": "https://api.github.com/users/dchatterjee172/orgs", "repos_url": "https://api.github.com/users/dchatterjee172/repos", "events_url": "https://api.github.com/users/dchatterjee172/events{/privacy}", "received_events_url": "https://api.github.com/users/dchatterjee172/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 299643928, "node_id": "MDU6TGFiZWwyOTk2NDM5Mjg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:contributions%20welcome", "name": "stat:contributions welcome", "color": "f4b400", "default": false, "description": ""}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 12, "created_at": "2018-01-01T15:24:40Z", "updated_at": "2018-04-07T06:09:15Z", "closed_at": null, "author_association": "NONE", "body": "This is a feature request. In tensorflow r1.4, Class RandomFourierFeatureMapper, map method,\r\nThe shape of the input must be, [batch_size, self._output_dim].   \r\n\r\nThere can be scenarios where in each batch there are multiple training point, essentially i'm proposing a scenario where the input shape  must be  [batch_size, x ,self._output_dim].   \r\n\r\nWhich is not possible in current API.        \r\nIn the matmul we can see that it is mentioned, \"The inputs must, following any transpositions, be tensors of rank >= 2 where the inner 2 dimensions specify valid matrix multiplication arguments, and any further outer dimensions match.\" which is in-fact very flexible.     \r\n\r\n"}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/15722", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/15722/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/15722/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/15722/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/15722", "id": 285167688, "node_id": "MDU6SXNzdWUyODUxNjc2ODg=", "number": 15722, "title": "Image Adjustments API doesn't clearly specify input range", "user": {"login": "ahundt", "id": 55744, "node_id": "MDQ6VXNlcjU1NzQ0", "avatar_url": "https://avatars1.githubusercontent.com/u/55744?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ahundt", "html_url": "https://github.com/ahundt", "followers_url": "https://api.github.com/users/ahundt/followers", "following_url": "https://api.github.com/users/ahundt/following{/other_user}", "gists_url": "https://api.github.com/users/ahundt/gists{/gist_id}", "starred_url": "https://api.github.com/users/ahundt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ahundt/subscriptions", "organizations_url": "https://api.github.com/users/ahundt/orgs", "repos_url": "https://api.github.com/users/ahundt/repos", "events_url": "https://api.github.com/users/ahundt/events{/privacy}", "received_events_url": "https://api.github.com/users/ahundt/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 299643928, "node_id": "MDU6TGFiZWwyOTk2NDM5Mjg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:contributions%20welcome", "name": "stat:contributions welcome", "color": "f4b400", "default": false, "description": ""}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 11, "created_at": "2017-12-29T23:10:37Z", "updated_at": "2019-01-23T17:43:32Z", "closed_at": null, "author_association": "NONE", "body": "### Describe the problem\r\n\r\nThere is a documentation issue with a possible corresponding tf.keras bug.\r\nThe [tf image adjustments guide](https://www.tensorflow.org/api_guides/python/image#Image_Adjustments) doesn't document the inputs. It appears they can be in a `[0, 1]` range or `[0, MAX]` based on comments in tf.slim where the relevant APIs are used. \r\n\r\nThis may have led to preprocessing bugs in other utilities such as keras and tf.keras, which believe tf expects the range `[-1, 1]` see https://github.com/keras-team/keras/issues/8916, the following includes additional details from that issue:\r\n\r\nIt appears Keras' imagenet image preprocessing may be inconsistent with how it is done in tf, in particular keras sets values to `[-1, 1]` while in tf the expected range is `[0, 1]`.\r\n\r\n- [slim/preprocessing/inception_preprocessing.py](https://github.com/tensorflow/models/blob/master/research/slim/preprocessing/inception_preprocessing.py#L284) \r\n    - notes `If dtype is tf.float32 then the range should be [0, 1]`\r\n- [keras preprocess_input()](https://github.com/keras-team/keras/blob/master/keras/applications/imagenet_utils.py#L72) \r\n    - notes `tf: will scale pixels between -1 and 1, sample-wise`.\r\n\r\nHere is the key doc from Keras' `preprocess_input()`:\r\n\r\n```python\r\n\r\ndef preprocess_input(x, data_format=None, mode='caffe'):\r\n    \"\"\"Preprocesses a tensor encoding a batch of images.\r\n    # Arguments\r\n        x: input Numpy or symoblic tensor, 3D or 4D.\r\n        data_format: data format of the image tensor.\r\n        mode: One of \"caffe\", \"tf\".\r\n            - caffe: will convert the images from RGB to BGR,\r\n                then will zero-center each color channel with\r\n                respect to the ImageNet dataset,\r\n                without scaling.\r\n            - tf: will scale pixels between -1 and 1,\r\n                sample-wise.\r\n    # Returns\r\n        Preprocessed tensor.\r\n    \"\"\"\r\n```\r\n\r\nHere are the key docs from the tf slim function `preprocess_for_train()` which specify a [0, 1] range:\r\n\r\n```python\r\ndef preprocess_for_train(image, height, width, bbox,\r\n                         fast_mode=True,\r\n                         scope=None,\r\n                         add_image_summaries=True):\r\n  \"\"\"Distort one image for training a network.\r\n  Distorting images provides a useful technique for augmenting the data\r\n  set during training in order to make the network invariant to aspects\r\n  of the image that do not effect the label.\r\n  Additionally it would create image_summaries to display the different\r\n  transformations applied to the image.\r\n  Args:\r\n    image: 3-D Tensor of image. If dtype is tf.float32 then the range should be\r\n      [0, 1], otherwise it would converted to tf.float32 assuming that the range\r\n      is [0, MAX], where MAX is largest positive representable number for\r\n      int(8/16/32) data type (see `tf.image.convert_image_dtype` for details).\r\n    height: integer\r\n    width: integer\r\n    bbox: 3-D float Tensor of bounding boxes arranged [1, num_boxes, coords]\r\n      where each coordinate is [0, 1) and the coordinates are arranged\r\n      as [ymin, xmin, ymax, xmax].\r\n    fast_mode: Optional boolean, if True avoids slower transformations (i.e.\r\n      bi-cubic resizing, random_hue or random_contrast).\r\n    scope: Optional scope for name_scope.\r\n    add_image_summaries: Enable image summaries.\r\n  Returns:\r\n    3-D float Tensor of distorted image used for training with range [-1, 1].\r\n  \"\"\"\r\n```\r\n\r\nside note: \r\n\r\n- https://github.com/tensorflow/models/issues/2217 seems relevant\r\n- https://github.com/keras-team/keras/issues/8916 is the corresponding keras issue\r\n\r\n### System information\r\n\r\nNot relevant, this is a documentation + input value range issue.\r\n\r\n### Source code / logs\r\n\r\nrelevant links + code included above"}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/15694", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/15694/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/15694/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/15694/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/15694", "id": 284919902, "node_id": "MDU6SXNzdWUyODQ5MTk5MDI=", "number": 15694, "title": "Latency of simple tf.data.Dataset transformations is higher than raw Python", "user": {"login": "Anjum48", "id": 13783303, "node_id": "MDQ6VXNlcjEzNzgzMzAz", "avatar_url": "https://avatars1.githubusercontent.com/u/13783303?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Anjum48", "html_url": "https://github.com/Anjum48", "followers_url": "https://api.github.com/users/Anjum48/followers", "following_url": "https://api.github.com/users/Anjum48/following{/other_user}", "gists_url": "https://api.github.com/users/Anjum48/gists{/gist_id}", "starred_url": "https://api.github.com/users/Anjum48/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Anjum48/subscriptions", "organizations_url": "https://api.github.com/users/Anjum48/orgs", "repos_url": "https://api.github.com/users/Anjum48/repos", "events_url": "https://api.github.com/users/Anjum48/events{/privacy}", "received_events_url": "https://api.github.com/users/Anjum48/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 299643928, "node_id": "MDU6TGFiZWwyOTk2NDM5Mjg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:contributions%20welcome", "name": "stat:contributions welcome", "color": "f4b400", "default": false, "description": ""}, {"id": 473172988, "node_id": "MDU6TGFiZWw0NzMxNzI5ODg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:bug", "name": "type:bug", "color": "159b2e", "default": false, "description": ""}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2017-12-28T13:58:01Z", "updated_at": "2018-07-02T23:23:42Z", "closed_at": null, "author_association": "CONTRIBUTOR", "body": "### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**: Yes\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**: Ubuntu 16.04\r\n- **TensorFlow installed from (source or binary)**: pip install tensorflow (CPU only)\r\n- **TensorFlow version (use command below)**: v1.4.0-rc1-11-g130a514 1.4.0\r\n- **Python version**: 3.5.2\r\n\r\n### Describe the problem\r\nI'm trying to improve performance by moving to `tf.data.Datasets` to manage epochs and minibatches (particularly I/O performance on a GPU when I come to scaling up). However I'm finding that this is much slower than just using nested `for` loops in Python.\r\n\r\n### Source code / logs\r\nHere's an example using a dataset with 10,000 numbers, 10 epochs and a minibatch size of 100:\r\n\r\n```python\r\nimport tensorflow as tf\r\nimport numpy as np\r\nfrom time import time\r\n\r\nMINI_BATCH = 100\r\nEPOCHS = 10\r\n\r\n# Dataset consisting of 10000 random numbers\r\nraw_data = np.random.randn(10000)\r\n\r\n# Raw Python implementation\r\nstart = time()\r\nsplit_data = np.split(raw_data, 10000 // MINI_BATCH)\r\n\r\nfor _ in range(EPOCHS):\r\n    for i, batch in enumerate(split_data):\r\n        # Do stuff with batch data\r\n        x = batch * 2\r\nprint(\"Raw Python done in\", time() - start)\r\n\r\n\r\n# TensorFlow implementation\r\nstart = time()\r\ndataset = tf.data.Dataset.from_tensor_slices(raw_data)\r\ndataset = dataset.repeat(EPOCHS)\r\ndataset = dataset.batch(MINI_BATCH)\r\niterator = dataset.make_one_shot_iterator()\r\nnext_chunk = iterator.get_next()\r\n\r\nwith tf.Session() as sess:\r\n    while True:\r\n        try:\r\n            batch = sess.run(next_chunk)\r\n            # Do stuff with batch data\r\n            x = batch * 2\r\n        except tf.errors.OutOfRangeError:\r\n            break\r\nprint(\"TensorFlow done in\", time() - start)\r\n\r\n```\r\nOutput:\r\n```\r\nRaw Python done in 0.0011773109436035156\r\nTensorFlow done in 0.14212393760681152\r\n```\r\n\r\nDoes anyone know why this might be the case? \r\n\r\nI'm guessing that most of the overhead is in the evaluation of `iterator.get_next()` on every loop. If this is not supposed to be evaluated it would be useful to have some examples of how it should be used without using `sess.run` each time.\r\n"}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/15690", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/15690/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/15690/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/15690/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/15690", "id": 284902778, "node_id": "MDU6SXNzdWUyODQ5MDI3Nzg=", "number": 15690, "title": "mkl_cpu_allocator.h is not compiled under windows anymoe", "user": {"login": "Ariel-Lieberman", "id": 1833400, "node_id": "MDQ6VXNlcjE4MzM0MDA=", "avatar_url": "https://avatars2.githubusercontent.com/u/1833400?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Ariel-Lieberman", "html_url": "https://github.com/Ariel-Lieberman", "followers_url": "https://api.github.com/users/Ariel-Lieberman/followers", "following_url": "https://api.github.com/users/Ariel-Lieberman/following{/other_user}", "gists_url": "https://api.github.com/users/Ariel-Lieberman/gists{/gist_id}", "starred_url": "https://api.github.com/users/Ariel-Lieberman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Ariel-Lieberman/subscriptions", "organizations_url": "https://api.github.com/users/Ariel-Lieberman/orgs", "repos_url": "https://api.github.com/users/Ariel-Lieberman/repos", "events_url": "https://api.github.com/users/Ariel-Lieberman/events{/privacy}", "received_events_url": "https://api.github.com/users/Ariel-Lieberman/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 404586558, "node_id": "MDU6TGFiZWw0MDQ1ODY1NTg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:community%20support", "name": "stat:community support", "color": "f4b400", "default": false, "description": ""}, {"id": 473173351, "node_id": "MDU6TGFiZWw0NzMxNzMzNTE=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:build/install", "name": "type:build/install", "color": "159b2e", "default": false, "description": ""}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2017-12-28T12:12:40Z", "updated_at": "2017-12-31T17:18:28Z", "closed_at": null, "author_association": "NONE", "body": "git branch v1.5/master\r\n\r\n[mkl_cpu_allocator.h](https://github.com/tensorflow/tensorflow/blob/master/tensorflow/core/common_runtime/mkl_cpu_allocator.h)\r\n\r\nis not compiled on windows anymore since in includes unistd.h, which dosn't exist in windows.\r\n"}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/15644", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/15644/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/15644/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/15644/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/15644", "id": 284579200, "node_id": "MDU6SXNzdWUyODQ1NzkyMDA=", "number": 15644, "title": "[Feature request] define axis in 'tf.unique()' and 'tf.unique_with_counts'", "user": {"login": "Hoeze", "id": 1200058, "node_id": "MDQ6VXNlcjEyMDAwNTg=", "avatar_url": "https://avatars0.githubusercontent.com/u/1200058?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Hoeze", "html_url": "https://github.com/Hoeze", "followers_url": "https://api.github.com/users/Hoeze/followers", "following_url": "https://api.github.com/users/Hoeze/following{/other_user}", "gists_url": "https://api.github.com/users/Hoeze/gists{/gist_id}", "starred_url": "https://api.github.com/users/Hoeze/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Hoeze/subscriptions", "organizations_url": "https://api.github.com/users/Hoeze/orgs", "repos_url": "https://api.github.com/users/Hoeze/repos", "events_url": "https://api.github.com/users/Hoeze/events{/privacy}", "received_events_url": "https://api.github.com/users/Hoeze/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1097547147, "node_id": "MDU6TGFiZWwxMDk3NTQ3MTQ3", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/comp:ops", "name": "comp:ops", "color": "0052cc", "default": false, "description": ""}, {"id": 299643928, "node_id": "MDU6TGFiZWwyOTk2NDM5Mjg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:contributions%20welcome", "name": "stat:contributions welcome", "color": "f4b400", "default": false, "description": ""}, {"id": 473173272, "node_id": "MDU6TGFiZWw0NzMxNzMyNzI=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:feature", "name": "type:feature", "color": "159b2e", "default": false, "description": ""}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2017-12-26T16:29:47Z", "updated_at": "2020-02-03T20:08:09Z", "closed_at": null, "author_association": "NONE", "body": "Hi, just a small feature request:\r\nIt would be cool if one could directly\r\n* use 'tf.unique()' and 'tf.unique_with_counts' in n-dimensional arrays\r\n* define an axis along which 'tf.unique()' and 'tf.unique_with_counts' are applied\r\n"}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/15624", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/15624/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/15624/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/15624/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/15624", "id": 284423050, "node_id": "MDU6SXNzdWUyODQ0MjMwNTA=", "number": 15624, "title": "Problem with tf.data.Dataset managing shapes of sparse tensors", "user": {"login": "llan-ml", "id": 22030149, "node_id": "MDQ6VXNlcjIyMDMwMTQ5", "avatar_url": "https://avatars0.githubusercontent.com/u/22030149?v=4", "gravatar_id": "", "url": "https://api.github.com/users/llan-ml", "html_url": "https://github.com/llan-ml", "followers_url": "https://api.github.com/users/llan-ml/followers", "following_url": "https://api.github.com/users/llan-ml/following{/other_user}", "gists_url": "https://api.github.com/users/llan-ml/gists{/gist_id}", "starred_url": "https://api.github.com/users/llan-ml/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/llan-ml/subscriptions", "organizations_url": "https://api.github.com/users/llan-ml/orgs", "repos_url": "https://api.github.com/users/llan-ml/repos", "events_url": "https://api.github.com/users/llan-ml/events{/privacy}", "received_events_url": "https://api.github.com/users/llan-ml/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 299643928, "node_id": "MDU6TGFiZWwyOTk2NDM5Mjg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:contributions%20welcome", "name": "stat:contributions welcome", "color": "f4b400", "default": false, "description": ""}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 11, "created_at": "2017-12-25T08:36:27Z", "updated_at": "2018-06-26T14:56:13Z", "closed_at": null, "author_association": "NONE", "body": "Please go to Stack Overflow for help and support:\r\n\r\nhttps://stackoverflow.com/questions/tagged/tensorflow\r\n\r\nIf you open a GitHub issue, here is our policy:\r\n\r\n1. It must be a bug or a feature request.\r\n2. The form below must be filled out.\r\n3. It shouldn't be a TensorBoard issue. Those go [here](https://github.com/tensorflow/tensorboard/issues).\r\n\r\n**Here's why we have that policy**: TensorFlow developers respond to issues. We want to focus on work that benefits the whole community, e.g., fixing bugs and adding features. Support only helps individuals. GitHub also notifies thousands of people when issues are filed. We want them to see you communicating an interesting problem, rather than being redirected to Stack Overflow.\r\n\r\n------------------------\r\n\r\n### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**:\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**: 16.04.3 LTS (Xenial Xerus)\r\n- **TensorFlow installed from (source or binary)**: binary\r\n- **TensorFlow version (use command below)**: 1.5.0-dev20171224\r\n- **Python version**: 3.6\r\n- **Bazel version (if compiling from source)**:\r\n- **GCC/Compiler version (if compiling from source)**:\r\n- **CUDA/cuDNN version**: N/A\r\n- **GPU model and memory**: N/A\r\n\r\n### Describe the problem\r\nThe tf-1.5-dev supports `tf.SparseTensor` when using `tf.data.Dataset.from_tensor_slices`, but it cannot infer the shape of new tensor after some operations such as `tf.data.Dataset.map`.\r\n\r\nThe shape of tensor becomes `Unknown`, which is troublesome for downstream operations. For example, we have to call `set_shape()` if we want to feed the new tensor into a `tf.layers.dense`.\r\n\r\n### Source code / logs\r\n<pre>\r\nimport tensorflow as tf\r\nx = tf.SparseTensor([[0,0],[1,1],[2,2]], [1,1,1], dense_shape=[3,3])\r\nds = tf.data.Dataset.from_tensor_slices(x)\r\nds.output_shapes   # TensorShape([Dimension(3)])\r\nds = ds.map(lambda x: tf.sparse_tensor_to_dense(x))\r\nds = ds.batch(1)\r\nds.output_shapes   # TensorShape([Dimension(None), Dimension(None)])\r\n\r\niterator = ds.make_one_shot_iterator()\r\nnext_elem = iterator.get_next()   # TensorShape([Dimension(None), Dimension(None)])\r\n\r\ny = tf.layers.dense(next_elem, 100)\r\nValueError: The last dimension of the inputs to `Dense` should be defined. Found `None`.\r\n\r\n</pre>\r\n@mrry "}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/15613", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/15613/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/15613/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/15613/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/15613", "id": 284358800, "node_id": "MDU6SXNzdWUyODQzNTg4MDA=", "number": 15613, "title": "Tensorflow doesn't show the Cuda import messages ", "user": {"login": "akashmishra23", "id": 15996115, "node_id": "MDQ6VXNlcjE1OTk2MTE1", "avatar_url": "https://avatars2.githubusercontent.com/u/15996115?v=4", "gravatar_id": "", "url": "https://api.github.com/users/akashmishra23", "html_url": "https://github.com/akashmishra23", "followers_url": "https://api.github.com/users/akashmishra23/followers", "following_url": "https://api.github.com/users/akashmishra23/following{/other_user}", "gists_url": "https://api.github.com/users/akashmishra23/gists{/gist_id}", "starred_url": "https://api.github.com/users/akashmishra23/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/akashmishra23/subscriptions", "organizations_url": "https://api.github.com/users/akashmishra23/orgs", "repos_url": "https://api.github.com/users/akashmishra23/repos", "events_url": "https://api.github.com/users/akashmishra23/events{/privacy}", "received_events_url": "https://api.github.com/users/akashmishra23/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 299643928, "node_id": "MDU6TGFiZWwyOTk2NDM5Mjg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:contributions%20welcome", "name": "stat:contributions welcome", "color": "f4b400", "default": false, "description": ""}, {"id": 473173272, "node_id": "MDU6TGFiZWw0NzMxNzMyNzI=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:feature", "name": "type:feature", "color": "159b2e", "default": false, "description": ""}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2017-12-24T11:59:45Z", "updated_at": "2018-04-03T17:22:45Z", "closed_at": null, "author_association": "NONE", "body": "Please go to Stack Overflow for help and support:\r\n\r\nhttps://stackoverflow.com/questions/tagged/tensorflow\r\n\r\nIf you open a GitHub issue, here is our policy:\r\n\r\n1. It must be a bug or a feature request.\r\n2. The form below must be filled out.\r\n3. It shouldn't be a TensorBoard issue. Those go [here](https://github.com/tensorflow/tensorboard/issues).\r\n\r\n**Here's why we have that policy**: TensorFlow developers respond to issues. We want to focus on work that benefits the whole community, e.g., fixing bugs and adding features. Support only helps individuals. GitHub also notifies thousands of people when issues are filed. We want them to see you communicating an interesting problem, rather than being redirected to Stack Overflow.\r\n\r\n------------------------\r\n\r\n### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**:\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**:\r\n- **TensorFlow installed from (source or binary)**:\r\n- **TensorFlow version (use command below)**:\r\n- **Python version**: \r\n- **Bazel version (if compiling from source)**:\r\n- **GCC/Compiler version (if compiling from source)**:\r\n- **CUDA/cuDNN version**:\r\n- **GPU model and memory**:\r\n- **Exact command to reproduce**:\r\n\r\nYou can collect some of this information using our environment capture script:\r\n\r\nhttps://github.com/tensorflow/tensorflow/tree/master/tools/tf_env_collect.sh\r\n\r\nYou can obtain the TensorFlow version with\r\n\r\npython -c \"import tensorflow as tf; print(tf.GIT_VERSION, tf.VERSION)\"\r\n\r\n### Describe the problem\r\nDescribe the problem clearly here. Be sure to convey here why it's a bug in TensorFlow or a feature request.\r\n\r\n### Source code / logs\r\nInclude any logs or source code that would be helpful to diagnose the problem. If including tracebacks, please include the full traceback. Large logs and files should be attached. Try to provide a reproducible test case that is the bare minimum necessary to generate the problem.\r\n"}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/15557", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/15557/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/15557/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/15557/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/15557", "id": 283901679, "node_id": "MDU6SXNzdWUyODM5MDE2Nzk=", "number": 15557, "title": "tensorflow::gtl::string_as_array crashes on Windows", "user": {"login": "snnn", "id": 856316, "node_id": "MDQ6VXNlcjg1NjMxNg==", "avatar_url": "https://avatars3.githubusercontent.com/u/856316?v=4", "gravatar_id": "", "url": "https://api.github.com/users/snnn", "html_url": "https://github.com/snnn", "followers_url": "https://api.github.com/users/snnn/followers", "following_url": "https://api.github.com/users/snnn/following{/other_user}", "gists_url": "https://api.github.com/users/snnn/gists{/gist_id}", "starred_url": "https://api.github.com/users/snnn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/snnn/subscriptions", "organizations_url": "https://api.github.com/users/snnn/orgs", "repos_url": "https://api.github.com/users/snnn/repos", "events_url": "https://api.github.com/users/snnn/events{/privacy}", "received_events_url": "https://api.github.com/users/snnn/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 299643928, "node_id": "MDU6TGFiZWwyOTk2NDM5Mjg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:contributions%20welcome", "name": "stat:contributions welcome", "color": "f4b400", "default": false, "description": ""}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2017-12-21T14:39:03Z", "updated_at": "2018-07-27T05:33:52Z", "closed_at": null, "author_association": "CONTRIBUTOR", "body": "------------------------\r\n\r\n### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**:\r\nNo\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**:\r\nWindows 10\r\n- **TensorFlow installed from (source or binary)**:\r\nbinary\r\n- **TensorFlow version (use command below)**:\r\n1.4.1\r\n- **Python version**: \r\n3.5.4\r\n- **Bazel version (if compiling from source)**:\r\nNone\r\n- **GCC/Compiler version (if compiling from source)**:\r\nNone\r\n- **CUDA/cuDNN version**:\r\nNone\r\n- **GPU model and memory**:\r\nNone\r\n- **Exact command to reproduce**:\r\nNone\r\n\r\n### Describe the problem\r\nCompile and run the following code in VS 2017 in **Debug** Mode.\r\n```c++\r\n#include <iostream>\r\n#include <stdint.h>\r\nusing namespace std;\r\n\r\ninline char* string_as_array(string* str) { return &*str->begin(); }\r\nint main()\r\n{\r\n\tstring str;\r\n\tchar* p = string_as_array(&str);\r\n\tstd::cout << (uint64_t)p << std::endl;\r\n\treturn 0;\r\n}\r\n```\r\n\r\nIt will crash.\r\n\r\n```\r\nDebug Assertion Failed!\r\n\r\nProgram: C:\\WINDOWS\\SYSTEM32\\MSVCP140D.dll\r\nFile: c:\\program files (x86)\\microsoft visual studio\\2017\\enterprise\\vc\\tools\\msvc\\14.12.25827\\include\\xstring\r\nLine: 1219\r\n\r\nExpression: cannot dereference string iterator because it is out of range (e.g. an end iterator)\r\n\r\nFor information on how your program can cause an assertion\r\nfailure, see the Visual C++ documentation on asserts.\r\n```\r\n\r\nThis function is extracted from  tensorflow\\core\\lib\\gtl\\stl_util.h\r\n\r\n### Source code / logs\r\n\r\n"}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/15542", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/15542/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/15542/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/15542/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/15542", "id": 283774531, "node_id": "MDU6SXNzdWUyODM3NzQ1MzE=", "number": 15542, "title": "Cannot run run_cc_test_windows.bat: command line too long", "user": {"login": "snnn", "id": 856316, "node_id": "MDQ6VXNlcjg1NjMxNg==", "avatar_url": "https://avatars3.githubusercontent.com/u/856316?v=4", "gravatar_id": "", "url": "https://api.github.com/users/snnn", "html_url": "https://github.com/snnn", "followers_url": "https://api.github.com/users/snnn/followers", "following_url": "https://api.github.com/users/snnn/following{/other_user}", "gists_url": "https://api.github.com/users/snnn/gists{/gist_id}", "starred_url": "https://api.github.com/users/snnn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/snnn/subscriptions", "organizations_url": "https://api.github.com/users/snnn/orgs", "repos_url": "https://api.github.com/users/snnn/repos", "events_url": "https://api.github.com/users/snnn/events{/privacy}", "received_events_url": "https://api.github.com/users/snnn/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 299643928, "node_id": "MDU6TGFiZWwyOTk2NDM5Mjg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:contributions%20welcome", "name": "stat:contributions welcome", "color": "f4b400", "default": false, "description": ""}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 15, "created_at": "2017-12-21T05:05:58Z", "updated_at": "2018-05-29T00:20:55Z", "closed_at": null, "author_association": "CONTRIBUTOR", "body": "------------------------\r\n\r\n### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**:\r\nNo\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**:\r\nWindows Server 2012\r\n- **TensorFlow installed from (source or binary)**:\r\nsource\r\n- **TensorFlow version (use command below)**:\r\n1.4.1\r\n376e2cfdab31f4da251ea2e50992a9bf97fd171b\r\n- **Python version**: \r\n3.5.4\r\n- **Bazel version (if compiling from source)**:\r\n0.9.0, \r\n- **GCC/Compiler version (if compiling from source)**:\r\nVS 2015\r\n- **CUDA/cuDNN version**:\r\nNone\r\n- **GPU model and memory**:\r\nNone\r\n- **Exact command to reproduce**:\r\ntensorflow/tools/ci_build/windows/cpu/bazel/run_cc_test_windows.bat\r\n\r\n### Describe the problem\r\nIndeed, I have some local modification.  I'm trying to fix some failed cc_tests on Windows, and turn on them in bazel_test_lib.sh \r\n\r\nThe problem is: As the number of tests is growing,  we can't pass all their names through command line. We need a new way to filter the tests. \r\nWhat about: \r\nRemove the settings in tensorflow/tools/ci_build/windows/cpu/bazel/run_cc_test_windows.bat,  replace them with bazel tags like \"no_windows\", \"gpu_only\", ... ?\r\n\r\n### Source code / logs\r\n[build_log.txt](https://github.com/tensorflow/tensorflow/files/1577981/build_log.txt)\r\n"}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/15530", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/15530/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/15530/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/15530/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/15530", "id": 283683961, "node_id": "MDU6SXNzdWUyODM2ODM5NjE=", "number": 15530, "title": "Bug?: reading from Google Cloud Storage appears to be accessing cached version", "user": {"login": "cbockman", "id": 4667922, "node_id": "MDQ6VXNlcjQ2Njc5MjI=", "avatar_url": "https://avatars1.githubusercontent.com/u/4667922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cbockman", "html_url": "https://github.com/cbockman", "followers_url": "https://api.github.com/users/cbockman/followers", "following_url": "https://api.github.com/users/cbockman/following{/other_user}", "gists_url": "https://api.github.com/users/cbockman/gists{/gist_id}", "starred_url": "https://api.github.com/users/cbockman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cbockman/subscriptions", "organizations_url": "https://api.github.com/users/cbockman/orgs", "repos_url": "https://api.github.com/users/cbockman/repos", "events_url": "https://api.github.com/users/cbockman/events{/privacy}", "received_events_url": "https://api.github.com/users/cbockman/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 404586594, "node_id": "MDU6TGFiZWw0MDQ1ODY1OTQ=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:awaiting%20tensorflower", "name": "stat:awaiting tensorflower", "color": "f4b400", "default": false, "description": ""}], "state": "open", "locked": false, "assignee": {"login": "shivaniag", "id": 16565716, "node_id": "MDQ6VXNlcjE2NTY1NzE2", "avatar_url": "https://avatars1.githubusercontent.com/u/16565716?v=4", "gravatar_id": "", "url": "https://api.github.com/users/shivaniag", "html_url": "https://github.com/shivaniag", "followers_url": "https://api.github.com/users/shivaniag/followers", "following_url": "https://api.github.com/users/shivaniag/following{/other_user}", "gists_url": "https://api.github.com/users/shivaniag/gists{/gist_id}", "starred_url": "https://api.github.com/users/shivaniag/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/shivaniag/subscriptions", "organizations_url": "https://api.github.com/users/shivaniag/orgs", "repos_url": "https://api.github.com/users/shivaniag/repos", "events_url": "https://api.github.com/users/shivaniag/events{/privacy}", "received_events_url": "https://api.github.com/users/shivaniag/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "shivaniag", "id": 16565716, "node_id": "MDQ6VXNlcjE2NTY1NzE2", "avatar_url": "https://avatars1.githubusercontent.com/u/16565716?v=4", "gravatar_id": "", "url": "https://api.github.com/users/shivaniag", "html_url": "https://github.com/shivaniag", "followers_url": "https://api.github.com/users/shivaniag/followers", "following_url": "https://api.github.com/users/shivaniag/following{/other_user}", "gists_url": "https://api.github.com/users/shivaniag/gists{/gist_id}", "starred_url": "https://api.github.com/users/shivaniag/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/shivaniag/subscriptions", "organizations_url": "https://api.github.com/users/shivaniag/orgs", "repos_url": "https://api.github.com/users/shivaniag/repos", "events_url": "https://api.github.com/users/shivaniag/events{/privacy}", "received_events_url": "https://api.github.com/users/shivaniag/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 11, "created_at": "2017-12-20T20:21:18Z", "updated_at": "2018-12-20T18:45:21Z", "closed_at": null, "author_association": "CONTRIBUTOR", "body": "------------------------\r\n\r\n### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**: yes.\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**: Ubuntu 16.04\r\n- **TensorFlow installed from (source or binary)**: binary\r\n- **TensorFlow version (use command below)**: v1.4.0-rc1-11-g130a514 1.4.0\r\n- **Python version**: 3.6\r\n- **Bazel version (if compiling from source)**: N/A\r\n- **GCC/Compiler version (if compiling from source)**: N/A\r\n- **CUDA/cuDNN version**: observed on CPU & GPU.\r\n- **GPU model and memory**: observed on CPU & GPU.\r\n- **Exact command to reproduce**: See below.\r\n\r\n### Describe the problem\r\n\r\nHow this arose:\r\n\r\nWe are trying to set up a basic distributed TF version, where we have separate pods (on Kubernetes) doing validation and training (a simple version, with 1 of each).  GCS is used as the backend to store model output (checkpoints, etc.).\r\n\r\nThe validation pod periodically (via Experiment\u2019s continuous_eval https://github.com/tensorflow/tensorflow/blob/f5f2f789ea395e585ddcbc43e088fa63d6b41d0e/tensorflow/contrib/learn/python/learn/experiment.py#L564) periodically polls for new checkpoints to evaluate (https://github.com/tensorflow/tensorflow/blob/f5f2f789ea395e585ddcbc43e088fa63d6b41d0e/tensorflow/contrib/learn/python/learn/experiment.py#L517).  \r\n\r\nIf it doesn\u2019t find a new checkpoint, it (per the underlying code) echoes out \u201cNo new checkpoint ready for evaluation\u201d and continues to wait for a new one.\r\n\r\nIn practice, we found that, even as the training pod produces new checkpoints, the validation pod *never* picks up a new checkpoint, beyond the first one.  I.e., it collects an initial checkpoint, does evaluation, and then, in all future cycles, echoes out \"No new checkpoint ready for evaluation\".\r\n\r\nIn debugging, we found that the checkpoint file the saver tries to load up is always found to be some earlier iteration of the file (https://github.com/tensorflow/tensorflow/blob/f5f2f789ea395e585ddcbc43e088fa63d6b41d0e/tensorflow/python/training/saver.py#L1005) -- i.e., it seems like the GCS file loader reads the file once, and, from then on out, is continuous accessing a cached version of the data.  \r\n\r\nDigging into the code further, this appears to be an issue with how the file reader (file_io.read_file_to_string(...) and downstream methods) loads GCS files.  We were able to replicate this behavior separately, below.\r\n\r\n**Help appreciated!**\r\n\r\n* Is this intended behavior?  Is there, e.g., some sort of GCS setting we have incorrectly set?  \r\n* Assuming we're seeing something real, is there any suggested remediation here, with regards to our validation behavior?  Our next step is going to be to try monkey-patching some of the tf functions to just pull the GCS file local to disk and read it from there...although this is of course not preferred.\r\n\r\nAs a side note, Experiment does have a number of references to special handling around using GCS as the backend, although I don't have enough context to say if this is relevant to what we are seeing or not (https://github.com/tensorflow/tensorflow/blob/f5f2f789ea395e585ddcbc43e088fa63d6b41d0e/tensorflow/contrib/learn/python/learn/experiment.py#L94, https://github.com/tensorflow/tensorflow/blob/f5f2f789ea395e585ddcbc43e088fa63d6b41d0e/tensorflow/contrib/learn/python/learn/experiment.py#L269).\r\n\r\n### Source code / logs\r\n\r\nBelow is a pair of scripts that will replicate this issue.  Run the \u201cBasic Reader\u201d (using the same loading interface from get_checkpoint_state) and the \u201cBasic Writer\u201d simultaneously, and the reader will initially catch whatever is in the file, and then never update, even as the writer continues to write.\r\n\r\nOther things we tried:\r\n\r\n* Changing the read/write path to local disk, instead of GCS.  This, unsurprisingly, worked.\r\n* A version of a reader with a context manager (below), to try to reset the reader each loop, and an explicit file.close() (not shown).  Both had the same behavior, i.e., new reads didn't provide the updated file.\r\n* Writing from the same file (process) that we read from: probably unsurprisingly, this *does* work; i.e., the writing activity either updates the local cache or otherwise convinces the reader to grab a fresh copy from GCS (we didn\u2019t actually test which this might be).  \r\n\r\nBasic Reader:\r\n\r\n```python\r\n#!/usr/bin/env python\r\n\r\nfrom tensorflow.python.lib.io import file_io\r\nimport time\r\nimport os\r\n\r\nfile='gs://[MYPATH]'\r\n\r\nos.environ[\"GOOGLE_APPLICATION_CREDENTIALS\"] = '/usr/src/app/gcloud/keys/google-auth.json'\r\n\r\ndef read():\r\n    counter=0\r\n    while counter<15:\r\n        print(\"reading...\")\r\n        print(\"Contents:\")\r\n        print(file_io.read_file_to_string(file))\r\n        print(\"\")\r\n        print(\"Sleeping for a second...\")\r\n        time.sleep(3)\r\n        print(\"\")\r\n        print(\"\")\r\n        print(\"\")\r\n        counter +=1\r\n\r\nread()\r\n```\r\n\r\nBasic writer\r\n\r\n```python\r\n#!/usr/bin/env python\r\n\r\nfrom tensorflow.python.lib.io import file_io\r\nimport time\r\nimport os\r\n\r\nfile='gs://[MYPATH]'\r\n\r\nos.environ[\"GOOGLE_APPLICATION_CREDENTIALS\"] = '/usr/src/app/gcloud/keys/google-auth.json'\r\n\r\ndef write():\r\n    counter=0\r\n    while counter<15:\r\n        with file_io.FileIO(file, mode='w') as f:\r\n            f.write(str(counter))\r\n        print(\"Wrote {}\".format(counter))\r\n        print(\"\")\r\n        print(\"Sleeping for a second...\")\r\n        time.sleep(3)\r\n        print(\"\")\r\n        print(\"\")\r\n        print(\"\")\r\n        counter +=1\r\n\r\nwrite()\r\n```\r\n\r\nReader with context manager\r\n\r\n```python\r\n#!/usr/bin/env python\r\n\r\nfrom tensorflow.python.lib.io import file_io\r\n\r\nimport time\r\nimport os\r\n\r\nfile='gs://[MYPATH]'\r\n\r\nos.environ[\"GOOGLE_APPLICATION_CREDENTIALS\"] = '/usr/src/app/gcloud/keys/google-auth.json'\r\n\r\ndef read():\r\n    counter=0\r\n    while counter<15:\r\n        print(\"reading...\")\r\n        print(\"Contents:\")\r\n        with file_io.FileIO(file, mode='r') as f:\r\n           print(f.read())\r\n        print(\"\")\r\n        print(\"Sleeping for a second...\")\r\n        time.sleep(3)\r\n        print(\"\")\r\n        print(\"\")\r\n        print(\"\")\r\n        counter +=1\r\n\r\nread()\r\n```"}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/15465", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/15465/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/15465/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/15465/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/15465", "id": 283082243, "node_id": "MDU6SXNzdWUyODMwODIyNDM=", "number": 15465, "title": "No gradient defined for operation 'MatrixExponential' (op type: MatrixExponential)", "user": {"login": "LionSR", "id": 14889516, "node_id": "MDQ6VXNlcjE0ODg5NTE2", "avatar_url": "https://avatars0.githubusercontent.com/u/14889516?v=4", "gravatar_id": "", "url": "https://api.github.com/users/LionSR", "html_url": "https://github.com/LionSR", "followers_url": "https://api.github.com/users/LionSR/followers", "following_url": "https://api.github.com/users/LionSR/following{/other_user}", "gists_url": "https://api.github.com/users/LionSR/gists{/gist_id}", "starred_url": "https://api.github.com/users/LionSR/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/LionSR/subscriptions", "organizations_url": "https://api.github.com/users/LionSR/orgs", "repos_url": "https://api.github.com/users/LionSR/repos", "events_url": "https://api.github.com/users/LionSR/events{/privacy}", "received_events_url": "https://api.github.com/users/LionSR/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 299643928, "node_id": "MDU6TGFiZWwyOTk2NDM5Mjg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:contributions%20welcome", "name": "stat:contributions welcome", "color": "f4b400", "default": false, "description": ""}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 26, "created_at": "2017-12-19T02:09:52Z", "updated_at": "2019-03-14T15:37:39Z", "closed_at": null, "author_association": "NONE", "body": "I want to optimize a function which contains tf.linalg.expm, however,\r\n\r\nNo gradient defined for operation 'MatrixExponential' (op type: MatrixExponential)\r\n\r\n"}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/15447", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/15447/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/15447/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/15447/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/15447", "id": 282903443, "node_id": "MDU6SXNzdWUyODI5MDM0NDM=", "number": 15447, "title": "[cmake] CPU only build error in tf_stream_executor.cmake", "user": {"login": "SergeyBykov1", "id": 8685394, "node_id": "MDQ6VXNlcjg2ODUzOTQ=", "avatar_url": "https://avatars0.githubusercontent.com/u/8685394?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SergeyBykov1", "html_url": "https://github.com/SergeyBykov1", "followers_url": "https://api.github.com/users/SergeyBykov1/followers", "following_url": "https://api.github.com/users/SergeyBykov1/following{/other_user}", "gists_url": "https://api.github.com/users/SergeyBykov1/gists{/gist_id}", "starred_url": "https://api.github.com/users/SergeyBykov1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SergeyBykov1/subscriptions", "organizations_url": "https://api.github.com/users/SergeyBykov1/orgs", "repos_url": "https://api.github.com/users/SergeyBykov1/repos", "events_url": "https://api.github.com/users/SergeyBykov1/events{/privacy}", "received_events_url": "https://api.github.com/users/SergeyBykov1/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 404586558, "node_id": "MDU6TGFiZWw0MDQ1ODY1NTg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:community%20support", "name": "stat:community support", "color": "f4b400", "default": false, "description": ""}, {"id": 299643928, "node_id": "MDU6TGFiZWwyOTk2NDM5Mjg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:contributions%20welcome", "name": "stat:contributions welcome", "color": "f4b400", "default": false, "description": ""}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-12-18T14:48:20Z", "updated_at": "2017-12-23T00:28:50Z", "closed_at": null, "author_association": "NONE", "body": "### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**: No\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**: Linux Ubuntu 16.04\r\n- **TensorFlow installed from (source or binary)**: source\r\n- **TensorFlow version (use command below)**: master\r\n- **Python version**: N/A, building with cmake\r\n- **Bazel version (if compiling from source)**: N/A, building with cmake\r\n- **GCC/Compiler version (if compiling from source)**: 5.4.0\r\n- **CUDA/cuDNN version**: N/A\r\n- **GPU model and memory**: N/A\r\n- **Exact command to reproduce**:\r\ncd tensorflow/contrib/cmake\r\nmkdir build && cd build\r\ncmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=\"../bin\" ..\r\n\r\n### Describe the problem\r\ncmake build fails when \r\noption(tensorflow_ENABLE_GPU \"Enable GPU support\" OFF)\r\nwith following error:\r\n.../tensorflow-master/tensorflow/stream_executor/dso_loader.h:32:30: fatal error: cuda/cuda_config.h: No such file or directory\r\ncompilation terminated.\r\n\r\n### Source code / logs\r\nPretty sure that the issue lies in this commit:\r\nhttps://github.com/tensorflow/tensorflow/commit/f1582cf82f06810900ee99870f5d5d3a7478d044#diff-1d799fa350437420218e5e5aa680c481\r\n\r\nin CMakeLists.txt the line\r\n\"  include_directories(${tensorflow_source_dir}/third_party/gpus)\"\r\nis still under tensorflow_ENABLE_GPU\r\n\r\nWhich is why dso_loader cannot find cuda_config.h\r\n\r\nOn the other hand, I suppose it should not use this include at all in the CPU mode."}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/15416", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/15416/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/15416/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/15416/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/15416", "id": 282639556, "node_id": "MDU6SXNzdWUyODI2Mzk1NTY=", "number": 15416, "title": "tensorflow-aarch64 with keras", "user": {"login": "SHFRGRP", "id": 31110466, "node_id": "MDQ6VXNlcjMxMTEwNDY2", "avatar_url": "https://avatars3.githubusercontent.com/u/31110466?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SHFRGRP", "html_url": "https://github.com/SHFRGRP", "followers_url": "https://api.github.com/users/SHFRGRP/followers", "following_url": "https://api.github.com/users/SHFRGRP/following{/other_user}", "gists_url": "https://api.github.com/users/SHFRGRP/gists{/gist_id}", "starred_url": "https://api.github.com/users/SHFRGRP/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SHFRGRP/subscriptions", "organizations_url": "https://api.github.com/users/SHFRGRP/orgs", "repos_url": "https://api.github.com/users/SHFRGRP/repos", "events_url": "https://api.github.com/users/SHFRGRP/events{/privacy}", "received_events_url": "https://api.github.com/users/SHFRGRP/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 404586558, "node_id": "MDU6TGFiZWw0MDQ1ODY1NTg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:community%20support", "name": "stat:community support", "color": "f4b400", "default": false, "description": ""}, {"id": 473173351, "node_id": "MDU6TGFiZWw0NzMxNzMzNTE=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:build/install", "name": "type:build/install", "color": "159b2e", "default": false, "description": ""}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2017-12-16T18:01:17Z", "updated_at": "2019-03-09T16:53:13Z", "closed_at": null, "author_association": "NONE", "body": "\r\n![screenshot_2017-12-17-15-05-30-239_ru iiec pydroid3](https://user-images.githubusercontent.com/31110466/34079284-0cd76cc4-e33c-11e7-8442-438e88e1a38d.png)\r\n![screenshot_2017-12-17-15-04-20-194_ru iiec pydroid3](https://user-images.githubusercontent.com/31110466/34079285-0d1d5edc-e33c-11e7-9109-fbfdce775814.png)\r\n![screenshot_2017-12-17-15-04-36-922_ru iiec pydroid3](https://user-images.githubusercontent.com/31110466/34079287-0d65de50-e33c-11e7-9b62-9d5b5027b131.png)\r\n\r\n\r\nHi! I want to use tensorflow library as backend of keras on my android device. I found and installed pydroid3, keras and tensorflow-aarch64. How can i use it? When i run code it throws exception \"no module named tensorflow\". Any ideas?\r\n\r\nOk, i will.\r\nI used Keras. When i import, it throws exception.\r\nMy OS is Android 7.1.2 MIUI 9, CPU arch - aarch64 (arm), GPU is Snapdragon 505. Using PyDroid3 app\r\nI installed tensorflow-aarch64 1.2 from pip.\r\nNo bazel.\r\nNo cuDNN."}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/15396", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/15396/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/15396/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/15396/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/15396", "id": 282430927, "node_id": "MDU6SXNzdWUyODI0MzA5Mjc=", "number": 15396, "title": "Bug: reshape shape inference for parital defined shape", "user": {"login": "boeddeker", "id": 13744128, "node_id": "MDQ6VXNlcjEzNzQ0MTI4", "avatar_url": "https://avatars3.githubusercontent.com/u/13744128?v=4", "gravatar_id": "", "url": "https://api.github.com/users/boeddeker", "html_url": "https://github.com/boeddeker", "followers_url": "https://api.github.com/users/boeddeker/followers", "following_url": "https://api.github.com/users/boeddeker/following{/other_user}", "gists_url": "https://api.github.com/users/boeddeker/gists{/gist_id}", "starred_url": "https://api.github.com/users/boeddeker/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/boeddeker/subscriptions", "organizations_url": "https://api.github.com/users/boeddeker/orgs", "repos_url": "https://api.github.com/users/boeddeker/repos", "events_url": "https://api.github.com/users/boeddeker/events{/privacy}", "received_events_url": "https://api.github.com/users/boeddeker/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 299643928, "node_id": "MDU6TGFiZWwyOTk2NDM5Mjg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:contributions%20welcome", "name": "stat:contributions welcome", "color": "f4b400", "default": false, "description": ""}, {"id": 473173272, "node_id": "MDU6TGFiZWw0NzMxNzMyNzI=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:feature", "name": "type:feature", "color": "159b2e", "default": false, "description": ""}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 13, "created_at": "2017-12-15T13:41:46Z", "updated_at": "2018-09-20T16:29:30Z", "closed_at": null, "author_association": "CONTRIBUTOR", "body": "-----------------------\r\n\r\n### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**: yes\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**:Linux Ubuntu 16.04\r\n- **TensorFlow installed from (source or binary)**: binary\r\n- **TensorFlow version (use command below)**: v1.4.0-rc1-11-g130a514 1.4.0\r\n- **Python version**: Python 3.6.3 :: Anaconda custom (64-bit)\r\n- **Bazel version (if compiling from source)**:\r\n- **GCC/Compiler version (if compiling from source)**:\r\n- **CUDA/cuDNN version**:\r\n- **GPU model and memory**:\r\n- **Exact command to reproduce**: see example\r\n\r\n### Describe the problem\r\nWhen the input shape for 'tf.reshape' is partial defined and the new shape contains a `-1` for known dimensions, 'tf.reshape' does not predict the shape. See the example code.\r\n\r\n### Source code / logs\r\n\r\nSecond and third example have working shape inference:\r\n```python\r\ndef foo(*shape):\r\n    x = tf.placeholder(tf.float32, shape)\r\n    return tf.reshape(x, tf.concat([tf.shape(x)[:-2], [-1]], 0))\r\n\r\nprint(foo(2, 3, 4, 5))  # Tensor(\"Reshape_8:0\", shape=(2, 3, 20), dtype=float32)  # correct\r\nprint(foo(None, 3, 4, 5))  # Tensor(\"Reshape_9:0\", shape=(?, 3, ?), dtype=float32)  # shape inference possible\r\nprint(foo(None, None, 4, 5))  # Tensor(\"Reshape_10:0\", shape=(?, ?, ?), dtype=float32)  # shape inference possible\r\nprint(foo(2, 3, 4, None))  # Tensor(\"Reshape_11:0\", shape=(2, 3, ?), dtype=float32)  # correct\r\n```\r\n\r\n#### Proof that shape inference is possible:\r\n```python\r\nimport functools, operator \r\ndef bar(*shape):\r\n    x = tf.placeholder(tf.float32, shape)\r\n    \r\n    tmp = x.shape[-2:]\r\n    if not tmp == tf.TensorShape(None):\r\n        tmp = functools.reduce(operator.mul, tmp, tf.Dimension(1))\r\n    if str(tmp) == '?' or tmp == tf.TensorShape(None):\r\n        shape = [-1]\r\n    else:\r\n        shape = [tmp]\r\n    \r\n    return tf.reshape(x, tf.concat([tf.shape(x)[:-2], shape], 0))\r\n\r\n\r\nprint(bar(2, 3, 4, 5))  # Tensor(\"Reshape_21:0\", shape=(2, 3, 20), dtype=float32)\r\nprint(bar(None, 3, 4, 5))  # Tensor(\"Reshape_22:0\", shape=(?, 3, 20), dtype=float32)\r\nprint(bar(None, None, 4, 5))  # Tensor(\"Reshape_23:0\", shape=(?, ?, 20), dtype=float32)\r\nprint(bar(2, 3, 4, None))  # Tensor(\"Reshape_24:0\", shape=(2, 3, ?), dtype=float32)\r\n```"}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/15369", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/15369/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/15369/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/15369/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/15369", "id": 282199682, "node_id": "MDU6SXNzdWUyODIxOTk2ODI=", "number": 15369, "title": "CMake OBJECT library Xcode problems", "user": {"login": "headupinclouds", "id": 554720, "node_id": "MDQ6VXNlcjU1NDcyMA==", "avatar_url": "https://avatars3.githubusercontent.com/u/554720?v=4", "gravatar_id": "", "url": "https://api.github.com/users/headupinclouds", "html_url": "https://github.com/headupinclouds", "followers_url": "https://api.github.com/users/headupinclouds/followers", "following_url": "https://api.github.com/users/headupinclouds/following{/other_user}", "gists_url": "https://api.github.com/users/headupinclouds/gists{/gist_id}", "starred_url": "https://api.github.com/users/headupinclouds/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/headupinclouds/subscriptions", "organizations_url": "https://api.github.com/users/headupinclouds/orgs", "repos_url": "https://api.github.com/users/headupinclouds/repos", "events_url": "https://api.github.com/users/headupinclouds/events{/privacy}", "received_events_url": "https://api.github.com/users/headupinclouds/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 404586558, "node_id": "MDU6TGFiZWw0MDQ1ODY1NTg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:community%20support", "name": "stat:community support", "color": "f4b400", "default": false, "description": ""}, {"id": 299643928, "node_id": "MDU6TGFiZWwyOTk2NDM5Mjg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:contributions%20welcome", "name": "stat:contributions welcome", "color": "f4b400", "default": false, "description": ""}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2017-12-14T18:40:17Z", "updated_at": "2018-02-07T18:51:55Z", "closed_at": null, "author_association": "NONE", "body": "### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**: N/A\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**: OS X 10.12.2 (Any)\r\n- **TensorFlow installed from (source or binary)**: Source\r\n- **TensorFlow version (use command below)**: Master @HEAD\r\n- **Python version**: N/A\r\n- **Bazel version (if compiling from source)**: N/A (CMake)\r\n- **GCC/Compiler version (if compiling from source)**: Xcode 8.3.3 (Any)\r\n- **CUDA/cuDNN version**: N/A\r\n- **GPU model and memory**: N/A\r\n- **Exact command to reproduce**: `cmake -GXcode ...`\r\n\r\n### Describe the problem\r\n\r\nCMake's OBJECT libraries don't play well with Xcode generators.  In particular, there is an incompatibility (effectively a bug) that prevents an object library from containing multiple files with the same base filename (\"stem\"), i.e.\r\n\r\n* tensorflow//core/platform/env_time.cc\r\n* tensorflow//core/platform/posix/env_time.cc\r\n\r\nThis pattern occurs in quite a few places in the tensorflow source code (and is otherwise perfectly reasonable).  For reference, here is a minimal sample project that directly reproduces a test case originally shared in a [post by Matthew Wheeler](http://cmake.3232098.n2.nabble.com/OBJECT-Libraries-with-Xcode-Generator-td7593197.html) on the CMake mailing list:\r\n\r\nhttps://github.com/headupinclouds/cmake_xcode_object_lib\r\n\r\nI'd like to help provide a fix for this, but would like some input on the preferred approach prior to implementing anything.  I see a few options:\r\n\r\n1. identify duplicates manually and add an alias for the offending files in the repository: `for i in ${FAILURES}; do echo -e \"#include \\\"$i\\\"\" > ${i%.cc}_fix.cc; done` and then update CMake to include those files.  Maybe `_fix` could be replaced with a more unique directory name.  PRO: Reasonably easy; CON: The problem will likely occur again, `#include \"source.cc\"` violates some style guides\r\n2. iterate through each list of object files in CMake at generate time and identify duplicates automatically, then map each of these files to an alias for the build using something like `configure_file(${duplicate_file} ${CMAKE_CURRENT_BINARY_DIR}/${duplicat_file_w_suffix} COPYONLY)` (for Xcode only).  PRO: Automatic (future proof); CON: More complicated and users can't apply changes directly in their IDE \r\n3. (long term) replace OBJECT libraries with standard libraries (static or shared based on `CMAKE_BUILD_SHARED`): In addition to the Xcode related bug above, OBJECT libraries have a number of other limitations which make the CMake code more complicated, or rather, standard libraries have a number of benefits that could make the CMake code cleaner.  Perhaps the most significant drawback is that OBJECT libraries can't be used with `target_link_libraries()`, so we lose the ability to pass along transitive dependency chains and scoped [usage requirements](https://cgold.readthedocs.io/en/latest/rejected/object-libraries.html#usage-requirements) from  `find_package()` (future) system dependencies using `target_link_libraries()`.  This relates to [Proposal: Making the cmake build distribution friendly](https://github.com/tensorflow/tensorflow/issues/13061), where common system dependencies would be included using `find_package()` calls and linked directly to the tensorflow submodules: `target_link_libraries(tf_core_lib PRIVATE ${tensorflow_EXTERNAL_PACKAGES}) # zlib, etc`.  This would also allow most of the manual `add_dependencies()` calls to be removed.  (Note: I've already added CMake package config installation steps to most of the google repository dependencies in forks, and will try to get this stuff accepted upstream.)\r\n\r\nThe last one is broader in scope, so I'm hoping there is an initial workaround based on some variation of (1) or (2) that would be accepted upstream in the near future for CMake + Xcode.  If there is interest in using standard libraries (3), I can help work on putting an initial solution together in a branch for evaluation as a follow up effort.\r\n\r\nI understand CMake status is [currently under discussion](https://github.com/tensorflow/tensorflow/issues/14014#issuecomment-340344678).  In any event, I'd like to help get tensorflow building through CMake for easy integration with other CMake based projects, including iOS builds, where Xcode is required.  I also appreciate tensorflow is an incredibly complicated piece of SW, and I appreciate the work that has gone in to supporting CMake builds to date.  Thanks!\r\n\r\n### Source code / logs\r\n\r\nNumerous \"no such file or directory\" errors such as these:\r\n```\r\nclang: error: no such file or directory: '/Users/developer/tensorflow/tensorflow/contrib/cmake/_builds/xcode-hid-sections/tensorflow.build/Release/tf_core_lib.build/Objects-normal/x86_64/env.o'\r\nclang: error: no such file or directory: '/Users/developer/tensorflow/tensorflow/contrib/cmake/_builds/xcode-hid-sections/tensorflow.build/Release/tf_core_lib.build/Objects-normal/x86_64/env_time.o'\r\nclang: error: no such file or directory: '/Users/developer/tensorflow/tensorflow/contrib/cmake/_builds/xcode-hid-sections/tensorflow.build/Release/tf_core_lib.build/Objects-normal/x86_64/tracing.o\r\n```"}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/15332", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/15332/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/15332/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/15332/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/15332", "id": 281654334, "node_id": "MDU6SXNzdWUyODE2NTQzMzQ=", "number": 15332, "title": "Allow tf.Estimator.evaluate() to return summary protos / add tooling to produce useful eval image summaries", "user": {"login": "Rikorose", "id": 16517898, "node_id": "MDQ6VXNlcjE2NTE3ODk4", "avatar_url": "https://avatars0.githubusercontent.com/u/16517898?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Rikorose", "html_url": "https://github.com/Rikorose", "followers_url": "https://api.github.com/users/Rikorose/followers", "following_url": "https://api.github.com/users/Rikorose/following{/other_user}", "gists_url": "https://api.github.com/users/Rikorose/gists{/gist_id}", "starred_url": "https://api.github.com/users/Rikorose/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Rikorose/subscriptions", "organizations_url": "https://api.github.com/users/Rikorose/orgs", "repos_url": "https://api.github.com/users/Rikorose/repos", "events_url": "https://api.github.com/users/Rikorose/events{/privacy}", "received_events_url": "https://api.github.com/users/Rikorose/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 299643928, "node_id": "MDU6TGFiZWwyOTk2NDM5Mjg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:contributions%20welcome", "name": "stat:contributions welcome", "color": "f4b400", "default": false, "description": ""}, {"id": 473173272, "node_id": "MDU6TGFiZWw0NzMxNzMyNzI=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:feature", "name": "type:feature", "color": "159b2e", "default": false, "description": ""}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 12, "created_at": "2017-12-13T07:50:00Z", "updated_at": "2019-08-12T16:26:15Z", "closed_at": null, "author_association": "NONE", "body": "Related to #14042.\r\n\r\n`tf.Estimator.train()` writes a summary of all defined summaries (scalar, img) in the given `model_fn` when calling [MonitoredTrainingSession](https://github.com/tensorflow/tensorflow/blob/master/tensorflow/python/estimator/estimator.py#L801) ([here](https://github.com/tensorflow/tensorflow/blob/master/tensorflow/python/training/monitored_session.py#L366)).\r\n\r\n`tf.Estimator.evaluate()` does not write summaries defined somewhere in the `model_fn`. A workaround is defining `SummarySaverHook` inside the `model_fn`, which I think is not ideal since the Estimator has all the relevant information for saving summaries (steps, save directory, etc.).\r\n\r\nA possible solution would be adding a `SummarySaverHook` during evaluation, (e.g. [here](https://github.com/tensorflow/tensorflow/blob/master/tensorflow/python/training/evaluation.py#L206)) or create a new function `MonitoredEvaluationSession()` in [monitored_session.py](https://github.com/tensorflow/tensorflow/blob/master/tensorflow/python/training/monitored_session.py) that creates such a hook.\r\n\r\ncc @ispirmustafa @martinwicke\r\n"}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/15322", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/15322/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/15322/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/15322/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/15322", "id": 281537642, "node_id": "MDU6SXNzdWUyODE1Mzc2NDI=", "number": 15322, "title": "Add full cmake support for Android builds", "user": {"login": "silentnuke", "id": 13165815, "node_id": "MDQ6VXNlcjEzMTY1ODE1", "avatar_url": "https://avatars0.githubusercontent.com/u/13165815?v=4", "gravatar_id": "", "url": "https://api.github.com/users/silentnuke", "html_url": "https://github.com/silentnuke", "followers_url": "https://api.github.com/users/silentnuke/followers", "following_url": "https://api.github.com/users/silentnuke/following{/other_user}", "gists_url": "https://api.github.com/users/silentnuke/gists{/gist_id}", "starred_url": "https://api.github.com/users/silentnuke/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/silentnuke/subscriptions", "organizations_url": "https://api.github.com/users/silentnuke/orgs", "repos_url": "https://api.github.com/users/silentnuke/repos", "events_url": "https://api.github.com/users/silentnuke/events{/privacy}", "received_events_url": "https://api.github.com/users/silentnuke/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 299643928, "node_id": "MDU6TGFiZWwyOTk2NDM5Mjg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:contributions%20welcome", "name": "stat:contributions welcome", "color": "f4b400", "default": false, "description": ""}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2017-12-12T21:08:09Z", "updated_at": "2018-03-02T22:16:42Z", "closed_at": null, "author_association": "NONE", "body": "Currently it doesn't seems like tensorflow support compiling with ndk r16, clang and c++ stl.\r\nIs there any plans to update build flow to support that?\r\nAlso it would be nice to have pure CMake build for Android.\r\n"}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/15293", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/15293/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/15293/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/15293/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/15293", "id": 281253644, "node_id": "MDU6SXNzdWUyODEyNTM2NDQ=", "number": 15293, "title": "Encrypted Data", "user": {"login": "davidcittadini", "id": 3467712, "node_id": "MDQ6VXNlcjM0Njc3MTI=", "avatar_url": "https://avatars0.githubusercontent.com/u/3467712?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidcittadini", "html_url": "https://github.com/davidcittadini", "followers_url": "https://api.github.com/users/davidcittadini/followers", "following_url": "https://api.github.com/users/davidcittadini/following{/other_user}", "gists_url": "https://api.github.com/users/davidcittadini/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidcittadini/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidcittadini/subscriptions", "organizations_url": "https://api.github.com/users/davidcittadini/orgs", "repos_url": "https://api.github.com/users/davidcittadini/repos", "events_url": "https://api.github.com/users/davidcittadini/events{/privacy}", "received_events_url": "https://api.github.com/users/davidcittadini/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 299643928, "node_id": "MDU6TGFiZWwyOTk2NDM5Mjg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:contributions%20welcome", "name": "stat:contributions welcome", "color": "f4b400", "default": false, "description": ""}, {"id": 473173272, "node_id": "MDU6TGFiZWw0NzMxNzMyNzI=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:feature", "name": "type:feature", "color": "159b2e", "default": false, "description": ""}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 15, "created_at": "2017-12-12T04:25:15Z", "updated_at": "2018-12-04T01:58:23Z", "closed_at": null, "author_association": "NONE", "body": "It is not easy/possible to use TensorFlow with encrypted data, such as via Homomorphic Encryption or Multi-Party Computation.  It would be useful if future versions of TensorFlow could support HE/MPC or provide the ability for third-party HE/MPC support.\r\n\r\n------------------------\r\n\r\n### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**: N/A\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**: N/A\r\n- **TensorFlow installed from (source or binary)**: N/A\r\n- **TensorFlow version (use command below)**: N/A\r\n- **Python version**: N/A\r\n- **Bazel version (if compiling from source)**: N/A\r\n- **GCC/Compiler version (if compiling from source)**: N/A\r\n- **CUDA/cuDNN version**: N/A\r\n- **GPU model and memory**: N/A\r\n- **Exact command to reproduce**: N/A\r\n"}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/15290", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/15290/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/15290/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/15290/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/15290", "id": 281233020, "node_id": "MDU6SXNzdWUyODEyMzMwMjA=", "number": 15290, "title": "Feature request: provide a means to configure, build, and install that includes cc", "user": {"login": "unitive-jim", "id": 16088032, "node_id": "MDQ6VXNlcjE2MDg4MDMy", "avatar_url": "https://avatars3.githubusercontent.com/u/16088032?v=4", "gravatar_id": "", "url": "https://api.github.com/users/unitive-jim", "html_url": "https://github.com/unitive-jim", "followers_url": "https://api.github.com/users/unitive-jim/followers", "following_url": "https://api.github.com/users/unitive-jim/following{/other_user}", "gists_url": "https://api.github.com/users/unitive-jim/gists{/gist_id}", "starred_url": "https://api.github.com/users/unitive-jim/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/unitive-jim/subscriptions", "organizations_url": "https://api.github.com/users/unitive-jim/orgs", "repos_url": "https://api.github.com/users/unitive-jim/repos", "events_url": "https://api.github.com/users/unitive-jim/events{/privacy}", "received_events_url": "https://api.github.com/users/unitive-jim/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 299643928, "node_id": "MDU6TGFiZWwyOTk2NDM5Mjg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:contributions%20welcome", "name": "stat:contributions welcome", "color": "f4b400", "default": false, "description": ""}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 17, "created_at": "2017-12-12T02:12:03Z", "updated_at": "2018-05-02T18:51:30Z", "closed_at": null, "author_association": "NONE", "body": "Please go to Stack Overflow for help and support:\r\n\r\nhttps://stackoverflow.com/questions/tagged/tensorflow\r\n\r\nIf you open a GitHub issue, here is our policy:\r\n\r\n1. It must be a bug or a feature request.\r\n2. The form below must be filled out.\r\n3. It shouldn't be a TensorBoard issue. Those go [here](https://github.com/tensorflow/tensorboard/issues).\r\n\r\n**Here's why we have that policy**: TensorFlow developers respond to issues. We want to focus on work that benefits the whole community, e.g., fixing bugs and adding features. Support only helps individuals. GitHub also notifies thousands of people when issues are filed. We want them to see you communicating an interesting problem, rather than being redirected to Stack Overflow.\r\n\r\n------------------------\r\n\r\n### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**: N/A\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**: Both Mac and Linux\r\n- **TensorFlow installed from (source or binary)**: Source\r\n- **TensorFlow version (use command below)**: 1.4\r\n- **Python version**: 3.6.3, but not relevant \r\n- **Bazel version (if compiling from source)**: 0.8.1, but not relevant\r\n- **GCC/Compiler version (if compiling from source)**: Both GCC and clang, but not relevant\r\n- **CUDA/cuDNN version**: N/A\r\n- **GPU model and memory**: N/A\r\n- **Exact command to reproduce**: N/A\r\n\r\nYou can collect some of this information using our environment capture script:\r\n\r\nhttps://github.com/tensorflow/tensorflow/tree/master/tools/tf_env_collect.sh\r\n\r\nYou can obtain the TensorFlow version with\r\n\r\npython -c \"import tensorflow as tf; print(tf.GIT_VERSION, tf.VERSION)\"\r\n\r\n### Describe the problem\r\nDescribe the problem clearly here. Be sure to convey here why it's a bug in TensorFlow or a feature request.\r\n\r\nTensorflow doesn't seem to have a clean way to install from sources to support both python and C++ development. When we install from sources, only the core tensorflow framework is installed in the python site-packages directory. The `cc` headers (and maybe others) are not included. Likewise the `libtensorflow_cc.so` is not built. It's surprising that there is so little documentation for how C++ developers are expected to develop tensorflow applications. My use case is probably common: I want to train and test my model using python, but I want to deploy an application that does prediction/inference with the app written in C++. \r\n\r\nI have managed once to successfully install the headers and libraries I need into `/usr/local/...` on a Mac, but in doing so I lost some of the CPU optimizations that I had specified when doing the standard build from sources. Now I need to repeat this process on Linux, where I need GPU support, and want to make sure I get it right.\r\n\r\nIt would be so nice if there was something close to the standard `./configure; make; make install` that could install headers and libraries into a chosen directory.\r\n\r\n### Source code / logs\r\nInclude any logs or source code that would be helpful to diagnose the problem. If including tracebacks, please include the full traceback. Large logs and files should be attached. Try to provide a reproducible test case that is the bare minimum necessary to generate the problem.\r\n"}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/15219", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/15219/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/15219/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/15219/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/15219", "id": 280567237, "node_id": "MDU6SXNzdWUyODA1NjcyMzc=", "number": 15219, "title": "tf.while_loop and tf.foldl do not support second order gradients", "user": {"login": "Bonnevie", "id": 5861991, "node_id": "MDQ6VXNlcjU4NjE5OTE=", "avatar_url": "https://avatars2.githubusercontent.com/u/5861991?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Bonnevie", "html_url": "https://github.com/Bonnevie", "followers_url": "https://api.github.com/users/Bonnevie/followers", "following_url": "https://api.github.com/users/Bonnevie/following{/other_user}", "gists_url": "https://api.github.com/users/Bonnevie/gists{/gist_id}", "starred_url": "https://api.github.com/users/Bonnevie/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Bonnevie/subscriptions", "organizations_url": "https://api.github.com/users/Bonnevie/orgs", "repos_url": "https://api.github.com/users/Bonnevie/repos", "events_url": "https://api.github.com/users/Bonnevie/events{/privacy}", "received_events_url": "https://api.github.com/users/Bonnevie/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 299643928, "node_id": "MDU6TGFiZWwyOTk2NDM5Mjg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:contributions%20welcome", "name": "stat:contributions welcome", "color": "f4b400", "default": false, "description": ""}, {"id": 473173272, "node_id": "MDU6TGFiZWw0NzMxNzMyNzI=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:feature", "name": "type:feature", "color": "159b2e", "default": false, "description": ""}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2017-12-08T17:48:02Z", "updated_at": "2017-12-11T18:40:27Z", "closed_at": null, "author_association": "NONE", "body": "The example\r\n```python\r\nimport tensorflow as tf\r\nx = tf.Variable(1.)\r\nA = tf.Variable(tf.ones((3,3))) \r\ncost = tf.trace(tf.foldl(tf.matmul,tf.stack([x*A for _ in range(3)])))\r\ntf.gradients(tf.gradients(cost, A), x)  \r\n# TypeError: Second-order gradient for while loops not supported.\r\n```\r\nillustrates that despite applying `tf.foldl` to a static list, the internal implementation via while loops leads to a type error. The problem disappears if the fold operation is carried out manually using a for loop. While implementing `foldl` using the while loop clearly makes the operation  more widely applicable, it seems problematic if syntactic sugar can lead to code that has qualitative differences from a naive implementation using a static loop. I cannot help but wonder whether `foldl` could be more efficient in the static case as well, although that is more of a conjecture.\r\n\r\nI think it would be nice if `foldl` (and other while loop derivatives) had a keyword that enabled or disabled the \"dynamic mode\" using while, or if, at the very least, the TypeError would occur at the `foldl`operation so that the error is easier to trace.\r\n\r\n### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**:\r\nCustom code.\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**:\r\nLinux Ubuntu 16.04 LTS\r\n- **TensorFlow installed from (source or binary)**:\r\npip install.\r\n- **TensorFlow version (use command below)**:\r\nv1.4.0-rc1-11-g130a514 1.4.0\r\n- **Python version**:\r\n3.5.4 \r\n- **Bazel version (if compiling from source)**:\r\nNot applicable.\r\n- **GCC/Compiler version (if compiling from source)**:\r\nNot applicable.\r\n- **CUDA/cuDNN version**:\r\nDid not use CUDA.\r\n- **GPU model and memory**:\r\nDid not use GPU.\r\n- **Exact command to reproduce**:\r\n```python\r\nimport tensorflow as tf\r\nx = tf.Variable(1.)\r\nA = tf.Variable(tf.ones((3,3))) \r\ncost = tf.trace(tf.foldl(tf.matmul,tf.stack([x*A for _ in range(3)])))\r\ntf.gradients(tf.gradients(cost, A), x)  \r\n# TypeError: Second-order gradient for while loops not supported.\r\n```"}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/15214", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/15214/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/15214/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/15214/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/15214", "id": 280521555, "node_id": "MDU6SXNzdWUyODA1MjE1NTU=", "number": 15214, "title": "tf.profiler overrides shape_invariants in while_loop", "user": {"login": "drasmuss", "id": 1952220, "node_id": "MDQ6VXNlcjE5NTIyMjA=", "avatar_url": "https://avatars1.githubusercontent.com/u/1952220?v=4", "gravatar_id": "", "url": "https://api.github.com/users/drasmuss", "html_url": "https://github.com/drasmuss", "followers_url": "https://api.github.com/users/drasmuss/followers", "following_url": "https://api.github.com/users/drasmuss/following{/other_user}", "gists_url": "https://api.github.com/users/drasmuss/gists{/gist_id}", "starred_url": "https://api.github.com/users/drasmuss/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/drasmuss/subscriptions", "organizations_url": "https://api.github.com/users/drasmuss/orgs", "repos_url": "https://api.github.com/users/drasmuss/repos", "events_url": "https://api.github.com/users/drasmuss/events{/privacy}", "received_events_url": "https://api.github.com/users/drasmuss/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 404586558, "node_id": "MDU6TGFiZWw0MDQ1ODY1NTg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:community%20support", "name": "stat:community support", "color": "f4b400", "default": false, "description": ""}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 15, "created_at": "2017-12-08T15:18:52Z", "updated_at": "2018-04-18T17:01:12Z", "closed_at": null, "author_association": "CONTRIBUTOR", "body": "### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**: yes\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**: Windows 10\r\n- **TensorFlow installed from (source or binary)**: binary\r\n- **TensorFlow version (use command below)**: 1.5.0-dev20171120\r\n- **Python version**: 3.5\r\n- **Bazel version (if compiling from source)**: N/A\r\n- **GCC/Compiler version (if compiling from source)**: N/A\r\n- **CUDA/cuDNN version**: N/A\r\n- **GPU model and memory**: N/A\r\n- **Exact command to reproduce**:\r\n\r\n``` python\r\nimport tensorflow as tf\r\n\r\na = tf.zeros((1,))\r\nn = tf.constant(10.)\r\ndo_profile = True\r\n\r\n_, b = tf.while_loop(\r\n    lambda x, y: x[0] < n,\r\n    lambda x, y: (x + 1, tf.concat((y, x), 0)),\r\n    (a, tf.zeros((0,))),\r\n    shape_invariants=(tf.TensorShape((1,)), tf.TensorShape((None,))))\r\n\r\nwith tf.Session() as sess:\r\n    for _ in range(2):\r\n        grads = tf.gradients(b, a)\r\n\r\n        run_options = tf.RunOptions(trace_level=tf.RunOptions.FULL_TRACE)\r\n        run_metadata = tf.RunMetadata()\r\n        print(sess.run((b, grads), options=run_options,\r\n                       run_metadata=run_metadata))\r\n\r\n        if do_profile:\r\n            tf.profiler.profile(tf.get_default_graph(), run_meta=run_metadata)\r\n```\r\n\r\nIf `do_profile=True`, this will give an error on the second pass through the for loop:\r\n```\r\nTraceback (most recent call last):\r\n  File \".../tmp3.py\", line 15, in <module>\r\n    grads = tf.gradients(b, a)\r\n  File \"...\\lib\\site-packages\\tensorflow\\python\\ops\\gradients_impl.py\", line 638, in gradients\r\n    % (op.name, i, t_in.shape, in_grad.shape))\r\nValueError: Incompatible shapes between op input and calculated input gradient.  Forward operation: while/Switch_1.  Input index: 0. Original input shape: (0,).  Calculated input gradient shape: (10,)\r\n```\r\n\r\n### Describe the problem\r\n\r\nI believe this is caused by [this function](https://github.com/tensorflow/tensorflow/blob/master/tensorflow/python/profiler/tfprof_logger.py#L37), which goes through the graph and fills in missing shapes from the `run_metadata`.  This modifies the graph in-place, so on the second pass through the for loop the loop variable that was intentionally defined with an unknown shape has been overwritten with the fixed shape from the last run.  This causes the shape mismatch error.\r\n  "}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/15213", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/15213/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/15213/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/15213/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/15213", "id": 280502581, "node_id": "MDU6SXNzdWUyODA1MDI1ODE=", "number": 15213, "title": "XLA/AOT Windows support", "user": {"login": "rongjiecomputer", "id": 13115060, "node_id": "MDQ6VXNlcjEzMTE1MDYw", "avatar_url": "https://avatars2.githubusercontent.com/u/13115060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rongjiecomputer", "html_url": "https://github.com/rongjiecomputer", "followers_url": "https://api.github.com/users/rongjiecomputer/followers", "following_url": "https://api.github.com/users/rongjiecomputer/following{/other_user}", "gists_url": "https://api.github.com/users/rongjiecomputer/gists{/gist_id}", "starred_url": "https://api.github.com/users/rongjiecomputer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rongjiecomputer/subscriptions", "organizations_url": "https://api.github.com/users/rongjiecomputer/orgs", "repos_url": "https://api.github.com/users/rongjiecomputer/repos", "events_url": "https://api.github.com/users/rongjiecomputer/events{/privacy}", "received_events_url": "https://api.github.com/users/rongjiecomputer/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 404586558, "node_id": "MDU6TGFiZWw0MDQ1ODY1NTg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:community%20support", "name": "stat:community support", "color": "f4b400", "default": false, "description": ""}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 14, "created_at": "2017-12-08T14:15:08Z", "updated_at": "2019-12-31T00:23:55Z", "closed_at": null, "author_association": "CONTRIBUTOR", "body": "### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**: No\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**: Windows 10 x64\r\n- **TensorFlow installed from (source or binary)**: source\r\n- **TensorFlow version (use command below)**: master\r\n- **Python version**: 3.6\r\n- **Bazel version (if compiling from source)**: 0.8.0\r\n- **GCC/Compiler version (if compiling from source)**: VS 2017 15.5\r\n- **CUDA/cuDNN version**: N/A\r\n- **GPU model and memory**: N/A\r\n- **Exact command to reproduce**: N/A\r\n\r\nSimilar to #8310, but specifically about running `tfCompile` on Windows rather than Linux to produce `x86_64-windows-msvc` binaries.\r\n\r\nXLA/AOT depends on LLVM which has excellent Windows support via CMake, but Bazel cannot interop with CMake. [llvm.BUILD](https://github.com/tensorflow/tensorflow/blob/master/third_party/llvm/llvm.BUILD) is auto-generated and the script to generate it is not open-sourced, this make it difficult for external contributor to make improvement. [tensorflow/compiler](https://github.com/tensorflow/tensorflow/tree/master/tensorflow/compiler) might not need too much changes as #9908 already addressed some of them.\r\n\r\nOne possible path is to let user to run CMake in host machine when invoking `configure.py`, then feed CMake generated files into custom script to generate `LLVM.BUILD`.\r\n\r\nNote:\r\n\r\n[Rumour has it](https://chromium-review.googlesource.com/c/chromium/src/+/753588) that there is a Google-internal tool called `tfNative` to generate `.h/.cpp` files instead of `.lib` binaries, though I suspect that even if the tool is open-sourced, it might not be immediately available for Windows developers."}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/15134", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/15134/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/15134/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/15134/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/15134", "id": 279427567, "node_id": "MDU6SXNzdWUyNzk0Mjc1Njc=", "number": 15134, "title": "contrib STFT magnitudes different to librosa's", "user": {"login": "fedden", "id": 11923487, "node_id": "MDQ6VXNlcjExOTIzNDg3", "avatar_url": "https://avatars2.githubusercontent.com/u/11923487?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fedden", "html_url": "https://github.com/fedden", "followers_url": "https://api.github.com/users/fedden/followers", "following_url": "https://api.github.com/users/fedden/following{/other_user}", "gists_url": "https://api.github.com/users/fedden/gists{/gist_id}", "starred_url": "https://api.github.com/users/fedden/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fedden/subscriptions", "organizations_url": "https://api.github.com/users/fedden/orgs", "repos_url": "https://api.github.com/users/fedden/repos", "events_url": "https://api.github.com/users/fedden/events{/privacy}", "received_events_url": "https://api.github.com/users/fedden/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1566679705, "node_id": "MDU6TGFiZWwxNTY2Njc5NzA1", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/comp:signal", "name": "comp:signal", "color": "0052cc", "default": false, "description": "tf.signal related issues"}, {"id": 404586558, "node_id": "MDU6TGFiZWw0MDQ1ODY1NTg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:community%20support", "name": "stat:community support", "color": "f4b400", "default": false, "description": ""}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2017-12-05T15:55:13Z", "updated_at": "2019-09-19T21:34:43Z", "closed_at": null, "author_association": "NONE", "body": "------------------------\r\n\r\n### System information\r\n- **Have I written custom code**: Yes\r\n- **OS Platform and Distribution**: Linux Ubuntu 16.04\r\n- **TensorFlow installed from (source or binary)**: binary\r\n- **TensorFlow version**: 1.4\r\n- **Python version**: 3.5.2\r\n- **Bazel version**: N/A\r\n- **GCC/Compiler version**: N/A\r\n- **CUDA/cuDNN version**: 6.0\r\n- **GPU model and memory**: nvidia quadro m2000m 4gb\r\n- **Exact command to reproduce**: See below code\r\n\r\nHi all!\r\n\r\nI was comparing the TensorFlow's contrib STFT against librosa's and noticed there are some discrepancies in terms of output between the two. Not sure if this normal between libraries implementations, but I wanted to raise it in case it matters!\r\n\r\nI'm also aware it could be some small bug or difference in implementation/argument that I have supplied.\r\n\r\nCode:\r\n\r\n```\r\nimport tensorflow as tf\r\nimport numpy as np\r\nimport librosa\r\n\r\nnp.random.seed(666)\r\nnp.set_printoptions(precision=5, suppress=True)\r\n\r\naudio_length_seconds = 2\r\nsample_rate = 44100\r\naudio_frames_length = int(sample_rate * audio_length_seconds)\r\naudio_shape = [None, audio_frames_length]\r\nfft_size = 1024\r\nhop_size = 512\r\n\r\ntf.reset_default_graph()\r\n\r\naudio = tf.placeholder(tf.float32, \r\n                       shape=audio_shape)\r\nstfts = tf.contrib.signal.stft(audio, \r\n                               frame_length=fft_size, \r\n                               frame_step=hop_size,\r\n                               fft_length=fft_size,\r\n                               pad_end=True)\r\nreal = tf.real(stfts)\r\nimag = tf.imag(stfts)\r\nmagnitudes = tf.abs(stfts)\r\nphases = tf.atan2(imag, real)\r\nfeatures = tf.concat([magnitudes, phases], axis=2)\r\n\r\nsess = tf.Session()\r\nwith sess.as_default():\r\n    \r\n    data = np.random.random((1, audio_frames_length))\r\n    tf_results = magnitudes.eval({audio: data})\r\n    \r\n    lr_results = librosa.core.stft(y=data.reshape((-1)),\r\n                                   n_fft=fft_size,\r\n                                   hop_length=hop_size,\r\n                                   win_length=fft_size)\r\n                                   \r\n    lr_results = np.abs(lr_results)\r\n    \r\n    difference = np.abs(tf_results - lr_results.T)\r\n    print(\"Differences:\\nmin:\", np.min(difference), \r\n          \"max:\", np.max(difference), \r\n          \"mean:\", np.mean(difference), \r\n          \"std:\", np.std(difference))\r\n```\r\n\r\nAnd the expected output from the print would be:\r\n\r\n```\r\nDifferences:\r\nmin: 6.97374e-05 max: 246.904 mean: 2.92715 std: 2.45132\r\n```"}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/15075", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/15075/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/15075/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/15075/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/15075", "id": 278763653, "node_id": "MDU6SXNzdWUyNzg3NjM2NTM=", "number": 15075, "title": "CUDA_ERROR_LAUNCH_FAILED with TensorFlow example", "user": {"login": "nikko4913", "id": 4040994, "node_id": "MDQ6VXNlcjQwNDA5OTQ=", "avatar_url": "https://avatars2.githubusercontent.com/u/4040994?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikko4913", "html_url": "https://github.com/nikko4913", "followers_url": "https://api.github.com/users/nikko4913/followers", "following_url": "https://api.github.com/users/nikko4913/following{/other_user}", "gists_url": "https://api.github.com/users/nikko4913/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikko4913/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikko4913/subscriptions", "organizations_url": "https://api.github.com/users/nikko4913/orgs", "repos_url": "https://api.github.com/users/nikko4913/repos", "events_url": "https://api.github.com/users/nikko4913/events{/privacy}", "received_events_url": "https://api.github.com/users/nikko4913/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 299643928, "node_id": "MDU6TGFiZWwyOTk2NDM5Mjg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:contributions%20welcome", "name": "stat:contributions welcome", "color": "f4b400", "default": false, "description": ""}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2017-12-03T10:59:50Z", "updated_at": "2019-07-12T01:09:21Z", "closed_at": null, "author_association": "NONE", "body": "Please go to Stack Overflow for help and support:\r\n\r\nhttps://stackoverflow.com/questions/tagged/tensorflow\r\n\r\nIf you open a GitHub issue, here is our policy:\r\n\r\n1. It must be a bug or a feature request.\r\n2. The form below must be filled out.\r\n3. It shouldn't be a TensorBoard issue. Those go [here](https://github.com/tensorflow/tensorboard/issues).\r\n\r\n**Here's why we have that policy**: TensorFlow developers respond to issues. We want to focus on work that benefits the whole community, e.g., fixing bugs and adding features. Support only helps individuals. GitHub also notifies thousands of people when issues are filed. We want them to see you communicating an interesting problem, rather than being redirected to Stack Overflow.\r\n\r\n------------------------\r\n\r\n### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**: No, this error happens when using TensorFlow example \"mnist_deep.py\". Modified the file to go for 1.000 iterations instead of the default 20.000 because it took a long time to finish, everything else is the same.\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**: Ubuntu 16.04 64-bit\r\n- **TensorFlow installed from (source or binary)**: source\r\n- **TensorFlow version (use command below)**: v1.3.0-0-g9e76bf3 1.3.0\r\n- **Python version**: Python 3 (Though the issue persists with python 2.7)\r\n- **Bazel version (if compiling from source)**: bazel-0.5.2-dist\r\n- **GCC/Compiler version (if compiling from source)**: GCC 5.4.0 20160609\r\n- **CUDA/cuDNN version**: CUDA: 8.0 cuDNN: 6.0\r\n- **GPU model and memory**: NVIDIA Tegra X2 8GB\r\n- **Exact command to reproduce**: python3 mnist_deep.py\r\n\r\nI am using the Nvidia Jetson TX2 developer kit with Jetpack 3.1 (The architecture is aarch64). I have tried installing Tensorflow for Python 2 and 3, but the issue persists with both installations.\r\n\r\n### Describe the problem\r\nDescribe the problem clearly here. Be sure to convey here why it's a bug in TensorFlow or a feature request.\r\n\r\nI had no problems installing from source for either Python 2.7 and 3. When executing \"mnist_deep.py\" I get a CUDA_ERROR_LAUNCH_FAILED error. Since I had no problems during install, I believe there is something wrong with communication between Tensorflow and CUDA, which is why I'm posting here.\r\n\r\nI had no problems excuting \"mnist_softmax.py\", and so the issue seem to be related to more sophisticated CNNs.\r\n\r\n### Source code / logs\r\nInclude any logs or source code that would be helpful to diagnose the problem. If including tracebacks, please include the full traceback. Large logs and files should be attached. Try to provide a reproducible test case that is the bare minimum necessary to generate the problem.\r\n\r\nThis is the terminal output:\r\n`nvidia@tegra-ubuntu:~/Desktop/tensorflow-r1.3/tensorflow/examples/tutorials/mnist$ ./mnist_deep.py\r\nSuccessfully downloaded train-images-idx3-ubyte.gz 9912422 bytes.\r\nExtracting /tmp/tensorflow/mnist/input_data/train-images-idx3-ubyte.gz\r\nSuccessfully downloaded train-labels-idx1-ubyte.gz 28881 bytes.\r\nExtracting /tmp/tensorflow/mnist/input_data/train-labels-idx1-ubyte.gz\r\nSuccessfully downloaded t10k-images-idx3-ubyte.gz 1648877 bytes.\r\nExtracting /tmp/tensorflow/mnist/input_data/t10k-images-idx3-ubyte.gz\r\nSuccessfully downloaded t10k-labels-idx1-ubyte.gz 4542 bytes.\r\nExtracting /tmp/tensorflow/mnist/input_data/t10k-labels-idx1-ubyte.gz\r\nSaving graph to: /tmp/tmpyJvseo\r\n2017-12-02 00:56:23.092487: I tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:857] ARM64 does not support NUMA - returning NUMA node zero\r\n2017-12-02 00:56:23.092610: I tensorflow/core/common_runtime/gpu/gpu_device.cc:955] Found device 0 with properties:\r\nname: NVIDIA Tegra X2\r\nmajor: 6 minor: 2 memoryClockRate (GHz) 1.3005\r\npciBusID 0000:00:00.0\r\nTotal memory: 7.67GiB\r\nFree memory: 5.76GiB\r\n2017-12-02 00:56:23.092659: I tensorflow/core/common_runtime/gpu/gpu_device.cc:976] DMA: 0\r\n2017-12-02 00:56:23.092684: I tensorflow/core/common_runtime/gpu/gpu_device.cc:986] 0:   Y\r\n2017-12-02 00:56:23.092710: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1045] Creating TensorFlow device (/gpu:0) -> (device: 0, name: NVIDIA Tegra X2, pci bus id: 0000:00:00.0)\r\nstep 0, training accuracy 0.04\r\nstep 100, training accuracy 0.86\r\nstep 200, training accuracy 0.96\r\nstep 300, training accuracy 0.94\r\nstep 400, training accuracy 0.86\r\nstep 500, training accuracy 0.92\r\nstep 600, training accuracy 0.96\r\nstep 700, training accuracy 0.96\r\nstep 800, training accuracy 0.96\r\nstep 900, training accuracy 1\r\n2017-12-02 00:57:17.461035: E tensorflow/stream_executor/cuda/cuda_driver.cc:1068] failed to synchronize the stop event: CUDA_ERROR_LAUNCH_FAILED\r\n2017-12-02 00:57:17.461146: E tensorflow/stream_executor/cuda/cuda_timer.cc:54] Internal: error destroying CUDA event in context 0x3372070: CUDA_ERROR_LAUNCH_FAILED\r\n2017-12-02 00:57:17.461188: E tensorflow/stream_executor/cuda/cuda_timer.cc:59] Internal: error destroying CUDA event in context 0x3372070: CUDA_ERROR_LAUNCH_FAILED\r\nTraceback (most recent call last):\r\n  File \"./mnist_deep.py\", line 177, in <module>\r\n    tf.app.run(main=main, argv=[sys.argv[0]] + unparsed)\r\n  File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/platform/app.py\", line 48, in run\r\n    _sys.exit(main(_sys.argv[:1] + flags_passthrough))\r\n  File \"./mnist_deep.py\", line 169, in main\r\n    x: mnist.test.images, y_: mnist.test.labels, keep_prob: 1.0}))\r\n  File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/framework/ops.py\", line 541, in eval\r\n    return _eval_using_default_session(self, feed_dict, self.graph, session)\r\n  File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/framework/ops.py\", line 4085, in _eval_using_default_session\r\n    return session.run(tensors, feed_dict)\r\n  File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/client/session.py\", line 895, in run\r\n    run_metadata_ptr)\r\n  File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/client/session.py\", line 1124, in _run\r\n    feed_dict_tensor, options, run_metadata)\r\n  File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/client/session.py\", line 1321, in _do_run\r\n    options, run_metadata)\r\n  File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/client/session.py\", line 1340, in _do_call\r\n    raise type(e)(node_def, op, message)\r\ntensorflow.python.framework.errors_impl.NotFoundError: No algorithm worked!\r\n     [[Node: conv1/Conv2D = Conv2D[T=DT_FLOAT, data_format=\"NHWC\", padding=\"SAME\", strides=[1, 1, 1, 1], use_cudnn_on_gpu=true, _device=\"/job:localhost/replica:0/task:0/gpu:0\"](reshape/Reshape, conv1/Variable/read)]]\r\n     [[Node: Mean_1/_7 = _Recv[client_terminated=false, recv_device=\"/job:localhost/replica:0/task:0/cpu:0\", send_device=\"/job:localhost/replica:0/task:0/gpu:0\", send_device_incarnation=1, tensor_name=\"edge_79_Mean_1\", tensor_type=DT_FLOAT, _device=\"/job:localhost/replica:0/task:0/cpu:0\"]()]]\r\n\r\nCaused by op u'conv1/Conv2D', defined at:\r\n  File \"./mnist_deep.py\", line 177, in <module>\r\n    tf.app.run(main=main, argv=[sys.argv[0]] + unparsed)\r\n  File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/platform/app.py\", line 48, in run\r\n    _sys.exit(main(_sys.argv[:1] + flags_passthrough))\r\n  File \"./mnist_deep.py\", line 138, in main\r\n    y_conv, keep_prob = deepnn(x)\r\n  File \"./mnist_deep.py\", line 64, in deepnn\r\n    h_conv1 = tf.nn.relu(conv2d(x_image, W_conv1) + b_conv1)\r\n  File \"./mnist_deep.py\", line 106, in conv2d\r\n    return tf.nn.conv2d(x, W, strides=[1, 1, 1, 1], padding='SAME')\r\n  File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/ops/gen_nn_ops.py\", line 397, in conv2d\r\n    data_format=data_format, name=name)\r\n  File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/framework/op_def_library.py\", line 767, in apply_op\r\n    op_def=op_def)\r\n  File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/framework/ops.py\", line 2630, in create_op\r\n    original_op=self._default_original_op, op_def=op_def)\r\n  File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/framework/ops.py\", line 1204, in __init__\r\n    self._traceback = self._graph._extract_stack()  # pylint: disable=protected-access\r\n\r\nNotFoundError (see above for traceback): No algorithm worked!\r\n     [[Node: conv1/Conv2D = Conv2D[T=DT_FLOAT, data_format=\"NHWC\", padding=\"SAME\", strides=[1, 1, 1, 1], use_cudnn_on_gpu=true, _device=\"/job:localhost/replica:0/task:0/gpu:0\"](reshape/Reshape, conv1/Variable/read)]]\r\n     [[Node: Mean_1/_7 = _Recv[client_terminated=false, recv_device=\"/job:localhost/replica:0/task:0/cpu:0\", send_device=\"/job:localhost/replica:0/task:0/gpu:0\", send_device_incarnation=1, tensor_name=\"edge_79_Mean_1\", tensor_type=DT_FLOAT, _device=\"/job:localhost/replica:0/task:0/cpu:0\"]()]]\r\n\r\n2017-12-02 00:57:17.738653: E tensorflow/stream_executor/event.cc:33] error destroying CUDA event in context 0x3372070: CUDA_ERROR_LAUNCH_FAILED\r\n2017-12-02 00:57:17.738769: E tensorflow/stream_executor/event.cc:33] error destroying CUDA event in context 0x3372070: CUDA_ERROR_LAUNCH_FAILED\r\n2017-12-02 00:57:17.738800: E tensorflow/stream_executor/event.cc:33] error destroying CUDA event in context 0x3372070: CUDA_ERROR_LAUNCH_FAILED\r\n2017-12-02 00:57:17.738824: E tensorflow/stream_executor/event.cc:33] error destroying CUDA event in context 0x3372070: CUDA_ERROR_LAUNCH_FAILED\r\nnvidia@tegra-ubuntu:~/Desktop/tensorflow-r1.3/tensorflow/examples/tutorials/mnist$`\r\n"}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/15035", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/15035/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/15035/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/15035/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/15035", "id": 278428354, "node_id": "MDU6SXNzdWUyNzg0MjgzNTQ=", "number": 15035, "title": "NadamOptimizer does not work with sparse gradients", "user": {"login": "albertz", "id": 59132, "node_id": "MDQ6VXNlcjU5MTMy", "avatar_url": "https://avatars0.githubusercontent.com/u/59132?v=4", "gravatar_id": "", "url": "https://api.github.com/users/albertz", "html_url": "https://github.com/albertz", "followers_url": "https://api.github.com/users/albertz/followers", "following_url": "https://api.github.com/users/albertz/following{/other_user}", "gists_url": "https://api.github.com/users/albertz/gists{/gist_id}", "starred_url": "https://api.github.com/users/albertz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/albertz/subscriptions", "organizations_url": "https://api.github.com/users/albertz/orgs", "repos_url": "https://api.github.com/users/albertz/repos", "events_url": "https://api.github.com/users/albertz/events{/privacy}", "received_events_url": "https://api.github.com/users/albertz/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 299643928, "node_id": "MDU6TGFiZWwyOTk2NDM5Mjg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:contributions%20welcome", "name": "stat:contributions welcome", "color": "f4b400", "default": false, "description": ""}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2017-12-01T10:51:58Z", "updated_at": "2017-12-27T19:28:39Z", "closed_at": null, "author_association": "NONE", "body": "### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**: No\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**: Ubuntu 16.04\r\n- **TensorFlow installed from (source or binary)**: pip\r\n- **TensorFlow version (use command below)**: v1.4.0-rc1-11-g130a514 1.4.0\r\n- **Python version**: 3.6.3\r\n\r\nCode:\r\n```\r\nimport tensorflow as tf\r\nfrom tensorflow.contrib.opt import NadamOptimizer\r\n\r\noptimizer = NadamOptimizer(learning_rate=0.001)\r\n# optimizer = tf.train.AdamOptimizer(learning_rate=0.001)  # this works\r\nw = tf.get_variable(\"w\", shape=(100, 10))\r\nidxs = tf.placeholder(tf.int32, shape=(None,))\r\nemb = tf.gather(w, idxs)\r\nloss = tf.reduce_sum(emb ** 2)\r\nminimize = optimizer.minimize(loss)\r\n\r\nwith tf.Session() as sess:\r\n  sess.run(tf.global_variables_initializer())\r\n  sess.run(minimize, feed_dict={idxs: [1, 2, 3]})\r\n```\r\n\r\nThis fails with:\r\n```\r\n...\r\n  File \"/u/zeyer/.local/lib/python3.6/site-packages/tensorflow/contrib/opt/python/training/nadam_optimizer.py\", line 83, in _apply_sparse_shared\r\n    m_bar = m_scaled_g_values + beta1_t * m_t\r\n...\r\n\r\nInvalidArgumentError (see above for traceback): Incompatible shapes: [3,10] vs. [100,10]\r\n         [[Node: Adam/update_w/add = Add[T=DT_FLOAT, _class=[\"loc:@w\"], _device=\"/job:localhost/replica:0/task:0/device:GPU:0\"](Adam/update_w/mul_1, Adam/update_w/mul_3)]]\r\n```\r\n\r\nThe bug is pretty obvious in `nadam_optimizer.py`. The fix would be to do it like in `adam.py`:\r\n```\r\nm_t = state_ops.assign(m, m * beta1_t, use_locking=self._use_locking)\r\nwith ops.control_dependencies([m_t]):\r\n  m_t = scatter_add(m, indices, m_scaled_g_values)\r\n```\r\n\r\n"}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/15028", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/15028/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/15028/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/15028/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/15028", "id": 278383687, "node_id": "MDU6SXNzdWUyNzgzODM2ODc=", "number": 15028, "title": "ctc_loss with best align path", "user": {"login": "xushenkun", "id": 1085843, "node_id": "MDQ6VXNlcjEwODU4NDM=", "avatar_url": "https://avatars2.githubusercontent.com/u/1085843?v=4", "gravatar_id": "", "url": "https://api.github.com/users/xushenkun", "html_url": "https://github.com/xushenkun", "followers_url": "https://api.github.com/users/xushenkun/followers", "following_url": "https://api.github.com/users/xushenkun/following{/other_user}", "gists_url": "https://api.github.com/users/xushenkun/gists{/gist_id}", "starred_url": "https://api.github.com/users/xushenkun/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/xushenkun/subscriptions", "organizations_url": "https://api.github.com/users/xushenkun/orgs", "repos_url": "https://api.github.com/users/xushenkun/repos", "events_url": "https://api.github.com/users/xushenkun/events{/privacy}", "received_events_url": "https://api.github.com/users/xushenkun/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 299643928, "node_id": "MDU6TGFiZWwyOTk2NDM5Mjg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:contributions%20welcome", "name": "stat:contributions welcome", "color": "f4b400", "default": false, "description": ""}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2017-12-01T07:46:49Z", "updated_at": "2018-01-04T16:27:48Z", "closed_at": null, "author_association": "NONE", "body": "The tf.nn.ctc_loss function only returns negative log probabilities according to truth labels for the sequence's best align path. \r\nBut we also need this best align path in some situations.\r\nCould you please supply this feature, thanks!\r\n------------------------\r\n\r\n### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**:\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**: MINGW64_NT-6.1 xsk-PC 2.6.0(0.304/5/3) 2016-09-07 20:45 x86_64 Msys\r\n- **TensorFlow installed from (source or binary)**: binary\r\n- **TensorFlow version (use command below)**: 1.4.0\r\n- **Python version**: 3.6.0\r\n- **Bazel version (if compiling from source)**: None\r\n- **GCC/Compiler version (if compiling from source)**: None\r\n- **CUDA/cuDNN version**: None\r\n- **GPU model and memory**: None\r\n- **Exact command to reproduce**: None"}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/14998", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/14998/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/14998/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/14998/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/14998", "id": 278064105, "node_id": "MDU6SXNzdWUyNzgwNjQxMDU=", "number": 14998, "title": "Extend reshape with begin_axis and end_axis like in cntk", "user": {"login": "boeddeker", "id": 13744128, "node_id": "MDQ6VXNlcjEzNzQ0MTI4", "avatar_url": "https://avatars3.githubusercontent.com/u/13744128?v=4", "gravatar_id": "", "url": "https://api.github.com/users/boeddeker", "html_url": "https://github.com/boeddeker", "followers_url": "https://api.github.com/users/boeddeker/followers", "following_url": "https://api.github.com/users/boeddeker/following{/other_user}", "gists_url": "https://api.github.com/users/boeddeker/gists{/gist_id}", "starred_url": "https://api.github.com/users/boeddeker/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/boeddeker/subscriptions", "organizations_url": "https://api.github.com/users/boeddeker/orgs", "repos_url": "https://api.github.com/users/boeddeker/repos", "events_url": "https://api.github.com/users/boeddeker/events{/privacy}", "received_events_url": "https://api.github.com/users/boeddeker/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 299643928, "node_id": "MDU6TGFiZWwyOTk2NDM5Mjg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:contributions%20welcome", "name": "stat:contributions welcome", "color": "f4b400", "default": false, "description": ""}, {"id": 473173272, "node_id": "MDU6TGFiZWw0NzMxNzMyNzI=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:feature", "name": "type:feature", "color": "159b2e", "default": false, "description": ""}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 15, "created_at": "2017-11-30T10:11:22Z", "updated_at": "2018-01-03T10:20:09Z", "closed_at": null, "author_association": "CONTRIBUTOR", "body": "------------------------\r\n\r\n### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**: yes\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**: Linux Ubuntu 16.04\r\n- **TensorFlow installed from (source or binary)**: binary\r\n- **TensorFlow version (use command below)**: v1.4.0-rc1-11-g130a514 1.4.0\r\n- **Python version**: 3.6\r\n- **Bazel version (if compiling from source)**:\r\n- **GCC/Compiler version (if compiling from source)**:\r\n- **CUDA/cuDNN version**:\r\n- **GPU model and memory**:\r\n- **Exact command to reproduce**:\r\n\r\n### Describe the problem\r\nCNTK has a generalized version of reshape and it would be nice to have such a version also in Tensorflow\r\n(https://github.com/Microsoft/CNTK/blob/master/bindings/python/cntk/ops/__init__.py#L1972).\r\n```python\r\ndef reshape(x, shape, begin_axis=None, end_axis=None, name=''):\r\n    ...\r\n```\r\n\r\nThe difference is, that the user can provide `begin_axis` and `end_axis` and if they are specified reshape only operate on a subset of the shape.\r\n\r\nI can make a PR, when somebody says me, where I have to write the code.\r\n\r\n### Source code / logs\r\nHere a working example:\r\n```python\r\ndef reshape(tensor, shape, begin_axis=None, end_axis=None, name=None) -> tf.Tensor:\r\n    if begin_axis is None and end_axis is None:\r\n        return tf.reshape(tensor, shape, name=name)\r\n\r\n    with tf.name_scope(name, 'reshape', [tensor]):\r\n        tensor_shape = tf.shape(tensor)\r\n        to_concat = [shape]\r\n        if begin_axis is not None:\r\n            bs = tensor_shape[:begin_axis]\r\n            to_concat.insert(0, bs)\r\n        if end_axis is not None:\r\n            es = tensor_shape[end_axis:]\r\n            to_concat.append(es)\r\n\r\n        tensor_shape = tf.concat(to_concat, 0)\r\n\r\n        return = tf.reshape(tensor, tensor_shape)\r\n```\r\n\r\nand an example doctest\r\n```python\r\n    \"\"\"\r\n\r\n    Inspired from cntk.reshape to allow begin_axis and end_axis\r\n\r\n    Assume you call reshape\r\n    >> out = reshape(in, shape, b, e)\r\n    Than the following will hold\r\n    (Note: If b or e is None, the are interpreted as 0 and/or include the last axis)\r\n    >> in_shape = in.shape\r\n    >> in_shape[b:e] = shape\r\n    >> assert out.shape == in_shape\r\n\r\n    First example normal reshape, where the input has unknown dimension\r\n    >>> import numpy as np\r\n    >>> _ = tf.InteractiveSession()\r\n    >>> x = tf.placeholder(tf.float32)\r\n    >>> y = reshape(x, [-1])\r\n    >>> y\r\n    <tf.Tensor 'Reshape:0' shape=(?,) dtype=float32>\r\n    >>> y.eval({x: np.zeros([3, 4])}).shape\r\n    (12,)\r\n\r\n    Now keep first and last axis: (No shape inference expected, to difficult)\r\n    >>> y = reshape(x, [-1], begin_axis=1, end_axis=-1)\r\n    >>> y\r\n    <tf.Tensor 'reshape/Reshape:0' shape=<unknown> dtype=float32>\r\n    >>> y.eval({x: np.zeros([3, 4, 5, 6])}).shape\r\n    (3, 20, 6)\r\n\r\n    Now with ndim defined:\r\n    >>> x = tf.placeholder(tf.float32, shape=[None, None, None, None])\r\n    >>> y = reshape(x, [-1], begin_axis=1, end_axis=-1)\r\n    >>> y\r\n    <tf.Tensor 'reshape_1/Reshape:0' shape=(?, ?, ?) dtype=float32>\r\n    >>> y.eval({x: np.zeros([3, 4, 5, 6])}).shape\r\n    (3, 20, 6)\r\n\r\n    Now with partial defined shape:\r\n    >>> x = tf.placeholder(tf.float32, shape=[3, 4, None, 6])\r\n    >>> y = reshape(x, [-1], begin_axis=1, end_axis=-1)\r\n    >>> y\r\n    <tf.Tensor 'reshape_2/Reshape:0' shape=(3, ?, 6) dtype=float32>\r\n    >>> y.eval({x: np.zeros([3, 4, 5, 6])}).shape\r\n    (3, 20, 6)\r\n\r\n    Now with full defined shape:\r\n    >>> x = tf.placeholder(tf.float32, shape=[3, 4, 5, 6])\r\n    >>> y = reshape(x, [-1], begin_axis=1, end_axis=-1)\r\n    >>> y\r\n    <tf.Tensor 'reshape_3/Reshape:0' shape=(3, 20, 6) dtype=float32>\r\n    >>> y.eval({x: np.zeros([3, 4, 5, 6])}).shape\r\n    (3, 20, 6)\r\n\r\n    :param tensor:\r\n    :param shape:\r\n    :param name:\r\n    :return:\r\n    \"\"\"\r\n```\r\n"}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/14995", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/14995/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/14995/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/14995/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/14995", "id": 278038965, "node_id": "MDU6SXNzdWUyNzgwMzg5NjU=", "number": 14995, "title": "Bug: tf.estimator.Estimator.export_savedmodel does not work with pathlib.Path in py36", "user": {"login": "boeddeker", "id": 13744128, "node_id": "MDQ6VXNlcjEzNzQ0MTI4", "avatar_url": "https://avatars3.githubusercontent.com/u/13744128?v=4", "gravatar_id": "", "url": "https://api.github.com/users/boeddeker", "html_url": "https://github.com/boeddeker", "followers_url": "https://api.github.com/users/boeddeker/followers", "following_url": "https://api.github.com/users/boeddeker/following{/other_user}", "gists_url": "https://api.github.com/users/boeddeker/gists{/gist_id}", "starred_url": "https://api.github.com/users/boeddeker/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/boeddeker/subscriptions", "organizations_url": "https://api.github.com/users/boeddeker/orgs", "repos_url": "https://api.github.com/users/boeddeker/repos", "events_url": "https://api.github.com/users/boeddeker/events{/privacy}", "received_events_url": "https://api.github.com/users/boeddeker/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 299643928, "node_id": "MDU6TGFiZWwyOTk2NDM5Mjg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:contributions%20welcome", "name": "stat:contributions welcome", "color": "f4b400", "default": false, "description": ""}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 20, "created_at": "2017-11-30T08:43:15Z", "updated_at": "2018-06-10T18:55:38Z", "closed_at": null, "author_association": "CONTRIBUTOR", "body": "------------------------\r\n\r\n### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**: yes\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**: Linux Ubuntu 16.04\r\n- **TensorFlow installed from (source or binary)**:binary\r\n- **TensorFlow version (use command below)**: v1.4.0-rc1-11-g130a514 1.4.0\r\n- **Python version**: 3.6\r\n- **Bazel version (if compiling from source)**:\r\n- **GCC/Compiler version (if compiling from source)**:\r\n- **CUDA/cuDNN version**:\r\n- **GPU model and memory**:\r\n- **Exact command to reproduce**: \r\n\r\n### Describe the problem\r\nThe function `tf.estimator.Estimator.export_savedmodel` does not accept a `pathlib.Path` object, because \r\n`tensorflow.python.util.compat.as_bytes` used in `tensorflow.python.estimator.export.get_timestamped_export_dir` can not convert `pathlib.Path` to bytes.\r\nHere the code snippet from `tensorflow.python.estimator.export.get_timestamped_export_dir`:\r\n```python\r\n    export_dir = os.path.join(\r\n        compat.as_bytes(export_dir_base),\r\n        compat.as_bytes(str(export_timestamp)))\r\n```\r\nI would write a PR, but I am not sure how to solve this problem in Python2. The following works in Python3.6 (If I remember correctly it was py36, where `os.path` start to accept `pathlib.Path`):\r\n\r\n```python\r\n    export_dir = compat.as_bytes(os.path.join(\r\n        export_dir_base,\r\n        str(export_timestamp)))\r\n```\r\nSince the name `tensorflow.python.util.compat.as_bytes` does not imply that the input is a path, I am not sure if that would be a better place to solve the problem.\r\n\r\n### Source code / logs\r\nHere some pseudo code (I hope with this example the tensoflowers are able to reproduce this bug in py36): \r\n```python\r\nfrom pathlib import Path\r\ntf.estimator.Estimator(...).export_savedmodel(\r\n            Path('path/to/save'),\r\n            export_input_fn,\r\n            as_text=True,\r\n        )\r\n```"}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/14963", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/14963/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/14963/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/14963/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/14963", "id": 277640187, "node_id": "MDU6SXNzdWUyNzc2NDAxODc=", "number": 14963, "title": "Documentation of tf.nn.raw_rnn is confusing", "user": {"login": "akanimax", "id": 16590868, "node_id": "MDQ6VXNlcjE2NTkwODY4", "avatar_url": "https://avatars0.githubusercontent.com/u/16590868?v=4", "gravatar_id": "", "url": "https://api.github.com/users/akanimax", "html_url": "https://github.com/akanimax", "followers_url": "https://api.github.com/users/akanimax/followers", "following_url": "https://api.github.com/users/akanimax/following{/other_user}", "gists_url": "https://api.github.com/users/akanimax/gists{/gist_id}", "starred_url": "https://api.github.com/users/akanimax/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/akanimax/subscriptions", "organizations_url": "https://api.github.com/users/akanimax/orgs", "repos_url": "https://api.github.com/users/akanimax/repos", "events_url": "https://api.github.com/users/akanimax/events{/privacy}", "received_events_url": "https://api.github.com/users/akanimax/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 299643928, "node_id": "MDU6TGFiZWwyOTk2NDM5Mjg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:contributions%20welcome", "name": "stat:contributions welcome", "color": "f4b400", "default": false, "description": ""}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-11-29T06:08:00Z", "updated_at": "2017-11-30T03:50:04Z", "closed_at": null, "author_association": "CONTRIBUTOR", "body": "The documentation for the tf.nn.raw_rnn displays the following line as the pseudocode for the function:\r\n<br>\r\n`(finished, next_input, initial_state, _, loop_state) = loop_fn(\r\n    time=time, cell_output=None, cell_state=None, loop_state=None)`\r\n<br>\r\nThis is the first time the loop_fn is called by the raw_rnn interface. Here, the '_' for the emit_output returned by the loop_fn is a **_do not care_** for the function. This misleads the user into believing that returning `None` for the first time as the `emit_output` is OK.\r\n\r\nHowever, the actual code has the line:\r\n<br>\r\n`(elements_finished, next_input, initial_state, emit_structure,\r\n     init_loop_state) = loop_fn(\r\n         time, None, None, None)  # time, cell_output, cell_state, loop_state`\r\n<br>\r\nThe code uses the `emit_structure` from the `emit_output` that then determines the shape of the emitted output to be aggregated in the `emit_ta` array. \r\nSo, even for the first time the `loop_fn` needs to output a mock tensor for setting the shape of the output values.\r\n\r\nThe documentation needs to include this as going through the framework implementation for figuring this out is too tiresome. \r\n\r\nCheers!"}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/14934", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/14934/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/14934/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/14934/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/14934", "id": 277349916, "node_id": "MDU6SXNzdWUyNzczNDk5MTY=", "number": 14934, "title": "Multi-arch docker images", "user": {"login": "vaibhavsood", "id": 3442240, "node_id": "MDQ6VXNlcjM0NDIyNDA=", "avatar_url": "https://avatars2.githubusercontent.com/u/3442240?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vaibhavsood", "html_url": "https://github.com/vaibhavsood", "followers_url": "https://api.github.com/users/vaibhavsood/followers", "following_url": "https://api.github.com/users/vaibhavsood/following{/other_user}", "gists_url": "https://api.github.com/users/vaibhavsood/gists{/gist_id}", "starred_url": "https://api.github.com/users/vaibhavsood/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vaibhavsood/subscriptions", "organizations_url": "https://api.github.com/users/vaibhavsood/orgs", "repos_url": "https://api.github.com/users/vaibhavsood/repos", "events_url": "https://api.github.com/users/vaibhavsood/events{/privacy}", "received_events_url": "https://api.github.com/users/vaibhavsood/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 299643928, "node_id": "MDU6TGFiZWwyOTk2NDM5Mjg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:contributions%20welcome", "name": "stat:contributions welcome", "color": "f4b400", "default": false, "description": ""}, {"id": 473173351, "node_id": "MDU6TGFiZWw0NzMxNzMzNTE=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:build/install", "name": "type:build/install", "color": "159b2e", "default": false, "description": ""}], "state": "open", "locked": false, "assignee": {"login": "Harshini-Gadige", "id": 42781361, "node_id": "MDQ6VXNlcjQyNzgxMzYx", "avatar_url": "https://avatars1.githubusercontent.com/u/42781361?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Harshini-Gadige", "html_url": "https://github.com/Harshini-Gadige", "followers_url": "https://api.github.com/users/Harshini-Gadige/followers", "following_url": "https://api.github.com/users/Harshini-Gadige/following{/other_user}", "gists_url": "https://api.github.com/users/Harshini-Gadige/gists{/gist_id}", "starred_url": "https://api.github.com/users/Harshini-Gadige/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Harshini-Gadige/subscriptions", "organizations_url": "https://api.github.com/users/Harshini-Gadige/orgs", "repos_url": "https://api.github.com/users/Harshini-Gadige/repos", "events_url": "https://api.github.com/users/Harshini-Gadige/events{/privacy}", "received_events_url": "https://api.github.com/users/Harshini-Gadige/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "Harshini-Gadige", "id": 42781361, "node_id": "MDQ6VXNlcjQyNzgxMzYx", "avatar_url": "https://avatars1.githubusercontent.com/u/42781361?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Harshini-Gadige", "html_url": "https://github.com/Harshini-Gadige", "followers_url": "https://api.github.com/users/Harshini-Gadige/followers", "following_url": "https://api.github.com/users/Harshini-Gadige/following{/other_user}", "gists_url": "https://api.github.com/users/Harshini-Gadige/gists{/gist_id}", "starred_url": "https://api.github.com/users/Harshini-Gadige/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Harshini-Gadige/subscriptions", "organizations_url": "https://api.github.com/users/Harshini-Gadige/orgs", "repos_url": "https://api.github.com/users/Harshini-Gadige/repos", "events_url": "https://api.github.com/users/Harshini-Gadige/events{/privacy}", "received_events_url": "https://api.github.com/users/Harshini-Gadige/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 14, "created_at": "2017-11-28T11:26:51Z", "updated_at": "2019-03-05T05:31:10Z", "closed_at": null, "author_association": "CONTRIBUTOR", "body": "Are there non-x86 (ppc64le, arm etc) docker images available for tensorflow? \r\n\r\nThis looks like an intel image : https://hub.docker.com/r/tensorflow/tensorflow/\r\n\r\n"}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/14924", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/14924/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/14924/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/14924/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/14924", "id": 277168753, "node_id": "MDU6SXNzdWUyNzcxNjg3NTM=", "number": 14924, "title": "What is supported by broadcasting? Is the dimensions still limited?", "user": {"login": "gyang274", "id": 13155537, "node_id": "MDQ6VXNlcjEzMTU1NTM3", "avatar_url": "https://avatars2.githubusercontent.com/u/13155537?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gyang274", "html_url": "https://github.com/gyang274", "followers_url": "https://api.github.com/users/gyang274/followers", "following_url": "https://api.github.com/users/gyang274/following{/other_user}", "gists_url": "https://api.github.com/users/gyang274/gists{/gist_id}", "starred_url": "https://api.github.com/users/gyang274/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gyang274/subscriptions", "organizations_url": "https://api.github.com/users/gyang274/orgs", "repos_url": "https://api.github.com/users/gyang274/repos", "events_url": "https://api.github.com/users/gyang274/events{/privacy}", "received_events_url": "https://api.github.com/users/gyang274/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 473173272, "node_id": "MDU6TGFiZWw0NzMxNzMyNzI=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:feature", "name": "type:feature", "color": "159b2e", "default": false, "description": ""}], "state": "open", "locked": false, "assignee": {"login": "aselle", "id": 326106, "node_id": "MDQ6VXNlcjMyNjEwNg==", "avatar_url": "https://avatars1.githubusercontent.com/u/326106?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aselle", "html_url": "https://github.com/aselle", "followers_url": "https://api.github.com/users/aselle/followers", "following_url": "https://api.github.com/users/aselle/following{/other_user}", "gists_url": "https://api.github.com/users/aselle/gists{/gist_id}", "starred_url": "https://api.github.com/users/aselle/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aselle/subscriptions", "organizations_url": "https://api.github.com/users/aselle/orgs", "repos_url": "https://api.github.com/users/aselle/repos", "events_url": "https://api.github.com/users/aselle/events{/privacy}", "received_events_url": "https://api.github.com/users/aselle/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "aselle", "id": 326106, "node_id": "MDQ6VXNlcjMyNjEwNg==", "avatar_url": "https://avatars1.githubusercontent.com/u/326106?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aselle", "html_url": "https://github.com/aselle", "followers_url": "https://api.github.com/users/aselle/followers", "following_url": "https://api.github.com/users/aselle/following{/other_user}", "gists_url": "https://api.github.com/users/aselle/gists{/gist_id}", "starred_url": "https://api.github.com/users/aselle/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aselle/subscriptions", "organizations_url": "https://api.github.com/users/aselle/orgs", "repos_url": "https://api.github.com/users/aselle/repos", "events_url": "https://api.github.com/users/aselle/events{/privacy}", "received_events_url": "https://api.github.com/users/aselle/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 5, "created_at": "2017-11-27T21:06:06Z", "updated_at": "2018-12-07T18:47:22Z", "closed_at": null, "author_association": "NONE", "body": "This is related to issue #1519.\r\n\r\nThis is OK:\r\n\r\n```\r\nimport tensorflow as tf\r\nsess = tf.InteractiveSession()\r\nxx = tf.constant(1, shape=[32,1,4,4,1], dtype=tf.float32)\r\nyy = tf.constant(1, shape=[1,32,1,4,4], dtype=tf.float32)\r\nzz = xx * yy\r\nsess.run([zz])\r\n```\r\n\r\nHowever:\r\n```\r\nx2 = tf.constant(1, shape=[10,32,1,4,4,1])\r\ny2 = tf.constant(1, shape=[10,1,32,1,4,4])\r\nz2 = x2 * y2\r\nsess.run(z2)\r\n```\r\nGives an error:\r\n`UnimplementedError (see above for traceback): Broadcast between [10,32,1,4,4,1] and [10,1,32,1,4,4] is not supported yet.\r\n\t [[Node: mul_1 = Mul[T=DT_INT32, _device=\"/job:localhost/replica:0/task:0/device:CPU:0\"](Const_2, Const_3)]]`\r\n\r\nLog:\r\n```\r\n\r\n---------------------------------------------------------------------------\r\nUnimplementedError                        Traceback (most recent call last)\r\n<ipython-input-2-eef82717f8d8> in <module>()\r\n      2 y2 = tf.constant(1, shape=[10,1,32,1,4,4])\r\n      3 z2 = x2 * y2\r\n----> 4 sess.run(z2)\r\n\r\n/home/jetadmin/anaconda2/envs/ygtf/lib/python2.7/site-packages/tensorflow/python/client/session.pyc in run(self, fetches, feed_dict, options, run_metadata)\r\n    887     try:\r\n    888       result = self._run(None, fetches, feed_dict, options_ptr,\r\n--> 889                          run_metadata_ptr)\r\n    890       if run_metadata:\r\n    891         proto_data = tf_session.TF_GetBuffer(run_metadata_ptr)\r\n\r\n/home/jetadmin/anaconda2/envs/ygtf/lib/python2.7/site-packages/tensorflow/python/client/session.pyc in _run(self, handle, fetches, feed_dict, options, run_metadata)\r\n   1118     if final_fetches or final_targets or (handle and feed_dict_tensor):\r\n   1119       results = self._do_run(handle, final_targets, final_fetches,\r\n-> 1120                              feed_dict_tensor, options, run_metadata)\r\n   1121     else:\r\n   1122       results = []\r\n\r\n/home/jetadmin/anaconda2/envs/ygtf/lib/python2.7/site-packages/tensorflow/python/client/session.pyc in _do_run(self, handle, target_list, fetch_list, feed_dict, options, run_metadata)\r\n   1315     if handle is None:\r\n   1316       return self._do_call(_run_fn, self._session, feeds, fetches, targets,\r\n-> 1317                            options, run_metadata)\r\n   1318     else:\r\n   1319       return self._do_call(_prun_fn, self._session, handle, feeds, fetches)\r\n\r\n/home/jetadmin/anaconda2/envs/ygtf/lib/python2.7/site-packages/tensorflow/python/client/session.pyc in _do_call(self, fn, *args)\r\n   1334         except KeyError:\r\n   1335           pass\r\n-> 1336       raise type(e)(node_def, op, message)\r\n   1337 \r\n   1338   def _extend_graph(self):\r\n\r\nUnimplementedError: Broadcast between [10,32,1,4,4,1] and [10,1,32,1,4,4] is not supported yet.\r\n\t [[Node: mul_1 = Mul[T=DT_INT32, _device=\"/job:localhost/replica:0/task:0/device:CPU:0\"](Const_2, Const_3)]]\r\n\r\nCaused by op u'mul_1', defined at:\r\n  File \"/home/jetadmin/anaconda2/envs/ygtf/lib/python2.7/runpy.py\", line 174, in _run_module_as_main\r\n    \"__main__\", fname, loader, pkg_name)\r\n  File \"/home/jetadmin/anaconda2/envs/ygtf/lib/python2.7/runpy.py\", line 72, in _run_code\r\n    exec code in run_globals\r\n  File \"/home/jetadmin/anaconda2/envs/ygtf/lib/python2.7/site-packages/ipykernel/__main__.py\", line 3, in <module>\r\n    app.launch_new_instance()\r\n  File \"/home/jetadmin/anaconda2/envs/ygtf/lib/python2.7/site-packages/traitlets/config/application.py\", line 658, in launch_instance\r\n    app.start()\r\n  File \"/home/jetadmin/anaconda2/envs/ygtf/lib/python2.7/site-packages/ipykernel/kernelapp.py\", line 474, in start\r\n    ioloop.IOLoop.instance().start()\r\n  File \"/home/jetadmin/anaconda2/envs/ygtf/lib/python2.7/site-packages/zmq/eventloop/ioloop.py\", line 177, in start\r\n    super(ZMQIOLoop, self).start()\r\n  File \"/home/jetadmin/anaconda2/envs/ygtf/lib/python2.7/site-packages/tornado/ioloop.py\", line 887, in start\r\n    handler_func(fd_obj, events)\r\n  File \"/home/jetadmin/anaconda2/envs/ygtf/lib/python2.7/site-packages/tornado/stack_context.py\", line 275, in null_wrapper\r\n    return fn(*args, **kwargs)\r\n  File \"/home/jetadmin/anaconda2/envs/ygtf/lib/python2.7/site-packages/zmq/eventloop/zmqstream.py\", line 440, in _handle_events\r\n    self._handle_recv()\r\n  File \"/home/jetadmin/anaconda2/envs/ygtf/lib/python2.7/site-packages/zmq/eventloop/zmqstream.py\", line 472, in _handle_recv\r\n    self._run_callback(callback, msg)\r\n  File \"/home/jetadmin/anaconda2/envs/ygtf/lib/python2.7/site-packages/zmq/eventloop/zmqstream.py\", line 414, in _run_callback\r\n    callback(*args, **kwargs)\r\n  File \"/home/jetadmin/anaconda2/envs/ygtf/lib/python2.7/site-packages/tornado/stack_context.py\", line 275, in null_wrapper\r\n    return fn(*args, **kwargs)\r\n  File \"/home/jetadmin/anaconda2/envs/ygtf/lib/python2.7/site-packages/ipykernel/kernelbase.py\", line 276, in dispatcher\r\n    return self.dispatch_shell(stream, msg)\r\n  File \"/home/jetadmin/anaconda2/envs/ygtf/lib/python2.7/site-packages/ipykernel/kernelbase.py\", line 228, in dispatch_shell\r\n    handler(stream, idents, msg)\r\n  File \"/home/jetadmin/anaconda2/envs/ygtf/lib/python2.7/site-packages/ipykernel/kernelbase.py\", line 390, in execute_request\r\n    user_expressions, allow_stdin)\r\n  File \"/home/jetadmin/anaconda2/envs/ygtf/lib/python2.7/site-packages/ipykernel/ipkernel.py\", line 196, in do_execute\r\n    res = shell.run_cell(code, store_history=store_history, silent=silent)\r\n  File \"/home/jetadmin/anaconda2/envs/ygtf/lib/python2.7/site-packages/ipykernel/zmqshell.py\", line 501, in run_cell\r\n    return super(ZMQInteractiveShell, self).run_cell(*args, **kwargs)\r\n  File \"/home/jetadmin/anaconda2/envs/ygtf/lib/python2.7/site-packages/IPython/core/interactiveshell.py\", line 2717, in run_cell\r\n    interactivity=interactivity, compiler=compiler, result=result)\r\n  File \"/home/jetadmin/anaconda2/envs/ygtf/lib/python2.7/site-packages/IPython/core/interactiveshell.py\", line 2821, in run_ast_nodes\r\n    if self.run_code(code, result):\r\n  File \"/home/jetadmin/anaconda2/envs/ygtf/lib/python2.7/site-packages/IPython/core/interactiveshell.py\", line 2881, in run_code\r\n    exec(code_obj, self.user_global_ns, self.user_ns)\r\n  File \"<ipython-input-2-eef82717f8d8>\", line 3, in <module>\r\n    z2 = x2 * y2\r\n  File \"/home/jetadmin/anaconda2/envs/ygtf/lib/python2.7/site-packages/tensorflow/python/ops/math_ops.py\", line 894, in binary_op_wrapper\r\n    return func(x, y, name=name)\r\n  File \"/home/jetadmin/anaconda2/envs/ygtf/lib/python2.7/site-packages/tensorflow/python/ops/math_ops.py\", line 1117, in _mul_dispatch\r\n    return gen_math_ops._mul(x, y, name=name)\r\n  File \"/home/jetadmin/anaconda2/envs/ygtf/lib/python2.7/site-packages/tensorflow/python/ops/gen_math_ops.py\", line 2726, in _mul\r\n    \"Mul\", x=x, y=y, name=name)\r\n  File \"/home/jetadmin/anaconda2/envs/ygtf/lib/python2.7/site-packages/tensorflow/python/framework/op_def_library.py\", line 787, in _apply_op_helper\r\n    op_def=op_def)\r\n  File \"/home/jetadmin/anaconda2/envs/ygtf/lib/python2.7/site-packages/tensorflow/python/framework/ops.py\", line 2956, in create_op\r\n    op_def=op_def)\r\n  File \"/home/jetadmin/anaconda2/envs/ygtf/lib/python2.7/site-packages/tensorflow/python/framework/ops.py\", line 1470, in __init__\r\n    self._traceback = self._graph._extract_stack()  # pylint: disable=protected-access\r\n\r\nUnimplementedError (see above for traceback): Broadcast between [10,32,1,4,4,1] and [10,1,32,1,4,4] is not supported yet.\r\n\t [[Node: mul_1 = Mul[T=DT_INT32, _device=\"/job:localhost/replica:0/task:0/device:CPU:0\"](Const_2, Const_3)]]\r\n```"}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/14886", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/14886/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/14886/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/14886/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/14886", "id": 276816661, "node_id": "MDU6SXNzdWUyNzY4MTY2NjE=", "number": 14886, "title": "avg_pool ignores channel stride dimension, but max_pool does not", "user": {"login": "themightyoarfish", "id": 11613312, "node_id": "MDQ6VXNlcjExNjEzMzEy", "avatar_url": "https://avatars0.githubusercontent.com/u/11613312?v=4", "gravatar_id": "", "url": "https://api.github.com/users/themightyoarfish", "html_url": "https://github.com/themightyoarfish", "followers_url": "https://api.github.com/users/themightyoarfish/followers", "following_url": "https://api.github.com/users/themightyoarfish/following{/other_user}", "gists_url": "https://api.github.com/users/themightyoarfish/gists{/gist_id}", "starred_url": "https://api.github.com/users/themightyoarfish/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/themightyoarfish/subscriptions", "organizations_url": "https://api.github.com/users/themightyoarfish/orgs", "repos_url": "https://api.github.com/users/themightyoarfish/repos", "events_url": "https://api.github.com/users/themightyoarfish/events{/privacy}", "received_events_url": "https://api.github.com/users/themightyoarfish/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 299643928, "node_id": "MDU6TGFiZWwyOTk2NDM5Mjg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:contributions%20welcome", "name": "stat:contributions welcome", "color": "f4b400", "default": false, "description": ""}, {"id": 473172988, "node_id": "MDU6TGFiZWw0NzMxNzI5ODg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:bug", "name": "type:bug", "color": "159b2e", "default": false, "description": ""}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2017-11-26T11:11:25Z", "updated_at": "2018-02-11T00:58:34Z", "closed_at": null, "author_association": "CONTRIBUTOR", "body": "### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**: Yes\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**:Linux Ubuntu 16.04\r\n- **TensorFlow installed from (source or binary)**: binary (conda-tensorflow-gpu)\r\n- **TensorFlow version (use command below)**: `b'unknown' 1.3.0`\r\n- **Python version**: 3.6\r\n- **Bazel version (if compiling from source)**: N/A\r\n- **GCC/Compiler version (if compiling from source)**: N/A\r\n- **CUDA/cuDNN version**: 9/7\r\n- **GPU model and memory**: GeForce GTX 1050 Ti\r\n- **Exact command to reproduce**:\r\n```\r\nimport tensorflow as tf\r\n\r\nx = tf.get_variable('x', shape=(100, 32, 32, 64),\r\n        initializer=tf.constant_initializer(5), dtype=tf.float32)\r\nksize = (1, 2, 2, 2)\r\nstrides = (1, 2, 2, 2)\r\nmax_pool = tf.nn.max_pool(x, ksize, strides, padding='SAME')\r\navg_pool = tf.nn.avg_pool(x, ksize, strides, padding='SAME')\r\nprint(max_pool.shape)\r\nprint(avg_pool.shape)\r\n``` \r\n\r\nThe unexpected output is\r\n```\r\n(100, 16, 16, 32)\r\n(100, 16, 16, 64)\r\n```\r\n\r\nIt says [here](https://github.com/Hvass-Labs/TensorFlow-Tutorials/issues/19#issuecomment-274249942) that first and last stride dimension must be 1, but apparently it isn't implemented like this. If this is a feature, there should be consistent behaviour and documentation.\r\n\r\nLink to StackOverflow question: https://stackoverflow.com/q/47423172/2397253"}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/14879", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/14879/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/14879/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/14879/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/14879", "id": 276755717, "node_id": "MDU6SXNzdWUyNzY3NTU3MTc=", "number": 14879, "title": "Extend estimators.md to cover Keras", "user": {"login": "bhack", "id": 1710528, "node_id": "MDQ6VXNlcjE3MTA1Mjg=", "avatar_url": "https://avatars0.githubusercontent.com/u/1710528?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bhack", "html_url": "https://github.com/bhack", "followers_url": "https://api.github.com/users/bhack/followers", "following_url": "https://api.github.com/users/bhack/following{/other_user}", "gists_url": "https://api.github.com/users/bhack/gists{/gist_id}", "starred_url": "https://api.github.com/users/bhack/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bhack/subscriptions", "organizations_url": "https://api.github.com/users/bhack/orgs", "repos_url": "https://api.github.com/users/bhack/repos", "events_url": "https://api.github.com/users/bhack/events{/privacy}", "received_events_url": "https://api.github.com/users/bhack/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 299643928, "node_id": "MDU6TGFiZWwyOTk2NDM5Mjg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:contributions%20welcome", "name": "stat:contributions welcome", "color": "f4b400", "default": false, "description": ""}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 11, "created_at": "2017-11-25T14:54:11Z", "updated_at": "2018-01-23T23:00:13Z", "closed_at": null, "author_association": "CONTRIBUTOR", "body": "Can you extend the estimators.md tutorial to cover `tf.keras.estimator.model_to_estimator` use case?"}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/14851", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/14851/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/14851/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/14851/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/14851", "id": 276509008, "node_id": "MDU6SXNzdWUyNzY1MDkwMDg=", "number": 14851, "title": "Got NAN when calling embedding_lookup_sparse with weights and \"mean\" combiner", "user": {"login": "zhangyafeikimi", "id": 998536, "node_id": "MDQ6VXNlcjk5ODUzNg==", "avatar_url": "https://avatars2.githubusercontent.com/u/998536?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zhangyafeikimi", "html_url": "https://github.com/zhangyafeikimi", "followers_url": "https://api.github.com/users/zhangyafeikimi/followers", "following_url": "https://api.github.com/users/zhangyafeikimi/following{/other_user}", "gists_url": "https://api.github.com/users/zhangyafeikimi/gists{/gist_id}", "starred_url": "https://api.github.com/users/zhangyafeikimi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zhangyafeikimi/subscriptions", "organizations_url": "https://api.github.com/users/zhangyafeikimi/orgs", "repos_url": "https://api.github.com/users/zhangyafeikimi/repos", "events_url": "https://api.github.com/users/zhangyafeikimi/events{/privacy}", "received_events_url": "https://api.github.com/users/zhangyafeikimi/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 299643928, "node_id": "MDU6TGFiZWwyOTk2NDM5Mjg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:contributions%20welcome", "name": "stat:contributions welcome", "color": "f4b400", "default": false, "description": ""}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 13, "created_at": "2017-11-24T03:53:11Z", "updated_at": "2018-02-21T02:19:21Z", "closed_at": null, "author_association": "NONE", "body": "### System information\r\n- **OS Platform and Distribution**: Win7 64bit\r\n- **TensorFlow installed from**: anaconda binary\r\n- **TensorFlow version**: 1.2.1\r\n- **Python version**: 3.6\r\n\r\n### Describe the problem\r\nI always got nan when I call embedding_lookup_sparse with weights and \"mean\" combiner.\r\nCode pieces are listed below:\r\n\r\n### Source code / logs\r\nfrom __future__ import absolute_import\r\nfrom __future__ import print_function\r\nimport os\r\nimport numpy as np\r\nimport tensorflow as tf\r\nos.environ['TF_CPP_MIN_LOG_LEVEL'] = '3'\r\n\r\na = np.arange(192).reshape(24, 8)\r\nprint(a)\r\n\r\na = tf.Variable(a, dtype=tf.float32)\r\nids = tf.SparseTensor(\r\n    indices=[[1, 0], [2, 0], [2, 1], [2, 2], [3, 0], [9, 1]],\r\n    values=[10, 1, 2, 3, 4, 5],\r\n    dense_shape=[1, 1])\r\nweights = tf.SparseTensor(\r\n    indices=[[1, 0], [2, 0], [2, 1], [2, 2], [3, 0], [9, 1]],\r\n    values=[1, 0.2, 0.4, 0.4, 1, 1],\r\n    dense_shape=[1, 1])\r\nb = tf.nn.embedding_lookup_sparse(\r\n    a, ids, weights, partition_strategy='mod', combiner='sum')\r\nc = tf.pad(b, [[0, 16 - tf.shape(b)[0]], [0, 0]], mode='CONSTANT')\r\n\r\nsess = tf.Session()\r\nsess.run(tf.global_variables_initializer())\r\n[value] = sess.run([c])\r\nprint(value)\r\n"}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/14784", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/14784/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/14784/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/14784/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/14784", "id": 275961732, "node_id": "MDU6SXNzdWUyNzU5NjE3MzI=", "number": 14784, "title": "Does TF provide C++ interface corresponding to the Python ops \"tensorflow.nn.ctc_greedy_decoder\"?", "user": {"login": "lipond", "id": 7008933, "node_id": "MDQ6VXNlcjcwMDg5MzM=", "avatar_url": "https://avatars0.githubusercontent.com/u/7008933?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lipond", "html_url": "https://github.com/lipond", "followers_url": "https://api.github.com/users/lipond/followers", "following_url": "https://api.github.com/users/lipond/following{/other_user}", "gists_url": "https://api.github.com/users/lipond/gists{/gist_id}", "starred_url": "https://api.github.com/users/lipond/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lipond/subscriptions", "organizations_url": "https://api.github.com/users/lipond/orgs", "repos_url": "https://api.github.com/users/lipond/repos", "events_url": "https://api.github.com/users/lipond/events{/privacy}", "received_events_url": "https://api.github.com/users/lipond/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 299643928, "node_id": "MDU6TGFiZWwyOTk2NDM5Mjg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:contributions%20welcome", "name": "stat:contributions welcome", "color": "f4b400", "default": false, "description": ""}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2017-11-22T06:51:22Z", "updated_at": "2018-01-31T22:24:34Z", "closed_at": null, "author_association": "NONE", "body": "As the title, thanksss!"}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/14775", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/14775/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/14775/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/14775/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/14775", "id": 275897846, "node_id": "MDU6SXNzdWUyNzU4OTc4NDY=", "number": 14775, "title": "tf.set_random_seed doesn't work after any operations have been constructed", "user": {"login": "darknoon", "id": 355540, "node_id": "MDQ6VXNlcjM1NTU0MA==", "avatar_url": "https://avatars2.githubusercontent.com/u/355540?v=4", "gravatar_id": "", "url": "https://api.github.com/users/darknoon", "html_url": "https://github.com/darknoon", "followers_url": "https://api.github.com/users/darknoon/followers", "following_url": "https://api.github.com/users/darknoon/following{/other_user}", "gists_url": "https://api.github.com/users/darknoon/gists{/gist_id}", "starred_url": "https://api.github.com/users/darknoon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/darknoon/subscriptions", "organizations_url": "https://api.github.com/users/darknoon/orgs", "repos_url": "https://api.github.com/users/darknoon/repos", "events_url": "https://api.github.com/users/darknoon/events{/privacy}", "received_events_url": "https://api.github.com/users/darknoon/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 299643928, "node_id": "MDU6TGFiZWwyOTk2NDM5Mjg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:contributions%20welcome", "name": "stat:contributions welcome", "color": "f4b400", "default": false, "description": ""}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2017-11-21T23:43:47Z", "updated_at": "2018-01-19T00:47:27Z", "closed_at": null, "author_association": "NONE", "body": "### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**:\r\nYes, just switching the order of this:\r\n```\r\ntf.set_random_seed(1234)\r\na = tf.random_uniform([1])\r\nb = tf.random_normal([1])\r\n```\r\n\r\nto this:\r\n\r\n```\r\na = tf.random_uniform([1])\r\nb = tf.random_normal([1])\r\ntf.set_random_seed(1234)\r\n```\r\n\r\nin this example:\r\n\r\nhttps://www.tensorflow.org/api_docs/python/tf/set_random_seed\r\n\r\nNo longer sets the seed.\r\n\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**:\r\n- **TensorFlow installed from (source or binary)**:\r\n\r\nBinary via pip\r\n\r\n- **TensorFlow version (use command below)**:\r\n```\r\n$ python -c \"import tensorflow as tf; print(tf.GIT_VERSION, tf.VERSION)\"\r\nv1.3.0-rc2-20-g0787eee 1.3.0\r\n```\r\n\r\n- **Python version**: \r\n```\r\n$ python --version\r\nPython 3.6.1\r\n```\r\n\r\n- **Bazel version (if compiling from source)**:\r\nn/a\r\n- **GCC/Compiler version (if compiling from source)**:\r\nn/a\r\n- **CUDA/cuDNN version**:\r\nn/a\r\n- **GPU model and memory**:\r\nn/a\r\n\r\n- **Exact command to reproduce**:\r\n`python tf-test.py`\r\n\r\nwhere tf-test is below:\r\n\r\n\r\n\r\n\r\nYou can collect some of this information using our environment capture script:\r\n\r\nhttps://github.com/tensorflow/tensorflow/tree/master/tools/tf_env_collect.sh\r\n\r\nYou can obtain the TensorFlow version with\r\n\r\npython -c \"import tensorflow as tf; print(tf.GIT_VERSION, tf.VERSION)\"\r\n\r\n### Describe the problem\r\n\r\nIf we would like to deterministically run a tensorflow graph, we want to be able to pass in the seed without rebuilding the graph from scratch (which is slow in our interactive application).\r\n\r\nAlso, this ordering constraint makes it tricky to debug what's going on and no mention is given to the fact that the seed is read in the op _creation_ not _execution_ in the documentation as far as I can tell.\r\n\r\n### Source code / logs\r\nInclude any logs or source code that would be helpful to diagnose the problem. If including tracebacks, please include the full traceback. Large logs and files should be attached. Try to provide a reproducible test case that is the bare minimum necessary to generate the problem.\r\n\r\nAs written on example page:\r\n\r\n```\r\n$ python tf-test.py \r\nSession 1\r\n2017-11-21 15:38:24.133822: W tensorflow/core/platform/cpu_feature_guard.cc:45] The TensorFlow library wasn't compiled to use SSE4.2 instructions, but these are available on your machine and could speed up CPU computations.\r\n2017-11-21 15:38:24.133854: W tensorflow/core/platform/cpu_feature_guard.cc:45] The TensorFlow library wasn't compiled to use AVX instructions, but these are available on your machine and could speed up CPU computations.\r\n[ 0.96046877]\r\n[ 0.83621562]\r\n[ 0.4987599]\r\n[ 0.54880583]\r\nSession 2\r\n[ 0.96046877]\r\n[ 0.83621562]\r\n[ 0.4987599]\r\n[ 0.54880583]\r\n\r\n\r\n```\r\n\r\n\r\nWith `set_random_seed` after:\r\n```\r\n$ python tf-test.py \r\nSession 1\r\n2017-11-21 15:41:57.602615: W tensorflow/core/platform/cpu_feature_guard.cc:45] The TensorFlow library wasn't compiled to use SSE4.2 instructions, but these are available on your machine and could speed up CPU computations.\r\n2017-11-21 15:41:57.602638: W tensorflow/core/platform/cpu_feature_guard.cc:45] The TensorFlow library wasn't compiled to use AVX instructions, but these are available on your machine and could speed up CPU computations.\r\n[ 0.53137994]\r\n[ 0.32236636]\r\n[ 1.07008374]\r\n[ 0.49122357]\r\nSession 2\r\n[ 0.07862437]\r\n[ 0.18420935]\r\n[ 0.76287955]\r\n[ 0.47924194]\r\n```\r\n\r\n\r\n\r\nFull tf-test.py:\r\n\r\n```\r\nimport tensorflow as tf\r\n\r\na = tf.random_uniform([1])\r\nb = tf.random_normal([1])\r\n\r\ntf.set_random_seed(1234)\r\n\r\n# Repeatedly running this block with the same graph will generate the same\r\n# sequences of 'a' and 'b'.\r\nprint(\"Session 1\")\r\nwith tf.Session() as sess1:\r\n  print(sess1.run(a))  # generates 'A1'\r\n  print(sess1.run(a))  # generates 'A2'\r\n  print(sess1.run(b))  # generates 'B1'\r\n  print(sess1.run(b))  # generates 'B2'\r\n\r\nprint(\"Session 2\")\r\nwith tf.Session() as sess2:\r\n  print(sess2.run(a))  # generates 'A1'\r\n  print(sess2.run(a))  # generates 'A2'\r\n  print(sess2.run(b))  # generates 'B1'\r\n  print(sess2.run(b))  # generates 'B2'\r\n```"}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/14749", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/14749/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/14749/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/14749/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/14749", "id": 275652020, "node_id": "MDU6SXNzdWUyNzU2NTIwMjA=", "number": 14749, "title": "Feature Request : Hierarchical Softmax implementation using Tensorflow", "user": {"login": "paduvi", "id": 15514657, "node_id": "MDQ6VXNlcjE1NTE0NjU3", "avatar_url": "https://avatars1.githubusercontent.com/u/15514657?v=4", "gravatar_id": "", "url": "https://api.github.com/users/paduvi", "html_url": "https://github.com/paduvi", "followers_url": "https://api.github.com/users/paduvi/followers", "following_url": "https://api.github.com/users/paduvi/following{/other_user}", "gists_url": "https://api.github.com/users/paduvi/gists{/gist_id}", "starred_url": "https://api.github.com/users/paduvi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/paduvi/subscriptions", "organizations_url": "https://api.github.com/users/paduvi/orgs", "repos_url": "https://api.github.com/users/paduvi/repos", "events_url": "https://api.github.com/users/paduvi/events{/privacy}", "received_events_url": "https://api.github.com/users/paduvi/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 299643928, "node_id": "MDU6TGFiZWwyOTk2NDM5Mjg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:contributions%20welcome", "name": "stat:contributions welcome", "color": "f4b400", "default": false, "description": ""}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-11-21T10:05:43Z", "updated_at": "2018-07-25T11:20:24Z", "closed_at": null, "author_association": "NONE", "body": "I am trying to multi-level classify with Hierarchical Softmax by using Tensorflow. But I could find any existing HS implementation in Tensorflow.\r\n\r\nIs there any other way to implement HS using tensorflow?\r\n\r\nIt would be helpful if Hierarchical Softmax support is given in TF."}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/14675", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/14675/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/14675/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/14675/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/14675", "id": 275027016, "node_id": "MDU6SXNzdWUyNzUwMjcwMTY=", "number": 14675, "title": "Small change to graph changes initial values of variables", "user": {"login": "eamartin", "id": 287200, "node_id": "MDQ6VXNlcjI4NzIwMA==", "avatar_url": "https://avatars2.githubusercontent.com/u/287200?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eamartin", "html_url": "https://github.com/eamartin", "followers_url": "https://api.github.com/users/eamartin/followers", "following_url": "https://api.github.com/users/eamartin/following{/other_user}", "gists_url": "https://api.github.com/users/eamartin/gists{/gist_id}", "starred_url": "https://api.github.com/users/eamartin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eamartin/subscriptions", "organizations_url": "https://api.github.com/users/eamartin/orgs", "repos_url": "https://api.github.com/users/eamartin/repos", "events_url": "https://api.github.com/users/eamartin/events{/privacy}", "received_events_url": "https://api.github.com/users/eamartin/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": {"login": "asimshankar", "id": 16018, "node_id": "MDQ6VXNlcjE2MDE4", "avatar_url": "https://avatars2.githubusercontent.com/u/16018?v=4", "gravatar_id": "", "url": "https://api.github.com/users/asimshankar", "html_url": "https://github.com/asimshankar", "followers_url": "https://api.github.com/users/asimshankar/followers", "following_url": "https://api.github.com/users/asimshankar/following{/other_user}", "gists_url": "https://api.github.com/users/asimshankar/gists{/gist_id}", "starred_url": "https://api.github.com/users/asimshankar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/asimshankar/subscriptions", "organizations_url": "https://api.github.com/users/asimshankar/orgs", "repos_url": "https://api.github.com/users/asimshankar/repos", "events_url": "https://api.github.com/users/asimshankar/events{/privacy}", "received_events_url": "https://api.github.com/users/asimshankar/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "asimshankar", "id": 16018, "node_id": "MDQ6VXNlcjE2MDE4", "avatar_url": "https://avatars2.githubusercontent.com/u/16018?v=4", "gravatar_id": "", "url": "https://api.github.com/users/asimshankar", "html_url": "https://github.com/asimshankar", "followers_url": "https://api.github.com/users/asimshankar/followers", "following_url": "https://api.github.com/users/asimshankar/following{/other_user}", "gists_url": "https://api.github.com/users/asimshankar/gists{/gist_id}", "starred_url": "https://api.github.com/users/asimshankar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/asimshankar/subscriptions", "organizations_url": "https://api.github.com/users/asimshankar/orgs", "repos_url": "https://api.github.com/users/asimshankar/repos", "events_url": "https://api.github.com/users/asimshankar/events{/privacy}", "received_events_url": "https://api.github.com/users/asimshankar/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 14, "created_at": "2017-11-17T23:31:21Z", "updated_at": "2018-12-20T18:45:16Z", "closed_at": null, "author_association": "NONE", "body": "I'm running TensorFlow 1.2 with CUDA.\r\n\r\nError case:\r\nI call ``tf.set_random_seed(2017)`` and then build a graph ``g1`` that includes trainable variables and an optimizer. I create a session, run the ``tf.global_variables_initializer()`` op, and then immediately fetch the value of a scalar variable (without running any train steps, so this is the initial value of the variable). As expected, this value stays the same if I launch this process multiple times.\r\n\r\nI then build a graph ``g2`` that is identical to ``g1`` except for a slight change. ``g1`` contained ``mu = tf.reduce_sum(x) / tf.size(x)[0]``, and ``g2`` contains ``mu = tf.reduce_mean(x)``. ``g2`` is seeded the same way as ``g1`` and has the same variable names and shapes as ``g1``. The only differently named tensors are those relating to the modification mentioned above. When I fetch the initial value of the same scalar variable from ``g2``, there is a completely different value from when fetched from ``g1``.\r\n\r\nI've tried to isolate this into a small test case but have not been successful yet. I will continue to work on this. Apologies for bug report without test case.\r\nMy current intention is to workaround this with a Numpy based initialization scheme.\r\n\r\nQuestions:\r\n(1) Is this expected behavior? Ideally the variables would be initialized in the same way to help make results more reproducible. In my case, the different variable initialization makes it more difficult to test that ``g1`` and ``g2`` produce the same values. If variables were initialized the same way, would be easy to see that refactoring the mean computation in the graph did not break anything.\r\n\r\n(2) Any idea why this occurs? Perhaps relevantly, ``tf.make_template`` is used within this graph. My current (evidence-free) hunch is the small change in graph causes a variable to move from CPU resident to GPU resident and caused a different PRNG kernel (provided with the same seed) to be used."}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/14663", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/14663/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/14663/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/14663/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/14663", "id": 274966639, "node_id": "MDU6SXNzdWUyNzQ5NjY2Mzk=", "number": 14663, "title": "DropoutWrapper and dynamic_rnn with parallel iterations not reproducible", "user": {"login": "alanhdu", "id": 1914111, "node_id": "MDQ6VXNlcjE5MTQxMTE=", "avatar_url": "https://avatars1.githubusercontent.com/u/1914111?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alanhdu", "html_url": "https://github.com/alanhdu", "followers_url": "https://api.github.com/users/alanhdu/followers", "following_url": "https://api.github.com/users/alanhdu/following{/other_user}", "gists_url": "https://api.github.com/users/alanhdu/gists{/gist_id}", "starred_url": "https://api.github.com/users/alanhdu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alanhdu/subscriptions", "organizations_url": "https://api.github.com/users/alanhdu/orgs", "repos_url": "https://api.github.com/users/alanhdu/repos", "events_url": "https://api.github.com/users/alanhdu/events{/privacy}", "received_events_url": "https://api.github.com/users/alanhdu/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 299643928, "node_id": "MDU6TGFiZWwyOTk2NDM5Mjg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:contributions%20welcome", "name": "stat:contributions welcome", "color": "f4b400", "default": false, "description": ""}], "state": "open", "locked": false, "assignee": {"login": "ebrevdo", "id": 1794715, "node_id": "MDQ6VXNlcjE3OTQ3MTU=", "avatar_url": "https://avatars0.githubusercontent.com/u/1794715?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ebrevdo", "html_url": "https://github.com/ebrevdo", "followers_url": "https://api.github.com/users/ebrevdo/followers", "following_url": "https://api.github.com/users/ebrevdo/following{/other_user}", "gists_url": "https://api.github.com/users/ebrevdo/gists{/gist_id}", "starred_url": "https://api.github.com/users/ebrevdo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ebrevdo/subscriptions", "organizations_url": "https://api.github.com/users/ebrevdo/orgs", "repos_url": "https://api.github.com/users/ebrevdo/repos", "events_url": "https://api.github.com/users/ebrevdo/events{/privacy}", "received_events_url": "https://api.github.com/users/ebrevdo/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "ebrevdo", "id": 1794715, "node_id": "MDQ6VXNlcjE3OTQ3MTU=", "avatar_url": "https://avatars0.githubusercontent.com/u/1794715?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ebrevdo", "html_url": "https://github.com/ebrevdo", "followers_url": "https://api.github.com/users/ebrevdo/followers", "following_url": "https://api.github.com/users/ebrevdo/following{/other_user}", "gists_url": "https://api.github.com/users/ebrevdo/gists{/gist_id}", "starred_url": "https://api.github.com/users/ebrevdo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ebrevdo/subscriptions", "organizations_url": "https://api.github.com/users/ebrevdo/orgs", "repos_url": "https://api.github.com/users/ebrevdo/repos", "events_url": "https://api.github.com/users/ebrevdo/events{/privacy}", "received_events_url": "https://api.github.com/users/ebrevdo/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 9, "created_at": "2017-11-17T19:10:56Z", "updated_at": "2018-12-07T18:47:17Z", "closed_at": null, "author_association": "CONTRIBUTOR", "body": "### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**: Yes\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**: Ubuntu 16.04\r\n- **TensorFlow installed from (source or binary)**: CPU Binary (pip wheel)\r\n- **TensorFlow version (use command below)**: v1.4.0-rc1-11-g130a514 1.4.0\r\n- **Python version**: 3.6.3 and 3.5.2\r\n- **CUDA/cuDNN version**: N/A\r\n- **GPU model and memory**: N/A\r\n- **Exact command to reproduce**:\r\nThe following script fails with an assertion error, even though I've explicitly set the random seed:\r\n```python\r\nimport tensorflow as tf\r\nimport numpy as np\r\n\r\ndef run():\r\n    tf.reset_default_graph()\r\n    tf.set_random_seed(0)\r\n\r\n    sess = tf.Session()\r\n    x = tf.placeholder(tf.float32, [None, None, 1])\r\n    cell = tf.nn.rnn_cell.DropoutWrapper(\r\n        tf.nn.rnn_cell.LSTMCell(100), input_keep_prob=0.5)\r\n    output, state = tf.nn.dynamic_rnn(\r\n        cell, x, dtype=tf.float32, parallel_iterations=100)\r\n    # if parallel_iterations=1, then everything works\r\n\r\n    sess.run(tf.global_variables_initializer())\r\n    return sess.run([output, state], {x: np.arange(100).reshape(1, 100, 1)})\r\n\r\no1, (c1, h1) = run()\r\no2, (c2, h2) = run()\r\n  \r\nassert (o1 == o2).all()\r\nassert (c1 == c2).all()\r\nassert (h1 == h2).all()\r\n```\r\n\r\n### Describe the problem\r\nIt looks like using parallel iterations options creates some non-determinism when using `DropoutWrapper` (and `parallel_iterations=32` by default). Ideally, when setting the random seed, all TensorFlow operations should be deterministic and reproducible (or the non-determinism should at least be documented).\r\n\r\ncc @tudorgt @adamAlnatsheh"}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/14659", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/14659/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/14659/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/14659/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/14659", "id": 274949928, "node_id": "MDU6SXNzdWUyNzQ5NDk5Mjg=", "number": 14659, "title": "Feature request: tf.nn.ctc_loss lacks the API to handle sequences with all blanks", "user": {"login": "xilinli", "id": 20463706, "node_id": "MDQ6VXNlcjIwNDYzNzA2", "avatar_url": "https://avatars2.githubusercontent.com/u/20463706?v=4", "gravatar_id": "", "url": "https://api.github.com/users/xilinli", "html_url": "https://github.com/xilinli", "followers_url": "https://api.github.com/users/xilinli/followers", "following_url": "https://api.github.com/users/xilinli/following{/other_user}", "gists_url": "https://api.github.com/users/xilinli/gists{/gist_id}", "starred_url": "https://api.github.com/users/xilinli/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/xilinli/subscriptions", "organizations_url": "https://api.github.com/users/xilinli/orgs", "repos_url": "https://api.github.com/users/xilinli/repos", "events_url": "https://api.github.com/users/xilinli/events{/privacy}", "received_events_url": "https://api.github.com/users/xilinli/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 299643928, "node_id": "MDU6TGFiZWwyOTk2NDM5Mjg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:contributions%20welcome", "name": "stat:contributions welcome", "color": "f4b400", "default": false, "description": ""}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 12, "created_at": "2017-11-17T18:09:19Z", "updated_at": "2019-09-05T10:20:54Z", "closed_at": null, "author_association": "NONE", "body": "It is trivial to calculate the CTC loss of a sequence with all blanks. But tf.nn.ctc_loss cannot handle the situation that one or more sequences in the batch have no non-blank labels. This is a big limitation.   \r\n\r\nP.S.: I pulled these requests before:\r\nI reported this previously at\r\nhttps://github.com/tensorflow/tensorflow/issues/13457\r\nI asked this on stackoverflow\r\nhttps://stackoverflow.com/questions/46652720/how-to-calculate-ctc-loss-of-a-sequence-with-all-blanks-using-tf-nn-ctc-loss  "}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/14584", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/14584/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/14584/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/14584/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/14584", "id": 274157848, "node_id": "MDU6SXNzdWUyNzQxNTc4NDg=", "number": 14584, "title": "Contradicting behaviour in variations of tf.cond usage with tf.nn.static_state_saving_rnn", "user": {"login": "dakshvar22", "id": 8708249, "node_id": "MDQ6VXNlcjg3MDgyNDk=", "avatar_url": "https://avatars0.githubusercontent.com/u/8708249?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dakshvar22", "html_url": "https://github.com/dakshvar22", "followers_url": "https://api.github.com/users/dakshvar22/followers", "following_url": "https://api.github.com/users/dakshvar22/following{/other_user}", "gists_url": "https://api.github.com/users/dakshvar22/gists{/gist_id}", "starred_url": "https://api.github.com/users/dakshvar22/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dakshvar22/subscriptions", "organizations_url": "https://api.github.com/users/dakshvar22/orgs", "repos_url": "https://api.github.com/users/dakshvar22/repos", "events_url": "https://api.github.com/users/dakshvar22/events{/privacy}", "received_events_url": "https://api.github.com/users/dakshvar22/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": {"login": "skye", "id": 88808, "node_id": "MDQ6VXNlcjg4ODA4", "avatar_url": "https://avatars1.githubusercontent.com/u/88808?v=4", "gravatar_id": "", "url": "https://api.github.com/users/skye", "html_url": "https://github.com/skye", "followers_url": "https://api.github.com/users/skye/followers", "following_url": "https://api.github.com/users/skye/following{/other_user}", "gists_url": "https://api.github.com/users/skye/gists{/gist_id}", "starred_url": "https://api.github.com/users/skye/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/skye/subscriptions", "organizations_url": "https://api.github.com/users/skye/orgs", "repos_url": "https://api.github.com/users/skye/repos", "events_url": "https://api.github.com/users/skye/events{/privacy}", "received_events_url": "https://api.github.com/users/skye/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "skye", "id": 88808, "node_id": "MDQ6VXNlcjg4ODA4", "avatar_url": "https://avatars1.githubusercontent.com/u/88808?v=4", "gravatar_id": "", "url": "https://api.github.com/users/skye", "html_url": "https://github.com/skye", "followers_url": "https://api.github.com/users/skye/followers", "following_url": "https://api.github.com/users/skye/following{/other_user}", "gists_url": "https://api.github.com/users/skye/gists{/gist_id}", "starred_url": "https://api.github.com/users/skye/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/skye/subscriptions", "organizations_url": "https://api.github.com/users/skye/orgs", "repos_url": "https://api.github.com/users/skye/repos", "events_url": "https://api.github.com/users/skye/events{/privacy}", "received_events_url": "https://api.github.com/users/skye/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 7, "created_at": "2017-11-15T13:34:08Z", "updated_at": "2018-12-14T18:49:38Z", "closed_at": null, "author_association": "NONE", "body": "[Model.txt](https://github.com/tensorflow/tensorflow/files/1474854/Model.txt)\r\n[Training.txt](https://github.com/tensorflow/tensorflow/files/1474855/Training.txt)\r\n\r\n### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**: Custom\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**: Linux Ubuntu 16.04\r\n- **TensorFlow installed from (source or binary)**: Binary\r\n- **TensorFlow version (use command below)**: 1.2/1.3/1.4 (tested on all)\r\n- **Bazel Version** : N/A\r\n- **Python version**: 2.7\r\n- **CUDA/cuDNN version**: Cuda 8, CuDNN 6\r\n- **GPU model and memory**: GeForce GTX 1080 , 12 GB\r\n- **Exact command to reproduce**: python Training.py\r\n\r\n### Problem\r\nI am dealing with long sequential data which has to be passed to an RNN. To do truncated BPTT and batching, I am using tf.contrib.training.batch_sequences_with_states API with tf.nn.static_state_saving_rnn API to transfer RNN state information to subsequent segments of the same sequence. I am using tf.RandomShuffleQueue() to store my data and to decouple the I/O from training I am running the enqueue operations asynchronously in a different thread. \r\n\r\nTo facilitate a testing run after each training epoch I am using two separate `tf.RandomShuffleQueue()` structures and hence two different `tf.contrib.training.batch_sequences_with_states()` and `tf.nn.static_state_saving_rnn()` instances for train/test data correspondingly. Just the RNN cell which is passed to `tf.nn.static_state_saving_rnn` instances remains the same, so that the modified set of weights are used at test time.\r\n\r\nMoreover, I use a placeholder which is a boolean flag using which the appropriate nodes in the computation graph are switched at train/test time. This switching is done using `tf.cond()` operation.\r\n\r\n#### Situation 1\r\n\r\nThe problem is that of a deadlock situation at a specific stage between the enqueue operations and training operations, both running in separate threads. The enqueue operation timeouts mostly because the queue has reached the maximum capacity and for some reason training operation never returns and is waiting to get some more data and hence no dequeue operation is called.\r\n\r\n#### Situation 2\r\n\r\nIn file Model.py, if I uncomment the lines from 97-101 and comment line 104, then there is no such deadlock situation. The only difference is in the way that specific `tf.cond()` operation is written. One is in a declarative form(working code) and other is in an inline form(broken/deadlock code).\r\n\r\n#### Situation 3\r\n\r\nIn file - Training.py, dummy data is generated by the `gen_data()` procedure(lines - 43-48) and called on line 61. The second parameter to this function is the number of time steps for each sequence. If this number is fixed to a value which is less than the unroll length parameter of `tf.contrib.training.batch_sequences_with_states()` instances(i.e. each sequence can very well fit in one batch itself), this deadlock does not occur irrespective of situation 1 or situation 2 described above.\r\n\r\nHence, we suspect there is some minute intricacy in `tf.cond()` and `tf.nn.static_state_saving_rnn()` which gives rise to such a deadlock.\r\n\r\n### Source code / logs\r\nTwo files are attached(.txt files since the interface does not allow attaching files with extension .py) - \r\n\r\n1. Model.txt - Contains the Model class and the inference() method where the majority of the computation graph is built.\r\n2. Training.txt - Contains the client code which generates dummy data and calls to sess.run()\r\n\r\nThe current code is according to Situation 1 as described above and the behaviour can be seen by running the command - `python Training.py`\r\n\r\nRegards,\r\nDaksh\r\n\r\n"}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/14566", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/14566/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/14566/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/14566/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/14566", "id": 274019376, "node_id": "MDU6SXNzdWUyNzQwMTkzNzY=", "number": 14566, "title": "Feature request for making dynamic gradient clipping ", "user": {"login": "kweisamx", "id": 21237400, "node_id": "MDQ6VXNlcjIxMjM3NDAw", "avatar_url": "https://avatars1.githubusercontent.com/u/21237400?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kweisamx", "html_url": "https://github.com/kweisamx", "followers_url": "https://api.github.com/users/kweisamx/followers", "following_url": "https://api.github.com/users/kweisamx/following{/other_user}", "gists_url": "https://api.github.com/users/kweisamx/gists{/gist_id}", "starred_url": "https://api.github.com/users/kweisamx/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kweisamx/subscriptions", "organizations_url": "https://api.github.com/users/kweisamx/orgs", "repos_url": "https://api.github.com/users/kweisamx/repos", "events_url": "https://api.github.com/users/kweisamx/events{/privacy}", "received_events_url": "https://api.github.com/users/kweisamx/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 299643928, "node_id": "MDU6TGFiZWwyOTk2NDM5Mjg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:contributions%20welcome", "name": "stat:contributions welcome", "color": "f4b400", "default": false, "description": ""}, {"id": 473173272, "node_id": "MDU6TGFiZWw0NzMxNzMyNzI=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:feature", "name": "type:feature", "color": "159b2e", "default": false, "description": ""}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2017-11-15T03:06:15Z", "updated_at": "2018-07-31T08:26:34Z", "closed_at": null, "author_association": "NONE", "body": "That I know about gradient, tf has \r\nhttps://www.tensorflow.org/versions/r0.12/api_docs/python/train/gradient_clipping\r\n\r\nBut I need the clipping gradient can change at training, and I see the all clip gradient doc, not found this function.\r\n\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**: NO\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**: Linux Ubuntu 16.04\r\n- **TensorFlow installed from (source or binary)**: python pip \r\n- **TensorFlow version (use command below)**: v 1.3.0\r\n- **Python version**: 3.5.2\r\n- **Bazel version (if compiling from source)**:\r\n- **GCC/Compiler version (if compiling from source)**:5.4.0\r\n- **CUDA/cuDNN version**:Cuda compilation tools, release 8.0, V8.0.61\r\n- **GPU model and memory**: 1080Ti 8G\r\n- **Exact command to reproduce**:\r\n\r\nThanks"}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/14518", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/14518/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/14518/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/14518/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/14518", "id": 273441460, "node_id": "MDU6SXNzdWUyNzM0NDE0NjA=", "number": 14518, "title": "DataSet user provided shuffled order", "user": {"login": "YoelShoshan", "id": 7043815, "node_id": "MDQ6VXNlcjcwNDM4MTU=", "avatar_url": "https://avatars1.githubusercontent.com/u/7043815?v=4", "gravatar_id": "", "url": "https://api.github.com/users/YoelShoshan", "html_url": "https://github.com/YoelShoshan", "followers_url": "https://api.github.com/users/YoelShoshan/followers", "following_url": "https://api.github.com/users/YoelShoshan/following{/other_user}", "gists_url": "https://api.github.com/users/YoelShoshan/gists{/gist_id}", "starred_url": "https://api.github.com/users/YoelShoshan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/YoelShoshan/subscriptions", "organizations_url": "https://api.github.com/users/YoelShoshan/orgs", "repos_url": "https://api.github.com/users/YoelShoshan/repos", "events_url": "https://api.github.com/users/YoelShoshan/events{/privacy}", "received_events_url": "https://api.github.com/users/YoelShoshan/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 299643928, "node_id": "MDU6TGFiZWwyOTk2NDM5Mjg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:contributions%20welcome", "name": "stat:contributions welcome", "color": "f4b400", "default": false, "description": ""}, {"id": 473173272, "node_id": "MDU6TGFiZWw0NzMxNzMyNzI=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:feature", "name": "type:feature", "color": "159b2e", "default": false, "description": ""}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 19, "created_at": "2017-11-13T14:08:19Z", "updated_at": "2019-02-12T02:25:14Z", "closed_at": null, "author_association": "NONE", "body": "It would be very useful if a user will be able to provide the order of examples within a dataset (with repetitions allowed, as only indices are shuffled).\r\nThis would allow having a more complicated logic (which involves balancing data of different types).\r\n\r\nI assume it can be somehow supported by zip-ing together different DataSets, but it would be MUCH easier and more flexible if we could just pass a list of indices. Probably light as well as it shouldn't be a big deal passing one list per epoch.\r\n\r\nPlease tell me if this feature already exists, and if not, please add it :)"}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/14507", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/14507/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/14507/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/14507/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/14507", "id": 273288200, "node_id": "MDU6SXNzdWUyNzMyODgyMDA=", "number": 14507, "title": "XLA reports error with 1000 steps of static_bidirectional_rnn", "user": {"login": "linearhit", "id": 8992445, "node_id": "MDQ6VXNlcjg5OTI0NDU=", "avatar_url": "https://avatars3.githubusercontent.com/u/8992445?v=4", "gravatar_id": "", "url": "https://api.github.com/users/linearhit", "html_url": "https://github.com/linearhit", "followers_url": "https://api.github.com/users/linearhit/followers", "following_url": "https://api.github.com/users/linearhit/following{/other_user}", "gists_url": "https://api.github.com/users/linearhit/gists{/gist_id}", "starred_url": "https://api.github.com/users/linearhit/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/linearhit/subscriptions", "organizations_url": "https://api.github.com/users/linearhit/orgs", "repos_url": "https://api.github.com/users/linearhit/repos", "events_url": "https://api.github.com/users/linearhit/events{/privacy}", "received_events_url": "https://api.github.com/users/linearhit/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 299643928, "node_id": "MDU6TGFiZWwyOTk2NDM5Mjg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:contributions%20welcome", "name": "stat:contributions welcome", "color": "f4b400", "default": false, "description": ""}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2017-11-13T01:49:50Z", "updated_at": "2018-01-25T21:23:22Z", "closed_at": null, "author_association": "NONE", "body": "------------------------\r\n\r\n### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**: yes\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**: 16.04\r\n- **TensorFlow installed from (source or binary)**: source\r\n- **TensorFlow version (use command below)**: 1.2.1 or 1.3\r\n- **Python version**: 2.7.4\r\n- **Bazel version (if compiling from source)**: 0.4.5\r\n- **GCC/Compiler version (if compiling from source)**: 4.8.5\r\n- **CUDA/cuDNN version**: 5.1\r\n- **GPU model and memory**: M40\r\n- **Exact command to reproduce**:\r\n\r\nYou can collect some of this information using our environment capture script:\r\n\r\nhttps://github.com/tensorflow/tensorflow/tree/master/tools/tf_env_collect.sh\r\n\r\nYou can obtain the TensorFlow version with\r\n\r\npython -c \"import tensorflow as tf; print(tf.GIT_VERSION, tf.VERSION)\"\r\n\r\n### Describe the problem\r\nThis issue can only be reproduced when XLA works with static_bidirectional_rnn with 1000 steps, and the \"seq_len\" of static_bidirectional_rnn must be assigned, which means it works with \"dynamic calculation\". When the issue is reproduced, it reports:\r\n\r\n```\r\n2017-11-01 18:47:16.497266: E tensorflow/stream_executor/cuda/cuda_driver.cc:731] failed to load PTX text as a module: CUDA_ERROR_NO_BINARY_FOR_GPU\r\n2017-11-01 18:47:16.497294: E tensorflow/stream_executor/cuda/cuda_driver.cc:736] error log buffer (163 bytes): ptxas application ptx input, line 7231; error   : Kernel '_fusion_1' exceeds parameter space limit of 4352 bytes\r\nptxas fatal   : Ptx assembly aborted due to error\r\n\r\n```\r\nFrom my analysis, a fused XLA instruction requires for more than 1000 input parameters. This further leads to a PTX kernel with 1000+ parameters, which is not accepted by the cuda driver.\r\n\r\nThis is what I found from the PTX ISA documents:\r\n`The maximum memory size supported by PTX for normal (non-opaque type) parameters is 4352 bytes. Prior to PTX ISA version 1.5, the maximum size was 256 bytes.`\r\n\r\nRead more at: http://docs.nvidia.com/cuda/parallel-thread-execution/index.html#ixzz4yGwCVOB7\r\nFollow us: @GPUComputing on Twitter | NVIDIA on Facebook\r\n\r\n\r\n### Source code / logs\r\nInclude any logs or source code that would be helpful to diagnose the problem. If including tracebacks, please include the full traceback. Large logs and files should be attached. Try to provide a reproducible test case that is the bare minimum necessary to generate the problem.\r\n"}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/14489", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/14489/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/14489/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/14489/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/14489", "id": 273186919, "node_id": "MDU6SXNzdWUyNzMxODY5MTk=", "number": 14489, "title": "sess.run hangs forever despite operation_timeout_in_ms being set", "user": {"login": "yaroslavvb", "id": 23068, "node_id": "MDQ6VXNlcjIzMDY4", "avatar_url": "https://avatars3.githubusercontent.com/u/23068?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yaroslavvb", "html_url": "https://github.com/yaroslavvb", "followers_url": "https://api.github.com/users/yaroslavvb/followers", "following_url": "https://api.github.com/users/yaroslavvb/following{/other_user}", "gists_url": "https://api.github.com/users/yaroslavvb/gists{/gist_id}", "starred_url": "https://api.github.com/users/yaroslavvb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yaroslavvb/subscriptions", "organizations_url": "https://api.github.com/users/yaroslavvb/orgs", "repos_url": "https://api.github.com/users/yaroslavvb/repos", "events_url": "https://api.github.com/users/yaroslavvb/events{/privacy}", "received_events_url": "https://api.github.com/users/yaroslavvb/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 299643928, "node_id": "MDU6TGFiZWwyOTk2NDM5Mjg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:contributions%20welcome", "name": "stat:contributions welcome", "color": "f4b400", "default": false, "description": ""}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-11-12T00:09:17Z", "updated_at": "2017-11-15T15:25:19Z", "closed_at": null, "author_association": "CONTRIBUTOR", "body": "`sess.run` waits indefinitely on worker when one of the parameter server machines in the cluster fails despite `operation_timeout_in_ms` being set.\r\n\r\nBecause waiting happens inside TensorFlow runtime, there's no way for client to regain control to provide a helpful error message/fix the situation.\r\n\r\n```\r\nsess=tf.Session(config=...operation_timeout_in_ms=1000)  # succeeds even though TF cluster is partially dead\r\nsess.run(remote_op)       # hangs forever\r\n```\r\nYou see this during worker's `session.run`\r\n```\r\n2017-11-11 16:06:12.524442: I tensorflow/core/distributed_runtime/master.cc:221] CreateSession still waiting for response from worker: /job:ps/replica:0/task:0\r\n2017-11-11 16:06:22.525582: I tensorflow/core/distributed_runtime/master.cc:221] CreateSession still waiting for response from worker: /job:ps/replica:0/task:0\r\n2017-11-11 16:06:32.525718: I tensorflow/core/distributed_runtime/master.cc:221] CreateSession still waiting for response from worker: /job:ps/replica:0/task:0\r\n```\r\n\r\nSuggestion: since `CreateSession` happens during `session.run`, make it subject to `.operation_timeout_in_ms` deadline\r\n\r\ncc @mrry \r\n"}, {"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/14482", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/14482/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/14482/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/14482/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/14482", "id": 273137442, "node_id": "MDU6SXNzdWUyNzMxMzc0NDI=", "number": 14482, "title": "[Fetaure Request] Bicubic interpolation using map coordinates", "user": {"login": "Sudhakar17", "id": 18436807, "node_id": "MDQ6VXNlcjE4NDM2ODA3", "avatar_url": "https://avatars1.githubusercontent.com/u/18436807?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Sudhakar17", "html_url": "https://github.com/Sudhakar17", "followers_url": "https://api.github.com/users/Sudhakar17/followers", "following_url": "https://api.github.com/users/Sudhakar17/following{/other_user}", "gists_url": "https://api.github.com/users/Sudhakar17/gists{/gist_id}", "starred_url": "https://api.github.com/users/Sudhakar17/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Sudhakar17/subscriptions", "organizations_url": "https://api.github.com/users/Sudhakar17/orgs", "repos_url": "https://api.github.com/users/Sudhakar17/repos", "events_url": "https://api.github.com/users/Sudhakar17/events{/privacy}", "received_events_url": "https://api.github.com/users/Sudhakar17/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 299643928, "node_id": "MDU6TGFiZWwyOTk2NDM5Mjg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:contributions%20welcome", "name": "stat:contributions welcome", "color": "f4b400", "default": false, "description": ""}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-11-11T10:57:44Z", "updated_at": "2017-11-11T22:12:24Z", "closed_at": null, "author_association": "NONE", "body": "I would like to train a two CNN in single graph. The architecture of model is \r\n![capture](https://user-images.githubusercontent.com/18436807/32688705-3ea9e54c-c6d6-11e7-84ba-fb01a3be2755.PNG)\r\n\r\nThis one is not like end to end training. In the warping of images(refer attachment), I use scipy for mapping coordinates from the disparity map to an input image and I am unable to build a model(graph) in tensorflow using scipy. Tensorflow supports only resize of images using bicubic/bilinear interpolation. [https://docs.scipy.org/doc/scipy-0.14.0/reference/generated/scipy.ndimage.interpolation.map_coordinates.html](url)\r\n\r\nFor reference, original paper is implemented using matconvnet in [matlab.](http://cseweb.ucsd.edu/~viscomp/projects/LF/papers/SIGASIA16/) \r\n\r\n\r\n"}]